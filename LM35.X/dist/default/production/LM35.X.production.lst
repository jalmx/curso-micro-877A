

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Apr 26 15:50:27 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,merge=1,delta=2
    37                           	psect	text28,local,class=CODE,merge=1,delta=2
    38                           	psect	text29,local,class=CODE,merge=1,delta=2
    39                           	psect	text30,local,class=CODE,merge=1,delta=2
    40                           	psect	text31,local,class=CODE,merge=1,delta=2
    41                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.05
    45                           ; Generated 20/12/2018 GMT
    46                           ; 
    47                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F877A Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  018C                     	;# 
   197  018D                     	;# 
   198                           
   199                           	psect	strings
   200  1000                     __pstrings:	
   201  1000                     stringtab:	
   202  1000                     __stringtab:	
   203                           
   204                           ;	String table - string pointers are 1 byte each
   205  1000  1BFF               	btfsc	btemp+1,7
   206  1001  280A               	ljmp	stringcode
   207  1002  1383               	bcf	3,7
   208  1003  187F               	btfsc	btemp+1,0
   209  1004  1783               	bsf	3,7
   210  1005  0800               	movf	0,w
   211  1006  0A84               	incf	4,f
   212  1007  1903               	skipnz
   213  1008  0AFF               	incf	btemp+1,f
   214  1009  0008               	return
   215  100A                     stringcode:	
   216  100A                     stringdir:	
   217  100A  3010               	movlw	high stringdir
   218  100B  008A               	movwf	10
   219  100C  0804               	movf	4,w
   220  100D  0A84               	incf	4,f
   221  100E  0782               	addwf	2,f
   222  100F                     __stringbase:	
   223  100F  3400               	retlw	0
   224  1010                     __end_of__stringtab:	
   225  1010                     __powers_:	
   226  1010  3400               	retlw	0
   227  1011  3400               	retlw	0
   228  1012  3480               	retlw	128
   229  1013  343F               	retlw	63
   230  1014  3400               	retlw	0
   231  1015  3400               	retlw	0
   232  1016  3420               	retlw	32
   233  1017  3441               	retlw	65
   234  1018  3400               	retlw	0
   235  1019  3400               	retlw	0
   236  101A  34C8               	retlw	200
   237  101B  3442               	retlw	66
   238  101C  3400               	retlw	0
   239  101D  3400               	retlw	0
   240  101E  347A               	retlw	122
   241  101F  3444               	retlw	68
   242  1020  3400               	retlw	0
   243  1021  3440               	retlw	64
   244  1022  341C               	retlw	28
   245  1023  3446               	retlw	70
   246  1024  3400               	retlw	0
   247  1025  3450               	retlw	80
   248  1026  34C3               	retlw	195
   249  1027  3447               	retlw	71
   250  1028  3400               	retlw	0
   251  1029  3424               	retlw	36
   252  102A  3474               	retlw	116
   253  102B  3449               	retlw	73
   254  102C  3480               	retlw	128
   255  102D  3496               	retlw	150
   256  102E  3418               	retlw	24
   257  102F  344B               	retlw	75
   258  1030  3420               	retlw	32
   259  1031  34BC               	retlw	188
   260  1032  34BE               	retlw	190
   261  1033  344C               	retlw	76
   262  1034  3428               	retlw	40
   263  1035  346B               	retlw	107
   264  1036  346E               	retlw	110
   265  1037  344E               	retlw	78
   266  1038  34F9               	retlw	249
   267  1039  3402               	retlw	2
   268  103A  3415               	retlw	21
   269  103B  3450               	retlw	80
   270  103C  34EC               	retlw	236
   271  103D  3478               	retlw	120
   272  103E  34AD               	retlw	173
   273  103F  3460               	retlw	96
   274  1040  34CA               	retlw	202
   275  1041  34F2               	retlw	242
   276  1042  3449               	retlw	73
   277  1043  3471               	retlw	113
   278  1044                     __end_of__powers_:	
   279  1044                     __npowers_:	
   280  1044  3400               	retlw	0
   281  1045  3400               	retlw	0
   282  1046  3480               	retlw	128
   283  1047  343F               	retlw	63
   284  1048  34CD               	retlw	205
   285  1049  34CC               	retlw	204
   286  104A  34CC               	retlw	204
   287  104B  343D               	retlw	61
   288  104C  340A               	retlw	10
   289  104D  34D7               	retlw	215
   290  104E  3423               	retlw	35
   291  104F  343C               	retlw	60
   292  1050  346F               	retlw	111
   293  1051  3412               	retlw	18
   294  1052  3483               	retlw	131
   295  1053  343A               	retlw	58
   296  1054  3417               	retlw	23
   297  1055  34B7               	retlw	183
   298  1056  34D1               	retlw	209
   299  1057  3438               	retlw	56
   300  1058  34AC               	retlw	172
   301  1059  34C5               	retlw	197
   302  105A  3427               	retlw	39
   303  105B  3437               	retlw	55
   304  105C  34BD               	retlw	189
   305  105D  3437               	retlw	55
   306  105E  3486               	retlw	134
   307  105F  3435               	retlw	53
   308  1060  3495               	retlw	149
   309  1061  34BF               	retlw	191
   310  1062  34D6               	retlw	214
   311  1063  3433               	retlw	51
   312  1064  3477               	retlw	119
   313  1065  34CC               	retlw	204
   314  1066  342B               	retlw	43
   315  1067  3432               	retlw	50
   316  1068  345F               	retlw	95
   317  1069  3470               	retlw	112
   318  106A  3489               	retlw	137
   319  106B  3430               	retlw	48
   320  106C  34FF               	retlw	255
   321  106D  34E6               	retlw	230
   322  106E  34DB               	retlw	219
   323  106F  342E               	retlw	46
   324  1070  3408               	retlw	8
   325  1071  34E5               	retlw	229
   326  1072  343C               	retlw	60
   327  1073  341E               	retlw	30
   328  1074  3460               	retlw	96
   329  1075  3442               	retlw	66
   330  1076  34A2               	retlw	162
   331  1077  340D               	retlw	13
   332  1078                     __end_of__npowers_:	
   333  1078                     _dpowers:	
   334  1078  3401               	retlw	1
   335  1079  3400               	retlw	0
   336  107A  3400               	retlw	0
   337  107B  3400               	retlw	0
   338  107C  340A               	retlw	10
   339  107D  3400               	retlw	0
   340  107E  3400               	retlw	0
   341  107F  3400               	retlw	0
   342  1080  3464               	retlw	100
   343  1081  3400               	retlw	0
   344  1082  3400               	retlw	0
   345  1083  3400               	retlw	0
   346  1084  34E8               	retlw	232
   347  1085  3403               	retlw	3
   348  1086  3400               	retlw	0
   349  1087  3400               	retlw	0
   350  1088  3410               	retlw	16
   351  1089  3427               	retlw	39
   352  108A  3400               	retlw	0
   353  108B  3400               	retlw	0
   354  108C  34A0               	retlw	160
   355  108D  3486               	retlw	134
   356  108E  3401               	retlw	1
   357  108F  3400               	retlw	0
   358  1090  3440               	retlw	64
   359  1091  3442               	retlw	66
   360  1092  340F               	retlw	15
   361  1093  3400               	retlw	0
   362  1094  3480               	retlw	128
   363  1095  3496               	retlw	150
   364  1096  3498               	retlw	152
   365  1097  3400               	retlw	0
   366  1098  3400               	retlw	0
   367  1099  34E1               	retlw	225
   368  109A  34F5               	retlw	245
   369  109B  3405               	retlw	5
   370  109C  3400               	retlw	0
   371  109D  34CA               	retlw	202
   372  109E  349A               	retlw	154
   373  109F  343B               	retlw	59
   374  10A0                     __end_of_dpowers:	
   375  0005                     _PORTA	set	5
   376  001E                     _ADRESH	set	30
   377  001F                     _ADCON0bits	set	31
   378  0006                     _PORTB	set	6
   379  0033                     _RB3	set	51
   380  0032                     _RB2	set	50
   381  0037                     _RB7	set	55
   382  0036                     _RB6	set	54
   383  0035                     _RB5	set	53
   384  0034                     _RB4	set	52
   385  0085                     _TRISA	set	133
   386  009E                     _ADRESL	set	158
   387  009F                     _ADCON1bits	set	159
   388  0086                     _TRISB	set	134
   389  10A0                     STR_1:	
   390  10A0  3443               	retlw	67	;'C'
   391  10A1  3461               	retlw	97	;'a'
   392  10A2  3472               	retlw	114	;'r'
   393  10A3  3467               	retlw	103	;'g'
   394  10A4  3461               	retlw	97	;'a'
   395  10A5  346E               	retlw	110	;'n'
   396  10A6  3464               	retlw	100	;'d'
   397  10A7  346F               	retlw	111	;'o'
   398  10A8  342E               	retlw	46	;'.'
   399  10A9  342E               	retlw	46	;'.'
   400  10AA  342E               	retlw	46	;'.'
   401  10AB  3400               	retlw	0
   402  10AC                     STR_2:	
   403  10AC  3454               	retlw	84	;'T'
   404  10AD  3465               	retlw	101	;'e'
   405  10AE  346D               	retlw	109	;'m'
   406  10AF  3470               	retlw	112	;'p'
   407  10B0  3465               	retlw	101	;'e'
   408  10B1  3472               	retlw	114	;'r'
   409  10B2  3461               	retlw	97	;'a'
   410  10B3  3474               	retlw	116	;'t'
   411  10B4  3475               	retlw	117	;'u'
   412  10B5  3472               	retlw	114	;'r'
   413  10B6  3461               	retlw	97	;'a'
   414  10B7  3400               	retlw	0
   415  10B8                     STR_4:	
   416  10B8  3425               	retlw	37	;'%'
   417  10B9  342E               	retlw	46	;'.'
   418  10BA  3432               	retlw	50	;'2'
   419  10BB  3466               	retlw	102	;'f'
   420  10BC  3420               	retlw	32	;' '
   421  10BD  3443               	retlw	67	;'C'
   422  10BE  3400               	retlw	0
   423  10AC                     
   424                           ; #config settings
   425  0000                     
   426                           	psect	cinit
   427  07FC                     start_initialization:	
   428  07FC                     __initialization:	
   429  07FC                     end_of_initialization:	
   430                           ;End of C runtime variable initialization code
   431                           
   432  07FC                     __end_of__initialization:	
   433  07FC  0183               	clrf	3
   434  07FD  120A  158A  28AC   	ljmp	_main	;jump to C main() function
   435                           
   436                           	psect	cstackBANK1
   437  00A0                     __pcstackBANK1:	
   438  00A0                     ?_sprintf:	
   439  00A0                     sprintf@f:	
   440                           ; 2 bytes @ 0x0
   441                           
   442                           
   443                           ; 1 bytes @ 0x0
   444  00A0                     	ds	5
   445  00A5                     ??_sprintf:	
   446                           
   447                           ; 1 bytes @ 0x5
   448  00A5                     	ds	5
   449  00AA                     _sprintf$874:	
   450                           
   451                           ; 4 bytes @ 0xA
   452  00AA                     	ds	4
   453  00AE                     sprintf@ap:	
   454                           
   455                           ; 1 bytes @ 0xE
   456  00AE                     	ds	1
   457  00AF                     sprintf@flag:	
   458                           
   459                           ; 2 bytes @ 0xF
   460  00AF                     	ds	2
   461  00B1                     sprintf@val:	
   462                           
   463                           ; 4 bytes @ 0x11
   464  00B1                     	ds	4
   465  00B5                     sprintf@eexp:	
   466                           
   467                           ; 2 bytes @ 0x15
   468  00B5                     	ds	2
   469  00B7                     sprintf@tmpval:	
   470                           
   471                           ; 4 bytes @ 0x17
   472  00B7                     	ds	4
   473  00BB                     sprintf@sp:	
   474                           
   475                           ; 1 bytes @ 0x1B
   476  00BB                     	ds	1
   477  00BC                     sprintf@prec:	
   478                           
   479                           ; 2 bytes @ 0x1C
   480  00BC                     	ds	2
   481  00BE                     sprintf@fval:	
   482                           
   483                           ; 4 bytes @ 0x1E
   484  00BE                     	ds	4
   485  00C2                     sprintf@c:	
   486                           
   487                           ; 1 bytes @ 0x22
   488  00C2                     	ds	1
   489  00C3                     ??_main:	
   490                           
   491                           ; 1 bytes @ 0x23
   492  00C3                     	ds	3
   493  00C6                     main@mensaje:	
   494                           
   495                           ; 16 bytes @ 0x26
   496  00C6                     	ds	16
   497  00D6                     main@temperatura:	
   498                           
   499                           ; 4 bytes @ 0x36
   500  00D6                     	ds	4
   501                           
   502                           	psect	cstackCOMMON
   503  0070                     __pcstackCOMMON:	
   504  0070                     ?_isdigit:	
   505  0070                     ?___fleq:	
   506                           ; 1 bit 
   507                           
   508  0070                     ?___flge:	
   509                           ; 1 bit 
   510                           
   511  0070                     ??_isdigit:	
   512                           ; 1 bit 
   513                           
   514  0070                     ?_lcdPort:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ??_lcdPort:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ?_lcdCmd:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ?_lcdClear:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ?_lcdInit:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ?_lcdWriteChar:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ?_adcInit:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     ??_adcInit:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ?_main:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ?__Umul8_16:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_adcRead:	
   545                           ; 2 bytes @ 0x0
   546                           
   547  0070                     ?___wmul:	
   548                           ; 2 bytes @ 0x0
   549                           
   550  0070                     ?___awmod:	
   551                           ; 2 bytes @ 0x0
   552                           
   553  0070                     ?___lwmod:	
   554                           ; 2 bytes @ 0x0
   555                           
   556  0070                     ?__tdiv_to_l_:	
   557                           ; 2 bytes @ 0x0
   558                           
   559  0070                     ?__div_to_l_:	
   560                           ; 4 bytes @ 0x0
   561                           
   562  0070                     ?___lldiv:	
   563                           ; 4 bytes @ 0x0
   564                           
   565  0070                     ?___flneg:	
   566                           ; 4 bytes @ 0x0
   567                           
   568  0070                     ?___llmod:	
   569                           ; 4 bytes @ 0x0
   570                           
   571  0070                     lcdPort@a:	
   572                           ; 4 bytes @ 0x0
   573                           
   574  0070                     _isdigit$682:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     __Umul8_16@multiplicand:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     adcRead@adcChannel:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ___wmul@multiplier:	
   584                           ; 2 bytes @ 0x0
   585                           
   586  0070                     ___awmod@divisor:	
   587                           ; 2 bytes @ 0x0
   588                           
   589  0070                     ___lwmod@divisor:	
   590                           ; 2 bytes @ 0x0
   591                           
   592  0070                     ___lldiv@divisor:	
   593                           ; 2 bytes @ 0x0
   594                           
   595  0070                     __div_to_l_@f1:	
   596                           ; 4 bytes @ 0x0
   597                           
   598  0070                     ___fleq@ff1:	
   599                           ; 4 bytes @ 0x0
   600                           
   601  0070                     ___flge@ff1:	
   602                           ; 4 bytes @ 0x0
   603                           
   604  0070                     ___flneg@f1:	
   605                           ; 4 bytes @ 0x0
   606                           
   607  0070                     __tdiv_to_l_@f1:	
   608                           ; 4 bytes @ 0x0
   609                           
   610  0070                     ___llmod@divisor:	
   611                           ; 4 bytes @ 0x0
   612                           
   613                           
   614                           ; 4 bytes @ 0x0
   615  0070                     	ds	1
   616  0071                     ??_lcdCmd:	
   617  0071                     ??_lcdWriteChar:	
   618                           ; 1 bytes @ 0x1
   619                           
   620  0071                     isdigit@c:	
   621                           ; 1 bytes @ 0x1
   622                           
   623                           
   624                           ; 1 bytes @ 0x1
   625  0071                     	ds	1
   626  0072                     ??__Umul8_16:	
   627  0072                     ??_adcRead:	
   628                           ; 1 bytes @ 0x2
   629                           
   630  0072                     lcdWriteChar@temp:	
   631                           ; 1 bytes @ 0x2
   632                           
   633  0072                     ___wmul@multiplicand:	
   634                           ; 1 bytes @ 0x2
   635                           
   636  0072                     ___awmod@dividend:	
   637                           ; 2 bytes @ 0x2
   638                           
   639  0072                     ___lwmod@dividend:	
   640                           ; 2 bytes @ 0x2
   641                           
   642                           
   643                           ; 2 bytes @ 0x2
   644  0072                     	ds	1
   645  0073                     lcdCmd@a:	
   646  0073                     lcdWriteChar@y:	
   647                           ; 1 bytes @ 0x3
   648                           
   649                           
   650                           ; 1 bytes @ 0x3
   651  0073                     	ds	1
   652  0074                     ??_lcdClear:	
   653  0074                     ?_lcdSetCursor:	
   654                           ; 1 bytes @ 0x4
   655                           
   656  0074                     ??_lcdInit:	
   657                           ; 1 bytes @ 0x4
   658                           
   659  0074                     ??___wmul:	
   660                           ; 1 bytes @ 0x4
   661                           
   662  0074                     ??___awmod:	
   663                           ; 1 bytes @ 0x4
   664                           
   665  0074                     ??___flneg:	
   666                           ; 1 bytes @ 0x4
   667                           
   668  0074                     ??___lwmod:	
   669                           ; 1 bytes @ 0x4
   670                           
   671  0074                     ?___xxtofl:	
   672                           ; 1 bytes @ 0x4
   673                           
   674  0074                     lcdSetCursor@x:	
   675                           ; 4 bytes @ 0x4
   676                           
   677  0074                     lcdWriteChar@a:	
   678                           ; 1 bytes @ 0x4
   679                           
   680  0074                     ___wmul@product:	
   681                           ; 1 bytes @ 0x4
   682                           
   683  0074                     __Umul8_16@product:	
   684                           ; 2 bytes @ 0x4
   685                           
   686  0074                     ___lldiv@dividend:	
   687                           ; 2 bytes @ 0x4
   688                           
   689  0074                     __div_to_l_@f2:	
   690                           ; 4 bytes @ 0x4
   691                           
   692  0074                     ___fleq@ff2:	
   693                           ; 4 bytes @ 0x4
   694                           
   695  0074                     ___flge@ff2:	
   696                           ; 4 bytes @ 0x4
   697                           
   698  0074                     __tdiv_to_l_@f2:	
   699                           ; 4 bytes @ 0x4
   700                           
   701  0074                     ___llmod@dividend:	
   702                           ; 4 bytes @ 0x4
   703                           
   704  0074                     ___xxtofl@val:	
   705                           ; 4 bytes @ 0x4
   706                           
   707                           
   708                           ; 4 bytes @ 0x4
   709  0074                     	ds	1
   710  0075                     ??_lcdSetCursor:	
   711  0075                     ?_lcdPrint:	
   712                           ; 1 bytes @ 0x5
   713                           
   714  0075                     ___awmod@counter:	
   715                           ; 1 bytes @ 0x5
   716                           
   717  0075                     ___lwmod@counter:	
   718                           ; 1 bytes @ 0x5
   719                           
   720  0075                     lcdPrint@a:	
   721                           ; 1 bytes @ 0x5
   722                           
   723                           
   724                           ; 2 bytes @ 0x5
   725  0075                     	ds	1
   726  0076                     ?___lwdiv:	
   727  0076                     ___awmod@sign:	
   728                           ; 2 bytes @ 0x6
   729                           
   730  0076                     ___lwdiv@divisor:	
   731                           ; 1 bytes @ 0x6
   732                           
   733  0076                     __Umul8_16@word_mpld:	
   734                           ; 2 bytes @ 0x6
   735                           
   736                           
   737                           ; 2 bytes @ 0x6
   738  0076                     	ds	1
   739  0077                     ??_lcdPrint:	
   740  0077                     ?___awdiv:	
   741                           ; 1 bytes @ 0x7
   742                           
   743  0077                     lcdSetCursor@z:	
   744                           ; 2 bytes @ 0x7
   745                           
   746  0077                     ___awdiv@divisor:	
   747                           ; 1 bytes @ 0x7
   748                           
   749                           
   750                           ; 2 bytes @ 0x7
   751  0077                     	ds	1
   752  0078                     ??__tdiv_to_l_:	
   753  0078                     ??__div_to_l_:	
   754                           ; 1 bytes @ 0x8
   755                           
   756  0078                     ??___lldiv:	
   757                           ; 1 bytes @ 0x8
   758                           
   759  0078                     ??___fleq:	
   760                           ; 1 bytes @ 0x8
   761                           
   762  0078                     ??___flge:	
   763                           ; 1 bytes @ 0x8
   764                           
   765  0078                     ??___llmod:	
   766                           ; 1 bytes @ 0x8
   767                           
   768  0078                     ??___xxtofl:	
   769                           ; 1 bytes @ 0x8
   770                           
   771  0078                     lcdSetCursor@yy:	
   772                           ; 1 bytes @ 0x8
   773                           
   774  0078                     __Umul8_16@multiplier:	
   775                           ; 1 bytes @ 0x8
   776                           
   777  0078                     ___lwdiv@dividend:	
   778                           ; 1 bytes @ 0x8
   779                           
   780                           
   781                           ; 2 bytes @ 0x8
   782  0078                     	ds	1
   783  0079                     lcdSetCursor@row:	
   784  0079                     ___llmod@counter:	
   785                           ; 1 bytes @ 0x9
   786                           
   787  0079                     ___awdiv@dividend:	
   788                           ; 1 bytes @ 0x9
   789                           
   790  0079                     ___lldiv@quotient:	
   791                           ; 2 bytes @ 0x9
   792                           
   793                           
   794                           ; 4 bytes @ 0x9
   795  0079                     	ds	1
   796  007A                     ??___lwdiv:	
   797  007A                     lcdSetCursor@temp:	
   798                           ; 1 bytes @ 0xA
   799                           
   800  007A                     lcdPrint@i:	
   801                           ; 1 bytes @ 0xA
   802                           
   803                           
   804                           ; 2 bytes @ 0xA
   805  007A                     	ds	1
   806  007B                     ??___awdiv:	
   807  007B                     lcdSetCursor@y:	
   808                           ; 1 bytes @ 0xB
   809                           
   810  007B                     ___lwdiv@quotient:	
   811                           ; 1 bytes @ 0xB
   812                           
   813                           
   814                           ; 2 bytes @ 0xB
   815  007B                     	ds	2
   816  007D                     ___lldiv@counter:	
   817  007D                     ___lwdiv@counter:	
   818                           ; 1 bytes @ 0xD
   819                           
   820                           
   821                           ; 1 bytes @ 0xD
   822  007D                     	ds	1
   823  007E                     ??___flsub:	
   824                           
   825                           	psect	cstackBANK0
   826  0020                     __pcstackBANK0:	
   827                           ; 1 bytes @ 0xE
   828                           
   829  0020                     ___awdiv@counter:	
   830  0020                     ___xxtofl@sign:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0020                     __div_to_l_@quot:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0020                     __tdiv_to_l_@quot:	
   837                           ; 4 bytes @ 0x0
   838                           
   839                           
   840                           ; 4 bytes @ 0x0
   841  0020                     	ds	1
   842  0021                     ___awdiv@sign:	
   843  0021                     ___xxtofl@exp:	
   844                           ; 1 bytes @ 0x1
   845                           
   846                           
   847                           ; 1 bytes @ 0x1
   848  0021                     	ds	1
   849  0022                     ___awdiv@quotient:	
   850  0022                     ___xxtofl@arg:	
   851                           ; 2 bytes @ 0x2
   852                           
   853                           
   854                           ; 4 bytes @ 0x2
   855  0022                     	ds	2
   856  0024                     __div_to_l_@cntr:	
   857  0024                     __tdiv_to_l_@cntr:	
   858                           ; 1 bytes @ 0x4
   859                           
   860                           
   861                           ; 1 bytes @ 0x4
   862  0024                     	ds	1
   863  0025                     __div_to_l_@exp1:	
   864  0025                     __tdiv_to_l_@exp1:	
   865                           ; 1 bytes @ 0x5
   866                           
   867                           
   868                           ; 1 bytes @ 0x5
   869  0025                     	ds	1
   870  0026                     ?___flmul:	
   871  0026                     ___flmul@b:	
   872                           ; 4 bytes @ 0x6
   873                           
   874                           
   875                           ; 4 bytes @ 0x6
   876  0026                     	ds	4
   877  002A                     ___flmul@a:	
   878                           
   879                           ; 4 bytes @ 0xA
   880  002A                     	ds	4
   881  002E                     ??___flmul:	
   882                           
   883                           ; 1 bytes @ 0xE
   884  002E                     	ds	5
   885  0033                     ___flmul@sign:	
   886                           
   887                           ; 1 bytes @ 0x13
   888  0033                     	ds	1
   889  0034                     ___flmul@grs:	
   890                           
   891                           ; 4 bytes @ 0x14
   892  0034                     	ds	4
   893  0038                     ___flmul@aexp:	
   894                           
   895                           ; 1 bytes @ 0x18
   896  0038                     	ds	1
   897  0039                     ___flmul@bexp:	
   898                           
   899                           ; 1 bytes @ 0x19
   900  0039                     	ds	1
   901  003A                     ___flmul@prod:	
   902                           
   903                           ; 4 bytes @ 0x1A
   904  003A                     	ds	4
   905  003E                     ___flmul@temp:	
   906                           
   907                           ; 2 bytes @ 0x1E
   908  003E                     	ds	2
   909  0040                     ?_fround:	
   910  0040                     ?_scale:	
   911                           ; 4 bytes @ 0x20
   912                           
   913  0040                     ?___fldiv:	
   914                           ; 4 bytes @ 0x20
   915                           
   916  0040                     ___fldiv@a:	
   917                           ; 4 bytes @ 0x20
   918                           
   919                           
   920                           ; 4 bytes @ 0x20
   921  0040                     	ds	4
   922  0044                     ??_fround:	
   923  0044                     ??_scale:	
   924                           ; 1 bytes @ 0x24
   925                           
   926  0044                     ___fldiv@b:	
   927                           ; 1 bytes @ 0x24
   928                           
   929                           
   930                           ; 4 bytes @ 0x24
   931  0044                     	ds	4
   932  0048                     ??___fldiv:	
   933                           
   934                           ; 1 bytes @ 0x28
   935  0048                     	ds	3
   936  004B                     _fround$872:	
   937                           
   938                           ; 4 bytes @ 0x2B
   939  004B                     	ds	2
   940  004D                     ___fldiv@rem:	
   941                           
   942                           ; 4 bytes @ 0x2D
   943  004D                     	ds	1
   944  004E                     _scale$873:	
   945                           
   946                           ; 4 bytes @ 0x2E
   947  004E                     	ds	1
   948  004F                     _fround$871:	
   949                           
   950                           ; 4 bytes @ 0x2F
   951  004F                     	ds	2
   952  0051                     ___fldiv@sign:	
   953                           
   954                           ; 1 bytes @ 0x31
   955  0051                     	ds	1
   956  0052                     scale@scl:	
   957  0052                     ___fldiv@new_exp:	
   958                           ; 1 bytes @ 0x32
   959                           
   960                           
   961                           ; 2 bytes @ 0x32
   962  0052                     	ds	1
   963  0053                     ?___fltol:	
   964  0053                     fround@prec:	
   965                           ; 4 bytes @ 0x33
   966                           
   967  0053                     ___fltol@f1:	
   968                           ; 1 bytes @ 0x33
   969                           
   970                           
   971                           ; 4 bytes @ 0x33
   972  0053                     	ds	1
   973  0054                     ?___fladd:	
   974  0054                     ___fladd@b:	
   975                           ; 4 bytes @ 0x34
   976                           
   977  0054                     ___fldiv@grs:	
   978                           ; 4 bytes @ 0x34
   979                           
   980                           
   981                           ; 4 bytes @ 0x34
   982  0054                     	ds	3
   983  0057                     ??___fltol:	
   984                           
   985                           ; 1 bytes @ 0x37
   986  0057                     	ds	1
   987  0058                     ___fldiv@bexp:	
   988  0058                     ___fladd@a:	
   989                           ; 1 bytes @ 0x38
   990                           
   991                           
   992                           ; 4 bytes @ 0x38
   993  0058                     	ds	1
   994  0059                     ___fldiv@aexp:	
   995                           
   996                           ; 1 bytes @ 0x39
   997  0059                     	ds	3
   998  005C                     ??___fladd:	
   999  005C                     ___fltol@sign1:	
  1000                           ; 1 bytes @ 0x3C
  1001                           
  1002                           
  1003                           ; 1 bytes @ 0x3C
  1004  005C                     	ds	1
  1005  005D                     ___fltol@exp1:	
  1006                           
  1007                           ; 1 bytes @ 0x3D
  1008  005D                     	ds	7
  1009  0064                     ___fladd@signs:	
  1010                           
  1011                           ; 1 bytes @ 0x44
  1012  0064                     	ds	1
  1013  0065                     ___fladd@aexp:	
  1014                           
  1015                           ; 1 bytes @ 0x45
  1016  0065                     	ds	1
  1017  0066                     ___fladd@bexp:	
  1018                           
  1019                           ; 1 bytes @ 0x46
  1020  0066                     	ds	1
  1021  0067                     ___fladd@grs:	
  1022                           
  1023                           ; 1 bytes @ 0x47
  1024  0067                     	ds	1
  1025  0068                     ?___flsub:	
  1026  0068                     ___flsub@a:	
  1027                           ; 4 bytes @ 0x48
  1028                           
  1029                           
  1030                           ; 4 bytes @ 0x48
  1031  0068                     	ds	4
  1032  006C                     ___flsub@b:	
  1033                           
  1034                           ; 4 bytes @ 0x4C
  1035  006C                     	ds	4
  1036                           
  1037                           	psect	maintext
  1038  08AC                     __pmaintext:	
  1039 ;;
  1040 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1041 ;;
  1042 ;; *************** function _main *****************
  1043 ;; Defined at:
  1044 ;;		line 18 in file "main.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;  mensaje        16   38[BANK1 ] unsigned char [16]
  1049 ;;  temperatura     4   54[BANK1 ] float 
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : B00/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1059 ;;      Params:         0       0       0       0       0
  1060 ;;      Locals:         0       0      20       0       0
  1061 ;;      Temps:          0       0       3       0       0
  1062 ;;      Totals:         0       0      23       0       0
  1063 ;;Total ram usage:       23 bytes
  1064 ;; Hardware stack levels required when called:    4
  1065 ;; This function calls:
  1066 ;;		___fldiv
  1067 ;;		___flmul
  1068 ;;		___xxtofl
  1069 ;;		_adcInit
  1070 ;;		_adcRead
  1071 ;;		_lcdClear
  1072 ;;		_lcdInit
  1073 ;;		_lcdPrint
  1074 ;;		_lcdSetCursor
  1075 ;;		_sprintf
  1076 ;; This function is called by:
  1077 ;;		Startup code after reset
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           
  1082                           ;psect for function _main
  1083  08AC                     _main:	
  1084                           
  1085                           ;main.c: 19:     TRISA = 255;
  1086                           
  1087                           ;incstack = 0
  1088                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1089  08AC  30FF               	movlw	255
  1090  08AD  1683               	bsf	3,5	;RP0=1, select bank1
  1091  08AE  1303               	bcf	3,6	;RP1=0, select bank1
  1092  08AF  0085               	movwf	5	;volatile
  1093                           
  1094                           ;main.c: 20:     PORTA = 0;
  1095  08B0  1283               	bcf	3,5	;RP0=0, select bank0
  1096  08B1  1303               	bcf	3,6	;RP1=0, select bank0
  1097  08B2  0185               	clrf	5	;volatile
  1098                           
  1099                           ;main.c: 21:     lcdInit();
  1100  08B3  160A  118A  217F  120A  158A  	fcall	_lcdInit
  1101                           
  1102                           ;main.c: 22:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1103  08B8  300D               	movlw	13
  1104  08B9  1683               	bsf	3,5	;RP0=1, select bank1
  1105  08BA  1303               	bcf	3,6	;RP1=0, select bank1
  1106  08BB  00C4               	movwf	(??_main^(0+128)+1)
  1107  08BC  30FB               	movlw	251
  1108  08BD  00C3               	movwf	??_main^(0+128)
  1109  08BE                     u6017:	
  1110  08BE  0BC3               	decfsz	??_main^(0+128),f
  1111  08BF  28BE               	goto	u6017
  1112  08C0  0BC4               	decfsz	(??_main^(0+128)+1),f
  1113  08C1  28BE               	goto	u6017
  1114                           
  1115                           ;main.c: 23:     lcdClear();
  1116  08C2  160A  158A  251F  120A  158A  	fcall	_lcdClear
  1117                           
  1118                           ;main.c: 25:     adcInit();
  1119  08C7  160A  158A  2538  120A  158A  	fcall	_adcInit
  1120                           
  1121                           ;main.c: 26:     lcdSetCursor(1, 1);
  1122  08CC  01F4               	clrf	lcdSetCursor@x
  1123  08CD  0AF4               	incf	lcdSetCursor@x,f
  1124  08CE  3001               	movlw	1
  1125  08CF  160A  158A  266D  120A  158A  	fcall	_lcdSetCursor
  1126                           
  1127                           ;main.c: 27:     lcdPrint("Cargando...");
  1128  08D4  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1129  08D5  00F5               	movwf	lcdPrint@a
  1130  08D6  3080               	movlw	128
  1131  08D7  00F6               	movwf	lcdPrint@a+1
  1132  08D8  160A  158A  26E4  120A  158A  	fcall	_lcdPrint
  1133                           
  1134                           ;main.c: 28:     lcdSetCursor(2, 1);
  1135  08DD  01F4               	clrf	lcdSetCursor@x
  1136  08DE  0AF4               	incf	lcdSetCursor@x,f
  1137  08DF  3002               	movlw	2
  1138  08E0  160A  158A  266D  120A  158A  	fcall	_lcdSetCursor
  1139                           
  1140                           ;main.c: 29:     lcdPrint("Temperatura");
  1141  08E5  309D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1142  08E6  00F5               	movwf	lcdPrint@a
  1143  08E7  3080               	movlw	128
  1144  08E8  00F6               	movwf	lcdPrint@a+1
  1145  08E9  160A  158A  26E4  120A  158A  	fcall	_lcdPrint
  1146                           
  1147                           ;main.c: 30:     _delay((unsigned long)((300)*(4000000/4000.0)));
  1148  08EE  3002               	movlw	2
  1149  08EF  1683               	bsf	3,5	;RP0=1, select bank1
  1150  08F0  1303               	bcf	3,6	;RP1=0, select bank1
  1151  08F1  00C5               	movwf	(??_main^(0+128)+2)
  1152  08F2  3086               	movlw	134
  1153  08F3  00C4               	movwf	(??_main^(0+128)+1)
  1154  08F4  3098               	movlw	152
  1155  08F5  00C3               	movwf	??_main^(0+128)
  1156  08F6                     u6027:	
  1157  08F6  0BC3               	decfsz	??_main^(0+128),f
  1158  08F7  28F6               	goto	u6027
  1159  08F8  0BC4               	decfsz	(??_main^(0+128)+1),f
  1160  08F9  28F6               	goto	u6027
  1161  08FA  0BC5               	decfsz	(??_main^(0+128)+2),f
  1162  08FB  28F6               	goto	u6027
  1163  08FC  0000               	nop
  1164                           
  1165                           ;main.c: 32:     lcdClear();
  1166  08FD  160A  158A  251F  120A  158A  	fcall	_lcdClear
  1167  0902                     l3541:	
  1168                           
  1169                           ;main.c: 35:         float temperatura = ((float) adcRead(0) * 500)/1023;
  1170  0902  3044               	movlw	68
  1171  0903  1283               	bcf	3,5	;RP0=0, select bank0
  1172  0904  1303               	bcf	3,6	;RP1=0, select bank0
  1173  0905  00C3               	movwf	___fldiv@a+3
  1174  0906  307F               	movlw	127
  1175  0907  00C2               	movwf	___fldiv@a+2
  1176  0908  30C0               	movlw	192
  1177  0909  00C1               	movwf	___fldiv@a+1
  1178  090A  3000               	movlw	0
  1179  090B  00C0               	movwf	___fldiv@a
  1180  090C  3043               	movlw	67
  1181  090D  00A9               	movwf	___flmul@b+3
  1182  090E  30FA               	movlw	250
  1183  090F  00A8               	movwf	___flmul@b+2
  1184  0910  3000               	movlw	0
  1185  0911  00A7               	movwf	___flmul@b+1
  1186  0912  3000               	movlw	0
  1187  0913  00A6               	movwf	___flmul@b
  1188  0914  3000               	movlw	0
  1189  0915  00F0               	movwf	adcRead@adcChannel
  1190  0916  00F1               	movwf	adcRead@adcChannel+1
  1191  0917  160A  158A  259D  120A  158A  	fcall	_adcRead
  1192  091C  0870               	movf	?_adcRead,w
  1193  091D  00F4               	movwf	___xxtofl@val
  1194  091E  0871               	movf	?_adcRead+1,w
  1195  091F  00F5               	movwf	___xxtofl@val+1
  1196  0920  3000               	movlw	0
  1197  0921  1BF5               	btfsc	___xxtofl@val+1,7
  1198  0922  30FF               	movlw	255
  1199  0923  00F6               	movwf	___xxtofl@val+2
  1200  0924  00F7               	movwf	___xxtofl@val+3
  1201  0925  3001               	movlw	1
  1202  0926  160A  118A  22E0  120A  158A  	fcall	___xxtofl
  1203  092B  0877               	movf	?___xxtofl+3,w
  1204  092C  1283               	bcf	3,5	;RP0=0, select bank0
  1205  092D  1303               	bcf	3,6	;RP1=0, select bank0
  1206  092E  00AD               	movwf	___flmul@a+3
  1207  092F  0876               	movf	?___xxtofl+2,w
  1208  0930  00AC               	movwf	___flmul@a+2
  1209  0931  0875               	movf	?___xxtofl+1,w
  1210  0932  00AB               	movwf	___flmul@a+1
  1211  0933  0874               	movf	?___xxtofl,w
  1212  0934  00AA               	movwf	___flmul@a
  1213  0935  120A  158A  21A2  120A  158A  	fcall	___flmul
  1214  093A  1283               	bcf	3,5	;RP0=0, select bank0
  1215  093B  1303               	bcf	3,6	;RP1=0, select bank0
  1216  093C  0829               	movf	?___flmul+3,w
  1217  093D  00C7               	movwf	___fldiv@b+3
  1218  093E  0828               	movf	?___flmul+2,w
  1219  093F  00C6               	movwf	___fldiv@b+2
  1220  0940  0827               	movf	?___flmul+1,w
  1221  0941  00C5               	movwf	___fldiv@b+1
  1222  0942  0826               	movf	?___flmul,w
  1223  0943  00C4               	movwf	___fldiv@b
  1224  0944  160A  118A  242E  120A  158A  	fcall	___fldiv
  1225  0949  1283               	bcf	3,5	;RP0=0, select bank0
  1226  094A  1303               	bcf	3,6	;RP1=0, select bank0
  1227  094B  0843               	movf	?___fldiv+3,w
  1228  094C  1683               	bsf	3,5	;RP0=1, select bank1
  1229  094D  1303               	bcf	3,6	;RP1=0, select bank1
  1230  094E  00D9               	movwf	(main@temperatura+3)^(0+128)
  1231  094F  1283               	bcf	3,5	;RP0=0, select bank0
  1232  0950  1303               	bcf	3,6	;RP1=0, select bank0
  1233  0951  0842               	movf	?___fldiv+2,w
  1234  0952  1683               	bsf	3,5	;RP0=1, select bank1
  1235  0953  1303               	bcf	3,6	;RP1=0, select bank1
  1236  0954  00D8               	movwf	(main@temperatura+2)^(0+128)
  1237  0955  1283               	bcf	3,5	;RP0=0, select bank0
  1238  0956  1303               	bcf	3,6	;RP1=0, select bank0
  1239  0957  0841               	movf	?___fldiv+1,w
  1240  0958  1683               	bsf	3,5	;RP0=1, select bank1
  1241  0959  1303               	bcf	3,6	;RP1=0, select bank1
  1242  095A  00D7               	movwf	(main@temperatura+1)^(0+128)
  1243  095B  1283               	bcf	3,5	;RP0=0, select bank0
  1244  095C  1303               	bcf	3,6	;RP1=0, select bank0
  1245  095D  0840               	movf	?___fldiv,w
  1246  095E  1683               	bsf	3,5	;RP0=1, select bank1
  1247  095F  1303               	bcf	3,6	;RP1=0, select bank1
  1248  0960  00D6               	movwf	main@temperatura^(0+128)
  1249                           
  1250                           ;main.c: 36:         lcdSetCursor(1,1);
  1251  0961  01F4               	clrf	lcdSetCursor@x
  1252  0962  0AF4               	incf	lcdSetCursor@x,f
  1253  0963  3001               	movlw	1
  1254  0964  160A  158A  266D  120A  158A  	fcall	_lcdSetCursor
  1255                           
  1256                           ;main.c: 37:         lcdPrint("Temperatura");
  1257  0969  309D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1258  096A  00F5               	movwf	lcdPrint@a
  1259  096B  3080               	movlw	128
  1260  096C  00F6               	movwf	lcdPrint@a+1
  1261  096D  160A  158A  26E4  120A  158A  	fcall	_lcdPrint
  1262                           
  1263                           ;main.c: 39:         char mensaje[16];;main.c: 40:         sprintf(mensaje, "%.2f C", te
      +                          mperatura);
  1264  0972  30A9               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1265  0973  1683               	bsf	3,5	;RP0=1, select bank1
  1266  0974  1303               	bcf	3,6	;RP1=0, select bank1
  1267  0975  00C3               	movwf	??_main^(0+128)
  1268  0976  0843               	movf	??_main^(0+128),w
  1269  0977  00A0               	movwf	sprintf@f^(0+128)
  1270  0978  0859               	movf	(main@temperatura+3)^(0+128),w
  1271  0979  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1272  097A  0858               	movf	(main@temperatura+2)^(0+128),w
  1273  097B  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1274  097C  0857               	movf	(main@temperatura+1)^(0+128),w
  1275  097D  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1276  097E  0856               	movf	main@temperatura^(0+128),w
  1277  097F  00A1               	movwf	(?_sprintf^(0+128)+1)
  1278  0980  30C6               	movlw	(low (main@mensaje| 0))& (0+255)
  1279  0981  120A  118A  2205  120A  158A  	fcall	_sprintf
  1280                           
  1281                           ;main.c: 41:         lcdSetCursor(2, 1);
  1282  0986  01F4               	clrf	lcdSetCursor@x
  1283  0987  0AF4               	incf	lcdSetCursor@x,f
  1284  0988  3002               	movlw	2
  1285  0989  160A  158A  266D  120A  158A  	fcall	_lcdSetCursor
  1286                           
  1287                           ;main.c: 42:         lcdPrint(mensaje);
  1288  098E  30C6               	movlw	(low (main@mensaje| 0))& (0+255)
  1289  098F  00F5               	movwf	lcdPrint@a
  1290  0990  3000               	movlw	0
  1291  0991  00F6               	movwf	lcdPrint@a+1
  1292  0992  160A  158A  26E4  120A  158A  	fcall	_lcdPrint
  1293                           
  1294                           ;main.c: 43:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1295  0997  300D               	movlw	13
  1296  0998  1683               	bsf	3,5	;RP0=1, select bank1
  1297  0999  1303               	bcf	3,6	;RP1=0, select bank1
  1298  099A  00C4               	movwf	(??_main^(0+128)+1)
  1299  099B  30FB               	movlw	251
  1300  099C  00C3               	movwf	??_main^(0+128)
  1301  099D                     u6037:	
  1302  099D  0BC3               	decfsz	??_main^(0+128),f
  1303  099E  299D               	goto	u6037
  1304  099F  0BC4               	decfsz	(??_main^(0+128)+1),f
  1305  09A0  299D               	goto	u6037
  1306                           
  1307                           ;main.c: 44:     }
  1308  09A1  2902               	goto	l3541
  1309  09A2                     __end_of_main:	
  1310                           
  1311                           	psect	text1
  1312  0205                     __ptext1:	
  1313 ;; *************** function _sprintf *****************
  1314 ;; Defined at:
  1315 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;  sp              1    wreg     PTR unsigned char 
  1318 ;;		 -> main@mensaje(16), 
  1319 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1320 ;;		 -> STR_4(7), 
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  1323 ;;		 -> main@mensaje(16), 
  1324 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  1325 ;;  tmpval          4   23[BANK1 ] struct .
  1326 ;;  val             4   17[BANK1 ] unsigned long 
  1327 ;;  prec            2   28[BANK1 ] int 
  1328 ;;  eexp            2   21[BANK1 ] int 
  1329 ;;  flag            2   15[BANK1 ] unsigned short 
  1330 ;;  cp              2    0        PTR const unsigned char 
  1331 ;;  len             2    0        unsigned int 
  1332 ;;  width           2    0        int 
  1333 ;;  c               1   34[BANK1 ] unsigned char 
  1334 ;;  ap              1   14[BANK1 ] PTR void [1]
  1335 ;;		 -> ?_sprintf(2), 
  1336 ;;  d               1    0        unsigned char 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  2    0[BANK1 ] int 
  1339 ;; Registers used:
  1340 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1346 ;;      Params:         0       0       5       0       0
  1347 ;;      Locals:         0       0      25       0       0
  1348 ;;      Temps:          0       0       5       0       0
  1349 ;;      Totals:         0       0      35       0       0
  1350 ;;Total ram usage:       35 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; Hardware stack levels required when called:    3
  1353 ;; This function calls:
  1354 ;;		___awdiv
  1355 ;;		___fladd
  1356 ;;		___fleq
  1357 ;;		___flge
  1358 ;;		___flmul
  1359 ;;		___flneg
  1360 ;;		___flsub
  1361 ;;		___fltol
  1362 ;;		___lldiv
  1363 ;;		___llmod
  1364 ;;		___wmul
  1365 ;;		___xxtofl
  1366 ;;		__div_to_l_
  1367 ;;		__tdiv_to_l_
  1368 ;;		_fround
  1369 ;;		_isdigit
  1370 ;;		_scale
  1371 ;; This function is called by:
  1372 ;;		_main
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           
  1377                           ;psect for function _sprintf
  1378  0205                     _sprintf:	
  1379                           
  1380                           ;incstack = 0
  1381                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1382                           ;sprintf@sp stored from wreg
  1383  0205  1683               	bsf	3,5	;RP0=1, select bank1
  1384  0206  1303               	bcf	3,6	;RP1=0, select bank1
  1385  0207  00BB               	movwf	sprintf@sp^(0+128)
  1386                           
  1387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 509:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c90\common\doprnt.c: 512:  int prec;
  1388  0208  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1389  0209  00A5               	movwf	??_sprintf^(0+128)
  1390  020A  0825               	movf	??_sprintf^(0+128),w
  1391  020B  00AE               	movwf	sprintf@ap^(0+128)
  1392  020C                     l3363:	
  1393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1394                           
  1395                           
  1396                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1397  020C  3001               	movlw	1
  1398  020D  07A0               	addwf	sprintf@f^(0+128),f
  1399  020E  30FF               	movlw	-1
  1400  020F  0720               	addwf	sprintf@f^(0+128),w
  1401  0210  0084               	movwf	4
  1402  0211  160A  118A  200A  120A  118A  	fcall	stringdir
  1403  0216  00A5               	movwf	??_sprintf^(0+128)
  1404  0217  0825               	movf	??_sprintf^(0+128),w
  1405  0218  00C2               	movwf	sprintf@c^(0+128)
  1406  0219  0842               	movf	sprintf@c^(0+128),w
  1407  021A  1903               	btfsc	3,2
  1408  021B  2FF7               	goto	l3365
  1409                           
  1410                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  1411  021C  3025               	movlw	37
  1412  021D  0642               	xorwf	sprintf@c^(0+128),w
  1413  021E  1903               	btfsc	3,2
  1414  021F  2A22               	goto	l3179
  1415                           
  1416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  1417  0220  0842               	movf	sprintf@c^(0+128),w
  1418  0221  2FEC               	goto	L6
  1419  0222                     l3179:	
  1420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  1421                           
  1422                           
  1423                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  1424  0222  01AF               	clrf	sprintf@flag^(0+128)
  1425  0223  01B0               	clrf	(sprintf@flag+1)^(0+128)
  1426                           
  1427                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 623:   if(*
      +                          f == '.') {
  1428  0224  0820               	movf	sprintf@f^(0+128),w
  1429  0225  0084               	movwf	4
  1430  0226  160A  118A  200A  120A  118A  	fcall	stringdir
  1431  022B  3A2E               	xorlw	46
  1432  022C  1D03               	skipz
  1433  022D  2A6F               	goto	l3195
  1434                           
  1435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 624:    fla
      +                          g |= 0x4000;
  1436  022E  1730               	bsf	(sprintf@flag^(0+128)+1),6
  1437                           
  1438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 625:    f++
      +                          ;
  1439  022F  3001               	movlw	1
  1440  0230  00A5               	movwf	??_sprintf^(0+128)
  1441  0231  0825               	movf	??_sprintf^(0+128),w
  1442  0232  07A0               	addwf	sprintf@f^(0+128),f
  1443                           
  1444                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 639:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 640:     prec
      +                           = 0;
  1445  0233  01BC               	clrf	sprintf@prec^(0+128)
  1446  0234  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1447  0235                     l3193:	
  1448                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     wh
      +                          ile(isdigit((unsigned)*f))
  1449                           
  1450                           
  1451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     wh
      +                          ile(isdigit((unsigned)*f))
  1452  0235  0820               	movf	sprintf@f^(0+128),w
  1453  0236  0084               	movwf	4
  1454  0237  160A  118A  200A  120A  118A  	fcall	stringdir
  1455  023C  160A  158A  252A  120A  118A  	fcall	_isdigit
  1456  0241  1C03               	btfss	3,0
  1457  0242  2A75               	goto	l3201
  1458                           
  1459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 642:      p
      +                          rec = prec*10 + *f++ - '0';
  1460  0243  1683               	bsf	3,5	;RP0=1, select bank1
  1461  0244  1303               	bcf	3,6	;RP1=0, select bank1
  1462  0245  083D               	movf	(sprintf@prec+1)^(0+128),w
  1463  0246  00F1               	movwf	___wmul@multiplier+1
  1464  0247  083C               	movf	sprintf@prec^(0+128),w
  1465  0248  00F0               	movwf	___wmul@multiplier
  1466  0249  300A               	movlw	10
  1467  024A  00F2               	movwf	___wmul@multiplicand
  1468  024B  3000               	movlw	0
  1469  024C  00F3               	movwf	___wmul@multiplicand+1
  1470  024D  160A  158A  257C  120A  118A  	fcall	___wmul
  1471  0252  1683               	bsf	3,5	;RP0=1, select bank1
  1472  0253  1303               	bcf	3,6	;RP1=0, select bank1
  1473  0254  0820               	movf	sprintf@f^(0+128),w
  1474  0255  0084               	movwf	4
  1475  0256  160A  118A  200A  120A  118A  	fcall	stringdir
  1476  025B  0770               	addwf	?___wmul,w
  1477  025C  00A5               	movwf	??_sprintf^(0+128)
  1478  025D  3000               	movlw	0
  1479  025E  1803               	skipnc
  1480  025F  3001               	movlw	1
  1481  0260  0771               	addwf	?___wmul+1,w
  1482  0261  00A6               	movwf	(??_sprintf+1)^(0+128)
  1483  0262  0825               	movf	??_sprintf^(0+128),w
  1484  0263  3ED0               	addlw	208
  1485  0264  00BC               	movwf	sprintf@prec^(0+128)
  1486  0265  0826               	movf	(??_sprintf+1)^(0+128),w
  1487  0266  1803               	skipnc
  1488  0267  3E01               	addlw	1
  1489  0268  3EFF               	addlw	255
  1490  0269  00BD               	movwf	(sprintf@prec+1)^(0+128)
  1491  026A  3001               	movlw	1
  1492  026B  00A5               	movwf	??_sprintf^(0+128)
  1493  026C  0825               	movf	??_sprintf^(0+128),w
  1494  026D  07A0               	addwf	sprintf@f^(0+128),f
  1495  026E  2A35               	goto	l3193
  1496  026F                     l3195:	
  1497                           
  1498                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 645:    pre
      +                          c = 0;
  1499  026F  01BC               	clrf	sprintf@prec^(0+128)
  1500  0270  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1501                           
  1502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 647:    fla
      +                          g |= 0x1000;
  1503  0271  1630               	bsf	(sprintf@flag^(0+128)+1),4
  1504  0272  2A75               	goto	l3201
  1505  0273                     l213:	
  1506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 681:   case
      +                           'f':
  1507                           
  1508                           
  1509                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 682:    fla
      +                          g |= 0x400;
  1510  0273  1530               	bsf	(sprintf@flag^(0+128)+1),2
  1511                           
  1512                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 683:    bre
      +                          ak;
  1513  0274  2A91               	goto	l3203
  1514  0275                     l3201:	
  1515  0275  3001               	movlw	1
  1516  0276  1683               	bsf	3,5	;RP0=1, select bank1
  1517  0277  1303               	bcf	3,6	;RP1=0, select bank1
  1518  0278  07A0               	addwf	sprintf@f^(0+128),f
  1519  0279  30FF               	movlw	-1
  1520  027A  0720               	addwf	sprintf@f^(0+128),w
  1521  027B  0084               	movwf	4
  1522  027C  160A  118A  200A  120A  118A  	fcall	stringdir
  1523  0281  00C2               	movwf	sprintf@c^(0+128)
  1524  0282  00A5               	movwf	??_sprintf^(0+128)
  1525  0283  01A6               	clrf	(??_sprintf^(0+128)+1)
  1526                           
  1527                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1528                           ; Switch size 1, requested type "simple"
  1529                           ; Number of cases is 1, Range of values is 0 to 0
  1530                           ; switch strategies available:
  1531                           ; Name         Instructions Cycles
  1532                           ; simple_byte            4     3 (average)
  1533                           ; direct_byte           11     8 (fixed)
  1534                           ; jumptable            260     6 (fixed)
  1535                           ;	Chosen strategy is simple_byte
  1536  0284  0826               	movf	(??_sprintf+1)^(0+128),w
  1537  0285  3A00               	xorlw	0	; case 0
  1538  0286  1903               	skipnz
  1539  0287  2A89               	goto	l3585
  1540  0288  2A0C               	goto	l3363
  1541  0289                     l3585:	
  1542                           
  1543                           ; Switch size 1, requested type "simple"
  1544                           ; Number of cases is 2, Range of values is 0 to 102
  1545                           ; switch strategies available:
  1546                           ; Name         Instructions Cycles
  1547                           ; simple_byte            7     4 (average)
  1548                           ; jumptable            260     6 (fixed)
  1549                           ;	Chosen strategy is simple_byte
  1550  0289  0825               	movf	??_sprintf^(0+128),w
  1551  028A  3A00               	xorlw	0	; case 0
  1552  028B  1903               	skipnz
  1553  028C  2FF7               	goto	l3365
  1554  028D  3A66               	xorlw	102	; case 102
  1555  028E  1903               	skipnz
  1556  028F  2A73               	goto	l213
  1557  0290  2A0C               	goto	l3363
  1558  0291                     l3203:	
  1559                           
  1560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 844:   if(f
      +                          lag & (0x700)) {
  1561  0291  3000               	movlw	0
  1562  0292  052F               	andwf	sprintf@flag^(0+128),w
  1563  0293  00A5               	movwf	??_sprintf^(0+128)
  1564  0294  3007               	movlw	7
  1565  0295  0530               	andwf	(sprintf@flag+1)^(0+128),w
  1566  0296  00A6               	movwf	(??_sprintf+1)^(0+128)
  1567  0297  0825               	movf	??_sprintf^(0+128),w
  1568  0298  0426               	iorwf	(??_sprintf^(0+128)+1),w
  1569  0299  1903               	btfsc	3,2
  1570  029A  2FB9               	goto	l3345
  1571                           
  1572                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 846:    if(
      +                          flag & 0x1000)
  1573  029B  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  1574  029C  2AA1               	goto	l3209
  1575                           
  1576                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 848:     pr
      +                          ec = 6;
  1577  029D  3006               	movlw	6
  1578  029E  00BC               	movwf	sprintf@prec^(0+128)
  1579  029F  3000               	movlw	0
  1580  02A0  00BD               	movwf	(sprintf@prec^(0+128)+1)
  1581  02A1                     l3209:	
  1582                           
  1583                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 849:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  1584  02A1  082E               	movf	sprintf@ap^(0+128),w
  1585  02A2  0084               	movwf	4
  1586  02A3  1383               	bcf	3,7	;select IRP bank0
  1587  02A4  0800               	movf	0,w
  1588  02A5  00BE               	movwf	sprintf@fval^(0+128)
  1589  02A6  0A84               	incf	4,f
  1590  02A7  0800               	movf	0,w
  1591  02A8  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1592  02A9  0A84               	incf	4,f
  1593  02AA  0800               	movf	0,w
  1594  02AB  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1595  02AC  0A84               	incf	4,f
  1596  02AD  0800               	movf	0,w
  1597  02AE  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1598  02AF  3004               	movlw	4
  1599  02B0  00A5               	movwf	??_sprintf^(0+128)
  1600  02B1  0825               	movf	??_sprintf^(0+128),w
  1601  02B2  07AE               	addwf	sprintf@ap^(0+128),f
  1602                           
  1603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 850:    if(
      +                          fval < 0.0) {
  1604  02B3  0841               	movf	(sprintf@fval+3)^(0+128),w
  1605  02B4  00F3               	movwf	___flge@ff1+3
  1606  02B5  0840               	movf	(sprintf@fval+2)^(0+128),w
  1607  02B6  00F2               	movwf	___flge@ff1+2
  1608  02B7  083F               	movf	(sprintf@fval+1)^(0+128),w
  1609  02B8  00F1               	movwf	___flge@ff1+1
  1610  02B9  083E               	movf	sprintf@fval^(0+128),w
  1611  02BA  00F0               	movwf	___flge@ff1
  1612  02BB  3000               	movlw	0
  1613  02BC  00F7               	movwf	___flge@ff2+3
  1614  02BD  3000               	movlw	0
  1615  02BE  00F6               	movwf	___flge@ff2+2
  1616  02BF  3000               	movlw	0
  1617  02C0  00F5               	movwf	___flge@ff2+1
  1618  02C1  3000               	movlw	0
  1619  02C2  00F4               	movwf	___flge@ff2
  1620  02C3  160A  118A  224D  120A  118A  	fcall	___flge
  1621  02C8  1803               	btfsc	3,0
  1622  02C9  2AE7               	goto	l3219
  1623                           
  1624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 851:     fv
      +                          al = -fval;
  1625  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  1626  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  1627  02CC  0841               	movf	(sprintf@fval+3)^(0+128),w
  1628  02CD  00F3               	movwf	___flneg@f1+3
  1629  02CE  0840               	movf	(sprintf@fval+2)^(0+128),w
  1630  02CF  00F2               	movwf	___flneg@f1+2
  1631  02D0  083F               	movf	(sprintf@fval+1)^(0+128),w
  1632  02D1  00F1               	movwf	___flneg@f1+1
  1633  02D2  083E               	movf	sprintf@fval^(0+128),w
  1634  02D3  00F0               	movwf	___flneg@f1
  1635  02D4  160A  158A  2516  120A  118A  	fcall	___flneg
  1636  02D9  0873               	movf	?___flneg+3,w
  1637  02DA  1683               	bsf	3,5	;RP0=1, select bank1
  1638  02DB  1303               	bcf	3,6	;RP1=0, select bank1
  1639  02DC  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1640  02DD  0872               	movf	?___flneg+2,w
  1641  02DE  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1642  02DF  0871               	movf	?___flneg+1,w
  1643  02E0  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1644  02E1  0870               	movf	?___flneg,w
  1645  02E2  00BE               	movwf	sprintf@fval^(0+128)
  1646                           
  1647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 852:     fl
      +                          ag |= 0x03;
  1648  02E3  3003               	movlw	3
  1649  02E4  04AF               	iorwf	sprintf@flag^(0+128),f
  1650  02E5  3000               	movlw	0
  1651  02E6  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  1652  02E7                     l3219:	
  1653                           
  1654                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 854:    eex
      +                          p = 0;
  1655  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  1656  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  1657  02E9  01B5               	clrf	sprintf@eexp^(0+128)
  1658  02EA  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  1659                           
  1660                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 855:    if(
      +                           fval!=0) {
  1661  02EB  0841               	movf	(sprintf@fval+3)^(0+128),w
  1662  02EC  00F3               	movwf	___fleq@ff1+3
  1663  02ED  0840               	movf	(sprintf@fval+2)^(0+128),w
  1664  02EE  00F2               	movwf	___fleq@ff1+2
  1665  02EF  083F               	movf	(sprintf@fval+1)^(0+128),w
  1666  02F0  00F1               	movwf	___fleq@ff1+1
  1667  02F1  083E               	movf	sprintf@fval^(0+128),w
  1668  02F2  00F0               	movwf	___fleq@ff1
  1669  02F3  3000               	movlw	0
  1670  02F4  00F7               	movwf	___fleq@ff2+3
  1671  02F5  3000               	movlw	0
  1672  02F6  00F6               	movwf	___fleq@ff2+2
  1673  02F7  3000               	movlw	0
  1674  02F8  00F5               	movwf	___fleq@ff2+1
  1675  02F9  3000               	movlw	0
  1676  02FA  00F4               	movwf	___fleq@ff2
  1677  02FB  160A  158A  2721  120A  118A  	fcall	___fleq
  1678  0300  1803               	btfsc	3,0
  1679  0301  2BEB               	goto	l3247
  1680                           
  1681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 856:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1682  0302  1003               	clrc
  1683  0303  1683               	bsf	3,5	;RP0=1, select bank1
  1684  0304  1303               	bcf	3,6	;RP1=0, select bank1
  1685  0305  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  1686  0306  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  1687  0307  3E82               	addlw	130
  1688  0308  00B5               	movwf	sprintf@eexp^(0+128)
  1689  0309  30FF               	movlw	255
  1690  030A  1803               	skipnc
  1691  030B  3000               	movlw	0
  1692  030C  00B6               	movwf	(sprintf@eexp^(0+128)+1)
  1693                           
  1694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 857:     ee
      +                          xp--;
  1695  030D  30FF               	movlw	255
  1696  030E  07B5               	addwf	sprintf@eexp^(0+128),f
  1697  030F  1803               	skipnc
  1698  0310  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1699  0311  30FF               	movlw	255
  1700  0312  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  1701                           
  1702                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 858:     ee
      +                          xp *= 3;
  1703  0313  3003               	movlw	3
  1704  0314  00F0               	movwf	___wmul@multiplier
  1705  0315  3000               	movlw	0
  1706  0316  00F1               	movwf	___wmul@multiplier+1
  1707  0317  0836               	movf	(sprintf@eexp+1)^(0+128),w
  1708  0318  00F3               	movwf	___wmul@multiplicand+1
  1709  0319  0835               	movf	sprintf@eexp^(0+128),w
  1710  031A  00F2               	movwf	___wmul@multiplicand
  1711  031B  160A  158A  257C  120A  118A  	fcall	___wmul
  1712  0320  0871               	movf	?___wmul+1,w
  1713  0321  1683               	bsf	3,5	;RP0=1, select bank1
  1714  0322  1303               	bcf	3,6	;RP1=0, select bank1
  1715  0323  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  1716  0324  0870               	movf	?___wmul,w
  1717  0325  00B5               	movwf	sprintf@eexp^(0+128)
  1718                           
  1719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 859:     ee
      +                          xp /= 10;
  1720  0326  300A               	movlw	10
  1721  0327  00F7               	movwf	___awdiv@divisor
  1722  0328  3000               	movlw	0
  1723  0329  00F8               	movwf	___awdiv@divisor+1
  1724  032A  0836               	movf	(sprintf@eexp+1)^(0+128),w
  1725  032B  00FA               	movwf	___awdiv@dividend+1
  1726  032C  0835               	movf	sprintf@eexp^(0+128),w
  1727  032D  00F9               	movwf	___awdiv@dividend
  1728  032E  160A  118A  20C6  120A  118A  	fcall	___awdiv
  1729  0333  0878               	movf	?___awdiv+1,w
  1730  0334  1683               	bsf	3,5	;RP0=1, select bank1
  1731  0335  1303               	bcf	3,6	;RP1=0, select bank1
  1732  0336  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  1733  0337  0877               	movf	?___awdiv,w
  1734  0338  00B5               	movwf	sprintf@eexp^(0+128)
  1735                           
  1736                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 860:     if
      +                          (eexp < 0)
  1737  0339  1FB6               	btfss	(sprintf@eexp+1)^(0+128),7
  1738  033A  2B41               	goto	l3235
  1739                           
  1740                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 861:      e
      +                          exp--;
  1741  033B  30FF               	movlw	255
  1742  033C  07B5               	addwf	sprintf@eexp^(0+128),f
  1743  033D  1803               	skipnc
  1744  033E  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1745  033F  30FF               	movlw	255
  1746  0340  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  1747  0341                     l3235:	
  1748                           
  1749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 865:     tm
      +                          pval.integ = scale(-eexp);
  1750  0341  0335               	decf	sprintf@eexp^(0+128),w
  1751  0342  3AFF               	xorlw	255
  1752  0343  120A  158A  24B7  120A  118A  	fcall	_scale
  1753  0348  1283               	bcf	3,5	;RP0=0, select bank0
  1754  0349  1303               	bcf	3,6	;RP1=0, select bank0
  1755  034A  0843               	movf	?_scale+3,w
  1756  034B  1683               	bsf	3,5	;RP0=1, select bank1
  1757  034C  1303               	bcf	3,6	;RP1=0, select bank1
  1758  034D  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  1759  034E  1283               	bcf	3,5	;RP0=0, select bank0
  1760  034F  1303               	bcf	3,6	;RP1=0, select bank0
  1761  0350  0842               	movf	?_scale+2,w
  1762  0351  1683               	bsf	3,5	;RP0=1, select bank1
  1763  0352  1303               	bcf	3,6	;RP1=0, select bank1
  1764  0353  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  1765  0354  1283               	bcf	3,5	;RP0=0, select bank0
  1766  0355  1303               	bcf	3,6	;RP1=0, select bank0
  1767  0356  0841               	movf	?_scale+1,w
  1768  0357  1683               	bsf	3,5	;RP0=1, select bank1
  1769  0358  1303               	bcf	3,6	;RP1=0, select bank1
  1770  0359  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  1771  035A  1283               	bcf	3,5	;RP0=0, select bank0
  1772  035B  1303               	bcf	3,6	;RP1=0, select bank0
  1773  035C  0840               	movf	?_scale,w
  1774  035D  1683               	bsf	3,5	;RP0=1, select bank1
  1775  035E  1303               	bcf	3,6	;RP1=0, select bank1
  1776  035F  00B7               	movwf	sprintf@tmpval^(0+128)
  1777                           
  1778                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 866:     tm
      +                          pval.integ *= fval;
  1779  0360  0841               	movf	(sprintf@fval+3)^(0+128),w
  1780  0361  1283               	bcf	3,5	;RP0=0, select bank0
  1781  0362  1303               	bcf	3,6	;RP1=0, select bank0
  1782  0363  00A9               	movwf	___flmul@b+3
  1783  0364  1683               	bsf	3,5	;RP0=1, select bank1
  1784  0365  1303               	bcf	3,6	;RP1=0, select bank1
  1785  0366  0840               	movf	(sprintf@fval+2)^(0+128),w
  1786  0367  1283               	bcf	3,5	;RP0=0, select bank0
  1787  0368  1303               	bcf	3,6	;RP1=0, select bank0
  1788  0369  00A8               	movwf	___flmul@b+2
  1789  036A  1683               	bsf	3,5	;RP0=1, select bank1
  1790  036B  1303               	bcf	3,6	;RP1=0, select bank1
  1791  036C  083F               	movf	(sprintf@fval+1)^(0+128),w
  1792  036D  1283               	bcf	3,5	;RP0=0, select bank0
  1793  036E  1303               	bcf	3,6	;RP1=0, select bank0
  1794  036F  00A7               	movwf	___flmul@b+1
  1795  0370  1683               	bsf	3,5	;RP0=1, select bank1
  1796  0371  1303               	bcf	3,6	;RP1=0, select bank1
  1797  0372  083E               	movf	sprintf@fval^(0+128),w
  1798  0373  1283               	bcf	3,5	;RP0=0, select bank0
  1799  0374  1303               	bcf	3,6	;RP1=0, select bank0
  1800  0375  00A6               	movwf	___flmul@b
  1801  0376  1683               	bsf	3,5	;RP0=1, select bank1
  1802  0377  1303               	bcf	3,6	;RP1=0, select bank1
  1803  0378  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  1804  0379  1283               	bcf	3,5	;RP0=0, select bank0
  1805  037A  1303               	bcf	3,6	;RP1=0, select bank0
  1806  037B  00AD               	movwf	___flmul@a+3
  1807  037C  1683               	bsf	3,5	;RP0=1, select bank1
  1808  037D  1303               	bcf	3,6	;RP1=0, select bank1
  1809  037E  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  1810  037F  1283               	bcf	3,5	;RP0=0, select bank0
  1811  0380  1303               	bcf	3,6	;RP1=0, select bank0
  1812  0381  00AC               	movwf	___flmul@a+2
  1813  0382  1683               	bsf	3,5	;RP0=1, select bank1
  1814  0383  1303               	bcf	3,6	;RP1=0, select bank1
  1815  0384  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  1816  0385  1283               	bcf	3,5	;RP0=0, select bank0
  1817  0386  1303               	bcf	3,6	;RP1=0, select bank0
  1818  0387  00AB               	movwf	___flmul@a+1
  1819  0388  1683               	bsf	3,5	;RP0=1, select bank1
  1820  0389  1303               	bcf	3,6	;RP1=0, select bank1
  1821  038A  0837               	movf	sprintf@tmpval^(0+128),w
  1822  038B  1283               	bcf	3,5	;RP0=0, select bank0
  1823  038C  1303               	bcf	3,6	;RP1=0, select bank0
  1824  038D  00AA               	movwf	___flmul@a
  1825  038E  120A  158A  21A2  120A  118A  	fcall	___flmul
  1826  0393  1283               	bcf	3,5	;RP0=0, select bank0
  1827  0394  1303               	bcf	3,6	;RP1=0, select bank0
  1828  0395  0829               	movf	?___flmul+3,w
  1829  0396  1683               	bsf	3,5	;RP0=1, select bank1
  1830  0397  1303               	bcf	3,6	;RP1=0, select bank1
  1831  0398  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  1832  0399  1283               	bcf	3,5	;RP0=0, select bank0
  1833  039A  1303               	bcf	3,6	;RP1=0, select bank0
  1834  039B  0828               	movf	?___flmul+2,w
  1835  039C  1683               	bsf	3,5	;RP0=1, select bank1
  1836  039D  1303               	bcf	3,6	;RP1=0, select bank1
  1837  039E  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  1838  039F  1283               	bcf	3,5	;RP0=0, select bank0
  1839  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  1840  03A1  0827               	movf	?___flmul+1,w
  1841  03A2  1683               	bsf	3,5	;RP0=1, select bank1
  1842  03A3  1303               	bcf	3,6	;RP1=0, select bank1
  1843  03A4  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  1844  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  1845  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  1846  03A7  0826               	movf	?___flmul,w
  1847  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  1848  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  1849  03AA  00B7               	movwf	sprintf@tmpval^(0+128)
  1850                           
  1851                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (tmpval.integ < 1.0)
  1852  03AB  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  1853  03AC  00F3               	movwf	___flge@ff1+3
  1854  03AD  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  1855  03AE  00F2               	movwf	___flge@ff1+2
  1856  03AF  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  1857  03B0  00F1               	movwf	___flge@ff1+1
  1858  03B1  0837               	movf	sprintf@tmpval^(0+128),w
  1859  03B2  00F0               	movwf	___flge@ff1
  1860  03B3  303F               	movlw	63
  1861  03B4  00F7               	movwf	___flge@ff2+3
  1862  03B5  3080               	movlw	128
  1863  03B6  00F6               	movwf	___flge@ff2+2
  1864  03B7  3000               	movlw	0
  1865  03B8  00F5               	movwf	___flge@ff2+1
  1866  03B9  3000               	movlw	0
  1867  03BA  00F4               	movwf	___flge@ff2
  1868  03BB  160A  118A  224D  120A  118A  	fcall	___flge
  1869  03C0  1803               	btfsc	3,0
  1870  03C1  2BCA               	goto	l3243
  1871                           
  1872                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  1873  03C2  30FF               	movlw	255
  1874  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  1875  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  1876  03C5  07B5               	addwf	sprintf@eexp^(0+128),f
  1877  03C6  1803               	skipnc
  1878  03C7  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1879  03C8  30FF               	movlw	255
  1880  03C9  2BEA               	goto	L1
  1881  03CA                     l3243:	
  1882  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  1883  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  1884  03CC  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  1885  03CD  00F3               	movwf	___flge@ff1+3
  1886  03CE  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  1887  03CF  00F2               	movwf	___flge@ff1+2
  1888  03D0  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  1889  03D1  00F1               	movwf	___flge@ff1+1
  1890  03D2  0837               	movf	sprintf@tmpval^(0+128),w
  1891  03D3  00F0               	movwf	___flge@ff1
  1892  03D4  3041               	movlw	65
  1893  03D5  00F7               	movwf	___flge@ff2+3
  1894  03D6  3020               	movlw	32
  1895  03D7  00F6               	movwf	___flge@ff2+2
  1896  03D8  3000               	movlw	0
  1897  03D9  00F5               	movwf	___flge@ff2+1
  1898  03DA  3000               	movlw	0
  1899  03DB  00F4               	movwf	___flge@ff2
  1900  03DC  160A  118A  224D  120A  118A  	fcall	___flge
  1901  03E1  1C03               	btfss	3,0
  1902  03E2  2BEB               	goto	l3247
  1903                           
  1904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 870:      e
      +                          exp++;
  1905  03E3  3001               	movlw	1
  1906  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  1907  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  1908  03E6  07B5               	addwf	sprintf@eexp^(0+128),f
  1909  03E7  1803               	skipnc
  1910  03E8  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1911  03E9  3000               	movlw	0
  1912  03EA                     L1:	
  1913  03EA  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  1914  03EB                     l3247:	
  1915                           
  1916                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1131:      
      +                          if(prec <= 12)
  1917  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  1918  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  1919  03ED  083D               	movf	(sprintf@prec+1)^(0+128),w
  1920  03EE  3A80               	xorlw	128
  1921  03EF  00FF               	movwf	127
  1922  03F0  3080               	movlw	128
  1923  03F1  027F               	subwf	127,w
  1924  03F2  1D03               	skipz
  1925  03F3  2BF6               	goto	u5475
  1926  03F4  300D               	movlw	13
  1927  03F5  023C               	subwf	sprintf@prec^(0+128),w
  1928  03F6                     u5475:	
  1929  03F6  1803               	skipnc
  1930  03F7  2C3F               	goto	l3251
  1931                           
  1932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1132:      
      +                           fval += fround((unsigned int)prec);
  1933  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  1934  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  1935  03FA  083C               	movf	sprintf@prec^(0+128),w
  1936  03FB  120A  118A  2004  120A  118A  	fcall	_fround
  1937  0400  1283               	bcf	3,5	;RP0=0, select bank0
  1938  0401  1303               	bcf	3,6	;RP1=0, select bank0
  1939  0402  0843               	movf	?_fround+3,w
  1940  0403  00D7               	movwf	___fladd@b+3
  1941  0404  0842               	movf	?_fround+2,w
  1942  0405  00D6               	movwf	___fladd@b+2
  1943  0406  0841               	movf	?_fround+1,w
  1944  0407  00D5               	movwf	___fladd@b+1
  1945  0408  0840               	movf	?_fround,w
  1946  0409  00D4               	movwf	___fladd@b
  1947  040A  1683               	bsf	3,5	;RP0=1, select bank1
  1948  040B  1303               	bcf	3,6	;RP1=0, select bank1
  1949  040C  0841               	movf	(sprintf@fval+3)^(0+128),w
  1950  040D  1283               	bcf	3,5	;RP0=0, select bank0
  1951  040E  1303               	bcf	3,6	;RP1=0, select bank0
  1952  040F  00DB               	movwf	___fladd@a+3
  1953  0410  1683               	bsf	3,5	;RP0=1, select bank1
  1954  0411  1303               	bcf	3,6	;RP1=0, select bank1
  1955  0412  0840               	movf	(sprintf@fval+2)^(0+128),w
  1956  0413  1283               	bcf	3,5	;RP0=0, select bank0
  1957  0414  1303               	bcf	3,6	;RP1=0, select bank0
  1958  0415  00DA               	movwf	___fladd@a+2
  1959  0416  1683               	bsf	3,5	;RP0=1, select bank1
  1960  0417  1303               	bcf	3,6	;RP1=0, select bank1
  1961  0418  083F               	movf	(sprintf@fval+1)^(0+128),w
  1962  0419  1283               	bcf	3,5	;RP0=0, select bank0
  1963  041A  1303               	bcf	3,6	;RP1=0, select bank0
  1964  041B  00D9               	movwf	___fladd@a+1
  1965  041C  1683               	bsf	3,5	;RP0=1, select bank1
  1966  041D  1303               	bcf	3,6	;RP1=0, select bank1
  1967  041E  083E               	movf	sprintf@fval^(0+128),w
  1968  041F  1283               	bcf	3,5	;RP0=0, select bank0
  1969  0420  1303               	bcf	3,6	;RP1=0, select bank0
  1970  0421  00D8               	movwf	___fladd@a
  1971  0422  160A  118A  25D1  120A  118A  	fcall	___fladd
  1972  0427  1283               	bcf	3,5	;RP0=0, select bank0
  1973  0428  1303               	bcf	3,6	;RP1=0, select bank0
  1974  0429  0857               	movf	?___fladd+3,w
  1975  042A  1683               	bsf	3,5	;RP0=1, select bank1
  1976  042B  1303               	bcf	3,6	;RP1=0, select bank1
  1977  042C  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1978  042D  1283               	bcf	3,5	;RP0=0, select bank0
  1979  042E  1303               	bcf	3,6	;RP1=0, select bank0
  1980  042F  0856               	movf	?___fladd+2,w
  1981  0430  1683               	bsf	3,5	;RP0=1, select bank1
  1982  0431  1303               	bcf	3,6	;RP1=0, select bank1
  1983  0432  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1984  0433  1283               	bcf	3,5	;RP0=0, select bank0
  1985  0434  1303               	bcf	3,6	;RP1=0, select bank0
  1986  0435  0855               	movf	?___fladd+1,w
  1987  0436  1683               	bsf	3,5	;RP0=1, select bank1
  1988  0437  1303               	bcf	3,6	;RP1=0, select bank1
  1989  0438  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1990  0439  1283               	bcf	3,5	;RP0=0, select bank0
  1991  043A  1303               	bcf	3,6	;RP1=0, select bank0
  1992  043B  0854               	movf	?___fladd,w
  1993  043C  1683               	bsf	3,5	;RP0=1, select bank1
  1994  043D  1303               	bcf	3,6	;RP1=0, select bank1
  1995  043E  00BE               	movwf	sprintf@fval^(0+128)
  1996  043F                     l3251:	
  1997                           
  1998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1135:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  1999  043F  1683               	bsf	3,5	;RP0=1, select bank1
  2000  0440  1303               	bcf	3,6	;RP1=0, select bank1
  2001  0441  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2002  0442  3A80               	xorlw	128
  2003  0443  00FF               	movwf	127
  2004  0444  3080               	movlw	128
  2005  0445  027F               	subwf	127,w
  2006  0446  1D03               	skipz
  2007  0447  2C4A               	goto	u5485
  2008  0448  300A               	movlw	10
  2009  0449  0235               	subwf	sprintf@eexp^(0+128),w
  2010  044A                     u5485:	
  2011  044A  1803               	skipnc
  2012  044B  2C97               	goto	l3259
  2013  044C  1683               	bsf	3,5	;RP0=1, select bank1
  2014  044D  1303               	bcf	3,6	;RP1=0, select bank1
  2015  044E  0841               	movf	(sprintf@fval+3)^(0+128),w
  2016  044F  00F3               	movwf	___fleq@ff1+3
  2017  0450  0840               	movf	(sprintf@fval+2)^(0+128),w
  2018  0451  00F2               	movwf	___fleq@ff1+2
  2019  0452  083F               	movf	(sprintf@fval+1)^(0+128),w
  2020  0453  00F1               	movwf	___fleq@ff1+1
  2021  0454  083E               	movf	sprintf@fval^(0+128),w
  2022  0455  00F0               	movwf	___fleq@ff1
  2023  0456  3000               	movlw	0
  2024  0457  00F7               	movwf	___fleq@ff2+3
  2025  0458  3000               	movlw	0
  2026  0459  00F6               	movwf	___fleq@ff2+2
  2027  045A  3000               	movlw	0
  2028  045B  00F5               	movwf	___fleq@ff2+1
  2029  045C  3000               	movlw	0
  2030  045D  00F4               	movwf	___fleq@ff2
  2031  045E  160A  158A  2721  120A  118A  	fcall	___fleq
  2032  0463  1803               	btfsc	3,0
  2033  0464  2D00               	goto	l3273
  2034  0465  1683               	bsf	3,5	;RP0=1, select bank1
  2035  0466  1303               	bcf	3,6	;RP1=0, select bank1
  2036  0467  0841               	movf	(sprintf@fval+3)^(0+128),w
  2037  0468  1283               	bcf	3,5	;RP0=0, select bank0
  2038  0469  1303               	bcf	3,6	;RP1=0, select bank0
  2039  046A  00D6               	movwf	___fltol@f1+3
  2040  046B  1683               	bsf	3,5	;RP0=1, select bank1
  2041  046C  1303               	bcf	3,6	;RP1=0, select bank1
  2042  046D  0840               	movf	(sprintf@fval+2)^(0+128),w
  2043  046E  1283               	bcf	3,5	;RP0=0, select bank0
  2044  046F  1303               	bcf	3,6	;RP1=0, select bank0
  2045  0470  00D5               	movwf	___fltol@f1+2
  2046  0471  1683               	bsf	3,5	;RP0=1, select bank1
  2047  0472  1303               	bcf	3,6	;RP1=0, select bank1
  2048  0473  083F               	movf	(sprintf@fval+1)^(0+128),w
  2049  0474  1283               	bcf	3,5	;RP0=0, select bank0
  2050  0475  1303               	bcf	3,6	;RP1=0, select bank0
  2051  0476  00D4               	movwf	___fltol@f1+1
  2052  0477  1683               	bsf	3,5	;RP0=1, select bank1
  2053  0478  1303               	bcf	3,6	;RP1=0, select bank1
  2054  0479  083E               	movf	sprintf@fval^(0+128),w
  2055  047A  1283               	bcf	3,5	;RP0=0, select bank0
  2056  047B  1303               	bcf	3,6	;RP1=0, select bank0
  2057  047C  00D3               	movwf	___fltol@f1
  2058  047D  160A  118A  21E0  120A  118A  	fcall	___fltol
  2059  0482  1283               	bcf	3,5	;RP0=0, select bank0
  2060  0483  1303               	bcf	3,6	;RP1=0, select bank0
  2061  0484  0856               	movf	?___fltol+3,w
  2062  0485  0455               	iorwf	?___fltol+2,w
  2063  0486  0454               	iorwf	?___fltol+1,w
  2064  0487  0453               	iorwf	?___fltol,w
  2065  0488  1D03               	skipz
  2066  0489  2D00               	goto	l3273
  2067  048A  1683               	bsf	3,5	;RP0=1, select bank1
  2068  048B  1303               	bcf	3,6	;RP1=0, select bank1
  2069  048C  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2070  048D  3A80               	xorlw	128
  2071  048E  00FF               	movwf	127
  2072  048F  3080               	movlw	128
  2073  0490  027F               	subwf	127,w
  2074  0491  1D03               	skipz
  2075  0492  2C95               	goto	u5515
  2076  0493  3002               	movlw	2
  2077  0494  0235               	subwf	sprintf@eexp^(0+128),w
  2078  0495                     u5515:	
  2079  0495  1C03               	skipc
  2080  0496  2D00               	goto	l3273
  2081  0497                     l3259:	
  2082                           
  2083                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1139:      
      +                          if(tmpval.integ < 4.294967296){
  2084  0497  1683               	bsf	3,5	;RP0=1, select bank1
  2085  0498  1303               	bcf	3,6	;RP1=0, select bank1
  2086  0499  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2087  049A  00F3               	movwf	___flge@ff1+3
  2088  049B  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2089  049C  00F2               	movwf	___flge@ff1+2
  2090  049D  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2091  049E  00F1               	movwf	___flge@ff1+1
  2092  049F  0837               	movf	sprintf@tmpval^(0+128),w
  2093  04A0  00F0               	movwf	___flge@ff1
  2094  04A1  3040               	movlw	64
  2095  04A2  00F7               	movwf	___flge@ff2+3
  2096  04A3  3089               	movlw	137
  2097  04A4  00F6               	movwf	___flge@ff2+2
  2098  04A5  3070               	movlw	112
  2099  04A6  00F5               	movwf	___flge@ff2+1
  2100  04A7  305F               	movlw	95
  2101  04A8  00F4               	movwf	___flge@ff2
  2102  04A9  160A  118A  224D  120A  118A  	fcall	___flge
  2103  04AE  1803               	btfsc	3,0
  2104  04AF  2CB2               	goto	l3263
  2105                           
  2106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1140:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2107  04B0  30F7               	movlw	247
  2108  04B1  2CB3               	goto	L2
  2109  04B2                     l3263:	
  2110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1141:      
      +                          }else{
  2111                           
  2112                           
  2113                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1142:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2114  04B2  30F8               	movlw	248
  2115  04B3                     L2:	
  2116  04B3  1683               	bsf	3,5	;RP0=1, select bank1
  2117  04B4  1303               	bcf	3,6	;RP1=0, select bank1
  2118  04B5  07B5               	addwf	sprintf@eexp^(0+128),f
  2119  04B6  1803               	skipnc
  2120  04B7  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2121  04B8  30FF               	movlw	255
  2122  04B9  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2123                           
  2124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1145:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  2125  04BA  0835               	movf	sprintf@eexp^(0+128),w
  2126  04BB  120A  158A  24B7  120A  118A  	fcall	_scale
  2127  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2128  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  2129  04C2  0843               	movf	?_scale+3,w
  2130  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  2131  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  2132  04C5  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2133  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2134  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  2135  04C8  0842               	movf	?_scale+2,w
  2136  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  2137  04CA  1303               	bcf	3,6	;RP1=0, select bank1
  2138  04CB  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2139  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  2140  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  2141  04CE  0841               	movf	?_scale+1,w
  2142  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  2143  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  2144  04D1  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2145  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  2146  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  2147  04D4  0840               	movf	?_scale,w
  2148  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  2149  04D6  1303               	bcf	3,6	;RP1=0, select bank1
  2150  04D7  00B7               	movwf	sprintf@tmpval^(0+128)
  2151  04D8  0841               	movf	(sprintf@fval+3)^(0+128),w
  2152  04D9  00F3               	movwf	__div_to_l_@f1+3
  2153  04DA  0840               	movf	(sprintf@fval+2)^(0+128),w
  2154  04DB  00F2               	movwf	__div_to_l_@f1+2
  2155  04DC  083F               	movf	(sprintf@fval+1)^(0+128),w
  2156  04DD  00F1               	movwf	__div_to_l_@f1+1
  2157  04DE  083E               	movf	sprintf@fval^(0+128),w
  2158  04DF  00F0               	movwf	__div_to_l_@f1
  2159  04E0  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2160  04E1  00F7               	movwf	__div_to_l_@f2+3
  2161  04E2  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2162  04E3  00F6               	movwf	__div_to_l_@f2+2
  2163  04E4  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2164  04E5  00F5               	movwf	__div_to_l_@f2+1
  2165  04E6  0837               	movf	sprintf@tmpval^(0+128),w
  2166  04E7  00F4               	movwf	__div_to_l_@f2
  2167  04E8  120A  158A  2002  120A  118A  	fcall	__div_to_l_
  2168  04ED  0873               	movf	?__div_to_l_+3,w
  2169  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  2170  04EF  1303               	bcf	3,6	;RP1=0, select bank1
  2171  04F0  00B4               	movwf	(sprintf@val+3)^(0+128)
  2172  04F1  0872               	movf	?__div_to_l_+2,w
  2173  04F2  00B3               	movwf	(sprintf@val+2)^(0+128)
  2174  04F3  0871               	movf	?__div_to_l_+1,w
  2175  04F4  00B2               	movwf	(sprintf@val+1)^(0+128)
  2176  04F5  0870               	movf	?__div_to_l_,w
  2177  04F6  00B1               	movwf	sprintf@val^(0+128)
  2178                           
  2179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1148:      
      +                          fval = 0.0;
  2180  04F7  3000               	movlw	0
  2181  04F8  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2182  04F9  3000               	movlw	0
  2183  04FA  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2184  04FB  3000               	movlw	0
  2185  04FC  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2186  04FD  3000               	movlw	0
  2187  04FE  00BE               	movwf	sprintf@fval^(0+128)
  2188                           
  2189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1149:     }
      +                           else {
  2190  04FF  2D84               	goto	l3279
  2191  0500                     l3273:	
  2192                           
  2193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1150:      
      +                          val = (unsigned long)fval;
  2194  0500  1683               	bsf	3,5	;RP0=1, select bank1
  2195  0501  1303               	bcf	3,6	;RP1=0, select bank1
  2196  0502  0841               	movf	(sprintf@fval+3)^(0+128),w
  2197  0503  1283               	bcf	3,5	;RP0=0, select bank0
  2198  0504  1303               	bcf	3,6	;RP1=0, select bank0
  2199  0505  00D6               	movwf	___fltol@f1+3
  2200  0506  1683               	bsf	3,5	;RP0=1, select bank1
  2201  0507  1303               	bcf	3,6	;RP1=0, select bank1
  2202  0508  0840               	movf	(sprintf@fval+2)^(0+128),w
  2203  0509  1283               	bcf	3,5	;RP0=0, select bank0
  2204  050A  1303               	bcf	3,6	;RP1=0, select bank0
  2205  050B  00D5               	movwf	___fltol@f1+2
  2206  050C  1683               	bsf	3,5	;RP0=1, select bank1
  2207  050D  1303               	bcf	3,6	;RP1=0, select bank1
  2208  050E  083F               	movf	(sprintf@fval+1)^(0+128),w
  2209  050F  1283               	bcf	3,5	;RP0=0, select bank0
  2210  0510  1303               	bcf	3,6	;RP1=0, select bank0
  2211  0511  00D4               	movwf	___fltol@f1+1
  2212  0512  1683               	bsf	3,5	;RP0=1, select bank1
  2213  0513  1303               	bcf	3,6	;RP1=0, select bank1
  2214  0514  083E               	movf	sprintf@fval^(0+128),w
  2215  0515  1283               	bcf	3,5	;RP0=0, select bank0
  2216  0516  1303               	bcf	3,6	;RP1=0, select bank0
  2217  0517  00D3               	movwf	___fltol@f1
  2218  0518  160A  118A  21E0  120A  118A  	fcall	___fltol
  2219  051D  1283               	bcf	3,5	;RP0=0, select bank0
  2220  051E  1303               	bcf	3,6	;RP1=0, select bank0
  2221  051F  0856               	movf	?___fltol+3,w
  2222  0520  1683               	bsf	3,5	;RP0=1, select bank1
  2223  0521  1303               	bcf	3,6	;RP1=0, select bank1
  2224  0522  00B4               	movwf	(sprintf@val+3)^(0+128)
  2225  0523  1283               	bcf	3,5	;RP0=0, select bank0
  2226  0524  1303               	bcf	3,6	;RP1=0, select bank0
  2227  0525  0855               	movf	?___fltol+2,w
  2228  0526  1683               	bsf	3,5	;RP0=1, select bank1
  2229  0527  1303               	bcf	3,6	;RP1=0, select bank1
  2230  0528  00B3               	movwf	(sprintf@val+2)^(0+128)
  2231  0529  1283               	bcf	3,5	;RP0=0, select bank0
  2232  052A  1303               	bcf	3,6	;RP1=0, select bank0
  2233  052B  0854               	movf	?___fltol+1,w
  2234  052C  1683               	bsf	3,5	;RP0=1, select bank1
  2235  052D  1303               	bcf	3,6	;RP1=0, select bank1
  2236  052E  00B2               	movwf	(sprintf@val+1)^(0+128)
  2237  052F  1283               	bcf	3,5	;RP0=0, select bank0
  2238  0530  1303               	bcf	3,6	;RP1=0, select bank0
  2239  0531  0853               	movf	?___fltol,w
  2240  0532  1683               	bsf	3,5	;RP0=1, select bank1
  2241  0533  1303               	bcf	3,6	;RP1=0, select bank1
  2242  0534  00B1               	movwf	sprintf@val^(0+128)
  2243                           
  2244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1151:      
      +                          fval -= (double)val;
  2245  0535  0834               	movf	(sprintf@val+3)^(0+128),w
  2246  0536  00F7               	movwf	___xxtofl@val+3
  2247  0537  0833               	movf	(sprintf@val+2)^(0+128),w
  2248  0538  00F6               	movwf	___xxtofl@val+2
  2249  0539  0832               	movf	(sprintf@val+1)^(0+128),w
  2250  053A  00F5               	movwf	___xxtofl@val+1
  2251  053B  0831               	movf	sprintf@val^(0+128),w
  2252  053C  00F4               	movwf	___xxtofl@val
  2253  053D  3000               	movlw	0
  2254  053E  160A  118A  22E0  120A  118A  	fcall	___xxtofl
  2255  0543  0877               	movf	?___xxtofl+3,w
  2256  0544  1283               	bcf	3,5	;RP0=0, select bank0
  2257  0545  1303               	bcf	3,6	;RP1=0, select bank0
  2258  0546  00EB               	movwf	___flsub@a+3
  2259  0547  0876               	movf	?___xxtofl+2,w
  2260  0548  00EA               	movwf	___flsub@a+2
  2261  0549  0875               	movf	?___xxtofl+1,w
  2262  054A  00E9               	movwf	___flsub@a+1
  2263  054B  0874               	movf	?___xxtofl,w
  2264  054C  00E8               	movwf	___flsub@a
  2265  054D  1683               	bsf	3,5	;RP0=1, select bank1
  2266  054E  1303               	bcf	3,6	;RP1=0, select bank1
  2267  054F  0841               	movf	(sprintf@fval+3)^(0+128),w
  2268  0550  1283               	bcf	3,5	;RP0=0, select bank0
  2269  0551  1303               	bcf	3,6	;RP1=0, select bank0
  2270  0552  00EF               	movwf	___flsub@b+3
  2271  0553  1683               	bsf	3,5	;RP0=1, select bank1
  2272  0554  1303               	bcf	3,6	;RP1=0, select bank1
  2273  0555  0840               	movf	(sprintf@fval+2)^(0+128),w
  2274  0556  1283               	bcf	3,5	;RP0=0, select bank0
  2275  0557  1303               	bcf	3,6	;RP1=0, select bank0
  2276  0558  00EE               	movwf	___flsub@b+2
  2277  0559  1683               	bsf	3,5	;RP0=1, select bank1
  2278  055A  1303               	bcf	3,6	;RP1=0, select bank1
  2279  055B  083F               	movf	(sprintf@fval+1)^(0+128),w
  2280  055C  1283               	bcf	3,5	;RP0=0, select bank0
  2281  055D  1303               	bcf	3,6	;RP1=0, select bank0
  2282  055E  00ED               	movwf	___flsub@b+1
  2283  055F  1683               	bsf	3,5	;RP0=1, select bank1
  2284  0560  1303               	bcf	3,6	;RP1=0, select bank1
  2285  0561  083E               	movf	sprintf@fval^(0+128),w
  2286  0562  1283               	bcf	3,5	;RP0=0, select bank0
  2287  0563  1303               	bcf	3,6	;RP1=0, select bank0
  2288  0564  00EC               	movwf	___flsub@b
  2289  0565  160A  158A  25BF  120A  118A  	fcall	___flsub
  2290  056A  1283               	bcf	3,5	;RP0=0, select bank0
  2291  056B  1303               	bcf	3,6	;RP1=0, select bank0
  2292  056C  086B               	movf	?___flsub+3,w
  2293  056D  1683               	bsf	3,5	;RP0=1, select bank1
  2294  056E  1303               	bcf	3,6	;RP1=0, select bank1
  2295  056F  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2296  0570  1283               	bcf	3,5	;RP0=0, select bank0
  2297  0571  1303               	bcf	3,6	;RP1=0, select bank0
  2298  0572  086A               	movf	?___flsub+2,w
  2299  0573  1683               	bsf	3,5	;RP0=1, select bank1
  2300  0574  1303               	bcf	3,6	;RP1=0, select bank1
  2301  0575  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2302  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2303  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2304  0578  0869               	movf	?___flsub+1,w
  2305  0579  1683               	bsf	3,5	;RP0=1, select bank1
  2306  057A  1303               	bcf	3,6	;RP1=0, select bank1
  2307  057B  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2308  057C  1283               	bcf	3,5	;RP0=0, select bank0
  2309  057D  1303               	bcf	3,6	;RP1=0, select bank0
  2310  057E  0868               	movf	?___flsub,w
  2311  057F  1683               	bsf	3,5	;RP0=1, select bank1
  2312  0580  1303               	bcf	3,6	;RP1=0, select bank1
  2313  0581  00BE               	movwf	sprintf@fval^(0+128)
  2314                           
  2315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1152:      
      +                          eexp = 0;
  2316  0582  01B5               	clrf	sprintf@eexp^(0+128)
  2317  0583  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2318  0584                     l3279:	
  2319                           
  2320                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1155:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2321  0584  01C2               	clrf	sprintf@c^(0+128)
  2322  0585  0AC2               	incf	sprintf@c^(0+128),f
  2323  0586                     l3285:	
  2324                           
  2325                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1156:      
      +                          if(val < dpowers[c])
  2326  0586  0842               	movf	sprintf@c^(0+128),w
  2327  0587  00A5               	movwf	??_sprintf^(0+128)
  2328  0588  3001               	movlw	1
  2329  0589                     u5535:	
  2330  0589  1003               	clrc
  2331  058A  0DA5               	rlf	??_sprintf^(0+128),f
  2332  058B  3EFF               	addlw	-1
  2333  058C  1D03               	skipz
  2334  058D  2D89               	goto	u5535
  2335  058E  1003               	clrc
  2336  058F  0D25               	rlf	??_sprintf^(0+128),w
  2337  0590  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2338  0591  0084               	movwf	4
  2339  0592  160A  118A  200A  120A  118A  	fcall	stringdir
  2340  0597  00A6               	movwf	(??_sprintf+1)^(0+128)
  2341  0598  160A  118A  200A  120A  118A  	fcall	stringdir
  2342  059D  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2343  059E  160A  118A  200A  120A  118A  	fcall	stringdir
  2344  05A3  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2345  05A4  160A  118A  200A  120A  118A  	fcall	stringdir
  2346  05A9  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2347  05AA  0829               	movf	(??_sprintf+4)^(0+128),w
  2348  05AB  0234               	subwf	(sprintf@val+3)^(0+128),w
  2349  05AC  1D03               	skipz
  2350  05AD  2DB8               	goto	u5545
  2351  05AE  0828               	movf	(??_sprintf+3)^(0+128),w
  2352  05AF  0233               	subwf	(sprintf@val+2)^(0+128),w
  2353  05B0  1D03               	skipz
  2354  05B1  2DB8               	goto	u5545
  2355  05B2  0827               	movf	(??_sprintf+2)^(0+128),w
  2356  05B3  0232               	subwf	(sprintf@val+1)^(0+128),w
  2357  05B4  1D03               	skipz
  2358  05B5  2DB8               	goto	u5545
  2359  05B6  0826               	movf	(??_sprintf+1)^(0+128),w
  2360  05B7  0231               	subwf	sprintf@val^(0+128),w
  2361  05B8                     u5545:	
  2362  05B8  1C03               	btfss	3,0
  2363  05B9  2DC2               	goto	l3291
  2364  05BA  3001               	movlw	1
  2365  05BB  00A5               	movwf	??_sprintf^(0+128)
  2366  05BC  0825               	movf	??_sprintf^(0+128),w
  2367  05BD  07C2               	addwf	sprintf@c^(0+128),f
  2368  05BE  300A               	movlw	10
  2369  05BF  0642               	xorwf	sprintf@c^(0+128),w
  2370  05C0  1D03               	btfss	3,2
  2371  05C1  2D86               	goto	l3285
  2372  05C2                     l3291:	
  2373                           
  2374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1194:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1207:     i
      +                          f(flag & 0x03)
  2375  05C2  3003               	movlw	3
  2376  05C3  052F               	andwf	sprintf@flag^(0+128),w
  2377  05C4  00A5               	movwf	??_sprintf^(0+128)
  2378  05C5  3000               	movlw	0
  2379  05C6  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2380  05C7  00A6               	movwf	(??_sprintf+1)^(0+128)
  2381  05C8  0825               	movf	??_sprintf^(0+128),w
  2382  05C9  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2383  05CA  1903               	btfsc	3,2
  2384  05CB  2DD7               	goto	l239
  2385                           
  2386                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1209:      
      +                          ((*sp++ = ('-')));
  2387  05CC  302D               	movlw	45
  2388  05CD                     L3:	
  2389  05CD  00A5               	movwf	??_sprintf^(0+128)
  2390  05CE  083B               	movf	sprintf@sp^(0+128),w
  2391  05CF  0084               	movwf	4
  2392  05D0  0825               	movf	??_sprintf^(0+128),w
  2393  05D1  1383               	bcf	3,7	;select IRP bank0
  2394  05D2  0080               	movwf	0
  2395  05D3  3001               	movlw	1
  2396  05D4  00A5               	movwf	??_sprintf^(0+128)
  2397  05D5  0825               	movf	??_sprintf^(0+128),w
  2398  05D6  07BB               	addwf	sprintf@sp^(0+128),f
  2399  05D7                     l239:	
  2400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1223:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1225:    }
  2401                           
  2402                           
  2403                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1215:    wh
      +                          ile(c--) {
  2404  05D7  3001               	movlw	1
  2405  05D8  02C2               	subwf	sprintf@c^(0+128),f
  2406  05D9  0A42               	incf	sprintf@c^(0+128),w
  2407  05DA  1903               	btfsc	3,2
  2408  05DB  2E4C               	goto	l3309
  2409                           
  2410                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1219:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1220:      
      +                          tmpval.vd = val/dpowers[c];
  2411  05DC  0842               	movf	sprintf@c^(0+128),w
  2412  05DD  00A5               	movwf	??_sprintf^(0+128)
  2413  05DE  3001               	movlw	1
  2414  05DF                     u5575:	
  2415  05DF  1003               	clrc
  2416  05E0  0DA5               	rlf	??_sprintf^(0+128),f
  2417  05E1  3EFF               	addlw	-1
  2418  05E2  1D03               	skipz
  2419  05E3  2DDF               	goto	u5575
  2420  05E4  1003               	clrc
  2421  05E5  0D25               	rlf	??_sprintf^(0+128),w
  2422  05E6  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2423  05E7  0084               	movwf	4
  2424  05E8  160A  118A  200A  120A  118A  	fcall	stringdir
  2425  05ED  00F0               	movwf	___lldiv@divisor
  2426  05EE  160A  118A  200A  120A  118A  	fcall	stringdir
  2427  05F3  00F1               	movwf	___lldiv@divisor+1
  2428  05F4  160A  118A  200A  120A  118A  	fcall	stringdir
  2429  05F9  00F2               	movwf	___lldiv@divisor+2
  2430  05FA  160A  118A  200A  120A  118A  	fcall	stringdir
  2431  05FF  00F3               	movwf	___lldiv@divisor+3
  2432  0600  0834               	movf	(sprintf@val+3)^(0+128),w
  2433  0601  00F7               	movwf	___lldiv@dividend+3
  2434  0602  0833               	movf	(sprintf@val+2)^(0+128),w
  2435  0603  00F6               	movwf	___lldiv@dividend+2
  2436  0604  0832               	movf	(sprintf@val+1)^(0+128),w
  2437  0605  00F5               	movwf	___lldiv@dividend+1
  2438  0606  0831               	movf	sprintf@val^(0+128),w
  2439  0607  00F4               	movwf	___lldiv@dividend
  2440  0608  160A  118A  2121  120A  118A  	fcall	___lldiv
  2441  060D  0873               	movf	?___lldiv+3,w
  2442  060E  1683               	bsf	3,5	;RP0=1, select bank1
  2443  060F  1303               	bcf	3,6	;RP1=0, select bank1
  2444  0610  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2445  0611  0872               	movf	?___lldiv+2,w
  2446  0612  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2447  0613  0871               	movf	?___lldiv+1,w
  2448  0614  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2449  0615  0870               	movf	?___lldiv,w
  2450  0616  00B7               	movwf	sprintf@tmpval^(0+128)
  2451                           
  2452                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1221:      
      +                          tmpval.vd %= 10;
  2453  0617  3000               	movlw	0
  2454  0618  00F3               	movwf	___llmod@divisor+3
  2455  0619  3000               	movlw	0
  2456  061A  00F2               	movwf	___llmod@divisor+2
  2457  061B  3000               	movlw	0
  2458  061C  00F1               	movwf	___llmod@divisor+1
  2459  061D  300A               	movlw	10
  2460  061E  00F0               	movwf	___llmod@divisor
  2461  061F  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2462  0620  00F7               	movwf	___llmod@dividend+3
  2463  0621  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2464  0622  00F6               	movwf	___llmod@dividend+2
  2465  0623  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2466  0624  00F5               	movwf	___llmod@dividend+1
  2467  0625  0837               	movf	sprintf@tmpval^(0+128),w
  2468  0626  00F4               	movwf	___llmod@dividend
  2469  0627  160A  158A  27B4  120A  118A  	fcall	___llmod
  2470  062C  0873               	movf	?___llmod+3,w
  2471  062D  1683               	bsf	3,5	;RP0=1, select bank1
  2472  062E  1303               	bcf	3,6	;RP1=0, select bank1
  2473  062F  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2474  0630  0872               	movf	?___llmod+2,w
  2475  0631  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2476  0632  0871               	movf	?___llmod+1,w
  2477  0633  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2478  0634  0870               	movf	?___llmod,w
  2479  0635  00B7               	movwf	sprintf@tmpval^(0+128)
  2480                           
  2481                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1222:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
  2482  0636  0837               	movf	sprintf@tmpval^(0+128),w
  2483  0637  3E30               	addlw	48
  2484  0638  2DCD               	goto	L3
  2485  0639                     l3303:	
  2486                           
  2487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1227:     (
      +                          (*sp++ = ('0')));
  2488  0639  3030               	movlw	48
  2489  063A  1683               	bsf	3,5	;RP0=1, select bank1
  2490  063B  1303               	bcf	3,6	;RP1=0, select bank1
  2491  063C  00A5               	movwf	??_sprintf^(0+128)
  2492  063D  083B               	movf	sprintf@sp^(0+128),w
  2493  063E  0084               	movwf	4
  2494  063F  0825               	movf	??_sprintf^(0+128),w
  2495  0640  1383               	bcf	3,7	;select IRP bank0
  2496  0641  0080               	movwf	0
  2497  0642  3001               	movlw	1
  2498  0643  00A5               	movwf	??_sprintf^(0+128)
  2499  0644  0825               	movf	??_sprintf^(0+128),w
  2500  0645  07BB               	addwf	sprintf@sp^(0+128),f
  2501                           
  2502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1228:     e
      +                          exp--;
  2503  0646  30FF               	movlw	255
  2504  0647  07B5               	addwf	sprintf@eexp^(0+128),f
  2505  0648  1803               	skipnc
  2506  0649  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2507  064A  30FF               	movlw	255
  2508  064B  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2509  064C                     l3309:	
  2510                           
  2511                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1226:    wh
      +                          ile(eexp > 0) {
  2512  064C  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2513  064D  3A80               	xorlw	128
  2514  064E  00FF               	movwf	127
  2515  064F  3080               	movlw	128
  2516  0650  027F               	subwf	127,w
  2517  0651  1D03               	skipz
  2518  0652  2E55               	goto	u5595
  2519  0653  3001               	movlw	1
  2520  0654  0235               	subwf	sprintf@eexp^(0+128),w
  2521  0655                     u5595:	
  2522  0655  1803               	skipnc
  2523  0656  2E39               	goto	l3303
  2524                           
  2525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1230:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2526  0657  1683               	bsf	3,5	;RP0=1, select bank1
  2527  0658  1303               	bcf	3,6	;RP1=0, select bank1
  2528  0659  083D               	movf	(sprintf@prec+1)^(0+128),w
  2529  065A  3A80               	xorlw	128
  2530  065B  00FF               	movwf	127
  2531  065C  3080               	movlw	128
  2532  065D  027F               	subwf	127,w
  2533  065E  1D03               	skipz
  2534  065F  2E62               	goto	u5605
  2535  0660  3009               	movlw	9
  2536  0661  023C               	subwf	sprintf@prec^(0+128),w
  2537  0662                     u5605:	
  2538  0662  1C03               	skipc
  2539  0663  2E68               	goto	l3315
  2540                           
  2541                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1231:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
  2542  0664  3008               	movlw	8
  2543  0665  1683               	bsf	3,5	;RP0=1, select bank1
  2544  0666  1303               	bcf	3,6	;RP1=0, select bank1
  2545  0667  2E6B               	goto	L4
  2546  0668                     l3315:	
  2547                           
  2548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1233:     c
      +                           = (char)prec;
  2549  0668  1683               	bsf	3,5	;RP0=1, select bank1
  2550  0669  1303               	bcf	3,6	;RP1=0, select bank1
  2551  066A  083C               	movf	sprintf@prec^(0+128),w
  2552  066B                     L4:	
  2553  066B  00A5               	movwf	??_sprintf^(0+128)
  2554  066C  0825               	movf	??_sprintf^(0+128),w
  2555  066D  00C2               	movwf	sprintf@c^(0+128)
  2556                           
  2557                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1234:    pr
      +                          ec -= (int)c;
  2558  066E  0842               	movf	sprintf@c^(0+128),w
  2559  066F  00A5               	movwf	??_sprintf^(0+128)
  2560  0670  01A6               	clrf	(??_sprintf^(0+128)+1)
  2561  0671  0825               	movf	??_sprintf^(0+128),w
  2562  0672  02BC               	subwf	sprintf@prec^(0+128),f
  2563  0673  0826               	movf	(??_sprintf+1)^(0+128),w
  2564  0674  1C03               	skipc
  2565  0675  03BD               	decf	(sprintf@prec+1)^(0+128),f
  2566  0676  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  2567                           
  2568                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1238:    if
      +                          (c)
  2569  0677  0842               	movf	sprintf@c^(0+128),w
  2570  0678  1903               	btfsc	3,2
  2571  0679  2E85               	goto	l3323
  2572                           
  2573                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1240:     (
      +                          (*sp++ = ('.')));
  2574  067A  302E               	movlw	46
  2575  067B  00A5               	movwf	??_sprintf^(0+128)
  2576  067C  083B               	movf	sprintf@sp^(0+128),w
  2577  067D  0084               	movwf	4
  2578  067E  0825               	movf	??_sprintf^(0+128),w
  2579  067F  1383               	bcf	3,7	;select IRP bank0
  2580  0680  0080               	movwf	0
  2581  0681  3001               	movlw	1
  2582  0682  00A5               	movwf	??_sprintf^(0+128)
  2583  0683  0825               	movf	??_sprintf^(0+128),w
  2584  0684  07BB               	addwf	sprintf@sp^(0+128),f
  2585  0685                     l3323:	
  2586                           
  2587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2588  0685  0842               	movf	sprintf@c^(0+128),w
  2589  0686  120A  158A  24B7  120A  118A  	fcall	_scale
  2590  068B  1283               	bcf	3,5	;RP0=0, select bank0
  2591  068C  1303               	bcf	3,6	;RP1=0, select bank0
  2592  068D  0843               	movf	?_scale+3,w
  2593  068E  1683               	bsf	3,5	;RP0=1, select bank1
  2594  068F  1303               	bcf	3,6	;RP1=0, select bank1
  2595  0690  00AD               	movwf	(_sprintf$874+3)^(0+128)
  2596  0691  1283               	bcf	3,5	;RP0=0, select bank0
  2597  0692  1303               	bcf	3,6	;RP1=0, select bank0
  2598  0693  0842               	movf	?_scale+2,w
  2599  0694  1683               	bsf	3,5	;RP0=1, select bank1
  2600  0695  1303               	bcf	3,6	;RP1=0, select bank1
  2601  0696  00AC               	movwf	(_sprintf$874+2)^(0+128)
  2602  0697  1283               	bcf	3,5	;RP0=0, select bank0
  2603  0698  1303               	bcf	3,6	;RP1=0, select bank0
  2604  0699  0841               	movf	?_scale+1,w
  2605  069A  1683               	bsf	3,5	;RP0=1, select bank1
  2606  069B  1303               	bcf	3,6	;RP1=0, select bank1
  2607  069C  00AB               	movwf	(_sprintf$874+1)^(0+128)
  2608  069D  1283               	bcf	3,5	;RP0=0, select bank0
  2609  069E  1303               	bcf	3,6	;RP1=0, select bank0
  2610  069F  0840               	movf	?_scale,w
  2611  06A0  1683               	bsf	3,5	;RP0=1, select bank1
  2612  06A1  1303               	bcf	3,6	;RP1=0, select bank1
  2613  06A2  00AA               	movwf	_sprintf$874^(0+128)
  2614                           
  2615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2616  06A3  082D               	movf	(_sprintf$874+3)^(0+128),w
  2617  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  2618  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  2619  06A6  00AD               	movwf	___flmul@a+3
  2620  06A7  1683               	bsf	3,5	;RP0=1, select bank1
  2621  06A8  1303               	bcf	3,6	;RP1=0, select bank1
  2622  06A9  082C               	movf	(_sprintf$874+2)^(0+128),w
  2623  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  2624  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  2625  06AC  00AC               	movwf	___flmul@a+2
  2626  06AD  1683               	bsf	3,5	;RP0=1, select bank1
  2627  06AE  1303               	bcf	3,6	;RP1=0, select bank1
  2628  06AF  082B               	movf	(_sprintf$874+1)^(0+128),w
  2629  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  2630  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  2631  06B2  00AB               	movwf	___flmul@a+1
  2632  06B3  1683               	bsf	3,5	;RP0=1, select bank1
  2633  06B4  1303               	bcf	3,6	;RP1=0, select bank1
  2634  06B5  082A               	movf	_sprintf$874^(0+128),w
  2635  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  2636  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  2637  06B8  00AA               	movwf	___flmul@a
  2638  06B9  1683               	bsf	3,5	;RP0=1, select bank1
  2639  06BA  1303               	bcf	3,6	;RP1=0, select bank1
  2640  06BB  0841               	movf	(sprintf@fval+3)^(0+128),w
  2641  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  2642  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  2643  06BE  00A9               	movwf	___flmul@b+3
  2644  06BF  1683               	bsf	3,5	;RP0=1, select bank1
  2645  06C0  1303               	bcf	3,6	;RP1=0, select bank1
  2646  06C1  0840               	movf	(sprintf@fval+2)^(0+128),w
  2647  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  2648  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  2649  06C4  00A8               	movwf	___flmul@b+2
  2650  06C5  1683               	bsf	3,5	;RP0=1, select bank1
  2651  06C6  1303               	bcf	3,6	;RP1=0, select bank1
  2652  06C7  083F               	movf	(sprintf@fval+1)^(0+128),w
  2653  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  2654  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  2655  06CA  00A7               	movwf	___flmul@b+1
  2656  06CB  1683               	bsf	3,5	;RP0=1, select bank1
  2657  06CC  1303               	bcf	3,6	;RP1=0, select bank1
  2658  06CD  083E               	movf	sprintf@fval^(0+128),w
  2659  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  2660  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  2661  06D0  00A6               	movwf	___flmul@b
  2662  06D1  120A  158A  21A2  120A  118A  	fcall	___flmul
  2663  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  2664  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  2665  06D8  0829               	movf	?___flmul+3,w
  2666  06D9  00D6               	movwf	___fltol@f1+3
  2667  06DA  0828               	movf	?___flmul+2,w
  2668  06DB  00D5               	movwf	___fltol@f1+2
  2669  06DC  0827               	movf	?___flmul+1,w
  2670  06DD  00D4               	movwf	___fltol@f1+1
  2671  06DE  0826               	movf	?___flmul,w
  2672  06DF  00D3               	movwf	___fltol@f1
  2673  06E0  160A  118A  21E0  120A  118A  	fcall	___fltol
  2674  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  2675  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  2676  06E7  0856               	movf	?___fltol+3,w
  2677  06E8  1683               	bsf	3,5	;RP0=1, select bank1
  2678  06E9  1303               	bcf	3,6	;RP1=0, select bank1
  2679  06EA  00B4               	movwf	(sprintf@val+3)^(0+128)
  2680  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  2681  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  2682  06ED  0855               	movf	?___fltol+2,w
  2683  06EE  1683               	bsf	3,5	;RP0=1, select bank1
  2684  06EF  1303               	bcf	3,6	;RP1=0, select bank1
  2685  06F0  00B3               	movwf	(sprintf@val+2)^(0+128)
  2686  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  2687  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  2688  06F3  0854               	movf	?___fltol+1,w
  2689  06F4  1683               	bsf	3,5	;RP0=1, select bank1
  2690  06F5  1303               	bcf	3,6	;RP1=0, select bank1
  2691  06F6  00B2               	movwf	(sprintf@val+1)^(0+128)
  2692  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  2693  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  2694  06F9  0853               	movf	?___fltol,w
  2695  06FA  1683               	bsf	3,5	;RP0=1, select bank1
  2696  06FB  1303               	bcf	3,6	;RP1=0, select bank1
  2697  06FC                     L5:	
  2698  06FC  00B1               	movwf	sprintf@val^(0+128)
  2699                           
  2700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  2701  06FD  3001               	movlw	1
  2702  06FE  02C2               	subwf	sprintf@c^(0+128),f
  2703  06FF  0A42               	incf	sprintf@c^(0+128),w
  2704  0700  1903               	btfsc	3,2
  2705  0701  2FB4               	goto	l3343
  2706                           
  2707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1248:     t
      +                          mpval.vd = val/dpowers[c];
  2708                           
  2709                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  2710  0702  0842               	movf	sprintf@c^(0+128),w
  2711  0703  00A5               	movwf	??_sprintf^(0+128)
  2712  0704  3001               	movlw	1
  2713  0705                     u5625:	
  2714  0705  1003               	clrc
  2715  0706  0DA5               	rlf	??_sprintf^(0+128),f
  2716  0707  3EFF               	addlw	-1
  2717  0708  1D03               	skipz
  2718  0709  2F05               	goto	u5625
  2719  070A  1003               	clrc
  2720  070B  0D25               	rlf	??_sprintf^(0+128),w
  2721  070C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2722  070D  0084               	movwf	4
  2723  070E  160A  118A  200A  120A  118A  	fcall	stringdir
  2724  0713  00F0               	movwf	___lldiv@divisor
  2725  0714  160A  118A  200A  120A  118A  	fcall	stringdir
  2726  0719  00F1               	movwf	___lldiv@divisor+1
  2727  071A  160A  118A  200A  120A  118A  	fcall	stringdir
  2728  071F  00F2               	movwf	___lldiv@divisor+2
  2729  0720  160A  118A  200A  120A  118A  	fcall	stringdir
  2730  0725  00F3               	movwf	___lldiv@divisor+3
  2731  0726  0834               	movf	(sprintf@val+3)^(0+128),w
  2732  0727  00F7               	movwf	___lldiv@dividend+3
  2733  0728  0833               	movf	(sprintf@val+2)^(0+128),w
  2734  0729  00F6               	movwf	___lldiv@dividend+2
  2735  072A  0832               	movf	(sprintf@val+1)^(0+128),w
  2736  072B  00F5               	movwf	___lldiv@dividend+1
  2737  072C  0831               	movf	sprintf@val^(0+128),w
  2738  072D  00F4               	movwf	___lldiv@dividend
  2739  072E  160A  118A  2121  120A  118A  	fcall	___lldiv
  2740  0733  0873               	movf	?___lldiv+3,w
  2741  0734  1683               	bsf	3,5	;RP0=1, select bank1
  2742  0735  1303               	bcf	3,6	;RP1=0, select bank1
  2743  0736  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2744  0737  0872               	movf	?___lldiv+2,w
  2745  0738  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2746  0739  0871               	movf	?___lldiv+1,w
  2747  073A  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2748  073B  0870               	movf	?___lldiv,w
  2749  073C  00B7               	movwf	sprintf@tmpval^(0+128)
  2750                           
  2751                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1249:     t
      +                          mpval.vd %= 10;
  2752  073D  3000               	movlw	0
  2753  073E  00F3               	movwf	___llmod@divisor+3
  2754  073F  3000               	movlw	0
  2755  0740  00F2               	movwf	___llmod@divisor+2
  2756  0741  3000               	movlw	0
  2757  0742  00F1               	movwf	___llmod@divisor+1
  2758  0743  300A               	movlw	10
  2759  0744  00F0               	movwf	___llmod@divisor
  2760  0745  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2761  0746  00F7               	movwf	___llmod@dividend+3
  2762  0747  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2763  0748  00F6               	movwf	___llmod@dividend+2
  2764  0749  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2765  074A  00F5               	movwf	___llmod@dividend+1
  2766  074B  0837               	movf	sprintf@tmpval^(0+128),w
  2767  074C  00F4               	movwf	___llmod@dividend
  2768  074D  160A  158A  27B4  120A  118A  	fcall	___llmod
  2769  0752  0873               	movf	?___llmod+3,w
  2770  0753  1683               	bsf	3,5	;RP0=1, select bank1
  2771  0754  1303               	bcf	3,6	;RP1=0, select bank1
  2772  0755  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2773  0756  0872               	movf	?___llmod+2,w
  2774  0757  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2775  0758  0871               	movf	?___llmod+1,w
  2776  0759  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2777  075A  0870               	movf	?___llmod,w
  2778  075B  00B7               	movwf	sprintf@tmpval^(0+128)
  2779                           
  2780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1250:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
  2781  075C  0837               	movf	sprintf@tmpval^(0+128),w
  2782  075D  3E30               	addlw	48
  2783  075E  00A5               	movwf	??_sprintf^(0+128)
  2784  075F  083B               	movf	sprintf@sp^(0+128),w
  2785  0760  0084               	movwf	4
  2786  0761  0825               	movf	??_sprintf^(0+128),w
  2787  0762  1383               	bcf	3,7	;select IRP bank0
  2788  0763  0080               	movwf	0
  2789  0764  3001               	movlw	1
  2790  0765  00A5               	movwf	??_sprintf^(0+128)
  2791  0766  0825               	movf	??_sprintf^(0+128),w
  2792  0767  07BB               	addwf	sprintf@sp^(0+128),f
  2793                           
  2794                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1251:     v
      +                          al %= dpowers[c];
  2795  0768  0842               	movf	sprintf@c^(0+128),w
  2796  0769  00A5               	movwf	??_sprintf^(0+128)
  2797  076A  3001               	movlw	1
  2798  076B                     u5635:	
  2799  076B  1003               	clrc
  2800  076C  0DA5               	rlf	??_sprintf^(0+128),f
  2801  076D  3EFF               	addlw	-1
  2802  076E  1D03               	skipz
  2803  076F  2F6B               	goto	u5635
  2804  0770  1003               	clrc
  2805  0771  0D25               	rlf	??_sprintf^(0+128),w
  2806  0772  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2807  0773  0084               	movwf	4
  2808  0774  160A  118A  200A  120A  118A  	fcall	stringdir
  2809  0779  00F0               	movwf	___llmod@divisor
  2810  077A  160A  118A  200A  120A  118A  	fcall	stringdir
  2811  077F  00F1               	movwf	___llmod@divisor+1
  2812  0780  160A  118A  200A  120A  118A  	fcall	stringdir
  2813  0785  00F2               	movwf	___llmod@divisor+2
  2814  0786  160A  118A  200A  120A  118A  	fcall	stringdir
  2815  078B  00F3               	movwf	___llmod@divisor+3
  2816  078C  0834               	movf	(sprintf@val+3)^(0+128),w
  2817  078D  00F7               	movwf	___llmod@dividend+3
  2818  078E  0833               	movf	(sprintf@val+2)^(0+128),w
  2819  078F  00F6               	movwf	___llmod@dividend+2
  2820  0790  0832               	movf	(sprintf@val+1)^(0+128),w
  2821  0791  00F5               	movwf	___llmod@dividend+1
  2822  0792  0831               	movf	sprintf@val^(0+128),w
  2823  0793  00F4               	movwf	___llmod@dividend
  2824  0794  160A  158A  27B4  120A  118A  	fcall	___llmod
  2825  0799  0873               	movf	?___llmod+3,w
  2826  079A  1683               	bsf	3,5	;RP0=1, select bank1
  2827  079B  1303               	bcf	3,6	;RP1=0, select bank1
  2828  079C  00B4               	movwf	(sprintf@val+3)^(0+128)
  2829  079D  0872               	movf	?___llmod+2,w
  2830  079E  00B3               	movwf	(sprintf@val+2)^(0+128)
  2831  079F  0871               	movf	?___llmod+1,w
  2832  07A0  00B2               	movwf	(sprintf@val+1)^(0+128)
  2833  07A1  0870               	movf	?___llmod,w
  2834  07A2  2EFC               	goto	L5
  2835  07A3                     l3337:	
  2836                           
  2837                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1255:     (
      +                          (*sp++ = ('0')));
  2838  07A3  3030               	movlw	48
  2839  07A4  00A5               	movwf	??_sprintf^(0+128)
  2840  07A5  083B               	movf	sprintf@sp^(0+128),w
  2841  07A6  0084               	movwf	4
  2842  07A7  0825               	movf	??_sprintf^(0+128),w
  2843  07A8  1383               	bcf	3,7	;select IRP bank0
  2844  07A9  0080               	movwf	0
  2845  07AA  3001               	movlw	1
  2846  07AB  00A5               	movwf	??_sprintf^(0+128)
  2847  07AC  0825               	movf	??_sprintf^(0+128),w
  2848  07AD  07BB               	addwf	sprintf@sp^(0+128),f
  2849                           
  2850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1256:     p
      +                          rec--;
  2851  07AE  30FF               	movlw	255
  2852  07AF  07BC               	addwf	sprintf@prec^(0+128),f
  2853  07B0  1803               	skipnc
  2854  07B1  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  2855  07B2  30FF               	movlw	255
  2856  07B3  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  2857  07B4                     l3343:	
  2858                           
  2859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(prec) {
  2860  07B4  083C               	movf	sprintf@prec^(0+128),w
  2861  07B5  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  2862  07B6  1903               	btfsc	3,2
  2863  07B7  2A0C               	goto	l3363
  2864  07B8  2FA3               	goto	l3337
  2865  07B9                     l3345:	
  2866                           
  2867                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1309:   if(
      +                          prec == 0 && val == 0)
  2868  07B9  083C               	movf	sprintf@prec^(0+128),w
  2869  07BA  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  2870  07BB  1D03               	btfss	3,2
  2871  07BC  2FC9               	goto	l254
  2872  07BD  0834               	movf	(sprintf@val+3)^(0+128),w
  2873  07BE  0433               	iorwf	(sprintf@val+2)^(0+128),w
  2874  07BF  0432               	iorwf	(sprintf@val+1)^(0+128),w
  2875  07C0  0431               	iorwf	sprintf@val^(0+128),w
  2876  07C1  1D03               	skipz
  2877  07C2  2FC9               	goto	l254
  2878                           
  2879                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1310:    pr
      +                          ec++;
  2880  07C3  3001               	movlw	1
  2881  07C4  07BC               	addwf	sprintf@prec^(0+128),f
  2882  07C5  1803               	skipnc
  2883  07C6  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  2884  07C7  3000               	movlw	0
  2885  07C8  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  2886  07C9                     l254:	
  2887                           
  2888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1358:   if(
      +                          c < prec)
  2889  07C9  083D               	movf	(sprintf@prec+1)^(0+128),w
  2890  07CA  3A80               	xorlw	128
  2891  07CB  3C80               	sublw	128
  2892  07CC  1D03               	skipz
  2893  07CD  2FD0               	goto	u5685
  2894  07CE  083C               	movf	sprintf@prec^(0+128),w
  2895  07CF  0242               	subwf	sprintf@c^(0+128),w
  2896  07D0                     u5685:	
  2897  07D0  1C03               	btfss	3,0
  2898  07D1  2FDF               	goto	l3357
  2899  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  2900  07D3  1303               	bcf	3,6	;RP1=0, select bank1
  2901  07D4  083D               	movf	(sprintf@prec+1)^(0+128),w
  2902  07D5  3A80               	xorlw	128
  2903  07D6  00A5               	movwf	??_sprintf^(0+128)
  2904  07D7  3080               	movlw	128
  2905  07D8  0225               	subwf	??_sprintf^(0+128),w
  2906  07D9  1D03               	skipz
  2907  07DA  2FDD               	goto	u5695
  2908  07DB  0842               	movf	sprintf@c^(0+128),w
  2909  07DC  023C               	subwf	sprintf@prec^(0+128),w
  2910  07DD                     u5695:	
  2911  07DD  1C03               	btfss	3,0
  2912  07DE  2FDF               	goto	l3357
  2913  07DF                     l3357:	
  2914                           
  2915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  2916  07DF  3003               	movlw	3
  2917  07E0  1683               	bsf	3,5	;RP0=1, select bank1
  2918  07E1  1303               	bcf	3,6	;RP1=0, select bank1
  2919  07E2  052F               	andwf	sprintf@flag^(0+128),w
  2920  07E3  00A5               	movwf	??_sprintf^(0+128)
  2921  07E4  3000               	movlw	0
  2922  07E5  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2923  07E6  00A6               	movwf	(??_sprintf+1)^(0+128)
  2924  07E7  0825               	movf	??_sprintf^(0+128),w
  2925  07E8  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2926  07E9  1903               	btfsc	3,2
  2927  07EA  2A0C               	goto	l3363
  2928                           
  2929                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  2930  07EB  302D               	movlw	45
  2931  07EC                     L6:	
  2932  07EC  00A5               	movwf	??_sprintf^(0+128)
  2933  07ED  083B               	movf	sprintf@sp^(0+128),w
  2934  07EE  0084               	movwf	4
  2935  07EF  0825               	movf	??_sprintf^(0+128),w
  2936  07F0  1383               	bcf	3,7	;select IRP bank0
  2937  07F1  0080               	movwf	0
  2938  07F2  3001               	movlw	1
  2939  07F3  00A5               	movwf	??_sprintf^(0+128)
  2940  07F4  0825               	movf	??_sprintf^(0+128),w
  2941  07F5  07BB               	addwf	sprintf@sp^(0+128),f
  2942  07F6  2A0C               	goto	l3363
  2943  07F7                     l3365:	
  2944                           
  2945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  2946  07F7  083B               	movf	sprintf@sp^(0+128),w
  2947  07F8  0084               	movwf	4
  2948  07F9  1383               	bcf	3,7	;select IRP bank0
  2949  07FA  0180               	clrf	0
  2950  07FB  0008               	return
  2951  07FC                     __end_of_sprintf:	
  2952                           
  2953                           	psect	text2
  2954  0CB7                     __ptext2:	
  2955 ;; *************** function _scale *****************
  2956 ;; Defined at:
  2957 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  scl             1    wreg     char 
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;  scl             1   50[BANK0 ] char 
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  4   32[BANK0 ] char 
  2964 ;; Registers used:
  2965 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2971 ;;      Params:         0       4       0       0       0
  2972 ;;      Locals:         0       5       0       0       0
  2973 ;;      Temps:          0      10       0       0       0
  2974 ;;      Totals:         0      19       0       0       0
  2975 ;;Total ram usage:       19 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; Hardware stack levels required when called:    2
  2978 ;; This function calls:
  2979 ;;		___awdiv
  2980 ;;		___awmod
  2981 ;;		___flmul
  2982 ;; This function is called by:
  2983 ;;		_sprintf
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           
  2988                           ;psect for function _scale
  2989  0CB7                     _scale:	
  2990                           
  2991                           ;incstack = 0
  2992                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2993                           ;scale@scl stored from wreg
  2994  0CB7  1283               	bcf	3,5	;RP0=0, select bank0
  2995  0CB8  1303               	bcf	3,6	;RP1=0, select bank0
  2996  0CB9  00D2               	movwf	scale@scl
  2997                           
  2998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  2999  0CBA  1FD2               	btfss	scale@scl,7
  3000  0CBB  2E5F               	goto	l2773
  3001                           
  3002                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  3003  0CBC  09D2               	comf	scale@scl,f
  3004  0CBD  0AD2               	incf	scale@scl,f
  3005                           
  3006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  3007  0CBE  0852               	movf	scale@scl,w
  3008  0CBF  3A80               	xorlw	128
  3009  0CC0  3E12               	addlw	-238
  3010  0CC1  1C03               	skipc
  3011  0CC2  2DA9               	goto	l2763
  3012                           
  3013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3014  0CC3  300A               	movlw	10
  3015  0CC4  00F7               	movwf	___awdiv@divisor
  3016  0CC5  3000               	movlw	0
  3017  0CC6  00F8               	movwf	___awdiv@divisor+1
  3018  0CC7  0852               	movf	scale@scl,w
  3019  0CC8  00F2               	movwf	___awmod@dividend
  3020  0CC9  01F3               	clrf	___awmod@dividend+1
  3021  0CCA  1BF2               	btfsc	___awmod@dividend,7
  3022  0CCB  03F3               	decf	___awmod@dividend+1,f
  3023  0CCC  3064               	movlw	100
  3024  0CCD  00F0               	movwf	___awmod@divisor
  3025  0CCE  3000               	movlw	0
  3026  0CCF  00F1               	movwf	___awmod@divisor+1
  3027  0CD0  160A  158A  2769  120A  158A  	fcall	___awmod
  3028  0CD5  0871               	movf	?___awmod+1,w
  3029  0CD6  00FA               	movwf	___awdiv@dividend+1
  3030  0CD7  0870               	movf	?___awmod,w
  3031  0CD8  00F9               	movwf	___awdiv@dividend
  3032  0CD9  160A  118A  20C6  120A  158A  	fcall	___awdiv
  3033  0CDE  0877               	movf	?___awdiv,w
  3034  0CDF  1283               	bcf	3,5	;RP0=0, select bank0
  3035  0CE0  1303               	bcf	3,6	;RP1=0, select bank0
  3036  0CE1  00C4               	movwf	??_scale
  3037  0CE2  3001               	movlw	1
  3038  0CE3                     u4345:	
  3039  0CE3  1003               	clrc
  3040  0CE4  0DC4               	rlf	??_scale,f
  3041  0CE5  3EFF               	addlw	-1
  3042  0CE6  1D03               	skipz
  3043  0CE7  2CE3               	goto	u4345
  3044  0CE8  1003               	clrc
  3045  0CE9  0D44               	rlf	??_scale,w
  3046  0CEA  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3047  0CEB  0084               	movwf	4
  3048  0CEC  160A  118A  200A  120A  158A  	fcall	stringdir
  3049  0CF1  00C5               	movwf	??_scale+1
  3050  0CF2  160A  118A  200A  120A  158A  	fcall	stringdir
  3051  0CF7  00C6               	movwf	??_scale+2
  3052  0CF8  160A  118A  200A  120A  158A  	fcall	stringdir
  3053  0CFD  00C7               	movwf	??_scale+3
  3054  0CFE  160A  118A  200A  120A  158A  	fcall	stringdir
  3055  0D03  00C8               	movwf	??_scale+4
  3056  0D04  0848               	movf	??_scale+4,w
  3057  0D05  00A9               	movwf	___flmul@b+3
  3058  0D06  0847               	movf	??_scale+3,w
  3059  0D07  00A8               	movwf	___flmul@b+2
  3060  0D08  0846               	movf	??_scale+2,w
  3061  0D09  00A7               	movwf	___flmul@b+1
  3062  0D0A  0845               	movf	??_scale+1,w
  3063  0D0B  00A6               	movwf	___flmul@b
  3064  0D0C  3064               	movlw	100
  3065  0D0D  00F7               	movwf	___awdiv@divisor
  3066  0D0E  3000               	movlw	0
  3067  0D0F  00F8               	movwf	___awdiv@divisor+1
  3068  0D10  0852               	movf	scale@scl,w
  3069  0D11  00F9               	movwf	___awdiv@dividend
  3070  0D12  01FA               	clrf	___awdiv@dividend+1
  3071  0D13  1BF9               	btfsc	___awdiv@dividend,7
  3072  0D14  03FA               	decf	___awdiv@dividend+1,f
  3073  0D15  160A  118A  20C6  120A  158A  	fcall	___awdiv
  3074  0D1A  0877               	movf	?___awdiv,w
  3075  0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  3076  0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  3077  0D1D  00C9               	movwf	??_scale+5
  3078  0D1E  3001               	movlw	1
  3079  0D1F                     u4355:	
  3080  0D1F  1003               	clrc
  3081  0D20  0DC9               	rlf	??_scale+5,f
  3082  0D21  3EFF               	addlw	-1
  3083  0D22  1D03               	skipz
  3084  0D23  2D1F               	goto	u4355
  3085  0D24  1003               	clrc
  3086  0D25  0D49               	rlf	??_scale+5,w
  3087  0D26  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3088  0D27  0084               	movwf	4
  3089  0D28  160A  118A  200A  120A  158A  	fcall	stringdir
  3090  0D2D  00CA               	movwf	??_scale+6
  3091  0D2E  160A  118A  200A  120A  158A  	fcall	stringdir
  3092  0D33  00CB               	movwf	??_scale+7
  3093  0D34  160A  118A  200A  120A  158A  	fcall	stringdir
  3094  0D39  00CC               	movwf	??_scale+8
  3095  0D3A  160A  118A  200A  120A  158A  	fcall	stringdir
  3096  0D3F  00CD               	movwf	??_scale+9
  3097  0D40  084D               	movf	??_scale+9,w
  3098  0D41  00AD               	movwf	___flmul@a+3
  3099  0D42  084C               	movf	??_scale+8,w
  3100  0D43  00AC               	movwf	___flmul@a+2
  3101  0D44  084B               	movf	??_scale+7,w
  3102  0D45  00AB               	movwf	___flmul@a+1
  3103  0D46  084A               	movf	??_scale+6,w
  3104  0D47  00AA               	movwf	___flmul@a
  3105  0D48  120A  158A  21A2  120A  158A  	fcall	___flmul
  3106  0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  3107  0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  3108  0D4F  0829               	movf	?___flmul+3,w
  3109  0D50  00D1               	movwf	_scale$873+3
  3110  0D51  0828               	movf	?___flmul+2,w
  3111  0D52  00D0               	movwf	_scale$873+2
  3112  0D53  0827               	movf	?___flmul+1,w
  3113  0D54  00CF               	movwf	_scale$873+1
  3114  0D55  0826               	movf	?___flmul,w
  3115  0D56  00CE               	movwf	_scale$873
  3116                           
  3117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3118  0D57  300A               	movlw	10
  3119  0D58  00F0               	movwf	___awmod@divisor
  3120  0D59  3000               	movlw	0
  3121  0D5A  00F1               	movwf	___awmod@divisor+1
  3122  0D5B  0852               	movf	scale@scl,w
  3123  0D5C  00F2               	movwf	___awmod@dividend
  3124  0D5D  01F3               	clrf	___awmod@dividend+1
  3125  0D5E  1BF2               	btfsc	___awmod@dividend,7
  3126  0D5F  03F3               	decf	___awmod@dividend+1,f
  3127  0D60  160A  158A  2769  120A  158A  	fcall	___awmod
  3128  0D65  0870               	movf	?___awmod,w
  3129  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  3130  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  3131  0D68  00C4               	movwf	??_scale
  3132  0D69  3001               	movlw	1
  3133  0D6A                     u4365:	
  3134  0D6A  1003               	clrc
  3135  0D6B  0DC4               	rlf	??_scale,f
  3136  0D6C  3EFF               	addlw	-1
  3137  0D6D  1D03               	skipz
  3138  0D6E  2D6A               	goto	u4365
  3139  0D6F  1003               	clrc
  3140  0D70  0D44               	rlf	??_scale,w
  3141  0D71  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3142  0D72  0084               	movwf	4
  3143  0D73  160A  118A  200A  120A  158A  	fcall	stringdir
  3144  0D78  00C5               	movwf	??_scale+1
  3145  0D79  160A  118A  200A  120A  158A  	fcall	stringdir
  3146  0D7E  00C6               	movwf	??_scale+2
  3147  0D7F  160A  118A  200A  120A  158A  	fcall	stringdir
  3148  0D84  00C7               	movwf	??_scale+3
  3149  0D85  160A  118A  200A  120A  158A  	fcall	stringdir
  3150  0D8A  00C8               	movwf	??_scale+4
  3151  0D8B  0848               	movf	??_scale+4,w
  3152  0D8C  00A9               	movwf	___flmul@b+3
  3153  0D8D  0847               	movf	??_scale+3,w
  3154  0D8E  00A8               	movwf	___flmul@b+2
  3155  0D8F  0846               	movf	??_scale+2,w
  3156  0D90  00A7               	movwf	___flmul@b+1
  3157  0D91  0845               	movf	??_scale+1,w
  3158  0D92  00A6               	movwf	___flmul@b
  3159  0D93  0851               	movf	_scale$873+3,w
  3160  0D94  00AD               	movwf	___flmul@a+3
  3161  0D95  0850               	movf	_scale$873+2,w
  3162  0D96  00AC               	movwf	___flmul@a+2
  3163  0D97  084F               	movf	_scale$873+1,w
  3164  0D98  00AB               	movwf	___flmul@a+1
  3165  0D99  084E               	movf	_scale$873,w
  3166  0D9A  00AA               	movwf	___flmul@a
  3167  0D9B  120A  158A  21A2   	fcall	___flmul
  3168  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  3169  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  3170  0DA0  0829               	movf	?___flmul+3,w
  3171  0DA1  00C3               	movwf	?_scale+3
  3172  0DA2  0828               	movf	?___flmul+2,w
  3173  0DA3  00C2               	movwf	?_scale+2
  3174  0DA4  0827               	movf	?___flmul+1,w
  3175  0DA5  00C1               	movwf	?_scale+1
  3176  0DA6  0826               	movf	?___flmul,w
  3177  0DA7  00C0               	movwf	?_scale
  3178  0DA8  0008               	return
  3179  0DA9                     l2763:	
  3180  0DA9  0852               	movf	scale@scl,w
  3181  0DAA  3A80               	xorlw	128
  3182  0DAB  3E75               	addlw	-139
  3183  0DAC  1C03               	skipc
  3184  0DAD  2E34               	goto	l2769
  3185                           
  3186                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3187  0DAE  300A               	movlw	10
  3188  0DAF  00F0               	movwf	___awmod@divisor
  3189  0DB0  3000               	movlw	0
  3190  0DB1  00F1               	movwf	___awmod@divisor+1
  3191  0DB2  0852               	movf	scale@scl,w
  3192  0DB3  00F2               	movwf	___awmod@dividend
  3193  0DB4  01F3               	clrf	___awmod@dividend+1
  3194  0DB5  1BF2               	btfsc	___awmod@dividend,7
  3195  0DB6  03F3               	decf	___awmod@dividend+1,f
  3196  0DB7  160A  158A  2769  120A  158A  	fcall	___awmod
  3197  0DBC  0870               	movf	?___awmod,w
  3198  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  3199  0DBE  1303               	bcf	3,6	;RP1=0, select bank0
  3200  0DBF  00C4               	movwf	??_scale
  3201  0DC0  3001               	movlw	1
  3202  0DC1                     u4385:	
  3203  0DC1  1003               	clrc
  3204  0DC2  0DC4               	rlf	??_scale,f
  3205  0DC3  3EFF               	addlw	-1
  3206  0DC4  1D03               	skipz
  3207  0DC5  2DC1               	goto	u4385
  3208  0DC6  1003               	clrc
  3209  0DC7  0D44               	rlf	??_scale,w
  3210  0DC8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3211  0DC9  0084               	movwf	4
  3212  0DCA  160A  118A  200A  120A  158A  	fcall	stringdir
  3213  0DCF  00C5               	movwf	??_scale+1
  3214  0DD0  160A  118A  200A  120A  158A  	fcall	stringdir
  3215  0DD5  00C6               	movwf	??_scale+2
  3216  0DD6  160A  118A  200A  120A  158A  	fcall	stringdir
  3217  0DDB  00C7               	movwf	??_scale+3
  3218  0DDC  160A  118A  200A  120A  158A  	fcall	stringdir
  3219  0DE1  00C8               	movwf	??_scale+4
  3220  0DE2  0848               	movf	??_scale+4,w
  3221  0DE3  00A9               	movwf	___flmul@b+3
  3222  0DE4  0847               	movf	??_scale+3,w
  3223  0DE5  00A8               	movwf	___flmul@b+2
  3224  0DE6  0846               	movf	??_scale+2,w
  3225  0DE7  00A7               	movwf	___flmul@b+1
  3226  0DE8  0845               	movf	??_scale+1,w
  3227  0DE9  00A6               	movwf	___flmul@b
  3228  0DEA  300A               	movlw	10
  3229  0DEB  00F7               	movwf	___awdiv@divisor
  3230  0DEC  3000               	movlw	0
  3231  0DED  00F8               	movwf	___awdiv@divisor+1
  3232  0DEE  0852               	movf	scale@scl,w
  3233  0DEF  00F9               	movwf	___awdiv@dividend
  3234  0DF0  01FA               	clrf	___awdiv@dividend+1
  3235  0DF1  1BF9               	btfsc	___awdiv@dividend,7
  3236  0DF2  03FA               	decf	___awdiv@dividend+1,f
  3237  0DF3  160A  118A  20C6  120A  158A  	fcall	___awdiv
  3238  0DF8  0877               	movf	?___awdiv,w
  3239  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  3240  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  3241  0DFB  00C9               	movwf	??_scale+5
  3242  0DFC  3001               	movlw	1
  3243  0DFD                     u4395:	
  3244  0DFD  1003               	clrc
  3245  0DFE  0DC9               	rlf	??_scale+5,f
  3246  0DFF  3EFF               	addlw	-1
  3247  0E00  1D03               	skipz
  3248  0E01  2DFD               	goto	u4395
  3249  0E02  1003               	clrc
  3250  0E03  0D49               	rlf	??_scale+5,w
  3251  0E04  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3252  0E05  0084               	movwf	4
  3253  0E06  160A  118A  200A  120A  158A  	fcall	stringdir
  3254  0E0B  00CA               	movwf	??_scale+6
  3255  0E0C  160A  118A  200A  120A  158A  	fcall	stringdir
  3256  0E11  00CB               	movwf	??_scale+7
  3257  0E12  160A  118A  200A  120A  158A  	fcall	stringdir
  3258  0E17  00CC               	movwf	??_scale+8
  3259  0E18  160A  118A  200A  120A  158A  	fcall	stringdir
  3260  0E1D  00CD               	movwf	??_scale+9
  3261  0E1E  084D               	movf	??_scale+9,w
  3262  0E1F  00AD               	movwf	___flmul@a+3
  3263  0E20  084C               	movf	??_scale+8,w
  3264  0E21  00AC               	movwf	___flmul@a+2
  3265  0E22  084B               	movf	??_scale+7,w
  3266  0E23  00AB               	movwf	___flmul@a+1
  3267  0E24  084A               	movf	??_scale+6,w
  3268  0E25  00AA               	movwf	___flmul@a
  3269  0E26  120A  158A  21A2   	fcall	___flmul
  3270  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  3271  0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  3272  0E2B  0829               	movf	?___flmul+3,w
  3273  0E2C  00C3               	movwf	?_scale+3
  3274  0E2D  0828               	movf	?___flmul+2,w
  3275  0E2E  00C2               	movwf	?_scale+2
  3276  0E2F  0827               	movf	?___flmul+1,w
  3277  0E30  00C1               	movwf	?_scale+1
  3278  0E31  0826               	movf	?___flmul,w
  3279  0E32  00C0               	movwf	?_scale
  3280  0E33  0008               	return
  3281  0E34                     l2769:	
  3282                           
  3283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  3284  0E34  0852               	movf	scale@scl,w
  3285  0E35  00C4               	movwf	??_scale
  3286  0E36  3001               	movlw	1
  3287  0E37                     u4405:	
  3288  0E37  1003               	clrc
  3289  0E38  0DC4               	rlf	??_scale,f
  3290  0E39  3EFF               	addlw	-1
  3291  0E3A  1D03               	skipz
  3292  0E3B  2E37               	goto	u4405
  3293  0E3C  1003               	clrc
  3294  0E3D  0D44               	rlf	??_scale,w
  3295  0E3E  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3296  0E3F  0084               	movwf	4
  3297  0E40  160A  118A  200A  120A  158A  	fcall	stringdir
  3298  0E45  00C5               	movwf	??_scale+1
  3299  0E46  160A  118A  200A  120A  158A  	fcall	stringdir
  3300  0E4B  00C6               	movwf	??_scale+2
  3301  0E4C  160A  118A  200A  120A  158A  	fcall	stringdir
  3302  0E51  00C7               	movwf	??_scale+3
  3303  0E52  160A  118A  200A   	fcall	stringdir
  3304  0E55  00C8               	movwf	??_scale+4
  3305  0E56  0848               	movf	??_scale+4,w
  3306  0E57  00C3               	movwf	?_scale+3
  3307  0E58  0847               	movf	??_scale+3,w
  3308  0E59  00C2               	movwf	?_scale+2
  3309  0E5A  0846               	movf	??_scale+2,w
  3310  0E5B  00C1               	movwf	?_scale+1
  3311  0E5C  0845               	movf	??_scale+1,w
  3312  0E5D  00C0               	movwf	?_scale
  3313  0E5E  0008               	return
  3314  0E5F                     l2773:	
  3315                           
  3316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  3317  0E5F  0852               	movf	scale@scl,w
  3318  0E60  3A80               	xorlw	128
  3319  0E61  3E12               	addlw	-238
  3320  0E62  1C03               	skipc
  3321  0E63  2F4A               	goto	l2781
  3322                           
  3323                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3324  0E64  300A               	movlw	10
  3325  0E65  00F7               	movwf	___awdiv@divisor
  3326  0E66  3000               	movlw	0
  3327  0E67  00F8               	movwf	___awdiv@divisor+1
  3328  0E68  0852               	movf	scale@scl,w
  3329  0E69  00F2               	movwf	___awmod@dividend
  3330  0E6A  01F3               	clrf	___awmod@dividend+1
  3331  0E6B  1BF2               	btfsc	___awmod@dividend,7
  3332  0E6C  03F3               	decf	___awmod@dividend+1,f
  3333  0E6D  3064               	movlw	100
  3334  0E6E  00F0               	movwf	___awmod@divisor
  3335  0E6F  3000               	movlw	0
  3336  0E70  00F1               	movwf	___awmod@divisor+1
  3337  0E71  160A  158A  2769  120A  158A  	fcall	___awmod
  3338  0E76  0871               	movf	?___awmod+1,w
  3339  0E77  00FA               	movwf	___awdiv@dividend+1
  3340  0E78  0870               	movf	?___awmod,w
  3341  0E79  00F9               	movwf	___awdiv@dividend
  3342  0E7A  160A  118A  20C6  120A  158A  	fcall	___awdiv
  3343  0E7F  0877               	movf	?___awdiv,w
  3344  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  3345  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  3346  0E82  00C4               	movwf	??_scale
  3347  0E83  3001               	movlw	1
  3348  0E84                     u4425:	
  3349  0E84  1003               	clrc
  3350  0E85  0DC4               	rlf	??_scale,f
  3351  0E86  3EFF               	addlw	-1
  3352  0E87  1D03               	skipz
  3353  0E88  2E84               	goto	u4425
  3354  0E89  1003               	clrc
  3355  0E8A  0D44               	rlf	??_scale,w
  3356  0E8B  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3357  0E8C  0084               	movwf	4
  3358  0E8D  160A  118A  200A  120A  158A  	fcall	stringdir
  3359  0E92  00C5               	movwf	??_scale+1
  3360  0E93  160A  118A  200A  120A  158A  	fcall	stringdir
  3361  0E98  00C6               	movwf	??_scale+2
  3362  0E99  160A  118A  200A  120A  158A  	fcall	stringdir
  3363  0E9E  00C7               	movwf	??_scale+3
  3364  0E9F  160A  118A  200A  120A  158A  	fcall	stringdir
  3365  0EA4  00C8               	movwf	??_scale+4
  3366  0EA5  0848               	movf	??_scale+4,w
  3367  0EA6  00A9               	movwf	___flmul@b+3
  3368  0EA7  0847               	movf	??_scale+3,w
  3369  0EA8  00A8               	movwf	___flmul@b+2
  3370  0EA9  0846               	movf	??_scale+2,w
  3371  0EAA  00A7               	movwf	___flmul@b+1
  3372  0EAB  0845               	movf	??_scale+1,w
  3373  0EAC  00A6               	movwf	___flmul@b
  3374  0EAD  3064               	movlw	100
  3375  0EAE  00F7               	movwf	___awdiv@divisor
  3376  0EAF  3000               	movlw	0
  3377  0EB0  00F8               	movwf	___awdiv@divisor+1
  3378  0EB1  0852               	movf	scale@scl,w
  3379  0EB2  00F9               	movwf	___awdiv@dividend
  3380  0EB3  01FA               	clrf	___awdiv@dividend+1
  3381  0EB4  1BF9               	btfsc	___awdiv@dividend,7
  3382  0EB5  03FA               	decf	___awdiv@dividend+1,f
  3383  0EB6  160A  118A  20C6  120A  158A  	fcall	___awdiv
  3384  0EBB  0877               	movf	?___awdiv,w
  3385  0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  3386  0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  3387  0EBE  00C9               	movwf	??_scale+5
  3388  0EBF  3001               	movlw	1
  3389  0EC0                     u4435:	
  3390  0EC0  1003               	clrc
  3391  0EC1  0DC9               	rlf	??_scale+5,f
  3392  0EC2  3EFF               	addlw	-1
  3393  0EC3  1D03               	skipz
  3394  0EC4  2EC0               	goto	u4435
  3395  0EC5  1003               	clrc
  3396  0EC6  0D49               	rlf	??_scale+5,w
  3397  0EC7  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3398  0EC8  0084               	movwf	4
  3399  0EC9  160A  118A  200A  120A  158A  	fcall	stringdir
  3400  0ECE  00CA               	movwf	??_scale+6
  3401  0ECF  160A  118A  200A  120A  158A  	fcall	stringdir
  3402  0ED4  00CB               	movwf	??_scale+7
  3403  0ED5  160A  118A  200A  120A  158A  	fcall	stringdir
  3404  0EDA  00CC               	movwf	??_scale+8
  3405  0EDB  160A  118A  200A  120A  158A  	fcall	stringdir
  3406  0EE0  00CD               	movwf	??_scale+9
  3407  0EE1  084D               	movf	??_scale+9,w
  3408  0EE2  00AD               	movwf	___flmul@a+3
  3409  0EE3  084C               	movf	??_scale+8,w
  3410  0EE4  00AC               	movwf	___flmul@a+2
  3411  0EE5  084B               	movf	??_scale+7,w
  3412  0EE6  00AB               	movwf	___flmul@a+1
  3413  0EE7  084A               	movf	??_scale+6,w
  3414  0EE8  00AA               	movwf	___flmul@a
  3415  0EE9  120A  158A  21A2  120A  158A  	fcall	___flmul
  3416  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  3417  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  3418  0EF0  0829               	movf	?___flmul+3,w
  3419  0EF1  00D1               	movwf	_scale$873+3
  3420  0EF2  0828               	movf	?___flmul+2,w
  3421  0EF3  00D0               	movwf	_scale$873+2
  3422  0EF4  0827               	movf	?___flmul+1,w
  3423  0EF5  00CF               	movwf	_scale$873+1
  3424  0EF6  0826               	movf	?___flmul,w
  3425  0EF7  00CE               	movwf	_scale$873
  3426                           
  3427                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3428  0EF8  300A               	movlw	10
  3429  0EF9  00F0               	movwf	___awmod@divisor
  3430  0EFA  3000               	movlw	0
  3431  0EFB  00F1               	movwf	___awmod@divisor+1
  3432  0EFC  0852               	movf	scale@scl,w
  3433  0EFD  00F2               	movwf	___awmod@dividend
  3434  0EFE  01F3               	clrf	___awmod@dividend+1
  3435  0EFF  1BF2               	btfsc	___awmod@dividend,7
  3436  0F00  03F3               	decf	___awmod@dividend+1,f
  3437  0F01  160A  158A  2769  120A  158A  	fcall	___awmod
  3438  0F06  0870               	movf	?___awmod,w
  3439  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  3440  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  3441  0F09  00C4               	movwf	??_scale
  3442  0F0A  3001               	movlw	1
  3443  0F0B                     u4445:	
  3444  0F0B  1003               	clrc
  3445  0F0C  0DC4               	rlf	??_scale,f
  3446  0F0D  3EFF               	addlw	-1
  3447  0F0E  1D03               	skipz
  3448  0F0F  2F0B               	goto	u4445
  3449  0F10  1003               	clrc
  3450  0F11  0D44               	rlf	??_scale,w
  3451  0F12  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3452  0F13  0084               	movwf	4
  3453  0F14  160A  118A  200A  120A  158A  	fcall	stringdir
  3454  0F19  00C5               	movwf	??_scale+1
  3455  0F1A  160A  118A  200A  120A  158A  	fcall	stringdir
  3456  0F1F  00C6               	movwf	??_scale+2
  3457  0F20  160A  118A  200A  120A  158A  	fcall	stringdir
  3458  0F25  00C7               	movwf	??_scale+3
  3459  0F26  160A  118A  200A  120A  158A  	fcall	stringdir
  3460  0F2B  00C8               	movwf	??_scale+4
  3461  0F2C  0848               	movf	??_scale+4,w
  3462  0F2D  00A9               	movwf	___flmul@b+3
  3463  0F2E  0847               	movf	??_scale+3,w
  3464  0F2F  00A8               	movwf	___flmul@b+2
  3465  0F30  0846               	movf	??_scale+2,w
  3466  0F31  00A7               	movwf	___flmul@b+1
  3467  0F32  0845               	movf	??_scale+1,w
  3468  0F33  00A6               	movwf	___flmul@b
  3469  0F34  0851               	movf	_scale$873+3,w
  3470  0F35  00AD               	movwf	___flmul@a+3
  3471  0F36  0850               	movf	_scale$873+2,w
  3472  0F37  00AC               	movwf	___flmul@a+2
  3473  0F38  084F               	movf	_scale$873+1,w
  3474  0F39  00AB               	movwf	___flmul@a+1
  3475  0F3A  084E               	movf	_scale$873,w
  3476  0F3B  00AA               	movwf	___flmul@a
  3477  0F3C  120A  158A  21A2   	fcall	___flmul
  3478  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  3479  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  3480  0F41  0829               	movf	?___flmul+3,w
  3481  0F42  00C3               	movwf	?_scale+3
  3482  0F43  0828               	movf	?___flmul+2,w
  3483  0F44  00C2               	movwf	?_scale+2
  3484  0F45  0827               	movf	?___flmul+1,w
  3485  0F46  00C1               	movwf	?_scale+1
  3486  0F47  0826               	movf	?___flmul,w
  3487  0F48  00C0               	movwf	?_scale
  3488  0F49  0008               	return
  3489  0F4A                     l2781:	
  3490  0F4A  0852               	movf	scale@scl,w
  3491  0F4B  3A80               	xorlw	128
  3492  0F4C  3E75               	addlw	-139
  3493  0F4D  1C03               	skipc
  3494  0F4E  2FD5               	goto	l2787
  3495                           
  3496                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3497  0F4F  300A               	movlw	10
  3498  0F50  00F0               	movwf	___awmod@divisor
  3499  0F51  3000               	movlw	0
  3500  0F52  00F1               	movwf	___awmod@divisor+1
  3501  0F53  0852               	movf	scale@scl,w
  3502  0F54  00F2               	movwf	___awmod@dividend
  3503  0F55  01F3               	clrf	___awmod@dividend+1
  3504  0F56  1BF2               	btfsc	___awmod@dividend,7
  3505  0F57  03F3               	decf	___awmod@dividend+1,f
  3506  0F58  160A  158A  2769  120A  158A  	fcall	___awmod
  3507  0F5D  0870               	movf	?___awmod,w
  3508  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  3509  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  3510  0F60  00C4               	movwf	??_scale
  3511  0F61  3001               	movlw	1
  3512  0F62                     u4465:	
  3513  0F62  1003               	clrc
  3514  0F63  0DC4               	rlf	??_scale,f
  3515  0F64  3EFF               	addlw	-1
  3516  0F65  1D03               	skipz
  3517  0F66  2F62               	goto	u4465
  3518  0F67  1003               	clrc
  3519  0F68  0D44               	rlf	??_scale,w
  3520  0F69  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3521  0F6A  0084               	movwf	4
  3522  0F6B  160A  118A  200A  120A  158A  	fcall	stringdir
  3523  0F70  00C5               	movwf	??_scale+1
  3524  0F71  160A  118A  200A  120A  158A  	fcall	stringdir
  3525  0F76  00C6               	movwf	??_scale+2
  3526  0F77  160A  118A  200A  120A  158A  	fcall	stringdir
  3527  0F7C  00C7               	movwf	??_scale+3
  3528  0F7D  160A  118A  200A  120A  158A  	fcall	stringdir
  3529  0F82  00C8               	movwf	??_scale+4
  3530  0F83  0848               	movf	??_scale+4,w
  3531  0F84  00A9               	movwf	___flmul@b+3
  3532  0F85  0847               	movf	??_scale+3,w
  3533  0F86  00A8               	movwf	___flmul@b+2
  3534  0F87  0846               	movf	??_scale+2,w
  3535  0F88  00A7               	movwf	___flmul@b+1
  3536  0F89  0845               	movf	??_scale+1,w
  3537  0F8A  00A6               	movwf	___flmul@b
  3538  0F8B  300A               	movlw	10
  3539  0F8C  00F7               	movwf	___awdiv@divisor
  3540  0F8D  3000               	movlw	0
  3541  0F8E  00F8               	movwf	___awdiv@divisor+1
  3542  0F8F  0852               	movf	scale@scl,w
  3543  0F90  00F9               	movwf	___awdiv@dividend
  3544  0F91  01FA               	clrf	___awdiv@dividend+1
  3545  0F92  1BF9               	btfsc	___awdiv@dividend,7
  3546  0F93  03FA               	decf	___awdiv@dividend+1,f
  3547  0F94  160A  118A  20C6  120A  158A  	fcall	___awdiv
  3548  0F99  0877               	movf	?___awdiv,w
  3549  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  3550  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  3551  0F9C  00C9               	movwf	??_scale+5
  3552  0F9D  3001               	movlw	1
  3553  0F9E                     u4475:	
  3554  0F9E  1003               	clrc
  3555  0F9F  0DC9               	rlf	??_scale+5,f
  3556  0FA0  3EFF               	addlw	-1
  3557  0FA1  1D03               	skipz
  3558  0FA2  2F9E               	goto	u4475
  3559  0FA3  1003               	clrc
  3560  0FA4  0D49               	rlf	??_scale+5,w
  3561  0FA5  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3562  0FA6  0084               	movwf	4
  3563  0FA7  160A  118A  200A  120A  158A  	fcall	stringdir
  3564  0FAC  00CA               	movwf	??_scale+6
  3565  0FAD  160A  118A  200A  120A  158A  	fcall	stringdir
  3566  0FB2  00CB               	movwf	??_scale+7
  3567  0FB3  160A  118A  200A  120A  158A  	fcall	stringdir
  3568  0FB8  00CC               	movwf	??_scale+8
  3569  0FB9  160A  118A  200A  120A  158A  	fcall	stringdir
  3570  0FBE  00CD               	movwf	??_scale+9
  3571  0FBF  084D               	movf	??_scale+9,w
  3572  0FC0  00AD               	movwf	___flmul@a+3
  3573  0FC1  084C               	movf	??_scale+8,w
  3574  0FC2  00AC               	movwf	___flmul@a+2
  3575  0FC3  084B               	movf	??_scale+7,w
  3576  0FC4  00AB               	movwf	___flmul@a+1
  3577  0FC5  084A               	movf	??_scale+6,w
  3578  0FC6  00AA               	movwf	___flmul@a
  3579  0FC7  120A  158A  21A2   	fcall	___flmul
  3580  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  3581  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  3582  0FCC  0829               	movf	?___flmul+3,w
  3583  0FCD  00C3               	movwf	?_scale+3
  3584  0FCE  0828               	movf	?___flmul+2,w
  3585  0FCF  00C2               	movwf	?_scale+2
  3586  0FD0  0827               	movf	?___flmul+1,w
  3587  0FD1  00C1               	movwf	?_scale+1
  3588  0FD2  0826               	movf	?___flmul,w
  3589  0FD3  00C0               	movwf	?_scale
  3590  0FD4  0008               	return
  3591  0FD5                     l2787:	
  3592                           
  3593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  3594  0FD5  0852               	movf	scale@scl,w
  3595  0FD6  00C4               	movwf	??_scale
  3596  0FD7  3001               	movlw	1
  3597  0FD8                     u4485:	
  3598  0FD8  1003               	clrc
  3599  0FD9  0DC4               	rlf	??_scale,f
  3600  0FDA  3EFF               	addlw	-1
  3601  0FDB  1D03               	skipz
  3602  0FDC  2FD8               	goto	u4485
  3603  0FDD  1003               	clrc
  3604  0FDE  0D44               	rlf	??_scale,w
  3605  0FDF  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3606  0FE0  0084               	movwf	4
  3607  0FE1  160A  118A  200A  120A  158A  	fcall	stringdir
  3608  0FE6  00C5               	movwf	??_scale+1
  3609  0FE7  160A  118A  200A  120A  158A  	fcall	stringdir
  3610  0FEC  00C6               	movwf	??_scale+2
  3611  0FED  160A  118A  200A  120A  158A  	fcall	stringdir
  3612  0FF2  00C7               	movwf	??_scale+3
  3613  0FF3  160A  118A  200A   	fcall	stringdir
  3614  0FF6  00C8               	movwf	??_scale+4
  3615  0FF7  0848               	movf	??_scale+4,w
  3616  0FF8  00C3               	movwf	?_scale+3
  3617  0FF9  0847               	movf	??_scale+3,w
  3618  0FFA  00C2               	movwf	?_scale+2
  3619  0FFB  0846               	movf	??_scale+2,w
  3620  0FFC  00C1               	movwf	?_scale+1
  3621  0FFD  0845               	movf	??_scale+1,w
  3622  0FFE  00C0               	movwf	?_scale
  3623  0FFF  0008               	return
  3624  1000                     __end_of_scale:	
  3625                           
  3626                           	psect	text3
  3627  1F69                     __ptext3:	
  3628 ;; *************** function ___awmod *****************
  3629 ;; Defined at:
  3630 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  divisor         2    0[COMMON] int 
  3633 ;;  dividend        2    2[COMMON] int 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  sign            1    6[COMMON] unsigned char 
  3636 ;;  counter         1    5[COMMON] unsigned char 
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  2    0[COMMON] int 
  3639 ;; Registers used:
  3640 ;;		wreg, status,2, status,0
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3646 ;;      Params:         4       0       0       0       0
  3647 ;;      Locals:         2       0       0       0       0
  3648 ;;      Temps:          1       0       0       0       0
  3649 ;;      Totals:         7       0       0       0       0
  3650 ;;Total ram usage:        7 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; This function calls:
  3653 ;;		Nothing
  3654 ;; This function is called by:
  3655 ;;		_scale
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           
  3660                           ;psect for function ___awmod
  3661  1F69                     ___awmod:	
  3662                           
  3663                           ;incstack = 0
  3664                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3665  1F69  01F6               	clrf	___awmod@sign
  3666  1F6A  1FF3               	btfss	___awmod@dividend+1,7
  3667  1F6B  2F73               	goto	l2291
  3668  1F6C  09F2               	comf	___awmod@dividend,f
  3669  1F6D  09F3               	comf	___awmod@dividend+1,f
  3670  1F6E  0AF2               	incf	___awmod@dividend,f
  3671  1F6F  1903               	skipnz
  3672  1F70  0AF3               	incf	___awmod@dividend+1,f
  3673  1F71  01F6               	clrf	___awmod@sign
  3674  1F72  0AF6               	incf	___awmod@sign,f
  3675  1F73                     l2291:	
  3676  1F73  1FF1               	btfss	___awmod@divisor+1,7
  3677  1F74  2F7A               	goto	l2295
  3678  1F75  09F0               	comf	___awmod@divisor,f
  3679  1F76  09F1               	comf	___awmod@divisor+1,f
  3680  1F77  0AF0               	incf	___awmod@divisor,f
  3681  1F78  1903               	skipnz
  3682  1F79  0AF1               	incf	___awmod@divisor+1,f
  3683  1F7A                     l2295:	
  3684  1F7A  0870               	movf	___awmod@divisor,w
  3685  1F7B  0471               	iorwf	___awmod@divisor+1,w
  3686  1F7C  1903               	btfsc	3,2
  3687  1F7D  2FA7               	goto	l2313
  3688  1F7E  01F5               	clrf	___awmod@counter
  3689  1F7F  0AF5               	incf	___awmod@counter,f
  3690  1F80                     l2303:	
  3691  1F80  1BF1               	btfsc	___awmod@divisor+1,7
  3692  1F81  2F8E               	goto	l2305
  3693  1F82  3001               	movlw	1
  3694  1F83                     u3215:	
  3695  1F83  1003               	clrc
  3696  1F84  0DF0               	rlf	___awmod@divisor,f
  3697  1F85  0DF1               	rlf	___awmod@divisor+1,f
  3698  1F86  3EFF               	addlw	-1
  3699  1F87  1D03               	skipz
  3700  1F88  2F83               	goto	u3215
  3701  1F89  3001               	movlw	1
  3702  1F8A  00F4               	movwf	??___awmod
  3703  1F8B  0874               	movf	??___awmod,w
  3704  1F8C  07F5               	addwf	___awmod@counter,f
  3705  1F8D  2F80               	goto	l2303
  3706  1F8E                     l2305:	
  3707  1F8E  0871               	movf	___awmod@divisor+1,w
  3708  1F8F  0273               	subwf	___awmod@dividend+1,w
  3709  1F90  1D03               	skipz
  3710  1F91  2F94               	goto	u3235
  3711  1F92  0870               	movf	___awmod@divisor,w
  3712  1F93  0272               	subwf	___awmod@dividend,w
  3713  1F94                     u3235:	
  3714  1F94  1C03               	skipc
  3715  1F95  2F9C               	goto	l2309
  3716  1F96  0870               	movf	___awmod@divisor,w
  3717  1F97  02F2               	subwf	___awmod@dividend,f
  3718  1F98  0871               	movf	___awmod@divisor+1,w
  3719  1F99  1C03               	skipc
  3720  1F9A  03F3               	decf	___awmod@dividend+1,f
  3721  1F9B  02F3               	subwf	___awmod@dividend+1,f
  3722  1F9C                     l2309:	
  3723  1F9C  3001               	movlw	1
  3724  1F9D                     u3245:	
  3725  1F9D  1003               	clrc
  3726  1F9E  0CF1               	rrf	___awmod@divisor+1,f
  3727  1F9F  0CF0               	rrf	___awmod@divisor,f
  3728  1FA0  3EFF               	addlw	-1
  3729  1FA1  1D03               	skipz
  3730  1FA2  2F9D               	goto	u3245
  3731  1FA3  3001               	movlw	1
  3732  1FA4  02F5               	subwf	___awmod@counter,f
  3733  1FA5  1D03               	btfss	3,2
  3734  1FA6  2F8E               	goto	l2305
  3735  1FA7                     l2313:	
  3736  1FA7  0876               	movf	___awmod@sign,w
  3737  1FA8  1903               	btfsc	3,2
  3738  1FA9  2FAF               	goto	l2317
  3739  1FAA  09F2               	comf	___awmod@dividend,f
  3740  1FAB  09F3               	comf	___awmod@dividend+1,f
  3741  1FAC  0AF2               	incf	___awmod@dividend,f
  3742  1FAD  1903               	skipnz
  3743  1FAE  0AF3               	incf	___awmod@dividend+1,f
  3744  1FAF                     l2317:	
  3745  1FAF  0873               	movf	___awmod@dividend+1,w
  3746  1FB0  00F1               	movwf	?___awmod+1
  3747  1FB1  0872               	movf	___awmod@dividend,w
  3748  1FB2  00F0               	movwf	?___awmod
  3749  1FB3  0008               	return
  3750  1FB4                     __end_of___awmod:	
  3751                           
  3752                           	psect	text4
  3753  10C6                     __ptext4:	
  3754 ;; *************** function ___awdiv *****************
  3755 ;; Defined at:
  3756 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;  divisor         2    7[COMMON] int 
  3759 ;;  dividend        2    9[COMMON] int 
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;  quotient        2    2[BANK0 ] int 
  3762 ;;  sign            1    1[BANK0 ] unsigned char 
  3763 ;;  counter         1    0[BANK0 ] unsigned char 
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  2    7[COMMON] int 
  3766 ;; Registers used:
  3767 ;;		wreg, status,2, status,0
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/0
  3770 ;;		On exit  : 0/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3773 ;;      Params:         4       0       0       0       0
  3774 ;;      Locals:         0       4       0       0       0
  3775 ;;      Temps:          1       0       0       0       0
  3776 ;;      Totals:         5       4       0       0       0
  3777 ;;Total ram usage:        9 bytes
  3778 ;; Hardware stack levels used:    1
  3779 ;; This function calls:
  3780 ;;		Nothing
  3781 ;; This function is called by:
  3782 ;;		_scale
  3783 ;;		_sprintf
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           
  3788                           ;psect for function ___awdiv
  3789  10C6                     ___awdiv:	
  3790                           
  3791                           ;incstack = 0
  3792                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3793  10C6  1283               	bcf	3,5	;RP0=0, select bank0
  3794  10C7  1303               	bcf	3,6	;RP1=0, select bank0
  3795  10C8  01A1               	clrf	___awdiv@sign
  3796  10C9  1FF8               	btfss	___awdiv@divisor+1,7
  3797  10CA  28D2               	goto	l2247
  3798  10CB  09F7               	comf	___awdiv@divisor,f
  3799  10CC  09F8               	comf	___awdiv@divisor+1,f
  3800  10CD  0AF7               	incf	___awdiv@divisor,f
  3801  10CE  1903               	skipnz
  3802  10CF  0AF8               	incf	___awdiv@divisor+1,f
  3803  10D0  01A1               	clrf	___awdiv@sign
  3804  10D1  0AA1               	incf	___awdiv@sign,f
  3805  10D2                     l2247:	
  3806  10D2  1FFA               	btfss	___awdiv@dividend+1,7
  3807  10D3  28DD               	goto	l2253
  3808  10D4  09F9               	comf	___awdiv@dividend,f
  3809  10D5  09FA               	comf	___awdiv@dividend+1,f
  3810  10D6  0AF9               	incf	___awdiv@dividend,f
  3811  10D7  1903               	skipnz
  3812  10D8  0AFA               	incf	___awdiv@dividend+1,f
  3813  10D9  3001               	movlw	1
  3814  10DA  00FB               	movwf	??___awdiv
  3815  10DB  087B               	movf	??___awdiv,w
  3816  10DC  06A1               	xorwf	___awdiv@sign,f
  3817  10DD                     l2253:	
  3818  10DD  01A2               	clrf	___awdiv@quotient
  3819  10DE  01A3               	clrf	___awdiv@quotient+1
  3820  10DF  0877               	movf	___awdiv@divisor,w
  3821  10E0  0478               	iorwf	___awdiv@divisor+1,w
  3822  10E1  1903               	btfsc	3,2
  3823  10E2  2914               	goto	l2275
  3824  10E3  01A0               	clrf	___awdiv@counter
  3825  10E4  0AA0               	incf	___awdiv@counter,f
  3826  10E5                     l2263:	
  3827  10E5  1BF8               	btfsc	___awdiv@divisor+1,7
  3828  10E6  28F3               	goto	l2265
  3829  10E7  3001               	movlw	1
  3830  10E8                     u3115:	
  3831  10E8  1003               	clrc
  3832  10E9  0DF7               	rlf	___awdiv@divisor,f
  3833  10EA  0DF8               	rlf	___awdiv@divisor+1,f
  3834  10EB  3EFF               	addlw	-1
  3835  10EC  1D03               	skipz
  3836  10ED  28E8               	goto	u3115
  3837  10EE  3001               	movlw	1
  3838  10EF  00FB               	movwf	??___awdiv
  3839  10F0  087B               	movf	??___awdiv,w
  3840  10F1  07A0               	addwf	___awdiv@counter,f
  3841  10F2  28E5               	goto	l2263
  3842  10F3                     l2265:	
  3843  10F3  3001               	movlw	1
  3844  10F4                     u3135:	
  3845  10F4  1003               	clrc
  3846  10F5  0DA2               	rlf	___awdiv@quotient,f
  3847  10F6  0DA3               	rlf	___awdiv@quotient+1,f
  3848  10F7  3EFF               	addlw	-1
  3849  10F8  1D03               	skipz
  3850  10F9  28F4               	goto	u3135
  3851  10FA  0878               	movf	___awdiv@divisor+1,w
  3852  10FB  027A               	subwf	___awdiv@dividend+1,w
  3853  10FC  1D03               	skipz
  3854  10FD  2900               	goto	u3145
  3855  10FE  0877               	movf	___awdiv@divisor,w
  3856  10FF  0279               	subwf	___awdiv@dividend,w
  3857  1100                     u3145:	
  3858  1100  1C03               	skipc
  3859  1101  2909               	goto	l2271
  3860  1102  0877               	movf	___awdiv@divisor,w
  3861  1103  02F9               	subwf	___awdiv@dividend,f
  3862  1104  0878               	movf	___awdiv@divisor+1,w
  3863  1105  1C03               	skipc
  3864  1106  03FA               	decf	___awdiv@dividend+1,f
  3865  1107  02FA               	subwf	___awdiv@dividend+1,f
  3866  1108  1422               	bsf	___awdiv@quotient,0
  3867  1109                     l2271:	
  3868  1109  3001               	movlw	1
  3869  110A                     u3155:	
  3870  110A  1003               	clrc
  3871  110B  0CF8               	rrf	___awdiv@divisor+1,f
  3872  110C  0CF7               	rrf	___awdiv@divisor,f
  3873  110D  3EFF               	addlw	-1
  3874  110E  1D03               	skipz
  3875  110F  290A               	goto	u3155
  3876  1110  3001               	movlw	1
  3877  1111  02A0               	subwf	___awdiv@counter,f
  3878  1112  1D03               	btfss	3,2
  3879  1113  28F3               	goto	l2265
  3880  1114                     l2275:	
  3881  1114  0821               	movf	___awdiv@sign,w
  3882  1115  1903               	btfsc	3,2
  3883  1116  291C               	goto	l2279
  3884  1117  09A2               	comf	___awdiv@quotient,f
  3885  1118  09A3               	comf	___awdiv@quotient+1,f
  3886  1119  0AA2               	incf	___awdiv@quotient,f
  3887  111A  1903               	skipnz
  3888  111B  0AA3               	incf	___awdiv@quotient+1,f
  3889  111C                     l2279:	
  3890  111C  0823               	movf	___awdiv@quotient+1,w
  3891  111D  00F8               	movwf	?___awdiv+1
  3892  111E  0822               	movf	___awdiv@quotient,w
  3893  111F  00F7               	movwf	?___awdiv
  3894  1120  0008               	return
  3895  1121                     __end_of___awdiv:	
  3896                           
  3897                           	psect	text5
  3898  1D2A                     __ptext5:	
  3899 ;; *************** function _isdigit *****************
  3900 ;; Defined at:
  3901 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;  c               1    wreg     unsigned char 
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;  c               1    1[COMMON] unsigned char 
  3906 ;; Return value:  Size  Location     Type
  3907 ;;		None               void
  3908 ;; Registers used:
  3909 ;;		wreg, status,2, status,0
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3915 ;;      Params:         0       0       0       0       0
  3916 ;;      Locals:         2       0       0       0       0
  3917 ;;      Temps:          0       0       0       0       0
  3918 ;;      Totals:         2       0       0       0       0
  3919 ;;Total ram usage:        2 bytes
  3920 ;; Hardware stack levels used:    1
  3921 ;; This function calls:
  3922 ;;		Nothing
  3923 ;; This function is called by:
  3924 ;;		_sprintf
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           
  3929                           ;psect for function _isdigit
  3930  1D2A                     _isdigit:	
  3931                           
  3932                           ;incstack = 0
  3933                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3934                           ;isdigit@c stored from wreg
  3935  1D2A  00F1               	movwf	isdigit@c
  3936  1D2B  01F0               	clrf	_isdigit$682
  3937  1D2C  303A               	movlw	58
  3938  1D2D  0271               	subwf	isdigit@c,w
  3939  1D2E  1803               	skipnc
  3940  1D2F  2D36               	goto	l2799
  3941  1D30  3030               	movlw	48
  3942  1D31  0271               	subwf	isdigit@c,w
  3943  1D32  1C03               	skipc
  3944  1D33  2D36               	goto	l2799
  3945  1D34  01F0               	clrf	_isdigit$682
  3946  1D35  0AF0               	incf	_isdigit$682,f
  3947  1D36                     l2799:	
  3948  1D36  0C70               	rrf	_isdigit$682,w
  3949  1D37  0008               	return
  3950  1D38                     __end_of_isdigit:	
  3951                           
  3952                           	psect	text6
  3953  0004                     __ptext6:	
  3954 ;; *************** function _fround *****************
  3955 ;; Defined at:
  3956 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  prec            1    wreg     unsigned char 
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;  prec            1   51[BANK0 ] unsigned char 
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  4   32[BANK0 ] unsigned char 
  3963 ;; Registers used:
  3964 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/0
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3970 ;;      Params:         0       4       0       0       0
  3971 ;;      Locals:         0       9       0       0       0
  3972 ;;      Temps:          0       7       0       0       0
  3973 ;;      Totals:         0      20       0       0       0
  3974 ;;Total ram usage:       20 bytes
  3975 ;; Hardware stack levels used:    1
  3976 ;; Hardware stack levels required when called:    2
  3977 ;; This function calls:
  3978 ;;		___flmul
  3979 ;;		___lwdiv
  3980 ;;		___lwmod
  3981 ;; This function is called by:
  3982 ;;		_sprintf
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           
  3987                           ;psect for function _fround
  3988  0004                     _fround:	
  3989                           
  3990                           ;incstack = 0
  3991                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3992                           ;fround@prec stored from wreg
  3993  0004  1283               	bcf	3,5	;RP0=0, select bank0
  3994  0005  1303               	bcf	3,6	;RP1=0, select bank0
  3995  0006  00D3               	movwf	fround@prec
  3996                           
  3997                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  3998  0007  306E               	movlw	110
  3999  0008  0253               	subwf	fround@prec,w
  4000  0009  1C03               	skipc
  4001  000A  2916               	goto	l2741
  4002                           
  4003                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4004  000B  303F               	movlw	63
  4005  000C  00A9               	movwf	___flmul@b+3
  4006  000D  3000               	movlw	0
  4007  000E  00A8               	movwf	___flmul@b+2
  4008  000F  3000               	movlw	0
  4009  0010  00A7               	movwf	___flmul@b+1
  4010  0011  3000               	movlw	0
  4011  0012  00A6               	movwf	___flmul@b
  4012  0013  3064               	movlw	100
  4013  0014  00F6               	movwf	___lwdiv@divisor
  4014  0015  3000               	movlw	0
  4015  0016  00F7               	movwf	___lwdiv@divisor+1
  4016  0017  0853               	movf	fround@prec,w
  4017  0018  00C4               	movwf	??_fround
  4018  0019  01C5               	clrf	??_fround+1
  4019  001A  0844               	movf	??_fround,w
  4020  001B  00F8               	movwf	___lwdiv@dividend
  4021  001C  0845               	movf	??_fround+1,w
  4022  001D  00F9               	movwf	___lwdiv@dividend+1
  4023  001E  160A  158A  26A8  120A  118A  	fcall	___lwdiv
  4024  0023  0876               	movf	?___lwdiv,w
  4025  0024  1283               	bcf	3,5	;RP0=0, select bank0
  4026  0025  1303               	bcf	3,6	;RP1=0, select bank0
  4027  0026  00C6               	movwf	??_fround+2
  4028  0027  3001               	movlw	1
  4029  0028                     u4255:	
  4030  0028  1003               	clrc
  4031  0029  0DC6               	rlf	??_fround+2,f
  4032  002A  3EFF               	addlw	-1
  4033  002B  1D03               	skipz
  4034  002C  2828               	goto	u4255
  4035  002D  1003               	clrc
  4036  002E  0D46               	rlf	??_fround+2,w
  4037  002F  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4038  0030  0084               	movwf	4
  4039  0031  160A  118A  200A  120A  118A  	fcall	stringdir
  4040  0036  00C7               	movwf	??_fround+3
  4041  0037  160A  118A  200A  120A  118A  	fcall	stringdir
  4042  003C  00C8               	movwf	??_fround+4
  4043  003D  160A  118A  200A  120A  118A  	fcall	stringdir
  4044  0042  00C9               	movwf	??_fround+5
  4045  0043  160A  118A  200A  120A  118A  	fcall	stringdir
  4046  0048  00CA               	movwf	??_fround+6
  4047  0049  084A               	movf	??_fround+6,w
  4048  004A  00AD               	movwf	___flmul@a+3
  4049  004B  0849               	movf	??_fround+5,w
  4050  004C  00AC               	movwf	___flmul@a+2
  4051  004D  0848               	movf	??_fround+4,w
  4052  004E  00AB               	movwf	___flmul@a+1
  4053  004F  0847               	movf	??_fround+3,w
  4054  0050  00AA               	movwf	___flmul@a
  4055  0051  120A  158A  21A2  120A  118A  	fcall	___flmul
  4056  0056  1283               	bcf	3,5	;RP0=0, select bank0
  4057  0057  1303               	bcf	3,6	;RP1=0, select bank0
  4058  0058  0829               	movf	?___flmul+3,w
  4059  0059  00D2               	movwf	_fround$871+3
  4060  005A  0828               	movf	?___flmul+2,w
  4061  005B  00D1               	movwf	_fround$871+2
  4062  005C  0827               	movf	?___flmul+1,w
  4063  005D  00D0               	movwf	_fround$871+1
  4064  005E  0826               	movf	?___flmul,w
  4065  005F  00CF               	movwf	_fround$871
  4066                           
  4067                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4068  0060  300A               	movlw	10
  4069  0061  00F6               	movwf	___lwdiv@divisor
  4070  0062  3000               	movlw	0
  4071  0063  00F7               	movwf	___lwdiv@divisor+1
  4072  0064  0853               	movf	fround@prec,w
  4073  0065  00C4               	movwf	??_fround
  4074  0066  01C5               	clrf	??_fround+1
  4075  0067  0844               	movf	??_fround,w
  4076  0068  00F2               	movwf	___lwmod@dividend
  4077  0069  0845               	movf	??_fround+1,w
  4078  006A  00F3               	movwf	___lwmod@dividend+1
  4079  006B  3064               	movlw	100
  4080  006C  00F0               	movwf	___lwmod@divisor
  4081  006D  3000               	movlw	0
  4082  006E  00F1               	movwf	___lwmod@divisor+1
  4083  006F  160A  158A  2604  120A  118A  	fcall	___lwmod
  4084  0074  0871               	movf	?___lwmod+1,w
  4085  0075  00F9               	movwf	___lwdiv@dividend+1
  4086  0076  0870               	movf	?___lwmod,w
  4087  0077  00F8               	movwf	___lwdiv@dividend
  4088  0078  160A  158A  26A8  120A  118A  	fcall	___lwdiv
  4089  007D  0876               	movf	?___lwdiv,w
  4090  007E  1283               	bcf	3,5	;RP0=0, select bank0
  4091  007F  1303               	bcf	3,6	;RP1=0, select bank0
  4092  0080  00C6               	movwf	??_fround+2
  4093  0081  3001               	movlw	1
  4094  0082                     u4265:	
  4095  0082  1003               	clrc
  4096  0083  0DC6               	rlf	??_fround+2,f
  4097  0084  3EFF               	addlw	-1
  4098  0085  1D03               	skipz
  4099  0086  2882               	goto	u4265
  4100  0087  1003               	clrc
  4101  0088  0D46               	rlf	??_fround+2,w
  4102  0089  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4103  008A  0084               	movwf	4
  4104  008B  160A  118A  200A  120A  118A  	fcall	stringdir
  4105  0090  00C7               	movwf	??_fround+3
  4106  0091  160A  118A  200A  120A  118A  	fcall	stringdir
  4107  0096  00C8               	movwf	??_fround+4
  4108  0097  160A  118A  200A  120A  118A  	fcall	stringdir
  4109  009C  00C9               	movwf	??_fround+5
  4110  009D  160A  118A  200A  120A  118A  	fcall	stringdir
  4111  00A2  00CA               	movwf	??_fround+6
  4112  00A3  084A               	movf	??_fround+6,w
  4113  00A4  00A9               	movwf	___flmul@b+3
  4114  00A5  0849               	movf	??_fround+5,w
  4115  00A6  00A8               	movwf	___flmul@b+2
  4116  00A7  0848               	movf	??_fround+4,w
  4117  00A8  00A7               	movwf	___flmul@b+1
  4118  00A9  0847               	movf	??_fround+3,w
  4119  00AA  00A6               	movwf	___flmul@b
  4120  00AB  0852               	movf	_fround$871+3,w
  4121  00AC  00AD               	movwf	___flmul@a+3
  4122  00AD  0851               	movf	_fround$871+2,w
  4123  00AE  00AC               	movwf	___flmul@a+2
  4124  00AF  0850               	movf	_fround$871+1,w
  4125  00B0  00AB               	movwf	___flmul@a+1
  4126  00B1  084F               	movf	_fround$871,w
  4127  00B2  00AA               	movwf	___flmul@a
  4128  00B3  120A  158A  21A2  120A  118A  	fcall	___flmul
  4129  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  4130  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  4131  00BA  0829               	movf	?___flmul+3,w
  4132  00BB  00CE               	movwf	_fround$872+3
  4133  00BC  0828               	movf	?___flmul+2,w
  4134  00BD  00CD               	movwf	_fround$872+2
  4135  00BE  0827               	movf	?___flmul+1,w
  4136  00BF  00CC               	movwf	_fround$872+1
  4137  00C0  0826               	movf	?___flmul,w
  4138  00C1  00CB               	movwf	_fround$872
  4139                           
  4140                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4141  00C2  300A               	movlw	10
  4142  00C3  00F0               	movwf	___lwmod@divisor
  4143  00C4  3000               	movlw	0
  4144  00C5  00F1               	movwf	___lwmod@divisor+1
  4145  00C6  0853               	movf	fround@prec,w
  4146  00C7  00C4               	movwf	??_fround
  4147  00C8  01C5               	clrf	??_fround+1
  4148  00C9  0844               	movf	??_fround,w
  4149  00CA  00F2               	movwf	___lwmod@dividend
  4150  00CB  0845               	movf	??_fround+1,w
  4151  00CC  00F3               	movwf	___lwmod@dividend+1
  4152  00CD  160A  158A  2604  120A  118A  	fcall	___lwmod
  4153  00D2  0870               	movf	?___lwmod,w
  4154  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  4155  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  4156  00D5  00C6               	movwf	??_fround+2
  4157  00D6  3001               	movlw	1
  4158  00D7                     u4275:	
  4159  00D7  1003               	clrc
  4160  00D8  0DC6               	rlf	??_fround+2,f
  4161  00D9  3EFF               	addlw	-1
  4162  00DA  1D03               	skipz
  4163  00DB  28D7               	goto	u4275
  4164  00DC  1003               	clrc
  4165  00DD  0D46               	rlf	??_fround+2,w
  4166  00DE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4167  00DF  0084               	movwf	4
  4168  00E0  160A  118A  200A  120A  118A  	fcall	stringdir
  4169  00E5  00C7               	movwf	??_fround+3
  4170  00E6  160A  118A  200A  120A  118A  	fcall	stringdir
  4171  00EB  00C8               	movwf	??_fround+4
  4172  00EC  160A  118A  200A  120A  118A  	fcall	stringdir
  4173  00F1  00C9               	movwf	??_fround+5
  4174  00F2  160A  118A  200A  120A  118A  	fcall	stringdir
  4175  00F7  00CA               	movwf	??_fround+6
  4176  00F8  084A               	movf	??_fround+6,w
  4177  00F9  00A9               	movwf	___flmul@b+3
  4178  00FA  0849               	movf	??_fround+5,w
  4179  00FB  00A8               	movwf	___flmul@b+2
  4180  00FC  0848               	movf	??_fround+4,w
  4181  00FD  00A7               	movwf	___flmul@b+1
  4182  00FE  0847               	movf	??_fround+3,w
  4183  00FF  00A6               	movwf	___flmul@b
  4184  0100  084E               	movf	_fround$872+3,w
  4185  0101  00AD               	movwf	___flmul@a+3
  4186  0102  084D               	movf	_fround$872+2,w
  4187  0103  00AC               	movwf	___flmul@a+2
  4188  0104  084C               	movf	_fround$872+1,w
  4189  0105  00AB               	movwf	___flmul@a+1
  4190  0106  084B               	movf	_fround$872,w
  4191  0107  00AA               	movwf	___flmul@a
  4192  0108  120A  158A  21A2   	fcall	___flmul
  4193  010B  1283               	bcf	3,5	;RP0=0, select bank0
  4194  010C  1303               	bcf	3,6	;RP1=0, select bank0
  4195  010D  0829               	movf	?___flmul+3,w
  4196  010E  00C3               	movwf	?_fround+3
  4197  010F  0828               	movf	?___flmul+2,w
  4198  0110  00C2               	movwf	?_fround+2
  4199  0111  0827               	movf	?___flmul+1,w
  4200  0112  00C1               	movwf	?_fround+1
  4201  0113  0826               	movf	?___flmul,w
  4202  0114  00C0               	movwf	?_fround
  4203  0115  0008               	return
  4204  0116                     l2741:	
  4205  0116  300B               	movlw	11
  4206  0117  0253               	subwf	fround@prec,w
  4207  0118  1C03               	skipc
  4208  0119  29C3               	goto	l2747
  4209                           
  4210                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4211  011A  303F               	movlw	63
  4212  011B  00A9               	movwf	___flmul@b+3
  4213  011C  3000               	movlw	0
  4214  011D  00A8               	movwf	___flmul@b+2
  4215  011E  3000               	movlw	0
  4216  011F  00A7               	movwf	___flmul@b+1
  4217  0120  3000               	movlw	0
  4218  0121  00A6               	movwf	___flmul@b
  4219  0122  300A               	movlw	10
  4220  0123  00F6               	movwf	___lwdiv@divisor
  4221  0124  3000               	movlw	0
  4222  0125  00F7               	movwf	___lwdiv@divisor+1
  4223  0126  0853               	movf	fround@prec,w
  4224  0127  00C4               	movwf	??_fround
  4225  0128  01C5               	clrf	??_fround+1
  4226  0129  0844               	movf	??_fround,w
  4227  012A  00F8               	movwf	___lwdiv@dividend
  4228  012B  0845               	movf	??_fround+1,w
  4229  012C  00F9               	movwf	___lwdiv@dividend+1
  4230  012D  160A  158A  26A8  120A  118A  	fcall	___lwdiv
  4231  0132  0876               	movf	?___lwdiv,w
  4232  0133  1283               	bcf	3,5	;RP0=0, select bank0
  4233  0134  1303               	bcf	3,6	;RP1=0, select bank0
  4234  0135  00C6               	movwf	??_fround+2
  4235  0136  3001               	movlw	1
  4236  0137                     u4295:	
  4237  0137  1003               	clrc
  4238  0138  0DC6               	rlf	??_fround+2,f
  4239  0139  3EFF               	addlw	-1
  4240  013A  1D03               	skipz
  4241  013B  2937               	goto	u4295
  4242  013C  1003               	clrc
  4243  013D  0D46               	rlf	??_fround+2,w
  4244  013E  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4245  013F  0084               	movwf	4
  4246  0140  160A  118A  200A  120A  118A  	fcall	stringdir
  4247  0145  00C7               	movwf	??_fround+3
  4248  0146  160A  118A  200A  120A  118A  	fcall	stringdir
  4249  014B  00C8               	movwf	??_fround+4
  4250  014C  160A  118A  200A  120A  118A  	fcall	stringdir
  4251  0151  00C9               	movwf	??_fround+5
  4252  0152  160A  118A  200A  120A  118A  	fcall	stringdir
  4253  0157  00CA               	movwf	??_fround+6
  4254  0158  084A               	movf	??_fround+6,w
  4255  0159  00AD               	movwf	___flmul@a+3
  4256  015A  0849               	movf	??_fround+5,w
  4257  015B  00AC               	movwf	___flmul@a+2
  4258  015C  0848               	movf	??_fround+4,w
  4259  015D  00AB               	movwf	___flmul@a+1
  4260  015E  0847               	movf	??_fround+3,w
  4261  015F  00AA               	movwf	___flmul@a
  4262  0160  120A  158A  21A2  120A  118A  	fcall	___flmul
  4263  0165  1283               	bcf	3,5	;RP0=0, select bank0
  4264  0166  1303               	bcf	3,6	;RP1=0, select bank0
  4265  0167  0829               	movf	?___flmul+3,w
  4266  0168  00D2               	movwf	_fround$871+3
  4267  0169  0828               	movf	?___flmul+2,w
  4268  016A  00D1               	movwf	_fround$871+2
  4269  016B  0827               	movf	?___flmul+1,w
  4270  016C  00D0               	movwf	_fround$871+1
  4271  016D  0826               	movf	?___flmul,w
  4272  016E  00CF               	movwf	_fround$871
  4273                           
  4274                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4275  016F  300A               	movlw	10
  4276  0170  00F0               	movwf	___lwmod@divisor
  4277  0171  3000               	movlw	0
  4278  0172  00F1               	movwf	___lwmod@divisor+1
  4279  0173  0853               	movf	fround@prec,w
  4280  0174  00C4               	movwf	??_fround
  4281  0175  01C5               	clrf	??_fround+1
  4282  0176  0844               	movf	??_fround,w
  4283  0177  00F2               	movwf	___lwmod@dividend
  4284  0178  0845               	movf	??_fround+1,w
  4285  0179  00F3               	movwf	___lwmod@dividend+1
  4286  017A  160A  158A  2604  120A  118A  	fcall	___lwmod
  4287  017F  0870               	movf	?___lwmod,w
  4288  0180  1283               	bcf	3,5	;RP0=0, select bank0
  4289  0181  1303               	bcf	3,6	;RP1=0, select bank0
  4290  0182  00C6               	movwf	??_fround+2
  4291  0183  3001               	movlw	1
  4292  0184                     u4305:	
  4293  0184  1003               	clrc
  4294  0185  0DC6               	rlf	??_fround+2,f
  4295  0186  3EFF               	addlw	-1
  4296  0187  1D03               	skipz
  4297  0188  2984               	goto	u4305
  4298  0189  1003               	clrc
  4299  018A  0D46               	rlf	??_fround+2,w
  4300  018B  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4301  018C  0084               	movwf	4
  4302  018D  160A  118A  200A  120A  118A  	fcall	stringdir
  4303  0192  00C7               	movwf	??_fround+3
  4304  0193  160A  118A  200A  120A  118A  	fcall	stringdir
  4305  0198  00C8               	movwf	??_fround+4
  4306  0199  160A  118A  200A  120A  118A  	fcall	stringdir
  4307  019E  00C9               	movwf	??_fround+5
  4308  019F  160A  118A  200A  120A  118A  	fcall	stringdir
  4309  01A4  00CA               	movwf	??_fround+6
  4310  01A5  084A               	movf	??_fround+6,w
  4311  01A6  00A9               	movwf	___flmul@b+3
  4312  01A7  0849               	movf	??_fround+5,w
  4313  01A8  00A8               	movwf	___flmul@b+2
  4314  01A9  0848               	movf	??_fround+4,w
  4315  01AA  00A7               	movwf	___flmul@b+1
  4316  01AB  0847               	movf	??_fround+3,w
  4317  01AC  00A6               	movwf	___flmul@b
  4318  01AD  0852               	movf	_fround$871+3,w
  4319  01AE  00AD               	movwf	___flmul@a+3
  4320  01AF  0851               	movf	_fround$871+2,w
  4321  01B0  00AC               	movwf	___flmul@a+2
  4322  01B1  0850               	movf	_fround$871+1,w
  4323  01B2  00AB               	movwf	___flmul@a+1
  4324  01B3  084F               	movf	_fround$871,w
  4325  01B4  00AA               	movwf	___flmul@a
  4326  01B5  120A  158A  21A2   	fcall	___flmul
  4327  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  4328  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  4329  01BA  0829               	movf	?___flmul+3,w
  4330  01BB  00C3               	movwf	?_fround+3
  4331  01BC  0828               	movf	?___flmul+2,w
  4332  01BD  00C2               	movwf	?_fround+2
  4333  01BE  0827               	movf	?___flmul+1,w
  4334  01BF  00C1               	movwf	?_fround+1
  4335  01C0  0826               	movf	?___flmul,w
  4336  01C1  00C0               	movwf	?_fround
  4337  01C2  0008               	return
  4338  01C3                     l2747:	
  4339                           
  4340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  4341  01C3  303F               	movlw	63
  4342  01C4  00A9               	movwf	___flmul@b+3
  4343  01C5  3000               	movlw	0
  4344  01C6  00A8               	movwf	___flmul@b+2
  4345  01C7  3000               	movlw	0
  4346  01C8  00A7               	movwf	___flmul@b+1
  4347  01C9  3000               	movlw	0
  4348  01CA  00A6               	movwf	___flmul@b
  4349  01CB  0853               	movf	fround@prec,w
  4350  01CC  00C4               	movwf	??_fround
  4351  01CD  3001               	movlw	1
  4352  01CE                     u4315:	
  4353  01CE  1003               	clrc
  4354  01CF  0DC4               	rlf	??_fround,f
  4355  01D0  3EFF               	addlw	-1
  4356  01D1  1D03               	skipz
  4357  01D2  29CE               	goto	u4315
  4358  01D3  1003               	clrc
  4359  01D4  0D44               	rlf	??_fround,w
  4360  01D5  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4361  01D6  0084               	movwf	4
  4362  01D7  160A  118A  200A  120A  118A  	fcall	stringdir
  4363  01DC  00C5               	movwf	??_fround+1
  4364  01DD  160A  118A  200A  120A  118A  	fcall	stringdir
  4365  01E2  00C6               	movwf	??_fround+2
  4366  01E3  160A  118A  200A  120A  118A  	fcall	stringdir
  4367  01E8  00C7               	movwf	??_fround+3
  4368  01E9  160A  118A  200A  120A  118A  	fcall	stringdir
  4369  01EE  00C8               	movwf	??_fround+4
  4370  01EF  0848               	movf	??_fround+4,w
  4371  01F0  00AD               	movwf	___flmul@a+3
  4372  01F1  0847               	movf	??_fround+3,w
  4373  01F2  00AC               	movwf	___flmul@a+2
  4374  01F3  0846               	movf	??_fround+2,w
  4375  01F4  00AB               	movwf	___flmul@a+1
  4376  01F5  0845               	movf	??_fround+1,w
  4377  01F6  00AA               	movwf	___flmul@a
  4378  01F7  120A  158A  21A2   	fcall	___flmul
  4379  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  4380  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  4381  01FC  0829               	movf	?___flmul+3,w
  4382  01FD  00C3               	movwf	?_fround+3
  4383  01FE  0828               	movf	?___flmul+2,w
  4384  01FF  00C2               	movwf	?_fround+2
  4385  0200  0827               	movf	?___flmul+1,w
  4386  0201  00C1               	movwf	?_fround+1
  4387  0202  0826               	movf	?___flmul,w
  4388  0203  00C0               	movwf	?_fround
  4389  0204  0008               	return
  4390  0205                     __end_of_fround:	
  4391                           
  4392                           	psect	text7
  4393  1E04                     __ptext7:	
  4394 ;; *************** function ___lwmod *****************
  4395 ;; Defined at:
  4396 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;  divisor         2    0[COMMON] unsigned int 
  4399 ;;  dividend        2    2[COMMON] unsigned int 
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;  counter         1    5[COMMON] unsigned char 
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  2    0[COMMON] unsigned int 
  4404 ;; Registers used:
  4405 ;;		wreg, status,2, status,0
  4406 ;; Tracked objects:
  4407 ;;		On entry : 0/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4411 ;;      Params:         4       0       0       0       0
  4412 ;;      Locals:         1       0       0       0       0
  4413 ;;      Temps:          1       0       0       0       0
  4414 ;;      Totals:         6       0       0       0       0
  4415 ;;Total ram usage:        6 bytes
  4416 ;; Hardware stack levels used:    1
  4417 ;; This function calls:
  4418 ;;		Nothing
  4419 ;; This function is called by:
  4420 ;;		_fround
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424                           
  4425                           ;psect for function ___lwmod
  4426  1E04                     ___lwmod:	
  4427                           
  4428                           ;incstack = 0
  4429                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4430  1E04  0870               	movf	___lwmod@divisor,w
  4431  1E05  0471               	iorwf	___lwmod@divisor+1,w
  4432  1E06  1903               	btfsc	3,2
  4433  1E07  2E31               	goto	l2365
  4434  1E08  01F5               	clrf	___lwmod@counter
  4435  1E09  0AF5               	incf	___lwmod@counter,f
  4436  1E0A                     l2355:	
  4437  1E0A  1BF1               	btfsc	___lwmod@divisor+1,7
  4438  1E0B  2E18               	goto	l2357
  4439  1E0C  3001               	movlw	1
  4440  1E0D                     u3355:	
  4441  1E0D  1003               	clrc
  4442  1E0E  0DF0               	rlf	___lwmod@divisor,f
  4443  1E0F  0DF1               	rlf	___lwmod@divisor+1,f
  4444  1E10  3EFF               	addlw	-1
  4445  1E11  1D03               	skipz
  4446  1E12  2E0D               	goto	u3355
  4447  1E13  3001               	movlw	1
  4448  1E14  00F4               	movwf	??___lwmod
  4449  1E15  0874               	movf	??___lwmod,w
  4450  1E16  07F5               	addwf	___lwmod@counter,f
  4451  1E17  2E0A               	goto	l2355
  4452  1E18                     l2357:	
  4453  1E18  0871               	movf	___lwmod@divisor+1,w
  4454  1E19  0273               	subwf	___lwmod@dividend+1,w
  4455  1E1A  1D03               	skipz
  4456  1E1B  2E1E               	goto	u3375
  4457  1E1C  0870               	movf	___lwmod@divisor,w
  4458  1E1D  0272               	subwf	___lwmod@dividend,w
  4459  1E1E                     u3375:	
  4460  1E1E  1C03               	skipc
  4461  1E1F  2E26               	goto	l2361
  4462  1E20  0870               	movf	___lwmod@divisor,w
  4463  1E21  02F2               	subwf	___lwmod@dividend,f
  4464  1E22  0871               	movf	___lwmod@divisor+1,w
  4465  1E23  1C03               	skipc
  4466  1E24  03F3               	decf	___lwmod@dividend+1,f
  4467  1E25  02F3               	subwf	___lwmod@dividend+1,f
  4468  1E26                     l2361:	
  4469  1E26  3001               	movlw	1
  4470  1E27                     u3385:	
  4471  1E27  1003               	clrc
  4472  1E28  0CF1               	rrf	___lwmod@divisor+1,f
  4473  1E29  0CF0               	rrf	___lwmod@divisor,f
  4474  1E2A  3EFF               	addlw	-1
  4475  1E2B  1D03               	skipz
  4476  1E2C  2E27               	goto	u3385
  4477  1E2D  3001               	movlw	1
  4478  1E2E  02F5               	subwf	___lwmod@counter,f
  4479  1E2F  1D03               	btfss	3,2
  4480  1E30  2E18               	goto	l2357
  4481  1E31                     l2365:	
  4482  1E31  0873               	movf	___lwmod@dividend+1,w
  4483  1E32  00F1               	movwf	?___lwmod+1
  4484  1E33  0872               	movf	___lwmod@dividend,w
  4485  1E34  00F0               	movwf	?___lwmod
  4486  1E35  0008               	return
  4487  1E36                     __end_of___lwmod:	
  4488                           
  4489                           	psect	text8
  4490  1EA8                     __ptext8:	
  4491 ;; *************** function ___lwdiv *****************
  4492 ;; Defined at:
  4493 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;  divisor         2    6[COMMON] unsigned int 
  4496 ;;  dividend        2    8[COMMON] unsigned int 
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;  quotient        2   11[COMMON] unsigned int 
  4499 ;;  counter         1   13[COMMON] unsigned char 
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  2    6[COMMON] unsigned int 
  4502 ;; Registers used:
  4503 ;;		wreg, status,2, status,0
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4509 ;;      Params:         4       0       0       0       0
  4510 ;;      Locals:         3       0       0       0       0
  4511 ;;      Temps:          1       0       0       0       0
  4512 ;;      Totals:         8       0       0       0       0
  4513 ;;Total ram usage:        8 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; This function calls:
  4516 ;;		Nothing
  4517 ;; This function is called by:
  4518 ;;		_fround
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           
  4523                           ;psect for function ___lwdiv
  4524  1EA8                     ___lwdiv:	
  4525                           
  4526                           ;incstack = 0
  4527                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4528  1EA8  01FB               	clrf	___lwdiv@quotient
  4529  1EA9  01FC               	clrf	___lwdiv@quotient+1
  4530  1EAA  0876               	movf	___lwdiv@divisor,w
  4531  1EAB  0477               	iorwf	___lwdiv@divisor+1,w
  4532  1EAC  1903               	btfsc	3,2
  4533  1EAD  2EDF               	goto	l2343
  4534  1EAE  01FD               	clrf	___lwdiv@counter
  4535  1EAF  0AFD               	incf	___lwdiv@counter,f
  4536  1EB0                     l2331:	
  4537  1EB0  1BF7               	btfsc	___lwdiv@divisor+1,7
  4538  1EB1  2EBE               	goto	l2333
  4539  1EB2  3001               	movlw	1
  4540  1EB3                     u3285:	
  4541  1EB3  1003               	clrc
  4542  1EB4  0DF6               	rlf	___lwdiv@divisor,f
  4543  1EB5  0DF7               	rlf	___lwdiv@divisor+1,f
  4544  1EB6  3EFF               	addlw	-1
  4545  1EB7  1D03               	skipz
  4546  1EB8  2EB3               	goto	u3285
  4547  1EB9  3001               	movlw	1
  4548  1EBA  00FA               	movwf	??___lwdiv
  4549  1EBB  087A               	movf	??___lwdiv,w
  4550  1EBC  07FD               	addwf	___lwdiv@counter,f
  4551  1EBD  2EB0               	goto	l2331
  4552  1EBE                     l2333:	
  4553  1EBE  3001               	movlw	1
  4554  1EBF                     u3305:	
  4555  1EBF  1003               	clrc
  4556  1EC0  0DFB               	rlf	___lwdiv@quotient,f
  4557  1EC1  0DFC               	rlf	___lwdiv@quotient+1,f
  4558  1EC2  3EFF               	addlw	-1
  4559  1EC3  1D03               	skipz
  4560  1EC4  2EBF               	goto	u3305
  4561  1EC5  0877               	movf	___lwdiv@divisor+1,w
  4562  1EC6  0279               	subwf	___lwdiv@dividend+1,w
  4563  1EC7  1D03               	skipz
  4564  1EC8  2ECB               	goto	u3315
  4565  1EC9  0876               	movf	___lwdiv@divisor,w
  4566  1ECA  0278               	subwf	___lwdiv@dividend,w
  4567  1ECB                     u3315:	
  4568  1ECB  1C03               	skipc
  4569  1ECC  2ED4               	goto	l2339
  4570  1ECD  0876               	movf	___lwdiv@divisor,w
  4571  1ECE  02F8               	subwf	___lwdiv@dividend,f
  4572  1ECF  0877               	movf	___lwdiv@divisor+1,w
  4573  1ED0  1C03               	skipc
  4574  1ED1  03F9               	decf	___lwdiv@dividend+1,f
  4575  1ED2  02F9               	subwf	___lwdiv@dividend+1,f
  4576  1ED3  147B               	bsf	___lwdiv@quotient,0
  4577  1ED4                     l2339:	
  4578  1ED4  3001               	movlw	1
  4579  1ED5                     u3325:	
  4580  1ED5  1003               	clrc
  4581  1ED6  0CF7               	rrf	___lwdiv@divisor+1,f
  4582  1ED7  0CF6               	rrf	___lwdiv@divisor,f
  4583  1ED8  3EFF               	addlw	-1
  4584  1ED9  1D03               	skipz
  4585  1EDA  2ED5               	goto	u3325
  4586  1EDB  3001               	movlw	1
  4587  1EDC  02FD               	subwf	___lwdiv@counter,f
  4588  1EDD  1D03               	btfss	3,2
  4589  1EDE  2EBE               	goto	l2333
  4590  1EDF                     l2343:	
  4591  1EDF  087C               	movf	___lwdiv@quotient+1,w
  4592  1EE0  00F7               	movwf	?___lwdiv+1
  4593  1EE1  087B               	movf	___lwdiv@quotient,w
  4594  1EE2  00F6               	movwf	?___lwdiv
  4595  1EE3  0008               	return
  4596  1EE4                     __end_of___lwdiv:	
  4597                           
  4598                           	psect	text9
  4599  09A2                     __ptext9:	
  4600 ;; *************** function ___flmul *****************
  4601 ;; Defined at:
  4602 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  4603 ;; Parameters:    Size  Location     Type
  4604 ;;  b               4    6[BANK0 ] unsigned int 
  4605 ;;  a               4   10[BANK0 ] unsigned int 
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;  prod            4   26[BANK0 ] struct .
  4608 ;;  grs             4   20[BANK0 ] unsigned long 
  4609 ;;  temp            2   30[BANK0 ] struct .
  4610 ;;  bexp            1   25[BANK0 ] unsigned char 
  4611 ;;  aexp            1   24[BANK0 ] unsigned char 
  4612 ;;  sign            1   19[BANK0 ] unsigned char 
  4613 ;; Return value:  Size  Location     Type
  4614 ;;                  4    6[BANK0 ] unsigned char 
  4615 ;; Registers used:
  4616 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4617 ;; Tracked objects:
  4618 ;;		On entry : 0/0
  4619 ;;		On exit  : 0/0
  4620 ;;		Unchanged: 0/0
  4621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4622 ;;      Params:         0       8       0       0       0
  4623 ;;      Locals:         0      13       0       0       0
  4624 ;;      Temps:          0       5       0       0       0
  4625 ;;      Totals:         0      26       0       0       0
  4626 ;;Total ram usage:       26 bytes
  4627 ;; Hardware stack levels used:    1
  4628 ;; Hardware stack levels required when called:    1
  4629 ;; This function calls:
  4630 ;;		__Umul8_16
  4631 ;; This function is called by:
  4632 ;;		_main
  4633 ;;		_fround
  4634 ;;		_scale
  4635 ;;		_sprintf
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639                           
  4640                           ;psect for function ___flmul
  4641  09A2                     ___flmul:	
  4642                           
  4643                           ;incstack = 0
  4644                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4645  09A2  1283               	bcf	3,5	;RP0=0, select bank0
  4646  09A3  1303               	bcf	3,6	;RP1=0, select bank0
  4647  09A4  0829               	movf	___flmul@b+3,w
  4648  09A5  3980               	andlw	128
  4649  09A6  00AE               	movwf	??___flmul
  4650  09A7  082E               	movf	??___flmul,w
  4651  09A8  00B3               	movwf	___flmul@sign
  4652  09A9  0829               	movf	___flmul@b+3,w
  4653  09AA  00AE               	movwf	??___flmul
  4654  09AB  072E               	addwf	??___flmul,w
  4655  09AC  00AF               	movwf	??___flmul+1
  4656  09AD  082F               	movf	??___flmul+1,w
  4657  09AE  00B9               	movwf	___flmul@bexp
  4658  09AF  1BA8               	btfsc	___flmul@b+2,7
  4659  09B0  1439               	bsf	___flmul@bexp,0
  4660  09B1  0839               	movf	___flmul@bexp,w
  4661  09B2  1903               	btfsc	3,2
  4662  09B3  29C1               	goto	l2579
  4663  09B4  0A39               	incf	___flmul@bexp,w
  4664  09B5  1D03               	btfss	3,2
  4665  09B6  29BF               	goto	l2577
  4666  09B7  3000               	movlw	0
  4667  09B8  00A9               	movwf	___flmul@b+3
  4668  09B9  3000               	movlw	0
  4669  09BA  00A8               	movwf	___flmul@b+2
  4670  09BB  3000               	movlw	0
  4671  09BC  00A7               	movwf	___flmul@b+1
  4672  09BD  3000               	movlw	0
  4673  09BE  00A6               	movwf	___flmul@b
  4674  09BF                     l2577:	
  4675  09BF  17A8               	bsf	___flmul@b+2,7
  4676  09C0  29C9               	goto	l2581
  4677  09C1                     l2579:	
  4678  09C1  3000               	movlw	0
  4679  09C2  00A9               	movwf	___flmul@b+3
  4680  09C3  3000               	movlw	0
  4681  09C4  00A8               	movwf	___flmul@b+2
  4682  09C5  3000               	movlw	0
  4683  09C6  00A7               	movwf	___flmul@b+1
  4684  09C7  3000               	movlw	0
  4685  09C8  00A6               	movwf	___flmul@b
  4686  09C9                     l2581:	
  4687  09C9  082D               	movf	___flmul@a+3,w
  4688  09CA  3980               	andlw	128
  4689  09CB  00AE               	movwf	??___flmul
  4690  09CC  082E               	movf	??___flmul,w
  4691  09CD  06B3               	xorwf	___flmul@sign,f
  4692  09CE  082D               	movf	___flmul@a+3,w
  4693  09CF  00AE               	movwf	??___flmul
  4694  09D0  072E               	addwf	??___flmul,w
  4695  09D1  00AF               	movwf	??___flmul+1
  4696  09D2  082F               	movf	??___flmul+1,w
  4697  09D3  00B8               	movwf	___flmul@aexp
  4698  09D4  1BAC               	btfsc	___flmul@a+2,7
  4699  09D5  1438               	bsf	___flmul@aexp,0
  4700  09D6  0838               	movf	___flmul@aexp,w
  4701  09D7  1903               	btfsc	3,2
  4702  09D8  29E6               	goto	l2597
  4703  09D9  0A38               	incf	___flmul@aexp,w
  4704  09DA  1D03               	btfss	3,2
  4705  09DB  29E4               	goto	l2595
  4706  09DC  3000               	movlw	0
  4707  09DD  00AD               	movwf	___flmul@a+3
  4708  09DE  3000               	movlw	0
  4709  09DF  00AC               	movwf	___flmul@a+2
  4710  09E0  3000               	movlw	0
  4711  09E1  00AB               	movwf	___flmul@a+1
  4712  09E2  3000               	movlw	0
  4713  09E3  00AA               	movwf	___flmul@a
  4714  09E4                     l2595:	
  4715  09E4  17AC               	bsf	___flmul@a+2,7
  4716  09E5  29EE               	goto	l2599
  4717  09E6                     l2597:	
  4718  09E6  3000               	movlw	0
  4719  09E7  00AD               	movwf	___flmul@a+3
  4720  09E8  3000               	movlw	0
  4721  09E9  00AC               	movwf	___flmul@a+2
  4722  09EA  3000               	movlw	0
  4723  09EB  00AB               	movwf	___flmul@a+1
  4724  09EC  3000               	movlw	0
  4725  09ED  00AA               	movwf	___flmul@a
  4726  09EE                     l2599:	
  4727  09EE  0838               	movf	___flmul@aexp,w
  4728  09EF  1D03               	btfss	3,2
  4729  09F0  0839               	movf	___flmul@bexp,w
  4730  09F1  1D03               	btfss	3,2
  4731  09F2  29FC               	goto	l2607
  4732  09F3  3000               	movlw	0
  4733  09F4  00A9               	movwf	?___flmul+3
  4734  09F5  3000               	movlw	0
  4735  09F6  00A8               	movwf	?___flmul+2
  4736  09F7  3000               	movlw	0
  4737  09F8  00A7               	movwf	?___flmul+1
  4738  09F9  3000               	movlw	0
  4739  09FA  00A6               	movwf	?___flmul
  4740  09FB  0008               	return
  4741  09FC                     l2607:	
  4742  09FC  0826               	movf	___flmul@b,w
  4743  09FD  00AE               	movwf	??___flmul
  4744  09FE  082E               	movf	??___flmul,w
  4745  09FF  00F0               	movwf	__Umul8_16@multiplicand
  4746  0A00  082C               	movf	___flmul@a+2,w
  4747  0A01  160A  158A  25E1  120A  158A  	fcall	__Umul8_16
  4748  0A06  0871               	movf	?__Umul8_16+1,w
  4749  0A07  1283               	bcf	3,5	;RP0=0, select bank0
  4750  0A08  1303               	bcf	3,6	;RP1=0, select bank0
  4751  0A09  00BF               	movwf	___flmul@temp+1
  4752  0A0A  0870               	movf	?__Umul8_16,w
  4753  0A0B  00BE               	movwf	___flmul@temp
  4754  0A0C  083E               	movf	___flmul@temp,w
  4755  0A0D  00AE               	movwf	??___flmul
  4756  0A0E  01AF               	clrf	??___flmul+1
  4757  0A0F  01B0               	clrf	??___flmul+2
  4758  0A10  01B1               	clrf	??___flmul+3
  4759  0A11  0831               	movf	??___flmul+3,w
  4760  0A12  00B7               	movwf	___flmul@grs+3
  4761  0A13  0830               	movf	??___flmul+2,w
  4762  0A14  00B6               	movwf	___flmul@grs+2
  4763  0A15  082F               	movf	??___flmul+1,w
  4764  0A16  00B5               	movwf	___flmul@grs+1
  4765  0A17  082E               	movf	??___flmul,w
  4766  0A18  00B4               	movwf	___flmul@grs
  4767  0A19  083F               	movf	___flmul@temp+1,w
  4768  0A1A  00AE               	movwf	??___flmul
  4769  0A1B  01AF               	clrf	??___flmul+1
  4770  0A1C  01B0               	clrf	??___flmul+2
  4771  0A1D  01B1               	clrf	??___flmul+3
  4772  0A1E  0831               	movf	??___flmul+3,w
  4773  0A1F  00BD               	movwf	___flmul@prod+3
  4774  0A20  0830               	movf	??___flmul+2,w
  4775  0A21  00BC               	movwf	___flmul@prod+2
  4776  0A22  082F               	movf	??___flmul+1,w
  4777  0A23  00BB               	movwf	___flmul@prod+1
  4778  0A24  082E               	movf	??___flmul,w
  4779  0A25  00BA               	movwf	___flmul@prod
  4780  0A26  0827               	movf	___flmul@b+1,w
  4781  0A27  00AE               	movwf	??___flmul
  4782  0A28  082E               	movf	??___flmul,w
  4783  0A29  00F0               	movwf	__Umul8_16@multiplicand
  4784  0A2A  082B               	movf	___flmul@a+1,w
  4785  0A2B  160A  158A  25E1  120A  158A  	fcall	__Umul8_16
  4786  0A30  0871               	movf	?__Umul8_16+1,w
  4787  0A31  1283               	bcf	3,5	;RP0=0, select bank0
  4788  0A32  1303               	bcf	3,6	;RP1=0, select bank0
  4789  0A33  00BF               	movwf	___flmul@temp+1
  4790  0A34  0870               	movf	?__Umul8_16,w
  4791  0A35  00BE               	movwf	___flmul@temp
  4792  0A36  083E               	movf	___flmul@temp,w
  4793  0A37  00AE               	movwf	??___flmul
  4794  0A38  01AF               	clrf	??___flmul+1
  4795  0A39  01B0               	clrf	??___flmul+2
  4796  0A3A  01B1               	clrf	??___flmul+3
  4797  0A3B  082E               	movf	??___flmul,w
  4798  0A3C  07B4               	addwf	___flmul@grs,f
  4799  0A3D  082F               	movf	??___flmul+1,w
  4800  0A3E  1103               	clrz
  4801  0A3F  1803               	skipnc
  4802  0A40  3E01               	addlw	1
  4803  0A41  1D03               	btfss	3,2
  4804  0A42  07B5               	addwf	___flmul@grs+1,f
  4805  0A43  0830               	movf	??___flmul+2,w
  4806  0A44  1103               	clrz
  4807  0A45  1803               	skipnc
  4808  0A46  3E01               	addlw	1
  4809  0A47  1D03               	btfss	3,2
  4810  0A48  07B6               	addwf	___flmul@grs+2,f
  4811  0A49  0831               	movf	??___flmul+3,w
  4812  0A4A  1103               	clrz
  4813  0A4B  1803               	skipnc
  4814  0A4C  3E01               	addlw	1
  4815  0A4D  1D03               	btfss	3,2
  4816  0A4E  07B7               	addwf	___flmul@grs+3,f
  4817  0A4F  083F               	movf	___flmul@temp+1,w
  4818  0A50  00AE               	movwf	??___flmul
  4819  0A51  01AF               	clrf	??___flmul+1
  4820  0A52  01B0               	clrf	??___flmul+2
  4821  0A53  01B1               	clrf	??___flmul+3
  4822  0A54  082E               	movf	??___flmul,w
  4823  0A55  07BA               	addwf	___flmul@prod,f
  4824  0A56  082F               	movf	??___flmul+1,w
  4825  0A57  1103               	clrz
  4826  0A58  1803               	skipnc
  4827  0A59  3E01               	addlw	1
  4828  0A5A  1D03               	btfss	3,2
  4829  0A5B  07BB               	addwf	___flmul@prod+1,f
  4830  0A5C  0830               	movf	??___flmul+2,w
  4831  0A5D  1103               	clrz
  4832  0A5E  1803               	skipnc
  4833  0A5F  3E01               	addlw	1
  4834  0A60  1D03               	btfss	3,2
  4835  0A61  07BC               	addwf	___flmul@prod+2,f
  4836  0A62  0831               	movf	??___flmul+3,w
  4837  0A63  1103               	clrz
  4838  0A64  1803               	skipnc
  4839  0A65  3E01               	addlw	1
  4840  0A66  1D03               	btfss	3,2
  4841  0A67  07BD               	addwf	___flmul@prod+3,f
  4842  0A68  0828               	movf	___flmul@b+2,w
  4843  0A69  00AE               	movwf	??___flmul
  4844  0A6A  082E               	movf	??___flmul,w
  4845  0A6B  00F0               	movwf	__Umul8_16@multiplicand
  4846  0A6C  082A               	movf	___flmul@a,w
  4847  0A6D  160A  158A  25E1  120A  158A  	fcall	__Umul8_16
  4848  0A72  0871               	movf	?__Umul8_16+1,w
  4849  0A73  1283               	bcf	3,5	;RP0=0, select bank0
  4850  0A74  1303               	bcf	3,6	;RP1=0, select bank0
  4851  0A75  00BF               	movwf	___flmul@temp+1
  4852  0A76  0870               	movf	?__Umul8_16,w
  4853  0A77  00BE               	movwf	___flmul@temp
  4854  0A78  083E               	movf	___flmul@temp,w
  4855  0A79  00AE               	movwf	??___flmul
  4856  0A7A  01AF               	clrf	??___flmul+1
  4857  0A7B  01B0               	clrf	??___flmul+2
  4858  0A7C  01B1               	clrf	??___flmul+3
  4859  0A7D  082E               	movf	??___flmul,w
  4860  0A7E  07B4               	addwf	___flmul@grs,f
  4861  0A7F  082F               	movf	??___flmul+1,w
  4862  0A80  1103               	clrz
  4863  0A81  1803               	skipnc
  4864  0A82  3E01               	addlw	1
  4865  0A83  1D03               	btfss	3,2
  4866  0A84  07B5               	addwf	___flmul@grs+1,f
  4867  0A85  0830               	movf	??___flmul+2,w
  4868  0A86  1103               	clrz
  4869  0A87  1803               	skipnc
  4870  0A88  3E01               	addlw	1
  4871  0A89  1D03               	btfss	3,2
  4872  0A8A  07B6               	addwf	___flmul@grs+2,f
  4873  0A8B  0831               	movf	??___flmul+3,w
  4874  0A8C  1103               	clrz
  4875  0A8D  1803               	skipnc
  4876  0A8E  3E01               	addlw	1
  4877  0A8F  1D03               	btfss	3,2
  4878  0A90  07B7               	addwf	___flmul@grs+3,f
  4879  0A91  083F               	movf	___flmul@temp+1,w
  4880  0A92  00AE               	movwf	??___flmul
  4881  0A93  01AF               	clrf	??___flmul+1
  4882  0A94  01B0               	clrf	??___flmul+2
  4883  0A95  01B1               	clrf	??___flmul+3
  4884  0A96  082E               	movf	??___flmul,w
  4885  0A97  07BA               	addwf	___flmul@prod,f
  4886  0A98  082F               	movf	??___flmul+1,w
  4887  0A99  1103               	clrz
  4888  0A9A  1803               	skipnc
  4889  0A9B  3E01               	addlw	1
  4890  0A9C  1D03               	btfss	3,2
  4891  0A9D  07BB               	addwf	___flmul@prod+1,f
  4892  0A9E  0830               	movf	??___flmul+2,w
  4893  0A9F  1103               	clrz
  4894  0AA0  1803               	skipnc
  4895  0AA1  3E01               	addlw	1
  4896  0AA2  1D03               	btfss	3,2
  4897  0AA3  07BC               	addwf	___flmul@prod+2,f
  4898  0AA4  0831               	movf	??___flmul+3,w
  4899  0AA5  1103               	clrz
  4900  0AA6  1803               	skipnc
  4901  0AA7  3E01               	addlw	1
  4902  0AA8  1D03               	btfss	3,2
  4903  0AA9  07BD               	addwf	___flmul@prod+3,f
  4904  0AAA  3008               	movlw	8
  4905  0AAB  00AE               	movwf	??___flmul
  4906  0AAC                     u3985:	
  4907  0AAC  1003               	clrc
  4908  0AAD  0DB4               	rlf	___flmul@grs,f
  4909  0AAE  0DB5               	rlf	___flmul@grs+1,f
  4910  0AAF  0DB6               	rlf	___flmul@grs+2,f
  4911  0AB0  0DB7               	rlf	___flmul@grs+3,f
  4912  0AB1  0BAE               	decfsz	??___flmul,f
  4913  0AB2  2AAC               	goto	u3985
  4914  0AB3  0827               	movf	___flmul@b+1,w
  4915  0AB4  00AE               	movwf	??___flmul
  4916  0AB5  082E               	movf	??___flmul,w
  4917  0AB6  00F0               	movwf	__Umul8_16@multiplicand
  4918  0AB7  082A               	movf	___flmul@a,w
  4919  0AB8  160A  158A  25E1  120A  158A  	fcall	__Umul8_16
  4920  0ABD  0871               	movf	?__Umul8_16+1,w
  4921  0ABE  1283               	bcf	3,5	;RP0=0, select bank0
  4922  0ABF  1303               	bcf	3,6	;RP1=0, select bank0
  4923  0AC0  00BF               	movwf	___flmul@temp+1
  4924  0AC1  0870               	movf	?__Umul8_16,w
  4925  0AC2  00BE               	movwf	___flmul@temp
  4926  0AC3  083E               	movf	___flmul@temp,w
  4927  0AC4  00AE               	movwf	??___flmul
  4928  0AC5  083F               	movf	___flmul@temp+1,w
  4929  0AC6  00AF               	movwf	??___flmul+1
  4930  0AC7  01B0               	clrf	??___flmul+2
  4931  0AC8  01B1               	clrf	??___flmul+3
  4932  0AC9  082E               	movf	??___flmul,w
  4933  0ACA  07B4               	addwf	___flmul@grs,f
  4934  0ACB  082F               	movf	??___flmul+1,w
  4935  0ACC  1103               	clrz
  4936  0ACD  1803               	skipnc
  4937  0ACE  3E01               	addlw	1
  4938  0ACF  1D03               	btfss	3,2
  4939  0AD0  07B5               	addwf	___flmul@grs+1,f
  4940  0AD1  0830               	movf	??___flmul+2,w
  4941  0AD2  1103               	clrz
  4942  0AD3  1803               	skipnc
  4943  0AD4  3E01               	addlw	1
  4944  0AD5  1D03               	btfss	3,2
  4945  0AD6  07B6               	addwf	___flmul@grs+2,f
  4946  0AD7  0831               	movf	??___flmul+3,w
  4947  0AD8  1103               	clrz
  4948  0AD9  1803               	skipnc
  4949  0ADA  3E01               	addlw	1
  4950  0ADB  1D03               	btfss	3,2
  4951  0ADC  07B7               	addwf	___flmul@grs+3,f
  4952  0ADD  0826               	movf	___flmul@b,w
  4953  0ADE  00AE               	movwf	??___flmul
  4954  0ADF  082E               	movf	??___flmul,w
  4955  0AE0  00F0               	movwf	__Umul8_16@multiplicand
  4956  0AE1  082B               	movf	___flmul@a+1,w
  4957  0AE2  160A  158A  25E1  120A  158A  	fcall	__Umul8_16
  4958  0AE7  0871               	movf	?__Umul8_16+1,w
  4959  0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  4960  0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  4961  0AEA  00BF               	movwf	___flmul@temp+1
  4962  0AEB  0870               	movf	?__Umul8_16,w
  4963  0AEC  00BE               	movwf	___flmul@temp
  4964  0AED  083E               	movf	___flmul@temp,w
  4965  0AEE  00AE               	movwf	??___flmul
  4966  0AEF  083F               	movf	___flmul@temp+1,w
  4967  0AF0  00AF               	movwf	??___flmul+1
  4968  0AF1  01B0               	clrf	??___flmul+2
  4969  0AF2  01B1               	clrf	??___flmul+3
  4970  0AF3  082E               	movf	??___flmul,w
  4971  0AF4  07B4               	addwf	___flmul@grs,f
  4972  0AF5  082F               	movf	??___flmul+1,w
  4973  0AF6  1103               	clrz
  4974  0AF7  1803               	skipnc
  4975  0AF8  3E01               	addlw	1
  4976  0AF9  1D03               	btfss	3,2
  4977  0AFA  07B5               	addwf	___flmul@grs+1,f
  4978  0AFB  0830               	movf	??___flmul+2,w
  4979  0AFC  1103               	clrz
  4980  0AFD  1803               	skipnc
  4981  0AFE  3E01               	addlw	1
  4982  0AFF  1D03               	btfss	3,2
  4983  0B00  07B6               	addwf	___flmul@grs+2,f
  4984  0B01  0831               	movf	??___flmul+3,w
  4985  0B02  1103               	clrz
  4986  0B03  1803               	skipnc
  4987  0B04  3E01               	addlw	1
  4988  0B05  1D03               	btfss	3,2
  4989  0B06  07B7               	addwf	___flmul@grs+3,f
  4990  0B07  3008               	movlw	8
  4991  0B08  00AE               	movwf	??___flmul
  4992  0B09                     u4015:	
  4993  0B09  1003               	clrc
  4994  0B0A  0DB4               	rlf	___flmul@grs,f
  4995  0B0B  0DB5               	rlf	___flmul@grs+1,f
  4996  0B0C  0DB6               	rlf	___flmul@grs+2,f
  4997  0B0D  0DB7               	rlf	___flmul@grs+3,f
  4998  0B0E  0BAE               	decfsz	??___flmul,f
  4999  0B0F  2B09               	goto	u4015
  5000  0B10  0826               	movf	___flmul@b,w
  5001  0B11  00AE               	movwf	??___flmul
  5002  0B12  082E               	movf	??___flmul,w
  5003  0B13  00F0               	movwf	__Umul8_16@multiplicand
  5004  0B14  082A               	movf	___flmul@a,w
  5005  0B15  160A  158A  25E1  120A  158A  	fcall	__Umul8_16
  5006  0B1A  0871               	movf	?__Umul8_16+1,w
  5007  0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  5008  0B1C  1303               	bcf	3,6	;RP1=0, select bank0
  5009  0B1D  00BF               	movwf	___flmul@temp+1
  5010  0B1E  0870               	movf	?__Umul8_16,w
  5011  0B1F  00BE               	movwf	___flmul@temp
  5012  0B20  083E               	movf	___flmul@temp,w
  5013  0B21  00AE               	movwf	??___flmul
  5014  0B22  083F               	movf	___flmul@temp+1,w
  5015  0B23  00AF               	movwf	??___flmul+1
  5016  0B24  01B0               	clrf	??___flmul+2
  5017  0B25  01B1               	clrf	??___flmul+3
  5018  0B26  082E               	movf	??___flmul,w
  5019  0B27  07B4               	addwf	___flmul@grs,f
  5020  0B28  082F               	movf	??___flmul+1,w
  5021  0B29  1103               	clrz
  5022  0B2A  1803               	skipnc
  5023  0B2B  3E01               	addlw	1
  5024  0B2C  1D03               	btfss	3,2
  5025  0B2D  07B5               	addwf	___flmul@grs+1,f
  5026  0B2E  0830               	movf	??___flmul+2,w
  5027  0B2F  1103               	clrz
  5028  0B30  1803               	skipnc
  5029  0B31  3E01               	addlw	1
  5030  0B32  1D03               	btfss	3,2
  5031  0B33  07B6               	addwf	___flmul@grs+2,f
  5032  0B34  0831               	movf	??___flmul+3,w
  5033  0B35  1103               	clrz
  5034  0B36  1803               	skipnc
  5035  0B37  3E01               	addlw	1
  5036  0B38  1D03               	btfss	3,2
  5037  0B39  07B7               	addwf	___flmul@grs+3,f
  5038  0B3A  0827               	movf	___flmul@b+1,w
  5039  0B3B  00AE               	movwf	??___flmul
  5040  0B3C  082E               	movf	??___flmul,w
  5041  0B3D  00F0               	movwf	__Umul8_16@multiplicand
  5042  0B3E  082C               	movf	___flmul@a+2,w
  5043  0B3F  160A  158A  25E1  120A  158A  	fcall	__Umul8_16
  5044  0B44  0871               	movf	?__Umul8_16+1,w
  5045  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  5046  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  5047  0B47  00BF               	movwf	___flmul@temp+1
  5048  0B48  0870               	movf	?__Umul8_16,w
  5049  0B49  00BE               	movwf	___flmul@temp
  5050  0B4A  083E               	movf	___flmul@temp,w
  5051  0B4B  00AE               	movwf	??___flmul
  5052  0B4C  083F               	movf	___flmul@temp+1,w
  5053  0B4D  00AF               	movwf	??___flmul+1
  5054  0B4E  01B0               	clrf	??___flmul+2
  5055  0B4F  01B1               	clrf	??___flmul+3
  5056  0B50  082E               	movf	??___flmul,w
  5057  0B51  07BA               	addwf	___flmul@prod,f
  5058  0B52  082F               	movf	??___flmul+1,w
  5059  0B53  1103               	clrz
  5060  0B54  1803               	skipnc
  5061  0B55  3E01               	addlw	1
  5062  0B56  1D03               	btfss	3,2
  5063  0B57  07BB               	addwf	___flmul@prod+1,f
  5064  0B58  0830               	movf	??___flmul+2,w
  5065  0B59  1103               	clrz
  5066  0B5A  1803               	skipnc
  5067  0B5B  3E01               	addlw	1
  5068  0B5C  1D03               	btfss	3,2
  5069  0B5D  07BC               	addwf	___flmul@prod+2,f
  5070  0B5E  0831               	movf	??___flmul+3,w
  5071  0B5F  1103               	clrz
  5072  0B60  1803               	skipnc
  5073  0B61  3E01               	addlw	1
  5074  0B62  1D03               	btfss	3,2
  5075  0B63  07BD               	addwf	___flmul@prod+3,f
  5076  0B64  0828               	movf	___flmul@b+2,w
  5077  0B65  00AE               	movwf	??___flmul
  5078  0B66  082E               	movf	??___flmul,w
  5079  0B67  00F0               	movwf	__Umul8_16@multiplicand
  5080  0B68  082B               	movf	___flmul@a+1,w
  5081  0B69  160A  158A  25E1  120A  158A  	fcall	__Umul8_16
  5082  0B6E  0871               	movf	?__Umul8_16+1,w
  5083  0B6F  1283               	bcf	3,5	;RP0=0, select bank0
  5084  0B70  1303               	bcf	3,6	;RP1=0, select bank0
  5085  0B71  00BF               	movwf	___flmul@temp+1
  5086  0B72  0870               	movf	?__Umul8_16,w
  5087  0B73  00BE               	movwf	___flmul@temp
  5088  0B74  083E               	movf	___flmul@temp,w
  5089  0B75  00AE               	movwf	??___flmul
  5090  0B76  083F               	movf	___flmul@temp+1,w
  5091  0B77  00AF               	movwf	??___flmul+1
  5092  0B78  01B0               	clrf	??___flmul+2
  5093  0B79  01B1               	clrf	??___flmul+3
  5094  0B7A  082E               	movf	??___flmul,w
  5095  0B7B  07BA               	addwf	___flmul@prod,f
  5096  0B7C  082F               	movf	??___flmul+1,w
  5097  0B7D  1103               	clrz
  5098  0B7E  1803               	skipnc
  5099  0B7F  3E01               	addlw	1
  5100  0B80  1D03               	btfss	3,2
  5101  0B81  07BB               	addwf	___flmul@prod+1,f
  5102  0B82  0830               	movf	??___flmul+2,w
  5103  0B83  1103               	clrz
  5104  0B84  1803               	skipnc
  5105  0B85  3E01               	addlw	1
  5106  0B86  1D03               	btfss	3,2
  5107  0B87  07BC               	addwf	___flmul@prod+2,f
  5108  0B88  0831               	movf	??___flmul+3,w
  5109  0B89  1103               	clrz
  5110  0B8A  1803               	skipnc
  5111  0B8B  3E01               	addlw	1
  5112  0B8C  1D03               	btfss	3,2
  5113  0B8D  07BD               	addwf	___flmul@prod+3,f
  5114  0B8E  0828               	movf	___flmul@b+2,w
  5115  0B8F  00AE               	movwf	??___flmul
  5116  0B90  082E               	movf	??___flmul,w
  5117  0B91  00F0               	movwf	__Umul8_16@multiplicand
  5118  0B92  082C               	movf	___flmul@a+2,w
  5119  0B93  160A  158A  25E1  120A  158A  	fcall	__Umul8_16
  5120  0B98  0871               	movf	?__Umul8_16+1,w
  5121  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  5122  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  5123  0B9B  00BF               	movwf	___flmul@temp+1
  5124  0B9C  0870               	movf	?__Umul8_16,w
  5125  0B9D  00BE               	movwf	___flmul@temp
  5126  0B9E  083E               	movf	___flmul@temp,w
  5127  0B9F  00AE               	movwf	??___flmul
  5128  0BA0  083F               	movf	___flmul@temp+1,w
  5129  0BA1  00AF               	movwf	??___flmul+1
  5130  0BA2  01B0               	clrf	??___flmul+2
  5131  0BA3  01B1               	clrf	??___flmul+3
  5132  0BA4  3008               	movlw	8
  5133  0BA5                     u4055:	
  5134  0BA5  1003               	clrc
  5135  0BA6  0DAE               	rlf	??___flmul,f
  5136  0BA7  0DAF               	rlf	??___flmul+1,f
  5137  0BA8  0DB0               	rlf	??___flmul+2,f
  5138  0BA9  0DB1               	rlf	??___flmul+3,f
  5139  0BAA  3EFF               	addlw	-1
  5140  0BAB  1D03               	skipz
  5141  0BAC  2BA5               	goto	u4055
  5142  0BAD  082E               	movf	??___flmul,w
  5143  0BAE  07BA               	addwf	___flmul@prod,f
  5144  0BAF  082F               	movf	??___flmul+1,w
  5145  0BB0  1103               	clrz
  5146  0BB1  1803               	skipnc
  5147  0BB2  3E01               	addlw	1
  5148  0BB3  1D03               	btfss	3,2
  5149  0BB4  07BB               	addwf	___flmul@prod+1,f
  5150  0BB5  0830               	movf	??___flmul+2,w
  5151  0BB6  1103               	clrz
  5152  0BB7  1803               	skipnc
  5153  0BB8  3E01               	addlw	1
  5154  0BB9  1D03               	btfss	3,2
  5155  0BBA  07BC               	addwf	___flmul@prod+2,f
  5156  0BBB  0831               	movf	??___flmul+3,w
  5157  0BBC  1103               	clrz
  5158  0BBD  1803               	skipnc
  5159  0BBE  3E01               	addlw	1
  5160  0BBF  1D03               	btfss	3,2
  5161  0BC0  07BD               	addwf	___flmul@prod+3,f
  5162  0BC1  0834               	movf	___flmul@grs,w
  5163  0BC2  00AE               	movwf	??___flmul
  5164  0BC3  0835               	movf	___flmul@grs+1,w
  5165  0BC4  00AF               	movwf	??___flmul+1
  5166  0BC5  0836               	movf	___flmul@grs+2,w
  5167  0BC6  00B0               	movwf	??___flmul+2
  5168  0BC7  0837               	movf	___flmul@grs+3,w
  5169  0BC8  00B1               	movwf	??___flmul+3
  5170  0BC9  3018               	movlw	24
  5171  0BCA                     u4075:	
  5172  0BCA  1003               	clrc
  5173  0BCB  0CB1               	rrf	??___flmul+3,f
  5174  0BCC  0CB0               	rrf	??___flmul+2,f
  5175  0BCD  0CAF               	rrf	??___flmul+1,f
  5176  0BCE  0CAE               	rrf	??___flmul,f
  5177  0BCF  3EFF               	addlw	-1
  5178  0BD0  1D03               	skipz
  5179  0BD1  2BCA               	goto	u4075
  5180  0BD2  082E               	movf	??___flmul,w
  5181  0BD3  07BA               	addwf	___flmul@prod,f
  5182  0BD4  082F               	movf	??___flmul+1,w
  5183  0BD5  1103               	clrz
  5184  0BD6  1803               	skipnc
  5185  0BD7  3E01               	addlw	1
  5186  0BD8  1D03               	btfss	3,2
  5187  0BD9  07BB               	addwf	___flmul@prod+1,f
  5188  0BDA  0830               	movf	??___flmul+2,w
  5189  0BDB  1103               	clrz
  5190  0BDC  1803               	skipnc
  5191  0BDD  3E01               	addlw	1
  5192  0BDE  1D03               	btfss	3,2
  5193  0BDF  07BC               	addwf	___flmul@prod+2,f
  5194  0BE0  0831               	movf	??___flmul+3,w
  5195  0BE1  1103               	clrz
  5196  0BE2  1803               	skipnc
  5197  0BE3  3E01               	addlw	1
  5198  0BE4  1D03               	btfss	3,2
  5199  0BE5  07BD               	addwf	___flmul@prod+3,f
  5200  0BE6  3008               	movlw	8
  5201  0BE7  00AE               	movwf	??___flmul
  5202  0BE8                     u4095:	
  5203  0BE8  1003               	clrc
  5204  0BE9  0DB4               	rlf	___flmul@grs,f
  5205  0BEA  0DB5               	rlf	___flmul@grs+1,f
  5206  0BEB  0DB6               	rlf	___flmul@grs+2,f
  5207  0BEC  0DB7               	rlf	___flmul@grs+3,f
  5208  0BED  0BAE               	decfsz	??___flmul,f
  5209  0BEE  2BE8               	goto	u4095
  5210  0BEF  0839               	movf	___flmul@bexp,w
  5211  0BF0  0738               	addwf	___flmul@aexp,w
  5212  0BF1  00AE               	movwf	??___flmul
  5213  0BF2  01AF               	clrf	??___flmul+1
  5214  0BF3  0DAF               	rlf	??___flmul+1,f
  5215  0BF4  082E               	movf	??___flmul,w
  5216  0BF5  3E82               	addlw	130
  5217  0BF6  00BE               	movwf	___flmul@temp
  5218  0BF7  082F               	movf	??___flmul+1,w
  5219  0BF8  1803               	skipnc
  5220  0BF9  3E01               	addlw	1
  5221  0BFA  3EFF               	addlw	255
  5222  0BFB  00BF               	movwf	___flmul@temp+1
  5223  0BFC                     l2659:	
  5224  0BFC  1BBC               	btfsc	___flmul@prod+2,7
  5225  0BFD  2C19               	goto	l2661
  5226  0BFE  3001               	movlw	1
  5227  0BFF  00AE               	movwf	??___flmul
  5228  0C00                     u4105:	
  5229  0C00  1003               	clrc
  5230  0C01  0DBA               	rlf	___flmul@prod,f
  5231  0C02  0DBB               	rlf	___flmul@prod+1,f
  5232  0C03  0DBC               	rlf	___flmul@prod+2,f
  5233  0C04  0DBD               	rlf	___flmul@prod+3,f
  5234  0C05  0BAE               	decfsz	??___flmul,f
  5235  0C06  2C00               	goto	u4105
  5236  0C07  1BB7               	btfsc	___flmul@grs+3,7
  5237  0C08  143A               	bsf	___flmul@prod,0
  5238  0C09  3001               	movlw	1
  5239  0C0A  00AE               	movwf	??___flmul
  5240  0C0B                     u4125:	
  5241  0C0B  1003               	clrc
  5242  0C0C  0DB4               	rlf	___flmul@grs,f
  5243  0C0D  0DB5               	rlf	___flmul@grs+1,f
  5244  0C0E  0DB6               	rlf	___flmul@grs+2,f
  5245  0C0F  0DB7               	rlf	___flmul@grs+3,f
  5246  0C10  0BAE               	decfsz	??___flmul,f
  5247  0C11  2C0B               	goto	u4125
  5248  0C12  30FF               	movlw	255
  5249  0C13  07BE               	addwf	___flmul@temp,f
  5250  0C14  1803               	skipnc
  5251  0C15  0ABF               	incf	___flmul@temp+1,f
  5252  0C16  30FF               	movlw	255
  5253  0C17  07BF               	addwf	___flmul@temp+1,f
  5254  0C18  2BFC               	goto	l2659
  5255  0C19                     l2661:	
  5256  0C19  01B8               	clrf	___flmul@aexp
  5257  0C1A  1FB7               	btfss	___flmul@grs+3,7
  5258  0C1B  2C32               	goto	l2671
  5259  0C1C  30FF               	movlw	255
  5260  0C1D  0534               	andwf	___flmul@grs,w
  5261  0C1E  00AE               	movwf	??___flmul
  5262  0C1F  30FF               	movlw	255
  5263  0C20  0535               	andwf	___flmul@grs+1,w
  5264  0C21  00AF               	movwf	??___flmul+1
  5265  0C22  30FF               	movlw	255
  5266  0C23  0536               	andwf	___flmul@grs+2,w
  5267  0C24  00B0               	movwf	??___flmul+2
  5268  0C25  307F               	movlw	127
  5269  0C26  0537               	andwf	___flmul@grs+3,w
  5270  0C27  00B1               	movwf	??___flmul+3
  5271  0C28  0831               	movf	??___flmul+3,w
  5272  0C29  0430               	iorwf	??___flmul+2,w
  5273  0C2A  042F               	iorwf	??___flmul+1,w
  5274  0C2B  042E               	iorwf	??___flmul,w
  5275  0C2C  1903               	skipnz
  5276  0C2D  183A               	btfsc	___flmul@prod,0
  5277  0C2E  2C30               	goto	l2667
  5278  0C2F  2C32               	goto	l2671
  5279  0C30                     l2667:	
  5280  0C30  01B8               	clrf	___flmul@aexp
  5281  0C31  0AB8               	incf	___flmul@aexp,f
  5282  0C32                     l2671:	
  5283  0C32  0838               	movf	___flmul@aexp,w
  5284  0C33  1903               	btfsc	3,2
  5285  0C34  2C64               	goto	l2681
  5286  0C35  3001               	movlw	1
  5287  0C36  07BA               	addwf	___flmul@prod,f
  5288  0C37  3000               	movlw	0
  5289  0C38  1803               	skipnc
  5290  0C39  3001               	movlw	1
  5291  0C3A  07BB               	addwf	___flmul@prod+1,f
  5292  0C3B  3000               	movlw	0
  5293  0C3C  1803               	skipnc
  5294  0C3D  3001               	movlw	1
  5295  0C3E  07BC               	addwf	___flmul@prod+2,f
  5296  0C3F  3000               	movlw	0
  5297  0C40  1803               	skipnc
  5298  0C41  3001               	movlw	1
  5299  0C42  07BD               	addwf	___flmul@prod+3,f
  5300  0C43  1C3D               	btfss	___flmul@prod+3,0
  5301  0C44  2C64               	goto	l2681
  5302  0C45  083A               	movf	___flmul@prod,w
  5303  0C46  00AE               	movwf	??___flmul
  5304  0C47  083B               	movf	___flmul@prod+1,w
  5305  0C48  00AF               	movwf	??___flmul+1
  5306  0C49  083C               	movf	___flmul@prod+2,w
  5307  0C4A  00B0               	movwf	??___flmul+2
  5308  0C4B  083D               	movf	___flmul@prod+3,w
  5309  0C4C  00B1               	movwf	??___flmul+3
  5310  0C4D  3001               	movlw	1
  5311  0C4E  00B2               	movwf	??___flmul+4
  5312  0C4F                     u4195:	
  5313  0C4F  0D31               	rlf	??___flmul+3,w
  5314  0C50  0CB1               	rrf	??___flmul+3,f
  5315  0C51  0CB0               	rrf	??___flmul+2,f
  5316  0C52  0CAF               	rrf	??___flmul+1,f
  5317  0C53  0CAE               	rrf	??___flmul,f
  5318  0C54  0BB2               	decfsz	??___flmul+4,f
  5319  0C55  2C4F               	goto	u4195
  5320  0C56  0831               	movf	??___flmul+3,w
  5321  0C57  00BD               	movwf	___flmul@prod+3
  5322  0C58  0830               	movf	??___flmul+2,w
  5323  0C59  00BC               	movwf	___flmul@prod+2
  5324  0C5A  082F               	movf	??___flmul+1,w
  5325  0C5B  00BB               	movwf	___flmul@prod+1
  5326  0C5C  082E               	movf	??___flmul,w
  5327  0C5D  00BA               	movwf	___flmul@prod
  5328  0C5E  3001               	movlw	1
  5329  0C5F  07BE               	addwf	___flmul@temp,f
  5330  0C60  1803               	skipnc
  5331  0C61  0ABF               	incf	___flmul@temp+1,f
  5332  0C62  3000               	movlw	0
  5333  0C63  07BF               	addwf	___flmul@temp+1,f
  5334  0C64                     l2681:	
  5335  0C64  083F               	movf	___flmul@temp+1,w
  5336  0C65  3A80               	xorlw	128
  5337  0C66  00FF               	movwf	127
  5338  0C67  3080               	movlw	128
  5339  0C68  027F               	subwf	127,w
  5340  0C69  1D03               	skipz
  5341  0C6A  2C6D               	goto	u4205
  5342  0C6B  30FF               	movlw	255
  5343  0C6C  023E               	subwf	___flmul@temp,w
  5344  0C6D                     u4205:	
  5345  0C6D  1C03               	skipc
  5346  0C6E  2C7A               	goto	l2685
  5347  0C6F  307F               	movlw	127
  5348  0C70  1283               	bcf	3,5	;RP0=0, select bank0
  5349  0C71  1303               	bcf	3,6	;RP1=0, select bank0
  5350  0C72  00BD               	movwf	___flmul@prod+3
  5351  0C73  3080               	movlw	128
  5352  0C74  00BC               	movwf	___flmul@prod+2
  5353  0C75  3000               	movlw	0
  5354  0C76  00BB               	movwf	___flmul@prod+1
  5355  0C77  3000               	movlw	0
  5356  0C78  00BA               	movwf	___flmul@prod
  5357  0C79  2CAA               	goto	l699
  5358  0C7A                     l2685:	
  5359  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  5360  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  5361  0C7C  083F               	movf	___flmul@temp+1,w
  5362  0C7D  3A80               	xorlw	128
  5363  0C7E  00FF               	movwf	127
  5364  0C7F  3080               	movlw	128
  5365  0C80  027F               	subwf	127,w
  5366  0C81  1D03               	skipz
  5367  0C82  2C85               	goto	u4215
  5368  0C83  3001               	movlw	1
  5369  0C84  023E               	subwf	___flmul@temp,w
  5370  0C85                     u4215:	
  5371  0C85  1803               	skipnc
  5372  0C86  2C93               	goto	l2691
  5373  0C87  3000               	movlw	0
  5374  0C88  1283               	bcf	3,5	;RP0=0, select bank0
  5375  0C89  1303               	bcf	3,6	;RP1=0, select bank0
  5376  0C8A  00BD               	movwf	___flmul@prod+3
  5377  0C8B  3000               	movlw	0
  5378  0C8C  00BC               	movwf	___flmul@prod+2
  5379  0C8D  3000               	movlw	0
  5380  0C8E  00BB               	movwf	___flmul@prod+1
  5381  0C8F  3000               	movlw	0
  5382  0C90  00BA               	movwf	___flmul@prod
  5383  0C91  01B3               	clrf	___flmul@sign
  5384  0C92  2CAA               	goto	l699
  5385  0C93                     l2691:	
  5386  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  5387  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  5388  0C95  083E               	movf	___flmul@temp,w
  5389  0C96  00AE               	movwf	??___flmul
  5390  0C97  082E               	movf	??___flmul,w
  5391  0C98  00B9               	movwf	___flmul@bexp
  5392  0C99  30FF               	movlw	255
  5393  0C9A  05BA               	andwf	___flmul@prod,f
  5394  0C9B  30FF               	movlw	255
  5395  0C9C  05BB               	andwf	___flmul@prod+1,f
  5396  0C9D  307F               	movlw	127
  5397  0C9E  05BC               	andwf	___flmul@prod+2,f
  5398  0C9F  3000               	movlw	0
  5399  0CA0  05BD               	andwf	___flmul@prod+3,f
  5400  0CA1  1839               	btfsc	___flmul@bexp,0
  5401  0CA2  17BC               	bsf	___flmul@prod+2,7
  5402  0CA3  0839               	movf	___flmul@bexp,w
  5403  0CA4  00AE               	movwf	??___flmul
  5404  0CA5  1003               	clrc
  5405  0CA6  0C2E               	rrf	??___flmul,w
  5406  0CA7  00AF               	movwf	??___flmul+1
  5407  0CA8  082F               	movf	??___flmul+1,w
  5408  0CA9  00BD               	movwf	___flmul@prod+3
  5409  0CAA                     l699:	
  5410  0CAA  0833               	movf	___flmul@sign,w
  5411  0CAB  00AE               	movwf	??___flmul
  5412  0CAC  082E               	movf	??___flmul,w
  5413  0CAD  04BD               	iorwf	___flmul@prod+3,f
  5414  0CAE  083D               	movf	___flmul@prod+3,w
  5415  0CAF  00A9               	movwf	?___flmul+3
  5416  0CB0  083C               	movf	___flmul@prod+2,w
  5417  0CB1  00A8               	movwf	?___flmul+2
  5418  0CB2  083B               	movf	___flmul@prod+1,w
  5419  0CB3  00A7               	movwf	?___flmul+1
  5420  0CB4  083A               	movf	___flmul@prod,w
  5421  0CB5  00A6               	movwf	?___flmul
  5422  0CB6  0008               	return
  5423  0CB7                     __end_of___flmul:	
  5424                           
  5425                           	psect	text10
  5426  1DE1                     __ptext10:	
  5427 ;; *************** function __Umul8_16 *****************
  5428 ;; Defined at:
  5429 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;  multiplier      1    wreg     unsigned char 
  5432 ;;  multiplicand    1    0[COMMON] unsigned char 
  5433 ;; Auto vars:     Size  Location     Type
  5434 ;;  multiplier      1    8[COMMON] unsigned char 
  5435 ;;  word_mpld       2    6[COMMON] unsigned int 
  5436 ;;  product         2    4[COMMON] unsigned int 
  5437 ;; Return value:  Size  Location     Type
  5438 ;;                  2    0[COMMON] unsigned int 
  5439 ;; Registers used:
  5440 ;;		wreg, status,2, status,0
  5441 ;; Tracked objects:
  5442 ;;		On entry : 0/0
  5443 ;;		On exit  : 0/0
  5444 ;;		Unchanged: 0/0
  5445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5446 ;;      Params:         2       0       0       0       0
  5447 ;;      Locals:         5       0       0       0       0
  5448 ;;      Temps:          2       0       0       0       0
  5449 ;;      Totals:         9       0       0       0       0
  5450 ;;Total ram usage:        9 bytes
  5451 ;; Hardware stack levels used:    1
  5452 ;; This function calls:
  5453 ;;		Nothing
  5454 ;; This function is called by:
  5455 ;;		___flmul
  5456 ;; This function uses a non-reentrant model
  5457 ;;
  5458                           
  5459                           
  5460                           ;psect for function __Umul8_16
  5461  1DE1                     __Umul8_16:	
  5462                           
  5463                           ;incstack = 0
  5464                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5465                           ;__Umul8_16@multiplier stored from wreg
  5466  1DE1  00F8               	movwf	__Umul8_16@multiplier
  5467  1DE2  01F4               	clrf	__Umul8_16@product
  5468  1DE3  01F5               	clrf	__Umul8_16@product+1
  5469  1DE4  0870               	movf	__Umul8_16@multiplicand,w
  5470  1DE5  00F2               	movwf	??__Umul8_16
  5471  1DE6  01F3               	clrf	??__Umul8_16+1
  5472  1DE7  0872               	movf	??__Umul8_16,w
  5473  1DE8  00F6               	movwf	__Umul8_16@word_mpld
  5474  1DE9  0873               	movf	??__Umul8_16+1,w
  5475  1DEA  00F7               	movwf	__Umul8_16@word_mpld+1
  5476  1DEB                     l2219:	
  5477  1DEB  1C78               	btfss	__Umul8_16@multiplier,0
  5478  1DEC  2DF3               	goto	l753
  5479  1DED  0876               	movf	__Umul8_16@word_mpld,w
  5480  1DEE  07F4               	addwf	__Umul8_16@product,f
  5481  1DEF  1803               	skipnc
  5482  1DF0  0AF5               	incf	__Umul8_16@product+1,f
  5483  1DF1  0877               	movf	__Umul8_16@word_mpld+1,w
  5484  1DF2  07F5               	addwf	__Umul8_16@product+1,f
  5485  1DF3                     l753:	
  5486  1DF3  3001               	movlw	1
  5487  1DF4                     u3025:	
  5488  1DF4  1003               	clrc
  5489  1DF5  0DF6               	rlf	__Umul8_16@word_mpld,f
  5490  1DF6  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5491  1DF7  3EFF               	addlw	-1
  5492  1DF8  1D03               	skipz
  5493  1DF9  2DF4               	goto	u3025
  5494  1DFA  1003               	clrc
  5495  1DFB  0CF8               	rrf	__Umul8_16@multiplier,f
  5496  1DFC  0878               	movf	__Umul8_16@multiplier,w
  5497  1DFD  1D03               	btfss	3,2
  5498  1DFE  2DEB               	goto	l2219
  5499  1DFF  0875               	movf	__Umul8_16@product+1,w
  5500  1E00  00F1               	movwf	?__Umul8_16+1
  5501  1E01  0874               	movf	__Umul8_16@product,w
  5502  1E02  00F0               	movwf	?__Umul8_16
  5503  1E03  0008               	return
  5504  1E04                     __end_of__Umul8_16:	
  5505                           
  5506                           	psect	text11
  5507  1385                     __ptext11:	
  5508 ;; *************** function __tdiv_to_l_ *****************
  5509 ;; Defined at:
  5510 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;  f1              4    0[COMMON] float 
  5513 ;;  f2              4    4[COMMON] float 
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;  quot            4    0[BANK0 ] unsigned long 
  5516 ;;  exp1            1    5[BANK0 ] unsigned char 
  5517 ;;  cntr            1    4[BANK0 ] unsigned char 
  5518 ;; Return value:  Size  Location     Type
  5519 ;;                  4    0[COMMON] unsigned long 
  5520 ;; Registers used:
  5521 ;;		wreg, status,2, status,0
  5522 ;; Tracked objects:
  5523 ;;		On entry : 0/0
  5524 ;;		On exit  : 0/0
  5525 ;;		Unchanged: 0/0
  5526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5527 ;;      Params:         8       0       0       0       0
  5528 ;;      Locals:         0       6       0       0       0
  5529 ;;      Temps:          4       0       0       0       0
  5530 ;;      Totals:        12       6       0       0       0
  5531 ;;Total ram usage:       18 bytes
  5532 ;; Hardware stack levels used:    1
  5533 ;; This function calls:
  5534 ;;		Nothing
  5535 ;; This function is called by:
  5536 ;;		_sprintf
  5537 ;; This function uses a non-reentrant model
  5538 ;;
  5539                           
  5540                           
  5541                           ;psect for function __tdiv_to_l_
  5542  1385                     __tdiv_to_l_:	
  5543                           
  5544                           ;incstack = 0
  5545                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5546  1385  0870               	movf	__tdiv_to_l_@f1,w
  5547  1386  00F8               	movwf	??__tdiv_to_l_
  5548  1387  0871               	movf	__tdiv_to_l_@f1+1,w
  5549  1388  00F9               	movwf	??__tdiv_to_l_+1
  5550  1389  0872               	movf	__tdiv_to_l_@f1+2,w
  5551  138A  00FA               	movwf	??__tdiv_to_l_+2
  5552  138B  1003               	clrc
  5553  138C  0D79               	rlf	??__tdiv_to_l_+1,w
  5554  138D  0D7A               	rlf	??__tdiv_to_l_+2,w
  5555  138E  00FB               	movwf	??__tdiv_to_l_+3
  5556  138F  087B               	movf	??__tdiv_to_l_+3,w
  5557  1390  1283               	bcf	3,5	;RP0=0, select bank0
  5558  1391  1303               	bcf	3,6	;RP1=0, select bank0
  5559  1392  00A5               	movwf	__tdiv_to_l_@exp1
  5560  1393  0825               	movf	__tdiv_to_l_@exp1,w
  5561  1394  1D03               	btfss	3,2
  5562  1395  2B9F               	goto	l2809
  5563  1396                     l2805:	
  5564  1396  3000               	movlw	0
  5565  1397  00F3               	movwf	?__tdiv_to_l_+3
  5566  1398  3000               	movlw	0
  5567  1399  00F2               	movwf	?__tdiv_to_l_+2
  5568  139A  3000               	movlw	0
  5569  139B  00F1               	movwf	?__tdiv_to_l_+1
  5570  139C  3000               	movlw	0
  5571  139D  00F0               	movwf	?__tdiv_to_l_
  5572  139E  0008               	return
  5573  139F                     l2809:	
  5574  139F  0874               	movf	__tdiv_to_l_@f2,w
  5575  13A0  00F8               	movwf	??__tdiv_to_l_
  5576  13A1  0875               	movf	__tdiv_to_l_@f2+1,w
  5577  13A2  00F9               	movwf	??__tdiv_to_l_+1
  5578  13A3  0876               	movf	__tdiv_to_l_@f2+2,w
  5579  13A4  00FA               	movwf	??__tdiv_to_l_+2
  5580  13A5  1003               	clrc
  5581  13A6  0D79               	rlf	??__tdiv_to_l_+1,w
  5582  13A7  0D7A               	rlf	??__tdiv_to_l_+2,w
  5583  13A8  00FB               	movwf	??__tdiv_to_l_+3
  5584  13A9  087B               	movf	??__tdiv_to_l_+3,w
  5585  13AA  00A4               	movwf	__tdiv_to_l_@cntr
  5586  13AB  0824               	movf	__tdiv_to_l_@cntr,w
  5587  13AC  1903               	btfsc	3,2
  5588  13AD  2B96               	goto	l2805
  5589  13AE  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5590  13AF  30FF               	movlw	255
  5591  13B0  05F0               	andwf	__tdiv_to_l_@f1,f
  5592  13B1  30FF               	movlw	255
  5593  13B2  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5594  13B3  3000               	movlw	0
  5595  13B4  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5596  13B5  17F5               	bsf	__tdiv_to_l_@f2+1,7
  5597  13B6  30FF               	movlw	255
  5598  13B7  05F4               	andwf	__tdiv_to_l_@f2,f
  5599  13B8  30FF               	movlw	255
  5600  13B9  05F5               	andwf	__tdiv_to_l_@f2+1,f
  5601  13BA  3000               	movlw	0
  5602  13BB  05F6               	andwf	__tdiv_to_l_@f2+2,f
  5603  13BC  3000               	movlw	0
  5604  13BD  00A3               	movwf	__tdiv_to_l_@quot+3
  5605  13BE  3000               	movlw	0
  5606  13BF  00A2               	movwf	__tdiv_to_l_@quot+2
  5607  13C0  3000               	movlw	0
  5608  13C1  00A1               	movwf	__tdiv_to_l_@quot+1
  5609  13C2  3000               	movlw	0
  5610  13C3  00A0               	movwf	__tdiv_to_l_@quot
  5611  13C4  307F               	movlw	127
  5612  13C5  02A5               	subwf	__tdiv_to_l_@exp1,f
  5613  13C6  3098               	movlw	152
  5614  13C7  0724               	addwf	__tdiv_to_l_@cntr,w
  5615  13C8  00F8               	movwf	??__tdiv_to_l_
  5616  13C9  0878               	movf	??__tdiv_to_l_,w
  5617  13CA  02A5               	subwf	__tdiv_to_l_@exp1,f
  5618  13CB  3018               	movlw	24
  5619  13CC  00F8               	movwf	??__tdiv_to_l_
  5620  13CD  0878               	movf	??__tdiv_to_l_,w
  5621  13CE  00A4               	movwf	__tdiv_to_l_@cntr
  5622  13CF                     l2823:	
  5623  13CF  3001               	movlw	1
  5624  13D0  00F8               	movwf	??__tdiv_to_l_
  5625  13D1                     u4535:	
  5626  13D1  1003               	clrc
  5627  13D2  0DA0               	rlf	__tdiv_to_l_@quot,f
  5628  13D3  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5629  13D4  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5630  13D5  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5631  13D6  0BF8               	decfsz	??__tdiv_to_l_,f
  5632  13D7  2BD1               	goto	u4535
  5633  13D8  0876               	movf	__tdiv_to_l_@f2+2,w
  5634  13D9  0272               	subwf	__tdiv_to_l_@f1+2,w
  5635  13DA  1D03               	skipz
  5636  13DB  2BE2               	goto	u4545
  5637  13DC  0875               	movf	__tdiv_to_l_@f2+1,w
  5638  13DD  0271               	subwf	__tdiv_to_l_@f1+1,w
  5639  13DE  1D03               	skipz
  5640  13DF  2BE2               	goto	u4545
  5641  13E0  0874               	movf	__tdiv_to_l_@f2,w
  5642  13E1  0270               	subwf	__tdiv_to_l_@f1,w
  5643  13E2                     u4545:	
  5644  13E2  1C03               	skipc
  5645  13E3  2BEF               	goto	l2831
  5646  13E4  0874               	movf	__tdiv_to_l_@f2,w
  5647  13E5  02F0               	subwf	__tdiv_to_l_@f1,f
  5648  13E6  0875               	movf	__tdiv_to_l_@f2+1,w
  5649  13E7  1C03               	skipc
  5650  13E8  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  5651  13E9  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5652  13EA  0876               	movf	__tdiv_to_l_@f2+2,w
  5653  13EB  1C03               	skipc
  5654  13EC  0A76               	incf	__tdiv_to_l_@f2+2,w
  5655  13ED  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5656  13EE  1420               	bsf	__tdiv_to_l_@quot,0
  5657  13EF                     l2831:	
  5658  13EF  3001               	movlw	1
  5659  13F0                     u4555:	
  5660  13F0  1003               	clrc
  5661  13F1  0DF0               	rlf	__tdiv_to_l_@f1,f
  5662  13F2  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5663  13F3  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5664  13F4  3EFF               	addlw	-1
  5665  13F5  1D03               	skipz
  5666  13F6  2BF0               	goto	u4555
  5667  13F7  3001               	movlw	1
  5668  13F8  02A4               	subwf	__tdiv_to_l_@cntr,f
  5669  13F9  1D03               	btfss	3,2
  5670  13FA  2BCF               	goto	l2823
  5671  13FB  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5672  13FC  2C12               	goto	l2843
  5673  13FD  0825               	movf	__tdiv_to_l_@exp1,w
  5674  13FE  3A80               	xorlw	128
  5675  13FF  3E97               	addlw	151
  5676  1400  1C03               	btfss	3,0
  5677  1401  2B96               	goto	l2805
  5678  1402                     l2841:	
  5679  1402  3001               	movlw	1
  5680  1403                     u4595:	
  5681  1403  1003               	clrc
  5682  1404  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5683  1405  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5684  1406  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5685  1407  0CA0               	rrf	__tdiv_to_l_@quot,f
  5686  1408  3EFF               	addlw	-1
  5687  1409  1D03               	skipz
  5688  140A  2C03               	goto	u4595
  5689  140B  3001               	movlw	1
  5690  140C  00F8               	movwf	??__tdiv_to_l_
  5691  140D  0878               	movf	??__tdiv_to_l_,w
  5692  140E  07A5               	addwf	__tdiv_to_l_@exp1,f
  5693  140F  1903               	btfsc	3,2
  5694  1410  2C25               	goto	l2851
  5695  1411  2C02               	goto	l2841
  5696  1412                     l2843:	
  5697  1412  3018               	movlw	24
  5698  1413  0225               	subwf	__tdiv_to_l_@exp1,w
  5699  1414  1803               	btfsc	3,0
  5700  1415  2B96               	goto	l2805
  5701  1416                     l492:	
  5702  1416  0825               	movf	__tdiv_to_l_@exp1,w
  5703  1417  1903               	btfsc	3,2
  5704  1418  2C25               	goto	l2851
  5705  1419  3001               	movlw	1
  5706  141A  00F8               	movwf	??__tdiv_to_l_
  5707  141B                     u4625:	
  5708  141B  1003               	clrc
  5709  141C  0DA0               	rlf	__tdiv_to_l_@quot,f
  5710  141D  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5711  141E  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5712  141F  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5713  1420  0BF8               	decfsz	??__tdiv_to_l_,f
  5714  1421  2C1B               	goto	u4625
  5715  1422  3001               	movlw	1
  5716  1423  02A5               	subwf	__tdiv_to_l_@exp1,f
  5717  1424  2C16               	goto	l492
  5718  1425                     l2851:	
  5719  1425  0823               	movf	__tdiv_to_l_@quot+3,w
  5720  1426  00F3               	movwf	?__tdiv_to_l_+3
  5721  1427  0822               	movf	__tdiv_to_l_@quot+2,w
  5722  1428  00F2               	movwf	?__tdiv_to_l_+2
  5723  1429  0821               	movf	__tdiv_to_l_@quot+1,w
  5724  142A  00F1               	movwf	?__tdiv_to_l_+1
  5725  142B  0820               	movf	__tdiv_to_l_@quot,w
  5726  142C  00F0               	movwf	?__tdiv_to_l_
  5727  142D  0008               	return
  5728  142E                     __end_of__tdiv_to_l_:	
  5729                           
  5730                           	psect	text12
  5731  0802                     __ptext12:	
  5732 ;; *************** function __div_to_l_ *****************
  5733 ;; Defined at:
  5734 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;  f1              4    0[COMMON] unsigned long 
  5737 ;;  f2              4    4[COMMON] unsigned long 
  5738 ;; Auto vars:     Size  Location     Type
  5739 ;;  quot            4    0[BANK0 ] unsigned long 
  5740 ;;  exp1            1    5[BANK0 ] unsigned char 
  5741 ;;  cntr            1    4[BANK0 ] unsigned char 
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  4    0[COMMON] unsigned long 
  5744 ;; Registers used:
  5745 ;;		wreg, status,2, status,0
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5751 ;;      Params:         8       0       0       0       0
  5752 ;;      Locals:         0       6       0       0       0
  5753 ;;      Temps:          1       0       0       0       0
  5754 ;;      Totals:         9       6       0       0       0
  5755 ;;Total ram usage:       15 bytes
  5756 ;; Hardware stack levels used:    1
  5757 ;; This function calls:
  5758 ;;		Nothing
  5759 ;; This function is called by:
  5760 ;;		_sprintf
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           
  5765                           ;psect for function __div_to_l_
  5766  0802                     __div_to_l_:	
  5767                           
  5768                           ;incstack = 0
  5769                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5770  0802  1003               	clrc
  5771  0803  0D72               	rlf	__div_to_l_@f1+2,w
  5772  0804  0D73               	rlf	__div_to_l_@f1+3,w
  5773  0805  00F8               	movwf	??__div_to_l_
  5774  0806  0878               	movf	??__div_to_l_,w
  5775  0807  1283               	bcf	3,5	;RP0=0, select bank0
  5776  0808  1303               	bcf	3,6	;RP1=0, select bank0
  5777  0809  00A5               	movwf	__div_to_l_@exp1
  5778  080A  0825               	movf	__div_to_l_@exp1,w
  5779  080B  1D03               	btfss	3,2
  5780  080C  2816               	goto	l2861
  5781  080D                     l2857:	
  5782  080D  3000               	movlw	0
  5783  080E  00F3               	movwf	?__div_to_l_+3
  5784  080F  3000               	movlw	0
  5785  0810  00F2               	movwf	?__div_to_l_+2
  5786  0811  3000               	movlw	0
  5787  0812  00F1               	movwf	?__div_to_l_+1
  5788  0813  3000               	movlw	0
  5789  0814  00F0               	movwf	?__div_to_l_
  5790  0815  0008               	return
  5791  0816                     l2861:	
  5792  0816  1003               	clrc
  5793  0817  0D76               	rlf	__div_to_l_@f2+2,w
  5794  0818  0D77               	rlf	__div_to_l_@f2+3,w
  5795  0819  00F8               	movwf	??__div_to_l_
  5796  081A  0878               	movf	??__div_to_l_,w
  5797  081B  00A4               	movwf	__div_to_l_@cntr
  5798  081C  0824               	movf	__div_to_l_@cntr,w
  5799  081D  1903               	btfsc	3,2
  5800  081E  280D               	goto	l2857
  5801  081F  17F2               	bsf	__div_to_l_@f1+2,7
  5802  0820  30FF               	movlw	255
  5803  0821  05F0               	andwf	__div_to_l_@f1,f
  5804  0822  30FF               	movlw	255
  5805  0823  05F1               	andwf	__div_to_l_@f1+1,f
  5806  0824  30FF               	movlw	255
  5807  0825  05F2               	andwf	__div_to_l_@f1+2,f
  5808  0826  3000               	movlw	0
  5809  0827  05F3               	andwf	__div_to_l_@f1+3,f
  5810  0828  17F6               	bsf	__div_to_l_@f2+2,7
  5811  0829  30FF               	movlw	255
  5812  082A  05F4               	andwf	__div_to_l_@f2,f
  5813  082B  30FF               	movlw	255
  5814  082C  05F5               	andwf	__div_to_l_@f2+1,f
  5815  082D  30FF               	movlw	255
  5816  082E  05F6               	andwf	__div_to_l_@f2+2,f
  5817  082F  3000               	movlw	0
  5818  0830  05F7               	andwf	__div_to_l_@f2+3,f
  5819  0831  3000               	movlw	0
  5820  0832  00A3               	movwf	__div_to_l_@quot+3
  5821  0833  3000               	movlw	0
  5822  0834  00A2               	movwf	__div_to_l_@quot+2
  5823  0835  3000               	movlw	0
  5824  0836  00A1               	movwf	__div_to_l_@quot+1
  5825  0837  3000               	movlw	0
  5826  0838  00A0               	movwf	__div_to_l_@quot
  5827  0839  307F               	movlw	127
  5828  083A  02A5               	subwf	__div_to_l_@exp1,f
  5829  083B  30A0               	movlw	160
  5830  083C  0724               	addwf	__div_to_l_@cntr,w
  5831  083D  00F8               	movwf	??__div_to_l_
  5832  083E  0878               	movf	??__div_to_l_,w
  5833  083F  02A5               	subwf	__div_to_l_@exp1,f
  5834  0840  3020               	movlw	32
  5835  0841  00F8               	movwf	??__div_to_l_
  5836  0842  0878               	movf	??__div_to_l_,w
  5837  0843  00A4               	movwf	__div_to_l_@cntr
  5838  0844                     l2875:	
  5839  0844  3001               	movlw	1
  5840  0845  00F8               	movwf	??__div_to_l_
  5841  0846                     u4665:	
  5842  0846  1003               	clrc
  5843  0847  0DA0               	rlf	__div_to_l_@quot,f
  5844  0848  0DA1               	rlf	__div_to_l_@quot+1,f
  5845  0849  0DA2               	rlf	__div_to_l_@quot+2,f
  5846  084A  0DA3               	rlf	__div_to_l_@quot+3,f
  5847  084B  0BF8               	decfsz	??__div_to_l_,f
  5848  084C  2846               	goto	u4665
  5849  084D  0877               	movf	__div_to_l_@f2+3,w
  5850  084E  0273               	subwf	__div_to_l_@f1+3,w
  5851  084F  1D03               	skipz
  5852  0850  285B               	goto	u4675
  5853  0851  0876               	movf	__div_to_l_@f2+2,w
  5854  0852  0272               	subwf	__div_to_l_@f1+2,w
  5855  0853  1D03               	skipz
  5856  0854  285B               	goto	u4675
  5857  0855  0875               	movf	__div_to_l_@f2+1,w
  5858  0856  0271               	subwf	__div_to_l_@f1+1,w
  5859  0857  1D03               	skipz
  5860  0858  285B               	goto	u4675
  5861  0859  0874               	movf	__div_to_l_@f2,w
  5862  085A  0270               	subwf	__div_to_l_@f1,w
  5863  085B                     u4675:	
  5864  085B  1C03               	skipc
  5865  085C  286C               	goto	l2883
  5866  085D  0874               	movf	__div_to_l_@f2,w
  5867  085E  02F0               	subwf	__div_to_l_@f1,f
  5868  085F  0875               	movf	__div_to_l_@f2+1,w
  5869  0860  1C03               	skipc
  5870  0861  0F75               	incfsz	__div_to_l_@f2+1,w
  5871  0862  02F1               	subwf	__div_to_l_@f1+1,f
  5872  0863  0876               	movf	__div_to_l_@f2+2,w
  5873  0864  1C03               	skipc
  5874  0865  0F76               	incfsz	__div_to_l_@f2+2,w
  5875  0866  02F2               	subwf	__div_to_l_@f1+2,f
  5876  0867  0877               	movf	__div_to_l_@f2+3,w
  5877  0868  1C03               	skipc
  5878  0869  0F77               	incfsz	__div_to_l_@f2+3,w
  5879  086A  02F3               	subwf	__div_to_l_@f1+3,f
  5880  086B  1420               	bsf	__div_to_l_@quot,0
  5881  086C                     l2883:	
  5882  086C  3001               	movlw	1
  5883  086D  00F8               	movwf	??__div_to_l_
  5884  086E                     u4685:	
  5885  086E  1003               	clrc
  5886  086F  0DF0               	rlf	__div_to_l_@f1,f
  5887  0870  0DF1               	rlf	__div_to_l_@f1+1,f
  5888  0871  0DF2               	rlf	__div_to_l_@f1+2,f
  5889  0872  0DF3               	rlf	__div_to_l_@f1+3,f
  5890  0873  0BF8               	decfsz	??__div_to_l_,f
  5891  0874  286E               	goto	u4685
  5892  0875  3001               	movlw	1
  5893  0876  02A4               	subwf	__div_to_l_@cntr,f
  5894  0877  1D03               	btfss	3,2
  5895  0878  2844               	goto	l2875
  5896  0879  1FA5               	btfss	__div_to_l_@exp1,7
  5897  087A  2890               	goto	l2895
  5898  087B  0825               	movf	__div_to_l_@exp1,w
  5899  087C  3A80               	xorlw	128
  5900  087D  3E9F               	addlw	159
  5901  087E  1C03               	btfss	3,0
  5902  087F  280D               	goto	l2857
  5903  0880                     l2893:	
  5904  0880  3001               	movlw	1
  5905  0881                     u4725:	
  5906  0881  1003               	clrc
  5907  0882  0CA3               	rrf	__div_to_l_@quot+3,f
  5908  0883  0CA2               	rrf	__div_to_l_@quot+2,f
  5909  0884  0CA1               	rrf	__div_to_l_@quot+1,f
  5910  0885  0CA0               	rrf	__div_to_l_@quot,f
  5911  0886  3EFF               	addlw	-1
  5912  0887  1D03               	skipz
  5913  0888  2881               	goto	u4725
  5914  0889  3001               	movlw	1
  5915  088A  00F8               	movwf	??__div_to_l_
  5916  088B  0878               	movf	??__div_to_l_,w
  5917  088C  07A5               	addwf	__div_to_l_@exp1,f
  5918  088D  1903               	btfsc	3,2
  5919  088E  28A3               	goto	l2903
  5920  088F  2880               	goto	l2893
  5921  0890                     l2895:	
  5922  0890  3020               	movlw	32
  5923  0891  0225               	subwf	__div_to_l_@exp1,w
  5924  0892  1803               	btfsc	3,0
  5925  0893  280D               	goto	l2857
  5926  0894                     l445:	
  5927  0894  0825               	movf	__div_to_l_@exp1,w
  5928  0895  1903               	btfsc	3,2
  5929  0896  28A3               	goto	l2903
  5930  0897  3001               	movlw	1
  5931  0898  00F8               	movwf	??__div_to_l_
  5932  0899                     u4755:	
  5933  0899  1003               	clrc
  5934  089A  0DA0               	rlf	__div_to_l_@quot,f
  5935  089B  0DA1               	rlf	__div_to_l_@quot+1,f
  5936  089C  0DA2               	rlf	__div_to_l_@quot+2,f
  5937  089D  0DA3               	rlf	__div_to_l_@quot+3,f
  5938  089E  0BF8               	decfsz	??__div_to_l_,f
  5939  089F  2899               	goto	u4755
  5940  08A0  3001               	movlw	1
  5941  08A1  02A5               	subwf	__div_to_l_@exp1,f
  5942  08A2  2894               	goto	l445
  5943  08A3                     l2903:	
  5944  08A3  0823               	movf	__div_to_l_@quot+3,w
  5945  08A4  00F3               	movwf	?__div_to_l_+3
  5946  08A5  0822               	movf	__div_to_l_@quot+2,w
  5947  08A6  00F2               	movwf	?__div_to_l_+2
  5948  08A7  0821               	movf	__div_to_l_@quot+1,w
  5949  08A8  00F1               	movwf	?__div_to_l_+1
  5950  08A9  0820               	movf	__div_to_l_@quot,w
  5951  08AA  00F0               	movwf	?__div_to_l_
  5952  08AB  0008               	return
  5953  08AC                     __end_of__div_to_l_:	
  5954                           
  5955                           	psect	text13
  5956  12E0                     __ptext13:	
  5957 ;; *************** function ___xxtofl *****************
  5958 ;; Defined at:
  5959 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  5960 ;; Parameters:    Size  Location     Type
  5961 ;;  sign            1    wreg     unsigned char 
  5962 ;;  val             4    4[COMMON] long 
  5963 ;; Auto vars:     Size  Location     Type
  5964 ;;  sign            1    0[BANK0 ] unsigned char 
  5965 ;;  arg             4    2[BANK0 ] unsigned long 
  5966 ;;  exp             1    1[BANK0 ] unsigned char 
  5967 ;; Return value:  Size  Location     Type
  5968 ;;                  4    4[COMMON] unsigned char 
  5969 ;; Registers used:
  5970 ;;		wreg, status,2, status,0
  5971 ;; Tracked objects:
  5972 ;;		On entry : 0/0
  5973 ;;		On exit  : 0/0
  5974 ;;		Unchanged: 0/0
  5975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5976 ;;      Params:         4       0       0       0       0
  5977 ;;      Locals:         0       6       0       0       0
  5978 ;;      Temps:          4       0       0       0       0
  5979 ;;      Totals:         8       6       0       0       0
  5980 ;;Total ram usage:       14 bytes
  5981 ;; Hardware stack levels used:    1
  5982 ;; This function calls:
  5983 ;;		Nothing
  5984 ;; This function is called by:
  5985 ;;		_main
  5986 ;;		_sprintf
  5987 ;; This function uses a non-reentrant model
  5988 ;;
  5989                           
  5990                           
  5991                           ;psect for function ___xxtofl
  5992  12E0                     ___xxtofl:	
  5993                           
  5994                           ;incstack = 0
  5995                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5996                           ;___xxtofl@sign stored from wreg
  5997  12E0  1283               	bcf	3,5	;RP0=0, select bank0
  5998  12E1  1303               	bcf	3,6	;RP1=0, select bank0
  5999  12E2  00A0               	movwf	___xxtofl@sign
  6000  12E3  0820               	movf	___xxtofl@sign,w
  6001  12E4  1D03               	btfss	3,2
  6002  12E5  1FF7               	btfss	___xxtofl@val+3,7
  6003  12E6  2AF7               	goto	l3053
  6004  12E7  0974               	comf	___xxtofl@val,w
  6005  12E8  00A2               	movwf	___xxtofl@arg
  6006  12E9  0975               	comf	___xxtofl@val+1,w
  6007  12EA  00A3               	movwf	___xxtofl@arg+1
  6008  12EB  0976               	comf	___xxtofl@val+2,w
  6009  12EC  00A4               	movwf	___xxtofl@arg+2
  6010  12ED  0977               	comf	___xxtofl@val+3,w
  6011  12EE  00A5               	movwf	___xxtofl@arg+3
  6012  12EF  0AA2               	incf	___xxtofl@arg,f
  6013  12F0  1903               	skipnz
  6014  12F1  0AA3               	incf	___xxtofl@arg+1,f
  6015  12F2  1903               	skipnz
  6016  12F3  0AA4               	incf	___xxtofl@arg+2,f
  6017  12F4  1903               	skipnz
  6018  12F5  0AA5               	incf	___xxtofl@arg+3,f
  6019  12F6  2AFF               	goto	l725
  6020  12F7                     l3053:	
  6021  12F7  0877               	movf	___xxtofl@val+3,w
  6022  12F8  00A5               	movwf	___xxtofl@arg+3
  6023  12F9  0876               	movf	___xxtofl@val+2,w
  6024  12FA  00A4               	movwf	___xxtofl@arg+2
  6025  12FB  0875               	movf	___xxtofl@val+1,w
  6026  12FC  00A3               	movwf	___xxtofl@arg+1
  6027  12FD  0874               	movf	___xxtofl@val,w
  6028  12FE  00A2               	movwf	___xxtofl@arg
  6029  12FF                     l725:	
  6030  12FF  0877               	movf	___xxtofl@val+3,w
  6031  1300  0476               	iorwf	___xxtofl@val+2,w
  6032  1301  0475               	iorwf	___xxtofl@val+1,w
  6033  1302  0474               	iorwf	___xxtofl@val,w
  6034  1303  1D03               	skipz
  6035  1304  2B0E               	goto	l3059
  6036  1305  3000               	movlw	0
  6037  1306  00F7               	movwf	?___xxtofl+3
  6038  1307  3000               	movlw	0
  6039  1308  00F6               	movwf	?___xxtofl+2
  6040  1309  3000               	movlw	0
  6041  130A  00F5               	movwf	?___xxtofl+1
  6042  130B  3000               	movlw	0
  6043  130C  00F4               	movwf	?___xxtofl
  6044  130D  0008               	return
  6045  130E                     l3059:	
  6046  130E  3096               	movlw	150
  6047  130F  00F8               	movwf	??___xxtofl
  6048  1310  0878               	movf	??___xxtofl,w
  6049  1311  00A1               	movwf	___xxtofl@exp
  6050  1312                     l3063:	
  6051  1312  30FE               	movlw	254
  6052  1313  0525               	andwf	___xxtofl@arg+3,w
  6053  1314  1903               	btfsc	3,2
  6054  1315  2B3F               	goto	l731
  6055  1316  3001               	movlw	1
  6056  1317  00F8               	movwf	??___xxtofl
  6057  1318  0878               	movf	??___xxtofl,w
  6058  1319  07A1               	addwf	___xxtofl@exp,f
  6059  131A  3001               	movlw	1
  6060  131B                     u5185:	
  6061  131B  1003               	clrc
  6062  131C  0CA5               	rrf	___xxtofl@arg+3,f
  6063  131D  0CA4               	rrf	___xxtofl@arg+2,f
  6064  131E  0CA3               	rrf	___xxtofl@arg+1,f
  6065  131F  0CA2               	rrf	___xxtofl@arg,f
  6066  1320  3EFF               	addlw	-1
  6067  1321  1D03               	skipz
  6068  1322  2B1B               	goto	u5185
  6069  1323  2B12               	goto	l3063
  6070  1324                     l3065:	
  6071  1324  3001               	movlw	1
  6072  1325  00F8               	movwf	??___xxtofl
  6073  1326  0878               	movf	??___xxtofl,w
  6074  1327  07A1               	addwf	___xxtofl@exp,f
  6075  1328  3001               	movlw	1
  6076  1329  07A2               	addwf	___xxtofl@arg,f
  6077  132A  3000               	movlw	0
  6078  132B  1803               	skipnc
  6079  132C  3001               	movlw	1
  6080  132D  07A3               	addwf	___xxtofl@arg+1,f
  6081  132E  3000               	movlw	0
  6082  132F  1803               	skipnc
  6083  1330  3001               	movlw	1
  6084  1331  07A4               	addwf	___xxtofl@arg+2,f
  6085  1332  3000               	movlw	0
  6086  1333  1803               	skipnc
  6087  1334  3001               	movlw	1
  6088  1335  07A5               	addwf	___xxtofl@arg+3,f
  6089  1336  3001               	movlw	1
  6090  1337                     u5205:	
  6091  1337  1003               	clrc
  6092  1338  0CA5               	rrf	___xxtofl@arg+3,f
  6093  1339  0CA4               	rrf	___xxtofl@arg+2,f
  6094  133A  0CA3               	rrf	___xxtofl@arg+1,f
  6095  133B  0CA2               	rrf	___xxtofl@arg,f
  6096  133C  3EFF               	addlw	-1
  6097  133D  1D03               	skipz
  6098  133E  2B37               	goto	u5205
  6099  133F                     l731:	
  6100  133F  30FF               	movlw	255
  6101  1340  0525               	andwf	___xxtofl@arg+3,w
  6102  1341  1903               	btfsc	3,2
  6103  1342  2B53               	goto	l3073
  6104  1343  2B24               	goto	l3065
  6105  1344                     l3075:	
  6106  1344  3002               	movlw	2
  6107  1345  0221               	subwf	___xxtofl@exp,w
  6108  1346  1C03               	btfss	3,0
  6109  1347  2B55               	goto	l738
  6110  1348  3001               	movlw	1
  6111  1349  02A1               	subwf	___xxtofl@exp,f
  6112  134A  3001               	movlw	1
  6113  134B  00F8               	movwf	??___xxtofl
  6114  134C                     u5225:	
  6115  134C  1003               	clrc
  6116  134D  0DA2               	rlf	___xxtofl@arg,f
  6117  134E  0DA3               	rlf	___xxtofl@arg+1,f
  6118  134F  0DA4               	rlf	___xxtofl@arg+2,f
  6119  1350  0DA5               	rlf	___xxtofl@arg+3,f
  6120  1351  0BF8               	decfsz	??___xxtofl,f
  6121  1352  2B4C               	goto	u5225
  6122  1353                     l3073:	
  6123  1353  1FA4               	btfss	___xxtofl@arg+2,7
  6124  1354  2B44               	goto	l3075
  6125  1355                     l738:	
  6126  1355  1821               	btfsc	___xxtofl@exp,0
  6127  1356  2B5F               	goto	l739
  6128  1357  30FF               	movlw	255
  6129  1358  05A2               	andwf	___xxtofl@arg,f
  6130  1359  30FF               	movlw	255
  6131  135A  05A3               	andwf	___xxtofl@arg+1,f
  6132  135B  307F               	movlw	127
  6133  135C  05A4               	andwf	___xxtofl@arg+2,f
  6134  135D  30FF               	movlw	255
  6135  135E  05A5               	andwf	___xxtofl@arg+3,f
  6136  135F                     l739:	
  6137  135F  1003               	clrc
  6138  1360  0CA1               	rrf	___xxtofl@exp,f
  6139  1361  0821               	movf	___xxtofl@exp,w
  6140  1362  00F8               	movwf	??___xxtofl
  6141  1363  01F9               	clrf	??___xxtofl+1
  6142  1364  01FA               	clrf	??___xxtofl+2
  6143  1365  01FB               	clrf	??___xxtofl+3
  6144  1366  3018               	movlw	24
  6145  1367                     u5265:	
  6146  1367  1003               	clrc
  6147  1368  0DF8               	rlf	??___xxtofl,f
  6148  1369  0DF9               	rlf	??___xxtofl+1,f
  6149  136A  0DFA               	rlf	??___xxtofl+2,f
  6150  136B  0DFB               	rlf	??___xxtofl+3,f
  6151  136C  3EFF               	addlw	-1
  6152  136D  1D03               	skipz
  6153  136E  2B67               	goto	u5265
  6154  136F  0878               	movf	??___xxtofl,w
  6155  1370  04A2               	iorwf	___xxtofl@arg,f
  6156  1371  0879               	movf	??___xxtofl+1,w
  6157  1372  04A3               	iorwf	___xxtofl@arg+1,f
  6158  1373  087A               	movf	??___xxtofl+2,w
  6159  1374  04A4               	iorwf	___xxtofl@arg+2,f
  6160  1375  087B               	movf	??___xxtofl+3,w
  6161  1376  04A5               	iorwf	___xxtofl@arg+3,f
  6162  1377  0820               	movf	___xxtofl@sign,w
  6163  1378  1D03               	btfss	3,2
  6164  1379  1FF7               	btfss	___xxtofl@val+3,7
  6165  137A  2B7C               	goto	l3087
  6166  137B  17A5               	bsf	___xxtofl@arg+3,7
  6167  137C                     l3087:	
  6168  137C  0825               	movf	___xxtofl@arg+3,w
  6169  137D  00F7               	movwf	?___xxtofl+3
  6170  137E  0824               	movf	___xxtofl@arg+2,w
  6171  137F  00F6               	movwf	?___xxtofl+2
  6172  1380  0823               	movf	___xxtofl@arg+1,w
  6173  1381  00F5               	movwf	?___xxtofl+1
  6174  1382  0822               	movf	___xxtofl@arg,w
  6175  1383  00F4               	movwf	?___xxtofl
  6176  1384  0008               	return
  6177  1385                     __end_of___xxtofl:	
  6178                           
  6179                           	psect	text14
  6180  1D7C                     __ptext14:	
  6181 ;; *************** function ___wmul *****************
  6182 ;; Defined at:
  6183 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  6184 ;; Parameters:    Size  Location     Type
  6185 ;;  multiplier      2    0[COMMON] unsigned int 
  6186 ;;  multiplicand    2    2[COMMON] unsigned int 
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;  product         2    4[COMMON] unsigned int 
  6189 ;; Return value:  Size  Location     Type
  6190 ;;                  2    0[COMMON] unsigned int 
  6191 ;; Registers used:
  6192 ;;		wreg, status,2, status,0
  6193 ;; Tracked objects:
  6194 ;;		On entry : 0/0
  6195 ;;		On exit  : 0/0
  6196 ;;		Unchanged: 0/0
  6197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6198 ;;      Params:         4       0       0       0       0
  6199 ;;      Locals:         2       0       0       0       0
  6200 ;;      Temps:          0       0       0       0       0
  6201 ;;      Totals:         6       0       0       0       0
  6202 ;;Total ram usage:        6 bytes
  6203 ;; Hardware stack levels used:    1
  6204 ;; This function calls:
  6205 ;;		Nothing
  6206 ;; This function is called by:
  6207 ;;		_sprintf
  6208 ;; This function uses a non-reentrant model
  6209 ;;
  6210                           
  6211                           
  6212                           ;psect for function ___wmul
  6213  1D7C                     ___wmul:	
  6214                           
  6215                           ;incstack = 0
  6216                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6217  1D7C  01F4               	clrf	___wmul@product
  6218  1D7D  01F5               	clrf	___wmul@product+1
  6219  1D7E                     l2909:	
  6220  1D7E  1C70               	btfss	___wmul@multiplier,0
  6221  1D7F  2D86               	goto	l264
  6222  1D80  0872               	movf	___wmul@multiplicand,w
  6223  1D81  07F4               	addwf	___wmul@product,f
  6224  1D82  1803               	skipnc
  6225  1D83  0AF5               	incf	___wmul@product+1,f
  6226  1D84  0873               	movf	___wmul@multiplicand+1,w
  6227  1D85  07F5               	addwf	___wmul@product+1,f
  6228  1D86                     l264:	
  6229  1D86  3001               	movlw	1
  6230  1D87                     u4785:	
  6231  1D87  1003               	clrc
  6232  1D88  0DF2               	rlf	___wmul@multiplicand,f
  6233  1D89  0DF3               	rlf	___wmul@multiplicand+1,f
  6234  1D8A  3EFF               	addlw	-1
  6235  1D8B  1D03               	skipz
  6236  1D8C  2D87               	goto	u4785
  6237  1D8D  3001               	movlw	1
  6238  1D8E                     u4795:	
  6239  1D8E  1003               	clrc
  6240  1D8F  0CF1               	rrf	___wmul@multiplier+1,f
  6241  1D90  0CF0               	rrf	___wmul@multiplier,f
  6242  1D91  3EFF               	addlw	-1
  6243  1D92  1D03               	skipz
  6244  1D93  2D8E               	goto	u4795
  6245  1D94  0870               	movf	___wmul@multiplier,w
  6246  1D95  0471               	iorwf	___wmul@multiplier+1,w
  6247  1D96  1D03               	btfss	3,2
  6248  1D97  2D7E               	goto	l2909
  6249  1D98  0875               	movf	___wmul@product+1,w
  6250  1D99  00F1               	movwf	?___wmul+1
  6251  1D9A  0874               	movf	___wmul@product,w
  6252  1D9B  00F0               	movwf	?___wmul
  6253  1D9C  0008               	return
  6254  1D9D                     __end_of___wmul:	
  6255                           
  6256                           	psect	text15
  6257  1FB4                     __ptext15:	
  6258 ;; *************** function ___llmod *****************
  6259 ;; Defined at:
  6260 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  6261 ;; Parameters:    Size  Location     Type
  6262 ;;  divisor         4    0[COMMON] unsigned long 
  6263 ;;  dividend        4    4[COMMON] unsigned long 
  6264 ;; Auto vars:     Size  Location     Type
  6265 ;;  counter         1    9[COMMON] unsigned char 
  6266 ;; Return value:  Size  Location     Type
  6267 ;;                  4    0[COMMON] unsigned long 
  6268 ;; Registers used:
  6269 ;;		wreg, status,2, status,0
  6270 ;; Tracked objects:
  6271 ;;		On entry : 0/0
  6272 ;;		On exit  : 0/0
  6273 ;;		Unchanged: 0/0
  6274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6275 ;;      Params:         8       0       0       0       0
  6276 ;;      Locals:         1       0       0       0       0
  6277 ;;      Temps:          1       0       0       0       0
  6278 ;;      Totals:        10       0       0       0       0
  6279 ;;Total ram usage:       10 bytes
  6280 ;; Hardware stack levels used:    1
  6281 ;; This function calls:
  6282 ;;		Nothing
  6283 ;; This function is called by:
  6284 ;;		_sprintf
  6285 ;; This function uses a non-reentrant model
  6286 ;;
  6287                           
  6288                           
  6289                           ;psect for function ___llmod
  6290  1FB4                     ___llmod:	
  6291                           
  6292                           ;incstack = 0
  6293                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6294  1FB4  0873               	movf	___llmod@divisor+3,w
  6295  1FB5  0472               	iorwf	___llmod@divisor+2,w
  6296  1FB6  0471               	iorwf	___llmod@divisor+1,w
  6297  1FB7  0470               	iorwf	___llmod@divisor,w
  6298  1FB8  1903               	skipnz
  6299  1FB9  2FF7               	goto	l3037
  6300  1FBA  01F9               	clrf	___llmod@counter
  6301  1FBB  0AF9               	incf	___llmod@counter,f
  6302  1FBC                     l3027:	
  6303  1FBC  1BF3               	btfsc	___llmod@divisor+3,7
  6304  1FBD  2FCC               	goto	l3029
  6305  1FBE  3001               	movlw	1
  6306  1FBF  00F8               	movwf	??___llmod
  6307  1FC0                     u5105:	
  6308  1FC0  1003               	clrc
  6309  1FC1  0DF0               	rlf	___llmod@divisor,f
  6310  1FC2  0DF1               	rlf	___llmod@divisor+1,f
  6311  1FC3  0DF2               	rlf	___llmod@divisor+2,f
  6312  1FC4  0DF3               	rlf	___llmod@divisor+3,f
  6313  1FC5  0BF8               	decfsz	??___llmod,f
  6314  1FC6  2FC0               	goto	u5105
  6315  1FC7  3001               	movlw	1
  6316  1FC8  00F8               	movwf	??___llmod
  6317  1FC9  0878               	movf	??___llmod,w
  6318  1FCA  07F9               	addwf	___llmod@counter,f
  6319  1FCB  2FBC               	goto	l3027
  6320  1FCC                     l3029:	
  6321  1FCC  0873               	movf	___llmod@divisor+3,w
  6322  1FCD  0277               	subwf	___llmod@dividend+3,w
  6323  1FCE  1D03               	skipz
  6324  1FCF  2FDA               	goto	u5125
  6325  1FD0  0872               	movf	___llmod@divisor+2,w
  6326  1FD1  0276               	subwf	___llmod@dividend+2,w
  6327  1FD2  1D03               	skipz
  6328  1FD3  2FDA               	goto	u5125
  6329  1FD4  0871               	movf	___llmod@divisor+1,w
  6330  1FD5  0275               	subwf	___llmod@dividend+1,w
  6331  1FD6  1D03               	skipz
  6332  1FD7  2FDA               	goto	u5125
  6333  1FD8  0870               	movf	___llmod@divisor,w
  6334  1FD9  0274               	subwf	___llmod@dividend,w
  6335  1FDA                     u5125:	
  6336  1FDA  1C03               	skipc
  6337  1FDB  2FEA               	goto	l3033
  6338  1FDC  0870               	movf	___llmod@divisor,w
  6339  1FDD  02F4               	subwf	___llmod@dividend,f
  6340  1FDE  0871               	movf	___llmod@divisor+1,w
  6341  1FDF  1C03               	skipc
  6342  1FE0  0F71               	incfsz	___llmod@divisor+1,w
  6343  1FE1  02F5               	subwf	___llmod@dividend+1,f
  6344  1FE2  0872               	movf	___llmod@divisor+2,w
  6345  1FE3  1C03               	skipc
  6346  1FE4  0F72               	incfsz	___llmod@divisor+2,w
  6347  1FE5  02F6               	subwf	___llmod@dividend+2,f
  6348  1FE6  0873               	movf	___llmod@divisor+3,w
  6349  1FE7  1C03               	skipc
  6350  1FE8  0F73               	incfsz	___llmod@divisor+3,w
  6351  1FE9  02F7               	subwf	___llmod@dividend+3,f
  6352  1FEA                     l3033:	
  6353  1FEA  3001               	movlw	1
  6354  1FEB                     u5135:	
  6355  1FEB  1003               	clrc
  6356  1FEC  0CF3               	rrf	___llmod@divisor+3,f
  6357  1FED  0CF2               	rrf	___llmod@divisor+2,f
  6358  1FEE  0CF1               	rrf	___llmod@divisor+1,f
  6359  1FEF  0CF0               	rrf	___llmod@divisor,f
  6360  1FF0  3EFF               	addlw	-1
  6361  1FF1  1D03               	skipz
  6362  1FF2  2FEB               	goto	u5135
  6363  1FF3  3001               	movlw	1
  6364  1FF4  02F9               	subwf	___llmod@counter,f
  6365  1FF5  1D03               	btfss	3,2
  6366  1FF6  2FCC               	goto	l3029
  6367  1FF7                     l3037:	
  6368  1FF7  0877               	movf	___llmod@dividend+3,w
  6369  1FF8  00F3               	movwf	?___llmod+3
  6370  1FF9  0876               	movf	___llmod@dividend+2,w
  6371  1FFA  00F2               	movwf	?___llmod+2
  6372  1FFB  0875               	movf	___llmod@dividend+1,w
  6373  1FFC  00F1               	movwf	?___llmod+1
  6374  1FFD  0874               	movf	___llmod@dividend,w
  6375  1FFE  00F0               	movwf	?___llmod
  6376  1FFF  0008               	return
  6377  2000                     __end_of___llmod:	
  6378                           
  6379                           	psect	text16
  6380  1121                     __ptext16:	
  6381 ;; *************** function ___lldiv *****************
  6382 ;; Defined at:
  6383 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  6384 ;; Parameters:    Size  Location     Type
  6385 ;;  divisor         4    0[COMMON] unsigned long 
  6386 ;;  dividend        4    4[COMMON] unsigned long 
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;  quotient        4    9[COMMON] unsigned long 
  6389 ;;  counter         1   13[COMMON] unsigned char 
  6390 ;; Return value:  Size  Location     Type
  6391 ;;                  4    0[COMMON] unsigned long 
  6392 ;; Registers used:
  6393 ;;		wreg, status,2, status,0
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6399 ;;      Params:         8       0       0       0       0
  6400 ;;      Locals:         5       0       0       0       0
  6401 ;;      Temps:          1       0       0       0       0
  6402 ;;      Totals:        14       0       0       0       0
  6403 ;;Total ram usage:       14 bytes
  6404 ;; Hardware stack levels used:    1
  6405 ;; This function calls:
  6406 ;;		Nothing
  6407 ;; This function is called by:
  6408 ;;		_sprintf
  6409 ;; This function uses a non-reentrant model
  6410 ;;
  6411                           
  6412                           
  6413                           ;psect for function ___lldiv
  6414  1121                     ___lldiv:	
  6415                           
  6416                           ;incstack = 0
  6417                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6418  1121  3000               	movlw	0
  6419  1122  00FC               	movwf	___lldiv@quotient+3
  6420  1123  3000               	movlw	0
  6421  1124  00FB               	movwf	___lldiv@quotient+2
  6422  1125  3000               	movlw	0
  6423  1126  00FA               	movwf	___lldiv@quotient+1
  6424  1127  3000               	movlw	0
  6425  1128  00F9               	movwf	___lldiv@quotient
  6426  1129  0873               	movf	___lldiv@divisor+3,w
  6427  112A  0472               	iorwf	___lldiv@divisor+2,w
  6428  112B  0471               	iorwf	___lldiv@divisor+1,w
  6429  112C  0470               	iorwf	___lldiv@divisor,w
  6430  112D  1903               	skipnz
  6431  112E  2976               	goto	l2941
  6432  112F  01FD               	clrf	___lldiv@counter
  6433  1130  0AFD               	incf	___lldiv@counter,f
  6434  1131                     l2927:	
  6435  1131  1BF3               	btfsc	___lldiv@divisor+3,7
  6436  1132  2941               	goto	l2929
  6437  1133  3001               	movlw	1
  6438  1134  00F8               	movwf	??___lldiv
  6439  1135                     u4825:	
  6440  1135  1003               	clrc
  6441  1136  0DF0               	rlf	___lldiv@divisor,f
  6442  1137  0DF1               	rlf	___lldiv@divisor+1,f
  6443  1138  0DF2               	rlf	___lldiv@divisor+2,f
  6444  1139  0DF3               	rlf	___lldiv@divisor+3,f
  6445  113A  0BF8               	decfsz	??___lldiv,f
  6446  113B  2935               	goto	u4825
  6447  113C  3001               	movlw	1
  6448  113D  00F8               	movwf	??___lldiv
  6449  113E  0878               	movf	??___lldiv,w
  6450  113F  07FD               	addwf	___lldiv@counter,f
  6451  1140  2931               	goto	l2927
  6452  1141                     l2929:	
  6453  1141  3001               	movlw	1
  6454  1142  00F8               	movwf	??___lldiv
  6455  1143                     u4845:	
  6456  1143  1003               	clrc
  6457  1144  0DF9               	rlf	___lldiv@quotient,f
  6458  1145  0DFA               	rlf	___lldiv@quotient+1,f
  6459  1146  0DFB               	rlf	___lldiv@quotient+2,f
  6460  1147  0DFC               	rlf	___lldiv@quotient+3,f
  6461  1148  0BF8               	decfsz	??___lldiv,f
  6462  1149  2943               	goto	u4845
  6463  114A  0873               	movf	___lldiv@divisor+3,w
  6464  114B  0277               	subwf	___lldiv@dividend+3,w
  6465  114C  1D03               	skipz
  6466  114D  2958               	goto	u4855
  6467  114E  0872               	movf	___lldiv@divisor+2,w
  6468  114F  0276               	subwf	___lldiv@dividend+2,w
  6469  1150  1D03               	skipz
  6470  1151  2958               	goto	u4855
  6471  1152  0871               	movf	___lldiv@divisor+1,w
  6472  1153  0275               	subwf	___lldiv@dividend+1,w
  6473  1154  1D03               	skipz
  6474  1155  2958               	goto	u4855
  6475  1156  0870               	movf	___lldiv@divisor,w
  6476  1157  0274               	subwf	___lldiv@dividend,w
  6477  1158                     u4855:	
  6478  1158  1C03               	skipc
  6479  1159  2969               	goto	l2937
  6480  115A  0870               	movf	___lldiv@divisor,w
  6481  115B  02F4               	subwf	___lldiv@dividend,f
  6482  115C  0871               	movf	___lldiv@divisor+1,w
  6483  115D  1C03               	skipc
  6484  115E  0F71               	incfsz	___lldiv@divisor+1,w
  6485  115F  02F5               	subwf	___lldiv@dividend+1,f
  6486  1160  0872               	movf	___lldiv@divisor+2,w
  6487  1161  1C03               	skipc
  6488  1162  0F72               	incfsz	___lldiv@divisor+2,w
  6489  1163  02F6               	subwf	___lldiv@dividend+2,f
  6490  1164  0873               	movf	___lldiv@divisor+3,w
  6491  1165  1C03               	skipc
  6492  1166  0F73               	incfsz	___lldiv@divisor+3,w
  6493  1167  02F7               	subwf	___lldiv@dividend+3,f
  6494  1168  1479               	bsf	___lldiv@quotient,0
  6495  1169                     l2937:	
  6496  1169  3001               	movlw	1
  6497  116A                     u4865:	
  6498  116A  1003               	clrc
  6499  116B  0CF3               	rrf	___lldiv@divisor+3,f
  6500  116C  0CF2               	rrf	___lldiv@divisor+2,f
  6501  116D  0CF1               	rrf	___lldiv@divisor+1,f
  6502  116E  0CF0               	rrf	___lldiv@divisor,f
  6503  116F  3EFF               	addlw	-1
  6504  1170  1D03               	skipz
  6505  1171  296A               	goto	u4865
  6506  1172  3001               	movlw	1
  6507  1173  02FD               	subwf	___lldiv@counter,f
  6508  1174  1D03               	btfss	3,2
  6509  1175  2941               	goto	l2929
  6510  1176                     l2941:	
  6511  1176  087C               	movf	___lldiv@quotient+3,w
  6512  1177  00F3               	movwf	?___lldiv+3
  6513  1178  087B               	movf	___lldiv@quotient+2,w
  6514  1179  00F2               	movwf	?___lldiv+2
  6515  117A  087A               	movf	___lldiv@quotient+1,w
  6516  117B  00F1               	movwf	?___lldiv+1
  6517  117C  0879               	movf	___lldiv@quotient,w
  6518  117D  00F0               	movwf	?___lldiv
  6519  117E  0008               	return
  6520  117F                     __end_of___lldiv:	
  6521                           
  6522                           	psect	text17
  6523  11E0                     __ptext17:	
  6524 ;; *************** function ___fltol *****************
  6525 ;; Defined at:
  6526 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;  f1              4   51[BANK0 ] unsigned long 
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;  exp1            1   61[BANK0 ] unsigned char 
  6531 ;;  sign1           1   60[BANK0 ] unsigned char 
  6532 ;; Return value:  Size  Location     Type
  6533 ;;                  4   51[BANK0 ] long 
  6534 ;; Registers used:
  6535 ;;		wreg, status,2, status,0
  6536 ;; Tracked objects:
  6537 ;;		On entry : 0/0
  6538 ;;		On exit  : 0/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6541 ;;      Params:         0       4       0       0       0
  6542 ;;      Locals:         0       2       0       0       0
  6543 ;;      Temps:          0       5       0       0       0
  6544 ;;      Totals:         0      11       0       0       0
  6545 ;;Total ram usage:       11 bytes
  6546 ;; Hardware stack levels used:    1
  6547 ;; This function calls:
  6548 ;;		Nothing
  6549 ;; This function is called by:
  6550 ;;		_sprintf
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553                           
  6554                           
  6555                           ;psect for function ___fltol
  6556  11E0                     ___fltol:	
  6557                           
  6558                           ;incstack = 0
  6559                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6560  11E0  1003               	clrc
  6561  11E1  1283               	bcf	3,5	;RP0=0, select bank0
  6562  11E2  1303               	bcf	3,6	;RP1=0, select bank0
  6563  11E3  0D55               	rlf	___fltol@f1+2,w
  6564  11E4  0D56               	rlf	___fltol@f1+3,w
  6565  11E5  00D7               	movwf	??___fltol
  6566  11E6  0857               	movf	??___fltol,w
  6567  11E7  00DD               	movwf	___fltol@exp1
  6568  11E8  085D               	movf	___fltol@exp1,w
  6569  11E9  1D03               	btfss	3,2
  6570  11EA  29F4               	goto	l2991
  6571  11EB                     l2987:	
  6572  11EB  3000               	movlw	0
  6573  11EC  00D6               	movwf	?___fltol+3
  6574  11ED  3000               	movlw	0
  6575  11EE  00D5               	movwf	?___fltol+2
  6576  11EF  3000               	movlw	0
  6577  11F0  00D4               	movwf	?___fltol+1
  6578  11F1  3000               	movlw	0
  6579  11F2  00D3               	movwf	?___fltol
  6580  11F3  0008               	return
  6581  11F4                     l2991:	
  6582  11F4  0853               	movf	___fltol@f1,w
  6583  11F5  00D7               	movwf	??___fltol
  6584  11F6  0854               	movf	___fltol@f1+1,w
  6585  11F7  00D8               	movwf	??___fltol+1
  6586  11F8  0855               	movf	___fltol@f1+2,w
  6587  11F9  00D9               	movwf	??___fltol+2
  6588  11FA  0856               	movf	___fltol@f1+3,w
  6589  11FB  00DA               	movwf	??___fltol+3
  6590  11FC  301F               	movlw	31
  6591  11FD                     u5005:	
  6592  11FD  1003               	clrc
  6593  11FE  0CDA               	rrf	??___fltol+3,f
  6594  11FF  0CD9               	rrf	??___fltol+2,f
  6595  1200  0CD8               	rrf	??___fltol+1,f
  6596  1201  0CD7               	rrf	??___fltol,f
  6597  1202  3EFF               	addlw	-1
  6598  1203  1D03               	skipz
  6599  1204  29FD               	goto	u5005
  6600  1205  0857               	movf	??___fltol,w
  6601  1206  00DB               	movwf	??___fltol+4
  6602  1207  085B               	movf	??___fltol+4,w
  6603  1208  00DC               	movwf	___fltol@sign1
  6604  1209  17D5               	bsf	___fltol@f1+2,7
  6605  120A  30FF               	movlw	255
  6606  120B  05D3               	andwf	___fltol@f1,f
  6607  120C  30FF               	movlw	255
  6608  120D  05D4               	andwf	___fltol@f1+1,f
  6609  120E  30FF               	movlw	255
  6610  120F  05D5               	andwf	___fltol@f1+2,f
  6611  1210  3000               	movlw	0
  6612  1211  05D6               	andwf	___fltol@f1+3,f
  6613  1212  3096               	movlw	150
  6614  1213  02DD               	subwf	___fltol@exp1,f
  6615  1214  1FDD               	btfss	___fltol@exp1,7
  6616  1215  2A2B               	goto	l3009
  6617  1216  085D               	movf	___fltol@exp1,w
  6618  1217  3A80               	xorlw	128
  6619  1218  3E97               	addlw	151
  6620  1219  1C03               	btfss	3,0
  6621  121A  29EB               	goto	l2987
  6622  121B                     l3007:	
  6623  121B  3001               	movlw	1
  6624  121C                     u5035:	
  6625  121C  1003               	clrc
  6626  121D  0CD6               	rrf	___fltol@f1+3,f
  6627  121E  0CD5               	rrf	___fltol@f1+2,f
  6628  121F  0CD4               	rrf	___fltol@f1+1,f
  6629  1220  0CD3               	rrf	___fltol@f1,f
  6630  1221  3EFF               	addlw	-1
  6631  1222  1D03               	skipz
  6632  1223  2A1C               	goto	u5035
  6633  1224  3001               	movlw	1
  6634  1225  00D7               	movwf	??___fltol
  6635  1226  0857               	movf	??___fltol,w
  6636  1227  07DD               	addwf	___fltol@exp1,f
  6637  1228  1903               	btfsc	3,2
  6638  1229  2A3E               	goto	l3017
  6639  122A  2A1B               	goto	l3007
  6640  122B                     l3009:	
  6641  122B  3020               	movlw	32
  6642  122C  025D               	subwf	___fltol@exp1,w
  6643  122D  1803               	btfsc	3,0
  6644  122E  29EB               	goto	l2987
  6645  122F                     l474:	
  6646  122F  085D               	movf	___fltol@exp1,w
  6647  1230  1903               	btfsc	3,2
  6648  1231  2A3E               	goto	l3017
  6649  1232  3001               	movlw	1
  6650  1233  00D7               	movwf	??___fltol
  6651  1234                     u5065:	
  6652  1234  1003               	clrc
  6653  1235  0DD3               	rlf	___fltol@f1,f
  6654  1236  0DD4               	rlf	___fltol@f1+1,f
  6655  1237  0DD5               	rlf	___fltol@f1+2,f
  6656  1238  0DD6               	rlf	___fltol@f1+3,f
  6657  1239  0BD7               	decfsz	??___fltol,f
  6658  123A  2A34               	goto	u5065
  6659  123B  3001               	movlw	1
  6660  123C  02DD               	subwf	___fltol@exp1,f
  6661  123D  2A2F               	goto	l474
  6662  123E                     l3017:	
  6663  123E  085C               	movf	___fltol@sign1,w
  6664  123F  1903               	btfsc	3,2
  6665  1240  0008               	return
  6666  1241  09D3               	comf	___fltol@f1,f
  6667  1242  09D4               	comf	___fltol@f1+1,f
  6668  1243  09D5               	comf	___fltol@f1+2,f
  6669  1244  09D6               	comf	___fltol@f1+3,f
  6670  1245  0AD3               	incf	___fltol@f1,f
  6671  1246  1903               	skipnz
  6672  1247  0AD4               	incf	___fltol@f1+1,f
  6673  1248  1903               	skipnz
  6674  1249  0AD5               	incf	___fltol@f1+2,f
  6675  124A  1903               	skipnz
  6676  124B  0AD6               	incf	___fltol@f1+3,f
  6677  124C  0008               	return
  6678  124D                     __end_of___fltol:	
  6679                           
  6680                           	psect	text18
  6681  1DBF                     __ptext18:	
  6682 ;; *************** function ___flsub *****************
  6683 ;; Defined at:
  6684 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  6685 ;; Parameters:    Size  Location     Type
  6686 ;;  a               4   72[BANK0 ] long 
  6687 ;;  b               4   76[BANK0 ] long 
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;		None
  6690 ;; Return value:  Size  Location     Type
  6691 ;;                  4   72[BANK0 ] long 
  6692 ;; Registers used:
  6693 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6694 ;; Tracked objects:
  6695 ;;		On entry : 0/0
  6696 ;;		On exit  : 0/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6699 ;;      Params:         0       8       0       0       0
  6700 ;;      Locals:         0       0       0       0       0
  6701 ;;      Temps:          0       0       0       0       0
  6702 ;;      Totals:         0       8       0       0       0
  6703 ;;Total ram usage:        8 bytes
  6704 ;; Hardware stack levels used:    1
  6705 ;; Hardware stack levels required when called:    1
  6706 ;; This function calls:
  6707 ;;		___fladd
  6708 ;; This function is called by:
  6709 ;;		_sprintf
  6710 ;; This function uses a non-reentrant model
  6711 ;;
  6712                           
  6713                           
  6714                           ;psect for function ___flsub
  6715  1DBF                     ___flsub:	
  6716                           
  6717                           ;incstack = 0
  6718                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6719  1DBF  3080               	movlw	128
  6720  1DC0  1283               	bcf	3,5	;RP0=0, select bank0
  6721  1DC1  1303               	bcf	3,6	;RP1=0, select bank0
  6722  1DC2  06EB               	xorwf	___flsub@a+3,f
  6723  1DC3  086F               	movf	___flsub@b+3,w
  6724  1DC4  00D7               	movwf	___fladd@b+3
  6725  1DC5  086E               	movf	___flsub@b+2,w
  6726  1DC6  00D6               	movwf	___fladd@b+2
  6727  1DC7  086D               	movf	___flsub@b+1,w
  6728  1DC8  00D5               	movwf	___fladd@b+1
  6729  1DC9  086C               	movf	___flsub@b,w
  6730  1DCA  00D4               	movwf	___fladd@b
  6731  1DCB  086B               	movf	___flsub@a+3,w
  6732  1DCC  00DB               	movwf	___fladd@a+3
  6733  1DCD  086A               	movf	___flsub@a+2,w
  6734  1DCE  00DA               	movwf	___fladd@a+2
  6735  1DCF  0869               	movf	___flsub@a+1,w
  6736  1DD0  00D9               	movwf	___fladd@a+1
  6737  1DD1  0868               	movf	___flsub@a,w
  6738  1DD2  00D8               	movwf	___fladd@a
  6739  1DD3  160A  118A  25D1   	fcall	___fladd
  6740  1DD6  1283               	bcf	3,5	;RP0=0, select bank0
  6741  1DD7  1303               	bcf	3,6	;RP1=0, select bank0
  6742  1DD8  0857               	movf	?___fladd+3,w
  6743  1DD9  00EB               	movwf	?___flsub+3
  6744  1DDA  0856               	movf	?___fladd+2,w
  6745  1DDB  00EA               	movwf	?___flsub+2
  6746  1DDC  0855               	movf	?___fladd+1,w
  6747  1DDD  00E9               	movwf	?___flsub+1
  6748  1DDE  0854               	movf	?___fladd,w
  6749  1DDF  00E8               	movwf	?___flsub
  6750  1DE0  0008               	return
  6751  1DE1                     __end_of___flsub:	
  6752                           
  6753                           	psect	text19
  6754  15D1                     __ptext19:	
  6755 ;; *************** function ___fladd *****************
  6756 ;; Defined at:
  6757 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  6758 ;; Parameters:    Size  Location     Type
  6759 ;;  b               4   52[BANK0 ] long 
  6760 ;;  a               4   56[BANK0 ] long 
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;  grs             1   71[BANK0 ] unsigned char 
  6763 ;;  bexp            1   70[BANK0 ] unsigned char 
  6764 ;;  aexp            1   69[BANK0 ] unsigned char 
  6765 ;;  signs           1   68[BANK0 ] unsigned char 
  6766 ;; Return value:  Size  Location     Type
  6767 ;;                  4   52[BANK0 ] unsigned char 
  6768 ;; Registers used:
  6769 ;;		wreg, status,2, status,0, btemp+1
  6770 ;; Tracked objects:
  6771 ;;		On entry : 0/0
  6772 ;;		On exit  : 0/0
  6773 ;;		Unchanged: 0/0
  6774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6775 ;;      Params:         0       8       0       0       0
  6776 ;;      Locals:         0       4       0       0       0
  6777 ;;      Temps:          0       8       0       0       0
  6778 ;;      Totals:         0      20       0       0       0
  6779 ;;Total ram usage:       20 bytes
  6780 ;; Hardware stack levels used:    1
  6781 ;; This function calls:
  6782 ;;		Nothing
  6783 ;; This function is called by:
  6784 ;;		_sprintf
  6785 ;;		___flsub
  6786 ;; This function uses a non-reentrant model
  6787 ;;
  6788                           
  6789                           
  6790                           ;psect for function ___fladd
  6791  15D1                     ___fladd:	
  6792                           
  6793                           ;incstack = 0
  6794                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6795  15D1  1283               	bcf	3,5	;RP0=0, select bank0
  6796  15D2  1303               	bcf	3,6	;RP1=0, select bank0
  6797  15D3  0857               	movf	___fladd@b+3,w
  6798  15D4  3980               	andlw	128
  6799  15D5  00DC               	movwf	??___fladd
  6800  15D6  085C               	movf	??___fladd,w
  6801  15D7  00E4               	movwf	___fladd@signs
  6802  15D8  0857               	movf	___fladd@b+3,w
  6803  15D9  00DC               	movwf	??___fladd
  6804  15DA  075C               	addwf	??___fladd,w
  6805  15DB  00DD               	movwf	??___fladd+1
  6806  15DC  085D               	movf	??___fladd+1,w
  6807  15DD  00E6               	movwf	___fladd@bexp
  6808  15DE  1BD6               	btfsc	___fladd@b+2,7
  6809  15DF  1466               	bsf	___fladd@bexp,0
  6810  15E0  0866               	movf	___fladd@bexp,w
  6811  15E1  1903               	btfsc	3,2
  6812  15E2  2DF1               	goto	l2387
  6813  15E3  0A66               	incf	___fladd@bexp,w
  6814  15E4  1D03               	btfss	3,2
  6815  15E5  2DEE               	goto	l2383
  6816  15E6  3000               	movlw	0
  6817  15E7  00D7               	movwf	___fladd@b+3
  6818  15E8  3000               	movlw	0
  6819  15E9  00D6               	movwf	___fladd@b+2
  6820  15EA  3000               	movlw	0
  6821  15EB  00D5               	movwf	___fladd@b+1
  6822  15EC  3000               	movlw	0
  6823  15ED  00D4               	movwf	___fladd@b
  6824  15EE                     l2383:	
  6825  15EE  17D6               	bsf	___fladd@b+2,7
  6826  15EF  01D7               	clrf	___fladd@b+3
  6827  15F0  2DF9               	goto	l2389
  6828  15F1                     l2387:	
  6829  15F1  3000               	movlw	0
  6830  15F2  00D7               	movwf	___fladd@b+3
  6831  15F3  3000               	movlw	0
  6832  15F4  00D6               	movwf	___fladd@b+2
  6833  15F5  3000               	movlw	0
  6834  15F6  00D5               	movwf	___fladd@b+1
  6835  15F7  3000               	movlw	0
  6836  15F8  00D4               	movwf	___fladd@b
  6837  15F9                     l2389:	
  6838  15F9  085B               	movf	___fladd@a+3,w
  6839  15FA  3980               	andlw	128
  6840  15FB  00DC               	movwf	??___fladd
  6841  15FC  085C               	movf	??___fladd,w
  6842  15FD  00E5               	movwf	___fladd@aexp
  6843  15FE  0865               	movf	___fladd@aexp,w
  6844  15FF  0664               	xorwf	___fladd@signs,w
  6845  1600  1D03               	btfss	3,2
  6846  1601  1764               	bsf	___fladd@signs,6
  6847  1602  085B               	movf	___fladd@a+3,w
  6848  1603  00DC               	movwf	??___fladd
  6849  1604  075C               	addwf	??___fladd,w
  6850  1605  00DD               	movwf	??___fladd+1
  6851  1606  085D               	movf	??___fladd+1,w
  6852  1607  00E5               	movwf	___fladd@aexp
  6853  1608  1BDA               	btfsc	___fladd@a+2,7
  6854  1609  1465               	bsf	___fladd@aexp,0
  6855  160A  0865               	movf	___fladd@aexp,w
  6856  160B  1903               	btfsc	3,2
  6857  160C  2E1B               	goto	l2411
  6858  160D  0A65               	incf	___fladd@aexp,w
  6859  160E  1D03               	btfss	3,2
  6860  160F  2E18               	goto	l2407
  6861  1610  3000               	movlw	0
  6862  1611  00DB               	movwf	___fladd@a+3
  6863  1612  3000               	movlw	0
  6864  1613  00DA               	movwf	___fladd@a+2
  6865  1614  3000               	movlw	0
  6866  1615  00D9               	movwf	___fladd@a+1
  6867  1616  3000               	movlw	0
  6868  1617  00D8               	movwf	___fladd@a
  6869  1618                     l2407:	
  6870  1618  17DA               	bsf	___fladd@a+2,7
  6871  1619  01DB               	clrf	___fladd@a+3
  6872  161A  2E23               	goto	l591
  6873  161B                     l2411:	
  6874  161B  3000               	movlw	0
  6875  161C  00DB               	movwf	___fladd@a+3
  6876  161D  3000               	movlw	0
  6877  161E  00DA               	movwf	___fladd@a+2
  6878  161F  3000               	movlw	0
  6879  1620  00D9               	movwf	___fladd@a+1
  6880  1621  3000               	movlw	0
  6881  1622  00D8               	movwf	___fladd@a
  6882  1623                     l591:	
  6883  1623  0866               	movf	___fladd@bexp,w
  6884  1624  0265               	subwf	___fladd@aexp,w
  6885  1625  1803               	skipnc
  6886  1626  2E69               	goto	l2447
  6887  1627  1F64               	btfss	___fladd@signs,6
  6888  1628  2E2D               	goto	l2417
  6889  1629  3080               	movlw	128
  6890  162A  00DC               	movwf	??___fladd
  6891  162B  085C               	movf	??___fladd,w
  6892  162C  06E4               	xorwf	___fladd@signs,f
  6893  162D                     l2417:	
  6894  162D  0866               	movf	___fladd@bexp,w
  6895  162E  00DC               	movwf	??___fladd
  6896  162F  085C               	movf	??___fladd,w
  6897  1630  00E7               	movwf	___fladd@grs
  6898  1631  0865               	movf	___fladd@aexp,w
  6899  1632  00DC               	movwf	??___fladd
  6900  1633  085C               	movf	??___fladd,w
  6901  1634  00E6               	movwf	___fladd@bexp
  6902  1635  0867               	movf	___fladd@grs,w
  6903  1636  00DC               	movwf	??___fladd
  6904  1637  085C               	movf	??___fladd,w
  6905  1638  00E5               	movwf	___fladd@aexp
  6906  1639  0854               	movf	___fladd@b,w
  6907  163A  00DC               	movwf	??___fladd
  6908  163B  085C               	movf	??___fladd,w
  6909  163C  00E7               	movwf	___fladd@grs
  6910  163D  0858               	movf	___fladd@a,w
  6911  163E  00DC               	movwf	??___fladd
  6912  163F  085C               	movf	??___fladd,w
  6913  1640  00D4               	movwf	___fladd@b
  6914  1641  0867               	movf	___fladd@grs,w
  6915  1642  00DC               	movwf	??___fladd
  6916  1643  085C               	movf	??___fladd,w
  6917  1644  00D8               	movwf	___fladd@a
  6918  1645  0855               	movf	___fladd@b+1,w
  6919  1646  00DC               	movwf	??___fladd
  6920  1647  085C               	movf	??___fladd,w
  6921  1648  00E7               	movwf	___fladd@grs
  6922  1649  0859               	movf	___fladd@a+1,w
  6923  164A  00DC               	movwf	??___fladd
  6924  164B  085C               	movf	??___fladd,w
  6925  164C  00D5               	movwf	___fladd@b+1
  6926  164D  0867               	movf	___fladd@grs,w
  6927  164E  00DC               	movwf	??___fladd
  6928  164F  085C               	movf	??___fladd,w
  6929  1650  00D9               	movwf	___fladd@a+1
  6930  1651  0856               	movf	___fladd@b+2,w
  6931  1652  00DC               	movwf	??___fladd
  6932  1653  085C               	movf	??___fladd,w
  6933  1654  00E7               	movwf	___fladd@grs
  6934  1655  085A               	movf	___fladd@a+2,w
  6935  1656  00DC               	movwf	??___fladd
  6936  1657  085C               	movf	??___fladd,w
  6937  1658  00D6               	movwf	___fladd@b+2
  6938  1659  0867               	movf	___fladd@grs,w
  6939  165A  00DC               	movwf	??___fladd
  6940  165B  085C               	movf	??___fladd,w
  6941  165C  00DA               	movwf	___fladd@a+2
  6942  165D  0857               	movf	___fladd@b+3,w
  6943  165E  00DC               	movwf	??___fladd
  6944  165F  085C               	movf	??___fladd,w
  6945  1660  00E7               	movwf	___fladd@grs
  6946  1661  085B               	movf	___fladd@a+3,w
  6947  1662  00DC               	movwf	??___fladd
  6948  1663  085C               	movf	??___fladd,w
  6949  1664  00D7               	movwf	___fladd@b+3
  6950  1665  0867               	movf	___fladd@grs,w
  6951  1666  00DC               	movwf	??___fladd
  6952  1667  085C               	movf	??___fladd,w
  6953  1668  00DB               	movwf	___fladd@a+3
  6954  1669                     l2447:	
  6955  1669  01E7               	clrf	___fladd@grs
  6956  166A  0865               	movf	___fladd@aexp,w
  6957  166B  00DC               	movwf	??___fladd
  6958  166C  01DD               	clrf	??___fladd+1
  6959  166D  085D               	movf	??___fladd+1,w
  6960  166E  00DF               	movwf	??___fladd+3
  6961  166F  0866               	movf	___fladd@bexp,w
  6962  1670  025C               	subwf	??___fladd,w
  6963  1671  00DE               	movwf	??___fladd+2
  6964  1672  1C03               	skipc
  6965  1673  03DF               	decf	??___fladd+3,f
  6966  1674  085F               	movf	??___fladd+3,w
  6967  1675  3A80               	xorlw	128
  6968  1676  00FF               	movwf	127
  6969  1677  3080               	movlw	128
  6970  1678  027F               	subwf	127,w
  6971  1679  1D03               	skipz
  6972  167A  2E7D               	goto	u3495
  6973  167B  301A               	movlw	26
  6974  167C  025E               	subwf	??___fladd+2,w
  6975  167D                     u3495:	
  6976  167D  1C03               	skipc
  6977  167E  2EB6               	goto	l2465
  6978  167F  1283               	bcf	3,5	;RP0=0, select bank0
  6979  1680  1303               	bcf	3,6	;RP1=0, select bank0
  6980  1681  0857               	movf	___fladd@b+3,w
  6981  1682  0456               	iorwf	___fladd@b+2,w
  6982  1683  0455               	iorwf	___fladd@b+1,w
  6983  1684  0454               	iorwf	___fladd@b,w
  6984  1685  1903               	btfsc	3,2
  6985  1686  2E89               	goto	u3500
  6986  1687  3001               	movlw	1
  6987  1688  2E8A               	goto	u3510
  6988  1689                     u3500:	
  6989  1689  3000               	movlw	0
  6990  168A                     u3510:	
  6991  168A  00DC               	movwf	??___fladd
  6992  168B  085C               	movf	??___fladd,w
  6993  168C  00E7               	movwf	___fladd@grs
  6994  168D  3000               	movlw	0
  6995  168E  00D7               	movwf	___fladd@b+3
  6996  168F  3000               	movlw	0
  6997  1690  00D6               	movwf	___fladd@b+2
  6998  1691  3000               	movlw	0
  6999  1692  00D5               	movwf	___fladd@b+1
  7000  1693  3000               	movlw	0
  7001  1694  00D4               	movwf	___fladd@b
  7002  1695  0865               	movf	___fladd@aexp,w
  7003  1696  00DC               	movwf	??___fladd
  7004  1697  085C               	movf	??___fladd,w
  7005  1698  00E6               	movwf	___fladd@bexp
  7006  1699  2EBC               	goto	l595
  7007  169A                     l597:	
  7008  169A  1C67               	btfss	___fladd@grs,0
  7009  169B  2EA5               	goto	l2455
  7010  169C  0867               	movf	___fladd@grs,w
  7011  169D  00DC               	movwf	??___fladd
  7012  169E  1003               	clrc
  7013  169F  0C5C               	rrf	??___fladd,w
  7014  16A0  3801               	iorlw	1
  7015  16A1  00DD               	movwf	??___fladd+1
  7016  16A2  085D               	movf	??___fladd+1,w
  7017  16A3  00E7               	movwf	___fladd@grs
  7018  16A4  2EA7               	goto	l2457
  7019  16A5                     l2455:	
  7020  16A5  1003               	clrc
  7021  16A6  0CE7               	rrf	___fladd@grs,f
  7022  16A7                     l2457:	
  7023  16A7  1854               	btfsc	___fladd@b,0
  7024  16A8  17E7               	bsf	___fladd@grs,7
  7025  16A9  3001               	movlw	1
  7026  16AA  00DC               	movwf	??___fladd
  7027  16AB                     u3545:	
  7028  16AB  0D57               	rlf	___fladd@b+3,w
  7029  16AC  0CD7               	rrf	___fladd@b+3,f
  7030  16AD  0CD6               	rrf	___fladd@b+2,f
  7031  16AE  0CD5               	rrf	___fladd@b+1,f
  7032  16AF  0CD4               	rrf	___fladd@b,f
  7033  16B0  0BDC               	decfsz	??___fladd& (0+127),f
  7034  16B1  2EAB               	goto	u3545
  7035  16B2  3001               	movlw	1
  7036  16B3  00DC               	movwf	??___fladd
  7037  16B4  085C               	movf	??___fladd,w
  7038  16B5  07E6               	addwf	___fladd@bexp,f
  7039  16B6                     l2465:	
  7040  16B6  1283               	bcf	3,5	;RP0=0, select bank0
  7041  16B7  1303               	bcf	3,6	;RP1=0, select bank0
  7042  16B8  0865               	movf	___fladd@aexp,w
  7043  16B9  0266               	subwf	___fladd@bexp,w
  7044  16BA  1C03               	skipc
  7045  16BB  2E9A               	goto	l597
  7046  16BC                     l595:	
  7047  16BC  1B64               	btfsc	___fladd@signs,6
  7048  16BD  2EFD               	goto	l2491
  7049  16BE  0866               	movf	___fladd@bexp,w
  7050  16BF  1D03               	btfss	3,2
  7051  16C0  2ECA               	goto	l2473
  7052  16C1  3000               	movlw	0
  7053  16C2  00D7               	movwf	?___fladd+3
  7054  16C3  3000               	movlw	0
  7055  16C4  00D6               	movwf	?___fladd+2
  7056  16C5  3000               	movlw	0
  7057  16C6  00D5               	movwf	?___fladd+1
  7058  16C7  3000               	movlw	0
  7059  16C8  00D4               	movwf	?___fladd
  7060  16C9  0008               	return
  7061  16CA                     l2473:	
  7062  16CA  0858               	movf	___fladd@a,w
  7063  16CB  07D4               	addwf	___fladd@b,f
  7064  16CC  0859               	movf	___fladd@a+1,w
  7065  16CD  1103               	clrz
  7066  16CE  1803               	skipnc
  7067  16CF  3E01               	addlw	1
  7068  16D0  1D03               	btfss	3,2
  7069  16D1  07D5               	addwf	___fladd@b+1,f
  7070  16D2  085A               	movf	___fladd@a+2,w
  7071  16D3  1103               	clrz
  7072  16D4  1803               	skipnc
  7073  16D5  3E01               	addlw	1
  7074  16D6  1D03               	btfss	3,2
  7075  16D7  07D6               	addwf	___fladd@b+2,f
  7076  16D8  085B               	movf	___fladd@a+3,w
  7077  16D9  1103               	clrz
  7078  16DA  1803               	skipnc
  7079  16DB  3E01               	addlw	1
  7080  16DC  1D03               	btfss	3,2
  7081  16DD  07D7               	addwf	___fladd@b+3,f
  7082  16DE  1C57               	btfss	___fladd@b+3,0
  7083  16DF  2F9F               	goto	l2525
  7084  16E0  1C67               	btfss	___fladd@grs,0
  7085  16E1  2EEB               	goto	l2481
  7086  16E2  0867               	movf	___fladd@grs,w
  7087  16E3  00DC               	movwf	??___fladd
  7088  16E4  1003               	clrc
  7089  16E5  0C5C               	rrf	??___fladd,w
  7090  16E6  3801               	iorlw	1
  7091  16E7  00DD               	movwf	??___fladd+1
  7092  16E8  085D               	movf	??___fladd+1,w
  7093  16E9  00E7               	movwf	___fladd@grs
  7094  16EA  2EED               	goto	l2483
  7095  16EB                     l2481:	
  7096  16EB  1003               	clrc
  7097  16EC  0CE7               	rrf	___fladd@grs,f
  7098  16ED                     l2483:	
  7099  16ED  1854               	btfsc	___fladd@b,0
  7100  16EE  17E7               	bsf	___fladd@grs,7
  7101  16EF  3001               	movlw	1
  7102  16F0  00DC               	movwf	??___fladd
  7103  16F1                     u3625:	
  7104  16F1  0D57               	rlf	___fladd@b+3,w
  7105  16F2  0CD7               	rrf	___fladd@b+3,f
  7106  16F3  0CD6               	rrf	___fladd@b+2,f
  7107  16F4  0CD5               	rrf	___fladd@b+1,f
  7108  16F5  0CD4               	rrf	___fladd@b,f
  7109  16F6  0BDC               	decfsz	??___fladd& (0+127),f
  7110  16F7  2EF1               	goto	u3625
  7111  16F8  3001               	movlw	1
  7112  16F9  00DC               	movwf	??___fladd
  7113  16FA  085C               	movf	??___fladd,w
  7114  16FB  07E6               	addwf	___fladd@bexp,f
  7115  16FC  2F9F               	goto	l2525
  7116  16FD                     l2491:	
  7117  16FD  0857               	movf	___fladd@b+3,w
  7118  16FE  3A80               	xorlw	128
  7119  16FF  00FF               	movwf	127
  7120  1700  085B               	movf	___fladd@a+3,w
  7121  1701  3A80               	xorlw	128
  7122  1702  027F               	subwf	127,w
  7123  1703  1D03               	skipz
  7124  1704  2F0F               	goto	u3633
  7125  1705  085A               	movf	___fladd@a+2,w
  7126  1706  0256               	subwf	___fladd@b+2,w
  7127  1707  1D03               	skipz
  7128  1708  2F0F               	goto	u3633
  7129  1709  0859               	movf	___fladd@a+1,w
  7130  170A  0255               	subwf	___fladd@b+1,w
  7131  170B  1D03               	skipz
  7132  170C  2F0F               	goto	u3633
  7133  170D  0858               	movf	___fladd@a,w
  7134  170E  0254               	subwf	___fladd@b,w
  7135  170F                     u3633:	
  7136  170F  1803               	skipnc
  7137  1710  2F67               	goto	l2501
  7138  1711  30FF               	movlw	255
  7139  1712  00DC               	movwf	??___fladd
  7140  1713  30FF               	movlw	255
  7141  1714  00DD               	movwf	??___fladd+1
  7142  1715  30FF               	movlw	255
  7143  1716  00DE               	movwf	??___fladd+2
  7144  1717  30FF               	movlw	255
  7145  1718  00DF               	movwf	??___fladd+3
  7146  1719  0858               	movf	___fladd@a,w
  7147  171A  00E0               	movwf	??___fladd+4
  7148  171B  0859               	movf	___fladd@a+1,w
  7149  171C  00E1               	movwf	??___fladd+5
  7150  171D  085A               	movf	___fladd@a+2,w
  7151  171E  00E2               	movwf	??___fladd+6
  7152  171F  085B               	movf	___fladd@a+3,w
  7153  1720  00E3               	movwf	??___fladd+7
  7154  1721  0854               	movf	___fladd@b,w
  7155  1722  02E0               	subwf	??___fladd+4,f
  7156  1723  0855               	movf	___fladd@b+1,w
  7157  1724  1C03               	skipc
  7158  1725  0F55               	incfsz	___fladd@b+1,w
  7159  1726  2F28               	goto	u3641
  7160  1727  2F29               	goto	u3642
  7161  1728                     u3641:	
  7162  1728  02E1               	subwf	??___fladd+5,f
  7163  1729                     u3642:	
  7164  1729  0856               	movf	___fladd@b+2,w
  7165  172A  1C03               	skipc
  7166  172B  0F56               	incfsz	___fladd@b+2,w
  7167  172C  2F2E               	goto	u3643
  7168  172D  2F2F               	goto	u3644
  7169  172E                     u3643:	
  7170  172E  02E2               	subwf	??___fladd+6,f
  7171  172F                     u3644:	
  7172  172F  0857               	movf	___fladd@b+3,w
  7173  1730  1C03               	skipc
  7174  1731  0F57               	incfsz	___fladd@b+3,w
  7175  1732  2F34               	goto	u3645
  7176  1733  2F35               	goto	u3646
  7177  1734                     u3645:	
  7178  1734  02E3               	subwf	??___fladd+7,f
  7179  1735                     u3646:	
  7180  1735  0860               	movf	??___fladd+4,w
  7181  1736  07DC               	addwf	??___fladd,f
  7182  1737  0861               	movf	??___fladd+5,w
  7183  1738  1803               	skipnc
  7184  1739  0F61               	incfsz	??___fladd+5,w
  7185  173A  2F3C               	goto	u3650
  7186  173B  2F3D               	goto	u3651
  7187  173C                     u3650:	
  7188  173C  07DD               	addwf	??___fladd+1,f
  7189  173D                     u3651:	
  7190  173D  0862               	movf	??___fladd+6,w
  7191  173E  1803               	skipnc
  7192  173F  0F62               	incfsz	??___fladd+6,w
  7193  1740  2F42               	goto	u3652
  7194  1741  2F43               	goto	u3653
  7195  1742                     u3652:	
  7196  1742  07DE               	addwf	??___fladd+2,f
  7197  1743                     u3653:	
  7198  1743  0863               	movf	??___fladd+7,w
  7199  1744  1803               	skipnc
  7200  1745  0A63               	incf	??___fladd+7,w
  7201  1746  07DF               	addwf	??___fladd+3,f
  7202  1747  085F               	movf	??___fladd+3,w
  7203  1748  00D7               	movwf	___fladd@b+3
  7204  1749  085E               	movf	??___fladd+2,w
  7205  174A  00D6               	movwf	___fladd@b+2
  7206  174B  085D               	movf	??___fladd+1,w
  7207  174C  00D5               	movwf	___fladd@b+1
  7208  174D  085C               	movf	??___fladd,w
  7209  174E  00D4               	movwf	___fladd@b
  7210  174F  3080               	movlw	128
  7211  1750  00DC               	movwf	??___fladd
  7212  1751  085C               	movf	??___fladd,w
  7213  1752  06E4               	xorwf	___fladd@signs,f
  7214  1753  09E7               	comf	___fladd@grs,f
  7215  1754  0AE7               	incf	___fladd@grs,f
  7216  1755  0867               	movf	___fladd@grs,w
  7217  1756  1D03               	btfss	3,2
  7218  1757  2F75               	goto	l612
  7219  1758  3001               	movlw	1
  7220  1759  07D4               	addwf	___fladd@b,f
  7221  175A  3000               	movlw	0
  7222  175B  1803               	skipnc
  7223  175C  3001               	movlw	1
  7224  175D  07D5               	addwf	___fladd@b+1,f
  7225  175E  3000               	movlw	0
  7226  175F  1803               	skipnc
  7227  1760  3001               	movlw	1
  7228  1761  07D6               	addwf	___fladd@b+2,f
  7229  1762  3000               	movlw	0
  7230  1763  1803               	skipnc
  7231  1764  3001               	movlw	1
  7232  1765  07D7               	addwf	___fladd@b+3,f
  7233  1766  2F75               	goto	l612
  7234  1767                     l2501:	
  7235  1767  0858               	movf	___fladd@a,w
  7236  1768  02D4               	subwf	___fladd@b,f
  7237  1769  0859               	movf	___fladd@a+1,w
  7238  176A  1C03               	skipc
  7239  176B  0F59               	incfsz	___fladd@a+1,w
  7240  176C  02D5               	subwf	___fladd@b+1,f
  7241  176D  085A               	movf	___fladd@a+2,w
  7242  176E  1C03               	skipc
  7243  176F  0F5A               	incfsz	___fladd@a+2,w
  7244  1770  02D6               	subwf	___fladd@b+2,f
  7245  1771  085B               	movf	___fladd@a+3,w
  7246  1772  1C03               	skipc
  7247  1773  0F5B               	incfsz	___fladd@a+3,w
  7248  1774  02D7               	subwf	___fladd@b+3,f
  7249  1775                     l612:	
  7250  1775  0857               	movf	___fladd@b+3,w
  7251  1776  0456               	iorwf	___fladd@b+2,w
  7252  1777  0455               	iorwf	___fladd@b+1,w
  7253  1778  0454               	iorwf	___fladd@b,w
  7254  1779  1D03               	skipz
  7255  177A  2F9D               	goto	l2523
  7256  177B  0867               	movf	___fladd@grs,w
  7257  177C  1D03               	btfss	3,2
  7258  177D  2F9D               	goto	l2523
  7259  177E  3000               	movlw	0
  7260  177F  00D7               	movwf	?___fladd+3
  7261  1780  3000               	movlw	0
  7262  1781  00D6               	movwf	?___fladd+2
  7263  1782  3000               	movlw	0
  7264  1783  00D5               	movwf	?___fladd+1
  7265  1784  3000               	movlw	0
  7266  1785  00D4               	movwf	?___fladd
  7267  1786  0008               	return
  7268  1787                     l2509:	
  7269  1787  3001               	movlw	1
  7270  1788  00DC               	movwf	??___fladd
  7271  1789                     u3695:	
  7272  1789  1003               	clrc
  7273  178A  0DD4               	rlf	___fladd@b,f
  7274  178B  0DD5               	rlf	___fladd@b+1,f
  7275  178C  0DD6               	rlf	___fladd@b+2,f
  7276  178D  0DD7               	rlf	___fladd@b+3,f
  7277  178E  0BDC               	decfsz	??___fladd,f
  7278  178F  2F89               	goto	u3695
  7279  1790  1BE7               	btfsc	___fladd@grs,7
  7280  1791  1454               	bsf	___fladd@b,0
  7281  1792  1C67               	btfss	___fladd@grs,0
  7282  1793  2F96               	goto	l2517
  7283  1794  1403               	setc
  7284  1795  2F97               	goto	L7
  7285  1796                     l2517:	
  7286  1796  1003               	clrc
  7287  1797                     L7:	
  7288  1797  0DE7               	rlf	___fladd@grs,f
  7289  1798  0866               	movf	___fladd@bexp,w
  7290  1799  1903               	btfsc	3,2
  7291  179A  2F9D               	goto	l2523
  7292  179B  3001               	movlw	1
  7293  179C  02E6               	subwf	___fladd@bexp,f
  7294  179D                     l2523:	
  7295  179D  1FD6               	btfss	___fladd@b+2,7
  7296  179E  2F87               	goto	l2509
  7297  179F                     l2525:	
  7298  179F  01E5               	clrf	___fladd@aexp
  7299  17A0  1FE7               	btfss	___fladd@grs,7
  7300  17A1  2FAA               	goto	l2535
  7301  17A2  0867               	movf	___fladd@grs,w
  7302  17A3  397F               	andlw	127
  7303  17A4  1903               	btfsc	3,2
  7304  17A5  1854               	btfsc	___fladd@b,0
  7305  17A6  2FA8               	goto	l2531
  7306  17A7  2FAA               	goto	l2535
  7307  17A8                     l2531:	
  7308  17A8  01E5               	clrf	___fladd@aexp
  7309  17A9  0AE5               	incf	___fladd@aexp,f
  7310  17AA                     l2535:	
  7311  17AA  0865               	movf	___fladd@aexp,w
  7312  17AB  1903               	btfsc	3,2
  7313  17AC  2FDD               	goto	l625
  7314  17AD  3001               	movlw	1
  7315  17AE  07D4               	addwf	___fladd@b,f
  7316  17AF  3000               	movlw	0
  7317  17B0  1803               	skipnc
  7318  17B1  3001               	movlw	1
  7319  17B2  07D5               	addwf	___fladd@b+1,f
  7320  17B3  3000               	movlw	0
  7321  17B4  1803               	skipnc
  7322  17B5  3001               	movlw	1
  7323  17B6  07D6               	addwf	___fladd@b+2,f
  7324  17B7  3000               	movlw	0
  7325  17B8  1803               	skipnc
  7326  17B9  3001               	movlw	1
  7327  17BA  07D7               	addwf	___fladd@b+3,f
  7328  17BB  1C57               	btfss	___fladd@b+3,0
  7329  17BC  2FDD               	goto	l625
  7330  17BD  0854               	movf	___fladd@b,w
  7331  17BE  00DC               	movwf	??___fladd
  7332  17BF  0855               	movf	___fladd@b+1,w
  7333  17C0  00DD               	movwf	??___fladd+1
  7334  17C1  0856               	movf	___fladd@b+2,w
  7335  17C2  00DE               	movwf	??___fladd+2
  7336  17C3  0857               	movf	___fladd@b+3,w
  7337  17C4  00DF               	movwf	??___fladd+3
  7338  17C5  3001               	movlw	1
  7339  17C6  00E0               	movwf	??___fladd+4
  7340  17C7                     u3795:	
  7341  17C7  0D5F               	rlf	??___fladd+3,w
  7342  17C8  0CDF               	rrf	??___fladd+3,f
  7343  17C9  0CDE               	rrf	??___fladd+2,f
  7344  17CA  0CDD               	rrf	??___fladd+1,f
  7345  17CB  0CDC               	rrf	??___fladd,f
  7346  17CC  0BE0               	decfsz	??___fladd+4,f
  7347  17CD  2FC7               	goto	u3795
  7348  17CE  085F               	movf	??___fladd+3,w
  7349  17CF  00D7               	movwf	___fladd@b+3
  7350  17D0  085E               	movf	??___fladd+2,w
  7351  17D1  00D6               	movwf	___fladd@b+2
  7352  17D2  085D               	movf	??___fladd+1,w
  7353  17D3  00D5               	movwf	___fladd@b+1
  7354  17D4  085C               	movf	??___fladd,w
  7355  17D5  00D4               	movwf	___fladd@b
  7356  17D6  0A66               	incf	___fladd@bexp,w
  7357  17D7  1903               	btfsc	3,2
  7358  17D8  2FDD               	goto	l625
  7359  17D9  3001               	movlw	1
  7360  17DA  00DC               	movwf	??___fladd
  7361  17DB  085C               	movf	??___fladd,w
  7362  17DC  07E6               	addwf	___fladd@bexp,f
  7363  17DD                     l625:	
  7364  17DD  0A66               	incf	___fladd@bexp,w
  7365  17DE  1D03               	btfss	3,2
  7366  17DF  0866               	movf	___fladd@bexp,w
  7367  17E0  1D03               	btfss	3,2
  7368  17E1  2FED               	goto	l2553
  7369  17E2  3000               	movlw	0
  7370  17E3  00D7               	movwf	___fladd@b+3
  7371  17E4  3000               	movlw	0
  7372  17E5  00D6               	movwf	___fladd@b+2
  7373  17E6  3000               	movlw	0
  7374  17E7  00D5               	movwf	___fladd@b+1
  7375  17E8  3000               	movlw	0
  7376  17E9  00D4               	movwf	___fladd@b
  7377  17EA  0866               	movf	___fladd@bexp,w
  7378  17EB  1903               	btfsc	3,2
  7379  17EC  01E4               	clrf	___fladd@signs
  7380  17ED                     l2553:	
  7381  17ED  1C66               	btfss	___fladd@bexp,0
  7382  17EE  2FF1               	goto	l2557
  7383  17EF  17D6               	bsf	___fladd@b+2,7
  7384  17F0  2FF5               	goto	l633
  7385  17F1                     l2557:	
  7386  17F1  307F               	movlw	127
  7387  17F2  00DC               	movwf	??___fladd
  7388  17F3  085C               	movf	??___fladd,w
  7389  17F4  05D6               	andwf	___fladd@b+2,f
  7390  17F5                     l633:	
  7391  17F5  0866               	movf	___fladd@bexp,w
  7392  17F6  00DC               	movwf	??___fladd
  7393  17F7  1003               	clrc
  7394  17F8  0C5C               	rrf	??___fladd,w
  7395  17F9  00DD               	movwf	??___fladd+1
  7396  17FA  085D               	movf	??___fladd+1,w
  7397  17FB  00D7               	movwf	___fladd@b+3
  7398  17FC  1FE4               	btfss	___fladd@signs,7
  7399  17FD  0008               	return
  7400  17FE  17D7               	bsf	___fladd@b+3,7
  7401  17FF  0008               	return
  7402  1800                     __end_of___fladd:	
  7403                           
  7404                           	psect	text20
  7405  1D16                     __ptext20:	
  7406 ;; *************** function ___flneg *****************
  7407 ;; Defined at:
  7408 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
  7409 ;; Parameters:    Size  Location     Type
  7410 ;;  f1              4    0[COMMON] unsigned char 
  7411 ;; Auto vars:     Size  Location     Type
  7412 ;;		None
  7413 ;; Return value:  Size  Location     Type
  7414 ;;                  4    0[COMMON] unsigned char 
  7415 ;; Registers used:
  7416 ;;		wreg
  7417 ;; Tracked objects:
  7418 ;;		On entry : 0/0
  7419 ;;		On exit  : 0/0
  7420 ;;		Unchanged: 0/0
  7421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7422 ;;      Params:         4       0       0       0       0
  7423 ;;      Locals:         0       0       0       0       0
  7424 ;;      Temps:          0       0       0       0       0
  7425 ;;      Totals:         4       0       0       0       0
  7426 ;;Total ram usage:        4 bytes
  7427 ;; Hardware stack levels used:    1
  7428 ;; This function calls:
  7429 ;;		Nothing
  7430 ;; This function is called by:
  7431 ;;		_sprintf
  7432 ;; This function uses a non-reentrant model
  7433 ;;
  7434                           
  7435                           
  7436                           ;psect for function ___flneg
  7437  1D16                     ___flneg:	
  7438                           
  7439                           ;incstack = 0
  7440                           ; Regs used in ___flneg: [wreg]
  7441  1D16  0873               	movf	___flneg@f1+3,w
  7442  1D17  0472               	iorwf	___flneg@f1+2,w
  7443  1D18  0471               	iorwf	___flneg@f1+1,w
  7444  1D19  0470               	iorwf	___flneg@f1,w
  7445  1D1A  1903               	skipnz
  7446  1D1B  0008               	return
  7447  1D1C  3080               	movlw	128
  7448  1D1D  06F3               	xorwf	___flneg@f1+3,f
  7449  1D1E  0008               	return
  7450  1D1F                     __end_of___flneg:	
  7451                           
  7452                           	psect	text21
  7453  124D                     __ptext21:	
  7454 ;; *************** function ___flge *****************
  7455 ;; Defined at:
  7456 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
  7457 ;; Parameters:    Size  Location     Type
  7458 ;;  ff1             4    0[COMMON] unsigned char 
  7459 ;;  ff2             4    4[COMMON] unsigned char 
  7460 ;; Auto vars:     Size  Location     Type
  7461 ;;		None
  7462 ;; Return value:  Size  Location     Type
  7463 ;;		None               void
  7464 ;; Registers used:
  7465 ;;		wreg, status,2, status,0
  7466 ;; Tracked objects:
  7467 ;;		On entry : 0/0
  7468 ;;		On exit  : 0/0
  7469 ;;		Unchanged: 0/0
  7470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7471 ;;      Params:         8       0       0       0       0
  7472 ;;      Locals:         0       0       0       0       0
  7473 ;;      Temps:          4       0       0       0       0
  7474 ;;      Totals:        12       0       0       0       0
  7475 ;;Total ram usage:       12 bytes
  7476 ;; Hardware stack levels used:    1
  7477 ;; This function calls:
  7478 ;;		Nothing
  7479 ;; This function is called by:
  7480 ;;		_sprintf
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484                           
  7485                           ;psect for function ___flge
  7486  124D                     ___flge:	
  7487                           
  7488                           ;incstack = 0
  7489                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7490  124D  3000               	movlw	0
  7491  124E  0570               	andwf	___flge@ff1,w
  7492  124F  00F8               	movwf	??___flge
  7493  1250  3000               	movlw	0
  7494  1251  0571               	andwf	___flge@ff1+1,w
  7495  1252  00F9               	movwf	??___flge+1
  7496  1253  3080               	movlw	128
  7497  1254  0572               	andwf	___flge@ff1+2,w
  7498  1255  00FA               	movwf	??___flge+2
  7499  1256  307F               	movlw	127
  7500  1257  0573               	andwf	___flge@ff1+3,w
  7501  1258  00FB               	movwf	??___flge+3
  7502  1259  087B               	movf	??___flge+3,w
  7503  125A  047A               	iorwf	??___flge+2,w
  7504  125B  0479               	iorwf	??___flge+1,w
  7505  125C  0478               	iorwf	??___flge,w
  7506  125D  1D03               	skipz
  7507  125E  2A67               	goto	l455
  7508  125F  3000               	movlw	0
  7509  1260  00F3               	movwf	___flge@ff1+3
  7510  1261  3000               	movlw	0
  7511  1262  00F2               	movwf	___flge@ff1+2
  7512  1263  3000               	movlw	0
  7513  1264  00F1               	movwf	___flge@ff1+1
  7514  1265  3000               	movlw	0
  7515  1266  00F0               	movwf	___flge@ff1
  7516  1267                     l455:	
  7517  1267  3000               	movlw	0
  7518  1268  0574               	andwf	___flge@ff2,w
  7519  1269  00F8               	movwf	??___flge
  7520  126A  3000               	movlw	0
  7521  126B  0575               	andwf	___flge@ff2+1,w
  7522  126C  00F9               	movwf	??___flge+1
  7523  126D  3080               	movlw	128
  7524  126E  0576               	andwf	___flge@ff2+2,w
  7525  126F  00FA               	movwf	??___flge+2
  7526  1270  307F               	movlw	127
  7527  1271  0577               	andwf	___flge@ff2+3,w
  7528  1272  00FB               	movwf	??___flge+3
  7529  1273  087B               	movf	??___flge+3,w
  7530  1274  047A               	iorwf	??___flge+2,w
  7531  1275  0479               	iorwf	??___flge+1,w
  7532  1276  0478               	iorwf	??___flge,w
  7533  1277  1D03               	skipz
  7534  1278  2A81               	goto	l2963
  7535  1279  3000               	movlw	0
  7536  127A  00F7               	movwf	___flge@ff2+3
  7537  127B  3000               	movlw	0
  7538  127C  00F6               	movwf	___flge@ff2+2
  7539  127D  3000               	movlw	0
  7540  127E  00F5               	movwf	___flge@ff2+1
  7541  127F  3000               	movlw	0
  7542  1280  00F4               	movwf	___flge@ff2
  7543  1281                     l2963:	
  7544  1281  1FF3               	btfss	___flge@ff1+3,7
  7545  1282  2AA7               	goto	l2967
  7546  1283  3000               	movlw	0
  7547  1284  00F8               	movwf	??___flge
  7548  1285  3000               	movlw	0
  7549  1286  00F9               	movwf	??___flge+1
  7550  1287  3000               	movlw	0
  7551  1288  00FA               	movwf	??___flge+2
  7552  1289  3080               	movlw	128
  7553  128A  00FB               	movwf	??___flge+3
  7554  128B  0870               	movf	___flge@ff1,w
  7555  128C  02F8               	subwf	??___flge,f
  7556  128D  0871               	movf	___flge@ff1+1,w
  7557  128E  1C03               	skipc
  7558  128F  0F71               	incfsz	___flge@ff1+1,w
  7559  1290  2A92               	goto	u4941
  7560  1291  2A93               	goto	u4942
  7561  1292                     u4941:	
  7562  1292  02F9               	subwf	??___flge+1,f
  7563  1293                     u4942:	
  7564  1293  0872               	movf	___flge@ff1+2,w
  7565  1294  1C03               	skipc
  7566  1295  0F72               	incfsz	___flge@ff1+2,w
  7567  1296  2A98               	goto	u4943
  7568  1297  2A99               	goto	u4944
  7569  1298                     u4943:	
  7570  1298  02FA               	subwf	??___flge+2,f
  7571  1299                     u4944:	
  7572  1299  0873               	movf	___flge@ff1+3,w
  7573  129A  1C03               	skipc
  7574  129B  0F73               	incfsz	___flge@ff1+3,w
  7575  129C  2A9E               	goto	u4945
  7576  129D  2A9F               	goto	u4946
  7577  129E                     u4945:	
  7578  129E  02FB               	subwf	??___flge+3,f
  7579  129F                     u4946:	
  7580  129F  087B               	movf	??___flge+3,w
  7581  12A0  00F3               	movwf	___flge@ff1+3
  7582  12A1  087A               	movf	??___flge+2,w
  7583  12A2  00F2               	movwf	___flge@ff1+2
  7584  12A3  0879               	movf	??___flge+1,w
  7585  12A4  00F1               	movwf	___flge@ff1+1
  7586  12A5  0878               	movf	??___flge,w
  7587  12A6  00F0               	movwf	___flge@ff1
  7588  12A7                     l2967:	
  7589  12A7  1FF7               	btfss	___flge@ff2+3,7
  7590  12A8  2ACD               	goto	l458
  7591  12A9  3000               	movlw	0
  7592  12AA  00F8               	movwf	??___flge
  7593  12AB  3000               	movlw	0
  7594  12AC  00F9               	movwf	??___flge+1
  7595  12AD  3000               	movlw	0
  7596  12AE  00FA               	movwf	??___flge+2
  7597  12AF  3080               	movlw	128
  7598  12B0  00FB               	movwf	??___flge+3
  7599  12B1  0874               	movf	___flge@ff2,w
  7600  12B2  02F8               	subwf	??___flge,f
  7601  12B3  0875               	movf	___flge@ff2+1,w
  7602  12B4  1C03               	skipc
  7603  12B5  0F75               	incfsz	___flge@ff2+1,w
  7604  12B6  2AB8               	goto	u4961
  7605  12B7  2AB9               	goto	u4962
  7606  12B8                     u4961:	
  7607  12B8  02F9               	subwf	??___flge+1,f
  7608  12B9                     u4962:	
  7609  12B9  0876               	movf	___flge@ff2+2,w
  7610  12BA  1C03               	skipc
  7611  12BB  0F76               	incfsz	___flge@ff2+2,w
  7612  12BC  2ABE               	goto	u4963
  7613  12BD  2ABF               	goto	u4964
  7614  12BE                     u4963:	
  7615  12BE  02FA               	subwf	??___flge+2,f
  7616  12BF                     u4964:	
  7617  12BF  0877               	movf	___flge@ff2+3,w
  7618  12C0  1C03               	skipc
  7619  12C1  0F77               	incfsz	___flge@ff2+3,w
  7620  12C2  2AC4               	goto	u4965
  7621  12C3  2AC5               	goto	u4966
  7622  12C4                     u4965:	
  7623  12C4  02FB               	subwf	??___flge+3,f
  7624  12C5                     u4966:	
  7625  12C5  087B               	movf	??___flge+3,w
  7626  12C6  00F7               	movwf	___flge@ff2+3
  7627  12C7  087A               	movf	??___flge+2,w
  7628  12C8  00F6               	movwf	___flge@ff2+2
  7629  12C9  0879               	movf	??___flge+1,w
  7630  12CA  00F5               	movwf	___flge@ff2+1
  7631  12CB  0878               	movf	??___flge,w
  7632  12CC  00F4               	movwf	___flge@ff2
  7633  12CD                     l458:	
  7634  12CD  3080               	movlw	128
  7635  12CE  06F3               	xorwf	___flge@ff1+3,f
  7636  12CF  3080               	movlw	128
  7637  12D0  06F7               	xorwf	___flge@ff2+3,f
  7638  12D1  0877               	movf	___flge@ff2+3,w
  7639  12D2  0273               	subwf	___flge@ff1+3,w
  7640  12D3  1D03               	skipz
  7641  12D4  0008               	return
  7642  12D5  0876               	movf	___flge@ff2+2,w
  7643  12D6  0272               	subwf	___flge@ff1+2,w
  7644  12D7  1D03               	skipz
  7645  12D8  0008               	return
  7646  12D9  0875               	movf	___flge@ff2+1,w
  7647  12DA  0271               	subwf	___flge@ff1+1,w
  7648  12DB  1D03               	skipz
  7649  12DC  0008               	return
  7650  12DD  0874               	movf	___flge@ff2,w
  7651  12DE  0270               	subwf	___flge@ff1,w
  7652  12DF  0008               	return
  7653  12E0                     __end_of___flge:	
  7654                           
  7655                           	psect	text22
  7656  1F21                     __ptext22:	
  7657 ;; *************** function ___fleq *****************
  7658 ;; Defined at:
  7659 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
  7660 ;; Parameters:    Size  Location     Type
  7661 ;;  ff1             4    0[COMMON] unsigned char 
  7662 ;;  ff2             4    4[COMMON] unsigned char 
  7663 ;; Auto vars:     Size  Location     Type
  7664 ;;		None
  7665 ;; Return value:  Size  Location     Type
  7666 ;;		None               void
  7667 ;; Registers used:
  7668 ;;		wreg, status,2, status,0
  7669 ;; Tracked objects:
  7670 ;;		On entry : 0/0
  7671 ;;		On exit  : 0/0
  7672 ;;		Unchanged: 0/0
  7673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7674 ;;      Params:         8       0       0       0       0
  7675 ;;      Locals:         0       0       0       0       0
  7676 ;;      Temps:          4       0       0       0       0
  7677 ;;      Totals:        12       0       0       0       0
  7678 ;;Total ram usage:       12 bytes
  7679 ;; Hardware stack levels used:    1
  7680 ;; This function calls:
  7681 ;;		Nothing
  7682 ;; This function is called by:
  7683 ;;		_sprintf
  7684 ;; This function uses a non-reentrant model
  7685 ;;
  7686                           
  7687                           
  7688                           ;psect for function ___fleq
  7689  1F21                     ___fleq:	
  7690                           
  7691                           ;incstack = 0
  7692                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7693  1F21  3000               	movlw	0
  7694  1F22  0570               	andwf	___fleq@ff1,w
  7695  1F23  00F8               	movwf	??___fleq
  7696  1F24  3000               	movlw	0
  7697  1F25  0571               	andwf	___fleq@ff1+1,w
  7698  1F26  00F9               	movwf	??___fleq+1
  7699  1F27  3080               	movlw	128
  7700  1F28  0572               	andwf	___fleq@ff1+2,w
  7701  1F29  00FA               	movwf	??___fleq+2
  7702  1F2A  307F               	movlw	127
  7703  1F2B  0573               	andwf	___fleq@ff1+3,w
  7704  1F2C  00FB               	movwf	??___fleq+3
  7705  1F2D  087B               	movf	??___fleq+3,w
  7706  1F2E  047A               	iorwf	??___fleq+2,w
  7707  1F2F  0479               	iorwf	??___fleq+1,w
  7708  1F30  0478               	iorwf	??___fleq,w
  7709  1F31  1D03               	skipz
  7710  1F32  2F3B               	goto	l450
  7711  1F33  3000               	movlw	0
  7712  1F34  00F3               	movwf	___fleq@ff1+3
  7713  1F35  3000               	movlw	0
  7714  1F36  00F2               	movwf	___fleq@ff1+2
  7715  1F37  3000               	movlw	0
  7716  1F38  00F1               	movwf	___fleq@ff1+1
  7717  1F39  3000               	movlw	0
  7718  1F3A  00F0               	movwf	___fleq@ff1
  7719  1F3B                     l450:	
  7720  1F3B  3000               	movlw	0
  7721  1F3C  0574               	andwf	___fleq@ff2,w
  7722  1F3D  00F8               	movwf	??___fleq
  7723  1F3E  3000               	movlw	0
  7724  1F3F  0575               	andwf	___fleq@ff2+1,w
  7725  1F40  00F9               	movwf	??___fleq+1
  7726  1F41  3080               	movlw	128
  7727  1F42  0576               	andwf	___fleq@ff2+2,w
  7728  1F43  00FA               	movwf	??___fleq+2
  7729  1F44  307F               	movlw	127
  7730  1F45  0577               	andwf	___fleq@ff2+3,w
  7731  1F46  00FB               	movwf	??___fleq+3
  7732  1F47  087B               	movf	??___fleq+3,w
  7733  1F48  047A               	iorwf	??___fleq+2,w
  7734  1F49  0479               	iorwf	??___fleq+1,w
  7735  1F4A  0478               	iorwf	??___fleq,w
  7736  1F4B  1D03               	skipz
  7737  1F4C  2F55               	goto	l451
  7738  1F4D  3000               	movlw	0
  7739  1F4E  00F7               	movwf	___fleq@ff2+3
  7740  1F4F  3000               	movlw	0
  7741  1F50  00F6               	movwf	___fleq@ff2+2
  7742  1F51  3000               	movlw	0
  7743  1F52  00F5               	movwf	___fleq@ff2+1
  7744  1F53  3000               	movlw	0
  7745  1F54  00F4               	movwf	___fleq@ff2
  7746  1F55                     l451:	
  7747  1F55  0877               	movf	___fleq@ff2+3,w
  7748  1F56  0673               	xorwf	___fleq@ff1+3,w
  7749  1F57  1D03               	skipz
  7750  1F58  2F63               	goto	u4905
  7751  1F59  0876               	movf	___fleq@ff2+2,w
  7752  1F5A  0672               	xorwf	___fleq@ff1+2,w
  7753  1F5B  1D03               	skipz
  7754  1F5C  2F63               	goto	u4905
  7755  1F5D  0875               	movf	___fleq@ff2+1,w
  7756  1F5E  0671               	xorwf	___fleq@ff1+1,w
  7757  1F5F  1D03               	skipz
  7758  1F60  2F63               	goto	u4905
  7759  1F61  0874               	movf	___fleq@ff2,w
  7760  1F62  0670               	xorwf	___fleq@ff1,w
  7761  1F63                     u4905:	
  7762  1F63  1903               	skipnz
  7763  1F64  2F67               	goto	l2953
  7764  1F65  1003               	clrc
  7765  1F66  0008               	return
  7766  1F67                     l2953:	
  7767  1F67  1403               	setc
  7768  1F68  0008               	return
  7769  1F69                     __end_of___fleq:	
  7770                           
  7771                           	psect	text23
  7772  1E6D                     __ptext23:	
  7773 ;; *************** function _lcdSetCursor *****************
  7774 ;; Defined at:
  7775 ;;		line 56 in file "./lcd.h"
  7776 ;; Parameters:    Size  Location     Type
  7777 ;;  y               1    wreg     unsigned char 
  7778 ;;  x               1    4[COMMON] unsigned char 
  7779 ;; Auto vars:     Size  Location     Type
  7780 ;;  y               1   11[COMMON] unsigned char 
  7781 ;;  temp            1   10[COMMON] unsigned char 
  7782 ;;  row             1    9[COMMON] unsigned char 
  7783 ;;  yy              1    8[COMMON] unsigned char 
  7784 ;;  z               1    7[COMMON] unsigned char 
  7785 ;; Return value:  Size  Location     Type
  7786 ;;                  1    wreg      void 
  7787 ;; Registers used:
  7788 ;;		wreg, status,2, status,0, pclath, cstack
  7789 ;; Tracked objects:
  7790 ;;		On entry : 0/0
  7791 ;;		On exit  : 0/0
  7792 ;;		Unchanged: 0/0
  7793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7794 ;;      Params:         1       0       0       0       0
  7795 ;;      Locals:         5       0       0       0       0
  7796 ;;      Temps:          2       0       0       0       0
  7797 ;;      Totals:         8       0       0       0       0
  7798 ;;Total ram usage:        8 bytes
  7799 ;; Hardware stack levels used:    1
  7800 ;; Hardware stack levels required when called:    2
  7801 ;; This function calls:
  7802 ;;		_lcdCmd
  7803 ;; This function is called by:
  7804 ;;		_main
  7805 ;; This function uses a non-reentrant model
  7806 ;;
  7807                           
  7808                           
  7809                           ;psect for function _lcdSetCursor
  7810  1E6D                     _lcdSetCursor:	
  7811                           
  7812                           ;incstack = 0
  7813                           ; Regs used in _lcdSetCursor: [wreg+status,2+status,0+pclath+cstack]
  7814                           ;lcdSetCursor@y stored from wreg
  7815  1E6D  00FB               	movwf	lcdSetCursor@y
  7816                           
  7817                           ;./lcd.h: 57:     char temp, z, yy, row = 0x80;
  7818  1E6E  3080               	movlw	128
  7819  1E6F  00F5               	movwf	??_lcdSetCursor
  7820  1E70  0875               	movf	??_lcdSetCursor,w
  7821  1E71  00F9               	movwf	lcdSetCursor@row
  7822                           
  7823                           ;./lcd.h: 59:     if (y == 2)
  7824  1E72  3002               	movlw	2
  7825  1E73  067B               	xorwf	lcdSetCursor@y,w
  7826  1E74  1D03               	btfss	3,2
  7827  1E75  2E78               	goto	l3099
  7828                           
  7829                           ;./lcd.h: 60:         row += 64;
  7830  1E76  3040               	movlw	64
  7831  1E77  2E83               	goto	L9
  7832  1E78                     l3099:	
  7833  1E78  3003               	movlw	3
  7834  1E79  067B               	xorwf	lcdSetCursor@y,w
  7835  1E7A  1D03               	btfss	3,2
  7836  1E7B  2E7E               	goto	l3103
  7837                           
  7838                           ;./lcd.h: 62:         row +=16;
  7839  1E7C  3010               	movlw	16
  7840  1E7D  2E83               	goto	L9
  7841  1E7E                     l3103:	
  7842  1E7E  3004               	movlw	4
  7843  1E7F  067B               	xorwf	lcdSetCursor@y,w
  7844  1E80  1D03               	btfss	3,2
  7845  1E81  2E86               	goto	l53
  7846                           
  7847                           ;./lcd.h: 64:         row += 64+16;
  7848  1E82  3050               	movlw	80
  7849  1E83                     L9:	
  7850  1E83  00F5               	movwf	??_lcdSetCursor
  7851  1E84  0875               	movf	??_lcdSetCursor,w
  7852  1E85  07F9               	addwf	lcdSetCursor@row,f
  7853  1E86                     l53:	
  7854                           
  7855                           ;./lcd.h: 66:     temp = row + x - 1;
  7856  1E86  0874               	movf	lcdSetCursor@x,w
  7857  1E87  0779               	addwf	lcdSetCursor@row,w
  7858  1E88  3EFF               	addlw	255
  7859  1E89  00F5               	movwf	??_lcdSetCursor
  7860  1E8A  0875               	movf	??_lcdSetCursor,w
  7861  1E8B  00FA               	movwf	lcdSetCursor@temp
  7862                           
  7863                           ;./lcd.h: 67:     z = temp >> 4;
  7864  1E8C  087A               	movf	lcdSetCursor@temp,w
  7865  1E8D  00F5               	movwf	??_lcdSetCursor
  7866  1E8E  3004               	movlw	4
  7867  1E8F                     u5325:	
  7868  1E8F  1003               	clrc
  7869  1E90  0CF5               	rrf	??_lcdSetCursor,f
  7870  1E91  3EFF               	addlw	-1
  7871  1E92  1D03               	skipz
  7872  1E93  2E8F               	goto	u5325
  7873  1E94  0875               	movf	??_lcdSetCursor,w
  7874  1E95  00F6               	movwf	??_lcdSetCursor+1
  7875  1E96  0876               	movf	??_lcdSetCursor+1,w
  7876  1E97  00F7               	movwf	lcdSetCursor@z
  7877                           
  7878                           ;./lcd.h: 68:     yy = temp & 0x0F;
  7879  1E98  087A               	movf	lcdSetCursor@temp,w
  7880  1E99  390F               	andlw	15
  7881  1E9A  00F5               	movwf	??_lcdSetCursor
  7882  1E9B  0875               	movf	??_lcdSetCursor,w
  7883  1E9C  00F8               	movwf	lcdSetCursor@yy
  7884                           
  7885                           ;./lcd.h: 69:     lcdCmd(z);
  7886  1E9D  0877               	movf	lcdSetCursor@z,w
  7887  1E9E  160A  158A  2562  160A  158A  	fcall	_lcdCmd
  7888                           
  7889                           ;./lcd.h: 70:     lcdCmd(yy);
  7890  1EA3  0878               	movf	lcdSetCursor@yy,w
  7891  1EA4  160A  158A  2562   	fcall	_lcdCmd
  7892  1EA7  0008               	return
  7893  1EA8                     __end_of_lcdSetCursor:	
  7894                           
  7895                           	psect	text24
  7896  1EE4                     __ptext24:	
  7897 ;; *************** function _lcdPrint *****************
  7898 ;; Defined at:
  7899 ;;		line 108 in file "./lcd.h"
  7900 ;; Parameters:    Size  Location     Type
  7901 ;;  a               2    5[COMMON] PTR const unsigned char 
  7902 ;;		 -> main@mensaje(16), STR_3(12), STR_2(12), STR_1(12), 
  7903 ;; Auto vars:     Size  Location     Type
  7904 ;;  i               2   10[COMMON] int 
  7905 ;; Return value:  Size  Location     Type
  7906 ;;                  1    wreg      void 
  7907 ;; Registers used:
  7908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7909 ;; Tracked objects:
  7910 ;;		On entry : 0/0
  7911 ;;		On exit  : 0/0
  7912 ;;		Unchanged: 0/0
  7913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7914 ;;      Params:         2       0       0       0       0
  7915 ;;      Locals:         2       0       0       0       0
  7916 ;;      Temps:          3       0       0       0       0
  7917 ;;      Totals:         7       0       0       0       0
  7918 ;;Total ram usage:        7 bytes
  7919 ;; Hardware stack levels used:    1
  7920 ;; Hardware stack levels required when called:    2
  7921 ;; This function calls:
  7922 ;;		_lcdWriteChar
  7923 ;; This function is called by:
  7924 ;;		_main
  7925 ;; This function uses a non-reentrant model
  7926 ;;
  7927                           
  7928                           
  7929                           ;psect for function _lcdPrint
  7930  1EE4                     _lcdPrint:	
  7931                           
  7932                           ;./lcd.h: 109:     for (int i = 0; a[i] != '\0'; i++)
  7933                           
  7934                           ;incstack = 0
  7935                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7936  1EE4  01FA               	clrf	lcdPrint@i
  7937  1EE5  01FB               	clrf	lcdPrint@i+1
  7938  1EE6                     l3149:	
  7939  1EE6  087A               	movf	lcdPrint@i,w
  7940  1EE7  0775               	addwf	lcdPrint@a,w
  7941  1EE8  00F8               	movwf	??_lcdPrint+1
  7942  1EE9  0876               	movf	lcdPrint@a+1,w
  7943  1EEA  00F7               	movwf	??_lcdPrint
  7944  1EEB  1803               	skipnc
  7945  1EEC  0AF7               	incf	??_lcdPrint,f
  7946  1EED  1BFA               	btfsc	lcdPrint@i,7
  7947  1EEE  03F7               	decf	??_lcdPrint,f
  7948  1EEF  0877               	movf	??_lcdPrint,w
  7949  1EF0  00F9               	movwf	??_lcdPrint+2
  7950  1EF1  0879               	movf	??_lcdPrint+2,w
  7951  1EF2  1283               	bcf	3,5	;RP0=0, select bank0
  7952  1EF3  1303               	bcf	3,6	;RP1=0, select bank0
  7953  1EF4  00FF               	movwf	127
  7954  1EF5  0878               	movf	??_lcdPrint+1,w
  7955  1EF6  0084               	movwf	4
  7956  1EF7  160A  118A  2000  160A  158A  	fcall	stringtab
  7957  1EFC  3A00               	xorlw	0
  7958  1EFD  1903               	btfsc	3,2
  7959  1EFE  0008               	return
  7960                           
  7961                           ;./lcd.h: 110:         lcdWriteChar(a[i]);
  7962  1EFF  087A               	movf	lcdPrint@i,w
  7963  1F00  0775               	addwf	lcdPrint@a,w
  7964  1F01  00F8               	movwf	??_lcdPrint+1
  7965  1F02  0876               	movf	lcdPrint@a+1,w
  7966  1F03  00F7               	movwf	??_lcdPrint
  7967  1F04  1803               	skipnc
  7968  1F05  0AF7               	incf	??_lcdPrint,f
  7969  1F06  1BFA               	btfsc	lcdPrint@i,7
  7970  1F07  03F7               	decf	??_lcdPrint,f
  7971  1F08  0877               	movf	??_lcdPrint,w
  7972  1F09  00F9               	movwf	??_lcdPrint+2
  7973  1F0A  0879               	movf	??_lcdPrint+2,w
  7974  1F0B  1283               	bcf	3,5	;RP0=0, select bank0
  7975  1F0C  1303               	bcf	3,6	;RP1=0, select bank0
  7976  1F0D  00FF               	movwf	127
  7977  1F0E  0878               	movf	??_lcdPrint+1,w
  7978  1F0F  0084               	movwf	4
  7979  1F10  160A  118A  2000  160A  158A  	fcall	stringtab
  7980  1F15  160A  158A  2636  160A  158A  	fcall	_lcdWriteChar
  7981  1F1A  3001               	movlw	1
  7982  1F1B  07FA               	addwf	lcdPrint@i,f
  7983  1F1C  1803               	skipnc
  7984  1F1D  0AFB               	incf	lcdPrint@i+1,f
  7985  1F1E  3000               	movlw	0
  7986  1F1F  07FB               	addwf	lcdPrint@i+1,f
  7987  1F20  2EE6               	goto	l3149
  7988  1F21                     __end_of_lcdPrint:	
  7989                           
  7990                           	psect	text25
  7991  1E36                     __ptext25:	
  7992 ;; *************** function _lcdWriteChar *****************
  7993 ;; Defined at:
  7994 ;;		line 93 in file "./lcd.h"
  7995 ;; Parameters:    Size  Location     Type
  7996 ;;  a               1    wreg     const unsigned char 
  7997 ;; Auto vars:     Size  Location     Type
  7998 ;;  a               1    4[COMMON] const unsigned char 
  7999 ;;  y               1    3[COMMON] unsigned char 
  8000 ;;  temp            1    2[COMMON] unsigned char 
  8001 ;; Return value:  Size  Location     Type
  8002 ;;                  1    wreg      void 
  8003 ;; Registers used:
  8004 ;;		wreg, status,2, status,0, pclath, cstack
  8005 ;; Tracked objects:
  8006 ;;		On entry : 0/0
  8007 ;;		On exit  : 0/0
  8008 ;;		Unchanged: 0/0
  8009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8010 ;;      Params:         0       0       0       0       0
  8011 ;;      Locals:         3       0       0       0       0
  8012 ;;      Temps:          1       0       0       0       0
  8013 ;;      Totals:         4       0       0       0       0
  8014 ;;Total ram usage:        4 bytes
  8015 ;; Hardware stack levels used:    1
  8016 ;; Hardware stack levels required when called:    1
  8017 ;; This function calls:
  8018 ;;		_lcdPort
  8019 ;; This function is called by:
  8020 ;;		_lcdPrint
  8021 ;; This function uses a non-reentrant model
  8022 ;;
  8023                           
  8024                           
  8025                           ;psect for function _lcdWriteChar
  8026  1E36                     _lcdWriteChar:	
  8027                           
  8028                           ;incstack = 0
  8029                           ; Regs used in _lcdWriteChar: [wreg+status,2+status,0+pclath+cstack]
  8030                           ;lcdWriteChar@a stored from wreg
  8031  1E36  00F4               	movwf	lcdWriteChar@a
  8032                           
  8033                           ;./lcd.h: 94:     char temp, y;;./lcd.h: 95:     temp = a & 0x0F;
  8034  1E37  0874               	movf	lcdWriteChar@a,w
  8035  1E38  390F               	andlw	15
  8036  1E39  00F1               	movwf	??_lcdWriteChar
  8037  1E3A  0871               	movf	??_lcdWriteChar,w
  8038  1E3B  00F2               	movwf	lcdWriteChar@temp
  8039                           
  8040                           ;./lcd.h: 96:     y = a & 0xF0;
  8041  1E3C  0874               	movf	lcdWriteChar@a,w
  8042  1E3D  39F0               	andlw	240
  8043  1E3E  00F1               	movwf	??_lcdWriteChar
  8044  1E3F  0871               	movf	??_lcdWriteChar,w
  8045  1E40  00F3               	movwf	lcdWriteChar@y
  8046                           
  8047                           ;./lcd.h: 97:     RB2 = 1;
  8048  1E41  1283               	bcf	3,5	;RP0=0, select bank0
  8049  1E42  1303               	bcf	3,6	;RP1=0, select bank0
  8050  1E43  1506               	bsf	6,2	;volatile
  8051                           
  8052                           ;./lcd.h: 98:     lcdPort(y >> 4);
  8053  1E44  0873               	movf	lcdWriteChar@y,w
  8054  1E45  00F1               	movwf	??_lcdWriteChar
  8055  1E46  3004               	movlw	4
  8056  1E47                     u4235:	
  8057  1E47  1003               	clrc
  8058  1E48  0CF1               	rrf	??_lcdWriteChar,f
  8059  1E49  3EFF               	addlw	-1
  8060  1E4A  1D03               	skipz
  8061  1E4B  2E47               	goto	u4235
  8062  1E4C  0871               	movf	??_lcdWriteChar,w
  8063  1E4D  160A  158A  2548  160A  158A  	fcall	_lcdPort
  8064                           
  8065                           ;./lcd.h: 99:     RB3 = 1;
  8066  1E52  1283               	bcf	3,5	;RP0=0, select bank0
  8067  1E53  1303               	bcf	3,6	;RP1=0, select bank0
  8068  1E54  1586               	bsf	6,3	;volatile
  8069                           
  8070                           ;./lcd.h: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  8071  1E55  300D               	movlw	13
  8072  1E56  00F1               	movwf	??_lcdWriteChar
  8073  1E57                     u6047:	
  8074  1E57  0BF1               	decfsz	??_lcdWriteChar,f
  8075  1E58  2E57               	goto	u6047
  8076                           
  8077                           ;./lcd.h: 101:     RB3 = 0;
  8078  1E59  1283               	bcf	3,5	;RP0=0, select bank0
  8079  1E5A  1303               	bcf	3,6	;RP1=0, select bank0
  8080  1E5B  1186               	bcf	6,3	;volatile
  8081                           
  8082                           ;./lcd.h: 102:     lcdPort(temp);
  8083  1E5C  0872               	movf	lcdWriteChar@temp,w
  8084  1E5D  160A  158A  2548  160A  158A  	fcall	_lcdPort
  8085                           
  8086                           ;./lcd.h: 103:     RB3 = 1;
  8087  1E62  1283               	bcf	3,5	;RP0=0, select bank0
  8088  1E63  1303               	bcf	3,6	;RP1=0, select bank0
  8089  1E64  1586               	bsf	6,3	;volatile
  8090                           
  8091                           ;./lcd.h: 104:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  8092  1E65  300D               	movlw	13
  8093  1E66  00F1               	movwf	??_lcdWriteChar
  8094  1E67                     u6057:	
  8095  1E67  0BF1               	decfsz	??_lcdWriteChar,f
  8096  1E68  2E67               	goto	u6057
  8097                           
  8098                           ;./lcd.h: 105:     RB3 = 0;
  8099  1E69  1283               	bcf	3,5	;RP0=0, select bank0
  8100  1E6A  1303               	bcf	3,6	;RP1=0, select bank0
  8101  1E6B  1186               	bcf	6,3	;volatile
  8102  1E6C  0008               	return
  8103  1E6D                     __end_of_lcdWriteChar:	
  8104                           
  8105                           	psect	text26
  8106  117F                     __ptext26:	
  8107 ;; *************** function _lcdInit *****************
  8108 ;; Defined at:
  8109 ;;		line 73 in file "./lcd.h"
  8110 ;; Parameters:    Size  Location     Type
  8111 ;;		None
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;		None
  8114 ;; Return value:  Size  Location     Type
  8115 ;;                  1    wreg      void 
  8116 ;; Registers used:
  8117 ;;		wreg, status,2, status,0, pclath, cstack
  8118 ;; Tracked objects:
  8119 ;;		On entry : 0/0
  8120 ;;		On exit  : 0/0
  8121 ;;		Unchanged: 0/0
  8122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8123 ;;      Params:         0       0       0       0       0
  8124 ;;      Locals:         0       0       0       0       0
  8125 ;;      Temps:          2       0       0       0       0
  8126 ;;      Totals:         2       0       0       0       0
  8127 ;;Total ram usage:        2 bytes
  8128 ;; Hardware stack levels used:    1
  8129 ;; Hardware stack levels required when called:    2
  8130 ;; This function calls:
  8131 ;;		_lcdCmd
  8132 ;;		_lcdPort
  8133 ;; This function is called by:
  8134 ;;		_main
  8135 ;; This function uses a non-reentrant model
  8136 ;;
  8137                           
  8138                           
  8139                           ;psect for function _lcdInit
  8140  117F                     _lcdInit:	
  8141                           
  8142                           ;./lcd.h: 74:     TRISB = 0;
  8143                           
  8144                           ;incstack = 0
  8145                           ; Regs used in _lcdInit: [wreg+status,2+status,0+pclath+cstack]
  8146  117F  1683               	bsf	3,5	;RP0=1, select bank1
  8147  1180  1303               	bcf	3,6	;RP1=0, select bank1
  8148  1181  0186               	clrf	6	;volatile
  8149                           
  8150                           ;./lcd.h: 75:     PORTB = 0;
  8151  1182  1283               	bcf	3,5	;RP0=0, select bank0
  8152  1183  1303               	bcf	3,6	;RP1=0, select bank0
  8153  1184  0186               	clrf	6	;volatile
  8154                           
  8155                           ;./lcd.h: 76:     lcdPort(0x00);
  8156  1185  3000               	movlw	0
  8157  1186  160A  158A  2548  160A  118A  	fcall	_lcdPort
  8158                           
  8159                           ;./lcd.h: 77:     _delay((unsigned long)((20)*(4000000/4000.0)));
  8160  118B  301A               	movlw	26
  8161  118C  00F5               	movwf	??_lcdInit+1
  8162  118D  30F8               	movlw	248
  8163  118E  00F4               	movwf	??_lcdInit
  8164  118F                     u6067:	
  8165  118F  0BF4               	decfsz	??_lcdInit,f
  8166  1190  298F               	goto	u6067
  8167  1191  0BF5               	decfsz	??_lcdInit+1,f
  8168  1192  298F               	goto	u6067
  8169  1193  0000               	nop
  8170                           
  8171                           ;./lcd.h: 78:     lcdCmd(0x03);
  8172  1194  3003               	movlw	3
  8173  1195  160A  158A  2562  160A  118A  	fcall	_lcdCmd
  8174                           
  8175                           ;./lcd.h: 79:     _delay((unsigned long)((5)*(4000000/4000.0)));
  8176  119A  3007               	movlw	7
  8177  119B  00F5               	movwf	??_lcdInit+1
  8178  119C  307D               	movlw	125
  8179  119D  00F4               	movwf	??_lcdInit
  8180  119E                     u6077:	
  8181  119E  0BF4               	decfsz	??_lcdInit,f
  8182  119F  299E               	goto	u6077
  8183  11A0  0BF5               	decfsz	??_lcdInit+1,f
  8184  11A1  299E               	goto	u6077
  8185                           
  8186                           ;./lcd.h: 80:     lcdCmd(0x03);
  8187  11A2  3003               	movlw	3
  8188  11A3  160A  158A  2562  160A  118A  	fcall	_lcdCmd
  8189                           
  8190                           ;./lcd.h: 81:     _delay((unsigned long)((11)*(4000000/4000.0)));
  8191  11A8  300F               	movlw	15
  8192  11A9  00F5               	movwf	??_lcdInit+1
  8193  11AA  3047               	movlw	71
  8194  11AB  00F4               	movwf	??_lcdInit
  8195  11AC                     u6087:	
  8196  11AC  0BF4               	decfsz	??_lcdInit,f
  8197  11AD  29AC               	goto	u6087
  8198  11AE  0BF5               	decfsz	??_lcdInit+1,f
  8199  11AF  29AC               	goto	u6087
  8200  11B0  29B1               	nop2
  8201                           
  8202                           ;./lcd.h: 82:     lcdCmd(0x03);
  8203  11B1  3003               	movlw	3
  8204  11B2  160A  158A  2562  160A  118A  	fcall	_lcdCmd
  8205                           
  8206                           ;./lcd.h: 84:     lcdCmd(0x02);
  8207  11B7  3002               	movlw	2
  8208  11B8  160A  158A  2562  160A  118A  	fcall	_lcdCmd
  8209                           
  8210                           ;./lcd.h: 85:     lcdCmd(0x02);
  8211  11BD  3002               	movlw	2
  8212  11BE  160A  158A  2562  160A  118A  	fcall	_lcdCmd
  8213                           
  8214                           ;./lcd.h: 86:     lcdCmd(0x08);
  8215  11C3  3008               	movlw	8
  8216  11C4  160A  158A  2562  160A  118A  	fcall	_lcdCmd
  8217                           
  8218                           ;./lcd.h: 87:     lcdCmd(0x00);
  8219  11C9  3000               	movlw	0
  8220  11CA  160A  158A  2562  160A  118A  	fcall	_lcdCmd
  8221                           
  8222                           ;./lcd.h: 88:     lcdCmd(0x0C);
  8223  11CF  300C               	movlw	12
  8224  11D0  160A  158A  2562  160A  118A  	fcall	_lcdCmd
  8225                           
  8226                           ;./lcd.h: 89:     lcdCmd(0x00);
  8227  11D5  3000               	movlw	0
  8228  11D6  160A  158A  2562  160A  118A  	fcall	_lcdCmd
  8229                           
  8230                           ;./lcd.h: 90:     lcdCmd(0x06);
  8231  11DB  3006               	movlw	6
  8232  11DC  160A  158A  2562   	fcall	_lcdCmd
  8233  11DF  0008               	return
  8234  11E0                     __end_of_lcdInit:	
  8235                           
  8236                           	psect	text27
  8237  1D1F                     __ptext27:	
  8238 ;; *************** function _lcdClear *****************
  8239 ;; Defined at:
  8240 ;;		line 51 in file "./lcd.h"
  8241 ;; Parameters:    Size  Location     Type
  8242 ;;		None
  8243 ;; Auto vars:     Size  Location     Type
  8244 ;;		None
  8245 ;; Return value:  Size  Location     Type
  8246 ;;                  1    wreg      void 
  8247 ;; Registers used:
  8248 ;;		wreg, status,2, status,0, pclath, cstack
  8249 ;; Tracked objects:
  8250 ;;		On entry : 0/0
  8251 ;;		On exit  : 0/0
  8252 ;;		Unchanged: 0/0
  8253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8254 ;;      Params:         0       0       0       0       0
  8255 ;;      Locals:         0       0       0       0       0
  8256 ;;      Temps:          0       0       0       0       0
  8257 ;;      Totals:         0       0       0       0       0
  8258 ;;Total ram usage:        0 bytes
  8259 ;; Hardware stack levels used:    1
  8260 ;; Hardware stack levels required when called:    2
  8261 ;; This function calls:
  8262 ;;		_lcdCmd
  8263 ;; This function is called by:
  8264 ;;		_main
  8265 ;; This function uses a non-reentrant model
  8266 ;;
  8267                           
  8268                           
  8269                           ;psect for function _lcdClear
  8270  1D1F                     _lcdClear:	
  8271                           
  8272                           ;./lcd.h: 52:     lcdCmd(0);
  8273                           
  8274                           ;incstack = 0
  8275                           ; Regs used in _lcdClear: [wreg+status,2+status,0+pclath+cstack]
  8276  1D1F  3000               	movlw	0
  8277  1D20  160A  158A  2562  160A  158A  	fcall	_lcdCmd
  8278                           
  8279                           ;./lcd.h: 53:     lcdCmd(1);
  8280  1D25  3001               	movlw	1
  8281  1D26  160A  158A  2562   	fcall	_lcdCmd
  8282  1D29  0008               	return
  8283  1D2A                     __end_of_lcdClear:	
  8284                           
  8285                           	psect	text28
  8286  1D62                     __ptext28:	
  8287 ;; *************** function _lcdCmd *****************
  8288 ;; Defined at:
  8289 ;;		line 43 in file "./lcd.h"
  8290 ;; Parameters:    Size  Location     Type
  8291 ;;  a               1    wreg     unsigned char 
  8292 ;; Auto vars:     Size  Location     Type
  8293 ;;  a               1    3[COMMON] unsigned char 
  8294 ;; Return value:  Size  Location     Type
  8295 ;;                  1    wreg      void 
  8296 ;; Registers used:
  8297 ;;		wreg, status,2, status,0, pclath, cstack
  8298 ;; Tracked objects:
  8299 ;;		On entry : 0/0
  8300 ;;		On exit  : 0/0
  8301 ;;		Unchanged: 0/0
  8302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8303 ;;      Params:         0       0       0       0       0
  8304 ;;      Locals:         1       0       0       0       0
  8305 ;;      Temps:          2       0       0       0       0
  8306 ;;      Totals:         3       0       0       0       0
  8307 ;;Total ram usage:        3 bytes
  8308 ;; Hardware stack levels used:    1
  8309 ;; Hardware stack levels required when called:    1
  8310 ;; This function calls:
  8311 ;;		_lcdPort
  8312 ;; This function is called by:
  8313 ;;		_lcdClear
  8314 ;;		_lcdSetCursor
  8315 ;;		_lcdInit
  8316 ;; This function uses a non-reentrant model
  8317 ;;
  8318                           
  8319                           
  8320                           ;psect for function _lcdCmd
  8321  1D62                     _lcdCmd:	
  8322                           
  8323                           ;incstack = 0
  8324                           ; Regs used in _lcdCmd: [wreg+status,2+status,0+pclath+cstack]
  8325                           ;lcdCmd@a stored from wreg
  8326  1D62  00F3               	movwf	lcdCmd@a
  8327                           
  8328                           ;./lcd.h: 44:     RB2 = 0;
  8329  1D63  1283               	bcf	3,5	;RP0=0, select bank0
  8330  1D64  1303               	bcf	3,6	;RP1=0, select bank0
  8331  1D65  1106               	bcf	6,2	;volatile
  8332                           
  8333                           ;./lcd.h: 45:     lcdPort(a);
  8334  1D66  0873               	movf	lcdCmd@a,w
  8335  1D67  160A  158A  2548  160A  158A  	fcall	_lcdPort
  8336                           
  8337                           ;./lcd.h: 46:     RB3 = 1;
  8338  1D6C  1283               	bcf	3,5	;RP0=0, select bank0
  8339  1D6D  1303               	bcf	3,6	;RP1=0, select bank0
  8340  1D6E  1586               	bsf	6,3	;volatile
  8341                           
  8342                           ;./lcd.h: 47:     _delay((unsigned long)((4)*(4000000/4000.0)));
  8343  1D6F  3006               	movlw	6
  8344  1D70  00F2               	movwf	??_lcdCmd+1
  8345  1D71  3030               	movlw	48
  8346  1D72  00F1               	movwf	??_lcdCmd
  8347  1D73                     u6097:	
  8348  1D73  0BF1               	decfsz	??_lcdCmd,f
  8349  1D74  2D73               	goto	u6097
  8350  1D75  0BF2               	decfsz	??_lcdCmd+1,f
  8351  1D76  2D73               	goto	u6097
  8352  1D77  0000               	nop
  8353                           
  8354                           ;./lcd.h: 48:     RB3 = 0;
  8355  1D78  1283               	bcf	3,5	;RP0=0, select bank0
  8356  1D79  1303               	bcf	3,6	;RP1=0, select bank0
  8357  1D7A  1186               	bcf	6,3	;volatile
  8358  1D7B  0008               	return
  8359  1D7C                     __end_of_lcdCmd:	
  8360                           
  8361                           	psect	text29
  8362  1D48                     __ptext29:	
  8363 ;; *************** function _lcdPort *****************
  8364 ;; Defined at:
  8365 ;;		line 21 in file "./lcd.h"
  8366 ;; Parameters:    Size  Location     Type
  8367 ;;  a               1    wreg     unsigned char 
  8368 ;; Auto vars:     Size  Location     Type
  8369 ;;  a               1    0[COMMON] unsigned char 
  8370 ;; Return value:  Size  Location     Type
  8371 ;;                  1    wreg      void 
  8372 ;; Registers used:
  8373 ;;		wreg
  8374 ;; Tracked objects:
  8375 ;;		On entry : 0/0
  8376 ;;		On exit  : 0/0
  8377 ;;		Unchanged: 0/0
  8378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8379 ;;      Params:         0       0       0       0       0
  8380 ;;      Locals:         1       0       0       0       0
  8381 ;;      Temps:          0       0       0       0       0
  8382 ;;      Totals:         1       0       0       0       0
  8383 ;;Total ram usage:        1 bytes
  8384 ;; Hardware stack levels used:    1
  8385 ;; This function calls:
  8386 ;;		Nothing
  8387 ;; This function is called by:
  8388 ;;		_lcdCmd
  8389 ;;		_lcdInit
  8390 ;;		_lcdWriteChar
  8391 ;; This function uses a non-reentrant model
  8392 ;;
  8393                           
  8394                           
  8395                           ;psect for function _lcdPort
  8396  1D48                     _lcdPort:	
  8397                           
  8398                           ;incstack = 0
  8399                           ; Regs used in _lcdPort: [wreg]
  8400                           ;lcdPort@a stored from wreg
  8401  1D48  00F0               	movwf	lcdPort@a
  8402                           
  8403                           ;./lcd.h: 22:     if (a & 1)
  8404  1D49  1C70               	btfss	lcdPort@a,0
  8405  1D4A  2D4F               	goto	l35
  8406                           
  8407                           ;./lcd.h: 23:         RB4 = 1;
  8408  1D4B  1283               	bcf	3,5	;RP0=0, select bank0
  8409  1D4C  1303               	bcf	3,6	;RP1=0, select bank0
  8410  1D4D  1606               	bsf	6,4	;volatile
  8411  1D4E  2D52               	goto	l36
  8412  1D4F                     l35:	
  8413                           ;./lcd.h: 24:     else
  8414                           
  8415                           
  8416                           ;./lcd.h: 25:         RB4 = 0;
  8417  1D4F  1283               	bcf	3,5	;RP0=0, select bank0
  8418  1D50  1303               	bcf	3,6	;RP1=0, select bank0
  8419  1D51  1206               	bcf	6,4	;volatile
  8420  1D52                     l36:	
  8421                           
  8422                           ;./lcd.h: 27:     if (a & 2)
  8423  1D52  1CF0               	btfss	lcdPort@a,1
  8424  1D53  2D56               	goto	l37
  8425                           
  8426                           ;./lcd.h: 28:         RB5 = 1;
  8427  1D54  1686               	bsf	6,5	;volatile
  8428  1D55  2D57               	goto	l38
  8429  1D56                     l37:	
  8430                           ;./lcd.h: 29:     else
  8431                           
  8432                           
  8433                           ;./lcd.h: 30:         RB5 = 0;
  8434  1D56  1286               	bcf	6,5	;volatile
  8435  1D57                     l38:	
  8436                           
  8437                           ;./lcd.h: 32:     if (a & 4)
  8438  1D57  1D70               	btfss	lcdPort@a,2
  8439  1D58  2D5B               	goto	l39
  8440                           
  8441                           ;./lcd.h: 33:         RB6 = 1;
  8442  1D59  1706               	bsf	6,6	;volatile
  8443  1D5A  2D5C               	goto	l40
  8444  1D5B                     l39:	
  8445                           ;./lcd.h: 34:     else
  8446                           
  8447                           
  8448                           ;./lcd.h: 35:         RB6 = 0;
  8449  1D5B  1306               	bcf	6,6	;volatile
  8450  1D5C                     l40:	
  8451                           
  8452                           ;./lcd.h: 37:     if (a & 8)
  8453  1D5C  1DF0               	btfss	lcdPort@a,3
  8454  1D5D  2D60               	goto	l41
  8455                           
  8456                           ;./lcd.h: 38:         RB7 = 1;
  8457  1D5E  1786               	bsf	6,7	;volatile
  8458  1D5F  0008               	return
  8459  1D60                     l41:	
  8460                           ;./lcd.h: 39:     else
  8461                           
  8462                           
  8463                           ;./lcd.h: 40:         RB7 = 0;
  8464  1D60  1386               	bcf	6,7	;volatile
  8465  1D61  0008               	return
  8466  1D62                     __end_of_lcdPort:	
  8467                           
  8468                           	psect	text30
  8469  1D9D                     __ptext30:	
  8470 ;; *************** function _adcRead *****************
  8471 ;; Defined at:
  8472 ;;		line 35 in file "./adc.h"
  8473 ;; Parameters:    Size  Location     Type
  8474 ;;  adcChannel      2    0[COMMON] const int 
  8475 ;; Auto vars:     Size  Location     Type
  8476 ;;		None
  8477 ;; Return value:  Size  Location     Type
  8478 ;;                  2    0[COMMON] int 
  8479 ;; Registers used:
  8480 ;;		wreg, status,2, status,0
  8481 ;; Tracked objects:
  8482 ;;		On entry : 0/0
  8483 ;;		On exit  : 0/0
  8484 ;;		Unchanged: 0/0
  8485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8486 ;;      Params:         2       0       0       0       0
  8487 ;;      Locals:         0       0       0       0       0
  8488 ;;      Temps:          2       0       0       0       0
  8489 ;;      Totals:         4       0       0       0       0
  8490 ;;Total ram usage:        4 bytes
  8491 ;; Hardware stack levels used:    1
  8492 ;; This function calls:
  8493 ;;		Nothing
  8494 ;; This function is called by:
  8495 ;;		_main
  8496 ;; This function uses a non-reentrant model
  8497 ;;
  8498                           
  8499                           
  8500                           ;psect for function _adcRead
  8501  1D9D                     _adcRead:	
  8502                           
  8503                           ;./adc.h: 36:     ADCON0bits.ADON = 1;
  8504                           
  8505                           ;incstack = 0
  8506                           ; Regs used in _adcRead: [wreg+status,2+status,0]
  8507  1D9D  1283               	bcf	3,5	;RP0=0, select bank0
  8508  1D9E  1303               	bcf	3,6	;RP1=0, select bank0
  8509  1D9F  141F               	bsf	31,0	;volatile
  8510                           
  8511                           ;./adc.h: 37:     ADCON0bits.CHS = adcChannel;
  8512  1DA0  0870               	movf	adcRead@adcChannel,w
  8513  1DA1  00F2               	movwf	??_adcRead
  8514  1DA2  0DF2               	rlf	??_adcRead,f
  8515  1DA3  0DF2               	rlf	??_adcRead,f
  8516  1DA4  0DF2               	rlf	??_adcRead,f
  8517  1DA5  081F               	movf	31,w	;volatile
  8518  1DA6  0672               	xorwf	??_adcRead,w
  8519  1DA7  39C7               	andlw	-57
  8520  1DA8  0672               	xorwf	??_adcRead,w
  8521  1DA9  009F               	movwf	31	;volatile
  8522                           
  8523                           ;./adc.h: 38:     _delay((unsigned long)((10)*(4000000/4000.0)));
  8524  1DAA  300D               	movlw	13
  8525  1DAB  00F3               	movwf	??_adcRead+1
  8526  1DAC  30FB               	movlw	251
  8527  1DAD  00F2               	movwf	??_adcRead
  8528  1DAE                     u6107:	
  8529  1DAE  0BF2               	decfsz	??_adcRead,f
  8530  1DAF  2DAE               	goto	u6107
  8531  1DB0  0BF3               	decfsz	??_adcRead+1,f
  8532  1DB1  2DAE               	goto	u6107
  8533  1DB2  2DB3               	nop2
  8534                           
  8535                           ;./adc.h: 39:     ADCON0bits.GO = 1;
  8536  1DB3  1283               	bcf	3,5	;RP0=0, select bank0
  8537  1DB4  1303               	bcf	3,6	;RP1=0, select bank0
  8538  1DB5  151F               	bsf	31,2	;volatile
  8539  1DB6                     l75:	
  8540                           ;./adc.h: 40:     while (ADCON0bits.GO_DONE);
  8541                           
  8542  1DB6  191F               	btfsc	31,2	;volatile
  8543  1DB7  2DB6               	goto	l75
  8544                           
  8545                           ;./adc.h: 42:     return (ADRESH << 8) + (ADRESL);
  8546  1DB8  081E               	movf	30,w	;volatile
  8547  1DB9  00F1               	movwf	?_adcRead+1
  8548  1DBA  1683               	bsf	3,5	;RP0=1, select bank1
  8549  1DBB  1303               	bcf	3,6	;RP1=0, select bank1
  8550  1DBC  081E               	movf	30,w	;volatile
  8551  1DBD  00F0               	movwf	?_adcRead
  8552  1DBE  0008               	return
  8553  1DBF                     __end_of_adcRead:	
  8554                           
  8555                           	psect	text31
  8556  1D38                     __ptext31:	
  8557 ;; *************** function _adcInit *****************
  8558 ;; Defined at:
  8559 ;;		line 1 in file "./adc.h"
  8560 ;; Parameters:    Size  Location     Type
  8561 ;;		None
  8562 ;; Auto vars:     Size  Location     Type
  8563 ;;		None
  8564 ;; Return value:  Size  Location     Type
  8565 ;;                  1    wreg      void 
  8566 ;; Registers used:
  8567 ;;		wreg, status,2, status,0
  8568 ;; Tracked objects:
  8569 ;;		On entry : 0/0
  8570 ;;		On exit  : 0/0
  8571 ;;		Unchanged: 0/0
  8572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8573 ;;      Params:         0       0       0       0       0
  8574 ;;      Locals:         0       0       0       0       0
  8575 ;;      Temps:          0       0       0       0       0
  8576 ;;      Totals:         0       0       0       0       0
  8577 ;;Total ram usage:        0 bytes
  8578 ;; Hardware stack levels used:    1
  8579 ;; This function calls:
  8580 ;;		Nothing
  8581 ;; This function is called by:
  8582 ;;		_main
  8583 ;; This function uses a non-reentrant model
  8584 ;;
  8585                           
  8586                           
  8587                           ;psect for function _adcInit
  8588  1D38                     _adcInit:	
  8589                           
  8590                           ;./adc.h: 11:     ADCON0bits.ADCS = 0b01;
  8591                           
  8592                           ;incstack = 0
  8593                           ; Regs used in _adcInit: [wreg+status,2+status,0]
  8594  1D38  1283               	bcf	3,5	;RP0=0, select bank0
  8595  1D39  1303               	bcf	3,6	;RP1=0, select bank0
  8596  1D3A  081F               	movf	31,w	;volatile
  8597  1D3B  393F               	andlw	-193
  8598  1D3C  3840               	iorlw	64
  8599  1D3D  009F               	movwf	31	;volatile
  8600                           
  8601                           ;./adc.h: 12:     ADCON0bits.CHS = 0b000;
  8602  1D3E  30C7               	movlw	-57
  8603  1D3F  059F               	andwf	31,f	;volatile
  8604                           
  8605                           ;./adc.h: 13:     ADCON0bits.ADON = 0;
  8606  1D40  101F               	bcf	31,0	;volatile
  8607                           
  8608                           ;./adc.h: 24:     ADCON1bits.ADFM = 1;
  8609  1D41  1683               	bsf	3,5	;RP0=1, select bank1
  8610  1D42  1303               	bcf	3,6	;RP1=0, select bank1
  8611  1D43  179F               	bsf	31,7	;volatile
  8612                           
  8613                           ;./adc.h: 25:     ADCON1bits.ADCS2 = 1;
  8614  1D44  171F               	bsf	31,6	;volatile
  8615                           
  8616                           ;./adc.h: 26:     ADCON1bits.PCFG = 0b0000;
  8617  1D45  30F0               	movlw	-16
  8618  1D46  059F               	andwf	31,f	;volatile
  8619  1D47  0008               	return
  8620  1D48                     __end_of_adcInit:	
  8621                           
  8622                           	psect	text32
  8623  142E                     __ptext32:	
  8624 ;; *************** function ___fldiv *****************
  8625 ;; Defined at:
  8626 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  8627 ;; Parameters:    Size  Location     Type
  8628 ;;  a               4   32[BANK0 ] void 
  8629 ;;  b               4   36[BANK0 ] void 
  8630 ;; Auto vars:     Size  Location     Type
  8631 ;;  grs             4   52[BANK0 ] unsigned long 
  8632 ;;  rem             4   45[BANK0 ] unsigned long 
  8633 ;;  new_exp         2   50[BANK0 ] int 
  8634 ;;  aexp            1   57[BANK0 ] unsigned char 
  8635 ;;  bexp            1   56[BANK0 ] unsigned char 
  8636 ;;  sign            1   49[BANK0 ] unsigned char 
  8637 ;; Return value:  Size  Location     Type
  8638 ;;                  4   32[BANK0 ] unsigned char 
  8639 ;; Registers used:
  8640 ;;		wreg, status,2, status,0, btemp+1
  8641 ;; Tracked objects:
  8642 ;;		On entry : 0/0
  8643 ;;		On exit  : 0/0
  8644 ;;		Unchanged: 0/0
  8645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8646 ;;      Params:         0       8       0       0       0
  8647 ;;      Locals:         0      13       0       0       0
  8648 ;;      Temps:          0       5       0       0       0
  8649 ;;      Totals:         0      26       0       0       0
  8650 ;;Total ram usage:       26 bytes
  8651 ;; Hardware stack levels used:    1
  8652 ;; This function calls:
  8653 ;;		Nothing
  8654 ;; This function is called by:
  8655 ;;		_main
  8656 ;; This function uses a non-reentrant model
  8657 ;;
  8658                           
  8659                           
  8660                           ;psect for function ___fldiv
  8661  142E                     ___fldiv:	
  8662                           
  8663                           ;incstack = 0
  8664                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8665  142E  1283               	bcf	3,5	;RP0=0, select bank0
  8666  142F  1303               	bcf	3,6	;RP1=0, select bank0
  8667  1430  0847               	movf	___fldiv@b+3,w
  8668  1431  3980               	andlw	128
  8669  1432  00C8               	movwf	??___fldiv
  8670  1433  0848               	movf	??___fldiv,w
  8671  1434  00D1               	movwf	___fldiv@sign
  8672  1435  0847               	movf	___fldiv@b+3,w
  8673  1436  00C8               	movwf	??___fldiv
  8674  1437  0748               	addwf	??___fldiv,w
  8675  1438  00C9               	movwf	??___fldiv+1
  8676  1439  0849               	movf	??___fldiv+1,w
  8677  143A  00D8               	movwf	___fldiv@bexp
  8678  143B  1BC6               	btfsc	___fldiv@b+2,7
  8679  143C  1458               	bsf	___fldiv@bexp,0
  8680  143D  0858               	movf	___fldiv@bexp,w
  8681  143E  1903               	btfsc	3,2
  8682  143F  2C4E               	goto	l3393
  8683  1440  0A58               	incf	___fldiv@bexp,w
  8684  1441  1D03               	btfss	3,2
  8685  1442  2C4B               	goto	l3389
  8686  1443  3000               	movlw	0
  8687  1444  00C7               	movwf	___fldiv@b+3
  8688  1445  3000               	movlw	0
  8689  1446  00C6               	movwf	___fldiv@b+2
  8690  1447  3000               	movlw	0
  8691  1448  00C5               	movwf	___fldiv@b+1
  8692  1449  3000               	movlw	0
  8693  144A  00C4               	movwf	___fldiv@b
  8694  144B                     l3389:	
  8695  144B  17C6               	bsf	___fldiv@b+2,7
  8696  144C  01C7               	clrf	___fldiv@b+3
  8697  144D  2C56               	goto	l3395
  8698  144E                     l3393:	
  8699  144E  3000               	movlw	0
  8700  144F  00C7               	movwf	___fldiv@b+3
  8701  1450  3000               	movlw	0
  8702  1451  00C6               	movwf	___fldiv@b+2
  8703  1452  3000               	movlw	0
  8704  1453  00C5               	movwf	___fldiv@b+1
  8705  1454  3000               	movlw	0
  8706  1455  00C4               	movwf	___fldiv@b
  8707  1456                     l3395:	
  8708  1456  0843               	movf	___fldiv@a+3,w
  8709  1457  3980               	andlw	128
  8710  1458  00C8               	movwf	??___fldiv
  8711  1459  0848               	movf	??___fldiv,w
  8712  145A  06D1               	xorwf	___fldiv@sign,f
  8713  145B  0843               	movf	___fldiv@a+3,w
  8714  145C  00C8               	movwf	??___fldiv
  8715  145D  0748               	addwf	??___fldiv,w
  8716  145E  00C9               	movwf	??___fldiv+1
  8717  145F  0849               	movf	??___fldiv+1,w
  8718  1460  00D9               	movwf	___fldiv@aexp
  8719  1461  1BC2               	btfsc	___fldiv@a+2,7
  8720  1462  1459               	bsf	___fldiv@aexp,0
  8721  1463  0859               	movf	___fldiv@aexp,w
  8722  1464  1903               	btfsc	3,2
  8723  1465  2C74               	goto	l3413
  8724  1466  0A59               	incf	___fldiv@aexp,w
  8725  1467  1D03               	btfss	3,2
  8726  1468  2C71               	goto	l3409
  8727  1469  3000               	movlw	0
  8728  146A  00C3               	movwf	___fldiv@a+3
  8729  146B  3000               	movlw	0
  8730  146C  00C2               	movwf	___fldiv@a+2
  8731  146D  3000               	movlw	0
  8732  146E  00C1               	movwf	___fldiv@a+1
  8733  146F  3000               	movlw	0
  8734  1470  00C0               	movwf	___fldiv@a
  8735  1471                     l3409:	
  8736  1471  17C2               	bsf	___fldiv@a+2,7
  8737  1472  01C3               	clrf	___fldiv@a+3
  8738  1473  2C7C               	goto	l647
  8739  1474                     l3413:	
  8740  1474  3000               	movlw	0
  8741  1475  00C3               	movwf	___fldiv@a+3
  8742  1476  3000               	movlw	0
  8743  1477  00C2               	movwf	___fldiv@a+2
  8744  1478  3000               	movlw	0
  8745  1479  00C1               	movwf	___fldiv@a+1
  8746  147A  3000               	movlw	0
  8747  147B  00C0               	movwf	___fldiv@a
  8748  147C                     l647:	
  8749  147C  0843               	movf	___fldiv@a+3,w
  8750  147D  0442               	iorwf	___fldiv@a+2,w
  8751  147E  0441               	iorwf	___fldiv@a+1,w
  8752  147F  0440               	iorwf	___fldiv@a,w
  8753  1480  1D03               	skipz
  8754  1481  2C9B               	goto	l3423
  8755  1482  3000               	movlw	0
  8756  1483  00C7               	movwf	___fldiv@b+3
  8757  1484  3000               	movlw	0
  8758  1485  00C6               	movwf	___fldiv@b+2
  8759  1486  3000               	movlw	0
  8760  1487  00C5               	movwf	___fldiv@b+1
  8761  1488  3000               	movlw	0
  8762  1489  00C4               	movwf	___fldiv@b
  8763  148A  3080               	movlw	128
  8764  148B  04C6               	iorwf	___fldiv@b+2,f
  8765  148C  307F               	movlw	127
  8766  148D  04C7               	iorwf	___fldiv@b+3,f
  8767  148E                     L10:	
  8768  148E  0851               	movf	___fldiv@sign,w
  8769  148F  00C8               	movwf	??___fldiv
  8770  1490  0848               	movf	??___fldiv,w
  8771  1491  04C7               	iorwf	___fldiv@b+3,f
  8772  1492  0847               	movf	___fldiv@b+3,w
  8773  1493  00C3               	movwf	?___fldiv+3
  8774  1494  0846               	movf	___fldiv@b+2,w
  8775  1495  00C2               	movwf	?___fldiv+2
  8776  1496  0845               	movf	___fldiv@b+1,w
  8777  1497  00C1               	movwf	?___fldiv+1
  8778  1498  0844               	movf	___fldiv@b,w
  8779  1499  00C0               	movwf	?___fldiv
  8780  149A  0008               	return
  8781  149B                     l3423:	
  8782  149B  0858               	movf	___fldiv@bexp,w
  8783  149C  1D03               	btfss	3,2
  8784  149D  2CA7               	goto	l3429
  8785  149E  3000               	movlw	0
  8786  149F  00C3               	movwf	?___fldiv+3
  8787  14A0  3000               	movlw	0
  8788  14A1  00C2               	movwf	?___fldiv+2
  8789  14A2  3000               	movlw	0
  8790  14A3  00C1               	movwf	?___fldiv+1
  8791  14A4  3000               	movlw	0
  8792  14A5  00C0               	movwf	?___fldiv
  8793  14A6  0008               	return
  8794  14A7                     l3429:	
  8795  14A7  0858               	movf	___fldiv@bexp,w
  8796  14A8  00C8               	movwf	??___fldiv
  8797  14A9  01C9               	clrf	??___fldiv+1
  8798  14AA  0849               	movf	??___fldiv+1,w
  8799  14AB  00CB               	movwf	??___fldiv+3
  8800  14AC  0859               	movf	___fldiv@aexp,w
  8801  14AD  0248               	subwf	??___fldiv,w
  8802  14AE  00CA               	movwf	??___fldiv+2
  8803  14AF  1C03               	skipc
  8804  14B0  03CB               	decf	??___fldiv+3,f
  8805  14B1  084A               	movf	??___fldiv+2,w
  8806  14B2  3E7F               	addlw	127
  8807  14B3  00D2               	movwf	___fldiv@new_exp
  8808  14B4  084B               	movf	??___fldiv+3,w
  8809  14B5  1803               	skipnc
  8810  14B6  3E01               	addlw	1
  8811  14B7  3E00               	addlw	0
  8812  14B8  00D3               	movwf	___fldiv@new_exp+1
  8813  14B9  0847               	movf	___fldiv@b+3,w
  8814  14BA  00D0               	movwf	___fldiv@rem+3
  8815  14BB  0846               	movf	___fldiv@b+2,w
  8816  14BC  00CF               	movwf	___fldiv@rem+2
  8817  14BD  0845               	movf	___fldiv@b+1,w
  8818  14BE  00CE               	movwf	___fldiv@rem+1
  8819  14BF  0844               	movf	___fldiv@b,w
  8820  14C0  00CD               	movwf	___fldiv@rem
  8821  14C1  3000               	movlw	0
  8822  14C2  00C7               	movwf	___fldiv@b+3
  8823  14C3  3000               	movlw	0
  8824  14C4  00C6               	movwf	___fldiv@b+2
  8825  14C5  3000               	movlw	0
  8826  14C6  00C5               	movwf	___fldiv@b+1
  8827  14C7  3000               	movlw	0
  8828  14C8  00C4               	movwf	___fldiv@b
  8829  14C9  3000               	movlw	0
  8830  14CA  00D7               	movwf	___fldiv@grs+3
  8831  14CB  3000               	movlw	0
  8832  14CC  00D6               	movwf	___fldiv@grs+2
  8833  14CD  3000               	movlw	0
  8834  14CE  00D5               	movwf	___fldiv@grs+1
  8835  14CF  3000               	movlw	0
  8836  14D0  00D4               	movwf	___fldiv@grs
  8837  14D1  01D9               	clrf	___fldiv@aexp
  8838  14D2                     l3457:	
  8839  14D2  301A               	movlw	26
  8840  14D3  0259               	subwf	___fldiv@aexp,w
  8841  14D4  1803               	btfsc	3,0
  8842  14D5  2D1A               	goto	l3459
  8843  14D6  0859               	movf	___fldiv@aexp,w
  8844  14D7  1903               	btfsc	3,2
  8845  14D8  2CF6               	goto	l3449
  8846  14D9  3001               	movlw	1
  8847  14DA  00C8               	movwf	??___fldiv
  8848  14DB                     u5815:	
  8849  14DB  1003               	clrc
  8850  14DC  0DCD               	rlf	___fldiv@rem,f
  8851  14DD  0DCE               	rlf	___fldiv@rem+1,f
  8852  14DE  0DCF               	rlf	___fldiv@rem+2,f
  8853  14DF  0DD0               	rlf	___fldiv@rem+3,f
  8854  14E0  0BC8               	decfsz	??___fldiv,f
  8855  14E1  2CDB               	goto	u5815
  8856  14E2  3001               	movlw	1
  8857  14E3  00C8               	movwf	??___fldiv
  8858  14E4                     u5825:	
  8859  14E4  1003               	clrc
  8860  14E5  0DC4               	rlf	___fldiv@b,f
  8861  14E6  0DC5               	rlf	___fldiv@b+1,f
  8862  14E7  0DC6               	rlf	___fldiv@b+2,f
  8863  14E8  0DC7               	rlf	___fldiv@b+3,f
  8864  14E9  0BC8               	decfsz	??___fldiv,f
  8865  14EA  2CE4               	goto	u5825
  8866  14EB  1BD7               	btfsc	___fldiv@grs+3,7
  8867  14EC  1444               	bsf	___fldiv@b,0
  8868  14ED  3001               	movlw	1
  8869  14EE  00C8               	movwf	??___fldiv
  8870  14EF                     u5845:	
  8871  14EF  1003               	clrc
  8872  14F0  0DD4               	rlf	___fldiv@grs,f
  8873  14F1  0DD5               	rlf	___fldiv@grs+1,f
  8874  14F2  0DD6               	rlf	___fldiv@grs+2,f
  8875  14F3  0DD7               	rlf	___fldiv@grs+3,f
  8876  14F4  0BC8               	decfsz	??___fldiv,f
  8877  14F5  2CEF               	goto	u5845
  8878  14F6                     l3449:	
  8879  14F6  0843               	movf	___fldiv@a+3,w
  8880  14F7  0250               	subwf	___fldiv@rem+3,w
  8881  14F8  1D03               	skipz
  8882  14F9  2D04               	goto	u5855
  8883  14FA  0842               	movf	___fldiv@a+2,w
  8884  14FB  024F               	subwf	___fldiv@rem+2,w
  8885  14FC  1D03               	skipz
  8886  14FD  2D04               	goto	u5855
  8887  14FE  0841               	movf	___fldiv@a+1,w
  8888  14FF  024E               	subwf	___fldiv@rem+1,w
  8889  1500  1D03               	skipz
  8890  1501  2D04               	goto	u5855
  8891  1502  0840               	movf	___fldiv@a,w
  8892  1503  024D               	subwf	___fldiv@rem,w
  8893  1504                     u5855:	
  8894  1504  1C03               	skipc
  8895  1505  2D15               	goto	l3455
  8896  1506  1757               	bsf	___fldiv@grs+3,6
  8897  1507  0840               	movf	___fldiv@a,w
  8898  1508  02CD               	subwf	___fldiv@rem,f
  8899  1509  0841               	movf	___fldiv@a+1,w
  8900  150A  1C03               	skipc
  8901  150B  0F41               	incfsz	___fldiv@a+1,w
  8902  150C  02CE               	subwf	___fldiv@rem+1,f
  8903  150D  0842               	movf	___fldiv@a+2,w
  8904  150E  1C03               	skipc
  8905  150F  0F42               	incfsz	___fldiv@a+2,w
  8906  1510  02CF               	subwf	___fldiv@rem+2,f
  8907  1511  0843               	movf	___fldiv@a+3,w
  8908  1512  1C03               	skipc
  8909  1513  0F43               	incfsz	___fldiv@a+3,w
  8910  1514  02D0               	subwf	___fldiv@rem+3,f
  8911  1515                     l3455:	
  8912  1515  3001               	movlw	1
  8913  1516  00C8               	movwf	??___fldiv
  8914  1517  0848               	movf	??___fldiv,w
  8915  1518  07D9               	addwf	___fldiv@aexp,f
  8916  1519  2CD2               	goto	l3457
  8917  151A                     l3459:	
  8918  151A  0850               	movf	___fldiv@rem+3,w
  8919  151B  044F               	iorwf	___fldiv@rem+2,w
  8920  151C  044E               	iorwf	___fldiv@rem+1,w
  8921  151D  044D               	iorwf	___fldiv@rem,w
  8922  151E  1D03               	btfss	3,2
  8923  151F  1454               	bsf	___fldiv@grs,0
  8924  1520                     l3473:	
  8925  1520  1BC6               	btfsc	___fldiv@b+2,7
  8926  1521  2D3D               	goto	l3475
  8927  1522  3001               	movlw	1
  8928  1523  00C8               	movwf	??___fldiv
  8929  1524                     u5885:	
  8930  1524  1003               	clrc
  8931  1525  0DC4               	rlf	___fldiv@b,f
  8932  1526  0DC5               	rlf	___fldiv@b+1,f
  8933  1527  0DC6               	rlf	___fldiv@b+2,f
  8934  1528  0DC7               	rlf	___fldiv@b+3,f
  8935  1529  0BC8               	decfsz	??___fldiv,f
  8936  152A  2D24               	goto	u5885
  8937  152B  1BD7               	btfsc	___fldiv@grs+3,7
  8938  152C  1444               	bsf	___fldiv@b,0
  8939  152D  3001               	movlw	1
  8940  152E  00C8               	movwf	??___fldiv
  8941  152F                     u5905:	
  8942  152F  1003               	clrc
  8943  1530  0DD4               	rlf	___fldiv@grs,f
  8944  1531  0DD5               	rlf	___fldiv@grs+1,f
  8945  1532  0DD6               	rlf	___fldiv@grs+2,f
  8946  1533  0DD7               	rlf	___fldiv@grs+3,f
  8947  1534  0BC8               	decfsz	??___fldiv,f
  8948  1535  2D2F               	goto	u5905
  8949  1536  30FF               	movlw	255
  8950  1537  07D2               	addwf	___fldiv@new_exp,f
  8951  1538  1803               	skipnc
  8952  1539  0AD3               	incf	___fldiv@new_exp+1,f
  8953  153A  30FF               	movlw	255
  8954  153B  07D3               	addwf	___fldiv@new_exp+1,f
  8955  153C  2D20               	goto	l3473
  8956  153D                     l3475:	
  8957  153D  01D9               	clrf	___fldiv@aexp
  8958  153E  1FD7               	btfss	___fldiv@grs+3,7
  8959  153F  2D56               	goto	l3485
  8960  1540  30FF               	movlw	255
  8961  1541  0554               	andwf	___fldiv@grs,w
  8962  1542  00C8               	movwf	??___fldiv
  8963  1543  30FF               	movlw	255
  8964  1544  0555               	andwf	___fldiv@grs+1,w
  8965  1545  00C9               	movwf	??___fldiv+1
  8966  1546  30FF               	movlw	255
  8967  1547  0556               	andwf	___fldiv@grs+2,w
  8968  1548  00CA               	movwf	??___fldiv+2
  8969  1549  307F               	movlw	127
  8970  154A  0557               	andwf	___fldiv@grs+3,w
  8971  154B  00CB               	movwf	??___fldiv+3
  8972  154C  084B               	movf	??___fldiv+3,w
  8973  154D  044A               	iorwf	??___fldiv+2,w
  8974  154E  0449               	iorwf	??___fldiv+1,w
  8975  154F  0448               	iorwf	??___fldiv,w
  8976  1550  1903               	skipnz
  8977  1551  1844               	btfsc	___fldiv@b,0
  8978  1552  2D54               	goto	l3481
  8979  1553  2D56               	goto	l3485
  8980  1554                     l3481:	
  8981  1554  01D9               	clrf	___fldiv@aexp
  8982  1555  0AD9               	incf	___fldiv@aexp,f
  8983  1556                     l3485:	
  8984  1556  0859               	movf	___fldiv@aexp,w
  8985  1557  1903               	btfsc	3,2
  8986  1558  2D88               	goto	l3495
  8987  1559  3001               	movlw	1
  8988  155A  07C4               	addwf	___fldiv@b,f
  8989  155B  3000               	movlw	0
  8990  155C  1803               	skipnc
  8991  155D  3001               	movlw	1
  8992  155E  07C5               	addwf	___fldiv@b+1,f
  8993  155F  3000               	movlw	0
  8994  1560  1803               	skipnc
  8995  1561  3001               	movlw	1
  8996  1562  07C6               	addwf	___fldiv@b+2,f
  8997  1563  3000               	movlw	0
  8998  1564  1803               	skipnc
  8999  1565  3001               	movlw	1
  9000  1566  07C7               	addwf	___fldiv@b+3,f
  9001  1567  1C47               	btfss	___fldiv@b+3,0
  9002  1568  2D88               	goto	l3495
  9003  1569  0844               	movf	___fldiv@b,w
  9004  156A  00C8               	movwf	??___fldiv
  9005  156B  0845               	movf	___fldiv@b+1,w
  9006  156C  00C9               	movwf	??___fldiv+1
  9007  156D  0846               	movf	___fldiv@b+2,w
  9008  156E  00CA               	movwf	??___fldiv+2
  9009  156F  0847               	movf	___fldiv@b+3,w
  9010  1570  00CB               	movwf	??___fldiv+3
  9011  1571  3001               	movlw	1
  9012  1572  00CC               	movwf	??___fldiv+4
  9013  1573                     u5975:	
  9014  1573  0D4B               	rlf	??___fldiv+3,w
  9015  1574  0CCB               	rrf	??___fldiv+3,f
  9016  1575  0CCA               	rrf	??___fldiv+2,f
  9017  1576  0CC9               	rrf	??___fldiv+1,f
  9018  1577  0CC8               	rrf	??___fldiv,f
  9019  1578  0BCC               	decfsz	??___fldiv+4,f
  9020  1579  2D73               	goto	u5975
  9021  157A  084B               	movf	??___fldiv+3,w
  9022  157B  00C7               	movwf	___fldiv@b+3
  9023  157C  084A               	movf	??___fldiv+2,w
  9024  157D  00C6               	movwf	___fldiv@b+2
  9025  157E  0849               	movf	??___fldiv+1,w
  9026  157F  00C5               	movwf	___fldiv@b+1
  9027  1580  0848               	movf	??___fldiv,w
  9028  1581  00C4               	movwf	___fldiv@b
  9029  1582  3001               	movlw	1
  9030  1583  07D2               	addwf	___fldiv@new_exp,f
  9031  1584  1803               	skipnc
  9032  1585  0AD3               	incf	___fldiv@new_exp+1,f
  9033  1586  3000               	movlw	0
  9034  1587  07D3               	addwf	___fldiv@new_exp+1,f
  9035  1588                     l3495:	
  9036  1588  0853               	movf	___fldiv@new_exp+1,w
  9037  1589  3A80               	xorlw	128
  9038  158A  00FF               	movwf	127
  9039  158B  3080               	movlw	128
  9040  158C  027F               	subwf	127,w
  9041  158D  1D03               	skipz
  9042  158E  2D91               	goto	u5985
  9043  158F  30FF               	movlw	255
  9044  1590  0252               	subwf	___fldiv@new_exp,w
  9045  1591                     u5985:	
  9046  1591  1C03               	skipc
  9047  1592  2DA1               	goto	l3499
  9048  1593  30FF               	movlw	255
  9049  1594  1283               	bcf	3,5	;RP0=0, select bank0
  9050  1595  1303               	bcf	3,6	;RP1=0, select bank0
  9051  1596  00D2               	movwf	___fldiv@new_exp
  9052  1597  3000               	movlw	0
  9053  1598  00D3               	movwf	___fldiv@new_exp+1
  9054  1599  3000               	movlw	0
  9055  159A  00C7               	movwf	___fldiv@b+3
  9056  159B  3000               	movlw	0
  9057  159C  00C6               	movwf	___fldiv@b+2
  9058  159D  3000               	movlw	0
  9059  159E  00C5               	movwf	___fldiv@b+1
  9060  159F  3000               	movlw	0
  9061  15A0  00C4               	movwf	___fldiv@b
  9062  15A1                     l3499:	
  9063  15A1  1283               	bcf	3,5	;RP0=0, select bank0
  9064  15A2  1303               	bcf	3,6	;RP1=0, select bank0
  9065  15A3  0853               	movf	___fldiv@new_exp+1,w
  9066  15A4  3A80               	xorlw	128
  9067  15A5  00FF               	movwf	127
  9068  15A6  3080               	movlw	128
  9069  15A7  027F               	subwf	127,w
  9070  15A8  1D03               	skipz
  9071  15A9  2DAC               	goto	u5995
  9072  15AA  3001               	movlw	1
  9073  15AB  0252               	subwf	___fldiv@new_exp,w
  9074  15AC                     u5995:	
  9075  15AC  1803               	skipnc
  9076  15AD  2DBB               	goto	l669
  9077  15AE  1283               	bcf	3,5	;RP0=0, select bank0
  9078  15AF  1303               	bcf	3,6	;RP1=0, select bank0
  9079  15B0  01D2               	clrf	___fldiv@new_exp
  9080  15B1  01D3               	clrf	___fldiv@new_exp+1
  9081  15B2  3000               	movlw	0
  9082  15B3  00C7               	movwf	___fldiv@b+3
  9083  15B4  3000               	movlw	0
  9084  15B5  00C6               	movwf	___fldiv@b+2
  9085  15B6  3000               	movlw	0
  9086  15B7  00C5               	movwf	___fldiv@b+1
  9087  15B8  3000               	movlw	0
  9088  15B9  00C4               	movwf	___fldiv@b
  9089  15BA  01D1               	clrf	___fldiv@sign
  9090  15BB                     l669:	
  9091  15BB  1283               	bcf	3,5	;RP0=0, select bank0
  9092  15BC  1303               	bcf	3,6	;RP1=0, select bank0
  9093  15BD  0852               	movf	___fldiv@new_exp,w
  9094  15BE  00C8               	movwf	??___fldiv
  9095  15BF  0848               	movf	??___fldiv,w
  9096  15C0  00D8               	movwf	___fldiv@bexp
  9097  15C1  1C58               	btfss	___fldiv@bexp,0
  9098  15C2  2DC5               	goto	l3511
  9099  15C3  17C6               	bsf	___fldiv@b+2,7
  9100  15C4  2DC9               	goto	l671
  9101  15C5                     l3511:	
  9102  15C5  307F               	movlw	127
  9103  15C6  00C8               	movwf	??___fldiv
  9104  15C7  0848               	movf	??___fldiv,w
  9105  15C8  05C6               	andwf	___fldiv@b+2,f
  9106  15C9                     l671:	
  9107  15C9  0858               	movf	___fldiv@bexp,w
  9108  15CA  00C8               	movwf	??___fldiv
  9109  15CB  1003               	clrc
  9110  15CC  0C48               	rrf	??___fldiv,w
  9111  15CD  00C9               	movwf	??___fldiv+1
  9112  15CE  0849               	movf	??___fldiv+1,w
  9113  15CF  00C7               	movwf	___fldiv@b+3
  9114  15D0  2C8E               	goto	L10
  9115  15D1                     __end_of___fldiv:	
  9116  007E                     btemp	set	126	;btemp
  9117  007E                     wtemp0	set	126


Data Sizes:
    Strings     31
    Constant    144
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     58      58
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_4(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@mensaje(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    lcdPrint@a	PTR const unsigned char  size(2) Largest target is 16
		 -> main@mensaje(BANK1[16]), STR_3(CODE[12]), STR_2(CODE[12]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___xxtofl->_adcRead
    _lcdSetCursor->_lcdCmd
    _lcdPrint->_lcdWriteChar
    _lcdWriteChar->_lcdPort
    _lcdInit->_lcdCmd
    _lcdClear->_lcdCmd
    _lcdCmd->_lcdPort

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___xxtofl
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0   38929
                                             35 BANK1     23    23      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _adcInit
                            _adcRead
                           _lcdClear
                            _lcdInit
                           _lcdPrint
                       _lcdSetCursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   30953
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             32 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             32 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              6 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              4 COMMON     8     4      4
                                              0 BANK0      6     6      0
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             51 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             72 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             52 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _lcdSetCursor                                         8     7      1     619
                                              4 COMMON     8     7      1
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             7     5      2     572
                                              5 COMMON     7     5      2
                       _lcdWriteChar
 ---------------------------------------------------------------------------------
 (2) _lcdWriteChar                                         4     4      0     178
                                              1 COMMON     4     4      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              2     2      0     198
                                              4 COMMON     2     2      0
                             _lcdCmd
                            _lcdPort
 ---------------------------------------------------------------------------------
 (1) _lcdClear                                             0     0      0     110
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (2) _lcdCmd                                               3     3      0     110
                                              1 COMMON     3     3      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (3) _lcdPort                                              1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adcRead                                              4     2      2      98
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
       _adcRead (ARG)
     ___xxtofl (ARG)
       _adcRead (ARG)
     _adcRead (ARG)
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
       _adcRead (ARG)
     _adcRead (ARG)
   ___xxtofl
     _adcRead (ARG)
   _adcInit
   _adcRead
   _lcdClear
     _lcdCmd
       _lcdPort
   _lcdInit
     _lcdCmd
       _lcdPort
     _lcdPort
   _lcdPrint
     _lcdWriteChar
       _lcdPort
   _lcdSetCursor
     _lcdCmd
       _lcdPort
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _adcRead (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
       _adcRead (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _adcRead (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _adcRead (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _adcRead (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
       _adcRead (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _adcRead (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _adcRead (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     3A      3A       7       72.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Apr 26 15:50:27 2019

           ___fldiv@aexp 0059             ___fldiv@bexp 0058                        pc 0002  
           ___fldiv@sign 0051              __CFG_CP$OFF 0000                       l40 1D5C  
                     l41 1D60                       l35 1D4F                       l36 1D52  
                     l37 1D56                       l53 1E86                       l38 1D57  
                     l39 1D5B                       l75 1DB6             ___awdiv@sign 0021  
                     fsr 0004      ___wmul@multiplicand 0072      __Umul8_16@word_mpld 0076  
                    l213 0273                      l254 07C9                      l239 05D7  
                    l264 1D86                      l450 1F3B                      l451 1F55  
                    l612 1775                      l445 0894                      l455 1267  
                    l633 17F5                      l625 17DD                      l458 12CD  
                    l474 122F                      l731 133F                      l492 1416  
                    l725 12FF                      l671 15C9                      l647 147C  
                    l591 1623                      l753 1DF3                      l738 1355  
                    l595 16BC                      l739 135F                      l669 15BB  
                    l597 169A                      l699 0CAA                      _RB2 0032  
                    _RB3 0033                      _RB4 0034                      _RB5 0035  
                    _RB6 0036                      _RB7 0037             __CFG_CPD$OFF 0000  
                    fsr0 0004                      indf 0000             ___awmod@sign 0076  
           __CFG_FOSC$XT 0000             ___flmul@aexp 0038             ___flmul@bexp 0039  
            _sprintf$874 00AA             ___flmul@sign 0033             ___flmul@temp 003E  
           ___flmul@prod 003A           ??_lcdWriteChar 0071            lcdWriteChar@a 0074  
          lcdWriteChar@y 0073             __CFG_LVP$OFF 0000             ___fltol@exp1 005D  
                   l3103 1E7E                     l3007 121B                     l2303 1F80  
                   l3017 123E                     l3009 122B                     l3033 1FEA  
                   l2305 1F8E                     l2313 1FA7                     l3201 0275  
                   l2411 161B                     l3027 1FBC                     l2219 1DEB  
                   l2331 1EB0                     l3203 0291                     l2501 1767  
                   l3029 1FCC                     l3037 1FF7                     l3053 12F7  
                   l2333 1EBE                     l2253 10DD                     l2317 1FAF  
                   l2309 1F9C                     l2407 1618                     l3063 1312  
                   l2343 1EDF                     l2271 1109                     l2263 10E5  
                   l2247 10D2                     l3303 0639                     l2417 162D  
                   l3073 1353                     l3065 1324                     l2361 1E26  
                   l2265 10F3                     l3209 02A1                     l2531 17A8  
                   l2523 179D                     l3075 1344                     l3059 130E  
                   l2339 1ED4                     l2355 1E0A                     l2275 1114  
                   l2291 1F73                     l3323 0685                     l3315 0668  
                   l3251 043F                     l3243 03CA                     l3235 0341  
                   l3219 02E7                     l3413 1474                     l3149 1EE6  
                   l2517 1796                     l2509 1787                     l2525 179F  
                   l2357 1E18                     l2365 1E31                     l3309 064C  
                   l3511 15C5                     l3423 149B                     l2535 17AA  
                   l2455 16A5                     l2447 1669                     l2383 15EE  
                   l3087 137C                     l2607 09FC                     l2279 111C  
                   l2295 1F7A                     l3343 07B4                     l3263 04B2  
                   l3247 03EB                     l3409 1471                     l2553 17ED  
                   l2481 16EB                     l2473 16CA                     l2457 16A7  
                   l2465 16B6                     l3337 07A3                     l3273 0500  
                   l3345 07B9                     l3193 0235                     l3099 1E78  
                   l2483 16ED                     l2491 16FD                     l2387 15F1  
                   l3291 05C2                     l3259 0497                     l3195 026F  
                   l3179 0222                     l3363 020C                     l3429 14A7  
                   l2557 17F1                     l2389 15F9                     l2805 1396  
                   l2661 0C19                     l2581 09C9                     l2741 0116  
                   l3357 07DF                     l3285 0586                     l3365 07F7  
                   l3541 0902                     l3455 1515                     l2903 08A3  
                   l2831 13EF                     l2823 13CF                     l2671 0C32  
                   l3279 0584                     l3481 1554                     l3473 1520  
                   l3449 14F6                     l3457 14D2                     l3393 144E  
                   l2841 1402                     l2809 139F                     l2681 0C64  
                   l2577 09BF                     l3475 153D                     l3459 151A  
                   l3395 1456                     l2851 1425                     l2843 1412  
                   l2691 0C93                     l2667 0C30                     l2659 0BFC  
                   l2595 09E4                     l2579 09C1                     l2747 01C3  
                   l2763 0DA9                     l3485 1556                     l3389 144B  
                   l2941 1176                     l2909 1D7E                     l2861 0816  
                   l2685 0C7A                     l2597 09E6                     l2781 0F4A  
                   l2773 0E5F                     l3495 1588                     l2927 1131  
                   l2599 09EE                     l2953 1F67                     l2937 1169  
                   l2929 1141                     l2857 080D                     l2769 0E34  
                   l3585 0289                     l3499 15A1                     l2963 1281  
                   l2883 086C                     l2875 0844                     l2787 0FD5  
                   l2893 0880                     l2967 12A7                     l2991 11F4  
                   l2895 0890                     l2799 1D36                     l2987 11EB  
                   STR_1 10A0                     STR_2 10AC                     STR_3 10AC  
                   STR_4 10B8                     u3025 1DF4                     u3115 10E8  
                   u4015 0B09                     u3135 10F4                     u3215 1F83  
                   u4105 0C00                     u3305 1EBF                     u3145 1100  
                   u3315 1ECB                     u3155 110A                     u3235 1F94  
                   u3500 1689                     u5005 11FD                     u4205 0C6D  
                   u4125 0C0B                     u3325 1ED5                     u3245 1F9D  
                   u3510 168A                     u4215 0C85                     u4055 0BA5  
                   u5105 1FC0                     u4305 0184                     u4235 1E47  
                   u5035 121C                     u4075 0BCA                     u3355 1E0D  
                   u4315 01CE                     u5125 1FDA                     u5205 1337  
                   u3285 1EB3                     u4405 0E37                     u5135 1FEB  
                   u4095 0BE8                     u3375 1E1E                     u4255 0028  
                   u3641 1728                     u3633 170F                     u3625 16F1  
                   u3545 16AB                     u5065 1234                     u5225 134C  
                   u3385 1E27                     u4265 0082                     u4425 0E84  
                   u4345 0CE3                     u6017 08BE                     u3650 173C  
                   u3642 1729                     u6107 1DAE                     u3651 173D  
                   u3643 172E                     u4195 0C4F                     u4275 00D7  
                   u4435 0EC0                     u4355 0D1F                     u6027 08F6  
                   u3652 1742                     u3644 172F                     u5325 1E8F  
                   u3653 1743                     u3645 1734                     u4445 0F0B  
                   u4365 0D6A                     u6037 099D                     u3646 1735  
                   u6047 1E57                     u3495 167D                     u4535 13D1  
                   u4295 0137                     u6057 1E67                     u5265 1367  
                   u5185 131B                     u4625 141B                     u4545 13E2  
                   u4465 0F62                     u4385 0DC1                     u6067 118F  
                   u4555 13F0                     u4475 0F9E                     u4395 0DFD  
                   u5515 0495                     u6077 119E                     u4725 0881  
                   u4485 0FD8                     u5605 0662                     u6087 11AC  
                   u3695 1789                     u5535 0589                     u6097 1D73  
                   u4905 1F63                     u4825 1135                     u4665 0846  
                   u5625 0705                     u5545 05B8                     u3795 17C7  
                   u4755 0899                     u4675 085B                     u4595 1403  
                   u5635 076B                     u5475 03F6                     u4941 1292  
                   u4845 1143                     u4685 086E                     u5485 044A  
                   u4942 1293                     u5815 14DB                     u4943 1298  
                   u4855 1158                     u5575 05DF                     u4944 1299  
                   u5905 152F                     u5825 14E4                     u4961 12B8  
                   u4945 129E                     u4865 116A                     u4785 1D87  
                   u3985 0AAC                     u4962 12B9                     u4946 129F  
                   u4963 12BE                     u4795 1D8E                     u5595 0655  
                   u4964 12BF                     u5845 14EF                     u4965 12C4  
                   u5685 07D0                     u4966 12C5                     u5855 1504  
                   u5695 07DD                     u5885 1524                     u5975 1573  
                   u5985 1591                     u5995 15AC              main@mensaje 00C6  
           __CFG_WRT$OFF 0000                     _main 08AC                     btemp 007E  
                   start 0000          ___fldiv@new_exp 0052            ___fltol@sign1 005C  
        __end_of___fladd 1800                    ?_main 0070          __end_of_adcInit 1D48  
        __end_of___fldiv 15D1          __end_of_adcRead 1DBF          __end_of___awdiv 1121  
        __end_of___flneg 1D1F            __CFG_WDTE$OFF 0000          __end_of___awmod 1FB4  
        __end_of___flmul 0CB7          __end_of___flsub 1DE1          __end_of___fltol 124D  
        __end_of___lldiv 117F          ___awdiv@divisor 0077          __end_of___llmod 2000  
        __end_of___lwdiv 1EE4          __end_of___lwmod 1E36          ___awdiv@counter 0020  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086          __end_of_lcdInit 11E0          __end_of_lcdPort 1D62  
        __end_of_dpowers 10A0                    _scale 0CB7          __end_of_isdigit 1D38  
         __CFG_BOREN$OFF 0000                    pclath 000A                    status 0003  
                  wtemp0 007E          __end_of_sprintf 07FC          __initialization 07FC  
           __end_of_main 09A2                   ??_main 00C3     __end_of_lcdSetCursor 1EA8  
   __size_of__tdiv_to_l_ 00A9         ___llmod@dividend 0074                   ?_scale 0040  
                 _ADRESH 001E                   _ADRESL 009E         ___awdiv@dividend 0079  
       __end_of___xxtofl 1385         __end_of_lcdClear 1D2A           __CFG_PWRTE$OFF 0000  
       __end_of_lcdPrint 1F21         __end_of__powers_ 1044                   ___flge 124D  
                 ___fleq 1F21                ??___fladd 005C                   ___wmul 1D7C  
              ??_adcInit 0070                ??___fldiv 0048                ??_adcRead 0072  
              ??___awdiv 007B     __end_of_lcdWriteChar 1E6D                ??___flneg 0074  
              ??___awmod 0074                ??___flmul 002E                ??___flsub 007E  
              ??___fltol 0057                ??___lldiv 0078                   _lcdCmd 1D62  
              ??___llmod 0078                ??___lwdiv 007A                ??___lwmod 0074  
                 _fround 0004         ___awdiv@quotient 0022          ___awmod@divisor 0070  
              ??_lcdInit 0074          ___awmod@counter 0075                ??_lcdPort 0070  
              ??_isdigit 0070       __size_of__Umul8_16 0023                ??_sprintf 00A5  
             ___flge@ff1 0070               ___flge@ff2 0074             ___xxtofl@arg 0022  
           ___xxtofl@exp 0021             ___xxtofl@val 0074               ___fleq@ff1 0070  
             ___fleq@ff2 0074  __end_of__initialization 07FC               ___flneg@f1 0070  
             ___fltol@f1 0053           __pcstackCOMMON 0070            __end_of_scale 1000  
             __div_to_l_ 0802         lcdWriteChar@temp 0072          __div_to_l_@exp1 0025  
        __div_to_l_@cntr 0024                  ??_scale 0044          __div_to_l_@quot 0020  
          __div_to_l_@f1 0070            __div_to_l_@f2 0074        __end_of__Umul8_16 1E04  
             __pmaintext 08AC                  ?___flge 0070                  ?___fleq 0070  
                ?___wmul 0070                  ?_lcdCmd 0070    __size_of_lcdSetCursor 003B  
                ?_fround 0040                ?___xxtofl 0074                ?_lcdClear 0070  
              ?_lcdPrint 0075               __stringtab 1000    __size_of_lcdWriteChar 0037  
           _lcdSetCursor 1E6D        __end_of__npowers_ 1078          lcdSetCursor@row 0079  
        __size_of___flge 0093          __size_of___fleq 0048                  ___fladd 15D1  
                _adcInit 1D38                  ___fldiv 142E                  _adcRead 1D9D  
                ___awdiv 10C6                  ___flneg 1D16                  ___awmod 1F69  
                ___flmul 09A2                  ___flsub 1DBF                  ___fltol 11E0  
                ___lldiv 1121          __size_of___wmul 0021                  ___llmod 1FB4  
                ___lwdiv 1EA8               _fround$871 004F               _fround$872 004B  
                ___lwmod 1E04          __size_of_lcdCmd 001A          __size_of_fround 0201  
                _lcdInit 117F                  __ptext1 0205                  __ptext2 0CB7  
                __ptext3 1F69                  __ptext4 10C6                  __ptext5 1D2A  
                __ptext6 0004                  __ptext7 1E04                  __ptext8 1EA8  
                __ptext9 09A2                  _lcdPort 1D48              ?__div_to_l_ 0070  
                _dpowers 1078                  _isdigit 1D2A               ??___xxtofl 0078  
       ___awmod@dividend 0072                  lcdCmd@a 0073               ??_lcdClear 0074  
             ??_lcdPrint 0077                  _sprintf 0205             _lcdWriteChar 1E36  
   end_of_initialization 07FC          ___lldiv@divisor 0070          ___lldiv@counter 007D  
         __tdiv_to_l_@f1 0070           __tdiv_to_l_@f2 0074            ??__tdiv_to_l_ 0078  
            ___fladd@grs 0067            ___xxtofl@sign 0020              ___fldiv@grs 0054  
            ___fldiv@rem 004D              ___flmul@grs 0034      __size_of__div_to_l_ 00AA  
         __end_of___flge 12E0           __end_of___fleq 1F69           __end_of___wmul 1D9D  
         __end_of_lcdCmd 1D7C           __end_of_fround 0205      start_initialization 07FC  
    __end_of__tdiv_to_l_ 142E          ___llmod@divisor 0070          ___llmod@counter 0079  
               ??___flge 0078                 ??___fleq 0078                 ??___wmul 0074  
               ??_lcdCmd 0071                __Umul8_16 1DE1                 ??_fround 0044  
          sprintf@tmpval 00B7                ___fladd@a 0058                ___fladd@b 0054  
             fround@prec 0053                ___fldiv@a 0040                ___fldiv@b 0044  
              ___flmul@a 002A                ___flmul@b 0026                ___flsub@a 0068  
              ___flsub@b 006C                ___latbits 0002            __pcstackBANK0 0020  
          __pcstackBANK1 00A0        __size_of___xxtofl 00A5        __size_of_lcdClear 000B  
      __size_of_lcdPrint 003D              sprintf@flag 00AF              sprintf@eexp 00B5  
            sprintf@fval 00BE              sprintf@prec 00BC         ___lwdiv@dividend 0078  
               ?___fladd 0054                 ?_adcInit 0070                 ?___fldiv 0040  
               ?_adcRead 0070                 ?___awdiv 0077                 ?___flneg 0070  
               ?___awmod 0070                 ?___flmul 0026                 ?___flsub 0068  
               ?___fltol 0053                 ?___lldiv 0070                 ?___llmod 0070  
              __npowers_ 1044               ?__Umul8_16 0070                 ?___lwdiv 0076  
               ?___lwmod 0070                __pstrings 1000                 ?_lcdInit 0070  
            __tdiv_to_l_ 1385                 ?_lcdPort 0070             ??__div_to_l_ 0078  
      adcRead@adcChannel 0070                 ?_isdigit 0070           lcdSetCursor@yy 0078  
              _scale$873 004E         ___lwdiv@quotient 007B                 ?_sprintf 00A0  
         __size_of_scale 0349           ___wmul@product 0074       __end_of__div_to_l_ 08AC  
              lcdPrint@a 0075                lcdPrint@i 007A               _ADCON0bits 001F  
            __stringbase 100F               _ADCON1bits 009F        ___wmul@multiplier 0070  
       lcdSetCursor@temp 007A              ??__Umul8_16 0072         __size_of___fladd 022F  
       __size_of_adcInit 0010         __size_of___fldiv 01A3         __size_of_adcRead 0022  
       __size_of___awdiv 005B         __size_of___flneg 0009         __size_of___awmod 004B  
       __size_of___flmul 0315         __size_of___flsub 0022         __size_of___fltol 006D  
       __size_of___lldiv 005E         __size_of___llmod 004C         __size_of___lwdiv 003C  
       __size_of___lwmod 0032       __end_of__stringtab 1010              _isdigit$682 0070  
       __size_of_lcdInit 0061         __size_of_lcdPort 001A               sprintf@val 00B1  
               ___xxtofl 12E0         __size_of_isdigit 000E                 _lcdClear 1D1F  
        ___lwdiv@divisor 0076          ___lwdiv@counter 007D                 __ptext10 1DE1  
               __ptext11 1385                 __ptext20 1D16                 __ptext12 0802  
               __ptext21 124D                 __ptext13 12E0                 __ptext30 1D9D  
               __ptext22 1F21                 __ptext14 1D7C                 __ptext31 1D38  
               __ptext23 1E6D                 __ptext15 1FB4                 __ptext32 142E  
               __ptext24 1EE4                 __ptext16 1121                 __ptext25 1E36  
               __ptext17 11E0                 __ptext26 117F                 __ptext18 1DBF  
               __ptext27 1D1F                 __ptext19 15D1                 __ptext28 1D62  
               __ptext29 1D48                 _lcdPrint 1EE4                 __powers_ 1010  
       __size_of_sprintf 05F7            lcdSetCursor@x 0074            lcdSetCursor@y 007B  
          lcdSetCursor@z 0077            __size_of_main 00F6                 lcdPort@a 0070  
        main@temperatura 00D6                 isdigit@c 0071                 scale@scl 0052  
              sprintf@ap 00AE         __tdiv_to_l_@exp1 0025         __tdiv_to_l_@cntr 0024  
              sprintf@sp 00BB         __tdiv_to_l_@quot 0020         ___lwmod@dividend 0072  
       ___lldiv@dividend 0074            ?_lcdSetCursor 0074                stringcode 100A  
           ?__tdiv_to_l_ 0070   __Umul8_16@multiplicand 0070                 sprintf@c 00C2  
               sprintf@f 00A0         ___lldiv@quotient 0079          ___lwmod@divisor 0070  
        ___lwmod@counter 0075                 stringdir 100A                 stringtab 1000  
          ?_lcdWriteChar 0070            ___fladd@signs 0064             ___fladd@aexp 0065  
           ___fladd@bexp 0066     __Umul8_16@multiplier 0078           ??_lcdSetCursor 0075  
      __Umul8_16@product 0074  
