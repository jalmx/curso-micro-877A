

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Apr 28 19:19:32 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	dabs	1,0x7E,2
     9  0000                     
    10                           ; Version 2.05
    11                           ; Generated 20/12/2018 GMT
    12                           ; 
    13                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC16F877A Definitions
    42                           ; 
    43                           ; SFR Addresses
    44  0000                     	;# 
    45  0001                     	;# 
    46  0002                     	;# 
    47  0003                     	;# 
    48  0004                     	;# 
    49  0005                     	;# 
    50  0006                     	;# 
    51  0007                     	;# 
    52  0008                     	;# 
    53  0009                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000D                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0013                     	;# 
    65  0014                     	;# 
    66  0015                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001B                     	;# 
    75  001C                     	;# 
    76  001D                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  0081                     	;# 
    80  0085                     	;# 
    81  0086                     	;# 
    82  0087                     	;# 
    83  0088                     	;# 
    84  0089                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  0091                     	;# 
    89  0092                     	;# 
    90  0093                     	;# 
    91  0094                     	;# 
    92  0098                     	;# 
    93  0099                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  009F                     	;# 
    98  010C                     	;# 
    99  010D                     	;# 
   100  010E                     	;# 
   101  010F                     	;# 
   102  018C                     	;# 
   103  018D                     	;# 
   104  0000                     	;# 
   105  0001                     	;# 
   106  0002                     	;# 
   107  0003                     	;# 
   108  0004                     	;# 
   109  0005                     	;# 
   110  0006                     	;# 
   111  0007                     	;# 
   112  0008                     	;# 
   113  0009                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000D                     	;# 
   118  000E                     	;# 
   119  000E                     	;# 
   120  000F                     	;# 
   121  0010                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0014                     	;# 
   126  0015                     	;# 
   127  0015                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001B                     	;# 
   134  001B                     	;# 
   135  001C                     	;# 
   136  001D                     	;# 
   137  001E                     	;# 
   138  001F                     	;# 
   139  0081                     	;# 
   140  0085                     	;# 
   141  0086                     	;# 
   142  0087                     	;# 
   143  0088                     	;# 
   144  0089                     	;# 
   145  008C                     	;# 
   146  008D                     	;# 
   147  008E                     	;# 
   148  0091                     	;# 
   149  0092                     	;# 
   150  0093                     	;# 
   151  0094                     	;# 
   152  0098                     	;# 
   153  0099                     	;# 
   154  009C                     	;# 
   155  009D                     	;# 
   156  009E                     	;# 
   157  009F                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010F                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164                           
   165                           	psect	strings
   166  0003                     __pstrings:	
   167  0003                     stringtab:	
   168  0003                     __stringtab:	
   169  0003                     stringcode:	
   170                           ;	String table - string pointers are 1 byte each
   171                           
   172  0003                     stringdir:	
   173  0003  3000               	movlw	high stringdir
   174  0004  008A               	movwf	10
   175  0005  0804               	movf	4,w
   176  0006  0A84               	incf	4,f
   177  0007  0782               	addwf	2,f
   178  0008                     __stringbase:	
   179  0008  3400               	retlw	0
   180  0009                     __end_of__stringtab:	
   181  0009                     main@heart:	
   182  0009  341C               	retlw	28
   183  000A  343E               	retlw	62
   184  000B  347E               	retlw	126
   185  000C  34FC               	retlw	252
   186  000D  34FC               	retlw	252
   187  000E  347E               	retlw	126
   188  000F  343E               	retlw	62
   189  0010  341C               	retlw	28
   190  0011                     __end_ofmain@heart:	
   191  0011                     main@smile:	
   192  0011  3420               	retlw	32
   193  0012  346E               	retlw	110
   194  0013  34CE               	retlw	206
   195  0014  34C0               	retlw	192
   196  0015  34C0               	retlw	192
   197  0016  34CE               	retlw	206
   198  0017  346E               	retlw	110
   199  0018  3420               	retlw	32
   200  0019                     __end_ofmain@smile:	
   201  0019                     main@col:	
   202  0019  3401               	retlw	1
   203  001A  3402               	retlw	2
   204  001B  3404               	retlw	4
   205  001C  3408               	retlw	8
   206  001D  3410               	retlw	16
   207  001E  3420               	retlw	32
   208  001F  3440               	retlw	64
   209  0020  3480               	retlw	128
   210  0021                     __end_ofmain@col:	
   211  0007                     _PORTC	set	7
   212  0006                     _PORTB	set	6
   213  0087                     _TRISC	set	135
   214  0086                     _TRISB	set	134
   215                           
   216                           	psect	cinit
   217  07FC                     start_initialization:	
   218                           ; #config settings
   219                           
   220  07FC                     __initialization:	
   221  07FC                     end_of_initialization:	
   222                           ;End of C runtime variable initialization code
   223                           
   224  07FC                     __end_of__initialization:	
   225  07FC  0183               	clrf	3
   226  07FD  120A  118A  2F93   	ljmp	_main	;jump to C main() function
   227                           
   228                           	psect	cstackCOMMON
   229  0070                     __pcstackCOMMON:	
   230  0070                     ?_main:	
   231  0070                     ??_main:	
   232                           ; 1 bytes @ 0x0
   233                           
   234                           
   235                           ; 1 bytes @ 0x0
   236  0070                     	ds	2
   237  0072                     main@a:	
   238                           
   239                           ; 1 bytes @ 0x2
   240  0072                     	ds	1
   241  0073                     main@a_42:	
   242                           
   243                           ; 1 bytes @ 0x3
   244  0073                     	ds	1
   245  0074                     main@i:	
   246                           
   247                           ; 1 bytes @ 0x4
   248  0074                     	ds	1
   249  0075                     main@i_43:	
   250                           
   251                           ; 1 bytes @ 0x5
   252  0075                     	ds	1
   253                           
   254                           	psect	maintext
   255  0793                     __pmaintext:	
   256 ;;
   257 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   258 ;;
   259 ;; *************** function _main *****************
   260 ;; Defined at:
   261 ;;		line 4 in file "main.c"
   262 ;; Parameters:    Size  Location     Type
   263 ;;		None
   264 ;; Auto vars:     Size  Location     Type
   265 ;;  i               1    5[COMMON] unsigned char 
   266 ;;  i               1    4[COMMON] unsigned char 
   267 ;;  a               1    3[COMMON] unsigned char 
   268 ;;  a               1    2[COMMON] unsigned char 
   269 ;; Return value:  Size  Location     Type
   270 ;;                  1    wreg      void 
   271 ;; Registers used:
   272 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   273 ;; Tracked objects:
   274 ;;		On entry : B00/0
   275 ;;		On exit  : 0/0
   276 ;;		Unchanged: 0/0
   277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   278 ;;      Params:         0       0       0       0       0
   279 ;;      Locals:         4       0       0       0       0
   280 ;;      Temps:          2       0       0       0       0
   281 ;;      Totals:         6       0       0       0       0
   282 ;;Total ram usage:        6 bytes
   283 ;; Hardware stack levels used:    1
   284 ;; This function calls:
   285 ;;		Nothing
   286 ;; This function is called by:
   287 ;;		Startup code after reset
   288 ;; This function uses a non-reentrant model
   289 ;;
   290                           
   291                           
   292                           ;psect for function _main
   293  0793                     _main:	
   294                           
   295                           ;main.c: 5:     char const col[] = {0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80};;mai
      +                          n.c: 6:     char const smile[] = {0x20, 0x6E, 0xCE, 0xC0, 0xC0, 0xCE, 0x6E, 0x20};;main.
      +                          c: 7:     char const heart[] = {0x1C, 0x3E, 0x7E, 0xFC, 0xFC, 0x7E, 0x3E, 0x1C};;main.c:
      +                           9:     TRISB = 0;
   296                           
   297                           ;incstack = 0
   298                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath]
   299  0793  1683               	bsf	3,5	;RP0=1, select bank1
   300  0794  1303               	bcf	3,6	;RP1=0, select bank1
   301  0795  0186               	clrf	6	;volatile
   302                           
   303                           ;main.c: 10:     TRISC = 0;
   304  0796  0187               	clrf	7	;volatile
   305                           
   306                           ;main.c: 11:     PORTB = 0;
   307  0797  1283               	bcf	3,5	;RP0=0, select bank0
   308  0798  1303               	bcf	3,6	;RP1=0, select bank0
   309  0799  0186               	clrf	6	;volatile
   310                           
   311                           ;main.c: 12:     PORTC = 0;
   312  079A  0187               	clrf	7	;volatile
   313                           
   314                           ;main.c: 14:     for (char a = 0; a < 20; a++) {
   315  079B  01F2               	clrf	main@a
   316  079C                     l675:	
   317                           
   318                           ;main.c: 15:         for (char i = 0; i <= 7; i++) {
   319  079C  01F4               	clrf	main@i
   320  079D                     l681:	
   321                           
   322                           ;main.c: 16:             PORTC = ~col[i];
   323  079D  0874               	movf	main@i,w
   324  079E  3E11               	addlw	low ((main@col-__stringbase)| (0+32768))
   325  079F  0084               	movwf	4
   326  07A0  120A  118A  2003  120A  118A  	fcall	stringdir
   327  07A5  3AFF               	xorlw	255
   328  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   329  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   330  07A8  0087               	movwf	7	;volatile
   331                           
   332                           ;main.c: 17:             PORTB = smile[i];
   333  07A9  0874               	movf	main@i,w
   334  07AA  3E09               	addlw	low ((main@smile-__stringbase)| (0+32768))
   335  07AB  0084               	movwf	4
   336  07AC  120A  118A  2003  120A  118A  	fcall	stringdir
   337  07B1  0086               	movwf	6	;volatile
   338                           
   339                           ;main.c: 18:             _delay((unsigned long)((5)*(4000000/4000.0)));
   340  07B2  3007               	movlw	7
   341  07B3  00F1               	movwf	??_main+1
   342  07B4  307D               	movlw	125
   343  07B5  00F0               	movwf	??_main
   344  07B6                     u97:	
   345  07B6  0BF0               	decfsz	??_main,f
   346  07B7  2FB6               	goto	u97
   347  07B8  0BF1               	decfsz	??_main+1,f
   348  07B9  2FB6               	goto	u97
   349                           
   350                           ;main.c: 20:         }
   351  07BA  3001               	movlw	1
   352  07BB  00F0               	movwf	??_main
   353  07BC  0870               	movf	??_main,w
   354  07BD  07F4               	addwf	main@i,f
   355  07BE  3008               	movlw	8
   356  07BF  0274               	subwf	main@i,w
   357  07C0  1C03               	skipc
   358  07C1  2F9D               	goto	l681
   359                           
   360                           ;main.c: 21:     }
   361  07C2  3001               	movlw	1
   362  07C3  00F0               	movwf	??_main
   363  07C4  0870               	movf	??_main,w
   364  07C5  07F2               	addwf	main@a,f
   365  07C6  3014               	movlw	20
   366  07C7  0272               	subwf	main@a,w
   367  07C8  1C03               	skipc
   368  07C9  2F9C               	goto	l675
   369                           
   370                           ;main.c: 22:     for (char a = 0; a < 80; a++) {
   371  07CA  01F3               	clrf	main@a_42
   372  07CB                     l699:	
   373                           
   374                           ;main.c: 23:         for (char i = 0; i <= 7; i++) {
   375  07CB  01F5               	clrf	main@i_43
   376  07CC                     l705:	
   377                           
   378                           ;main.c: 24:             PORTC = ~col[i];
   379  07CC  0875               	movf	main@i_43,w
   380  07CD  3E11               	addlw	low ((main@col-__stringbase)| (0+32768))
   381  07CE  0084               	movwf	4
   382  07CF  120A  118A  2003  120A  118A  	fcall	stringdir
   383  07D4  3AFF               	xorlw	255
   384  07D5  1283               	bcf	3,5	;RP0=0, select bank0
   385  07D6  1303               	bcf	3,6	;RP1=0, select bank0
   386  07D7  0087               	movwf	7	;volatile
   387                           
   388                           ;main.c: 25:             PORTB = heart[i];
   389  07D8  0875               	movf	main@i_43,w
   390  07D9  3E01               	addlw	low ((main@heart-__stringbase)| (0+32768))
   391  07DA  0084               	movwf	4
   392  07DB  120A  118A  2003  120A  118A  	fcall	stringdir
   393  07E0  0086               	movwf	6	;volatile
   394                           
   395                           ;main.c: 26:             _delay((unsigned long)((5)*(4000000/4000.0)));
   396  07E1  3007               	movlw	7
   397  07E2  00F1               	movwf	??_main+1
   398  07E3  307D               	movlw	125
   399  07E4  00F0               	movwf	??_main
   400  07E5                     u107:	
   401  07E5  0BF0               	decfsz	??_main,f
   402  07E6  2FE5               	goto	u107
   403  07E7  0BF1               	decfsz	??_main+1,f
   404  07E8  2FE5               	goto	u107
   405                           
   406                           ;main.c: 28:         }
   407  07E9  3001               	movlw	1
   408  07EA  00F0               	movwf	??_main
   409  07EB  0870               	movf	??_main,w
   410  07EC  07F5               	addwf	main@i_43,f
   411  07ED  3008               	movlw	8
   412  07EE  0275               	subwf	main@i_43,w
   413  07EF  1C03               	skipc
   414  07F0  2FCC               	goto	l705
   415                           
   416                           ;main.c: 29:     }
   417  07F1  3001               	movlw	1
   418  07F2  00F0               	movwf	??_main
   419  07F3  0870               	movf	??_main,w
   420  07F4  07F3               	addwf	main@a_42,f
   421  07F5  3050               	movlw	80
   422  07F6  0273               	subwf	main@a_42,w
   423  07F7  1C03               	skipc
   424  07F8  2FCB               	goto	l699
   425  07F9  120A  118A  2800   	ljmp	start
   426  07FC                     __end_of_main:	
   427  007E                     btemp	set	126	;btemp
   428  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    24
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _main                                                 6     6      0     272
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Apr 28 19:19:32 2019

                      pc 0002                       u97 07B6                       fsr 0004  
                    l705 07CC                      l681 079D                      l675 079C  
                    l699 07CB                      u107 07E5                      fsr0 0004  
                   _main 0793                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTB 0006                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087                    main@a 0072  
                  main@i 0074                    pclath 000A                    status 0003  
        __end_ofmain@col 0021                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 0793               __stringtab 0003  
                main@col 0019     end_of_initialization 07FC        __end_ofmain@heart 0011  
      __end_ofmain@smile 0019      start_initialization 07FC                ___latbits 0002  
              __pstrings 0003              __stringbase 0008                main@heart 0009  
              main@smile 0011       __end_of__stringtab 0009            __size_of_main 0069  
               main@a_42 0073                 main@i_43 0075                stringcode 0003  
               stringdir 0003                 stringtab 0003  
