

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu May 09 18:45:19 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	dabs	1,0x7E,2
     9  0000                     
    10                           ; Version 2.05
    11                           ; Generated 20/12/2018 GMT
    12                           ; 
    13                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC16F877A Definitions
    42                           ; 
    43                           ; SFR Addresses
    44  0000                     	;# 
    45  0001                     	;# 
    46  0002                     	;# 
    47  0003                     	;# 
    48  0004                     	;# 
    49  0005                     	;# 
    50  0006                     	;# 
    51  0007                     	;# 
    52  0008                     	;# 
    53  0009                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000D                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0013                     	;# 
    65  0014                     	;# 
    66  0015                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001B                     	;# 
    75  001C                     	;# 
    76  001D                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  0081                     	;# 
    80  0085                     	;# 
    81  0086                     	;# 
    82  0087                     	;# 
    83  0088                     	;# 
    84  0089                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  0091                     	;# 
    89  0092                     	;# 
    90  0093                     	;# 
    91  0094                     	;# 
    92  0098                     	;# 
    93  0099                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  009F                     	;# 
    98  010C                     	;# 
    99  010D                     	;# 
   100  010E                     	;# 
   101  010F                     	;# 
   102  018C                     	;# 
   103  018D                     	;# 
   104  0000                     	;# 
   105  0001                     	;# 
   106  0002                     	;# 
   107  0003                     	;# 
   108  0004                     	;# 
   109  0005                     	;# 
   110  0006                     	;# 
   111  0007                     	;# 
   112  0008                     	;# 
   113  0009                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000D                     	;# 
   118  000E                     	;# 
   119  000E                     	;# 
   120  000F                     	;# 
   121  0010                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0014                     	;# 
   126  0015                     	;# 
   127  0015                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001B                     	;# 
   134  001B                     	;# 
   135  001C                     	;# 
   136  001D                     	;# 
   137  001E                     	;# 
   138  001F                     	;# 
   139  0081                     	;# 
   140  0085                     	;# 
   141  0086                     	;# 
   142  0087                     	;# 
   143  0088                     	;# 
   144  0089                     	;# 
   145  008C                     	;# 
   146  008D                     	;# 
   147  008E                     	;# 
   148  0091                     	;# 
   149  0092                     	;# 
   150  0093                     	;# 
   151  0094                     	;# 
   152  0098                     	;# 
   153  0099                     	;# 
   154  009C                     	;# 
   155  009D                     	;# 
   156  009E                     	;# 
   157  009F                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010F                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164                           
   165                           	psect	strings
   166  0003                     __pstrings:	
   167  0003                     stringtab:	
   168  0003                     __stringtab:	
   169  0003                     stringcode:	
   170                           ;	String table - string pointers are 1 byte each
   171                           
   172  0003                     stringdir:	
   173  0003  3000               	movlw	high stringdir
   174  0004  008A               	movwf	10
   175  0005  0804               	movf	4,w
   176  0006  0A84               	incf	4,f
   177  0007  0782               	addwf	2,f
   178  0008                     __stringbase:	
   179  0008  3400               	retlw	0
   180  0009                     __end_of__stringtab:	
   181  0009                     main@f:	
   182  0009  34FF               	retlw	255
   183  000A  34FF               	retlw	255
   184  000B  341B               	retlw	27
   185  000C  341B               	retlw	27
   186  000D  341B               	retlw	27
   187  000E  3403               	retlw	3
   188  000F  3403               	retlw	3
   189  0010  3403               	retlw	3
   190  0011                     __end_ofmain@f:	
   191  0011                     main@heart:	
   192  0011  341C               	retlw	28
   193  0012  343E               	retlw	62
   194  0013  347E               	retlw	126
   195  0014  34FC               	retlw	252
   196  0015  34FC               	retlw	252
   197  0016  347E               	retlw	126
   198  0017  343E               	retlw	62
   199  0018  341C               	retlw	28
   200  0019                     __end_ofmain@heart:	
   201  0019                     main@smile:	
   202  0019  3420               	retlw	32
   203  001A  346E               	retlw	110
   204  001B  34CE               	retlw	206
   205  001C  34C0               	retlw	192
   206  001D  34C0               	retlw	192
   207  001E  34CE               	retlw	206
   208  001F  346E               	retlw	110
   209  0020  3420               	retlw	32
   210  0021                     __end_ofmain@smile:	
   211  0021                     main@col:	
   212  0021  3401               	retlw	1
   213  0022  3402               	retlw	2
   214  0023  3404               	retlw	4
   215  0024  3408               	retlw	8
   216  0025  3410               	retlw	16
   217  0026  3420               	retlw	32
   218  0027  3440               	retlw	64
   219  0028  3480               	retlw	128
   220  0029                     __end_ofmain@col:	
   221  0007                     _PORTC	set	7
   222  0006                     _PORTB	set	6
   223  0087                     _TRISC	set	135
   224  0086                     _TRISB	set	134
   225                           
   226                           	psect	cinit
   227  07FC                     start_initialization:	
   228                           ; #config settings
   229                           
   230  07FC                     __initialization:	
   231  07FC                     end_of_initialization:	
   232                           ;End of C runtime variable initialization code
   233                           
   234  07FC                     __end_of__initialization:	
   235  07FC  0183               	clrf	3
   236  07FD  120A  118A  2F64   	ljmp	_main	;jump to C main() function
   237                           
   238                           	psect	cstackCOMMON
   239  0070                     __pcstackCOMMON:	
   240  0070                     ?_main:	
   241  0070                     ??_main:	
   242                           ; 1 bytes @ 0x0
   243                           
   244                           
   245                           ; 1 bytes @ 0x0
   246  0070                     	ds	2
   247  0072                     main@a:	
   248                           
   249                           ; 1 bytes @ 0x2
   250  0072                     	ds	1
   251  0073                     main@a_43:	
   252                           
   253                           ; 1 bytes @ 0x3
   254  0073                     	ds	1
   255  0074                     main@a_45:	
   256                           
   257                           ; 1 bytes @ 0x4
   258  0074                     	ds	1
   259  0075                     main@i:	
   260                           
   261                           ; 1 bytes @ 0x5
   262  0075                     	ds	1
   263  0076                     main@i_44:	
   264                           
   265                           ; 1 bytes @ 0x6
   266  0076                     	ds	1
   267  0077                     main@i_46:	
   268                           
   269                           ; 1 bytes @ 0x7
   270  0077                     	ds	1
   271                           
   272                           	psect	maintext
   273  0764                     __pmaintext:	
   274 ;;
   275 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   276 ;;
   277 ;; *************** function _main *****************
   278 ;; Defined at:
   279 ;;		line 4 in file "main.c"
   280 ;; Parameters:    Size  Location     Type
   281 ;;		None
   282 ;; Auto vars:     Size  Location     Type
   283 ;;  i               1    7[COMMON] unsigned char 
   284 ;;  i               1    6[COMMON] unsigned char 
   285 ;;  i               1    5[COMMON] unsigned char 
   286 ;;  a               1    4[COMMON] unsigned char 
   287 ;;  a               1    3[COMMON] unsigned char 
   288 ;;  a               1    2[COMMON] unsigned char 
   289 ;; Return value:  Size  Location     Type
   290 ;;                  1    wreg      void 
   291 ;; Registers used:
   292 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   293 ;; Tracked objects:
   294 ;;		On entry : B00/0
   295 ;;		On exit  : 0/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   298 ;;      Params:         0       0       0       0       0
   299 ;;      Locals:         6       0       0       0       0
   300 ;;      Temps:          2       0       0       0       0
   301 ;;      Totals:         8       0       0       0       0
   302 ;;Total ram usage:        8 bytes
   303 ;; Hardware stack levels used:    1
   304 ;; This function calls:
   305 ;;		Nothing
   306 ;; This function is called by:
   307 ;;		Startup code after reset
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311                           
   312                           ;psect for function _main
   313  0764                     _main:	
   314                           
   315                           ;main.c: 5:     char const col[] = {0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80};;mai
      +                          n.c: 6:     char const smile[] = {0x20, 0x6E, 0xCE, 0xC0, 0xC0, 0xCE, 0x6E, 0x20};;main.
      +                          c: 7:     char const heart[] = {0x1C, 0x3E, 0x7E, 0xFC, 0xFC, 0x7E, 0x3E, 0x1C};;main.c:
      +                           8:     char const f[] = {0xFF, 0xFF, 0x1B, 0x1B, 0x1B, 0x03, 0x03, 0x03};;main.c: 10:  
      +                             TRISB = 0;
   316                           
   317                           ;incstack = 0
   318                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath]
   319  0764  1683               	bsf	3,5	;RP0=1, select bank1
   320  0765  1303               	bcf	3,6	;RP1=0, select bank1
   321  0766  0186               	clrf	6	;volatile
   322                           
   323                           ;main.c: 11:     TRISC = 0;
   324  0767  0187               	clrf	7	;volatile
   325                           
   326                           ;main.c: 12:     PORTB = 0;
   327  0768  1283               	bcf	3,5	;RP0=0, select bank0
   328  0769  1303               	bcf	3,6	;RP1=0, select bank0
   329  076A  0186               	clrf	6	;volatile
   330                           
   331                           ;main.c: 13:     PORTC = 0;
   332  076B  0187               	clrf	7	;volatile
   333                           
   334                           ;main.c: 15:     for (char a = 0; a < 20; a++) {
   335  076C  01F2               	clrf	main@a
   336  076D                     l705:	
   337                           
   338                           ;main.c: 16:         for (char i = 0; i <= 7; i++) {
   339  076D  01F5               	clrf	main@i
   340  076E                     l711:	
   341                           
   342                           ;main.c: 17:             PORTC = ~col[i];
   343  076E  0875               	movf	main@i,w
   344  076F  3E19               	addlw	low ((main@col-__stringbase)| (0+32768))
   345  0770  0084               	movwf	4
   346  0771  120A  118A  2003  120A  118A  	fcall	stringdir
   347  0776  3AFF               	xorlw	255
   348  0777  1283               	bcf	3,5	;RP0=0, select bank0
   349  0778  1303               	bcf	3,6	;RP1=0, select bank0
   350  0779  0087               	movwf	7	;volatile
   351                           
   352                           ;main.c: 18:             PORTB = f[i];
   353  077A  0875               	movf	main@i,w
   354  077B  3E01               	addlw	low ((main@f-__stringbase)| (0+32768))
   355  077C  0084               	movwf	4
   356  077D  120A  118A  2003  120A  118A  	fcall	stringdir
   357  0782  0086               	movwf	6	;volatile
   358                           
   359                           ;main.c: 19:             _delay((unsigned long)((5)*(4000000/4000.0)));
   360  0783  3007               	movlw	7
   361  0784  00F1               	movwf	??_main+1
   362  0785  307D               	movlw	125
   363  0786  00F0               	movwf	??_main
   364  0787                     u137:	
   365  0787  0BF0               	decfsz	??_main,f
   366  0788  2F87               	goto	u137
   367  0789  0BF1               	decfsz	??_main+1,f
   368  078A  2F87               	goto	u137
   369                           
   370                           ;main.c: 21:         }
   371  078B  3001               	movlw	1
   372  078C  00F0               	movwf	??_main
   373  078D  0870               	movf	??_main,w
   374  078E  07F5               	addwf	main@i,f
   375  078F  3008               	movlw	8
   376  0790  0275               	subwf	main@i,w
   377  0791  1C03               	skipc
   378  0792  2F6E               	goto	l711
   379                           
   380                           ;main.c: 22:     }
   381  0793  3001               	movlw	1
   382  0794  00F0               	movwf	??_main
   383  0795  0870               	movf	??_main,w
   384  0796  07F2               	addwf	main@a,f
   385  0797  3014               	movlw	20
   386  0798  0272               	subwf	main@a,w
   387  0799  1C03               	skipc
   388  079A  2F6D               	goto	l705
   389                           
   390                           ;main.c: 23:     for (char a = 0; a < 20; a++) {
   391  079B  01F3               	clrf	main@a_43
   392  079C                     l729:	
   393                           
   394                           ;main.c: 24:         for (char i = 0; i <= 7; i++) {
   395  079C  01F6               	clrf	main@i_44
   396  079D                     l735:	
   397                           
   398                           ;main.c: 25:             PORTC = ~col[i];
   399  079D  0876               	movf	main@i_44,w
   400  079E  3E19               	addlw	low ((main@col-__stringbase)| (0+32768))
   401  079F  0084               	movwf	4
   402  07A0  120A  118A  2003  120A  118A  	fcall	stringdir
   403  07A5  3AFF               	xorlw	255
   404  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   405  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   406  07A8  0087               	movwf	7	;volatile
   407                           
   408                           ;main.c: 26:             PORTB = smile[i];
   409  07A9  0876               	movf	main@i_44,w
   410  07AA  3E11               	addlw	low ((main@smile-__stringbase)| (0+32768))
   411  07AB  0084               	movwf	4
   412  07AC  120A  118A  2003  120A  118A  	fcall	stringdir
   413  07B1  0086               	movwf	6	;volatile
   414                           
   415                           ;main.c: 27:             _delay((unsigned long)((5)*(4000000/4000.0)));
   416  07B2  3007               	movlw	7
   417  07B3  00F1               	movwf	??_main+1
   418  07B4  307D               	movlw	125
   419  07B5  00F0               	movwf	??_main
   420  07B6                     u147:	
   421  07B6  0BF0               	decfsz	??_main,f
   422  07B7  2FB6               	goto	u147
   423  07B8  0BF1               	decfsz	??_main+1,f
   424  07B9  2FB6               	goto	u147
   425                           
   426                           ;main.c: 29:         }
   427  07BA  3001               	movlw	1
   428  07BB  00F0               	movwf	??_main
   429  07BC  0870               	movf	??_main,w
   430  07BD  07F6               	addwf	main@i_44,f
   431  07BE  3008               	movlw	8
   432  07BF  0276               	subwf	main@i_44,w
   433  07C0  1C03               	skipc
   434  07C1  2F9D               	goto	l735
   435                           
   436                           ;main.c: 30:     }
   437  07C2  3001               	movlw	1
   438  07C3  00F0               	movwf	??_main
   439  07C4  0870               	movf	??_main,w
   440  07C5  07F3               	addwf	main@a_43,f
   441  07C6  3014               	movlw	20
   442  07C7  0273               	subwf	main@a_43,w
   443  07C8  1C03               	skipc
   444  07C9  2F9C               	goto	l729
   445                           
   446                           ;main.c: 31:     for (char a = 0; a < 80; a++) {
   447  07CA  01F4               	clrf	main@a_45
   448  07CB                     l753:	
   449                           
   450                           ;main.c: 32:         for (char i = 0; i <= 7; i++) {
   451  07CB  01F7               	clrf	main@i_46
   452  07CC                     l759:	
   453                           
   454                           ;main.c: 33:             PORTC = ~col[i];
   455  07CC  0877               	movf	main@i_46,w
   456  07CD  3E19               	addlw	low ((main@col-__stringbase)| (0+32768))
   457  07CE  0084               	movwf	4
   458  07CF  120A  118A  2003  120A  118A  	fcall	stringdir
   459  07D4  3AFF               	xorlw	255
   460  07D5  1283               	bcf	3,5	;RP0=0, select bank0
   461  07D6  1303               	bcf	3,6	;RP1=0, select bank0
   462  07D7  0087               	movwf	7	;volatile
   463                           
   464                           ;main.c: 34:             PORTB = heart[i];
   465  07D8  0877               	movf	main@i_46,w
   466  07D9  3E09               	addlw	low ((main@heart-__stringbase)| (0+32768))
   467  07DA  0084               	movwf	4
   468  07DB  120A  118A  2003  120A  118A  	fcall	stringdir
   469  07E0  0086               	movwf	6	;volatile
   470                           
   471                           ;main.c: 35:             _delay((unsigned long)((5)*(4000000/4000.0)));
   472  07E1  3007               	movlw	7
   473  07E2  00F1               	movwf	??_main+1
   474  07E3  307D               	movlw	125
   475  07E4  00F0               	movwf	??_main
   476  07E5                     u157:	
   477  07E5  0BF0               	decfsz	??_main,f
   478  07E6  2FE5               	goto	u157
   479  07E7  0BF1               	decfsz	??_main+1,f
   480  07E8  2FE5               	goto	u157
   481                           
   482                           ;main.c: 37:         }
   483  07E9  3001               	movlw	1
   484  07EA  00F0               	movwf	??_main
   485  07EB  0870               	movf	??_main,w
   486  07EC  07F7               	addwf	main@i_46,f
   487  07ED  3008               	movlw	8
   488  07EE  0277               	subwf	main@i_46,w
   489  07EF  1C03               	skipc
   490  07F0  2FCC               	goto	l759
   491                           
   492                           ;main.c: 38:     }
   493  07F1  3001               	movlw	1
   494  07F2  00F0               	movwf	??_main
   495  07F3  0870               	movf	??_main,w
   496  07F4  07F4               	addwf	main@a_45,f
   497  07F5  3050               	movlw	80
   498  07F6  0274               	subwf	main@a_45,w
   499  07F7  1C03               	skipc
   500  07F8  2FCB               	goto	l753
   501  07F9  120A  118A  2800   	ljmp	start
   502  07FC                     __end_of_main:	
   503  007E                     btemp	set	126	;btemp
   504  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    32
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _main                                                 8     8      0     408
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu May 09 18:45:19 2019

                      pc 0002                       fsr 0004                      l711 076E  
                    l705 076D                      l735 079D                      l753 07CB  
                    l729 079C                      l759 07CC                      u137 0787  
                    u147 07B6                      u157 07E5                      fsr0 0004  
                   _main 0764                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTB 0006                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087                    main@a 0072  
                  main@f 0009                    main@i 0075                    pclath 000A  
                  status 0003          __end_ofmain@col 0029                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_ofmain@f 0011  
             __pmaintext 0764               __stringtab 0003                  main@col 0021  
   end_of_initialization 07FC        __end_ofmain@heart 0019        __end_ofmain@smile 0021  
    start_initialization 07FC                ___latbits 0002                __pstrings 0003  
            __stringbase 0008                main@heart 0011                main@smile 0019  
     __end_of__stringtab 0009            __size_of_main 0098                 main@a_43 0073  
               main@a_45 0074                 main@i_44 0076                 main@i_46 0077  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
