

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue May 07 17:09:15 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	dabs	1,0x7E,2
     9  0000                     
    10                           ; Version 2.05
    11                           ; Generated 20/12/2018 GMT
    12                           ; 
    13                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution.
    27                           ; 
    28                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    29                           ;        software without specific prior written permission.
    30                           ; 
    31                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    32                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    33                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    34                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    35                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    36                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    37                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    38                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    39                           ; 
    40                           ; 
    41                           ; Code-generator required, PIC16F877A Definitions
    42                           ; 
    43                           ; SFR Addresses
    44  0000                     	;# 
    45  0001                     	;# 
    46  0002                     	;# 
    47  0003                     	;# 
    48  0004                     	;# 
    49  0005                     	;# 
    50  0006                     	;# 
    51  0007                     	;# 
    52  0008                     	;# 
    53  0009                     	;# 
    54  000A                     	;# 
    55  000B                     	;# 
    56  000C                     	;# 
    57  000D                     	;# 
    58  000E                     	;# 
    59  000E                     	;# 
    60  000F                     	;# 
    61  0010                     	;# 
    62  0011                     	;# 
    63  0012                     	;# 
    64  0013                     	;# 
    65  0014                     	;# 
    66  0015                     	;# 
    67  0015                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001B                     	;# 
    75  001C                     	;# 
    76  001D                     	;# 
    77  001E                     	;# 
    78  001F                     	;# 
    79  0081                     	;# 
    80  0085                     	;# 
    81  0086                     	;# 
    82  0087                     	;# 
    83  0088                     	;# 
    84  0089                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  0091                     	;# 
    89  0092                     	;# 
    90  0093                     	;# 
    91  0094                     	;# 
    92  0098                     	;# 
    93  0099                     	;# 
    94  009C                     	;# 
    95  009D                     	;# 
    96  009E                     	;# 
    97  009F                     	;# 
    98  010C                     	;# 
    99  010D                     	;# 
   100  010E                     	;# 
   101  010F                     	;# 
   102  018C                     	;# 
   103  018D                     	;# 
   104  0000                     	;# 
   105  0001                     	;# 
   106  0002                     	;# 
   107  0003                     	;# 
   108  0004                     	;# 
   109  0005                     	;# 
   110  0006                     	;# 
   111  0007                     	;# 
   112  0008                     	;# 
   113  0009                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000D                     	;# 
   118  000E                     	;# 
   119  000E                     	;# 
   120  000F                     	;# 
   121  0010                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0014                     	;# 
   126  0015                     	;# 
   127  0015                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001B                     	;# 
   134  001B                     	;# 
   135  001C                     	;# 
   136  001D                     	;# 
   137  001E                     	;# 
   138  001F                     	;# 
   139  0081                     	;# 
   140  0085                     	;# 
   141  0086                     	;# 
   142  0087                     	;# 
   143  0088                     	;# 
   144  0089                     	;# 
   145  008C                     	;# 
   146  008D                     	;# 
   147  008E                     	;# 
   148  0091                     	;# 
   149  0092                     	;# 
   150  0093                     	;# 
   151  0094                     	;# 
   152  0098                     	;# 
   153  0099                     	;# 
   154  009C                     	;# 
   155  009D                     	;# 
   156  009E                     	;# 
   157  009F                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010F                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164                           
   165                           	psect	strings
   166  0003                     __pstrings:	
   167  0003                     stringtab:	
   168  0003                     __stringtab:	
   169  0003                     stringcode:	
   170                           ;	String table - string pointers are 1 byte each
   171                           
   172  0003                     stringdir:	
   173  0003  3000               	movlw	high stringdir
   174  0004  008A               	movwf	10
   175  0005  0804               	movf	4,w
   176  0006  0A84               	incf	4,f
   177  0007  0782               	addwf	2,f
   178  0008                     __stringbase:	
   179  0008  3400               	retlw	0
   180  0009                     __end_of__stringtab:	
   181  0009                     main@half:	
   182  0009  3401               	retlw	1
   183  000A  3403               	retlw	3
   184  000B  3402               	retlw	2
   185  000C  3406               	retlw	6
   186  000D  3404               	retlw	4
   187  000E  340C               	retlw	12
   188  000F  3408               	retlw	8
   189  0010  3409               	retlw	9
   190  0011  3400               	retlw	0
   191  0012                     __end_ofmain@half:	
   192  0012                     main@full:	
   193  0012  3403               	retlw	3
   194  0013  3406               	retlw	6
   195  0014  340C               	retlw	12
   196  0015  3409               	retlw	9
   197  0016  3400               	retlw	0
   198  0017                     __end_ofmain@full:	
   199  0017                     main@forward:	
   200  0017  3408               	retlw	8
   201  0018  3404               	retlw	4
   202  0019  3402               	retlw	2
   203  001A  3401               	retlw	1
   204  001B  3400               	retlw	0
   205  001C                     __end_ofmain@forward:	
   206  001C                     main@backward:	
   207  001C  3401               	retlw	1
   208  001D  3402               	retlw	2
   209  001E  3404               	retlw	4
   210  001F  3408               	retlw	8
   211  0020  3400               	retlw	0
   212  0021                     __end_ofmain@backward:	
   213  0021                     main@TIME:	
   214  0021  3464               	retlw	100
   215  0022  3400               	retlw	0
   216  0023                     __end_ofmain@TIME:	
   217  0007                     _PORTCbits	set	7
   218  0008                     _PORTD	set	8
   219  0007                     _PORTC	set	7
   220  0006                     _PORTB	set	6
   221  0088                     _TRISD	set	136
   222  0087                     _TRISC	set	135
   223  0086                     _TRISB	set	134
   224                           
   225                           	psect	cinit
   226  07FC                     start_initialization:	
   227                           ; #config settings
   228                           
   229  07FC                     __initialization:	
   230  07FC                     end_of_initialization:	
   231                           ;End of C runtime variable initialization code
   232                           
   233  07FC                     __end_of__initialization:	
   234  07FC  0183               	clrf	3
   235  07FD  120A  118A  2F40   	ljmp	_main	;jump to C main() function
   236                           
   237                           	psect	cstackCOMMON
   238  0070                     __pcstackCOMMON:	
   239  0070                     ?_main:	
   240  0070                     ??_main:	
   241                           ; 1 bytes @ 0x0
   242                           
   243                           
   244                           ; 1 bytes @ 0x0
   245  0070                     	ds	2
   246  0072                     main@i:	
   247                           
   248                           ; 2 bytes @ 0x2
   249  0072                     	ds	2
   250  0074                     main@i_74:	
   251                           
   252                           ; 2 bytes @ 0x4
   253  0074                     	ds	2
   254  0076                     main@i_75:	
   255                           
   256                           ; 2 bytes @ 0x6
   257  0076                     	ds	2
   258  0078                     main@i_76:	
   259                           
   260                           ; 2 bytes @ 0x8
   261  0078                     	ds	2
   262                           
   263                           	psect	maintext
   264  0740                     __pmaintext:	
   265 ;;
   266 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   267 ;;
   268 ;; *************** function _main *****************
   269 ;; Defined at:
   270 ;;		line 4 in file "main.c"
   271 ;; Parameters:    Size  Location     Type
   272 ;;		None
   273 ;; Auto vars:     Size  Location     Type
   274 ;;  i               2    8[COMMON] int 
   275 ;;  i               2    6[COMMON] int 
   276 ;;  i               2    4[COMMON] int 
   277 ;;  i               2    2[COMMON] int 
   278 ;; Return value:  Size  Location     Type
   279 ;;                  1    wreg      void 
   280 ;; Registers used:
   281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   282 ;; Tracked objects:
   283 ;;		On entry : B00/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   287 ;;      Params:         0       0       0       0       0
   288 ;;      Locals:         8       0       0       0       0
   289 ;;      Temps:          2       0       0       0       0
   290 ;;      Totals:        10       0       0       0       0
   291 ;;Total ram usage:       10 bytes
   292 ;; Hardware stack levels used:    1
   293 ;; This function calls:
   294 ;;		Nothing
   295 ;; This function is called by:
   296 ;;		Startup code after reset
   297 ;; This function uses a non-reentrant model
   298 ;;
   299                           
   300                           
   301                           ;psect for function _main
   302  0740                     _main:	
   303                           
   304                           ;main.c: 5:     char const backward[] = {0x01, 0x02, 0x04, 0x08, '\0'};;main.c: 6:     c
      +                          har const forward[] = {0x08, 0x04, 0x02, 0x01, '\0'};;main.c: 7:     char const full[] =
      +                           {0x03, 0x06, 0x0C, 0x09, '\0'};;main.c: 8:     char const half[] = {0x01, 0x03, 0x02, 0
      +                          x06, 0x04, 0x0C, 0x08, 0x09, '\0'};;main.c: 9:     int const TIME = 100;;main.c: 10:    
      +                           TRISB = 0;
   305                           
   306                           ;incstack = 0
   307                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath]
   308  0740  1683               	bsf	3,5	;RP0=1, select bank1
   309  0741  1303               	bcf	3,6	;RP1=0, select bank1
   310  0742  0186               	clrf	6	;volatile
   311                           
   312                           ;main.c: 11:     TRISC = 255;
   313  0743  30FF               	movlw	255
   314  0744  0087               	movwf	7	;volatile
   315                           
   316                           ;main.c: 12:     TRISD = 0;
   317  0745  0188               	clrf	8	;volatile
   318                           
   319                           ;main.c: 13:     PORTB = 0;
   320  0746  1283               	bcf	3,5	;RP0=0, select bank0
   321  0747  1303               	bcf	3,6	;RP1=0, select bank0
   322  0748  0186               	clrf	6	;volatile
   323                           
   324                           ;main.c: 14:     PORTC = 0;
   325  0749  0187               	clrf	7	;volatile
   326                           
   327                           ;main.c: 15:     PORTD = 0;
   328  074A  0188               	clrf	8	;volatile
   329  074B  2FF0               	goto	l713
   330  074C                     l715:	
   331                           
   332                           ;main.c: 20:             int i = 0;
   333  074C  01F2               	clrf	main@i
   334  074D  01F3               	clrf	main@i+1
   335  074E                     l33:	
   336                           ;main.c: 25:             }
   337                           
   338                           ;main.c: 21:             while (forward[i] != '\0') {
   339                           
   340                           
   341                           ;main.c: 21:             while (forward[i] != '\0') {
   342  074E  0872               	movf	main@i,w
   343  074F  3E0F               	addlw	low ((main@forward-__stringbase)| (0+32768))
   344  0750  0084               	movwf	4
   345  0751  120A  118A  2003  120A  118A  	fcall	stringdir
   346  0756  3A00               	xorlw	0
   347  0757  1903               	btfsc	3,2
   348  0758  2FF0               	goto	l713
   349                           
   350                           ;main.c: 22:                 PORTD = PORTB = forward[i++];
   351  0759  0872               	movf	main@i,w
   352  075A  3E0F               	addlw	low ((main@forward-__stringbase)| (0+32768))
   353  075B  0084               	movwf	4
   354  075C  120A  118A  2003  120A  118A  	fcall	stringdir
   355  0761  1283               	bcf	3,5	;RP0=0, select bank0
   356  0762  1303               	bcf	3,6	;RP1=0, select bank0
   357  0763  0086               	movwf	6	;volatile
   358  0764  0088               	movwf	8	;volatile
   359  0765  3001               	movlw	1
   360  0766  07F2               	addwf	main@i,f
   361  0767  1803               	skipnc
   362  0768  0AF3               	incf	main@i+1,f
   363  0769  3000               	movlw	0
   364  076A  07F3               	addwf	main@i+1,f
   365                           
   366                           ;main.c: 24:                 _delay((unsigned long)((TIME)*(4000000/4000.0)));
   367  076B  3082               	movlw	130
   368  076C  00F1               	movwf	??_main+1
   369  076D  30DD               	movlw	221
   370  076E  00F0               	movwf	??_main
   371  076F                     u177:	
   372  076F  0BF0               	decfsz	??_main,f
   373  0770  2F6F               	goto	u177
   374  0771  0BF1               	decfsz	??_main+1,f
   375  0772  2F6F               	goto	u177
   376  0773  2F74               	nop2
   377  0774  2F4E               	goto	l33
   378  0775                     l725:	
   379                           ;main.c: 27:         } else if (PORTCbits.RC1 == 1) {
   380                           
   381                           
   382                           ;main.c: 28:             int i = 0;
   383  0775  01F4               	clrf	main@i_74
   384  0776  01F5               	clrf	main@i_74+1
   385  0777                     l38:	
   386                           ;main.c: 33:             }
   387                           
   388                           ;main.c: 29:             while (backward[i] != '\0') {
   389                           
   390                           
   391                           ;main.c: 29:             while (backward[i] != '\0') {
   392  0777  0874               	movf	main@i_74,w
   393  0778  3E14               	addlw	low ((main@backward-__stringbase)| (0+32768))
   394  0779  0084               	movwf	4
   395  077A  120A  118A  2003  120A  118A  	fcall	stringdir
   396  077F  3A00               	xorlw	0
   397  0780  1903               	btfsc	3,2
   398  0781  2FF0               	goto	l713
   399                           
   400                           ;main.c: 30:                 PORTD = PORTB = backward[i++];
   401  0782  0874               	movf	main@i_74,w
   402  0783  3E14               	addlw	low ((main@backward-__stringbase)| (0+32768))
   403  0784  0084               	movwf	4
   404  0785  120A  118A  2003  120A  118A  	fcall	stringdir
   405  078A  1283               	bcf	3,5	;RP0=0, select bank0
   406  078B  1303               	bcf	3,6	;RP1=0, select bank0
   407  078C  0086               	movwf	6	;volatile
   408  078D  0088               	movwf	8	;volatile
   409  078E  3001               	movlw	1
   410  078F  07F4               	addwf	main@i_74,f
   411  0790  1803               	skipnc
   412  0791  0AF5               	incf	main@i_74+1,f
   413  0792  3000               	movlw	0
   414  0793  07F5               	addwf	main@i_74+1,f
   415                           
   416                           ;main.c: 32:                 _delay((unsigned long)((TIME)*(4000000/4000.0)));
   417  0794  3082               	movlw	130
   418  0795  00F1               	movwf	??_main+1
   419  0796  30DD               	movlw	221
   420  0797  00F0               	movwf	??_main
   421  0798                     u187:	
   422  0798  0BF0               	decfsz	??_main,f
   423  0799  2F98               	goto	u187
   424  079A  0BF1               	decfsz	??_main+1,f
   425  079B  2F98               	goto	u187
   426  079C  2F9D               	nop2
   427  079D  2F77               	goto	l38
   428  079E                     l735:	
   429                           ;main.c: 35:         } else if (PORTCbits.RC2 == 1) {
   430                           
   431                           
   432                           ;main.c: 36:             int i = 0;
   433  079E  01F6               	clrf	main@i_75
   434  079F  01F7               	clrf	main@i_75+1
   435  07A0                     l43:	
   436                           ;main.c: 41:             }
   437                           
   438                           ;main.c: 37:             while (full[i] != '\0') {
   439                           
   440                           
   441                           ;main.c: 37:             while (full[i] != '\0') {
   442  07A0  0876               	movf	main@i_75,w
   443  07A1  3E0A               	addlw	low ((main@full-__stringbase)| (0+32768))
   444  07A2  0084               	movwf	4
   445  07A3  120A  118A  2003  120A  118A  	fcall	stringdir
   446  07A8  3A00               	xorlw	0
   447  07A9  1903               	btfsc	3,2
   448  07AA  2FF0               	goto	l713
   449                           
   450                           ;main.c: 38:                 PORTD = PORTB = full[i++];
   451  07AB  0876               	movf	main@i_75,w
   452  07AC  3E0A               	addlw	low ((main@full-__stringbase)| (0+32768))
   453  07AD  0084               	movwf	4
   454  07AE  120A  118A  2003  120A  118A  	fcall	stringdir
   455  07B3  1283               	bcf	3,5	;RP0=0, select bank0
   456  07B4  1303               	bcf	3,6	;RP1=0, select bank0
   457  07B5  0086               	movwf	6	;volatile
   458  07B6  0088               	movwf	8	;volatile
   459  07B7  3001               	movlw	1
   460  07B8  07F6               	addwf	main@i_75,f
   461  07B9  1803               	skipnc
   462  07BA  0AF7               	incf	main@i_75+1,f
   463  07BB  3000               	movlw	0
   464  07BC  07F7               	addwf	main@i_75+1,f
   465                           
   466                           ;main.c: 40:                 _delay((unsigned long)((TIME)*(4000000/4000.0)));
   467  07BD  3082               	movlw	130
   468  07BE  00F1               	movwf	??_main+1
   469  07BF  30DD               	movlw	221
   470  07C0  00F0               	movwf	??_main
   471  07C1                     u197:	
   472  07C1  0BF0               	decfsz	??_main,f
   473  07C2  2FC1               	goto	u197
   474  07C3  0BF1               	decfsz	??_main+1,f
   475  07C4  2FC1               	goto	u197
   476  07C5  2FC6               	nop2
   477  07C6  2FA0               	goto	l43
   478  07C7                     l745:	
   479                           ;main.c: 43:         } else if (PORTCbits.RC3 == 1) {
   480                           
   481                           
   482                           ;main.c: 44:             int i = 0;
   483  07C7  01F8               	clrf	main@i_76
   484  07C8  01F9               	clrf	main@i_76+1
   485  07C9                     l48:	
   486                           ;main.c: 49:             }
   487                           
   488                           ;main.c: 45:             while (half[i] != '\0') {
   489                           
   490                           
   491                           ;main.c: 45:             while (half[i] != '\0') {
   492  07C9  0878               	movf	main@i_76,w
   493  07CA  3E01               	addlw	low ((main@half-__stringbase)| (0+32768))
   494  07CB  0084               	movwf	4
   495  07CC  120A  118A  2003  120A  118A  	fcall	stringdir
   496  07D1  3A00               	xorlw	0
   497  07D2  1903               	btfsc	3,2
   498  07D3  2FF0               	goto	l713
   499                           
   500                           ;main.c: 46:                 PORTB = PORTD = half[i++];
   501  07D4  0878               	movf	main@i_76,w
   502  07D5  3E01               	addlw	low ((main@half-__stringbase)| (0+32768))
   503  07D6  0084               	movwf	4
   504  07D7  120A  118A  2003  120A  118A  	fcall	stringdir
   505  07DC  1283               	bcf	3,5	;RP0=0, select bank0
   506  07DD  1303               	bcf	3,6	;RP1=0, select bank0
   507  07DE  0088               	movwf	8	;volatile
   508  07DF  0086               	movwf	6	;volatile
   509  07E0  3001               	movlw	1
   510  07E1  07F8               	addwf	main@i_76,f
   511  07E2  1803               	skipnc
   512  07E3  0AF9               	incf	main@i_76+1,f
   513  07E4  3000               	movlw	0
   514  07E5  07F9               	addwf	main@i_76+1,f
   515                           
   516                           ;main.c: 48:                 _delay((unsigned long)((TIME)*(4000000/4000.0)));
   517  07E6  3082               	movlw	130
   518  07E7  00F1               	movwf	??_main+1
   519  07E8  30DD               	movlw	221
   520  07E9  00F0               	movwf	??_main
   521  07EA                     u207:	
   522  07EA  0BF0               	decfsz	??_main,f
   523  07EB  2FEA               	goto	u207
   524  07EC  0BF1               	decfsz	??_main+1,f
   525  07ED  2FEA               	goto	u207
   526  07EE  2FEF               	nop2
   527  07EF  2FC9               	goto	l48
   528  07F0                     l713:	
   529                           ;main.c: 51:         } else {
   530                           
   531                           
   532                           ;main.c: 19:         if (PORTCbits.RC0 == 1) {
   533  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   534  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   535  07F2  1807               	btfsc	7,0	;volatile
   536  07F3  2F4C               	goto	l715
   537  07F4  1887               	btfsc	7,1	;volatile
   538  07F5  2F75               	goto	l725
   539  07F6  1907               	btfsc	7,2	;volatile
   540  07F7  2F9E               	goto	l735
   541  07F8  1987               	btfsc	7,3	;volatile
   542  07F9  2FC7               	goto	l745
   543                           
   544                           ;main.c: 52:             PORTB = 0;
   545  07FA  0186               	clrf	6	;volatile
   546  07FB  2FF0               	goto	l713
   547  07FC                     __end_of_main:	
   548  007E                     btemp	set	126	;btemp
   549  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    26
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _main                                                10    10      0     188
                                              0 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue May 07 17:09:15 2019

                      pc 0002                       l33 074E                       l43 07A0  
                     l38 0777                       l48 07C9                       fsr 0004  
                    l713 07F0                      l715 074C                      l725 0775  
                    l735 079E                      l745 07C7                      u207 07EA  
                    u177 076F                      u187 0798                      u197 07C1  
                    fsr0 0004              main@forward 0017                     _main 0740  
                   btemp 007E                     start 0000             main@backward 001C  
                  ?_main 0070                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    main@i 0072                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0070         __end_ofmain@TIME 0023  
       __end_ofmain@half 0012         __end_ofmain@full 0017  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 0740               __stringtab 0003  
   end_of_initialization 07FC                _PORTCbits 0007      start_initialization 07FC  
              ___latbits 0002                __pstrings 0003              __stringbase 0008  
     __end_of__stringtab 0009     __end_ofmain@backward 0021            __size_of_main 00BC  
               main@TIME 0021                 main@i_74 0074                 main@i_75 0076  
               main@i_76 0078                 main@half 0009                 main@full 0012  
              stringcode 0003      __end_ofmain@forward 001C                 stringdir 0003  
               stringtab 0003  
