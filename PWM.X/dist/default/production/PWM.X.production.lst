

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun May 12 17:59:06 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.05
    36                           ; Generated 20/12/2018 GMT
    37                           ; 
    38                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F877A Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0098                     	;# 
   178  0099                     	;# 
   179  009C                     	;# 
   180  009D                     	;# 
   181  009E                     	;# 
   182  009F                     	;# 
   183  010C                     	;# 
   184  010D                     	;# 
   185  010E                     	;# 
   186  010F                     	;# 
   187  018C                     	;# 
   188  018D                     	;# 
   189                           
   190                           	psect	strings
   191  0800                     __pstrings:	
   192  0800                     stringtab:	
   193  0800                     __stringtab:	
   194                           
   195                           ;	String table - string pointers are 1 byte each
   196  0800  1BFF               	btfsc	btemp+1,7
   197  0801  280A               	ljmp	stringcode
   198  0802  1383               	bcf	3,7
   199  0803  187F               	btfsc	btemp+1,0
   200  0804  1783               	bsf	3,7
   201  0805  0800               	movf	0,w
   202  0806  0A84               	incf	4,f
   203  0807  1903               	skipnz
   204  0808  0AFF               	incf	btemp+1,f
   205  0809  0008               	return
   206  080A                     stringcode:	
   207  080A                     stringdir:	
   208  080A  3008               	movlw	high stringdir
   209  080B  008A               	movwf	10
   210  080C  0804               	movf	4,w
   211  080D  0A84               	incf	4,f
   212  080E  0782               	addwf	2,f
   213  080F                     __stringbase:	
   214  080F  3400               	retlw	0
   215  0810                     __end_of__stringtab:	
   216  0810                     _dpowers:	
   217  0810  3401               	retlw	1
   218  0811  3400               	retlw	0
   219  0812  340A               	retlw	10
   220  0813  3400               	retlw	0
   221  0814  3464               	retlw	100
   222  0815  3400               	retlw	0
   223  0816  34E8               	retlw	232
   224  0817  3403               	retlw	3
   225  0818  3410               	retlw	16
   226  0819  3427               	retlw	39
   227  081A                     __end_of_dpowers:	
   228  0006                     _PORTB	set	6
   229  001E                     _ADRESH	set	30
   230  001F                     _ADCON0bits	set	31
   231  0008                     _PORTD	set	8
   232  001B                     _CCPR2L	set	27
   233  0015                     _CCPR1L	set	21
   234  0031                     _RB1	set	49
   235  0030                     _RB0	set	48
   236  0043                     _RD3	set	67
   237  0042                     _RD2	set	66
   238  0047                     _RD7	set	71
   239  0046                     _RD6	set	70
   240  0045                     _RD5	set	69
   241  0044                     _RD4	set	68
   242  0092                     _TMR2ON	set	146
   243  0091                     _T2CKPS1	set	145
   244  0090                     _T2CKPS0	set	144
   245  00BA                     _CCP1M2	set	186
   246  00BB                     _CCP1M3	set	187
   247  00EA                     _CCP2M2	set	234
   248  00EB                     _CCP2M3	set	235
   249  00EC                     _CCP2Y	set	236
   250  00ED                     _CCP2X	set	237
   251  00BC                     _CCP1Y	set	188
   252  00BD                     _CCP1X	set	189
   253  0086                     _TRISB	set	134
   254  009E                     _ADRESL	set	158
   255  009F                     _ADCON1bits	set	159
   256  0088                     _TRISD	set	136
   257  0092                     _PR2	set	146
   258  0439                     _TRISC1	set	1081
   259  043A                     _TRISC2	set	1082
   260  081A                     STR_2:	
   261  081A  344D               	retlw	77	;'M'
   262  081B  346F               	retlw	111	;'o'
   263  081C  3464               	retlw	100	;'d'
   264  081D  3475               	retlw	117	;'u'
   265  081E  346C               	retlw	108	;'l'
   266  081F  346F               	retlw	111	;'o'
   267  0820  3420               	retlw	32	;' '
   268  0821  3469               	retlw	105	;'i'
   269  0822  346E               	retlw	110	;'n'
   270  0823  3469               	retlw	105	;'i'
   271  0824  3463               	retlw	99	;'c'
   272  0825  3469               	retlw	105	;'i'
   273  0826  3461               	retlw	97	;'a'
   274  0827  3464               	retlw	100	;'d'
   275  0828  346F               	retlw	111	;'o'
   276  0829  3400               	retlw	0
   277  082A                     STR_1:	
   278  082A  3449               	retlw	73	;'I'
   279  082B  346E               	retlw	110	;'n'
   280  082C  3469               	retlw	105	;'i'
   281  082D  3463               	retlw	99	;'c'
   282  082E  3469               	retlw	105	;'i'
   283  082F  3461               	retlw	97	;'a'
   284  0830  346E               	retlw	110	;'n'
   285  0831  3464               	retlw	100	;'d'
   286  0832  346F               	retlw	111	;'o'
   287  0833  3420               	retlw	32	;' '
   288  0834  3450               	retlw	80	;'P'
   289  0835  3457               	retlw	87	;'W'
   290  0836  344D               	retlw	77	;'M'
   291  0837  3400               	retlw	0
   292  0838                     STR_3:	
   293  0838  3450               	retlw	80	;'P'
   294  0839  3457               	retlw	87	;'W'
   295  083A  344D               	retlw	77	;'M'
   296  083B  343A               	retlw	58	;':'
   297  083C  3425               	retlw	37	;'%'
   298  083D  3464               	retlw	100	;'d'
   299  083E  3425               	retlw	37	;'%'
   300  083F  3425               	retlw	37	;'%'
   301  0840  3400               	retlw	0
   302  0838                     
   303                           	psect	cinit
   304  07FC                     start_initialization:	
   305                           ; #config settings
   306                           
   307  07FC                     __initialization:	
   308  07FC                     end_of_initialization:	
   309                           ;End of C runtime variable initialization code
   310                           
   311  07FC                     __end_of__initialization:	
   312  07FC  0183               	clrf	3
   313  07FD  120A  118A  2B12   	ljmp	_main	;jump to C main() function
   314                           
   315                           	psect	cstackBANK1
   316  00A0                     __pcstackBANK1:	
   317  00A0                     main@entero:	
   318                           
   319                           ; 16 bytes @ 0x0
   320  00A0                     	ds	16
   321  00B0                     main@v:	
   322                           
   323                           ; 2 bytes @ 0x10
   324  00B0                     	ds	2
   325  00B2                     main@m:	
   326                           
   327                           ; 2 bytes @ 0x12
   328  00B2                     	ds	2
   329  00B4                     main@pwm2:	
   330                           
   331                           ; 2 bytes @ 0x14
   332  00B4                     	ds	2
   333                           
   334                           	psect	cstackCOMMON
   335  0070                     __pcstackCOMMON:	
   336  0070                     ?_setTMR2:	
   337  0070                     ??_setTMR2:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?_setPR2:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ??_setPR2:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_pwmInit1:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_pwmInit2:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ?_lcdPort:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ??_lcdPort:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?_lcdCmd:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ?_lcdClear:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     ?_lcdInit:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ?_lcdWriteChar:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ?_adcInit:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ??_adcInit:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ?_main:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ?__Umul8_16:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ?_adcRead:	
   383                           ; 2 bytes @ 0x0
   384                           
   385  0070                     ?___lwdiv:	
   386                           ; 2 bytes @ 0x0
   387                           
   388  0070                     ?___xxtofl:	
   389                           ; 2 bytes @ 0x0
   390                           
   391  0070                     setTMR2@pwm:	
   392                           ; 4 bytes @ 0x0
   393                           
   394  0070                     lcdPort@a:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     __Umul8_16@multiplicand:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     adcRead@adcChannel:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ___lwdiv@divisor:	
   404                           ; 2 bytes @ 0x0
   405                           
   406  0070                     ___xxtofl@val:	
   407                           ; 2 bytes @ 0x0
   408                           
   409                           
   410                           ; 4 bytes @ 0x0
   411  0070                     	ds	1
   412  0071                     ??_pwmInit1:	
   413  0071                     ??_pwmInit2:	
   414                           ; 1 bytes @ 0x1
   415                           
   416  0071                     ??_lcdCmd:	
   417                           ; 1 bytes @ 0x1
   418                           
   419  0071                     ??_lcdWriteChar:	
   420                           ; 1 bytes @ 0x1
   421                           
   422                           
   423                           ; 1 bytes @ 0x1
   424  0071                     	ds	1
   425  0072                     ??__Umul8_16:	
   426  0072                     ??_adcRead:	
   427                           ; 1 bytes @ 0x2
   428                           
   429  0072                     lcdWriteChar@temp:	
   430                           ; 1 bytes @ 0x2
   431                           
   432  0072                     ___lwdiv@dividend:	
   433                           ; 1 bytes @ 0x2
   434                           
   435                           
   436                           ; 2 bytes @ 0x2
   437  0072                     	ds	1
   438  0073                     lcdCmd@a:	
   439  0073                     lcdWriteChar@y:	
   440                           ; 1 bytes @ 0x3
   441                           
   442                           
   443                           ; 1 bytes @ 0x3
   444  0073                     	ds	1
   445  0074                     ??_lcdClear:	
   446  0074                     ?_lcdSetCursor:	
   447                           ; 1 bytes @ 0x4
   448                           
   449  0074                     ??_lcdInit:	
   450                           ; 1 bytes @ 0x4
   451                           
   452  0074                     ??___lwdiv:	
   453                           ; 1 bytes @ 0x4
   454                           
   455  0074                     ??___xxtofl:	
   456                           ; 1 bytes @ 0x4
   457                           
   458  0074                     lcdSetCursor@b:	
   459                           ; 1 bytes @ 0x4
   460                           
   461  0074                     lcdWriteChar@a:	
   462                           ; 1 bytes @ 0x4
   463                           
   464  0074                     __Umul8_16@product:	
   465                           ; 1 bytes @ 0x4
   466                           
   467                           
   468                           ; 2 bytes @ 0x4
   469  0074                     	ds	1
   470  0075                     ??_lcdSetCursor:	
   471  0075                     ?_lcdPrint:	
   472                           ; 1 bytes @ 0x5
   473                           
   474  0075                     lcdPrint@a:	
   475                           ; 1 bytes @ 0x5
   476                           
   477  0075                     ___lwdiv@quotient:	
   478                           ; 2 bytes @ 0x5
   479                           
   480                           
   481                           ; 2 bytes @ 0x5
   482  0075                     	ds	1
   483  0076                     __Umul8_16@word_mpld:	
   484                           
   485                           ; 2 bytes @ 0x6
   486  0076                     	ds	1
   487  0077                     ??_lcdPrint:	
   488  0077                     lcdSetCursor@a:	
   489                           ; 1 bytes @ 0x7
   490                           
   491  0077                     ___lwdiv@counter:	
   492                           ; 1 bytes @ 0x7
   493                           
   494                           
   495                           ; 1 bytes @ 0x7
   496  0077                     	ds	1
   497  0078                     ?___lwmod:	
   498  0078                     lcdSetCursor@z:	
   499                           ; 2 bytes @ 0x8
   500                           
   501  0078                     ___xxtofl@sign:	
   502                           ; 1 bytes @ 0x8
   503                           
   504  0078                     __Umul8_16@multiplier:	
   505                           ; 1 bytes @ 0x8
   506                           
   507  0078                     ___lwmod@divisor:	
   508                           ; 1 bytes @ 0x8
   509                           
   510                           
   511                           ; 2 bytes @ 0x8
   512  0078                     	ds	1
   513  0079                     lcdSetCursor@y:	
   514  0079                     ___xxtofl@exp:	
   515                           ; 1 bytes @ 0x9
   516                           
   517                           
   518                           ; 1 bytes @ 0x9
   519  0079                     	ds	1
   520  007A                     lcdSetCursor@temp:	
   521  007A                     lcdPrint@i:	
   522                           ; 1 bytes @ 0xA
   523                           
   524  007A                     ___lwmod@dividend:	
   525                           ; 2 bytes @ 0xA
   526                           
   527  007A                     ___xxtofl@arg:	
   528                           ; 2 bytes @ 0xA
   529                           
   530                           
   531                           ; 4 bytes @ 0xA
   532  007A                     	ds	2
   533  007C                     ??___lwmod:	
   534                           
   535                           ; 1 bytes @ 0xC
   536  007C                     	ds	1
   537  007D                     ___lwmod@counter:	
   538                           
   539                           ; 1 bytes @ 0xD
   540  007D                     	ds	1
   541                           
   542                           	psect	cstackBANK0
   543  0020                     __pcstackBANK0:	
   544  0020                     ?_sprintf:	
   545  0020                     ?___flmul:	
   546                           ; 2 bytes @ 0x0
   547                           
   548  0020                     sprintf@f:	
   549                           ; 4 bytes @ 0x0
   550                           
   551  0020                     ___flmul@b:	
   552                           ; 1 bytes @ 0x0
   553                           
   554                           
   555                           ; 4 bytes @ 0x0
   556  0020                     	ds	3
   557  0023                     ??_sprintf:	
   558                           
   559                           ; 1 bytes @ 0x3
   560  0023                     	ds	1
   561  0024                     ___flmul@a:	
   562                           
   563                           ; 4 bytes @ 0x4
   564  0024                     	ds	2
   565  0026                     sprintf@ap:	
   566                           
   567                           ; 1 bytes @ 0x6
   568  0026                     	ds	1
   569  0027                     sprintf@flag:	
   570                           
   571                           ; 1 bytes @ 0x7
   572  0027                     	ds	1
   573  0028                     ??___flmul:	
   574  0028                     sprintf@prec:	
   575                           ; 1 bytes @ 0x8
   576                           
   577                           
   578                           ; 1 bytes @ 0x8
   579  0028                     	ds	1
   580  0029                     sprintf@val:	
   581                           
   582                           ; 2 bytes @ 0x9
   583  0029                     	ds	2
   584  002B                     sprintf@sp:	
   585                           
   586                           ; 1 bytes @ 0xB
   587  002B                     	ds	1
   588  002C                     sprintf@c:	
   589                           
   590                           ; 1 bytes @ 0xC
   591  002C                     	ds	1
   592  002D                     ___flmul@sign:	
   593                           
   594                           ; 1 bytes @ 0xD
   595  002D                     	ds	1
   596  002E                     ___flmul@grs:	
   597                           
   598                           ; 4 bytes @ 0xE
   599  002E                     	ds	4
   600  0032                     ___flmul@aexp:	
   601                           
   602                           ; 1 bytes @ 0x12
   603  0032                     	ds	1
   604  0033                     ___flmul@bexp:	
   605                           
   606                           ; 1 bytes @ 0x13
   607  0033                     	ds	1
   608  0034                     ___flmul@prod:	
   609                           
   610                           ; 4 bytes @ 0x14
   611  0034                     	ds	4
   612  0038                     ___flmul@temp:	
   613                           
   614                           ; 2 bytes @ 0x18
   615  0038                     	ds	2
   616  003A                     ?___fldiv:	
   617  003A                     ___fldiv@a:	
   618                           ; 4 bytes @ 0x1A
   619                           
   620                           
   621                           ; 4 bytes @ 0x1A
   622  003A                     	ds	4
   623  003E                     ___fldiv@b:	
   624                           
   625                           ; 4 bytes @ 0x1E
   626  003E                     	ds	4
   627  0042                     ??___fldiv:	
   628                           
   629                           ; 1 bytes @ 0x22
   630  0042                     	ds	5
   631  0047                     ___fldiv@rem:	
   632                           
   633                           ; 4 bytes @ 0x27
   634  0047                     	ds	4
   635  004B                     ___fldiv@sign:	
   636                           
   637                           ; 1 bytes @ 0x2B
   638  004B                     	ds	1
   639  004C                     ___fldiv@new_exp:	
   640                           
   641                           ; 2 bytes @ 0x2C
   642  004C                     	ds	2
   643  004E                     ___fldiv@grs:	
   644                           
   645                           ; 4 bytes @ 0x2E
   646  004E                     	ds	4
   647  0052                     ___fldiv@bexp:	
   648                           
   649                           ; 1 bytes @ 0x32
   650  0052                     	ds	1
   651  0053                     ___fldiv@aexp:	
   652                           
   653                           ; 1 bytes @ 0x33
   654  0053                     	ds	1
   655  0054                     ?___fltol:	
   656  0054                     ___fltol@f1:	
   657                           ; 4 bytes @ 0x34
   658                           
   659                           
   660                           ; 4 bytes @ 0x34
   661  0054                     	ds	4
   662  0058                     ??___fltol:	
   663                           
   664                           ; 1 bytes @ 0x38
   665  0058                     	ds	5
   666  005D                     ___fltol@sign1:	
   667                           
   668                           ; 1 bytes @ 0x3D
   669  005D                     	ds	1
   670  005E                     ___fltol@exp1:	
   671                           
   672                           ; 1 bytes @ 0x3E
   673  005E                     	ds	1
   674  005F                     ?_pwmSetDuty1:	
   675  005F                     ?_pwmSetDuty2:	
   676                           ; 1 bytes @ 0x3F
   677                           
   678  005F                     pwmSetDuty1@duty:	
   679                           ; 1 bytes @ 0x3F
   680                           
   681  005F                     pwmSetDuty2@duty:	
   682                           ; 2 bytes @ 0x3F
   683                           
   684                           
   685                           ; 2 bytes @ 0x3F
   686  005F                     	ds	2
   687  0061                     ??_pwmSetDuty1:	
   688  0061                     ??_pwmSetDuty2:	
   689                           ; 1 bytes @ 0x41
   690                           
   691                           
   692                           ; 1 bytes @ 0x41
   693  0061                     	ds	2
   694  0063                     ??_main:	
   695                           
   696                           ; 1 bytes @ 0x43
   697  0063                     	ds	2
   698                           
   699                           	psect	maintext
   700  0312                     __pmaintext:	
   701 ;;
   702 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   703 ;;
   704 ;; *************** function _main *****************
   705 ;; Defined at:
   706 ;;		line 9 in file "main.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;		None
   709 ;; Auto vars:     Size  Location     Type
   710 ;;  entero         16    0[BANK1 ] unsigned char [16]
   711 ;;  m               2   18[BANK1 ] unsigned int 
   712 ;;  v               2   16[BANK1 ] unsigned int 
   713 ;;  pwm2            2   20[BANK1 ] unsigned int 
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      void 
   716 ;; Registers used:
   717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   718 ;; Tracked objects:
   719 ;;		On entry : B00/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   723 ;;      Params:         0       0       0       0       0
   724 ;;      Locals:         0       0      22       0       0
   725 ;;      Temps:          0       2       0       0       0
   726 ;;      Totals:         0       2      22       0       0
   727 ;;Total ram usage:       24 bytes
   728 ;; Hardware stack levels required when called:    3
   729 ;; This function calls:
   730 ;;		___fldiv
   731 ;;		___flmul
   732 ;;		___fltol
   733 ;;		___xxtofl
   734 ;;		_adcInit
   735 ;;		_adcRead
   736 ;;		_lcdClear
   737 ;;		_lcdInit
   738 ;;		_lcdPrint
   739 ;;		_lcdSetCursor
   740 ;;		_pwmInit1
   741 ;;		_pwmInit2
   742 ;;		_pwmSetDuty1
   743 ;;		_pwmSetDuty2
   744 ;;		_sprintf
   745 ;; This function is called by:
   746 ;;		Startup code after reset
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           
   751                           ;psect for function _main
   752  0312                     _main:	
   753                           
   754                           ;main.c: 10:     TRISB = 255;
   755                           
   756                           ;incstack = 0
   757                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   758  0312  30FF               	movlw	255
   759  0313  1683               	bsf	3,5	;RP0=1, select bank1
   760  0314  1303               	bcf	3,6	;RP1=0, select bank1
   761  0315  0086               	movwf	6	;volatile
   762                           
   763                           ;main.c: 11:     PORTB = 0;
   764  0316  1283               	bcf	3,5	;RP0=0, select bank0
   765  0317  1303               	bcf	3,6	;RP1=0, select bank0
   766  0318  0186               	clrf	6	;volatile
   767                           
   768                           ;main.c: 12:     adcInit();
   769  0319  120A  158A  2471  120A  118A  	fcall	_adcInit
   770                           
   771                           ;main.c: 13:     lcdInit();
   772  031E  120A  158A  2620  120A  118A  	fcall	_lcdInit
   773                           
   774                           ;main.c: 14:     lcdClear();
   775  0323  120A  158A  2466  120A  118A  	fcall	_lcdClear
   776                           
   777                           ;main.c: 15:     lcdSetCursor(1, 1);
   778  0328  01F4               	clrf	lcdSetCursor@b
   779  0329  0AF4               	incf	lcdSetCursor@b,f
   780  032A  3001               	movlw	1
   781  032B  120A  158A  25D6  120A  118A  	fcall	_lcdSetCursor
   782                           
   783                           ;main.c: 16:     lcdPrint("Iniciando PWM");
   784  0330  301B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   785  0331  00F5               	movwf	lcdPrint@a
   786  0332  3080               	movlw	128
   787  0333  00F6               	movwf	lcdPrint@a+1
   788  0334  120A  158A  2599  120A  118A  	fcall	_lcdPrint
   789                           
   790                           ;main.c: 17:     _delay((unsigned long)((10)*(4000000/4000.0)));
   791  0339  300D               	movlw	13
   792  033A  1283               	bcf	3,5	;RP0=0, select bank0
   793  033B  1303               	bcf	3,6	;RP1=0, select bank0
   794  033C  00E4               	movwf	??_main+1
   795  033D  30FB               	movlw	251
   796  033E  00E3               	movwf	??_main
   797  033F                     u2777:	
   798  033F  0BE3               	decfsz	??_main,f
   799  0340  2B3F               	goto	u2777
   800  0341  0BE4               	decfsz	??_main+1,f
   801  0342  2B3F               	goto	u2777
   802                           
   803                           ;main.c: 19:     pwmInit1();
   804  0343  120A  158A  2452  120A  118A  	fcall	_pwmInit1
   805                           
   806                           ;main.c: 20:     pwmInit2();
   807  0348  120A  158A  245C  120A  118A  	fcall	_pwmInit2
   808                           
   809                           ;main.c: 21:     pwmSetDuty1(0);
   810  034D  3000               	movlw	0
   811  034E  1283               	bcf	3,5	;RP0=0, select bank0
   812  034F  1303               	bcf	3,6	;RP1=0, select bank0
   813  0350  00DF               	movwf	pwmSetDuty1@duty
   814  0351  00E0               	movwf	pwmSetDuty1@duty+1
   815  0352  120A  158A  26EE  120A  118A  	fcall	_pwmSetDuty1
   816                           
   817                           ;main.c: 22:     pwmSetDuty2(0);
   818  0357  3000               	movlw	0
   819  0358  1283               	bcf	3,5	;RP0=0, select bank0
   820  0359  1303               	bcf	3,6	;RP1=0, select bank0
   821  035A  00DF               	movwf	pwmSetDuty2@duty
   822  035B  00E0               	movwf	pwmSetDuty2@duty+1
   823  035C  120A  118A  2028  120A  118A  	fcall	_pwmSetDuty2
   824                           
   825                           ;main.c: 24:     lcdClear();
   826  0361  120A  158A  2466  120A  118A  	fcall	_lcdClear
   827                           
   828                           ;main.c: 25:     lcdSetCursor(1, 1);
   829  0366  01F4               	clrf	lcdSetCursor@b
   830  0367  0AF4               	incf	lcdSetCursor@b,f
   831  0368  3001               	movlw	1
   832  0369  120A  158A  25D6  120A  118A  	fcall	_lcdSetCursor
   833                           
   834                           ;main.c: 26:     lcdPrint("Modulo iniciado");
   835  036E  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   836  036F  00F5               	movwf	lcdPrint@a
   837  0370  3080               	movlw	128
   838  0371  00F6               	movwf	lcdPrint@a+1
   839  0372  120A  158A  2599  120A  118A  	fcall	_lcdPrint
   840                           
   841                           ;main.c: 27:     _delay((unsigned long)((100)*(4000000/4000.0)));
   842  0377  3082               	movlw	130
   843  0378  1283               	bcf	3,5	;RP0=0, select bank0
   844  0379  1303               	bcf	3,6	;RP1=0, select bank0
   845  037A  00E4               	movwf	??_main+1
   846  037B  30DD               	movlw	221
   847  037C  00E3               	movwf	??_main
   848  037D                     u2787:	
   849  037D  0BE3               	decfsz	??_main,f
   850  037E  2B7D               	goto	u2787
   851  037F  0BE4               	decfsz	??_main+1,f
   852  0380  2B7D               	goto	u2787
   853                           
   854                           ;main.c: 28:     lcdClear();
   855  0381  120A  158A  2466  120A  118A  	fcall	_lcdClear
   856                           
   857                           ;main.c: 29:     unsigned int pwm2 = 0;
   858  0386  1683               	bsf	3,5	;RP0=1, select bank1
   859  0387  1303               	bcf	3,6	;RP1=0, select bank1
   860  0388  01B4               	clrf	main@pwm2^(0+128)
   861  0389  01B5               	clrf	(main@pwm2+1)^(0+128)
   862  038A                     l2202:	
   863                           
   864                           ;main.c: 31:         unsigned int v = adcRead(0);
   865  038A  3000               	movlw	0
   866  038B  00F0               	movwf	adcRead@adcChannel
   867  038C  00F1               	movwf	adcRead@adcChannel+1
   868  038D  120A  158A  24D2  120A  118A  	fcall	_adcRead
   869  0392  0871               	movf	?_adcRead+1,w
   870  0393  1683               	bsf	3,5	;RP0=1, select bank1
   871  0394  1303               	bcf	3,6	;RP1=0, select bank1
   872  0395  00B1               	movwf	(main@v+1)^(0+128)
   873  0396  0870               	movf	?_adcRead,w
   874  0397  00B0               	movwf	main@v^(0+128)
   875                           
   876                           ;main.c: 32:         unsigned int m = ((float) v * 100) / 1023;
   877  0398  0830               	movf	main@v^(0+128),w
   878  0399  00F0               	movwf	___xxtofl@val
   879  039A  0831               	movf	(main@v+1)^(0+128),w
   880  039B  00F1               	movwf	___xxtofl@val+1
   881  039C  01F2               	clrf	___xxtofl@val+2
   882  039D  01F3               	clrf	___xxtofl@val+3
   883  039E  3000               	movlw	0
   884  039F  120A  158A  275D  120A  118A  	fcall	___xxtofl
   885  03A4  0873               	movf	?___xxtofl+3,w
   886  03A5  1283               	bcf	3,5	;RP0=0, select bank0
   887  03A6  1303               	bcf	3,6	;RP1=0, select bank0
   888  03A7  00A7               	movwf	___flmul@a+3
   889  03A8  0872               	movf	?___xxtofl+2,w
   890  03A9  00A6               	movwf	___flmul@a+2
   891  03AA  0871               	movf	?___xxtofl+1,w
   892  03AB  00A5               	movwf	___flmul@a+1
   893  03AC  0870               	movf	?___xxtofl,w
   894  03AD  00A4               	movwf	___flmul@a
   895  03AE  3042               	movlw	66
   896  03AF  00A3               	movwf	___flmul@b+3
   897  03B0  30C8               	movlw	200
   898  03B1  00A2               	movwf	___flmul@b+2
   899  03B2  3000               	movlw	0
   900  03B3  00A1               	movwf	___flmul@b+1
   901  03B4  3000               	movlw	0
   902  03B5  00A0               	movwf	___flmul@b
   903  03B6  120A  118A  24E7  120A  118A  	fcall	___flmul
   904  03BB  1283               	bcf	3,5	;RP0=0, select bank0
   905  03BC  1303               	bcf	3,6	;RP1=0, select bank0
   906  03BD  0823               	movf	?___flmul+3,w
   907  03BE  00C1               	movwf	___fldiv@b+3
   908  03BF  0822               	movf	?___flmul+2,w
   909  03C0  00C0               	movwf	___fldiv@b+2
   910  03C1  0821               	movf	?___flmul+1,w
   911  03C2  00BF               	movwf	___fldiv@b+1
   912  03C3  0820               	movf	?___flmul,w
   913  03C4  00BE               	movwf	___fldiv@b
   914  03C5  3044               	movlw	68
   915  03C6  00BD               	movwf	___fldiv@a+3
   916  03C7  307F               	movlw	127
   917  03C8  00BC               	movwf	___fldiv@a+2
   918  03C9  30C0               	movlw	192
   919  03CA  00BB               	movwf	___fldiv@a+1
   920  03CB  3000               	movlw	0
   921  03CC  00BA               	movwf	___fldiv@a
   922  03CD  120A  118A  216F  120A  118A  	fcall	___fldiv
   923  03D2  1283               	bcf	3,5	;RP0=0, select bank0
   924  03D3  1303               	bcf	3,6	;RP1=0, select bank0
   925  03D4  083D               	movf	?___fldiv+3,w
   926  03D5  00D7               	movwf	___fltol@f1+3
   927  03D6  083C               	movf	?___fldiv+2,w
   928  03D7  00D6               	movwf	___fltol@f1+2
   929  03D8  083B               	movf	?___fldiv+1,w
   930  03D9  00D5               	movwf	___fltol@f1+1
   931  03DA  083A               	movf	?___fldiv,w
   932  03DB  00D4               	movwf	___fltol@f1
   933  03DC  120A  158A  2681  120A  118A  	fcall	___fltol
   934  03E1  1283               	bcf	3,5	;RP0=0, select bank0
   935  03E2  1303               	bcf	3,6	;RP1=0, select bank0
   936  03E3  0855               	movf	?___fltol+1,w
   937  03E4  1683               	bsf	3,5	;RP0=1, select bank1
   938  03E5  1303               	bcf	3,6	;RP1=0, select bank1
   939  03E6  00B3               	movwf	(main@m+1)^(0+128)
   940  03E7  1283               	bcf	3,5	;RP0=0, select bank0
   941  03E8  1303               	bcf	3,6	;RP1=0, select bank0
   942  03E9  0854               	movf	?___fltol,w
   943  03EA  1683               	bsf	3,5	;RP0=1, select bank1
   944  03EB  1303               	bcf	3,6	;RP1=0, select bank1
   945  03EC  00B2               	movwf	main@m^(0+128)
   946                           
   947                           ;main.c: 33:         pwmSetDuty1(v);
   948  03ED  0831               	movf	(main@v+1)^(0+128),w
   949  03EE  1283               	bcf	3,5	;RP0=0, select bank0
   950  03EF  1303               	bcf	3,6	;RP1=0, select bank0
   951  03F0  00E0               	movwf	pwmSetDuty1@duty+1
   952  03F1  1683               	bsf	3,5	;RP0=1, select bank1
   953  03F2  1303               	bcf	3,6	;RP1=0, select bank1
   954  03F3  0830               	movf	main@v^(0+128),w
   955  03F4  1283               	bcf	3,5	;RP0=0, select bank0
   956  03F5  1303               	bcf	3,6	;RP1=0, select bank0
   957  03F6  00DF               	movwf	pwmSetDuty1@duty
   958  03F7  120A  158A  26EE  120A  118A  	fcall	_pwmSetDuty1
   959                           
   960                           ;main.c: 34:         char entero[16];;main.c: 35:         lcdClear();
   961  03FC  120A  158A  2466  120A  118A  	fcall	_lcdClear
   962                           
   963                           ;main.c: 36:         sprintf(entero, "PWM:%d%%", m);
   964  0401  3029               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   965  0402  1283               	bcf	3,5	;RP0=0, select bank0
   966  0403  1303               	bcf	3,6	;RP1=0, select bank0
   967  0404  00E3               	movwf	??_main
   968  0405  0863               	movf	??_main,w
   969  0406  00A0               	movwf	sprintf@f
   970  0407  1683               	bsf	3,5	;RP0=1, select bank1
   971  0408  1303               	bcf	3,6	;RP1=0, select bank1
   972  0409  0833               	movf	(main@m+1)^(0+128),w
   973  040A  1283               	bcf	3,5	;RP0=0, select bank0
   974  040B  1303               	bcf	3,6	;RP1=0, select bank0
   975  040C  00A2               	movwf	?_sprintf+2
   976  040D  1683               	bsf	3,5	;RP0=1, select bank1
   977  040E  1303               	bcf	3,6	;RP1=0, select bank1
   978  040F  0832               	movf	main@m^(0+128),w
   979  0410  1283               	bcf	3,5	;RP0=0, select bank0
   980  0411  1303               	bcf	3,6	;RP1=0, select bank0
   981  0412  00A1               	movwf	?_sprintf+1
   982  0413  30A0               	movlw	(low (main@entero| 0))& (0+255)
   983  0414  120A  118A  2097  120A  118A  	fcall	_sprintf
   984                           
   985                           ;main.c: 37:         lcdSetCursor(1, 1);
   986  0419  01F4               	clrf	lcdSetCursor@b
   987  041A  0AF4               	incf	lcdSetCursor@b,f
   988  041B  3001               	movlw	1
   989  041C  120A  158A  25D6  120A  118A  	fcall	_lcdSetCursor
   990                           
   991                           ;main.c: 38:         lcdPrint(entero);
   992  0421  30A0               	movlw	(low (main@entero| 0))& (0+255)
   993  0422  00F5               	movwf	lcdPrint@a
   994  0423  3000               	movlw	0
   995  0424  00F6               	movwf	lcdPrint@a+1
   996  0425  120A  158A  2599  120A  118A  	fcall	_lcdPrint
   997                           
   998                           ;main.c: 40:         if (RB0 == 1) {
   999  042A  1283               	bcf	3,5	;RP0=0, select bank0
  1000  042B  1303               	bcf	3,6	;RP1=0, select bank0
  1001  042C  1C06               	btfss	6,0	;volatile
  1002  042D  2C3E               	goto	l148
  1003                           
  1004                           ;main.c: 41:             if (pwm2 < 1024)
  1005  042E  3004               	movlw	4
  1006  042F  1683               	bsf	3,5	;RP0=1, select bank1
  1007  0430  1303               	bcf	3,6	;RP1=0, select bank1
  1008  0431  0235               	subwf	(main@pwm2+1)^(0+128),w
  1009  0432  3000               	movlw	0
  1010  0433  1903               	skipnz
  1011  0434  0234               	subwf	main@pwm2^(0+128),w
  1012  0435  1803               	skipnc
  1013  0436  2C5B               	goto	l150
  1014                           
  1015                           ;main.c: 42:                 pwmSetDuty2(++pwm2);
  1016  0437  3001               	movlw	1
  1017  0438  07B4               	addwf	main@pwm2^(0+128),f
  1018  0439  1803               	skipnc
  1019  043A  0AB5               	incf	(main@pwm2+1)^(0+128),f
  1020  043B  3000               	movlw	0
  1021  043C  07B5               	addwf	(main@pwm2+1)^(0+128),f
  1022  043D  2C4C               	goto	L1
  1023  043E                     l148:	
  1024  043E  1C86               	btfss	6,1	;volatile
  1025  043F  2C5B               	goto	l150
  1026                           
  1027                           ;main.c: 44:             if (pwm2 > 0)
  1028  0440  1683               	bsf	3,5	;RP0=1, select bank1
  1029  0441  1303               	bcf	3,6	;RP1=0, select bank1
  1030  0442  0834               	movf	main@pwm2^(0+128),w
  1031  0443  0435               	iorwf	(main@pwm2+1)^(0+128),w
  1032  0444  1903               	btfsc	3,2
  1033  0445  2C5B               	goto	l150
  1034                           
  1035                           ;main.c: 45:                 pwmSetDuty2(--pwm2);
  1036  0446  3001               	movlw	1
  1037  0447  02B4               	subwf	main@pwm2^(0+128),f
  1038  0448  3000               	movlw	0
  1039  0449  1C03               	skipc
  1040  044A  03B5               	decf	(main@pwm2+1)^(0+128),f
  1041  044B  02B5               	subwf	(main@pwm2+1)^(0+128),f
  1042  044C                     L1:	
  1043  044C  0835               	movf	(main@pwm2+1)^(0+128),w
  1044  044D  1283               	bcf	3,5	;RP0=0, select bank0
  1045  044E  1303               	bcf	3,6	;RP1=0, select bank0
  1046  044F  00E0               	movwf	pwmSetDuty2@duty+1
  1047  0450  1683               	bsf	3,5	;RP0=1, select bank1
  1048  0451  1303               	bcf	3,6	;RP1=0, select bank1
  1049  0452  0834               	movf	main@pwm2^(0+128),w
  1050  0453  1283               	bcf	3,5	;RP0=0, select bank0
  1051  0454  1303               	bcf	3,6	;RP1=0, select bank0
  1052  0455  00DF               	movwf	pwmSetDuty2@duty
  1053  0456  120A  118A  2028  120A  118A  	fcall	_pwmSetDuty2
  1054  045B                     l150:	
  1055                           
  1056                           ;main.c: 47:         m = ((float) pwm2 * 100) / 1023;
  1057  045B  1683               	bsf	3,5	;RP0=1, select bank1
  1058  045C  1303               	bcf	3,6	;RP1=0, select bank1
  1059  045D  0834               	movf	main@pwm2^(0+128),w
  1060  045E  00F0               	movwf	___xxtofl@val
  1061  045F  0835               	movf	(main@pwm2+1)^(0+128),w
  1062  0460  00F1               	movwf	___xxtofl@val+1
  1063  0461  01F2               	clrf	___xxtofl@val+2
  1064  0462  01F3               	clrf	___xxtofl@val+3
  1065  0463  3000               	movlw	0
  1066  0464  120A  158A  275D  120A  118A  	fcall	___xxtofl
  1067  0469  0873               	movf	?___xxtofl+3,w
  1068  046A  1283               	bcf	3,5	;RP0=0, select bank0
  1069  046B  1303               	bcf	3,6	;RP1=0, select bank0
  1070  046C  00A7               	movwf	___flmul@a+3
  1071  046D  0872               	movf	?___xxtofl+2,w
  1072  046E  00A6               	movwf	___flmul@a+2
  1073  046F  0871               	movf	?___xxtofl+1,w
  1074  0470  00A5               	movwf	___flmul@a+1
  1075  0471  0870               	movf	?___xxtofl,w
  1076  0472  00A4               	movwf	___flmul@a
  1077  0473  3042               	movlw	66
  1078  0474  00A3               	movwf	___flmul@b+3
  1079  0475  30C8               	movlw	200
  1080  0476  00A2               	movwf	___flmul@b+2
  1081  0477  3000               	movlw	0
  1082  0478  00A1               	movwf	___flmul@b+1
  1083  0479  3000               	movlw	0
  1084  047A  00A0               	movwf	___flmul@b
  1085  047B  120A  118A  24E7  120A  118A  	fcall	___flmul
  1086  0480  1283               	bcf	3,5	;RP0=0, select bank0
  1087  0481  1303               	bcf	3,6	;RP1=0, select bank0
  1088  0482  0823               	movf	?___flmul+3,w
  1089  0483  00C1               	movwf	___fldiv@b+3
  1090  0484  0822               	movf	?___flmul+2,w
  1091  0485  00C0               	movwf	___fldiv@b+2
  1092  0486  0821               	movf	?___flmul+1,w
  1093  0487  00BF               	movwf	___fldiv@b+1
  1094  0488  0820               	movf	?___flmul,w
  1095  0489  00BE               	movwf	___fldiv@b
  1096  048A  3044               	movlw	68
  1097  048B  00BD               	movwf	___fldiv@a+3
  1098  048C  307F               	movlw	127
  1099  048D  00BC               	movwf	___fldiv@a+2
  1100  048E  30C0               	movlw	192
  1101  048F  00BB               	movwf	___fldiv@a+1
  1102  0490  3000               	movlw	0
  1103  0491  00BA               	movwf	___fldiv@a
  1104  0492  120A  118A  216F  120A  118A  	fcall	___fldiv
  1105  0497  1283               	bcf	3,5	;RP0=0, select bank0
  1106  0498  1303               	bcf	3,6	;RP1=0, select bank0
  1107  0499  083D               	movf	?___fldiv+3,w
  1108  049A  00D7               	movwf	___fltol@f1+3
  1109  049B  083C               	movf	?___fldiv+2,w
  1110  049C  00D6               	movwf	___fltol@f1+2
  1111  049D  083B               	movf	?___fldiv+1,w
  1112  049E  00D5               	movwf	___fltol@f1+1
  1113  049F  083A               	movf	?___fldiv,w
  1114  04A0  00D4               	movwf	___fltol@f1
  1115  04A1  120A  158A  2681  120A  118A  	fcall	___fltol
  1116  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  1117  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  1118  04A8  0855               	movf	?___fltol+1,w
  1119  04A9  1683               	bsf	3,5	;RP0=1, select bank1
  1120  04AA  1303               	bcf	3,6	;RP1=0, select bank1
  1121  04AB  00B3               	movwf	(main@m+1)^(0+128)
  1122  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  1123  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  1124  04AE  0854               	movf	?___fltol,w
  1125  04AF  1683               	bsf	3,5	;RP0=1, select bank1
  1126  04B0  1303               	bcf	3,6	;RP1=0, select bank1
  1127  04B1  00B2               	movwf	main@m^(0+128)
  1128                           
  1129                           ;main.c: 48:         sprintf(entero, "PWM:%d%%", m);
  1130  04B2  3029               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1131  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  1132  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  1133  04B5  00E3               	movwf	??_main
  1134  04B6  0863               	movf	??_main,w
  1135  04B7  00A0               	movwf	sprintf@f
  1136  04B8  1683               	bsf	3,5	;RP0=1, select bank1
  1137  04B9  1303               	bcf	3,6	;RP1=0, select bank1
  1138  04BA  0833               	movf	(main@m+1)^(0+128),w
  1139  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  1140  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  1141  04BD  00A2               	movwf	?_sprintf+2
  1142  04BE  1683               	bsf	3,5	;RP0=1, select bank1
  1143  04BF  1303               	bcf	3,6	;RP1=0, select bank1
  1144  04C0  0832               	movf	main@m^(0+128),w
  1145  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  1146  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  1147  04C3  00A1               	movwf	?_sprintf+1
  1148  04C4  30A0               	movlw	(low (main@entero| 0))& (0+255)
  1149  04C5  120A  118A  2097  120A  118A  	fcall	_sprintf
  1150                           
  1151                           ;main.c: 49:         lcdSetCursor(2, 1);
  1152  04CA  01F4               	clrf	lcdSetCursor@b
  1153  04CB  0AF4               	incf	lcdSetCursor@b,f
  1154  04CC  3002               	movlw	2
  1155  04CD  120A  158A  25D6  120A  118A  	fcall	_lcdSetCursor
  1156                           
  1157                           ;main.c: 50:         lcdPrint(entero);
  1158  04D2  30A0               	movlw	(low (main@entero| 0))& (0+255)
  1159  04D3  00F5               	movwf	lcdPrint@a
  1160  04D4  3000               	movlw	0
  1161  04D5  00F6               	movwf	lcdPrint@a+1
  1162  04D6  120A  158A  2599  120A  118A  	fcall	_lcdPrint
  1163                           
  1164                           ;main.c: 51:         _delay((unsigned long)((50)*(4000000/4000.0)));
  1165  04DB  3041               	movlw	65
  1166  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  1167  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  1168  04DE  00E4               	movwf	??_main+1
  1169  04DF  30ED               	movlw	237
  1170  04E0  00E3               	movwf	??_main
  1171  04E1                     u2797:	
  1172  04E1  0BE3               	decfsz	??_main,f
  1173  04E2  2CE1               	goto	u2797
  1174  04E3  0BE4               	decfsz	??_main+1,f
  1175  04E4  2CE1               	goto	u2797
  1176  04E5  2CE6               	nop2
  1177                           
  1178                           ;main.c: 53:     }
  1179  04E6  2B8A               	goto	l2202
  1180  04E7                     __end_of_main:	
  1181                           
  1182                           	psect	text1
  1183  0097                     __ptext1:	
  1184 ;; *************** function _sprintf *****************
  1185 ;; Defined at:
  1186 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;  sp              1    wreg     PTR unsigned char 
  1189 ;;		 -> main@entero(16), 
  1190 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1191 ;;		 -> STR_4(9), STR_3(9), 
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1194 ;;		 -> main@entero(16), 
  1195 ;;  tmpval          4    0        struct .
  1196 ;;  val             2    9[BANK0 ] unsigned int 
  1197 ;;  cp              2    0        PTR const unsigned char 
  1198 ;;  len             2    0        unsigned int 
  1199 ;;  c               1   12[BANK0 ] unsigned char 
  1200 ;;  prec            1    8[BANK0 ] char 
  1201 ;;  flag            1    7[BANK0 ] unsigned char 
  1202 ;;  ap              1    6[BANK0 ] PTR void [1]
  1203 ;;		 -> ?_sprintf(2), 
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  2    0[BANK0 ] int 
  1206 ;; Registers used:
  1207 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1213 ;;      Params:         0       3       0       0       0
  1214 ;;      Locals:         0       7       0       0       0
  1215 ;;      Temps:          0       3       0       0       0
  1216 ;;      Totals:         0      13       0       0       0
  1217 ;;Total ram usage:       13 bytes
  1218 ;; Hardware stack levels used:    1
  1219 ;; Hardware stack levels required when called:    1
  1220 ;; This function calls:
  1221 ;;		___lwdiv
  1222 ;;		___lwmod
  1223 ;; This function is called by:
  1224 ;;		_main
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           
  1229                           ;psect for function _sprintf
  1230  0097                     _sprintf:	
  1231                           
  1232                           ;incstack = 0
  1233                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1234                           ;sprintf@sp stored from wreg
  1235  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1236  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1237  0099  00AB               	movwf	sprintf@sp
  1238                           
  1239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  1240  009A  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1241  009B  00A3               	movwf	??_sprintf
  1242  009C  0823               	movf	??_sprintf,w
  1243  009D  00A6               	movwf	sprintf@ap
  1244  009E                     l2156:	
  1245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1246                           
  1247                           
  1248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1249  009E  3001               	movlw	1
  1250  009F  07A0               	addwf	sprintf@f,f
  1251  00A0  30FF               	movlw	-1
  1252  00A1  0720               	addwf	sprintf@f,w
  1253  00A2  0084               	movwf	4
  1254  00A3  120A  158A  200A  120A  118A  	fcall	stringdir
  1255  00A8  00A3               	movwf	??_sprintf
  1256  00A9  0823               	movf	??_sprintf,w
  1257  00AA  00AC               	movwf	sprintf@c
  1258  00AB  082C               	movf	sprintf@c,w
  1259  00AC  1903               	btfsc	3,2
  1260  00AD  296A               	goto	l2158
  1261                           
  1262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  1263  00AE  3025               	movlw	37
  1264  00AF  062C               	xorwf	sprintf@c,w
  1265  00B0  1903               	btfsc	3,2
  1266  00B1  28BE               	goto	l2108
  1267  00B2                     l2104:	
  1268                           
  1269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  1270  00B2  082C               	movf	sprintf@c,w
  1271  00B3  00A3               	movwf	??_sprintf
  1272  00B4  082B               	movf	sprintf@sp,w
  1273  00B5  0084               	movwf	4
  1274  00B6  0823               	movf	??_sprintf,w
  1275  00B7  1383               	bcf	3,7	;select IRP bank0
  1276  00B8  0080               	movwf	0
  1277  00B9  3001               	movlw	1
  1278  00BA  00A3               	movwf	??_sprintf
  1279  00BB  0823               	movf	??_sprintf,w
  1280  00BC  07AB               	addwf	sprintf@sp,f
  1281                           
  1282                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  1283  00BD  289E               	goto	l2156
  1284  00BE                     l2108:	
  1285                           
  1286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  1287  00BE  01A7               	clrf	sprintf@flag
  1288                           
  1289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  1290  00BF  3001               	movlw	1
  1291  00C0  07A0               	addwf	sprintf@f,f
  1292  00C1  30FF               	movlw	-1
  1293  00C2  0720               	addwf	sprintf@f,w
  1294  00C3  0084               	movwf	4
  1295  00C4  120A  158A  200A  120A  118A  	fcall	stringdir
  1296  00C9  00AC               	movwf	sprintf@c
  1297  00CA  00A3               	movwf	??_sprintf
  1298  00CB  01A4               	clrf	??_sprintf+1
  1299                           
  1300                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1301                           ; Switch size 1, requested type "simple"
  1302                           ; Number of cases is 1, Range of values is 0 to 0
  1303                           ; switch strategies available:
  1304                           ; Name         Instructions Cycles
  1305                           ; simple_byte            4     3 (average)
  1306                           ; direct_byte           11     8 (fixed)
  1307                           ; jumptable            260     6 (fixed)
  1308                           ;	Chosen strategy is simple_byte
  1309  00CC  0824               	movf	??_sprintf+1,w
  1310  00CD  3A00               	xorlw	0	; case 0
  1311  00CE  1903               	skipnz
  1312  00CF  28D1               	goto	l2254
  1313  00D0  28B2               	goto	l2104
  1314  00D1                     l2254:	
  1315                           
  1316                           ; Switch size 1, requested type "simple"
  1317                           ; Number of cases is 3, Range of values is 0 to 105
  1318                           ; switch strategies available:
  1319                           ; Name         Instructions Cycles
  1320                           ; simple_byte           10     6 (average)
  1321                           ; jumptable            260     6 (fixed)
  1322                           ;	Chosen strategy is simple_byte
  1323  00D1  0823               	movf	??_sprintf,w
  1324  00D2  3A00               	xorlw	0	; case 0
  1325  00D3  1903               	skipnz
  1326  00D4  296A               	goto	l2158
  1327  00D5  3A64               	xorlw	100	; case 100
  1328  00D6  1903               	skipnz
  1329  00D7  28DC               	goto	l2118
  1330  00D8  3A0D               	xorlw	13	; case 105
  1331  00D9  1903               	skipnz
  1332  00DA  28DC               	goto	l2118
  1333  00DB  28B2               	goto	l2104
  1334  00DC                     l2118:	
  1335                           
  1336                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1337  00DC  0826               	movf	sprintf@ap,w
  1338  00DD  0084               	movwf	4
  1339  00DE  1383               	bcf	3,7	;select IRP bank0
  1340  00DF  0800               	movf	0,w
  1341  00E0  00A9               	movwf	sprintf@val
  1342  00E1  0A84               	incf	4,f
  1343  00E2  0800               	movf	0,w
  1344  00E3  00AA               	movwf	sprintf@val+1
  1345  00E4  3002               	movlw	2
  1346  00E5  00A3               	movwf	??_sprintf
  1347  00E6  0823               	movf	??_sprintf,w
  1348  00E7  07A6               	addwf	sprintf@ap,f
  1349                           
  1350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((int)val < 0) {
  1351  00E8  1FAA               	btfss	sprintf@val+1,7
  1352  00E9  28F3               	goto	l2128
  1353                           
  1354                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  1355  00EA  3003               	movlw	3
  1356  00EB  00A3               	movwf	??_sprintf
  1357  00EC  0823               	movf	??_sprintf,w
  1358  00ED  04A7               	iorwf	sprintf@flag,f
  1359                           
  1360                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  1361  00EE  09A9               	comf	sprintf@val,f
  1362  00EF  09AA               	comf	sprintf@val+1,f
  1363  00F0  0AA9               	incf	sprintf@val,f
  1364  00F1  1903               	skipnz
  1365  00F2  0AAA               	incf	sprintf@val+1,f
  1366  00F3                     l2128:	
  1367                           
  1368                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1369  00F3  01AC               	clrf	sprintf@c
  1370  00F4  0AAC               	incf	sprintf@c,f
  1371  00F5                     l2134:	
  1372                           
  1373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  1374  00F5  082C               	movf	sprintf@c,w
  1375  00F6  00A3               	movwf	??_sprintf
  1376  00F7  0723               	addwf	??_sprintf,w
  1377  00F8  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1378  00F9  0084               	movwf	4
  1379  00FA  120A  158A  200A  120A  118A  	fcall	stringdir
  1380  00FF  00A4               	movwf	??_sprintf+1
  1381  0100  120A  158A  200A  120A  118A  	fcall	stringdir
  1382  0105  00A5               	movwf	??_sprintf+2
  1383  0106  0825               	movf	??_sprintf+2,w
  1384  0107  022A               	subwf	sprintf@val+1,w
  1385  0108  1D03               	skipz
  1386  0109  290C               	goto	u2685
  1387  010A  0824               	movf	??_sprintf+1,w
  1388  010B  0229               	subwf	sprintf@val,w
  1389  010C                     u2685:	
  1390  010C  1C03               	btfss	3,0
  1391  010D  2916               	goto	l2140
  1392  010E  3001               	movlw	1
  1393  010F  00A3               	movwf	??_sprintf
  1394  0110  0823               	movf	??_sprintf,w
  1395  0111  07AC               	addwf	sprintf@c,f
  1396  0112  3005               	movlw	5
  1397  0113  062C               	xorwf	sprintf@c,w
  1398  0114  1D03               	btfss	3,2
  1399  0115  28F5               	goto	l2134
  1400  0116                     l2140:	
  1401                           
  1402                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  1403  0116  0827               	movf	sprintf@flag,w
  1404  0117  3903               	andlw	3
  1405  0118  1903               	btfsc	3,2
  1406  0119  2925               	goto	l2146
  1407                           
  1408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  1409  011A  302D               	movlw	45
  1410  011B  00A3               	movwf	??_sprintf
  1411  011C  082B               	movf	sprintf@sp,w
  1412  011D  0084               	movwf	4
  1413  011E  0823               	movf	??_sprintf,w
  1414  011F  1383               	bcf	3,7	;select IRP bank0
  1415  0120  0080               	movwf	0
  1416  0121  3001               	movlw	1
  1417  0122  00A3               	movwf	??_sprintf
  1418  0123  0823               	movf	??_sprintf,w
  1419  0124  07AB               	addwf	sprintf@sp,f
  1420  0125                     l2146:	
  1421                           
  1422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1488:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  1423  0125  082C               	movf	sprintf@c,w
  1424  0126  00A3               	movwf	??_sprintf
  1425  0127  0823               	movf	??_sprintf,w
  1426  0128  00A8               	movwf	sprintf@prec
  1427  0129                     l2154:	
  1428                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  1429                           
  1430                           
  1431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  1432  0129  30FF               	movlw	255
  1433  012A  00A3               	movwf	??_sprintf
  1434  012B  0823               	movf	??_sprintf,w
  1435  012C  07A8               	addwf	sprintf@prec,f
  1436  012D  0A28               	incf	sprintf@prec,w
  1437  012E  1903               	btfsc	3,2
  1438  012F  289E               	goto	l2156
  1439                           
  1440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  1441  0130  300A               	movlw	10
  1442  0131  00F8               	movwf	___lwmod@divisor
  1443  0132  3000               	movlw	0
  1444  0133  00F9               	movwf	___lwmod@divisor+1
  1445  0134  0828               	movf	sprintf@prec,w
  1446  0135  00A3               	movwf	??_sprintf
  1447  0136  0723               	addwf	??_sprintf,w
  1448  0137  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1449  0138  0084               	movwf	4
  1450  0139  120A  158A  200A  120A  118A  	fcall	stringdir
  1451  013E  00F0               	movwf	___lwdiv@divisor
  1452  013F  120A  158A  200A  120A  118A  	fcall	stringdir
  1453  0144  00F1               	movwf	___lwdiv@divisor+1
  1454  0145  082A               	movf	sprintf@val+1,w
  1455  0146  00F3               	movwf	___lwdiv@dividend+1
  1456  0147  0829               	movf	sprintf@val,w
  1457  0148  00F2               	movwf	___lwdiv@dividend
  1458  0149  120A  158A  255D  120A  118A  	fcall	___lwdiv
  1459  014E  0871               	movf	?___lwdiv+1,w
  1460  014F  00FB               	movwf	___lwmod@dividend+1
  1461  0150  0870               	movf	?___lwdiv,w
  1462  0151  00FA               	movwf	___lwmod@dividend
  1463  0152  120A  158A  24F4  120A  118A  	fcall	___lwmod
  1464  0157  0878               	movf	?___lwmod,w
  1465  0158  3E30               	addlw	48
  1466  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1467  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1468  015B  00A4               	movwf	??_sprintf+1
  1469  015C  0824               	movf	??_sprintf+1,w
  1470  015D  00AC               	movwf	sprintf@c
  1471                           
  1472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  1473  015E  082C               	movf	sprintf@c,w
  1474  015F  00A3               	movwf	??_sprintf
  1475  0160  082B               	movf	sprintf@sp,w
  1476  0161  0084               	movwf	4
  1477  0162  0823               	movf	??_sprintf,w
  1478  0163  1383               	bcf	3,7	;select IRP bank0
  1479  0164  0080               	movwf	0
  1480  0165  3001               	movlw	1
  1481  0166  00A3               	movwf	??_sprintf
  1482  0167  0823               	movf	??_sprintf,w
  1483  0168  07AB               	addwf	sprintf@sp,f
  1484  0169  2929               	goto	l2154
  1485  016A                     l2158:	
  1486                           
  1487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  1488  016A  082B               	movf	sprintf@sp,w
  1489  016B  0084               	movwf	4
  1490  016C  1383               	bcf	3,7	;select IRP bank0
  1491  016D  0180               	clrf	0
  1492  016E  0008               	return
  1493  016F                     __end_of_sprintf:	
  1494                           
  1495                           	psect	text2
  1496  0CF4                     __ptext2:	
  1497 ;; *************** function ___lwmod *****************
  1498 ;; Defined at:
  1499 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;  divisor         2    8[COMMON] unsigned int 
  1502 ;;  dividend        2   10[COMMON] unsigned int 
  1503 ;; Auto vars:     Size  Location     Type
  1504 ;;  counter         1   13[COMMON] unsigned char 
  1505 ;; Return value:  Size  Location     Type
  1506 ;;                  2    8[COMMON] unsigned int 
  1507 ;; Registers used:
  1508 ;;		wreg, status,2, status,0
  1509 ;; Tracked objects:
  1510 ;;		On entry : 0/0
  1511 ;;		On exit  : 0/0
  1512 ;;		Unchanged: 0/0
  1513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1514 ;;      Params:         4       0       0       0       0
  1515 ;;      Locals:         1       0       0       0       0
  1516 ;;      Temps:          1       0       0       0       0
  1517 ;;      Totals:         6       0       0       0       0
  1518 ;;Total ram usage:        6 bytes
  1519 ;; Hardware stack levels used:    1
  1520 ;; This function calls:
  1521 ;;		Nothing
  1522 ;; This function is called by:
  1523 ;;		_sprintf
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           
  1528                           ;psect for function ___lwmod
  1529  0CF4                     ___lwmod:	
  1530                           
  1531                           ;incstack = 0
  1532                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1533  0CF4  0878               	movf	___lwmod@divisor,w
  1534  0CF5  0479               	iorwf	___lwmod@divisor+1,w
  1535  0CF6  1903               	btfsc	3,2
  1536  0CF7  2D21               	goto	l1662
  1537  0CF8  01FD               	clrf	___lwmod@counter
  1538  0CF9  0AFD               	incf	___lwmod@counter,f
  1539  0CFA                     l1652:	
  1540  0CFA  1BF9               	btfsc	___lwmod@divisor+1,7
  1541  0CFB  2D08               	goto	l1654
  1542  0CFC  3001               	movlw	1
  1543  0CFD                     u1675:	
  1544  0CFD  1003               	clrc
  1545  0CFE  0DF8               	rlf	___lwmod@divisor,f
  1546  0CFF  0DF9               	rlf	___lwmod@divisor+1,f
  1547  0D00  3EFF               	addlw	-1
  1548  0D01  1D03               	skipz
  1549  0D02  2CFD               	goto	u1675
  1550  0D03  3001               	movlw	1
  1551  0D04  00FC               	movwf	??___lwmod
  1552  0D05  087C               	movf	??___lwmod,w
  1553  0D06  07FD               	addwf	___lwmod@counter,f
  1554  0D07  2CFA               	goto	l1652
  1555  0D08                     l1654:	
  1556  0D08  0879               	movf	___lwmod@divisor+1,w
  1557  0D09  027B               	subwf	___lwmod@dividend+1,w
  1558  0D0A  1D03               	skipz
  1559  0D0B  2D0E               	goto	u1695
  1560  0D0C  0878               	movf	___lwmod@divisor,w
  1561  0D0D  027A               	subwf	___lwmod@dividend,w
  1562  0D0E                     u1695:	
  1563  0D0E  1C03               	skipc
  1564  0D0F  2D16               	goto	l1658
  1565  0D10  0878               	movf	___lwmod@divisor,w
  1566  0D11  02FA               	subwf	___lwmod@dividend,f
  1567  0D12  0879               	movf	___lwmod@divisor+1,w
  1568  0D13  1C03               	skipc
  1569  0D14  03FB               	decf	___lwmod@dividend+1,f
  1570  0D15  02FB               	subwf	___lwmod@dividend+1,f
  1571  0D16                     l1658:	
  1572  0D16  3001               	movlw	1
  1573  0D17                     u1705:	
  1574  0D17  1003               	clrc
  1575  0D18  0CF9               	rrf	___lwmod@divisor+1,f
  1576  0D19  0CF8               	rrf	___lwmod@divisor,f
  1577  0D1A  3EFF               	addlw	-1
  1578  0D1B  1D03               	skipz
  1579  0D1C  2D17               	goto	u1705
  1580  0D1D  3001               	movlw	1
  1581  0D1E  02FD               	subwf	___lwmod@counter,f
  1582  0D1F  1D03               	btfss	3,2
  1583  0D20  2D08               	goto	l1654
  1584  0D21                     l1662:	
  1585  0D21  087B               	movf	___lwmod@dividend+1,w
  1586  0D22  00F9               	movwf	?___lwmod+1
  1587  0D23  087A               	movf	___lwmod@dividend,w
  1588  0D24  00F8               	movwf	?___lwmod
  1589  0D25  0008               	return
  1590  0D26                     __end_of___lwmod:	
  1591                           
  1592                           	psect	text3
  1593  0D5D                     __ptext3:	
  1594 ;; *************** function ___lwdiv *****************
  1595 ;; Defined at:
  1596 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;  divisor         2    0[COMMON] unsigned int 
  1599 ;;  dividend        2    2[COMMON] unsigned int 
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  quotient        2    5[COMMON] unsigned int 
  1602 ;;  counter         1    7[COMMON] unsigned char 
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  2    0[COMMON] unsigned int 
  1605 ;; Registers used:
  1606 ;;		wreg, status,2, status,0
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1612 ;;      Params:         4       0       0       0       0
  1613 ;;      Locals:         3       0       0       0       0
  1614 ;;      Temps:          1       0       0       0       0
  1615 ;;      Totals:         8       0       0       0       0
  1616 ;;Total ram usage:        8 bytes
  1617 ;; Hardware stack levels used:    1
  1618 ;; This function calls:
  1619 ;;		Nothing
  1620 ;; This function is called by:
  1621 ;;		_sprintf
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           
  1626                           ;psect for function ___lwdiv
  1627  0D5D                     ___lwdiv:	
  1628                           
  1629                           ;incstack = 0
  1630                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1631  0D5D  01F5               	clrf	___lwdiv@quotient
  1632  0D5E  01F6               	clrf	___lwdiv@quotient+1
  1633  0D5F  0870               	movf	___lwdiv@divisor,w
  1634  0D60  0471               	iorwf	___lwdiv@divisor+1,w
  1635  0D61  1903               	btfsc	3,2
  1636  0D62  2D94               	goto	l1640
  1637  0D63  01F7               	clrf	___lwdiv@counter
  1638  0D64  0AF7               	incf	___lwdiv@counter,f
  1639  0D65                     l1628:	
  1640  0D65  1BF1               	btfsc	___lwdiv@divisor+1,7
  1641  0D66  2D73               	goto	l1630
  1642  0D67  3001               	movlw	1
  1643  0D68                     u1605:	
  1644  0D68  1003               	clrc
  1645  0D69  0DF0               	rlf	___lwdiv@divisor,f
  1646  0D6A  0DF1               	rlf	___lwdiv@divisor+1,f
  1647  0D6B  3EFF               	addlw	-1
  1648  0D6C  1D03               	skipz
  1649  0D6D  2D68               	goto	u1605
  1650  0D6E  3001               	movlw	1
  1651  0D6F  00F4               	movwf	??___lwdiv
  1652  0D70  0874               	movf	??___lwdiv,w
  1653  0D71  07F7               	addwf	___lwdiv@counter,f
  1654  0D72  2D65               	goto	l1628
  1655  0D73                     l1630:	
  1656  0D73  3001               	movlw	1
  1657  0D74                     u1625:	
  1658  0D74  1003               	clrc
  1659  0D75  0DF5               	rlf	___lwdiv@quotient,f
  1660  0D76  0DF6               	rlf	___lwdiv@quotient+1,f
  1661  0D77  3EFF               	addlw	-1
  1662  0D78  1D03               	skipz
  1663  0D79  2D74               	goto	u1625
  1664  0D7A  0871               	movf	___lwdiv@divisor+1,w
  1665  0D7B  0273               	subwf	___lwdiv@dividend+1,w
  1666  0D7C  1D03               	skipz
  1667  0D7D  2D80               	goto	u1635
  1668  0D7E  0870               	movf	___lwdiv@divisor,w
  1669  0D7F  0272               	subwf	___lwdiv@dividend,w
  1670  0D80                     u1635:	
  1671  0D80  1C03               	skipc
  1672  0D81  2D89               	goto	l1636
  1673  0D82  0870               	movf	___lwdiv@divisor,w
  1674  0D83  02F2               	subwf	___lwdiv@dividend,f
  1675  0D84  0871               	movf	___lwdiv@divisor+1,w
  1676  0D85  1C03               	skipc
  1677  0D86  03F3               	decf	___lwdiv@dividend+1,f
  1678  0D87  02F3               	subwf	___lwdiv@dividend+1,f
  1679  0D88  1475               	bsf	___lwdiv@quotient,0
  1680  0D89                     l1636:	
  1681  0D89  3001               	movlw	1
  1682  0D8A                     u1645:	
  1683  0D8A  1003               	clrc
  1684  0D8B  0CF1               	rrf	___lwdiv@divisor+1,f
  1685  0D8C  0CF0               	rrf	___lwdiv@divisor,f
  1686  0D8D  3EFF               	addlw	-1
  1687  0D8E  1D03               	skipz
  1688  0D8F  2D8A               	goto	u1645
  1689  0D90  3001               	movlw	1
  1690  0D91  02F7               	subwf	___lwdiv@counter,f
  1691  0D92  1D03               	btfss	3,2
  1692  0D93  2D73               	goto	l1630
  1693  0D94                     l1640:	
  1694  0D94  0876               	movf	___lwdiv@quotient+1,w
  1695  0D95  00F1               	movwf	?___lwdiv+1
  1696  0D96  0875               	movf	___lwdiv@quotient,w
  1697  0D97  00F0               	movwf	?___lwdiv
  1698  0D98  0008               	return
  1699  0D99                     __end_of___lwdiv:	
  1700                           
  1701                           	psect	text4
  1702  0028                     __ptext4:	
  1703 ;; *************** function _pwmSetDuty2 *****************
  1704 ;; Defined at:
  1705 ;;		line 36 in file "./pwm.h"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;  duty            2   63[BANK0 ] unsigned int 
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;		None
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  1    wreg      void 
  1712 ;; Registers used:
  1713 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1719 ;;      Params:         0       2       0       0       0
  1720 ;;      Locals:         0       0       0       0       0
  1721 ;;      Temps:          0       2       0       0       0
  1722 ;;      Totals:         0       4       0       0       0
  1723 ;;Total ram usage:        4 bytes
  1724 ;; Hardware stack levels used:    1
  1725 ;; Hardware stack levels required when called:    2
  1726 ;; This function calls:
  1727 ;;		___fldiv
  1728 ;;		___flmul
  1729 ;;		___fltol
  1730 ;;		___xxtofl
  1731 ;; This function is called by:
  1732 ;;		_main
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           
  1737                           ;psect for function _pwmSetDuty2
  1738  0028                     _pwmSetDuty2:	
  1739                           
  1740                           ;./pwm.h: 37:     if (duty > 1023) return;
  1741                           
  1742                           ;incstack = 0
  1743                           ; Regs used in _pwmSetDuty2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1744  0028  3004               	movlw	4
  1745  0029  1283               	bcf	3,5	;RP0=0, select bank0
  1746  002A  1303               	bcf	3,6	;RP1=0, select bank0
  1747  002B  0260               	subwf	pwmSetDuty2@duty+1,w
  1748  002C  3000               	movlw	0
  1749  002D  1903               	skipnz
  1750  002E  025F               	subwf	pwmSetDuty2@duty,w
  1751  002F  1803               	btfsc	3,0
  1752  0030  0008               	return
  1753                           
  1754                           ;./pwm.h: 39:     duty = ((float) duty / 1023)*(4000000 / (245 * 16));
  1755  0031  085F               	movf	pwmSetDuty2@duty,w
  1756  0032  00F0               	movwf	___xxtofl@val
  1757  0033  0860               	movf	pwmSetDuty2@duty+1,w
  1758  0034  00F1               	movwf	___xxtofl@val+1
  1759  0035  01F2               	clrf	___xxtofl@val+2
  1760  0036  01F3               	clrf	___xxtofl@val+3
  1761  0037  3000               	movlw	0
  1762  0038  120A  158A  275D  120A  118A  	fcall	___xxtofl
  1763  003D  0873               	movf	?___xxtofl+3,w
  1764  003E  1283               	bcf	3,5	;RP0=0, select bank0
  1765  003F  1303               	bcf	3,6	;RP1=0, select bank0
  1766  0040  00C1               	movwf	___fldiv@b+3
  1767  0041  0872               	movf	?___xxtofl+2,w
  1768  0042  00C0               	movwf	___fldiv@b+2
  1769  0043  0871               	movf	?___xxtofl+1,w
  1770  0044  00BF               	movwf	___fldiv@b+1
  1771  0045  0870               	movf	?___xxtofl,w
  1772  0046  00BE               	movwf	___fldiv@b
  1773  0047  3044               	movlw	68
  1774  0048  00BD               	movwf	___fldiv@a+3
  1775  0049  307F               	movlw	127
  1776  004A  00BC               	movwf	___fldiv@a+2
  1777  004B  30C0               	movlw	192
  1778  004C  00BB               	movwf	___fldiv@a+1
  1779  004D  3000               	movlw	0
  1780  004E  00BA               	movwf	___fldiv@a
  1781  004F  120A  118A  216F  120A  118A  	fcall	___fldiv
  1782  0054  1283               	bcf	3,5	;RP0=0, select bank0
  1783  0055  1303               	bcf	3,6	;RP1=0, select bank0
  1784  0056  083D               	movf	?___fldiv+3,w
  1785  0057  00A7               	movwf	___flmul@a+3
  1786  0058  083C               	movf	?___fldiv+2,w
  1787  0059  00A6               	movwf	___flmul@a+2
  1788  005A  083B               	movf	?___fldiv+1,w
  1789  005B  00A5               	movwf	___flmul@a+1
  1790  005C  083A               	movf	?___fldiv,w
  1791  005D  00A4               	movwf	___flmul@a
  1792  005E  3044               	movlw	68
  1793  005F  00A3               	movwf	___flmul@b+3
  1794  0060  307F               	movlw	127
  1795  0061  00A2               	movwf	___flmul@b+2
  1796  0062  3000               	movlw	0
  1797  0063  00A1               	movwf	___flmul@b+1
  1798  0064  3000               	movlw	0
  1799  0065  00A0               	movwf	___flmul@b
  1800  0066  120A  118A  24E7  120A  118A  	fcall	___flmul
  1801  006B  1283               	bcf	3,5	;RP0=0, select bank0
  1802  006C  1303               	bcf	3,6	;RP1=0, select bank0
  1803  006D  0823               	movf	?___flmul+3,w
  1804  006E  00D7               	movwf	___fltol@f1+3
  1805  006F  0822               	movf	?___flmul+2,w
  1806  0070  00D6               	movwf	___fltol@f1+2
  1807  0071  0821               	movf	?___flmul+1,w
  1808  0072  00D5               	movwf	___fltol@f1+1
  1809  0073  0820               	movf	?___flmul,w
  1810  0074  00D4               	movwf	___fltol@f1
  1811  0075  120A  158A  2681  120A  118A  	fcall	___fltol
  1812  007A  1283               	bcf	3,5	;RP0=0, select bank0
  1813  007B  1303               	bcf	3,6	;RP1=0, select bank0
  1814  007C  0855               	movf	?___fltol+1,w
  1815  007D  00E0               	movwf	pwmSetDuty2@duty+1
  1816  007E  0854               	movf	?___fltol,w
  1817  007F  00DF               	movwf	pwmSetDuty2@duty
  1818                           
  1819                           ;./pwm.h: 40:     CCP2X = duty & 0x01;
  1820  0080  1C5F               	btfss	pwmSetDuty2@duty,0
  1821  0081  2886               	goto	u2560
  1822  0082  1283               	bcf	3,5	;RP0=0, select bank0
  1823  0083  1303               	bcf	3,6	;RP1=0, select bank0
  1824  0084  169D               	bsf	29,5	;volatile
  1825  0085  2889               	goto	l2016
  1826  0086                     u2560:	
  1827  0086  1283               	bcf	3,5	;RP0=0, select bank0
  1828  0087  1303               	bcf	3,6	;RP1=0, select bank0
  1829  0088  129D               	bcf	29,5	;volatile
  1830  0089                     l2016:	
  1831                           
  1832                           ;./pwm.h: 41:     CCP2Y = duty & 0x02;
  1833  0089  121D               	bcf	29,4	;volatile
  1834                           
  1835                           ;./pwm.h: 42:     CCPR2L = duty >> 2;
  1836  008A  0860               	movf	pwmSetDuty2@duty+1,w
  1837  008B  00E2               	movwf	??_pwmSetDuty2+1
  1838  008C  085F               	movf	pwmSetDuty2@duty,w
  1839  008D  00E1               	movwf	??_pwmSetDuty2
  1840  008E  1003               	clrc
  1841  008F  0CE2               	rrf	??_pwmSetDuty2+1,f
  1842  0090  0CE1               	rrf	??_pwmSetDuty2,f
  1843  0091  1003               	clrc
  1844  0092  0CE2               	rrf	??_pwmSetDuty2+1,f
  1845  0093  0CE1               	rrf	??_pwmSetDuty2,f
  1846  0094  0861               	movf	??_pwmSetDuty2,w
  1847  0095  009B               	movwf	27	;volatile
  1848  0096  0008               	return
  1849  0097                     __end_of_pwmSetDuty2:	
  1850                           
  1851                           	psect	text5
  1852  0EEE                     __ptext5:	
  1853 ;; *************** function _pwmSetDuty1 *****************
  1854 ;; Defined at:
  1855 ;;		line 28 in file "./pwm.h"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;  duty            2   63[BANK0 ] unsigned int 
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;		None
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      void 
  1862 ;; Registers used:
  1863 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1869 ;;      Params:         0       2       0       0       0
  1870 ;;      Locals:         0       0       0       0       0
  1871 ;;      Temps:          0       2       0       0       0
  1872 ;;      Totals:         0       4       0       0       0
  1873 ;;Total ram usage:        4 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; Hardware stack levels required when called:    2
  1876 ;; This function calls:
  1877 ;;		___fldiv
  1878 ;;		___flmul
  1879 ;;		___fltol
  1880 ;;		___xxtofl
  1881 ;; This function is called by:
  1882 ;;		_main
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           
  1887                           ;psect for function _pwmSetDuty1
  1888  0EEE                     _pwmSetDuty1:	
  1889                           
  1890                           ;./pwm.h: 29:     if (duty > 1023) return;
  1891                           
  1892                           ;incstack = 0
  1893                           ; Regs used in _pwmSetDuty1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1894  0EEE  3004               	movlw	4
  1895  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  1896  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  1897  0EF1  0260               	subwf	pwmSetDuty1@duty+1,w
  1898  0EF2  3000               	movlw	0
  1899  0EF3  1903               	skipnz
  1900  0EF4  025F               	subwf	pwmSetDuty1@duty,w
  1901  0EF5  1803               	btfsc	3,0
  1902  0EF6  0008               	return
  1903                           
  1904                           ;./pwm.h: 30:     duty = ((float) duty / 1023)*(4000000 / (245 * 16));
  1905  0EF7  085F               	movf	pwmSetDuty1@duty,w
  1906  0EF8  00F0               	movwf	___xxtofl@val
  1907  0EF9  0860               	movf	pwmSetDuty1@duty+1,w
  1908  0EFA  00F1               	movwf	___xxtofl@val+1
  1909  0EFB  01F2               	clrf	___xxtofl@val+2
  1910  0EFC  01F3               	clrf	___xxtofl@val+3
  1911  0EFD  3000               	movlw	0
  1912  0EFE  120A  158A  275D  120A  158A  	fcall	___xxtofl
  1913  0F03  0873               	movf	?___xxtofl+3,w
  1914  0F04  1283               	bcf	3,5	;RP0=0, select bank0
  1915  0F05  1303               	bcf	3,6	;RP1=0, select bank0
  1916  0F06  00C1               	movwf	___fldiv@b+3
  1917  0F07  0872               	movf	?___xxtofl+2,w
  1918  0F08  00C0               	movwf	___fldiv@b+2
  1919  0F09  0871               	movf	?___xxtofl+1,w
  1920  0F0A  00BF               	movwf	___fldiv@b+1
  1921  0F0B  0870               	movf	?___xxtofl,w
  1922  0F0C  00BE               	movwf	___fldiv@b
  1923  0F0D  3044               	movlw	68
  1924  0F0E  00BD               	movwf	___fldiv@a+3
  1925  0F0F  307F               	movlw	127
  1926  0F10  00BC               	movwf	___fldiv@a+2
  1927  0F11  30C0               	movlw	192
  1928  0F12  00BB               	movwf	___fldiv@a+1
  1929  0F13  3000               	movlw	0
  1930  0F14  00BA               	movwf	___fldiv@a
  1931  0F15  120A  118A  216F  120A  158A  	fcall	___fldiv
  1932  0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  1933  0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  1934  0F1C  083D               	movf	?___fldiv+3,w
  1935  0F1D  00A7               	movwf	___flmul@a+3
  1936  0F1E  083C               	movf	?___fldiv+2,w
  1937  0F1F  00A6               	movwf	___flmul@a+2
  1938  0F20  083B               	movf	?___fldiv+1,w
  1939  0F21  00A5               	movwf	___flmul@a+1
  1940  0F22  083A               	movf	?___fldiv,w
  1941  0F23  00A4               	movwf	___flmul@a
  1942  0F24  3044               	movlw	68
  1943  0F25  00A3               	movwf	___flmul@b+3
  1944  0F26  307F               	movlw	127
  1945  0F27  00A2               	movwf	___flmul@b+2
  1946  0F28  3000               	movlw	0
  1947  0F29  00A1               	movwf	___flmul@b+1
  1948  0F2A  3000               	movlw	0
  1949  0F2B  00A0               	movwf	___flmul@b
  1950  0F2C  120A  118A  24E7  120A  158A  	fcall	___flmul
  1951  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  1952  0F32  1303               	bcf	3,6	;RP1=0, select bank0
  1953  0F33  0823               	movf	?___flmul+3,w
  1954  0F34  00D7               	movwf	___fltol@f1+3
  1955  0F35  0822               	movf	?___flmul+2,w
  1956  0F36  00D6               	movwf	___fltol@f1+2
  1957  0F37  0821               	movf	?___flmul+1,w
  1958  0F38  00D5               	movwf	___fltol@f1+1
  1959  0F39  0820               	movf	?___flmul,w
  1960  0F3A  00D4               	movwf	___fltol@f1
  1961  0F3B  120A  158A  2681  120A  158A  	fcall	___fltol
  1962  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  1963  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  1964  0F42  0855               	movf	?___fltol+1,w
  1965  0F43  00E0               	movwf	pwmSetDuty1@duty+1
  1966  0F44  0854               	movf	?___fltol,w
  1967  0F45  00DF               	movwf	pwmSetDuty1@duty
  1968                           
  1969                           ;./pwm.h: 31:     CCP1X = duty & 0x01;
  1970  0F46  1C5F               	btfss	pwmSetDuty1@duty,0
  1971  0F47  2F4C               	goto	u2530
  1972  0F48  1283               	bcf	3,5	;RP0=0, select bank0
  1973  0F49  1303               	bcf	3,6	;RP1=0, select bank0
  1974  0F4A  1697               	bsf	23,5	;volatile
  1975  0F4B  2F4F               	goto	l2004
  1976  0F4C                     u2530:	
  1977  0F4C  1283               	bcf	3,5	;RP0=0, select bank0
  1978  0F4D  1303               	bcf	3,6	;RP1=0, select bank0
  1979  0F4E  1297               	bcf	23,5	;volatile
  1980  0F4F                     l2004:	
  1981                           
  1982                           ;./pwm.h: 32:     CCP1Y = duty & 0x02;
  1983  0F4F  1217               	bcf	23,4	;volatile
  1984                           
  1985                           ;./pwm.h: 33:     CCPR1L = duty >> 2;
  1986  0F50  0860               	movf	pwmSetDuty1@duty+1,w
  1987  0F51  00E2               	movwf	??_pwmSetDuty1+1
  1988  0F52  085F               	movf	pwmSetDuty1@duty,w
  1989  0F53  00E1               	movwf	??_pwmSetDuty1
  1990  0F54  1003               	clrc
  1991  0F55  0CE2               	rrf	??_pwmSetDuty1+1,f
  1992  0F56  0CE1               	rrf	??_pwmSetDuty1,f
  1993  0F57  1003               	clrc
  1994  0F58  0CE2               	rrf	??_pwmSetDuty1+1,f
  1995  0F59  0CE1               	rrf	??_pwmSetDuty1,f
  1996  0F5A  0861               	movf	??_pwmSetDuty1,w
  1997  0F5B  0095               	movwf	21	;volatile
  1998  0F5C  0008               	return
  1999  0F5D                     __end_of_pwmSetDuty1:	
  2000                           
  2001                           	psect	text6
  2002  0F5D                     __ptext6:	
  2003 ;; *************** function ___xxtofl *****************
  2004 ;; Defined at:
  2005 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  sign            1    wreg     unsigned char 
  2008 ;;  val             4    0[COMMON] long 
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;  sign            1    8[COMMON] unsigned char 
  2011 ;;  arg             4   10[COMMON] unsigned long 
  2012 ;;  exp             1    9[COMMON] unsigned char 
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  4    0[COMMON] unsigned char 
  2015 ;; Registers used:
  2016 ;;		wreg, status,2, status,0
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2022 ;;      Params:         4       0       0       0       0
  2023 ;;      Locals:         6       0       0       0       0
  2024 ;;      Temps:          4       0       0       0       0
  2025 ;;      Totals:        14       0       0       0       0
  2026 ;;Total ram usage:       14 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; This function calls:
  2029 ;;		Nothing
  2030 ;; This function is called by:
  2031 ;;		_pwmSetDuty1
  2032 ;;		_pwmSetDuty2
  2033 ;;		_main
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           
  2038                           ;psect for function ___xxtofl
  2039  0F5D                     ___xxtofl:	
  2040                           
  2041                           ;incstack = 0
  2042                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2043                           ;___xxtofl@sign stored from wreg
  2044  0F5D  00F8               	movwf	___xxtofl@sign
  2045  0F5E  0878               	movf	___xxtofl@sign,w
  2046  0F5F  1D03               	btfss	3,2
  2047  0F60  1FF3               	btfss	___xxtofl@val+3,7
  2048  0F61  2F72               	goto	l1954
  2049  0F62  0970               	comf	___xxtofl@val,w
  2050  0F63  00FA               	movwf	___xxtofl@arg
  2051  0F64  0971               	comf	___xxtofl@val+1,w
  2052  0F65  00FB               	movwf	___xxtofl@arg+1
  2053  0F66  0972               	comf	___xxtofl@val+2,w
  2054  0F67  00FC               	movwf	___xxtofl@arg+2
  2055  0F68  0973               	comf	___xxtofl@val+3,w
  2056  0F69  00FD               	movwf	___xxtofl@arg+3
  2057  0F6A  0AFA               	incf	___xxtofl@arg,f
  2058  0F6B  1903               	skipnz
  2059  0F6C  0AFB               	incf	___xxtofl@arg+1,f
  2060  0F6D  1903               	skipnz
  2061  0F6E  0AFC               	incf	___xxtofl@arg+2,f
  2062  0F6F  1903               	skipnz
  2063  0F70  0AFD               	incf	___xxtofl@arg+3,f
  2064  0F71  2F7A               	goto	l695
  2065  0F72                     l1954:	
  2066  0F72  0873               	movf	___xxtofl@val+3,w
  2067  0F73  00FD               	movwf	___xxtofl@arg+3
  2068  0F74  0872               	movf	___xxtofl@val+2,w
  2069  0F75  00FC               	movwf	___xxtofl@arg+2
  2070  0F76  0871               	movf	___xxtofl@val+1,w
  2071  0F77  00FB               	movwf	___xxtofl@arg+1
  2072  0F78  0870               	movf	___xxtofl@val,w
  2073  0F79  00FA               	movwf	___xxtofl@arg
  2074  0F7A                     l695:	
  2075  0F7A  0873               	movf	___xxtofl@val+3,w
  2076  0F7B  0472               	iorwf	___xxtofl@val+2,w
  2077  0F7C  0471               	iorwf	___xxtofl@val+1,w
  2078  0F7D  0470               	iorwf	___xxtofl@val,w
  2079  0F7E  1D03               	skipz
  2080  0F7F  2F89               	goto	l1960
  2081  0F80  3000               	movlw	0
  2082  0F81  00F3               	movwf	?___xxtofl+3
  2083  0F82  3000               	movlw	0
  2084  0F83  00F2               	movwf	?___xxtofl+2
  2085  0F84  3000               	movlw	0
  2086  0F85  00F1               	movwf	?___xxtofl+1
  2087  0F86  3000               	movlw	0
  2088  0F87  00F0               	movwf	?___xxtofl
  2089  0F88  0008               	return
  2090  0F89                     l1960:	
  2091  0F89  3096               	movlw	150
  2092  0F8A  00F4               	movwf	??___xxtofl
  2093  0F8B  0874               	movf	??___xxtofl,w
  2094  0F8C  00F9               	movwf	___xxtofl@exp
  2095  0F8D                     l1964:	
  2096  0F8D  30FE               	movlw	254
  2097  0F8E  057D               	andwf	___xxtofl@arg+3,w
  2098  0F8F  1903               	btfsc	3,2
  2099  0F90  2FBA               	goto	l701
  2100  0F91  3001               	movlw	1
  2101  0F92  00F4               	movwf	??___xxtofl
  2102  0F93  0874               	movf	??___xxtofl,w
  2103  0F94  07F9               	addwf	___xxtofl@exp,f
  2104  0F95  3001               	movlw	1
  2105  0F96                     u2415:	
  2106  0F96  1003               	clrc
  2107  0F97  0CFD               	rrf	___xxtofl@arg+3,f
  2108  0F98  0CFC               	rrf	___xxtofl@arg+2,f
  2109  0F99  0CFB               	rrf	___xxtofl@arg+1,f
  2110  0F9A  0CFA               	rrf	___xxtofl@arg,f
  2111  0F9B  3EFF               	addlw	-1
  2112  0F9C  1D03               	skipz
  2113  0F9D  2F96               	goto	u2415
  2114  0F9E  2F8D               	goto	l1964
  2115  0F9F                     l1966:	
  2116  0F9F  3001               	movlw	1
  2117  0FA0  00F4               	movwf	??___xxtofl
  2118  0FA1  0874               	movf	??___xxtofl,w
  2119  0FA2  07F9               	addwf	___xxtofl@exp,f
  2120  0FA3  3001               	movlw	1
  2121  0FA4  07FA               	addwf	___xxtofl@arg,f
  2122  0FA5  3000               	movlw	0
  2123  0FA6  1803               	skipnc
  2124  0FA7  3001               	movlw	1
  2125  0FA8  07FB               	addwf	___xxtofl@arg+1,f
  2126  0FA9  3000               	movlw	0
  2127  0FAA  1803               	skipnc
  2128  0FAB  3001               	movlw	1
  2129  0FAC  07FC               	addwf	___xxtofl@arg+2,f
  2130  0FAD  3000               	movlw	0
  2131  0FAE  1803               	skipnc
  2132  0FAF  3001               	movlw	1
  2133  0FB0  07FD               	addwf	___xxtofl@arg+3,f
  2134  0FB1  3001               	movlw	1
  2135  0FB2                     u2435:	
  2136  0FB2  1003               	clrc
  2137  0FB3  0CFD               	rrf	___xxtofl@arg+3,f
  2138  0FB4  0CFC               	rrf	___xxtofl@arg+2,f
  2139  0FB5  0CFB               	rrf	___xxtofl@arg+1,f
  2140  0FB6  0CFA               	rrf	___xxtofl@arg,f
  2141  0FB7  3EFF               	addlw	-1
  2142  0FB8  1D03               	skipz
  2143  0FB9  2FB2               	goto	u2435
  2144  0FBA                     l701:	
  2145  0FBA  30FF               	movlw	255
  2146  0FBB  057D               	andwf	___xxtofl@arg+3,w
  2147  0FBC  1903               	btfsc	3,2
  2148  0FBD  2FCE               	goto	l1974
  2149  0FBE  2F9F               	goto	l1966
  2150  0FBF                     l1976:	
  2151  0FBF  3002               	movlw	2
  2152  0FC0  0279               	subwf	___xxtofl@exp,w
  2153  0FC1  1C03               	btfss	3,0
  2154  0FC2  2FD0               	goto	l708
  2155  0FC3  3001               	movlw	1
  2156  0FC4  02F9               	subwf	___xxtofl@exp,f
  2157  0FC5  3001               	movlw	1
  2158  0FC6  00F4               	movwf	??___xxtofl
  2159  0FC7                     u2455:	
  2160  0FC7  1003               	clrc
  2161  0FC8  0DFA               	rlf	___xxtofl@arg,f
  2162  0FC9  0DFB               	rlf	___xxtofl@arg+1,f
  2163  0FCA  0DFC               	rlf	___xxtofl@arg+2,f
  2164  0FCB  0DFD               	rlf	___xxtofl@arg+3,f
  2165  0FCC  0BF4               	decfsz	??___xxtofl,f
  2166  0FCD  2FC7               	goto	u2455
  2167  0FCE                     l1974:	
  2168  0FCE  1FFC               	btfss	___xxtofl@arg+2,7
  2169  0FCF  2FBF               	goto	l1976
  2170  0FD0                     l708:	
  2171  0FD0  1879               	btfsc	___xxtofl@exp,0
  2172  0FD1  2FDA               	goto	l709
  2173  0FD2  30FF               	movlw	255
  2174  0FD3  05FA               	andwf	___xxtofl@arg,f
  2175  0FD4  30FF               	movlw	255
  2176  0FD5  05FB               	andwf	___xxtofl@arg+1,f
  2177  0FD6  307F               	movlw	127
  2178  0FD7  05FC               	andwf	___xxtofl@arg+2,f
  2179  0FD8  30FF               	movlw	255
  2180  0FD9  05FD               	andwf	___xxtofl@arg+3,f
  2181  0FDA                     l709:	
  2182  0FDA  1003               	clrc
  2183  0FDB  0CF9               	rrf	___xxtofl@exp,f
  2184  0FDC  0879               	movf	___xxtofl@exp,w
  2185  0FDD  00F4               	movwf	??___xxtofl
  2186  0FDE  01F5               	clrf	??___xxtofl+1
  2187  0FDF  01F6               	clrf	??___xxtofl+2
  2188  0FE0  01F7               	clrf	??___xxtofl+3
  2189  0FE1  3018               	movlw	24
  2190  0FE2                     u2495:	
  2191  0FE2  1003               	clrc
  2192  0FE3  0DF4               	rlf	??___xxtofl,f
  2193  0FE4  0DF5               	rlf	??___xxtofl+1,f
  2194  0FE5  0DF6               	rlf	??___xxtofl+2,f
  2195  0FE6  0DF7               	rlf	??___xxtofl+3,f
  2196  0FE7  3EFF               	addlw	-1
  2197  0FE8  1D03               	skipz
  2198  0FE9  2FE2               	goto	u2495
  2199  0FEA  0874               	movf	??___xxtofl,w
  2200  0FEB  04FA               	iorwf	___xxtofl@arg,f
  2201  0FEC  0875               	movf	??___xxtofl+1,w
  2202  0FED  04FB               	iorwf	___xxtofl@arg+1,f
  2203  0FEE  0876               	movf	??___xxtofl+2,w
  2204  0FEF  04FC               	iorwf	___xxtofl@arg+2,f
  2205  0FF0  0877               	movf	??___xxtofl+3,w
  2206  0FF1  04FD               	iorwf	___xxtofl@arg+3,f
  2207  0FF2  0878               	movf	___xxtofl@sign,w
  2208  0FF3  1D03               	btfss	3,2
  2209  0FF4  1FF3               	btfss	___xxtofl@val+3,7
  2210  0FF5  2FF7               	goto	l1988
  2211  0FF6  17FD               	bsf	___xxtofl@arg+3,7
  2212  0FF7                     l1988:	
  2213  0FF7  087D               	movf	___xxtofl@arg+3,w
  2214  0FF8  00F3               	movwf	?___xxtofl+3
  2215  0FF9  087C               	movf	___xxtofl@arg+2,w
  2216  0FFA  00F2               	movwf	?___xxtofl+2
  2217  0FFB  087B               	movf	___xxtofl@arg+1,w
  2218  0FFC  00F1               	movwf	?___xxtofl+1
  2219  0FFD  087A               	movf	___xxtofl@arg,w
  2220  0FFE  00F0               	movwf	?___xxtofl
  2221  0FFF  0008               	return
  2222  1000                     __end_of___xxtofl:	
  2223                           
  2224                           	psect	text7
  2225  0E81                     __ptext7:	
  2226 ;; *************** function ___fltol *****************
  2227 ;; Defined at:
  2228 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;  f1              4   52[BANK0 ] unsigned char 
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;  exp1            1   62[BANK0 ] unsigned char 
  2233 ;;  sign1           1   61[BANK0 ] unsigned char 
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  4   52[BANK0 ] long 
  2236 ;; Registers used:
  2237 ;;		wreg, status,2, status,0
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2243 ;;      Params:         0       4       0       0       0
  2244 ;;      Locals:         0       2       0       0       0
  2245 ;;      Temps:          0       5       0       0       0
  2246 ;;      Totals:         0      11       0       0       0
  2247 ;;Total ram usage:       11 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; This function calls:
  2250 ;;		Nothing
  2251 ;; This function is called by:
  2252 ;;		_pwmSetDuty1
  2253 ;;		_pwmSetDuty2
  2254 ;;		_main
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           
  2259                           ;psect for function ___fltol
  2260  0E81                     ___fltol:	
  2261                           
  2262                           ;incstack = 0
  2263                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2264  0E81  1003               	clrc
  2265  0E82  1283               	bcf	3,5	;RP0=0, select bank0
  2266  0E83  1303               	bcf	3,6	;RP1=0, select bank0
  2267  0E84  0D56               	rlf	___fltol@f1+2,w
  2268  0E85  0D57               	rlf	___fltol@f1+3,w
  2269  0E86  00D8               	movwf	??___fltol
  2270  0E87  0858               	movf	??___fltol,w
  2271  0E88  00DE               	movwf	___fltol@exp1
  2272  0E89  085E               	movf	___fltol@exp1,w
  2273  0E8A  1D03               	btfss	3,2
  2274  0E8B  2E95               	goto	l1588
  2275  0E8C                     l1584:	
  2276  0E8C  3000               	movlw	0
  2277  0E8D  00D7               	movwf	?___fltol+3
  2278  0E8E  3000               	movlw	0
  2279  0E8F  00D6               	movwf	?___fltol+2
  2280  0E90  3000               	movlw	0
  2281  0E91  00D5               	movwf	?___fltol+1
  2282  0E92  3000               	movlw	0
  2283  0E93  00D4               	movwf	?___fltol
  2284  0E94  0008               	return
  2285  0E95                     l1588:	
  2286  0E95  0854               	movf	___fltol@f1,w
  2287  0E96  00D8               	movwf	??___fltol
  2288  0E97  0855               	movf	___fltol@f1+1,w
  2289  0E98  00D9               	movwf	??___fltol+1
  2290  0E99  0856               	movf	___fltol@f1+2,w
  2291  0E9A  00DA               	movwf	??___fltol+2
  2292  0E9B  0857               	movf	___fltol@f1+3,w
  2293  0E9C  00DB               	movwf	??___fltol+3
  2294  0E9D  301F               	movlw	31
  2295  0E9E                     u1505:	
  2296  0E9E  1003               	clrc
  2297  0E9F  0CDB               	rrf	??___fltol+3,f
  2298  0EA0  0CDA               	rrf	??___fltol+2,f
  2299  0EA1  0CD9               	rrf	??___fltol+1,f
  2300  0EA2  0CD8               	rrf	??___fltol,f
  2301  0EA3  3EFF               	addlw	-1
  2302  0EA4  1D03               	skipz
  2303  0EA5  2E9E               	goto	u1505
  2304  0EA6  0858               	movf	??___fltol,w
  2305  0EA7  00DC               	movwf	??___fltol+4
  2306  0EA8  085C               	movf	??___fltol+4,w
  2307  0EA9  00DD               	movwf	___fltol@sign1
  2308  0EAA  17D6               	bsf	___fltol@f1+2,7
  2309  0EAB  30FF               	movlw	255
  2310  0EAC  05D4               	andwf	___fltol@f1,f
  2311  0EAD  30FF               	movlw	255
  2312  0EAE  05D5               	andwf	___fltol@f1+1,f
  2313  0EAF  30FF               	movlw	255
  2314  0EB0  05D6               	andwf	___fltol@f1+2,f
  2315  0EB1  3000               	movlw	0
  2316  0EB2  05D7               	andwf	___fltol@f1+3,f
  2317  0EB3  3096               	movlw	150
  2318  0EB4  02DE               	subwf	___fltol@exp1,f
  2319  0EB5  1FDE               	btfss	___fltol@exp1,7
  2320  0EB6  2ECC               	goto	l1606
  2321  0EB7  085E               	movf	___fltol@exp1,w
  2322  0EB8  3A80               	xorlw	128
  2323  0EB9  3E97               	addlw	151
  2324  0EBA  1C03               	btfss	3,0
  2325  0EBB  2E8C               	goto	l1584
  2326  0EBC                     l1604:	
  2327  0EBC  3001               	movlw	1
  2328  0EBD                     u1535:	
  2329  0EBD  1003               	clrc
  2330  0EBE  0CD7               	rrf	___fltol@f1+3,f
  2331  0EBF  0CD6               	rrf	___fltol@f1+2,f
  2332  0EC0  0CD5               	rrf	___fltol@f1+1,f
  2333  0EC1  0CD4               	rrf	___fltol@f1,f
  2334  0EC2  3EFF               	addlw	-1
  2335  0EC3  1D03               	skipz
  2336  0EC4  2EBD               	goto	u1535
  2337  0EC5  3001               	movlw	1
  2338  0EC6  00D8               	movwf	??___fltol
  2339  0EC7  0858               	movf	??___fltol,w
  2340  0EC8  07DE               	addwf	___fltol@exp1,f
  2341  0EC9  1903               	btfsc	3,2
  2342  0ECA  2EDF               	goto	l1614
  2343  0ECB  2EBC               	goto	l1604
  2344  0ECC                     l1606:	
  2345  0ECC  3020               	movlw	32
  2346  0ECD  025E               	subwf	___fltol@exp1,w
  2347  0ECE  1803               	btfsc	3,0
  2348  0ECF  2E8C               	goto	l1584
  2349  0ED0                     l461:	
  2350  0ED0  085E               	movf	___fltol@exp1,w
  2351  0ED1  1903               	btfsc	3,2
  2352  0ED2  2EDF               	goto	l1614
  2353  0ED3  3001               	movlw	1
  2354  0ED4  00D8               	movwf	??___fltol
  2355  0ED5                     u1565:	
  2356  0ED5  1003               	clrc
  2357  0ED6  0DD4               	rlf	___fltol@f1,f
  2358  0ED7  0DD5               	rlf	___fltol@f1+1,f
  2359  0ED8  0DD6               	rlf	___fltol@f1+2,f
  2360  0ED9  0DD7               	rlf	___fltol@f1+3,f
  2361  0EDA  0BD8               	decfsz	??___fltol,f
  2362  0EDB  2ED5               	goto	u1565
  2363  0EDC  3001               	movlw	1
  2364  0EDD  02DE               	subwf	___fltol@exp1,f
  2365  0EDE  2ED0               	goto	l461
  2366  0EDF                     l1614:	
  2367  0EDF  085D               	movf	___fltol@sign1,w
  2368  0EE0  1903               	btfsc	3,2
  2369  0EE1  0008               	return
  2370  0EE2  09D4               	comf	___fltol@f1,f
  2371  0EE3  09D5               	comf	___fltol@f1+1,f
  2372  0EE4  09D6               	comf	___fltol@f1+2,f
  2373  0EE5  09D7               	comf	___fltol@f1+3,f
  2374  0EE6  0AD4               	incf	___fltol@f1,f
  2375  0EE7  1903               	skipnz
  2376  0EE8  0AD5               	incf	___fltol@f1+1,f
  2377  0EE9  1903               	skipnz
  2378  0EEA  0AD6               	incf	___fltol@f1+2,f
  2379  0EEB  1903               	skipnz
  2380  0EEC  0AD7               	incf	___fltol@f1+3,f
  2381  0EED  0008               	return
  2382  0EEE                     __end_of___fltol:	
  2383                           
  2384                           	psect	text8
  2385  04E7                     __ptext8:	
  2386 ;; *************** function ___flmul *****************
  2387 ;; Defined at:
  2388 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;  b               4    0[BANK0 ] long 
  2391 ;;  a               4    4[BANK0 ] long 
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;  prod            4   20[BANK0 ] struct .
  2394 ;;  grs             4   14[BANK0 ] unsigned long 
  2395 ;;  temp            2   24[BANK0 ] struct .
  2396 ;;  bexp            1   19[BANK0 ] unsigned char 
  2397 ;;  aexp            1   18[BANK0 ] unsigned char 
  2398 ;;  sign            1   13[BANK0 ] unsigned char 
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  4    0[BANK0 ] unsigned char 
  2401 ;; Registers used:
  2402 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2408 ;;      Params:         0       8       0       0       0
  2409 ;;      Locals:         0      13       0       0       0
  2410 ;;      Temps:          0       5       0       0       0
  2411 ;;      Totals:         0      26       0       0       0
  2412 ;;Total ram usage:       26 bytes
  2413 ;; Hardware stack levels used:    1
  2414 ;; Hardware stack levels required when called:    1
  2415 ;; This function calls:
  2416 ;;		__Umul8_16
  2417 ;; This function is called by:
  2418 ;;		_pwmSetDuty1
  2419 ;;		_pwmSetDuty2
  2420 ;;		_main
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           
  2425                           ;psect for function ___flmul
  2426  04E7                     ___flmul:	
  2427                           
  2428                           ;incstack = 0
  2429                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2430  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  2431  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  2432  04E9  0823               	movf	___flmul@b+3,w
  2433  04EA  3980               	andlw	128
  2434  04EB  00A8               	movwf	??___flmul
  2435  04EC  0828               	movf	??___flmul,w
  2436  04ED  00AD               	movwf	___flmul@sign
  2437  04EE  0823               	movf	___flmul@b+3,w
  2438  04EF  00A8               	movwf	??___flmul
  2439  04F0  0728               	addwf	??___flmul,w
  2440  04F1  00A9               	movwf	??___flmul+1
  2441  04F2  0829               	movf	??___flmul+1,w
  2442  04F3  00B3               	movwf	___flmul@bexp
  2443  04F4  1BA2               	btfsc	___flmul@b+2,7
  2444  04F5  1433               	bsf	___flmul@bexp,0
  2445  04F6  0833               	movf	___flmul@bexp,w
  2446  04F7  1903               	btfsc	3,2
  2447  04F8  2D06               	goto	l1824
  2448  04F9  0A33               	incf	___flmul@bexp,w
  2449  04FA  1D03               	btfss	3,2
  2450  04FB  2D04               	goto	l1822
  2451  04FC  3000               	movlw	0
  2452  04FD  00A3               	movwf	___flmul@b+3
  2453  04FE  3000               	movlw	0
  2454  04FF  00A2               	movwf	___flmul@b+2
  2455  0500  3000               	movlw	0
  2456  0501  00A1               	movwf	___flmul@b+1
  2457  0502  3000               	movlw	0
  2458  0503  00A0               	movwf	___flmul@b
  2459  0504                     l1822:	
  2460  0504  17A2               	bsf	___flmul@b+2,7
  2461  0505  2D0E               	goto	l1826
  2462  0506                     l1824:	
  2463  0506  3000               	movlw	0
  2464  0507  00A3               	movwf	___flmul@b+3
  2465  0508  3000               	movlw	0
  2466  0509  00A2               	movwf	___flmul@b+2
  2467  050A  3000               	movlw	0
  2468  050B  00A1               	movwf	___flmul@b+1
  2469  050C  3000               	movlw	0
  2470  050D  00A0               	movwf	___flmul@b
  2471  050E                     l1826:	
  2472  050E  0827               	movf	___flmul@a+3,w
  2473  050F  3980               	andlw	128
  2474  0510  00A8               	movwf	??___flmul
  2475  0511  0828               	movf	??___flmul,w
  2476  0512  06AD               	xorwf	___flmul@sign,f
  2477  0513  0827               	movf	___flmul@a+3,w
  2478  0514  00A8               	movwf	??___flmul
  2479  0515  0728               	addwf	??___flmul,w
  2480  0516  00A9               	movwf	??___flmul+1
  2481  0517  0829               	movf	??___flmul+1,w
  2482  0518  00B2               	movwf	___flmul@aexp
  2483  0519  1BA6               	btfsc	___flmul@a+2,7
  2484  051A  1432               	bsf	___flmul@aexp,0
  2485  051B  0832               	movf	___flmul@aexp,w
  2486  051C  1903               	btfsc	3,2
  2487  051D  2D2B               	goto	l1842
  2488  051E  0A32               	incf	___flmul@aexp,w
  2489  051F  1D03               	btfss	3,2
  2490  0520  2D29               	goto	l1840
  2491  0521  3000               	movlw	0
  2492  0522  00A7               	movwf	___flmul@a+3
  2493  0523  3000               	movlw	0
  2494  0524  00A6               	movwf	___flmul@a+2
  2495  0525  3000               	movlw	0
  2496  0526  00A5               	movwf	___flmul@a+1
  2497  0527  3000               	movlw	0
  2498  0528  00A4               	movwf	___flmul@a
  2499  0529                     l1840:	
  2500  0529  17A6               	bsf	___flmul@a+2,7
  2501  052A  2D33               	goto	l1844
  2502  052B                     l1842:	
  2503  052B  3000               	movlw	0
  2504  052C  00A7               	movwf	___flmul@a+3
  2505  052D  3000               	movlw	0
  2506  052E  00A6               	movwf	___flmul@a+2
  2507  052F  3000               	movlw	0
  2508  0530  00A5               	movwf	___flmul@a+1
  2509  0531  3000               	movlw	0
  2510  0532  00A4               	movwf	___flmul@a
  2511  0533                     l1844:	
  2512  0533  0832               	movf	___flmul@aexp,w
  2513  0534  1D03               	btfss	3,2
  2514  0535  0833               	movf	___flmul@bexp,w
  2515  0536  1D03               	btfss	3,2
  2516  0537  2D41               	goto	l1852
  2517  0538  3000               	movlw	0
  2518  0539  00A3               	movwf	?___flmul+3
  2519  053A  3000               	movlw	0
  2520  053B  00A2               	movwf	?___flmul+2
  2521  053C  3000               	movlw	0
  2522  053D  00A1               	movwf	?___flmul+1
  2523  053E  3000               	movlw	0
  2524  053F  00A0               	movwf	?___flmul
  2525  0540  0008               	return
  2526  0541                     l1852:	
  2527  0541  0820               	movf	___flmul@b,w
  2528  0542  00A8               	movwf	??___flmul
  2529  0543  0828               	movf	??___flmul,w
  2530  0544  00F0               	movwf	__Umul8_16@multiplicand
  2531  0545  0826               	movf	___flmul@a+2,w
  2532  0546  120A  118A  2005  120A  118A  	fcall	__Umul8_16
  2533  054B  0871               	movf	?__Umul8_16+1,w
  2534  054C  1283               	bcf	3,5	;RP0=0, select bank0
  2535  054D  1303               	bcf	3,6	;RP1=0, select bank0
  2536  054E  00B9               	movwf	___flmul@temp+1
  2537  054F  0870               	movf	?__Umul8_16,w
  2538  0550  00B8               	movwf	___flmul@temp
  2539  0551  0838               	movf	___flmul@temp,w
  2540  0552  00A8               	movwf	??___flmul
  2541  0553  01A9               	clrf	??___flmul+1
  2542  0554  01AA               	clrf	??___flmul+2
  2543  0555  01AB               	clrf	??___flmul+3
  2544  0556  082B               	movf	??___flmul+3,w
  2545  0557  00B1               	movwf	___flmul@grs+3
  2546  0558  082A               	movf	??___flmul+2,w
  2547  0559  00B0               	movwf	___flmul@grs+2
  2548  055A  0829               	movf	??___flmul+1,w
  2549  055B  00AF               	movwf	___flmul@grs+1
  2550  055C  0828               	movf	??___flmul,w
  2551  055D  00AE               	movwf	___flmul@grs
  2552  055E  0839               	movf	___flmul@temp+1,w
  2553  055F  00A8               	movwf	??___flmul
  2554  0560  01A9               	clrf	??___flmul+1
  2555  0561  01AA               	clrf	??___flmul+2
  2556  0562  01AB               	clrf	??___flmul+3
  2557  0563  082B               	movf	??___flmul+3,w
  2558  0564  00B7               	movwf	___flmul@prod+3
  2559  0565  082A               	movf	??___flmul+2,w
  2560  0566  00B6               	movwf	___flmul@prod+2
  2561  0567  0829               	movf	??___flmul+1,w
  2562  0568  00B5               	movwf	___flmul@prod+1
  2563  0569  0828               	movf	??___flmul,w
  2564  056A  00B4               	movwf	___flmul@prod
  2565  056B  0821               	movf	___flmul@b+1,w
  2566  056C  00A8               	movwf	??___flmul
  2567  056D  0828               	movf	??___flmul,w
  2568  056E  00F0               	movwf	__Umul8_16@multiplicand
  2569  056F  0825               	movf	___flmul@a+1,w
  2570  0570  120A  118A  2005  120A  118A  	fcall	__Umul8_16
  2571  0575  0871               	movf	?__Umul8_16+1,w
  2572  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2573  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2574  0578  00B9               	movwf	___flmul@temp+1
  2575  0579  0870               	movf	?__Umul8_16,w
  2576  057A  00B8               	movwf	___flmul@temp
  2577  057B  0838               	movf	___flmul@temp,w
  2578  057C  00A8               	movwf	??___flmul
  2579  057D  01A9               	clrf	??___flmul+1
  2580  057E  01AA               	clrf	??___flmul+2
  2581  057F  01AB               	clrf	??___flmul+3
  2582  0580  0828               	movf	??___flmul,w
  2583  0581  07AE               	addwf	___flmul@grs,f
  2584  0582  0829               	movf	??___flmul+1,w
  2585  0583  1103               	clrz
  2586  0584  1803               	skipnc
  2587  0585  3E01               	addlw	1
  2588  0586  1D03               	btfss	3,2
  2589  0587  07AF               	addwf	___flmul@grs+1,f
  2590  0588  082A               	movf	??___flmul+2,w
  2591  0589  1103               	clrz
  2592  058A  1803               	skipnc
  2593  058B  3E01               	addlw	1
  2594  058C  1D03               	btfss	3,2
  2595  058D  07B0               	addwf	___flmul@grs+2,f
  2596  058E  082B               	movf	??___flmul+3,w
  2597  058F  1103               	clrz
  2598  0590  1803               	skipnc
  2599  0591  3E01               	addlw	1
  2600  0592  1D03               	btfss	3,2
  2601  0593  07B1               	addwf	___flmul@grs+3,f
  2602  0594  0839               	movf	___flmul@temp+1,w
  2603  0595  00A8               	movwf	??___flmul
  2604  0596  01A9               	clrf	??___flmul+1
  2605  0597  01AA               	clrf	??___flmul+2
  2606  0598  01AB               	clrf	??___flmul+3
  2607  0599  0828               	movf	??___flmul,w
  2608  059A  07B4               	addwf	___flmul@prod,f
  2609  059B  0829               	movf	??___flmul+1,w
  2610  059C  1103               	clrz
  2611  059D  1803               	skipnc
  2612  059E  3E01               	addlw	1
  2613  059F  1D03               	btfss	3,2
  2614  05A0  07B5               	addwf	___flmul@prod+1,f
  2615  05A1  082A               	movf	??___flmul+2,w
  2616  05A2  1103               	clrz
  2617  05A3  1803               	skipnc
  2618  05A4  3E01               	addlw	1
  2619  05A5  1D03               	btfss	3,2
  2620  05A6  07B6               	addwf	___flmul@prod+2,f
  2621  05A7  082B               	movf	??___flmul+3,w
  2622  05A8  1103               	clrz
  2623  05A9  1803               	skipnc
  2624  05AA  3E01               	addlw	1
  2625  05AB  1D03               	btfss	3,2
  2626  05AC  07B7               	addwf	___flmul@prod+3,f
  2627  05AD  0822               	movf	___flmul@b+2,w
  2628  05AE  00A8               	movwf	??___flmul
  2629  05AF  0828               	movf	??___flmul,w
  2630  05B0  00F0               	movwf	__Umul8_16@multiplicand
  2631  05B1  0824               	movf	___flmul@a,w
  2632  05B2  120A  118A  2005  120A  118A  	fcall	__Umul8_16
  2633  05B7  0871               	movf	?__Umul8_16+1,w
  2634  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  2635  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  2636  05BA  00B9               	movwf	___flmul@temp+1
  2637  05BB  0870               	movf	?__Umul8_16,w
  2638  05BC  00B8               	movwf	___flmul@temp
  2639  05BD  0838               	movf	___flmul@temp,w
  2640  05BE  00A8               	movwf	??___flmul
  2641  05BF  01A9               	clrf	??___flmul+1
  2642  05C0  01AA               	clrf	??___flmul+2
  2643  05C1  01AB               	clrf	??___flmul+3
  2644  05C2  0828               	movf	??___flmul,w
  2645  05C3  07AE               	addwf	___flmul@grs,f
  2646  05C4  0829               	movf	??___flmul+1,w
  2647  05C5  1103               	clrz
  2648  05C6  1803               	skipnc
  2649  05C7  3E01               	addlw	1
  2650  05C8  1D03               	btfss	3,2
  2651  05C9  07AF               	addwf	___flmul@grs+1,f
  2652  05CA  082A               	movf	??___flmul+2,w
  2653  05CB  1103               	clrz
  2654  05CC  1803               	skipnc
  2655  05CD  3E01               	addlw	1
  2656  05CE  1D03               	btfss	3,2
  2657  05CF  07B0               	addwf	___flmul@grs+2,f
  2658  05D0  082B               	movf	??___flmul+3,w
  2659  05D1  1103               	clrz
  2660  05D2  1803               	skipnc
  2661  05D3  3E01               	addlw	1
  2662  05D4  1D03               	btfss	3,2
  2663  05D5  07B1               	addwf	___flmul@grs+3,f
  2664  05D6  0839               	movf	___flmul@temp+1,w
  2665  05D7  00A8               	movwf	??___flmul
  2666  05D8  01A9               	clrf	??___flmul+1
  2667  05D9  01AA               	clrf	??___flmul+2
  2668  05DA  01AB               	clrf	??___flmul+3
  2669  05DB  0828               	movf	??___flmul,w
  2670  05DC  07B4               	addwf	___flmul@prod,f
  2671  05DD  0829               	movf	??___flmul+1,w
  2672  05DE  1103               	clrz
  2673  05DF  1803               	skipnc
  2674  05E0  3E01               	addlw	1
  2675  05E1  1D03               	btfss	3,2
  2676  05E2  07B5               	addwf	___flmul@prod+1,f
  2677  05E3  082A               	movf	??___flmul+2,w
  2678  05E4  1103               	clrz
  2679  05E5  1803               	skipnc
  2680  05E6  3E01               	addlw	1
  2681  05E7  1D03               	btfss	3,2
  2682  05E8  07B6               	addwf	___flmul@prod+2,f
  2683  05E9  082B               	movf	??___flmul+3,w
  2684  05EA  1103               	clrz
  2685  05EB  1803               	skipnc
  2686  05EC  3E01               	addlw	1
  2687  05ED  1D03               	btfss	3,2
  2688  05EE  07B7               	addwf	___flmul@prod+3,f
  2689  05EF  3008               	movlw	8
  2690  05F0  00A8               	movwf	??___flmul
  2691  05F1                     u2135:	
  2692  05F1  1003               	clrc
  2693  05F2  0DAE               	rlf	___flmul@grs,f
  2694  05F3  0DAF               	rlf	___flmul@grs+1,f
  2695  05F4  0DB0               	rlf	___flmul@grs+2,f
  2696  05F5  0DB1               	rlf	___flmul@grs+3,f
  2697  05F6  0BA8               	decfsz	??___flmul,f
  2698  05F7  2DF1               	goto	u2135
  2699  05F8  0821               	movf	___flmul@b+1,w
  2700  05F9  00A8               	movwf	??___flmul
  2701  05FA  0828               	movf	??___flmul,w
  2702  05FB  00F0               	movwf	__Umul8_16@multiplicand
  2703  05FC  0824               	movf	___flmul@a,w
  2704  05FD  120A  118A  2005  120A  118A  	fcall	__Umul8_16
  2705  0602  0871               	movf	?__Umul8_16+1,w
  2706  0603  1283               	bcf	3,5	;RP0=0, select bank0
  2707  0604  1303               	bcf	3,6	;RP1=0, select bank0
  2708  0605  00B9               	movwf	___flmul@temp+1
  2709  0606  0870               	movf	?__Umul8_16,w
  2710  0607  00B8               	movwf	___flmul@temp
  2711  0608  0838               	movf	___flmul@temp,w
  2712  0609  00A8               	movwf	??___flmul
  2713  060A  0839               	movf	___flmul@temp+1,w
  2714  060B  00A9               	movwf	??___flmul+1
  2715  060C  01AA               	clrf	??___flmul+2
  2716  060D  01AB               	clrf	??___flmul+3
  2717  060E  0828               	movf	??___flmul,w
  2718  060F  07AE               	addwf	___flmul@grs,f
  2719  0610  0829               	movf	??___flmul+1,w
  2720  0611  1103               	clrz
  2721  0612  1803               	skipnc
  2722  0613  3E01               	addlw	1
  2723  0614  1D03               	btfss	3,2
  2724  0615  07AF               	addwf	___flmul@grs+1,f
  2725  0616  082A               	movf	??___flmul+2,w
  2726  0617  1103               	clrz
  2727  0618  1803               	skipnc
  2728  0619  3E01               	addlw	1
  2729  061A  1D03               	btfss	3,2
  2730  061B  07B0               	addwf	___flmul@grs+2,f
  2731  061C  082B               	movf	??___flmul+3,w
  2732  061D  1103               	clrz
  2733  061E  1803               	skipnc
  2734  061F  3E01               	addlw	1
  2735  0620  1D03               	btfss	3,2
  2736  0621  07B1               	addwf	___flmul@grs+3,f
  2737  0622  0820               	movf	___flmul@b,w
  2738  0623  00A8               	movwf	??___flmul
  2739  0624  0828               	movf	??___flmul,w
  2740  0625  00F0               	movwf	__Umul8_16@multiplicand
  2741  0626  0825               	movf	___flmul@a+1,w
  2742  0627  120A  118A  2005  120A  118A  	fcall	__Umul8_16
  2743  062C  0871               	movf	?__Umul8_16+1,w
  2744  062D  1283               	bcf	3,5	;RP0=0, select bank0
  2745  062E  1303               	bcf	3,6	;RP1=0, select bank0
  2746  062F  00B9               	movwf	___flmul@temp+1
  2747  0630  0870               	movf	?__Umul8_16,w
  2748  0631  00B8               	movwf	___flmul@temp
  2749  0632  0838               	movf	___flmul@temp,w
  2750  0633  00A8               	movwf	??___flmul
  2751  0634  0839               	movf	___flmul@temp+1,w
  2752  0635  00A9               	movwf	??___flmul+1
  2753  0636  01AA               	clrf	??___flmul+2
  2754  0637  01AB               	clrf	??___flmul+3
  2755  0638  0828               	movf	??___flmul,w
  2756  0639  07AE               	addwf	___flmul@grs,f
  2757  063A  0829               	movf	??___flmul+1,w
  2758  063B  1103               	clrz
  2759  063C  1803               	skipnc
  2760  063D  3E01               	addlw	1
  2761  063E  1D03               	btfss	3,2
  2762  063F  07AF               	addwf	___flmul@grs+1,f
  2763  0640  082A               	movf	??___flmul+2,w
  2764  0641  1103               	clrz
  2765  0642  1803               	skipnc
  2766  0643  3E01               	addlw	1
  2767  0644  1D03               	btfss	3,2
  2768  0645  07B0               	addwf	___flmul@grs+2,f
  2769  0646  082B               	movf	??___flmul+3,w
  2770  0647  1103               	clrz
  2771  0648  1803               	skipnc
  2772  0649  3E01               	addlw	1
  2773  064A  1D03               	btfss	3,2
  2774  064B  07B1               	addwf	___flmul@grs+3,f
  2775  064C  3008               	movlw	8
  2776  064D  00A8               	movwf	??___flmul
  2777  064E                     u2165:	
  2778  064E  1003               	clrc
  2779  064F  0DAE               	rlf	___flmul@grs,f
  2780  0650  0DAF               	rlf	___flmul@grs+1,f
  2781  0651  0DB0               	rlf	___flmul@grs+2,f
  2782  0652  0DB1               	rlf	___flmul@grs+3,f
  2783  0653  0BA8               	decfsz	??___flmul,f
  2784  0654  2E4E               	goto	u2165
  2785  0655  0820               	movf	___flmul@b,w
  2786  0656  00A8               	movwf	??___flmul
  2787  0657  0828               	movf	??___flmul,w
  2788  0658  00F0               	movwf	__Umul8_16@multiplicand
  2789  0659  0824               	movf	___flmul@a,w
  2790  065A  120A  118A  2005  120A  118A  	fcall	__Umul8_16
  2791  065F  0871               	movf	?__Umul8_16+1,w
  2792  0660  1283               	bcf	3,5	;RP0=0, select bank0
  2793  0661  1303               	bcf	3,6	;RP1=0, select bank0
  2794  0662  00B9               	movwf	___flmul@temp+1
  2795  0663  0870               	movf	?__Umul8_16,w
  2796  0664  00B8               	movwf	___flmul@temp
  2797  0665  0838               	movf	___flmul@temp,w
  2798  0666  00A8               	movwf	??___flmul
  2799  0667  0839               	movf	___flmul@temp+1,w
  2800  0668  00A9               	movwf	??___flmul+1
  2801  0669  01AA               	clrf	??___flmul+2
  2802  066A  01AB               	clrf	??___flmul+3
  2803  066B  0828               	movf	??___flmul,w
  2804  066C  07AE               	addwf	___flmul@grs,f
  2805  066D  0829               	movf	??___flmul+1,w
  2806  066E  1103               	clrz
  2807  066F  1803               	skipnc
  2808  0670  3E01               	addlw	1
  2809  0671  1D03               	btfss	3,2
  2810  0672  07AF               	addwf	___flmul@grs+1,f
  2811  0673  082A               	movf	??___flmul+2,w
  2812  0674  1103               	clrz
  2813  0675  1803               	skipnc
  2814  0676  3E01               	addlw	1
  2815  0677  1D03               	btfss	3,2
  2816  0678  07B0               	addwf	___flmul@grs+2,f
  2817  0679  082B               	movf	??___flmul+3,w
  2818  067A  1103               	clrz
  2819  067B  1803               	skipnc
  2820  067C  3E01               	addlw	1
  2821  067D  1D03               	btfss	3,2
  2822  067E  07B1               	addwf	___flmul@grs+3,f
  2823  067F  0821               	movf	___flmul@b+1,w
  2824  0680  00A8               	movwf	??___flmul
  2825  0681  0828               	movf	??___flmul,w
  2826  0682  00F0               	movwf	__Umul8_16@multiplicand
  2827  0683  0826               	movf	___flmul@a+2,w
  2828  0684  120A  118A  2005  120A  118A  	fcall	__Umul8_16
  2829  0689  0871               	movf	?__Umul8_16+1,w
  2830  068A  1283               	bcf	3,5	;RP0=0, select bank0
  2831  068B  1303               	bcf	3,6	;RP1=0, select bank0
  2832  068C  00B9               	movwf	___flmul@temp+1
  2833  068D  0870               	movf	?__Umul8_16,w
  2834  068E  00B8               	movwf	___flmul@temp
  2835  068F  0838               	movf	___flmul@temp,w
  2836  0690  00A8               	movwf	??___flmul
  2837  0691  0839               	movf	___flmul@temp+1,w
  2838  0692  00A9               	movwf	??___flmul+1
  2839  0693  01AA               	clrf	??___flmul+2
  2840  0694  01AB               	clrf	??___flmul+3
  2841  0695  0828               	movf	??___flmul,w
  2842  0696  07B4               	addwf	___flmul@prod,f
  2843  0697  0829               	movf	??___flmul+1,w
  2844  0698  1103               	clrz
  2845  0699  1803               	skipnc
  2846  069A  3E01               	addlw	1
  2847  069B  1D03               	btfss	3,2
  2848  069C  07B5               	addwf	___flmul@prod+1,f
  2849  069D  082A               	movf	??___flmul+2,w
  2850  069E  1103               	clrz
  2851  069F  1803               	skipnc
  2852  06A0  3E01               	addlw	1
  2853  06A1  1D03               	btfss	3,2
  2854  06A2  07B6               	addwf	___flmul@prod+2,f
  2855  06A3  082B               	movf	??___flmul+3,w
  2856  06A4  1103               	clrz
  2857  06A5  1803               	skipnc
  2858  06A6  3E01               	addlw	1
  2859  06A7  1D03               	btfss	3,2
  2860  06A8  07B7               	addwf	___flmul@prod+3,f
  2861  06A9  0822               	movf	___flmul@b+2,w
  2862  06AA  00A8               	movwf	??___flmul
  2863  06AB  0828               	movf	??___flmul,w
  2864  06AC  00F0               	movwf	__Umul8_16@multiplicand
  2865  06AD  0825               	movf	___flmul@a+1,w
  2866  06AE  120A  118A  2005  120A  118A  	fcall	__Umul8_16
  2867  06B3  0871               	movf	?__Umul8_16+1,w
  2868  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  2869  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  2870  06B6  00B9               	movwf	___flmul@temp+1
  2871  06B7  0870               	movf	?__Umul8_16,w
  2872  06B8  00B8               	movwf	___flmul@temp
  2873  06B9  0838               	movf	___flmul@temp,w
  2874  06BA  00A8               	movwf	??___flmul
  2875  06BB  0839               	movf	___flmul@temp+1,w
  2876  06BC  00A9               	movwf	??___flmul+1
  2877  06BD  01AA               	clrf	??___flmul+2
  2878  06BE  01AB               	clrf	??___flmul+3
  2879  06BF  0828               	movf	??___flmul,w
  2880  06C0  07B4               	addwf	___flmul@prod,f
  2881  06C1  0829               	movf	??___flmul+1,w
  2882  06C2  1103               	clrz
  2883  06C3  1803               	skipnc
  2884  06C4  3E01               	addlw	1
  2885  06C5  1D03               	btfss	3,2
  2886  06C6  07B5               	addwf	___flmul@prod+1,f
  2887  06C7  082A               	movf	??___flmul+2,w
  2888  06C8  1103               	clrz
  2889  06C9  1803               	skipnc
  2890  06CA  3E01               	addlw	1
  2891  06CB  1D03               	btfss	3,2
  2892  06CC  07B6               	addwf	___flmul@prod+2,f
  2893  06CD  082B               	movf	??___flmul+3,w
  2894  06CE  1103               	clrz
  2895  06CF  1803               	skipnc
  2896  06D0  3E01               	addlw	1
  2897  06D1  1D03               	btfss	3,2
  2898  06D2  07B7               	addwf	___flmul@prod+3,f
  2899  06D3  0822               	movf	___flmul@b+2,w
  2900  06D4  00A8               	movwf	??___flmul
  2901  06D5  0828               	movf	??___flmul,w
  2902  06D6  00F0               	movwf	__Umul8_16@multiplicand
  2903  06D7  0826               	movf	___flmul@a+2,w
  2904  06D8  120A  118A  2005  120A  118A  	fcall	__Umul8_16
  2905  06DD  0871               	movf	?__Umul8_16+1,w
  2906  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  2907  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  2908  06E0  00B9               	movwf	___flmul@temp+1
  2909  06E1  0870               	movf	?__Umul8_16,w
  2910  06E2  00B8               	movwf	___flmul@temp
  2911  06E3  0838               	movf	___flmul@temp,w
  2912  06E4  00A8               	movwf	??___flmul
  2913  06E5  0839               	movf	___flmul@temp+1,w
  2914  06E6  00A9               	movwf	??___flmul+1
  2915  06E7  01AA               	clrf	??___flmul+2
  2916  06E8  01AB               	clrf	??___flmul+3
  2917  06E9  3008               	movlw	8
  2918  06EA                     u2205:	
  2919  06EA  1003               	clrc
  2920  06EB  0DA8               	rlf	??___flmul,f
  2921  06EC  0DA9               	rlf	??___flmul+1,f
  2922  06ED  0DAA               	rlf	??___flmul+2,f
  2923  06EE  0DAB               	rlf	??___flmul+3,f
  2924  06EF  3EFF               	addlw	-1
  2925  06F0  1D03               	skipz
  2926  06F1  2EEA               	goto	u2205
  2927  06F2  0828               	movf	??___flmul,w
  2928  06F3  07B4               	addwf	___flmul@prod,f
  2929  06F4  0829               	movf	??___flmul+1,w
  2930  06F5  1103               	clrz
  2931  06F6  1803               	skipnc
  2932  06F7  3E01               	addlw	1
  2933  06F8  1D03               	btfss	3,2
  2934  06F9  07B5               	addwf	___flmul@prod+1,f
  2935  06FA  082A               	movf	??___flmul+2,w
  2936  06FB  1103               	clrz
  2937  06FC  1803               	skipnc
  2938  06FD  3E01               	addlw	1
  2939  06FE  1D03               	btfss	3,2
  2940  06FF  07B6               	addwf	___flmul@prod+2,f
  2941  0700  082B               	movf	??___flmul+3,w
  2942  0701  1103               	clrz
  2943  0702  1803               	skipnc
  2944  0703  3E01               	addlw	1
  2945  0704  1D03               	btfss	3,2
  2946  0705  07B7               	addwf	___flmul@prod+3,f
  2947  0706  082E               	movf	___flmul@grs,w
  2948  0707  00A8               	movwf	??___flmul
  2949  0708  082F               	movf	___flmul@grs+1,w
  2950  0709  00A9               	movwf	??___flmul+1
  2951  070A  0830               	movf	___flmul@grs+2,w
  2952  070B  00AA               	movwf	??___flmul+2
  2953  070C  0831               	movf	___flmul@grs+3,w
  2954  070D  00AB               	movwf	??___flmul+3
  2955  070E  3018               	movlw	24
  2956  070F                     u2225:	
  2957  070F  1003               	clrc
  2958  0710  0CAB               	rrf	??___flmul+3,f
  2959  0711  0CAA               	rrf	??___flmul+2,f
  2960  0712  0CA9               	rrf	??___flmul+1,f
  2961  0713  0CA8               	rrf	??___flmul,f
  2962  0714  3EFF               	addlw	-1
  2963  0715  1D03               	skipz
  2964  0716  2F0F               	goto	u2225
  2965  0717  0828               	movf	??___flmul,w
  2966  0718  07B4               	addwf	___flmul@prod,f
  2967  0719  0829               	movf	??___flmul+1,w
  2968  071A  1103               	clrz
  2969  071B  1803               	skipnc
  2970  071C  3E01               	addlw	1
  2971  071D  1D03               	btfss	3,2
  2972  071E  07B5               	addwf	___flmul@prod+1,f
  2973  071F  082A               	movf	??___flmul+2,w
  2974  0720  1103               	clrz
  2975  0721  1803               	skipnc
  2976  0722  3E01               	addlw	1
  2977  0723  1D03               	btfss	3,2
  2978  0724  07B6               	addwf	___flmul@prod+2,f
  2979  0725  082B               	movf	??___flmul+3,w
  2980  0726  1103               	clrz
  2981  0727  1803               	skipnc
  2982  0728  3E01               	addlw	1
  2983  0729  1D03               	btfss	3,2
  2984  072A  07B7               	addwf	___flmul@prod+3,f
  2985  072B  3008               	movlw	8
  2986  072C  00A8               	movwf	??___flmul
  2987  072D                     u2245:	
  2988  072D  1003               	clrc
  2989  072E  0DAE               	rlf	___flmul@grs,f
  2990  072F  0DAF               	rlf	___flmul@grs+1,f
  2991  0730  0DB0               	rlf	___flmul@grs+2,f
  2992  0731  0DB1               	rlf	___flmul@grs+3,f
  2993  0732  0BA8               	decfsz	??___flmul,f
  2994  0733  2F2D               	goto	u2245
  2995  0734  0833               	movf	___flmul@bexp,w
  2996  0735  0732               	addwf	___flmul@aexp,w
  2997  0736  00A8               	movwf	??___flmul
  2998  0737  01A9               	clrf	??___flmul+1
  2999  0738  0DA9               	rlf	??___flmul+1,f
  3000  0739  0828               	movf	??___flmul,w
  3001  073A  3E82               	addlw	130
  3002  073B  00B8               	movwf	___flmul@temp
  3003  073C  0829               	movf	??___flmul+1,w
  3004  073D  1803               	skipnc
  3005  073E  3E01               	addlw	1
  3006  073F  3EFF               	addlw	255
  3007  0740  00B9               	movwf	___flmul@temp+1
  3008  0741                     l1904:	
  3009  0741  1BB6               	btfsc	___flmul@prod+2,7
  3010  0742  2F5E               	goto	l1906
  3011  0743  3001               	movlw	1
  3012  0744  00A8               	movwf	??___flmul
  3013  0745                     u2255:	
  3014  0745  1003               	clrc
  3015  0746  0DB4               	rlf	___flmul@prod,f
  3016  0747  0DB5               	rlf	___flmul@prod+1,f
  3017  0748  0DB6               	rlf	___flmul@prod+2,f
  3018  0749  0DB7               	rlf	___flmul@prod+3,f
  3019  074A  0BA8               	decfsz	??___flmul,f
  3020  074B  2F45               	goto	u2255
  3021  074C  1BB1               	btfsc	___flmul@grs+3,7
  3022  074D  1434               	bsf	___flmul@prod,0
  3023  074E  3001               	movlw	1
  3024  074F  00A8               	movwf	??___flmul
  3025  0750                     u2275:	
  3026  0750  1003               	clrc
  3027  0751  0DAE               	rlf	___flmul@grs,f
  3028  0752  0DAF               	rlf	___flmul@grs+1,f
  3029  0753  0DB0               	rlf	___flmul@grs+2,f
  3030  0754  0DB1               	rlf	___flmul@grs+3,f
  3031  0755  0BA8               	decfsz	??___flmul,f
  3032  0756  2F50               	goto	u2275
  3033  0757  30FF               	movlw	255
  3034  0758  07B8               	addwf	___flmul@temp,f
  3035  0759  1803               	skipnc
  3036  075A  0AB9               	incf	___flmul@temp+1,f
  3037  075B  30FF               	movlw	255
  3038  075C  07B9               	addwf	___flmul@temp+1,f
  3039  075D  2F41               	goto	l1904
  3040  075E                     l1906:	
  3041  075E  01B2               	clrf	___flmul@aexp
  3042  075F  1FB1               	btfss	___flmul@grs+3,7
  3043  0760  2F77               	goto	l1916
  3044  0761  30FF               	movlw	255
  3045  0762  052E               	andwf	___flmul@grs,w
  3046  0763  00A8               	movwf	??___flmul
  3047  0764  30FF               	movlw	255
  3048  0765  052F               	andwf	___flmul@grs+1,w
  3049  0766  00A9               	movwf	??___flmul+1
  3050  0767  30FF               	movlw	255
  3051  0768  0530               	andwf	___flmul@grs+2,w
  3052  0769  00AA               	movwf	??___flmul+2
  3053  076A  307F               	movlw	127
  3054  076B  0531               	andwf	___flmul@grs+3,w
  3055  076C  00AB               	movwf	??___flmul+3
  3056  076D  082B               	movf	??___flmul+3,w
  3057  076E  042A               	iorwf	??___flmul+2,w
  3058  076F  0429               	iorwf	??___flmul+1,w
  3059  0770  0428               	iorwf	??___flmul,w
  3060  0771  1903               	skipnz
  3061  0772  1834               	btfsc	___flmul@prod,0
  3062  0773  2F75               	goto	l1912
  3063  0774  2F77               	goto	l1916
  3064  0775                     l1912:	
  3065  0775  01B2               	clrf	___flmul@aexp
  3066  0776  0AB2               	incf	___flmul@aexp,f
  3067  0777                     l1916:	
  3068  0777  0832               	movf	___flmul@aexp,w
  3069  0778  1903               	btfsc	3,2
  3070  0779  2FA9               	goto	l1926
  3071  077A  3001               	movlw	1
  3072  077B  07B4               	addwf	___flmul@prod,f
  3073  077C  3000               	movlw	0
  3074  077D  1803               	skipnc
  3075  077E  3001               	movlw	1
  3076  077F  07B5               	addwf	___flmul@prod+1,f
  3077  0780  3000               	movlw	0
  3078  0781  1803               	skipnc
  3079  0782  3001               	movlw	1
  3080  0783  07B6               	addwf	___flmul@prod+2,f
  3081  0784  3000               	movlw	0
  3082  0785  1803               	skipnc
  3083  0786  3001               	movlw	1
  3084  0787  07B7               	addwf	___flmul@prod+3,f
  3085  0788  1C37               	btfss	___flmul@prod+3,0
  3086  0789  2FA9               	goto	l1926
  3087  078A  0834               	movf	___flmul@prod,w
  3088  078B  00A8               	movwf	??___flmul
  3089  078C  0835               	movf	___flmul@prod+1,w
  3090  078D  00A9               	movwf	??___flmul+1
  3091  078E  0836               	movf	___flmul@prod+2,w
  3092  078F  00AA               	movwf	??___flmul+2
  3093  0790  0837               	movf	___flmul@prod+3,w
  3094  0791  00AB               	movwf	??___flmul+3
  3095  0792  3001               	movlw	1
  3096  0793  00AC               	movwf	??___flmul+4
  3097  0794                     u2345:	
  3098  0794  0D2B               	rlf	??___flmul+3,w
  3099  0795  0CAB               	rrf	??___flmul+3,f
  3100  0796  0CAA               	rrf	??___flmul+2,f
  3101  0797  0CA9               	rrf	??___flmul+1,f
  3102  0798  0CA8               	rrf	??___flmul,f
  3103  0799  0BAC               	decfsz	??___flmul+4,f
  3104  079A  2F94               	goto	u2345
  3105  079B  082B               	movf	??___flmul+3,w
  3106  079C  00B7               	movwf	___flmul@prod+3
  3107  079D  082A               	movf	??___flmul+2,w
  3108  079E  00B6               	movwf	___flmul@prod+2
  3109  079F  0829               	movf	??___flmul+1,w
  3110  07A0  00B5               	movwf	___flmul@prod+1
  3111  07A1  0828               	movf	??___flmul,w
  3112  07A2  00B4               	movwf	___flmul@prod
  3113  07A3  3001               	movlw	1
  3114  07A4  07B8               	addwf	___flmul@temp,f
  3115  07A5  1803               	skipnc
  3116  07A6  0AB9               	incf	___flmul@temp+1,f
  3117  07A7  3000               	movlw	0
  3118  07A8  07B9               	addwf	___flmul@temp+1,f
  3119  07A9                     l1926:	
  3120  07A9  0839               	movf	___flmul@temp+1,w
  3121  07AA  3A80               	xorlw	128
  3122  07AB  00FF               	movwf	127
  3123  07AC  3080               	movlw	128
  3124  07AD  027F               	subwf	127,w
  3125  07AE  1D03               	skipz
  3126  07AF  2FB2               	goto	u2355
  3127  07B0  30FF               	movlw	255
  3128  07B1  0238               	subwf	___flmul@temp,w
  3129  07B2                     u2355:	
  3130  07B2  1C03               	skipc
  3131  07B3  2FBF               	goto	l1930
  3132  07B4  307F               	movlw	127
  3133  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  3134  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  3135  07B7  00B7               	movwf	___flmul@prod+3
  3136  07B8  3080               	movlw	128
  3137  07B9  00B6               	movwf	___flmul@prod+2
  3138  07BA  3000               	movlw	0
  3139  07BB  00B5               	movwf	___flmul@prod+1
  3140  07BC  3000               	movlw	0
  3141  07BD  00B4               	movwf	___flmul@prod
  3142  07BE  2FEF               	goto	l669
  3143  07BF                     l1930:	
  3144  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  3145  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  3146  07C1  0839               	movf	___flmul@temp+1,w
  3147  07C2  3A80               	xorlw	128
  3148  07C3  00FF               	movwf	127
  3149  07C4  3080               	movlw	128
  3150  07C5  027F               	subwf	127,w
  3151  07C6  1D03               	skipz
  3152  07C7  2FCA               	goto	u2365
  3153  07C8  3001               	movlw	1
  3154  07C9  0238               	subwf	___flmul@temp,w
  3155  07CA                     u2365:	
  3156  07CA  1803               	skipnc
  3157  07CB  2FD8               	goto	l1936
  3158  07CC  3000               	movlw	0
  3159  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  3160  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  3161  07CF  00B7               	movwf	___flmul@prod+3
  3162  07D0  3000               	movlw	0
  3163  07D1  00B6               	movwf	___flmul@prod+2
  3164  07D2  3000               	movlw	0
  3165  07D3  00B5               	movwf	___flmul@prod+1
  3166  07D4  3000               	movlw	0
  3167  07D5  00B4               	movwf	___flmul@prod
  3168  07D6  01AD               	clrf	___flmul@sign
  3169  07D7  2FEF               	goto	l669
  3170  07D8                     l1936:	
  3171  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  3172  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  3173  07DA  0838               	movf	___flmul@temp,w
  3174  07DB  00A8               	movwf	??___flmul
  3175  07DC  0828               	movf	??___flmul,w
  3176  07DD  00B3               	movwf	___flmul@bexp
  3177  07DE  30FF               	movlw	255
  3178  07DF  05B4               	andwf	___flmul@prod,f
  3179  07E0  30FF               	movlw	255
  3180  07E1  05B5               	andwf	___flmul@prod+1,f
  3181  07E2  307F               	movlw	127
  3182  07E3  05B6               	andwf	___flmul@prod+2,f
  3183  07E4  3000               	movlw	0
  3184  07E5  05B7               	andwf	___flmul@prod+3,f
  3185  07E6  1833               	btfsc	___flmul@bexp,0
  3186  07E7  17B6               	bsf	___flmul@prod+2,7
  3187  07E8  0833               	movf	___flmul@bexp,w
  3188  07E9  00A8               	movwf	??___flmul
  3189  07EA  1003               	clrc
  3190  07EB  0C28               	rrf	??___flmul,w
  3191  07EC  00A9               	movwf	??___flmul+1
  3192  07ED  0829               	movf	??___flmul+1,w
  3193  07EE  00B7               	movwf	___flmul@prod+3
  3194  07EF                     l669:	
  3195  07EF  082D               	movf	___flmul@sign,w
  3196  07F0  00A8               	movwf	??___flmul
  3197  07F1  0828               	movf	??___flmul,w
  3198  07F2  04B7               	iorwf	___flmul@prod+3,f
  3199  07F3  0837               	movf	___flmul@prod+3,w
  3200  07F4  00A3               	movwf	?___flmul+3
  3201  07F5  0836               	movf	___flmul@prod+2,w
  3202  07F6  00A2               	movwf	?___flmul+2
  3203  07F7  0835               	movf	___flmul@prod+1,w
  3204  07F8  00A1               	movwf	?___flmul+1
  3205  07F9  0834               	movf	___flmul@prod,w
  3206  07FA  00A0               	movwf	?___flmul
  3207  07FB  0008               	return
  3208  07FC                     __end_of___flmul:	
  3209                           
  3210                           	psect	text9
  3211  0005                     __ptext9:	
  3212 ;; *************** function __Umul8_16 *****************
  3213 ;; Defined at:
  3214 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;  multiplier      1    wreg     unsigned char 
  3217 ;;  multiplicand    1    0[COMMON] unsigned char 
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;  multiplier      1    8[COMMON] unsigned char 
  3220 ;;  word_mpld       2    6[COMMON] unsigned int 
  3221 ;;  product         2    4[COMMON] unsigned int 
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  2    0[COMMON] unsigned int 
  3224 ;; Registers used:
  3225 ;;		wreg, status,2, status,0
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3231 ;;      Params:         2       0       0       0       0
  3232 ;;      Locals:         5       0       0       0       0
  3233 ;;      Temps:          2       0       0       0       0
  3234 ;;      Totals:         9       0       0       0       0
  3235 ;;Total ram usage:        9 bytes
  3236 ;; Hardware stack levels used:    1
  3237 ;; This function calls:
  3238 ;;		Nothing
  3239 ;; This function is called by:
  3240 ;;		___flmul
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           
  3245                           ;psect for function __Umul8_16
  3246  0005                     __Umul8_16:	
  3247                           
  3248                           ;incstack = 0
  3249                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3250                           ;__Umul8_16@multiplier stored from wreg
  3251  0005  00F8               	movwf	__Umul8_16@multiplier
  3252  0006  01F4               	clrf	__Umul8_16@product
  3253  0007  01F5               	clrf	__Umul8_16@product+1
  3254  0008  0870               	movf	__Umul8_16@multiplicand,w
  3255  0009  00F2               	movwf	??__Umul8_16
  3256  000A  01F3               	clrf	??__Umul8_16+1
  3257  000B  0872               	movf	??__Umul8_16,w
  3258  000C  00F6               	movwf	__Umul8_16@word_mpld
  3259  000D  0873               	movf	??__Umul8_16+1,w
  3260  000E  00F7               	movwf	__Umul8_16@word_mpld+1
  3261  000F                     l1528:	
  3262  000F  1C78               	btfss	__Umul8_16@multiplier,0
  3263  0010  2817               	goto	l714
  3264  0011  0876               	movf	__Umul8_16@word_mpld,w
  3265  0012  07F4               	addwf	__Umul8_16@product,f
  3266  0013  1803               	skipnc
  3267  0014  0AF5               	incf	__Umul8_16@product+1,f
  3268  0015  0877               	movf	__Umul8_16@word_mpld+1,w
  3269  0016  07F5               	addwf	__Umul8_16@product+1,f
  3270  0017                     l714:	
  3271  0017  3001               	movlw	1
  3272  0018                     u1445:	
  3273  0018  1003               	clrc
  3274  0019  0DF6               	rlf	__Umul8_16@word_mpld,f
  3275  001A  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  3276  001B  3EFF               	addlw	-1
  3277  001C  1D03               	skipz
  3278  001D  2818               	goto	u1445
  3279  001E  1003               	clrc
  3280  001F  0CF8               	rrf	__Umul8_16@multiplier,f
  3281  0020  0878               	movf	__Umul8_16@multiplier,w
  3282  0021  1D03               	btfss	3,2
  3283  0022  280F               	goto	l1528
  3284  0023  0875               	movf	__Umul8_16@product+1,w
  3285  0024  00F1               	movwf	?__Umul8_16+1
  3286  0025  0874               	movf	__Umul8_16@product,w
  3287  0026  00F0               	movwf	?__Umul8_16
  3288  0027  0008               	return
  3289  0028                     __end_of__Umul8_16:	
  3290                           
  3291                           	psect	text10
  3292  016F                     __ptext10:	
  3293 ;; *************** function ___fldiv *****************
  3294 ;; Defined at:
  3295 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;  a               4   26[BANK0 ] unsigned int 
  3298 ;;  b               4   30[BANK0 ] unsigned int 
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;  grs             4   46[BANK0 ] unsigned long 
  3301 ;;  rem             4   39[BANK0 ] unsigned long 
  3302 ;;  new_exp         2   44[BANK0 ] int 
  3303 ;;  aexp            1   51[BANK0 ] unsigned char 
  3304 ;;  bexp            1   50[BANK0 ] unsigned char 
  3305 ;;  sign            1   43[BANK0 ] unsigned char 
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  4   26[BANK0 ] unsigned char 
  3308 ;; Registers used:
  3309 ;;		wreg, status,2, status,0, btemp+1
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3315 ;;      Params:         0       8       0       0       0
  3316 ;;      Locals:         0      13       0       0       0
  3317 ;;      Temps:          0       5       0       0       0
  3318 ;;      Totals:         0      26       0       0       0
  3319 ;;Total ram usage:       26 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; This function calls:
  3322 ;;		Nothing
  3323 ;; This function is called by:
  3324 ;;		_pwmSetDuty1
  3325 ;;		_pwmSetDuty2
  3326 ;;		_main
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           
  3331                           ;psect for function ___fldiv
  3332  016F                     ___fldiv:	
  3333                           
  3334                           ;incstack = 0
  3335                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  3336  016F  1283               	bcf	3,5	;RP0=0, select bank0
  3337  0170  1303               	bcf	3,6	;RP1=0, select bank0
  3338  0171  0841               	movf	___fldiv@b+3,w
  3339  0172  3980               	andlw	128
  3340  0173  00C2               	movwf	??___fldiv
  3341  0174  0842               	movf	??___fldiv,w
  3342  0175  00CB               	movwf	___fldiv@sign
  3343  0176  0841               	movf	___fldiv@b+3,w
  3344  0177  00C2               	movwf	??___fldiv
  3345  0178  0742               	addwf	??___fldiv,w
  3346  0179  00C3               	movwf	??___fldiv+1
  3347  017A  0843               	movf	??___fldiv+1,w
  3348  017B  00D2               	movwf	___fldiv@bexp
  3349  017C  1BC0               	btfsc	___fldiv@b+2,7
  3350  017D  1452               	bsf	___fldiv@bexp,0
  3351  017E  0852               	movf	___fldiv@bexp,w
  3352  017F  1903               	btfsc	3,2
  3353  0180  298F               	goto	l1684
  3354  0181  0A52               	incf	___fldiv@bexp,w
  3355  0182  1D03               	btfss	3,2
  3356  0183  298C               	goto	l1680
  3357  0184  3000               	movlw	0
  3358  0185  00C1               	movwf	___fldiv@b+3
  3359  0186  3000               	movlw	0
  3360  0187  00C0               	movwf	___fldiv@b+2
  3361  0188  3000               	movlw	0
  3362  0189  00BF               	movwf	___fldiv@b+1
  3363  018A  3000               	movlw	0
  3364  018B  00BE               	movwf	___fldiv@b
  3365  018C                     l1680:	
  3366  018C  17C0               	bsf	___fldiv@b+2,7
  3367  018D  01C1               	clrf	___fldiv@b+3
  3368  018E  2997               	goto	l1686
  3369  018F                     l1684:	
  3370  018F  3000               	movlw	0
  3371  0190  00C1               	movwf	___fldiv@b+3
  3372  0191  3000               	movlw	0
  3373  0192  00C0               	movwf	___fldiv@b+2
  3374  0193  3000               	movlw	0
  3375  0194  00BF               	movwf	___fldiv@b+1
  3376  0195  3000               	movlw	0
  3377  0196  00BE               	movwf	___fldiv@b
  3378  0197                     l1686:	
  3379  0197  083D               	movf	___fldiv@a+3,w
  3380  0198  3980               	andlw	128
  3381  0199  00C2               	movwf	??___fldiv
  3382  019A  0842               	movf	??___fldiv,w
  3383  019B  06CB               	xorwf	___fldiv@sign,f
  3384  019C  083D               	movf	___fldiv@a+3,w
  3385  019D  00C2               	movwf	??___fldiv
  3386  019E  0742               	addwf	??___fldiv,w
  3387  019F  00C3               	movwf	??___fldiv+1
  3388  01A0  0843               	movf	??___fldiv+1,w
  3389  01A1  00D3               	movwf	___fldiv@aexp
  3390  01A2  1BBC               	btfsc	___fldiv@a+2,7
  3391  01A3  1453               	bsf	___fldiv@aexp,0
  3392  01A4  0853               	movf	___fldiv@aexp,w
  3393  01A5  1903               	btfsc	3,2
  3394  01A6  29B5               	goto	l1704
  3395  01A7  0A53               	incf	___fldiv@aexp,w
  3396  01A8  1D03               	btfss	3,2
  3397  01A9  29B2               	goto	l1700
  3398  01AA  3000               	movlw	0
  3399  01AB  00BD               	movwf	___fldiv@a+3
  3400  01AC  3000               	movlw	0
  3401  01AD  00BC               	movwf	___fldiv@a+2
  3402  01AE  3000               	movlw	0
  3403  01AF  00BB               	movwf	___fldiv@a+1
  3404  01B0  3000               	movlw	0
  3405  01B1  00BA               	movwf	___fldiv@a
  3406  01B2                     l1700:	
  3407  01B2  17BC               	bsf	___fldiv@a+2,7
  3408  01B3  01BD               	clrf	___fldiv@a+3
  3409  01B4  29BD               	goto	l617
  3410  01B5                     l1704:	
  3411  01B5  3000               	movlw	0
  3412  01B6  00BD               	movwf	___fldiv@a+3
  3413  01B7  3000               	movlw	0
  3414  01B8  00BC               	movwf	___fldiv@a+2
  3415  01B9  3000               	movlw	0
  3416  01BA  00BB               	movwf	___fldiv@a+1
  3417  01BB  3000               	movlw	0
  3418  01BC  00BA               	movwf	___fldiv@a
  3419  01BD                     l617:	
  3420  01BD  083D               	movf	___fldiv@a+3,w
  3421  01BE  043C               	iorwf	___fldiv@a+2,w
  3422  01BF  043B               	iorwf	___fldiv@a+1,w
  3423  01C0  043A               	iorwf	___fldiv@a,w
  3424  01C1  1D03               	skipz
  3425  01C2  29DC               	goto	l1714
  3426  01C3  3000               	movlw	0
  3427  01C4  00C1               	movwf	___fldiv@b+3
  3428  01C5  3000               	movlw	0
  3429  01C6  00C0               	movwf	___fldiv@b+2
  3430  01C7  3000               	movlw	0
  3431  01C8  00BF               	movwf	___fldiv@b+1
  3432  01C9  3000               	movlw	0
  3433  01CA  00BE               	movwf	___fldiv@b
  3434  01CB  3080               	movlw	128
  3435  01CC  04C0               	iorwf	___fldiv@b+2,f
  3436  01CD  307F               	movlw	127
  3437  01CE  04C1               	iorwf	___fldiv@b+3,f
  3438  01CF                     L2:	
  3439  01CF  084B               	movf	___fldiv@sign,w
  3440  01D0  00C2               	movwf	??___fldiv
  3441  01D1  0842               	movf	??___fldiv,w
  3442  01D2  04C1               	iorwf	___fldiv@b+3,f
  3443  01D3  0841               	movf	___fldiv@b+3,w
  3444  01D4  00BD               	movwf	?___fldiv+3
  3445  01D5  0840               	movf	___fldiv@b+2,w
  3446  01D6  00BC               	movwf	?___fldiv+2
  3447  01D7  083F               	movf	___fldiv@b+1,w
  3448  01D8  00BB               	movwf	?___fldiv+1
  3449  01D9  083E               	movf	___fldiv@b,w
  3450  01DA  00BA               	movwf	?___fldiv
  3451  01DB  0008               	return
  3452  01DC                     l1714:	
  3453  01DC  0852               	movf	___fldiv@bexp,w
  3454  01DD  1D03               	btfss	3,2
  3455  01DE  29E8               	goto	l1720
  3456  01DF  3000               	movlw	0
  3457  01E0  00BD               	movwf	?___fldiv+3
  3458  01E1  3000               	movlw	0
  3459  01E2  00BC               	movwf	?___fldiv+2
  3460  01E3  3000               	movlw	0
  3461  01E4  00BB               	movwf	?___fldiv+1
  3462  01E5  3000               	movlw	0
  3463  01E6  00BA               	movwf	?___fldiv
  3464  01E7  0008               	return
  3465  01E8                     l1720:	
  3466  01E8  0852               	movf	___fldiv@bexp,w
  3467  01E9  00C2               	movwf	??___fldiv
  3468  01EA  01C3               	clrf	??___fldiv+1
  3469  01EB  0843               	movf	??___fldiv+1,w
  3470  01EC  00C5               	movwf	??___fldiv+3
  3471  01ED  0853               	movf	___fldiv@aexp,w
  3472  01EE  0242               	subwf	??___fldiv,w
  3473  01EF  00C4               	movwf	??___fldiv+2
  3474  01F0  1C03               	skipc
  3475  01F1  03C5               	decf	??___fldiv+3,f
  3476  01F2  0844               	movf	??___fldiv+2,w
  3477  01F3  3E7F               	addlw	127
  3478  01F4  00CC               	movwf	___fldiv@new_exp
  3479  01F5  0845               	movf	??___fldiv+3,w
  3480  01F6  1803               	skipnc
  3481  01F7  3E01               	addlw	1
  3482  01F8  3E00               	addlw	0
  3483  01F9  00CD               	movwf	___fldiv@new_exp+1
  3484  01FA  0841               	movf	___fldiv@b+3,w
  3485  01FB  00CA               	movwf	___fldiv@rem+3
  3486  01FC  0840               	movf	___fldiv@b+2,w
  3487  01FD  00C9               	movwf	___fldiv@rem+2
  3488  01FE  083F               	movf	___fldiv@b+1,w
  3489  01FF  00C8               	movwf	___fldiv@rem+1
  3490  0200  083E               	movf	___fldiv@b,w
  3491  0201  00C7               	movwf	___fldiv@rem
  3492  0202  3000               	movlw	0
  3493  0203  00C1               	movwf	___fldiv@b+3
  3494  0204  3000               	movlw	0
  3495  0205  00C0               	movwf	___fldiv@b+2
  3496  0206  3000               	movlw	0
  3497  0207  00BF               	movwf	___fldiv@b+1
  3498  0208  3000               	movlw	0
  3499  0209  00BE               	movwf	___fldiv@b
  3500  020A  3000               	movlw	0
  3501  020B  00D1               	movwf	___fldiv@grs+3
  3502  020C  3000               	movlw	0
  3503  020D  00D0               	movwf	___fldiv@grs+2
  3504  020E  3000               	movlw	0
  3505  020F  00CF               	movwf	___fldiv@grs+1
  3506  0210  3000               	movlw	0
  3507  0211  00CE               	movwf	___fldiv@grs
  3508  0212  01D3               	clrf	___fldiv@aexp
  3509  0213                     l1748:	
  3510  0213  301A               	movlw	26
  3511  0214  0253               	subwf	___fldiv@aexp,w
  3512  0215  1803               	btfsc	3,0
  3513  0216  2A5B               	goto	l1750
  3514  0217  0853               	movf	___fldiv@aexp,w
  3515  0218  1903               	btfsc	3,2
  3516  0219  2A37               	goto	l1740
  3517  021A  3001               	movlw	1
  3518  021B  00C2               	movwf	??___fldiv
  3519  021C                     u1815:	
  3520  021C  1003               	clrc
  3521  021D  0DC7               	rlf	___fldiv@rem,f
  3522  021E  0DC8               	rlf	___fldiv@rem+1,f
  3523  021F  0DC9               	rlf	___fldiv@rem+2,f
  3524  0220  0DCA               	rlf	___fldiv@rem+3,f
  3525  0221  0BC2               	decfsz	??___fldiv,f
  3526  0222  2A1C               	goto	u1815
  3527  0223  3001               	movlw	1
  3528  0224  00C2               	movwf	??___fldiv
  3529  0225                     u1825:	
  3530  0225  1003               	clrc
  3531  0226  0DBE               	rlf	___fldiv@b,f
  3532  0227  0DBF               	rlf	___fldiv@b+1,f
  3533  0228  0DC0               	rlf	___fldiv@b+2,f
  3534  0229  0DC1               	rlf	___fldiv@b+3,f
  3535  022A  0BC2               	decfsz	??___fldiv,f
  3536  022B  2A25               	goto	u1825
  3537  022C  1BD1               	btfsc	___fldiv@grs+3,7
  3538  022D  143E               	bsf	___fldiv@b,0
  3539  022E  3001               	movlw	1
  3540  022F  00C2               	movwf	??___fldiv
  3541  0230                     u1845:	
  3542  0230  1003               	clrc
  3543  0231  0DCE               	rlf	___fldiv@grs,f
  3544  0232  0DCF               	rlf	___fldiv@grs+1,f
  3545  0233  0DD0               	rlf	___fldiv@grs+2,f
  3546  0234  0DD1               	rlf	___fldiv@grs+3,f
  3547  0235  0BC2               	decfsz	??___fldiv,f
  3548  0236  2A30               	goto	u1845
  3549  0237                     l1740:	
  3550  0237  083D               	movf	___fldiv@a+3,w
  3551  0238  024A               	subwf	___fldiv@rem+3,w
  3552  0239  1D03               	skipz
  3553  023A  2A45               	goto	u1855
  3554  023B  083C               	movf	___fldiv@a+2,w
  3555  023C  0249               	subwf	___fldiv@rem+2,w
  3556  023D  1D03               	skipz
  3557  023E  2A45               	goto	u1855
  3558  023F  083B               	movf	___fldiv@a+1,w
  3559  0240  0248               	subwf	___fldiv@rem+1,w
  3560  0241  1D03               	skipz
  3561  0242  2A45               	goto	u1855
  3562  0243  083A               	movf	___fldiv@a,w
  3563  0244  0247               	subwf	___fldiv@rem,w
  3564  0245                     u1855:	
  3565  0245  1C03               	skipc
  3566  0246  2A56               	goto	l1746
  3567  0247  1751               	bsf	___fldiv@grs+3,6
  3568  0248  083A               	movf	___fldiv@a,w
  3569  0249  02C7               	subwf	___fldiv@rem,f
  3570  024A  083B               	movf	___fldiv@a+1,w
  3571  024B  1C03               	skipc
  3572  024C  0F3B               	incfsz	___fldiv@a+1,w
  3573  024D  02C8               	subwf	___fldiv@rem+1,f
  3574  024E  083C               	movf	___fldiv@a+2,w
  3575  024F  1C03               	skipc
  3576  0250  0F3C               	incfsz	___fldiv@a+2,w
  3577  0251  02C9               	subwf	___fldiv@rem+2,f
  3578  0252  083D               	movf	___fldiv@a+3,w
  3579  0253  1C03               	skipc
  3580  0254  0F3D               	incfsz	___fldiv@a+3,w
  3581  0255  02CA               	subwf	___fldiv@rem+3,f
  3582  0256                     l1746:	
  3583  0256  3001               	movlw	1
  3584  0257  00C2               	movwf	??___fldiv
  3585  0258  0842               	movf	??___fldiv,w
  3586  0259  07D3               	addwf	___fldiv@aexp,f
  3587  025A  2A13               	goto	l1748
  3588  025B                     l1750:	
  3589  025B  084A               	movf	___fldiv@rem+3,w
  3590  025C  0449               	iorwf	___fldiv@rem+2,w
  3591  025D  0448               	iorwf	___fldiv@rem+1,w
  3592  025E  0447               	iorwf	___fldiv@rem,w
  3593  025F  1D03               	btfss	3,2
  3594  0260  144E               	bsf	___fldiv@grs,0
  3595  0261                     l1764:	
  3596  0261  1BC0               	btfsc	___fldiv@b+2,7
  3597  0262  2A7E               	goto	l1766
  3598  0263  3001               	movlw	1
  3599  0264  00C2               	movwf	??___fldiv
  3600  0265                     u1885:	
  3601  0265  1003               	clrc
  3602  0266  0DBE               	rlf	___fldiv@b,f
  3603  0267  0DBF               	rlf	___fldiv@b+1,f
  3604  0268  0DC0               	rlf	___fldiv@b+2,f
  3605  0269  0DC1               	rlf	___fldiv@b+3,f
  3606  026A  0BC2               	decfsz	??___fldiv,f
  3607  026B  2A65               	goto	u1885
  3608  026C  1BD1               	btfsc	___fldiv@grs+3,7
  3609  026D  143E               	bsf	___fldiv@b,0
  3610  026E  3001               	movlw	1
  3611  026F  00C2               	movwf	??___fldiv
  3612  0270                     u1905:	
  3613  0270  1003               	clrc
  3614  0271  0DCE               	rlf	___fldiv@grs,f
  3615  0272  0DCF               	rlf	___fldiv@grs+1,f
  3616  0273  0DD0               	rlf	___fldiv@grs+2,f
  3617  0274  0DD1               	rlf	___fldiv@grs+3,f
  3618  0275  0BC2               	decfsz	??___fldiv,f
  3619  0276  2A70               	goto	u1905
  3620  0277  30FF               	movlw	255
  3621  0278  07CC               	addwf	___fldiv@new_exp,f
  3622  0279  1803               	skipnc
  3623  027A  0ACD               	incf	___fldiv@new_exp+1,f
  3624  027B  30FF               	movlw	255
  3625  027C  07CD               	addwf	___fldiv@new_exp+1,f
  3626  027D  2A61               	goto	l1764
  3627  027E                     l1766:	
  3628  027E  01D3               	clrf	___fldiv@aexp
  3629  027F  1FD1               	btfss	___fldiv@grs+3,7
  3630  0280  2A97               	goto	l1776
  3631  0281  30FF               	movlw	255
  3632  0282  054E               	andwf	___fldiv@grs,w
  3633  0283  00C2               	movwf	??___fldiv
  3634  0284  30FF               	movlw	255
  3635  0285  054F               	andwf	___fldiv@grs+1,w
  3636  0286  00C3               	movwf	??___fldiv+1
  3637  0287  30FF               	movlw	255
  3638  0288  0550               	andwf	___fldiv@grs+2,w
  3639  0289  00C4               	movwf	??___fldiv+2
  3640  028A  307F               	movlw	127
  3641  028B  0551               	andwf	___fldiv@grs+3,w
  3642  028C  00C5               	movwf	??___fldiv+3
  3643  028D  0845               	movf	??___fldiv+3,w
  3644  028E  0444               	iorwf	??___fldiv+2,w
  3645  028F  0443               	iorwf	??___fldiv+1,w
  3646  0290  0442               	iorwf	??___fldiv,w
  3647  0291  1903               	skipnz
  3648  0292  183E               	btfsc	___fldiv@b,0
  3649  0293  2A95               	goto	l1772
  3650  0294  2A97               	goto	l1776
  3651  0295                     l1772:	
  3652  0295  01D3               	clrf	___fldiv@aexp
  3653  0296  0AD3               	incf	___fldiv@aexp,f
  3654  0297                     l1776:	
  3655  0297  0853               	movf	___fldiv@aexp,w
  3656  0298  1903               	btfsc	3,2
  3657  0299  2AC9               	goto	l1786
  3658  029A  3001               	movlw	1
  3659  029B  07BE               	addwf	___fldiv@b,f
  3660  029C  3000               	movlw	0
  3661  029D  1803               	skipnc
  3662  029E  3001               	movlw	1
  3663  029F  07BF               	addwf	___fldiv@b+1,f
  3664  02A0  3000               	movlw	0
  3665  02A1  1803               	skipnc
  3666  02A2  3001               	movlw	1
  3667  02A3  07C0               	addwf	___fldiv@b+2,f
  3668  02A4  3000               	movlw	0
  3669  02A5  1803               	skipnc
  3670  02A6  3001               	movlw	1
  3671  02A7  07C1               	addwf	___fldiv@b+3,f
  3672  02A8  1C41               	btfss	___fldiv@b+3,0
  3673  02A9  2AC9               	goto	l1786
  3674  02AA  083E               	movf	___fldiv@b,w
  3675  02AB  00C2               	movwf	??___fldiv
  3676  02AC  083F               	movf	___fldiv@b+1,w
  3677  02AD  00C3               	movwf	??___fldiv+1
  3678  02AE  0840               	movf	___fldiv@b+2,w
  3679  02AF  00C4               	movwf	??___fldiv+2
  3680  02B0  0841               	movf	___fldiv@b+3,w
  3681  02B1  00C5               	movwf	??___fldiv+3
  3682  02B2  3001               	movlw	1
  3683  02B3  00C6               	movwf	??___fldiv+4
  3684  02B4                     u1975:	
  3685  02B4  0D45               	rlf	??___fldiv+3,w
  3686  02B5  0CC5               	rrf	??___fldiv+3,f
  3687  02B6  0CC4               	rrf	??___fldiv+2,f
  3688  02B7  0CC3               	rrf	??___fldiv+1,f
  3689  02B8  0CC2               	rrf	??___fldiv,f
  3690  02B9  0BC6               	decfsz	??___fldiv+4,f
  3691  02BA  2AB4               	goto	u1975
  3692  02BB  0845               	movf	??___fldiv+3,w
  3693  02BC  00C1               	movwf	___fldiv@b+3
  3694  02BD  0844               	movf	??___fldiv+2,w
  3695  02BE  00C0               	movwf	___fldiv@b+2
  3696  02BF  0843               	movf	??___fldiv+1,w
  3697  02C0  00BF               	movwf	___fldiv@b+1
  3698  02C1  0842               	movf	??___fldiv,w
  3699  02C2  00BE               	movwf	___fldiv@b
  3700  02C3  3001               	movlw	1
  3701  02C4  07CC               	addwf	___fldiv@new_exp,f
  3702  02C5  1803               	skipnc
  3703  02C6  0ACD               	incf	___fldiv@new_exp+1,f
  3704  02C7  3000               	movlw	0
  3705  02C8  07CD               	addwf	___fldiv@new_exp+1,f
  3706  02C9                     l1786:	
  3707  02C9  084D               	movf	___fldiv@new_exp+1,w
  3708  02CA  3A80               	xorlw	128
  3709  02CB  00FF               	movwf	127
  3710  02CC  3080               	movlw	128
  3711  02CD  027F               	subwf	127,w
  3712  02CE  1D03               	skipz
  3713  02CF  2AD2               	goto	u1985
  3714  02D0  30FF               	movlw	255
  3715  02D1  024C               	subwf	___fldiv@new_exp,w
  3716  02D2                     u1985:	
  3717  02D2  1C03               	skipc
  3718  02D3  2AE2               	goto	l1790
  3719  02D4  30FF               	movlw	255
  3720  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  3721  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  3722  02D7  00CC               	movwf	___fldiv@new_exp
  3723  02D8  3000               	movlw	0
  3724  02D9  00CD               	movwf	___fldiv@new_exp+1
  3725  02DA  3000               	movlw	0
  3726  02DB  00C1               	movwf	___fldiv@b+3
  3727  02DC  3000               	movlw	0
  3728  02DD  00C0               	movwf	___fldiv@b+2
  3729  02DE  3000               	movlw	0
  3730  02DF  00BF               	movwf	___fldiv@b+1
  3731  02E0  3000               	movlw	0
  3732  02E1  00BE               	movwf	___fldiv@b
  3733  02E2                     l1790:	
  3734  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  3735  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  3736  02E4  084D               	movf	___fldiv@new_exp+1,w
  3737  02E5  3A80               	xorlw	128
  3738  02E6  00FF               	movwf	127
  3739  02E7  3080               	movlw	128
  3740  02E8  027F               	subwf	127,w
  3741  02E9  1D03               	skipz
  3742  02EA  2AED               	goto	u1995
  3743  02EB  3001               	movlw	1
  3744  02EC  024C               	subwf	___fldiv@new_exp,w
  3745  02ED                     u1995:	
  3746  02ED  1803               	skipnc
  3747  02EE  2AFC               	goto	l639
  3748  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  3749  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  3750  02F1  01CC               	clrf	___fldiv@new_exp
  3751  02F2  01CD               	clrf	___fldiv@new_exp+1
  3752  02F3  3000               	movlw	0
  3753  02F4  00C1               	movwf	___fldiv@b+3
  3754  02F5  3000               	movlw	0
  3755  02F6  00C0               	movwf	___fldiv@b+2
  3756  02F7  3000               	movlw	0
  3757  02F8  00BF               	movwf	___fldiv@b+1
  3758  02F9  3000               	movlw	0
  3759  02FA  00BE               	movwf	___fldiv@b
  3760  02FB  01CB               	clrf	___fldiv@sign
  3761  02FC                     l639:	
  3762  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  3763  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  3764  02FE  084C               	movf	___fldiv@new_exp,w
  3765  02FF  00C2               	movwf	??___fldiv
  3766  0300  0842               	movf	??___fldiv,w
  3767  0301  00D2               	movwf	___fldiv@bexp
  3768  0302  1C52               	btfss	___fldiv@bexp,0
  3769  0303  2B06               	goto	l1802
  3770  0304  17C0               	bsf	___fldiv@b+2,7
  3771  0305  2B0A               	goto	l641
  3772  0306                     l1802:	
  3773  0306  307F               	movlw	127
  3774  0307  00C2               	movwf	??___fldiv
  3775  0308  0842               	movf	??___fldiv,w
  3776  0309  05C0               	andwf	___fldiv@b+2,f
  3777  030A                     l641:	
  3778  030A  0852               	movf	___fldiv@bexp,w
  3779  030B  00C2               	movwf	??___fldiv
  3780  030C  1003               	clrc
  3781  030D  0C42               	rrf	??___fldiv,w
  3782  030E  00C3               	movwf	??___fldiv+1
  3783  030F  0843               	movf	??___fldiv+1,w
  3784  0310  00C1               	movwf	___fldiv@b+3
  3785  0311  29CF               	goto	L2
  3786  0312                     __end_of___fldiv:	
  3787                           
  3788                           	psect	text11
  3789  0C5C                     __ptext11:	
  3790 ;; *************** function _pwmInit2 *****************
  3791 ;; Defined at:
  3792 ;;		line 23 in file "./pwm.h"
  3793 ;; Parameters:    Size  Location     Type
  3794 ;;		None
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;		None
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  1    wreg      void 
  3799 ;; Registers used:
  3800 ;;		wreg, status,2, status,0, pclath, cstack
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3806 ;;      Params:         0       0       0       0       0
  3807 ;;      Locals:         0       0       0       0       0
  3808 ;;      Temps:          0       0       0       0       0
  3809 ;;      Totals:         0       0       0       0       0
  3810 ;;Total ram usage:        0 bytes
  3811 ;; Hardware stack levels used:    1
  3812 ;; Hardware stack levels required when called:    1
  3813 ;; This function calls:
  3814 ;;		_setPR2
  3815 ;;		_setTMR2
  3816 ;; This function is called by:
  3817 ;;		_main
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           
  3822                           ;psect for function _pwmInit2
  3823  0C5C                     _pwmInit2:	
  3824                           
  3825                           ;./pwm.h: 24:     setPR2();
  3826                           
  3827                           ;incstack = 0
  3828                           ; Regs used in _pwmInit2: [wreg+status,2+status,0+pclath+cstack]
  3829  0C5C  120A  158A  244D  120A  158A  	fcall	_setPR2
  3830                           
  3831                           ;./pwm.h: 25:     setTMR2(2);
  3832  0C61  3002               	movlw	2
  3833  0C62  120A  158A  24B5   	fcall	_setTMR2
  3834  0C65  0008               	return
  3835  0C66                     __end_of_pwmInit2:	
  3836                           
  3837                           	psect	text12
  3838  0C52                     __ptext12:	
  3839 ;; *************** function _pwmInit1 *****************
  3840 ;; Defined at:
  3841 ;;		line 18 in file "./pwm.h"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;		None
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;		None
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  1    wreg      void 
  3848 ;; Registers used:
  3849 ;;		wreg, status,2, status,0, pclath, cstack
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3855 ;;      Params:         0       0       0       0       0
  3856 ;;      Locals:         0       0       0       0       0
  3857 ;;      Temps:          0       0       0       0       0
  3858 ;;      Totals:         0       0       0       0       0
  3859 ;;Total ram usage:        0 bytes
  3860 ;; Hardware stack levels used:    1
  3861 ;; Hardware stack levels required when called:    1
  3862 ;; This function calls:
  3863 ;;		_setPR2
  3864 ;;		_setTMR2
  3865 ;; This function is called by:
  3866 ;;		_main
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870                           
  3871                           ;psect for function _pwmInit1
  3872  0C52                     _pwmInit1:	
  3873                           
  3874                           ;./pwm.h: 19:     setPR2();
  3875                           
  3876                           ;incstack = 0
  3877                           ; Regs used in _pwmInit1: [wreg+status,2+status,0+pclath+cstack]
  3878  0C52  120A  158A  244D  120A  158A  	fcall	_setPR2
  3879                           
  3880                           ;./pwm.h: 20:     setTMR2(1);
  3881  0C57  3001               	movlw	1
  3882  0C58  120A  158A  24B5   	fcall	_setTMR2
  3883  0C5B  0008               	return
  3884  0C5C                     __end_of_pwmInit1:	
  3885                           
  3886                           	psect	text13
  3887  0CB5                     __ptext13:	
  3888 ;; *************** function _setTMR2 *****************
  3889 ;; Defined at:
  3890 ;;		line 45 in file "./pwm.h"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;  pwm             1    wreg     const unsigned char 
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;  pwm             1    0[COMMON] const unsigned char 
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  1    wreg      void 
  3897 ;; Registers used:
  3898 ;;		wreg, status,2, status,0
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3904 ;;      Params:         0       0       0       0       0
  3905 ;;      Locals:         1       0       0       0       0
  3906 ;;      Temps:          0       0       0       0       0
  3907 ;;      Totals:         1       0       0       0       0
  3908 ;;Total ram usage:        1 bytes
  3909 ;; Hardware stack levels used:    1
  3910 ;; This function calls:
  3911 ;;		Nothing
  3912 ;; This function is called by:
  3913 ;;		_pwmInit1
  3914 ;;		_pwmInit2
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           
  3919                           ;psect for function _setTMR2
  3920  0CB5                     _setTMR2:	
  3921                           
  3922                           ;incstack = 0
  3923                           ; Regs used in _setTMR2: [wreg+status,2+status,0]
  3924                           ;setTMR2@pwm stored from wreg
  3925  0CB5  00F0               	movwf	setTMR2@pwm
  3926                           
  3927                           ;./pwm.h: 46:     if (pwm == 2) {
  3928  0CB6  3002               	movlw	2
  3929  0CB7  0670               	xorwf	setTMR2@pwm,w
  3930  0CB8  1D03               	btfss	3,2
  3931  0CB9  2CBF               	goto	l90
  3932                           
  3933                           ;./pwm.h: 47:         CCP2M3 = 1;
  3934  0CBA  1283               	bcf	3,5	;RP0=0, select bank0
  3935  0CBB  1303               	bcf	3,6	;RP1=0, select bank0
  3936  0CBC  159D               	bsf	29,3	;volatile
  3937                           
  3938                           ;./pwm.h: 48:         CCP2M2 = 1;
  3939  0CBD  151D               	bsf	29,2	;volatile
  3940                           
  3941                           ;./pwm.h: 49:     } else {
  3942  0CBE  2CC3               	goto	l94
  3943  0CBF                     l90:	
  3944                           
  3945                           ;./pwm.h: 50:         CCP1M3 = 1;
  3946  0CBF  1283               	bcf	3,5	;RP0=0, select bank0
  3947  0CC0  1303               	bcf	3,6	;RP1=0, select bank0
  3948  0CC1  1597               	bsf	23,3	;volatile
  3949                           
  3950                           ;./pwm.h: 51:         CCP1M2 = 1;
  3951  0CC2  1517               	bsf	23,2	;volatile
  3952  0CC3                     l94:	
  3953                           
  3954                           ;./pwm.h: 60:         T2CKPS0 = 1;
  3955  0CC3  1412               	bsf	18,0	;volatile
  3956                           
  3957                           ;./pwm.h: 61:         T2CKPS1 = 1;
  3958  0CC4  1492               	bsf	18,1	;volatile
  3959                           
  3960                           ;./pwm.h: 63:     TMR2ON = 1;
  3961  0CC5  1512               	bsf	18,2	;volatile
  3962                           
  3963                           ;./pwm.h: 64:     if (pwm == 2)
  3964  0CC6  3002               	movlw	2
  3965  0CC7  0670               	xorwf	setTMR2@pwm,w
  3966  0CC8  1D03               	btfss	3,2
  3967  0CC9  2CCE               	goto	l96
  3968                           
  3969                           ;./pwm.h: 65:         TRISC2 = 0;
  3970  0CCA  1683               	bsf	3,5	;RP0=1, select bank1
  3971  0CCB  1303               	bcf	3,6	;RP1=0, select bank1
  3972  0CCC  1107               	bcf	7,2	;volatile
  3973  0CCD  0008               	return
  3974  0CCE                     l96:	
  3975                           ;./pwm.h: 66:     else
  3976                           
  3977                           
  3978                           ;./pwm.h: 67:         TRISC1 = 0;
  3979  0CCE  1683               	bsf	3,5	;RP0=1, select bank1
  3980  0CCF  1303               	bcf	3,6	;RP1=0, select bank1
  3981  0CD0  1087               	bcf	7,1	;volatile
  3982  0CD1  0008               	return
  3983  0CD2                     __end_of_setTMR2:	
  3984                           
  3985                           	psect	text14
  3986  0C4D                     __ptext14:	
  3987 ;; *************** function _setPR2 *****************
  3988 ;; Defined at:
  3989 ;;		line 14 in file "./pwm.h"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;		None
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;		None
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  1    wreg      void 
  3996 ;; Registers used:
  3997 ;;		wreg
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4003 ;;      Params:         0       0       0       0       0
  4004 ;;      Locals:         0       0       0       0       0
  4005 ;;      Temps:          0       0       0       0       0
  4006 ;;      Totals:         0       0       0       0       0
  4007 ;;Total ram usage:        0 bytes
  4008 ;; Hardware stack levels used:    1
  4009 ;; This function calls:
  4010 ;;		Nothing
  4011 ;; This function is called by:
  4012 ;;		_pwmInit1
  4013 ;;		_pwmInit2
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017                           
  4018                           ;psect for function _setPR2
  4019  0C4D                     _setPR2:	
  4020                           
  4021                           ;./pwm.h: 15:     PR2 = (4000000 / (245 * 4 * 16)) - 1;
  4022                           
  4023                           ;incstack = 0
  4024                           ; Regs used in _setPR2: [wreg]
  4025  0C4D  30FE               	movlw	254
  4026  0C4E  1683               	bsf	3,5	;RP0=1, select bank1
  4027  0C4F  1303               	bcf	3,6	;RP1=0, select bank1
  4028  0C50  0092               	movwf	18	;volatile
  4029  0C51  0008               	return
  4030  0C52                     __end_of_setPR2:	
  4031                           
  4032                           	psect	text15
  4033  0DD6                     __ptext15:	
  4034 ;; *************** function _lcdSetCursor *****************
  4035 ;; Defined at:
  4036 ;;		line 56 in file "./lcd.h"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  a               1    wreg     unsigned char 
  4039 ;;  b               1    4[COMMON] unsigned char 
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;  a               1    7[COMMON] unsigned char 
  4042 ;;  temp            1   10[COMMON] unsigned char 
  4043 ;;  y               1    9[COMMON] unsigned char 
  4044 ;;  z               1    8[COMMON] unsigned char 
  4045 ;; Return value:  Size  Location     Type
  4046 ;;                  1    wreg      void 
  4047 ;; Registers used:
  4048 ;;		wreg, status,2, status,0, pclath, cstack
  4049 ;; Tracked objects:
  4050 ;;		On entry : 0/0
  4051 ;;		On exit  : 0/0
  4052 ;;		Unchanged: 0/0
  4053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4054 ;;      Params:         1       0       0       0       0
  4055 ;;      Locals:         4       0       0       0       0
  4056 ;;      Temps:          2       0       0       0       0
  4057 ;;      Totals:         7       0       0       0       0
  4058 ;;Total ram usage:        7 bytes
  4059 ;; Hardware stack levels used:    1
  4060 ;; Hardware stack levels required when called:    2
  4061 ;; This function calls:
  4062 ;;		_lcdCmd
  4063 ;; This function is called by:
  4064 ;;		_main
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           
  4069                           ;psect for function _lcdSetCursor
  4070  0DD6                     _lcdSetCursor:	
  4071                           
  4072                           ;incstack = 0
  4073                           ; Regs used in _lcdSetCursor: [wreg+status,2+status,0+pclath+cstack]
  4074                           ;lcdSetCursor@a stored from wreg
  4075  0DD6  00F7               	movwf	lcdSetCursor@a
  4076                           
  4077                           ;./lcd.h: 57:     char temp, z, y;;./lcd.h: 58:     if (a == 1) {
  4078  0DD7  0377               	decf	lcdSetCursor@a,w
  4079  0DD8  1D03               	btfss	3,2
  4080  0DD9  2DFB               	goto	l2032
  4081                           
  4082                           ;./lcd.h: 59:         temp = 0x80 + b - 1;
  4083  0DDA  0874               	movf	lcdSetCursor@b,w
  4084  0DDB  3E7F               	addlw	127
  4085  0DDC  00F5               	movwf	??_lcdSetCursor
  4086  0DDD  0875               	movf	??_lcdSetCursor,w
  4087  0DDE  00FA               	movwf	lcdSetCursor@temp
  4088                           
  4089                           ;./lcd.h: 60:         z = temp >> 4;
  4090  0DDF  087A               	movf	lcdSetCursor@temp,w
  4091  0DE0  00F5               	movwf	??_lcdSetCursor
  4092  0DE1  3004               	movlw	4
  4093  0DE2                     u2595:	
  4094  0DE2  1003               	clrc
  4095  0DE3  0CF5               	rrf	??_lcdSetCursor,f
  4096  0DE4  3EFF               	addlw	-1
  4097  0DE5  1D03               	skipz
  4098  0DE6  2DE2               	goto	u2595
  4099  0DE7  0875               	movf	??_lcdSetCursor,w
  4100  0DE8  00F6               	movwf	??_lcdSetCursor+1
  4101  0DE9  0876               	movf	??_lcdSetCursor+1,w
  4102  0DEA  00F8               	movwf	lcdSetCursor@z
  4103                           
  4104                           ;./lcd.h: 61:         y = temp & 0x0F;
  4105  0DEB  087A               	movf	lcdSetCursor@temp,w
  4106  0DEC  390F               	andlw	15
  4107  0DED  00F5               	movwf	??_lcdSetCursor
  4108  0DEE  0875               	movf	??_lcdSetCursor,w
  4109  0DEF  00F9               	movwf	lcdSetCursor@y
  4110                           
  4111                           ;./lcd.h: 62:         lcdCmd(z);
  4112  0DF0  0878               	movf	lcdSetCursor@z,w
  4113  0DF1  120A  158A  249B  120A  158A  	fcall	_lcdCmd
  4114                           
  4115                           ;./lcd.h: 63:         lcdCmd(y);
  4116  0DF6  0879               	movf	lcdSetCursor@y,w
  4117  0DF7  120A  158A  249B   	fcall	_lcdCmd
  4118                           
  4119                           ;./lcd.h: 64:     } else if (a == 2) {
  4120  0DFA  0008               	return
  4121  0DFB                     l2032:	
  4122  0DFB  3002               	movlw	2
  4123  0DFC  0677               	xorwf	lcdSetCursor@a,w
  4124  0DFD  1D03               	btfss	3,2
  4125  0DFE  0008               	return
  4126                           
  4127                           ;./lcd.h: 65:         temp = 0xC0 + b - 1;
  4128  0DFF  0874               	movf	lcdSetCursor@b,w
  4129  0E00  3EBF               	addlw	191
  4130  0E01  00F5               	movwf	??_lcdSetCursor
  4131  0E02  0875               	movf	??_lcdSetCursor,w
  4132  0E03  00FA               	movwf	lcdSetCursor@temp
  4133                           
  4134                           ;./lcd.h: 66:         z = temp >> 4;
  4135  0E04  087A               	movf	lcdSetCursor@temp,w
  4136  0E05  00F5               	movwf	??_lcdSetCursor
  4137  0E06  3004               	movlw	4
  4138  0E07                     u2615:	
  4139  0E07  1003               	clrc
  4140  0E08  0CF5               	rrf	??_lcdSetCursor,f
  4141  0E09  3EFF               	addlw	-1
  4142  0E0A  1D03               	skipz
  4143  0E0B  2E07               	goto	u2615
  4144  0E0C  0875               	movf	??_lcdSetCursor,w
  4145  0E0D  00F6               	movwf	??_lcdSetCursor+1
  4146  0E0E  0876               	movf	??_lcdSetCursor+1,w
  4147  0E0F  00F8               	movwf	lcdSetCursor@z
  4148                           
  4149                           ;./lcd.h: 67:         y = temp & 0x0F;
  4150  0E10  087A               	movf	lcdSetCursor@temp,w
  4151  0E11  390F               	andlw	15
  4152  0E12  00F5               	movwf	??_lcdSetCursor
  4153  0E13  0875               	movf	??_lcdSetCursor,w
  4154  0E14  00F9               	movwf	lcdSetCursor@y
  4155                           
  4156                           ;./lcd.h: 68:         lcdCmd(z);
  4157  0E15  0878               	movf	lcdSetCursor@z,w
  4158  0E16  120A  158A  249B  120A  158A  	fcall	_lcdCmd
  4159                           
  4160                           ;./lcd.h: 69:         lcdCmd(y);
  4161  0E1B  0879               	movf	lcdSetCursor@y,w
  4162  0E1C  120A  158A  249B   	fcall	_lcdCmd
  4163  0E1F  0008               	return
  4164  0E20                     __end_of_lcdSetCursor:	
  4165                           
  4166                           	psect	text16
  4167  0D99                     __ptext16:	
  4168 ;; *************** function _lcdPrint *****************
  4169 ;; Defined at:
  4170 ;;		line 108 in file "./lcd.h"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;  a               2    5[COMMON] PTR unsigned char 
  4173 ;;		 -> main@entero(16), STR_2(16), STR_1(14), 
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;  i               2   10[COMMON] int 
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  1    wreg      void 
  4178 ;; Registers used:
  4179 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4185 ;;      Params:         2       0       0       0       0
  4186 ;;      Locals:         2       0       0       0       0
  4187 ;;      Temps:          3       0       0       0       0
  4188 ;;      Totals:         7       0       0       0       0
  4189 ;;Total ram usage:        7 bytes
  4190 ;; Hardware stack levels used:    1
  4191 ;; Hardware stack levels required when called:    2
  4192 ;; This function calls:
  4193 ;;		_lcdWriteChar
  4194 ;; This function is called by:
  4195 ;;		_main
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           
  4200                           ;psect for function _lcdPrint
  4201  0D99                     _lcdPrint:	
  4202                           
  4203                           ;./lcd.h: 109:     int i;;./lcd.h: 110:     for (i = 0; a[i] != '\0'; i++)
  4204                           
  4205                           ;incstack = 0
  4206                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4207  0D99  01FA               	clrf	lcdPrint@i
  4208  0D9A  01FB               	clrf	lcdPrint@i+1
  4209  0D9B                     l2078:	
  4210  0D9B  087A               	movf	lcdPrint@i,w
  4211  0D9C  0775               	addwf	lcdPrint@a,w
  4212  0D9D  00F8               	movwf	??_lcdPrint+1
  4213  0D9E  0876               	movf	lcdPrint@a+1,w
  4214  0D9F  00F7               	movwf	??_lcdPrint
  4215  0DA0  1803               	skipnc
  4216  0DA1  0AF7               	incf	??_lcdPrint,f
  4217  0DA2  1BFA               	btfsc	lcdPrint@i,7
  4218  0DA3  03F7               	decf	??_lcdPrint,f
  4219  0DA4  0877               	movf	??_lcdPrint,w
  4220  0DA5  00F9               	movwf	??_lcdPrint+2
  4221  0DA6  0879               	movf	??_lcdPrint+2,w
  4222  0DA7  1283               	bcf	3,5	;RP0=0, select bank0
  4223  0DA8  1303               	bcf	3,6	;RP1=0, select bank0
  4224  0DA9  00FF               	movwf	127
  4225  0DAA  0878               	movf	??_lcdPrint+1,w
  4226  0DAB  0084               	movwf	4
  4227  0DAC  120A  158A  2000  120A  158A  	fcall	stringtab
  4228  0DB1  3A00               	xorlw	0
  4229  0DB2  1903               	btfsc	3,2
  4230  0DB3  0008               	return
  4231                           
  4232                           ;./lcd.h: 111:         lcdWriteChar(a[i]);
  4233  0DB4  087A               	movf	lcdPrint@i,w
  4234  0DB5  0775               	addwf	lcdPrint@a,w
  4235  0DB6  00F8               	movwf	??_lcdPrint+1
  4236  0DB7  0876               	movf	lcdPrint@a+1,w
  4237  0DB8  00F7               	movwf	??_lcdPrint
  4238  0DB9  1803               	skipnc
  4239  0DBA  0AF7               	incf	??_lcdPrint,f
  4240  0DBB  1BFA               	btfsc	lcdPrint@i,7
  4241  0DBC  03F7               	decf	??_lcdPrint,f
  4242  0DBD  0877               	movf	??_lcdPrint,w
  4243  0DBE  00F9               	movwf	??_lcdPrint+2
  4244  0DBF  0879               	movf	??_lcdPrint+2,w
  4245  0DC0  1283               	bcf	3,5	;RP0=0, select bank0
  4246  0DC1  1303               	bcf	3,6	;RP1=0, select bank0
  4247  0DC2  00FF               	movwf	127
  4248  0DC3  0878               	movf	??_lcdPrint+1,w
  4249  0DC4  0084               	movwf	4
  4250  0DC5  120A  158A  2000  120A  158A  	fcall	stringtab
  4251  0DCA  120A  158A  2526  120A  158A  	fcall	_lcdWriteChar
  4252  0DCF  3001               	movlw	1
  4253  0DD0  07FA               	addwf	lcdPrint@i,f
  4254  0DD1  1803               	skipnc
  4255  0DD2  0AFB               	incf	lcdPrint@i+1,f
  4256  0DD3  3000               	movlw	0
  4257  0DD4  07FB               	addwf	lcdPrint@i+1,f
  4258  0DD5  2D9B               	goto	l2078
  4259  0DD6                     __end_of_lcdPrint:	
  4260                           
  4261                           	psect	text17
  4262  0D26                     __ptext17:	
  4263 ;; *************** function _lcdWriteChar *****************
  4264 ;; Defined at:
  4265 ;;		line 93 in file "./lcd.h"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;  a               1    wreg     unsigned char 
  4268 ;; Auto vars:     Size  Location     Type
  4269 ;;  a               1    4[COMMON] unsigned char 
  4270 ;;  y               1    3[COMMON] unsigned char 
  4271 ;;  temp            1    2[COMMON] unsigned char 
  4272 ;; Return value:  Size  Location     Type
  4273 ;;                  1    wreg      void 
  4274 ;; Registers used:
  4275 ;;		wreg, status,2, status,0, pclath, cstack
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4281 ;;      Params:         0       0       0       0       0
  4282 ;;      Locals:         3       0       0       0       0
  4283 ;;      Temps:          1       0       0       0       0
  4284 ;;      Totals:         4       0       0       0       0
  4285 ;;Total ram usage:        4 bytes
  4286 ;; Hardware stack levels used:    1
  4287 ;; Hardware stack levels required when called:    1
  4288 ;; This function calls:
  4289 ;;		_lcdPort
  4290 ;; This function is called by:
  4291 ;;		_lcdPrint
  4292 ;; This function uses a non-reentrant model
  4293 ;;
  4294                           
  4295                           
  4296                           ;psect for function _lcdWriteChar
  4297  0D26                     _lcdWriteChar:	
  4298                           
  4299                           ;incstack = 0
  4300                           ; Regs used in _lcdWriteChar: [wreg+status,2+status,0+pclath+cstack]
  4301                           ;lcdWriteChar@a stored from wreg
  4302  0D26  00F4               	movwf	lcdWriteChar@a
  4303                           
  4304                           ;./lcd.h: 94:     char temp, y;;./lcd.h: 95:     temp = a & 0x0F;
  4305  0D27  0874               	movf	lcdWriteChar@a,w
  4306  0D28  390F               	andlw	15
  4307  0D29  00F1               	movwf	??_lcdWriteChar
  4308  0D2A  0871               	movf	??_lcdWriteChar,w
  4309  0D2B  00F2               	movwf	lcdWriteChar@temp
  4310                           
  4311                           ;./lcd.h: 96:     y = a & 0xF0;
  4312  0D2C  0874               	movf	lcdWriteChar@a,w
  4313  0D2D  39F0               	andlw	240
  4314  0D2E  00F1               	movwf	??_lcdWriteChar
  4315  0D2F  0871               	movf	??_lcdWriteChar,w
  4316  0D30  00F3               	movwf	lcdWriteChar@y
  4317                           
  4318                           ;./lcd.h: 97:     RD2 = 1;
  4319  0D31  1283               	bcf	3,5	;RP0=0, select bank0
  4320  0D32  1303               	bcf	3,6	;RP1=0, select bank0
  4321  0D33  1508               	bsf	8,2	;volatile
  4322                           
  4323                           ;./lcd.h: 98:     lcdPort(y >> 4);
  4324  0D34  0873               	movf	lcdWriteChar@y,w
  4325  0D35  00F1               	movwf	??_lcdWriteChar
  4326  0D36  3004               	movlw	4
  4327  0D37                     u1485:	
  4328  0D37  1003               	clrc
  4329  0D38  0CF1               	rrf	??_lcdWriteChar,f
  4330  0D39  3EFF               	addlw	-1
  4331  0D3A  1D03               	skipz
  4332  0D3B  2D37               	goto	u1485
  4333  0D3C  0871               	movf	??_lcdWriteChar,w
  4334  0D3D  120A  158A  2481  120A  158A  	fcall	_lcdPort
  4335                           
  4336                           ;./lcd.h: 99:     RD3 = 1;
  4337  0D42  1283               	bcf	3,5	;RP0=0, select bank0
  4338  0D43  1303               	bcf	3,6	;RP1=0, select bank0
  4339  0D44  1588               	bsf	8,3	;volatile
  4340                           
  4341                           ;./lcd.h: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4342  0D45  300D               	movlw	13
  4343  0D46  00F1               	movwf	??_lcdWriteChar
  4344  0D47                     u2807:	
  4345  0D47  0BF1               	decfsz	??_lcdWriteChar,f
  4346  0D48  2D47               	goto	u2807
  4347                           
  4348                           ;./lcd.h: 101:     RD3 = 0;
  4349  0D49  1283               	bcf	3,5	;RP0=0, select bank0
  4350  0D4A  1303               	bcf	3,6	;RP1=0, select bank0
  4351  0D4B  1188               	bcf	8,3	;volatile
  4352                           
  4353                           ;./lcd.h: 102:     lcdPort(temp);
  4354  0D4C  0872               	movf	lcdWriteChar@temp,w
  4355  0D4D  120A  158A  2481  120A  158A  	fcall	_lcdPort
  4356                           
  4357                           ;./lcd.h: 103:     RD3 = 1;
  4358  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  4359  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  4360  0D54  1588               	bsf	8,3	;volatile
  4361                           
  4362                           ;./lcd.h: 104:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4363  0D55  300D               	movlw	13
  4364  0D56  00F1               	movwf	??_lcdWriteChar
  4365  0D57                     u2817:	
  4366  0D57  0BF1               	decfsz	??_lcdWriteChar,f
  4367  0D58  2D57               	goto	u2817
  4368                           
  4369                           ;./lcd.h: 105:     RD3 = 0;
  4370  0D59  1283               	bcf	3,5	;RP0=0, select bank0
  4371  0D5A  1303               	bcf	3,6	;RP1=0, select bank0
  4372  0D5B  1188               	bcf	8,3	;volatile
  4373  0D5C  0008               	return
  4374  0D5D                     __end_of_lcdWriteChar:	
  4375                           
  4376                           	psect	text18
  4377  0E20                     __ptext18:	
  4378 ;; *************** function _lcdInit *****************
  4379 ;; Defined at:
  4380 ;;		line 73 in file "./lcd.h"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;		None
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;		None
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      void 
  4387 ;; Registers used:
  4388 ;;		wreg, status,2, status,0, pclath, cstack
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4394 ;;      Params:         0       0       0       0       0
  4395 ;;      Locals:         0       0       0       0       0
  4396 ;;      Temps:          2       0       0       0       0
  4397 ;;      Totals:         2       0       0       0       0
  4398 ;;Total ram usage:        2 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; Hardware stack levels required when called:    2
  4401 ;; This function calls:
  4402 ;;		_lcdCmd
  4403 ;;		_lcdPort
  4404 ;; This function is called by:
  4405 ;;		_main
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           
  4410                           ;psect for function _lcdInit
  4411  0E20                     _lcdInit:	
  4412                           
  4413                           ;./lcd.h: 74:     TRISD = 0;
  4414                           
  4415                           ;incstack = 0
  4416                           ; Regs used in _lcdInit: [wreg+status,2+status,0+pclath+cstack]
  4417  0E20  1683               	bsf	3,5	;RP0=1, select bank1
  4418  0E21  1303               	bcf	3,6	;RP1=0, select bank1
  4419  0E22  0188               	clrf	8	;volatile
  4420                           
  4421                           ;./lcd.h: 75:     PORTD = 0;
  4422  0E23  1283               	bcf	3,5	;RP0=0, select bank0
  4423  0E24  1303               	bcf	3,6	;RP1=0, select bank0
  4424  0E25  0188               	clrf	8	;volatile
  4425                           
  4426                           ;./lcd.h: 76:     lcdPort(0x00);
  4427  0E26  3000               	movlw	0
  4428  0E27  120A  158A  2481  120A  158A  	fcall	_lcdPort
  4429                           
  4430                           ;./lcd.h: 77:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4431  0E2C  301A               	movlw	26
  4432  0E2D  00F5               	movwf	??_lcdInit+1
  4433  0E2E  30F8               	movlw	248
  4434  0E2F  00F4               	movwf	??_lcdInit
  4435  0E30                     u2827:	
  4436  0E30  0BF4               	decfsz	??_lcdInit,f
  4437  0E31  2E30               	goto	u2827
  4438  0E32  0BF5               	decfsz	??_lcdInit+1,f
  4439  0E33  2E30               	goto	u2827
  4440  0E34  0000               	nop
  4441                           
  4442                           ;./lcd.h: 78:     lcdCmd(0x03);
  4443  0E35  3003               	movlw	3
  4444  0E36  120A  158A  249B  120A  158A  	fcall	_lcdCmd
  4445                           
  4446                           ;./lcd.h: 79:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4447  0E3B  3007               	movlw	7
  4448  0E3C  00F5               	movwf	??_lcdInit+1
  4449  0E3D  307D               	movlw	125
  4450  0E3E  00F4               	movwf	??_lcdInit
  4451  0E3F                     u2837:	
  4452  0E3F  0BF4               	decfsz	??_lcdInit,f
  4453  0E40  2E3F               	goto	u2837
  4454  0E41  0BF5               	decfsz	??_lcdInit+1,f
  4455  0E42  2E3F               	goto	u2837
  4456                           
  4457                           ;./lcd.h: 80:     lcdCmd(0x03);
  4458  0E43  3003               	movlw	3
  4459  0E44  120A  158A  249B  120A  158A  	fcall	_lcdCmd
  4460                           
  4461                           ;./lcd.h: 81:     _delay((unsigned long)((11)*(4000000/4000.0)));
  4462  0E49  300F               	movlw	15
  4463  0E4A  00F5               	movwf	??_lcdInit+1
  4464  0E4B  3047               	movlw	71
  4465  0E4C  00F4               	movwf	??_lcdInit
  4466  0E4D                     u2847:	
  4467  0E4D  0BF4               	decfsz	??_lcdInit,f
  4468  0E4E  2E4D               	goto	u2847
  4469  0E4F  0BF5               	decfsz	??_lcdInit+1,f
  4470  0E50  2E4D               	goto	u2847
  4471  0E51  2E52               	nop2
  4472                           
  4473                           ;./lcd.h: 82:     lcdCmd(0x03);
  4474  0E52  3003               	movlw	3
  4475  0E53  120A  158A  249B  120A  158A  	fcall	_lcdCmd
  4476                           
  4477                           ;./lcd.h: 84:     lcdCmd(0x02);
  4478  0E58  3002               	movlw	2
  4479  0E59  120A  158A  249B  120A  158A  	fcall	_lcdCmd
  4480                           
  4481                           ;./lcd.h: 85:     lcdCmd(0x02);
  4482  0E5E  3002               	movlw	2
  4483  0E5F  120A  158A  249B  120A  158A  	fcall	_lcdCmd
  4484                           
  4485                           ;./lcd.h: 86:     lcdCmd(0x08);
  4486  0E64  3008               	movlw	8
  4487  0E65  120A  158A  249B  120A  158A  	fcall	_lcdCmd
  4488                           
  4489                           ;./lcd.h: 87:     lcdCmd(0x00);
  4490  0E6A  3000               	movlw	0
  4491  0E6B  120A  158A  249B  120A  158A  	fcall	_lcdCmd
  4492                           
  4493                           ;./lcd.h: 88:     lcdCmd(0x0C);
  4494  0E70  300C               	movlw	12
  4495  0E71  120A  158A  249B  120A  158A  	fcall	_lcdCmd
  4496                           
  4497                           ;./lcd.h: 89:     lcdCmd(0x00);
  4498  0E76  3000               	movlw	0
  4499  0E77  120A  158A  249B  120A  158A  	fcall	_lcdCmd
  4500                           
  4501                           ;./lcd.h: 90:     lcdCmd(0x06);
  4502  0E7C  3006               	movlw	6
  4503  0E7D  120A  158A  249B   	fcall	_lcdCmd
  4504  0E80  0008               	return
  4505  0E81                     __end_of_lcdInit:	
  4506                           
  4507                           	psect	text19
  4508  0C66                     __ptext19:	
  4509 ;; *************** function _lcdClear *****************
  4510 ;; Defined at:
  4511 ;;		line 51 in file "./lcd.h"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;		None
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;		None
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  1    wreg      void 
  4518 ;; Registers used:
  4519 ;;		wreg, status,2, status,0, pclath, cstack
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4525 ;;      Params:         0       0       0       0       0
  4526 ;;      Locals:         0       0       0       0       0
  4527 ;;      Temps:          0       0       0       0       0
  4528 ;;      Totals:         0       0       0       0       0
  4529 ;;Total ram usage:        0 bytes
  4530 ;; Hardware stack levels used:    1
  4531 ;; Hardware stack levels required when called:    2
  4532 ;; This function calls:
  4533 ;;		_lcdCmd
  4534 ;; This function is called by:
  4535 ;;		_main
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539                           
  4540                           ;psect for function _lcdClear
  4541  0C66                     _lcdClear:	
  4542                           
  4543                           ;./lcd.h: 52:     lcdCmd(0);
  4544                           
  4545                           ;incstack = 0
  4546                           ; Regs used in _lcdClear: [wreg+status,2+status,0+pclath+cstack]
  4547  0C66  3000               	movlw	0
  4548  0C67  120A  158A  249B  120A  158A  	fcall	_lcdCmd
  4549                           
  4550                           ;./lcd.h: 53:     lcdCmd(1);
  4551  0C6C  3001               	movlw	1
  4552  0C6D  120A  158A  249B   	fcall	_lcdCmd
  4553  0C70  0008               	return
  4554  0C71                     __end_of_lcdClear:	
  4555                           
  4556                           	psect	text20
  4557  0C9B                     __ptext20:	
  4558 ;; *************** function _lcdCmd *****************
  4559 ;; Defined at:
  4560 ;;		line 43 in file "./lcd.h"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;  a               1    wreg     unsigned char 
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  a               1    3[COMMON] unsigned char 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      void 
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, status,0, pclath, cstack
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4574 ;;      Params:         0       0       0       0       0
  4575 ;;      Locals:         1       0       0       0       0
  4576 ;;      Temps:          2       0       0       0       0
  4577 ;;      Totals:         3       0       0       0       0
  4578 ;;Total ram usage:        3 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; Hardware stack levels required when called:    1
  4581 ;; This function calls:
  4582 ;;		_lcdPort
  4583 ;; This function is called by:
  4584 ;;		_lcdClear
  4585 ;;		_lcdSetCursor
  4586 ;;		_lcdInit
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           
  4591                           ;psect for function _lcdCmd
  4592  0C9B                     _lcdCmd:	
  4593                           
  4594                           ;incstack = 0
  4595                           ; Regs used in _lcdCmd: [wreg+status,2+status,0+pclath+cstack]
  4596                           ;lcdCmd@a stored from wreg
  4597  0C9B  00F3               	movwf	lcdCmd@a
  4598                           
  4599                           ;./lcd.h: 44:     RD2 = 0;
  4600  0C9C  1283               	bcf	3,5	;RP0=0, select bank0
  4601  0C9D  1303               	bcf	3,6	;RP1=0, select bank0
  4602  0C9E  1108               	bcf	8,2	;volatile
  4603                           
  4604                           ;./lcd.h: 45:     lcdPort(a);
  4605  0C9F  0873               	movf	lcdCmd@a,w
  4606  0CA0  120A  158A  2481  120A  158A  	fcall	_lcdPort
  4607                           
  4608                           ;./lcd.h: 46:     RD3 = 1;
  4609  0CA5  1283               	bcf	3,5	;RP0=0, select bank0
  4610  0CA6  1303               	bcf	3,6	;RP1=0, select bank0
  4611  0CA7  1588               	bsf	8,3	;volatile
  4612                           
  4613                           ;./lcd.h: 47:     _delay((unsigned long)((4)*(4000000/4000.0)));
  4614  0CA8  3006               	movlw	6
  4615  0CA9  00F2               	movwf	??_lcdCmd+1
  4616  0CAA  3030               	movlw	48
  4617  0CAB  00F1               	movwf	??_lcdCmd
  4618  0CAC                     u2857:	
  4619  0CAC  0BF1               	decfsz	??_lcdCmd,f
  4620  0CAD  2CAC               	goto	u2857
  4621  0CAE  0BF2               	decfsz	??_lcdCmd+1,f
  4622  0CAF  2CAC               	goto	u2857
  4623  0CB0  0000               	nop
  4624                           
  4625                           ;./lcd.h: 48:     RD3 = 0;
  4626  0CB1  1283               	bcf	3,5	;RP0=0, select bank0
  4627  0CB2  1303               	bcf	3,6	;RP1=0, select bank0
  4628  0CB3  1188               	bcf	8,3	;volatile
  4629  0CB4  0008               	return
  4630  0CB5                     __end_of_lcdCmd:	
  4631                           
  4632                           	psect	text21
  4633  0C81                     __ptext21:	
  4634 ;; *************** function _lcdPort *****************
  4635 ;; Defined at:
  4636 ;;		line 21 in file "./lcd.h"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;  a               1    wreg     unsigned char 
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;  a               1    0[COMMON] unsigned char 
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  1    wreg      void 
  4643 ;; Registers used:
  4644 ;;		wreg
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4650 ;;      Params:         0       0       0       0       0
  4651 ;;      Locals:         1       0       0       0       0
  4652 ;;      Temps:          0       0       0       0       0
  4653 ;;      Totals:         1       0       0       0       0
  4654 ;;Total ram usage:        1 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; This function calls:
  4657 ;;		Nothing
  4658 ;; This function is called by:
  4659 ;;		_lcdCmd
  4660 ;;		_lcdInit
  4661 ;;		_lcdWriteChar
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           
  4666                           ;psect for function _lcdPort
  4667  0C81                     _lcdPort:	
  4668                           
  4669                           ;incstack = 0
  4670                           ; Regs used in _lcdPort: [wreg]
  4671                           ;lcdPort@a stored from wreg
  4672  0C81  00F0               	movwf	lcdPort@a
  4673                           
  4674                           ;./lcd.h: 22:     if (a & 1)
  4675  0C82  1C70               	btfss	lcdPort@a,0
  4676  0C83  2C88               	goto	l101
  4677                           
  4678                           ;./lcd.h: 23:         RD4 = 1;
  4679  0C84  1283               	bcf	3,5	;RP0=0, select bank0
  4680  0C85  1303               	bcf	3,6	;RP1=0, select bank0
  4681  0C86  1608               	bsf	8,4	;volatile
  4682  0C87  2C8B               	goto	l102
  4683  0C88                     l101:	
  4684                           ;./lcd.h: 24:     else
  4685                           
  4686                           
  4687                           ;./lcd.h: 25:         RD4 = 0;
  4688  0C88  1283               	bcf	3,5	;RP0=0, select bank0
  4689  0C89  1303               	bcf	3,6	;RP1=0, select bank0
  4690  0C8A  1208               	bcf	8,4	;volatile
  4691  0C8B                     l102:	
  4692                           
  4693                           ;./lcd.h: 27:     if (a & 2)
  4694  0C8B  1CF0               	btfss	lcdPort@a,1
  4695  0C8C  2C8F               	goto	l103
  4696                           
  4697                           ;./lcd.h: 28:         RD5 = 1;
  4698  0C8D  1688               	bsf	8,5	;volatile
  4699  0C8E  2C90               	goto	l104
  4700  0C8F                     l103:	
  4701                           ;./lcd.h: 29:     else
  4702                           
  4703                           
  4704                           ;./lcd.h: 30:         RD5 = 0;
  4705  0C8F  1288               	bcf	8,5	;volatile
  4706  0C90                     l104:	
  4707                           
  4708                           ;./lcd.h: 32:     if (a & 4)
  4709  0C90  1D70               	btfss	lcdPort@a,2
  4710  0C91  2C94               	goto	l105
  4711                           
  4712                           ;./lcd.h: 33:         RD6 = 1;
  4713  0C92  1708               	bsf	8,6	;volatile
  4714  0C93  2C95               	goto	l106
  4715  0C94                     l105:	
  4716                           ;./lcd.h: 34:     else
  4717                           
  4718                           
  4719                           ;./lcd.h: 35:         RD6 = 0;
  4720  0C94  1308               	bcf	8,6	;volatile
  4721  0C95                     l106:	
  4722                           
  4723                           ;./lcd.h: 37:     if (a & 8)
  4724  0C95  1DF0               	btfss	lcdPort@a,3
  4725  0C96  2C99               	goto	l107
  4726                           
  4727                           ;./lcd.h: 38:         RD7 = 1;
  4728  0C97  1788               	bsf	8,7	;volatile
  4729  0C98  0008               	return
  4730  0C99                     l107:	
  4731                           ;./lcd.h: 39:     else
  4732                           
  4733                           
  4734                           ;./lcd.h: 40:         RD7 = 0;
  4735  0C99  1388               	bcf	8,7	;volatile
  4736  0C9A  0008               	return
  4737  0C9B                     __end_of_lcdPort:	
  4738                           
  4739                           	psect	text22
  4740  0CD2                     __ptext22:	
  4741 ;; *************** function _adcRead *****************
  4742 ;; Defined at:
  4743 ;;		line 35 in file "./adc.h"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;  adcChannel      2    0[COMMON] const int 
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;		None
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  2    0[COMMON] int 
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, status,0
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4757 ;;      Params:         2       0       0       0       0
  4758 ;;      Locals:         0       0       0       0       0
  4759 ;;      Temps:          2       0       0       0       0
  4760 ;;      Totals:         4       0       0       0       0
  4761 ;;Total ram usage:        4 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		_main
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           
  4771                           ;psect for function _adcRead
  4772  0CD2                     _adcRead:	
  4773                           
  4774                           ;./adc.h: 36:     ADCON0bits.ADON = 1;
  4775                           
  4776                           ;incstack = 0
  4777                           ; Regs used in _adcRead: [wreg+status,2+status,0]
  4778  0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  4779  0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  4780  0CD4  141F               	bsf	31,0	;volatile
  4781                           
  4782                           ;./adc.h: 37:     ADCON0bits.CHS = adcChannel;
  4783  0CD5  0870               	movf	adcRead@adcChannel,w
  4784  0CD6  00F2               	movwf	??_adcRead
  4785  0CD7  0DF2               	rlf	??_adcRead,f
  4786  0CD8  0DF2               	rlf	??_adcRead,f
  4787  0CD9  0DF2               	rlf	??_adcRead,f
  4788  0CDA  081F               	movf	31,w	;volatile
  4789  0CDB  0672               	xorwf	??_adcRead,w
  4790  0CDC  39C7               	andlw	-57
  4791  0CDD  0672               	xorwf	??_adcRead,w
  4792  0CDE  009F               	movwf	31	;volatile
  4793                           
  4794                           ;./adc.h: 38:     _delay((unsigned long)((10)*(4000000/4000.0)));
  4795  0CDF  300D               	movlw	13
  4796  0CE0  00F3               	movwf	??_adcRead+1
  4797  0CE1  30FB               	movlw	251
  4798  0CE2  00F2               	movwf	??_adcRead
  4799  0CE3                     u2867:	
  4800  0CE3  0BF2               	decfsz	??_adcRead,f
  4801  0CE4  2CE3               	goto	u2867
  4802  0CE5  0BF3               	decfsz	??_adcRead+1,f
  4803  0CE6  2CE3               	goto	u2867
  4804  0CE7  2CE8               	nop2
  4805                           
  4806                           ;./adc.h: 39:     ADCON0bits.GO = 1;
  4807  0CE8  1283               	bcf	3,5	;RP0=0, select bank0
  4808  0CE9  1303               	bcf	3,6	;RP1=0, select bank0
  4809  0CEA  151F               	bsf	31,2	;volatile
  4810  0CEB                     l139:	
  4811                           ;./adc.h: 40:     while (ADCON0bits.GO_DONE);
  4812                           
  4813  0CEB  191F               	btfsc	31,2	;volatile
  4814  0CEC  2CEB               	goto	l139
  4815                           
  4816                           ;./adc.h: 42:     return (ADRESH << 8) + (ADRESL);
  4817  0CED  081E               	movf	30,w	;volatile
  4818  0CEE  00F1               	movwf	?_adcRead+1
  4819  0CEF  1683               	bsf	3,5	;RP0=1, select bank1
  4820  0CF0  1303               	bcf	3,6	;RP1=0, select bank1
  4821  0CF1  081E               	movf	30,w	;volatile
  4822  0CF2  00F0               	movwf	?_adcRead
  4823  0CF3  0008               	return
  4824  0CF4                     __end_of_adcRead:	
  4825                           
  4826                           	psect	text23
  4827  0C71                     __ptext23:	
  4828 ;; *************** function _adcInit *****************
  4829 ;; Defined at:
  4830 ;;		line 1 in file "./adc.h"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;		None
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;		None
  4835 ;; Return value:  Size  Location     Type
  4836 ;;                  1    wreg      void 
  4837 ;; Registers used:
  4838 ;;		wreg, status,2, status,0
  4839 ;; Tracked objects:
  4840 ;;		On entry : 0/0
  4841 ;;		On exit  : 0/0
  4842 ;;		Unchanged: 0/0
  4843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4844 ;;      Params:         0       0       0       0       0
  4845 ;;      Locals:         0       0       0       0       0
  4846 ;;      Temps:          0       0       0       0       0
  4847 ;;      Totals:         0       0       0       0       0
  4848 ;;Total ram usage:        0 bytes
  4849 ;; Hardware stack levels used:    1
  4850 ;; This function calls:
  4851 ;;		Nothing
  4852 ;; This function is called by:
  4853 ;;		_main
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857                           
  4858                           ;psect for function _adcInit
  4859  0C71                     _adcInit:	
  4860                           
  4861                           ;./adc.h: 11:     ADCON0bits.ADCS = 0b01;
  4862                           
  4863                           ;incstack = 0
  4864                           ; Regs used in _adcInit: [wreg+status,2+status,0]
  4865  0C71  1283               	bcf	3,5	;RP0=0, select bank0
  4866  0C72  1303               	bcf	3,6	;RP1=0, select bank0
  4867  0C73  081F               	movf	31,w	;volatile
  4868  0C74  393F               	andlw	-193
  4869  0C75  3840               	iorlw	64
  4870  0C76  009F               	movwf	31	;volatile
  4871                           
  4872                           ;./adc.h: 12:     ADCON0bits.CHS = 0b000;
  4873  0C77  30C7               	movlw	-57
  4874  0C78  059F               	andwf	31,f	;volatile
  4875                           
  4876                           ;./adc.h: 13:     ADCON0bits.ADON = 0;
  4877  0C79  101F               	bcf	31,0	;volatile
  4878                           
  4879                           ;./adc.h: 24:     ADCON1bits.ADFM = 1;
  4880  0C7A  1683               	bsf	3,5	;RP0=1, select bank1
  4881  0C7B  1303               	bcf	3,6	;RP1=0, select bank1
  4882  0C7C  179F               	bsf	31,7	;volatile
  4883                           
  4884                           ;./adc.h: 25:     ADCON1bits.ADCS2 = 1;
  4885  0C7D  171F               	bsf	31,6	;volatile
  4886                           
  4887                           ;./adc.h: 26:     ADCON1bits.PCFG = 0b0000;
  4888  0C7E  30F0               	movlw	-16
  4889  0C7F  059F               	andwf	31,f	;volatile
  4890  0C80  0008               	return
  4891  0C81                     __end_of_adcInit:	
  4892  007E                     btemp	set	126	;btemp
  4893  007E                     wtemp0	set	126


Data Sizes:
    Strings     39
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     69      69
    BANK1            80     22      22
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_4(CODE[9]), STR_3(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@entero(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcdPrint@a	PTR unsigned char  size(2) Largest target is 16
		 -> main@entero(BANK1[16]), STR_2(CODE[16]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _pwmSetDuty2->___xxtofl
    _pwmSetDuty1->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _pwmInit2->_setTMR2
    _pwmInit1->_setTMR2
    _lcdSetCursor->_lcdCmd
    _lcdPrint->_lcdWriteChar
    _lcdWriteChar->_lcdPort
    _lcdInit->_lcdCmd
    _lcdClear->_lcdCmd
    _lcdCmd->_lcdPort

Critical Paths under _main in BANK0

    _main->_pwmSetDuty1
    _main->_pwmSetDuty2
    _pwmSetDuty2->___fltol
    _pwmSetDuty1->___fltol
    ___fltol->___fldiv
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   21258
                                             67 BANK0      2     2      0
                                              0 BANK1     22    22      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _adcInit
                            _adcRead
                           _lcdClear
                            _lcdInit
                           _lcdPrint
                       _lcdSetCursor
                           _pwmInit1
                           _pwmInit2
                        _pwmSetDuty1
                        _pwmSetDuty2
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1365
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _pwmSetDuty2                                          4     2      2    6078
                                             63 BANK0      4     2      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _pwmSetDuty1                                          4     2      2    6002
                                             63 BANK0      4     2      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     533
                                             52 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2873
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1729
                                             26 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _pwmInit2                                             0     0      0      44
                             _setPR2
                            _setTMR2
 ---------------------------------------------------------------------------------
 (1) _pwmInit1                                             0     0      0      44
                             _setPR2
                            _setTMR2
 ---------------------------------------------------------------------------------
 (2) _setTMR2                                              1     1      0      44
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setPR2                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcdSetCursor                                         7     6      1     684
                                              4 COMMON     7     6      1
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             7     5      2     572
                                              5 COMMON     7     5      2
                       _lcdWriteChar
 ---------------------------------------------------------------------------------
 (2) _lcdWriteChar                                         4     4      0     178
                                              1 COMMON     4     4      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              2     2      0     198
                                              4 COMMON     2     2      0
                             _lcdCmd
                            _lcdPort
 ---------------------------------------------------------------------------------
 (1) _lcdClear                                             0     0      0     110
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (2) _lcdCmd                                               3     3      0     110
                                              1 COMMON     3     3      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (3) _lcdPort                                              1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adcRead                                              4     2      2      98
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___fldiv (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _adcInit
   _adcRead
   _lcdClear
     _lcdCmd
       _lcdPort
   _lcdInit
     _lcdCmd
       _lcdPort
     _lcdPort
   _lcdPrint
     _lcdWriteChar
       _lcdPort
   _lcdSetCursor
     _lcdCmd
       _lcdPort
   _pwmInit1
     _setPR2
     _setTMR2
   _pwmInit2
     _setPR2
     _setTMR2
   _pwmSetDuty1
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _pwmSetDuty2
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     45      45       5       86.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     16      16       7       27.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun May 12 17:59:06 2019

           ___fldiv@aexp 0053             ___fldiv@bexp 0052                        pc 0002  
           ___fldiv@sign 004B                       l90 0CBF                       l94 0CC3  
                     l96 0CCE                       fsr 0004      __Umul8_16@word_mpld 0076  
                    l101 0C88                      l102 0C8B                      l103 0C8F  
                    l104 0C90                      l105 0C94                      l106 0C95  
                    l107 0C99                      l150 045B                      l139 0CEB  
                    l148 043E                      l461 0ED0                      l701 0FBA  
                    l641 030A                      l617 01BD                      l714 0017  
                    l708 0FD0                      l709 0FDA                      l639 02FC  
                    l669 07EF                      l695 0F7A                      _RB0 0030  
                    _RB1 0031                      _RD2 0042                      _RD3 0043  
                    _RD4 0044                      _RD5 0045                      _RD6 0046  
                    _RD7 0047                      _PR2 0092                      fsr0 0004  
                    indf 0000             ___flmul@aexp 0032             ___flmul@bexp 0033  
           ___flmul@sign 002D             ___flmul@temp 0038             ___flmul@prod 0034  
         ??_lcdWriteChar 0071            lcdWriteChar@a 0074            lcdWriteChar@y 0073  
           ___fltol@exp1 005E                     l2004 0F4F                     l2032 0DFB  
                   l2016 0089                     l2104 00B2                     l2202 038A  
                   l2140 0116                     l2108 00BE                     l2134 00F5  
                   l2118 00DC                     l2128 00F3                     l2154 0129  
                   l2146 0125                     l1700 01B2                     l1604 0EBC  
                   l2156 009E                     l2078 0D9B                     l1614 0EDF  
                   l1606 0ECC                     l1630 0D73                     l2158 016A  
                   l2254 00D1                     l1720 01E8                     l1704 01B5  
                   l1528 000F                     l1640 0D94                     l1802 0306  
                   l1714 01DC                     l1740 0237                     l1636 0D89  
                   l1628 0D65                     l1652 0CFA                     l1750 025B  
                   l1822 0504                     l1654 0D08                     l1662 0D21  
                   l1680 018C                     l1912 0775                     l1904 0741  
                   l1840 0529                     l1824 0506                     l1584 0E8C  
                   l1746 0256                     l1930 07BF                     l1906 075E  
                   l1842 052B                     l1826 050E                     l1658 0D16  
                   l1772 0295                     l1764 0261                     l1748 0213  
                   l1684 018F                     l1916 0777                     l1852 0541  
                   l1844 0533                     l1588 0E95                     l1790 02E2  
                   l1766 027E                     l1686 0197                     l1926 07A9  
                   l1776 0297                     l1936 07D8                     l1960 0F89  
                   l1786 02C9                     l1954 0F72                     l1964 0F8D  
                   l1974 0FCE                     l1966 0F9F                     l1976 0FBF  
                   l1988 0FF7                     STR_1 082A                     STR_2 081A  
                   STR_3 0838                     STR_4 0838                     u2205 06EA  
                   u2135 05F1                     u2225 070F                     u1505 0E9E  
                   u1445 0018                     u2245 072D                     u2165 064E  
                   u1605 0D68                     u2255 0745                     u1535 0EBD  
                   u2415 0F96                     u2345 0794                     u1625 0D74  
                   u1705 0D17                     u2530 0F4C                     u2355 07B2  
                   u2275 0750                     u2435 0FB2                     u1635 0D80  
                   u1485 0D37                     u2365 07CA                     u1565 0ED5  
                   u1645 0D8A                     u2615 0E07                     u1815 021C  
                   u2455 0FC7                     u2560 0086                     u1905 0270  
                   u1825 0225                     u1675 0CFD                     u1845 0230  
                   u2807 0D47                     u1855 0245                     u2495 0FE2  
                   u1695 0D0E                     u2817 0D57                     u2827 0E30  
                   u2595 0DE2                     u2837 0E3F                     u1885 0265  
                   u2685 010C                     u2847 0E4D                     u1975 02B4  
                   u2857 0CAC                     u1985 02D2                     u2777 033F  
                   u2867 0CE3                     u1995 02ED                     u2787 037D  
                   u2797 04E1                     _main 0312                     btemp 007E  
                   start 0000          ___fldiv@new_exp 004C            ___fltol@sign1 005D  
                  ?_main 0070          __end_of_adcInit 0C81                    _CCP1X 00BD  
        __end_of___fldiv 0312                    _CCP1Y 00BC                    _CCP2X 00ED  
        __end_of_adcRead 0CF4                    _CCP2Y 00EC          __end_of___flmul 07FC  
        __end_of___fltol 0EEE          __end_of___lwdiv 0D99          __end_of___lwmod 0D26  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088          __end_of_lcdInit 0E81          __end_of_lcdPort 0C9B  
        __end_of_dpowers 081A          __end_of_setTMR2 0CD2                    main@m 00B2  
                  main@v 00B0                    pclath 000A                    status 0003  
                  wtemp0 007E          __end_of_sprintf 016F          __initialization 07FC  
           __end_of_main 04E7                   ??_main 0063     __end_of_lcdSetCursor 0E20  
                 _CCP1M2 00BA                   _CCP1M3 00BB                   _CCP2M2 00EA  
                 _CCP2M3 00EB                   _ADRESH 001E                   _ADRESL 009E  
                 _CCPR1L 0015                   _CCPR2L 001B          pwmSetDuty1@duty 005F  
        pwmSetDuty2@duty 005F                   _TMR2ON 0092                   _TRISC1 0439  
                 _TRISC2 043A         __end_of___xxtofl 1000         __end_of_lcdClear 0C71  
       __end_of_lcdPrint 0DD6                ??_adcInit 0070                ??___fldiv 0042  
              ??_adcRead 0072     __end_of_lcdWriteChar 0D5D                ??___flmul 0028  
              ??___fltol 0058                   _lcdCmd 0C9B                ??___lwdiv 0074  
              ??___lwmod 007C                   _setPR2 0C4D                ??_lcdInit 0074  
              ??_lcdPort 0070                ??_setTMR2 0070       __size_of__Umul8_16 0023  
       __end_of_pwmInit1 0C5C         __end_of_pwmInit2 0C66             ?_pwmSetDuty1 005F  
           ?_pwmSetDuty2 005F                ??_sprintf 0023             ___xxtofl@arg 007A  
           ___xxtofl@exp 0079             ___xxtofl@val 0070  __end_of__initialization 07FC  
             ___fltol@f1 0054           __pcstackCOMMON 0070         lcdWriteChar@temp 0072  
      __end_of__Umul8_16 0028               __pmaintext 0312                  ?_lcdCmd 0070  
  __size_of_lcdSetCursor 004A                  ?_setPR2 0070                  _T2CKPS0 0090  
                _T2CKPS1 0091                ?___xxtofl 0070                ?_lcdClear 0070  
              ?_lcdPrint 0075               __stringtab 0800    __size_of_lcdWriteChar 0037  
           _lcdSetCursor 0DD6                ?_pwmInit1 0070                ?_pwmInit2 0070  
                _adcInit 0C71                  ___fldiv 016F                  _adcRead 0CD2  
                ___flmul 04E7                  ___fltol 0E81                  ___lwdiv 0D5D  
                ___lwmod 0CF4          __size_of_lcdCmd 001A          __size_of_setPR2 0005  
                _lcdInit 0E20                  __ptext1 0097                  __ptext2 0CF4  
                __ptext3 0D5D                  __ptext4 0028                  __ptext5 0EEE  
                __ptext6 0F5D                  __ptext7 0E81                  __ptext8 04E7  
                __ptext9 0005                  _lcdPort 0C81                  _dpowers 0810  
             ??___xxtofl 0074                  _setTMR2 0CB5                  lcdCmd@a 0073  
             ??_lcdClear 0074               ??_lcdPrint 0077                  _sprintf 0097  
           _lcdWriteChar 0D26     end_of_initialization 07FC     __size_of_pwmSetDuty1 006F  
   __size_of_pwmSetDuty2 006F               ??_pwmInit1 0071               ??_pwmInit2 0071  
          ___xxtofl@sign 0078              ___fldiv@grs 004E              ___fldiv@rem 0047  
            ___flmul@grs 002E               main@entero 00A0           __end_of_lcdCmd 0CB5  
         __end_of_setPR2 0C52      start_initialization 07FC                 ??_lcdCmd 0071  
              __Umul8_16 0005                 ??_setPR2 0070                ___fldiv@a 003A  
              ___fldiv@b 003E                ___flmul@a 0024                ___flmul@b 0020  
              ___latbits 0002               setTMR2@pwm 0070            __pcstackBANK0 0020  
          __pcstackBANK1 00A0        __size_of___xxtofl 00A3        __size_of_lcdClear 000B  
      __size_of_lcdPrint 003D              sprintf@flag 0027              sprintf@prec 0028  
       ___lwdiv@dividend 0072                 ?_adcInit 0070                 ?___fldiv 003A  
               ?_adcRead 0070                 ?___flmul 0020                 ?___fltol 0054  
             ?__Umul8_16 0070                 ?___lwdiv 0070                 ?___lwmod 0078  
      __size_of_pwmInit1 000A        __size_of_pwmInit2 000A                __pstrings 0800  
               ?_lcdInit 0070                 ?_lcdPort 0070        adcRead@adcChannel 0070  
               ?_setTMR2 0070         ___lwdiv@quotient 0075                 ?_sprintf 0020  
              lcdPrint@a 0075                lcdPrint@i 007A               _ADCON0bits 001F  
            __stringbase 080F               _ADCON1bits 009F            ??_pwmSetDuty1 0061  
          ??_pwmSetDuty2 0061         lcdSetCursor@temp 007A              ??__Umul8_16 0072  
       __size_of_adcInit 0010         __size_of___fldiv 01A3         __size_of_adcRead 0022  
       __size_of___flmul 0315         __size_of___fltol 006D         __size_of___lwdiv 003C  
       __size_of___lwmod 0032       __end_of__stringtab 0810         __size_of_lcdInit 0061  
       __size_of_lcdPort 001A               sprintf@val 0029                 ___xxtofl 0F5D  
       __size_of_setTMR2 001D                 _lcdClear 0C66          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0077                 __ptext10 016F                 __ptext11 0C5C  
               __ptext20 0C9B                 __ptext12 0C52                 __ptext21 0C81  
               __ptext13 0CB5                 __ptext22 0CD2                 __ptext14 0C4D  
               __ptext23 0C71                 __ptext15 0DD6                 __ptext16 0D99  
               __ptext17 0D26                 __ptext18 0E20                 __ptext19 0C66  
               _lcdPrint 0D99         __size_of_sprintf 00D8            lcdSetCursor@a 0077  
          lcdSetCursor@b 0074            lcdSetCursor@y 0079            lcdSetCursor@z 0078  
          __size_of_main 01D5      __end_of_pwmSetDuty1 0F5D      __end_of_pwmSetDuty2 0097  
               _pwmInit1 0C52                 _pwmInit2 0C5C                 lcdPort@a 0070  
               main@pwm2 00B4                sprintf@ap 0026                sprintf@sp 002B  
       ___lwmod@dividend 007A            ?_lcdSetCursor 0074                stringcode 080A  
 __Umul8_16@multiplicand 0070                 sprintf@c 002C                 sprintf@f 0020  
        ___lwmod@divisor 0078          ___lwmod@counter 007D                 stringdir 080A  
               stringtab 0800              _pwmSetDuty1 0EEE              _pwmSetDuty2 0028  
          ?_lcdWriteChar 0070     __Umul8_16@multiplier 0078           ??_lcdSetCursor 0075  
      __Umul8_16@product 0074  
