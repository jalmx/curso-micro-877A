

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed May 15 18:52:45 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.05
    38                           ; Generated 20/12/2018 GMT
    39                           ; 
    40                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F877A Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0098                     	;# 
   180  0099                     	;# 
   181  009C                     	;# 
   182  009D                     	;# 
   183  009E                     	;# 
   184  009F                     	;# 
   185  010C                     	;# 
   186  010D                     	;# 
   187  010E                     	;# 
   188  010F                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191                           
   192                           	psect	strings
   193  0800                     __pstrings:	
   194  0800                     stringtab:	
   195  0800                     __stringtab:	
   196                           
   197                           ;	String table - string pointers are 1 byte each
   198  0800  1BFF               	btfsc	btemp+1,7
   199  0801  280A               	ljmp	stringcode
   200  0802  1383               	bcf	3,7
   201  0803  187F               	btfsc	btemp+1,0
   202  0804  1783               	bsf	3,7
   203  0805  0800               	movf	0,w
   204  0806  0A84               	incf	4,f
   205  0807  1903               	skipnz
   206  0808  0AFF               	incf	btemp+1,f
   207  0809  0008               	return
   208  080A                     stringcode:	
   209  080A                     stringdir:	
   210  080A  3008               	movlw	high stringdir
   211  080B  008A               	movwf	10
   212  080C  0804               	movf	4,w
   213  080D  0A84               	incf	4,f
   214  080E  0782               	addwf	2,f
   215  080F                     __stringbase:	
   216  080F  3400               	retlw	0
   217  0810                     __end_of__stringtab:	
   218  0810                     _dpowers:	
   219  0810  3401               	retlw	1
   220  0811  3400               	retlw	0
   221  0812  340A               	retlw	10
   222  0813  3400               	retlw	0
   223  0814  3464               	retlw	100
   224  0815  3400               	retlw	0
   225  0816  34E8               	retlw	232
   226  0817  3403               	retlw	3
   227  0818  3410               	retlw	16
   228  0819  3427               	retlw	39
   229  081A                     __end_of_dpowers:	
   230  0006                     _PORTB	set	6
   231  001E                     _ADRESH	set	30
   232  001F                     _ADCON0bits	set	31
   233  0008                     _PORTD	set	8
   234  001B                     _CCPR2L	set	27
   235  0015                     _CCPR1L	set	21
   236  0031                     _RB1	set	49
   237  0030                     _RB0	set	48
   238  0043                     _RD3	set	67
   239  0042                     _RD2	set	66
   240  0047                     _RD7	set	71
   241  0046                     _RD6	set	70
   242  0045                     _RD5	set	69
   243  0044                     _RD4	set	68
   244  0092                     _TMR2ON	set	146
   245  0091                     _T2CKPS1	set	145
   246  0090                     _T2CKPS0	set	144
   247  00BA                     _CCP1M2	set	186
   248  00BB                     _CCP1M3	set	187
   249  00EA                     _CCP2M2	set	234
   250  00EB                     _CCP2M3	set	235
   251  00EC                     _CCP2Y	set	236
   252  00ED                     _CCP2X	set	237
   253  00BC                     _CCP1Y	set	188
   254  00BD                     _CCP1X	set	189
   255  0086                     _TRISB	set	134
   256  009E                     _ADRESL	set	158
   257  009F                     _ADCON1bits	set	159
   258  0088                     _TRISD	set	136
   259  0092                     _PR2	set	146
   260  0439                     _TRISC1	set	1081
   261  043A                     _TRISC2	set	1082
   262  081A                     STR_2:	
   263  081A  344D               	retlw	77	;'M'
   264  081B  346F               	retlw	111	;'o'
   265  081C  3464               	retlw	100	;'d'
   266  081D  3475               	retlw	117	;'u'
   267  081E  346C               	retlw	108	;'l'
   268  081F  346F               	retlw	111	;'o'
   269  0820  3420               	retlw	32	;' '
   270  0821  3469               	retlw	105	;'i'
   271  0822  346E               	retlw	110	;'n'
   272  0823  3469               	retlw	105	;'i'
   273  0824  3463               	retlw	99	;'c'
   274  0825  3469               	retlw	105	;'i'
   275  0826  3461               	retlw	97	;'a'
   276  0827  3464               	retlw	100	;'d'
   277  0828  346F               	retlw	111	;'o'
   278  0829  3400               	retlw	0
   279  082A                     STR_1:	
   280  082A  3449               	retlw	73	;'I'
   281  082B  346E               	retlw	110	;'n'
   282  082C  3469               	retlw	105	;'i'
   283  082D  3463               	retlw	99	;'c'
   284  082E  3469               	retlw	105	;'i'
   285  082F  3461               	retlw	97	;'a'
   286  0830  346E               	retlw	110	;'n'
   287  0831  3464               	retlw	100	;'d'
   288  0832  346F               	retlw	111	;'o'
   289  0833  3420               	retlw	32	;' '
   290  0834  3450               	retlw	80	;'P'
   291  0835  3457               	retlw	87	;'W'
   292  0836  344D               	retlw	77	;'M'
   293  0837  3400               	retlw	0
   294  0838                     STR_3:	
   295  0838  3450               	retlw	80	;'P'
   296  0839  3457               	retlw	87	;'W'
   297  083A  344D               	retlw	77	;'M'
   298  083B  3431               	retlw	49	;'1'
   299  083C  343A               	retlw	58	;':'
   300  083D  3425               	retlw	37	;'%'
   301  083E  3464               	retlw	100	;'d'
   302  083F  3425               	retlw	37	;'%'
   303  0840  3425               	retlw	37	;'%'
   304  0841  3400               	retlw	0
   305  0842                     STR_4:	
   306  0842  3450               	retlw	80	;'P'
   307  0843  3457               	retlw	87	;'W'
   308  0844  344D               	retlw	77	;'M'
   309  0845  3432               	retlw	50	;'2'
   310  0846  343A               	retlw	58	;':'
   311  0847  3425               	retlw	37	;'%'
   312  0848  3464               	retlw	100	;'d'
   313  0849  3425               	retlw	37	;'%'
   314  084A  3425               	retlw	37	;'%'
   315  084B  3400               	retlw	0
   316                           
   317                           	psect	cinit
   318  07F5                     start_initialization:	
   319                           ; #config settings
   320                           
   321  07F5                     __initialization:	
   322                           
   323                           ; Clear objects allocated to BANK1
   324  07F5  1383               	bcf	3,7	;select IRP bank0
   325  07F6  30A0               	movlw	low __pbssBANK1
   326  07F7  0084               	movwf	4
   327  07F8  30B0               	movlw	low (__pbssBANK1+16)
   328  07F9  120A  118A  2003   	fcall	clear_ram0
   329  07FC                     end_of_initialization:	
   330                           ;End of C runtime variable initialization code
   331                           
   332  07FC                     __end_of__initialization:	
   333  07FC  0183               	clrf	3
   334  07FD  120A  118A  2B39   	ljmp	_main	;jump to C main() function
   335                           
   336                           	psect	bssBANK1
   337  00A0                     __pbssBANK1:	
   338  00A0                     _entero:	
   339  00A0                     	ds	16
   340                           
   341                           	psect	clrtext
   342  0003                     clear_ram0:	
   343                           ;	Called with FSR containing the base address, and
   344                           ;	W with the last address+1
   345                           
   346  0003  0064               	clrwdt	;clear the watchdog before getting into this loop
   347  0004                     clrloop0:	
   348  0004  0180               	clrf	0	;clear RAM location pointed to by FSR
   349  0005  0A84               	incf	4,f	;increment pointer
   350  0006  0604               	xorwf	4,w	;XOR with final address
   351  0007  1903               	btfsc	3,2	;have we reached the end yet?
   352  0008  3400               	retlw	0	;all done for this memory range, return
   353  0009  0604               	xorwf	4,w	;XOR again to restore value
   354  000A  2804               	goto	clrloop0	;do the next byte
   355                           
   356                           	psect	cstackCOMMON
   357  0070                     __pcstackCOMMON:	
   358  0070                     ?_setTMR2:	
   359  0070                     ??_setTMR2:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_setPR2:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ??_setPR2:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_pwmInit1:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?_pwmInit2:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ?_lcdPort:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ??_lcdPort:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ?_lcdCmd:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_lcdClear:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ?_lcdInit:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ?_lcdWriteChar:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ?_adcInit:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ??_adcInit:	
   396                           ; 1 bytes @ 0x0
   397                           
   398  0070                     ?_main:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0070                     ?__Umul8_16:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ?_adcRead:	
   405                           ; 2 bytes @ 0x0
   406                           
   407  0070                     ?___lwdiv:	
   408                           ; 2 bytes @ 0x0
   409                           
   410  0070                     ?___xxtofl:	
   411                           ; 2 bytes @ 0x0
   412                           
   413  0070                     setTMR2@pwm:	
   414                           ; 4 bytes @ 0x0
   415                           
   416  0070                     lcdPort@a:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     __Umul8_16@multiplicand:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     adcRead@adcChannel:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ___lwdiv@divisor:	
   426                           ; 2 bytes @ 0x0
   427                           
   428  0070                     ___xxtofl@val:	
   429                           ; 2 bytes @ 0x0
   430                           
   431                           
   432                           ; 4 bytes @ 0x0
   433  0070                     	ds	1
   434  0071                     ??_pwmInit1:	
   435  0071                     ??_pwmInit2:	
   436                           ; 1 bytes @ 0x1
   437                           
   438  0071                     ??_lcdCmd:	
   439                           ; 1 bytes @ 0x1
   440                           
   441  0071                     ??_lcdWriteChar:	
   442                           ; 1 bytes @ 0x1
   443                           
   444                           
   445                           ; 1 bytes @ 0x1
   446  0071                     	ds	1
   447  0072                     ??__Umul8_16:	
   448  0072                     ??_adcRead:	
   449                           ; 1 bytes @ 0x2
   450                           
   451  0072                     lcdWriteChar@temp:	
   452                           ; 1 bytes @ 0x2
   453                           
   454  0072                     ___lwdiv@dividend:	
   455                           ; 1 bytes @ 0x2
   456                           
   457                           
   458                           ; 2 bytes @ 0x2
   459  0072                     	ds	1
   460  0073                     lcdCmd@a:	
   461  0073                     lcdWriteChar@y:	
   462                           ; 1 bytes @ 0x3
   463                           
   464                           
   465                           ; 1 bytes @ 0x3
   466  0073                     	ds	1
   467  0074                     ??_lcdClear:	
   468  0074                     ?_lcdSetCursor:	
   469                           ; 1 bytes @ 0x4
   470                           
   471  0074                     ??_lcdInit:	
   472                           ; 1 bytes @ 0x4
   473                           
   474  0074                     ??___lwdiv:	
   475                           ; 1 bytes @ 0x4
   476                           
   477  0074                     ??___xxtofl:	
   478                           ; 1 bytes @ 0x4
   479                           
   480  0074                     lcdSetCursor@b:	
   481                           ; 1 bytes @ 0x4
   482                           
   483  0074                     lcdWriteChar@a:	
   484                           ; 1 bytes @ 0x4
   485                           
   486  0074                     __Umul8_16@product:	
   487                           ; 1 bytes @ 0x4
   488                           
   489                           
   490                           ; 2 bytes @ 0x4
   491  0074                     	ds	1
   492  0075                     ??_lcdSetCursor:	
   493  0075                     ?_lcdPrint:	
   494                           ; 1 bytes @ 0x5
   495                           
   496  0075                     lcdPrint@a:	
   497                           ; 1 bytes @ 0x5
   498                           
   499  0075                     ___lwdiv@quotient:	
   500                           ; 2 bytes @ 0x5
   501                           
   502                           
   503                           ; 2 bytes @ 0x5
   504  0075                     	ds	1
   505  0076                     __Umul8_16@word_mpld:	
   506                           
   507                           ; 2 bytes @ 0x6
   508  0076                     	ds	1
   509  0077                     ??_lcdPrint:	
   510  0077                     lcdSetCursor@a:	
   511                           ; 1 bytes @ 0x7
   512                           
   513  0077                     ___lwdiv@counter:	
   514                           ; 1 bytes @ 0x7
   515                           
   516                           
   517                           ; 1 bytes @ 0x7
   518  0077                     	ds	1
   519  0078                     ?___lwmod:	
   520  0078                     lcdSetCursor@z:	
   521                           ; 2 bytes @ 0x8
   522                           
   523  0078                     ___xxtofl@sign:	
   524                           ; 1 bytes @ 0x8
   525                           
   526  0078                     __Umul8_16@multiplier:	
   527                           ; 1 bytes @ 0x8
   528                           
   529  0078                     ___lwmod@divisor:	
   530                           ; 1 bytes @ 0x8
   531                           
   532                           
   533                           ; 2 bytes @ 0x8
   534  0078                     	ds	1
   535  0079                     lcdSetCursor@y:	
   536  0079                     ___xxtofl@exp:	
   537                           ; 1 bytes @ 0x9
   538                           
   539                           
   540                           ; 1 bytes @ 0x9
   541  0079                     	ds	1
   542  007A                     lcdSetCursor@temp:	
   543  007A                     lcdPrint@i:	
   544                           ; 1 bytes @ 0xA
   545                           
   546  007A                     ___lwmod@dividend:	
   547                           ; 2 bytes @ 0xA
   548                           
   549  007A                     ___xxtofl@arg:	
   550                           ; 2 bytes @ 0xA
   551                           
   552                           
   553                           ; 4 bytes @ 0xA
   554  007A                     	ds	2
   555  007C                     ??___lwmod:	
   556                           
   557                           ; 1 bytes @ 0xC
   558  007C                     	ds	1
   559  007D                     ___lwmod@counter:	
   560                           
   561                           ; 1 bytes @ 0xD
   562  007D                     	ds	1
   563  007E                     ??_setDuty:	
   564                           
   565                           	psect	cstackBANK0
   566  0020                     __pcstackBANK0:	
   567                           ; 1 bytes @ 0xE
   568                           
   569  0020                     ?_sprintf:	
   570  0020                     ?___flmul:	
   571                           ; 2 bytes @ 0x0
   572                           
   573  0020                     sprintf@f:	
   574                           ; 4 bytes @ 0x0
   575                           
   576  0020                     ___flmul@b:	
   577                           ; 1 bytes @ 0x0
   578                           
   579                           
   580                           ; 4 bytes @ 0x0
   581  0020                     	ds	3
   582  0023                     ??_sprintf:	
   583                           
   584                           ; 1 bytes @ 0x3
   585  0023                     	ds	1
   586  0024                     ___flmul@a:	
   587                           
   588                           ; 4 bytes @ 0x4
   589  0024                     	ds	2
   590  0026                     sprintf@ap:	
   591                           
   592                           ; 1 bytes @ 0x6
   593  0026                     	ds	1
   594  0027                     sprintf@flag:	
   595                           
   596                           ; 1 bytes @ 0x7
   597  0027                     	ds	1
   598  0028                     ??___flmul:	
   599  0028                     sprintf@prec:	
   600                           ; 1 bytes @ 0x8
   601                           
   602                           
   603                           ; 1 bytes @ 0x8
   604  0028                     	ds	1
   605  0029                     sprintf@val:	
   606                           
   607                           ; 2 bytes @ 0x9
   608  0029                     	ds	2
   609  002B                     sprintf@sp:	
   610                           
   611                           ; 1 bytes @ 0xB
   612  002B                     	ds	1
   613  002C                     sprintf@c:	
   614                           
   615                           ; 1 bytes @ 0xC
   616  002C                     	ds	1
   617  002D                     ___flmul@sign:	
   618                           
   619                           ; 1 bytes @ 0xD
   620  002D                     	ds	1
   621  002E                     ___flmul@grs:	
   622                           
   623                           ; 4 bytes @ 0xE
   624  002E                     	ds	4
   625  0032                     ___flmul@aexp:	
   626                           
   627                           ; 1 bytes @ 0x12
   628  0032                     	ds	1
   629  0033                     ___flmul@bexp:	
   630                           
   631                           ; 1 bytes @ 0x13
   632  0033                     	ds	1
   633  0034                     ___flmul@prod:	
   634                           
   635                           ; 4 bytes @ 0x14
   636  0034                     	ds	4
   637  0038                     ___flmul@temp:	
   638                           
   639                           ; 2 bytes @ 0x18
   640  0038                     	ds	2
   641  003A                     ?___fldiv:	
   642  003A                     ___fldiv@a:	
   643                           ; 4 bytes @ 0x1A
   644                           
   645                           
   646                           ; 4 bytes @ 0x1A
   647  003A                     	ds	4
   648  003E                     ___fldiv@b:	
   649                           
   650                           ; 4 bytes @ 0x1E
   651  003E                     	ds	4
   652  0042                     ??___fldiv:	
   653                           
   654                           ; 1 bytes @ 0x22
   655  0042                     	ds	5
   656  0047                     ___fldiv@rem:	
   657                           
   658                           ; 4 bytes @ 0x27
   659  0047                     	ds	4
   660  004B                     ___fldiv@sign:	
   661                           
   662                           ; 1 bytes @ 0x2B
   663  004B                     	ds	1
   664  004C                     ___fldiv@new_exp:	
   665                           
   666                           ; 2 bytes @ 0x2C
   667  004C                     	ds	2
   668  004E                     ___fldiv@grs:	
   669                           
   670                           ; 4 bytes @ 0x2E
   671  004E                     	ds	4
   672  0052                     ___fldiv@bexp:	
   673                           
   674                           ; 1 bytes @ 0x32
   675  0052                     	ds	1
   676  0053                     ___fldiv@aexp:	
   677                           
   678                           ; 1 bytes @ 0x33
   679  0053                     	ds	1
   680  0054                     ?___fltol:	
   681  0054                     ___fltol@f1:	
   682                           ; 4 bytes @ 0x34
   683                           
   684                           
   685                           ; 4 bytes @ 0x34
   686  0054                     	ds	4
   687  0058                     ??___fltol:	
   688                           
   689                           ; 1 bytes @ 0x38
   690  0058                     	ds	5
   691  005D                     ___fltol@sign1:	
   692                           
   693                           ; 1 bytes @ 0x3D
   694  005D                     	ds	1
   695  005E                     ___fltol@exp1:	
   696                           
   697                           ; 1 bytes @ 0x3E
   698  005E                     	ds	1
   699  005F                     ?_setDuty:	
   700  005F                     setDuty@duty:	
   701                           ; 2 bytes @ 0x3F
   702                           
   703                           
   704                           ; 2 bytes @ 0x3F
   705  005F                     	ds	2
   706  0061                     ?_pwmSetDuty1:	
   707  0061                     ?_pwmSetDuty2:	
   708                           ; 1 bytes @ 0x41
   709                           
   710  0061                     pwmSetDuty1@duty:	
   711                           ; 1 bytes @ 0x41
   712                           
   713  0061                     pwmSetDuty2@duty:	
   714                           ; 2 bytes @ 0x41
   715                           
   716                           
   717                           ; 2 bytes @ 0x41
   718  0061                     	ds	2
   719  0063                     ??_pwmSetDuty1:	
   720  0063                     ??_pwmSetDuty2:	
   721                           ; 1 bytes @ 0x43
   722                           
   723                           
   724                           ; 1 bytes @ 0x43
   725  0063                     	ds	2
   726  0065                     ??_main:	
   727                           
   728                           ; 1 bytes @ 0x45
   729  0065                     	ds	2
   730  0067                     main@v:	
   731                           
   732                           ; 2 bytes @ 0x47
   733  0067                     	ds	2
   734  0069                     main@m:	
   735                           
   736                           ; 2 bytes @ 0x49
   737  0069                     	ds	2
   738  006B                     main@pwm2:	
   739                           
   740                           ; 2 bytes @ 0x4B
   741  006B                     	ds	2
   742                           
   743                           	psect	maintext
   744  0339                     __pmaintext:	
   745 ;;
   746 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   747 ;;
   748 ;; *************** function _main *****************
   749 ;; Defined at:
   750 ;;		line 11 in file "main.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;		None
   753 ;; Auto vars:     Size  Location     Type
   754 ;;  m               2   73[BANK0 ] unsigned int 
   755 ;;  v               2   71[BANK0 ] unsigned int 
   756 ;;  pwm2            2   75[BANK0 ] unsigned int 
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   761 ;; Tracked objects:
   762 ;;		On entry : B00/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   766 ;;      Params:         0       0       0       0       0
   767 ;;      Locals:         0       6       0       0       0
   768 ;;      Temps:          0       2       0       0       0
   769 ;;      Totals:         0       8       0       0       0
   770 ;;Total ram usage:        8 bytes
   771 ;; Hardware stack levels required when called:    4
   772 ;; This function calls:
   773 ;;		___fldiv
   774 ;;		___flmul
   775 ;;		___fltol
   776 ;;		___xxtofl
   777 ;;		_adcInit
   778 ;;		_adcRead
   779 ;;		_lcdClear
   780 ;;		_lcdInit
   781 ;;		_lcdPrint
   782 ;;		_lcdSetCursor
   783 ;;		_pwmInit1
   784 ;;		_pwmInit2
   785 ;;		_pwmSetDuty1
   786 ;;		_pwmSetDuty2
   787 ;;		_sprintf
   788 ;; This function is called by:
   789 ;;		Startup code after reset
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           
   794                           ;psect for function _main
   795  0339                     _main:	
   796                           
   797                           ;main.c: 12:     TRISB = 255;
   798                           
   799                           ;incstack = 0
   800                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   801  0339  30FF               	movlw	255
   802  033A  1683               	bsf	3,5	;RP0=1, select bank1
   803  033B  1303               	bcf	3,6	;RP1=0, select bank1
   804  033C  0086               	movwf	6	;volatile
   805                           
   806                           ;main.c: 13:     PORTB = 0;
   807  033D  1283               	bcf	3,5	;RP0=0, select bank0
   808  033E  1303               	bcf	3,6	;RP1=0, select bank0
   809  033F  0186               	clrf	6	;volatile
   810                           
   811                           ;main.c: 14:     adcInit();
   812  0340  120A  118A  200B  120A  118A  	fcall	_adcInit
   813                           
   814                           ;main.c: 15:     lcdInit();
   815  0345  120A  158A  2732  120A  118A  	fcall	_lcdInit
   816                           
   817                           ;main.c: 16:     lcdClear();
   818  034A  120A  158A  24B7  120A  118A  	fcall	_lcdClear
   819                           
   820                           ;main.c: 17:     lcdSetCursor(1, 1);
   821  034F  01F4               	clrf	lcdSetCursor@b
   822  0350  0AF4               	incf	lcdSetCursor@b,f
   823  0351  3001               	movlw	1
   824  0352  120A  158A  2698  120A  118A  	fcall	_lcdSetCursor
   825                           
   826                           ;main.c: 18:     lcdPrint("Iniciando PWM");
   827  0357  301B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   828  0358  00F5               	movwf	lcdPrint@a
   829  0359  3080               	movlw	128
   830  035A  00F6               	movwf	lcdPrint@a+1
   831  035B  120A  158A  265B  120A  118A  	fcall	_lcdPrint
   832                           
   833                           ;main.c: 19:     _delay((unsigned long)((10)*(4000000/4000.0)));
   834  0360  300D               	movlw	13
   835  0361  1283               	bcf	3,5	;RP0=0, select bank0
   836  0362  1303               	bcf	3,6	;RP1=0, select bank0
   837  0363  00E6               	movwf	??_main+1
   838  0364  30FB               	movlw	251
   839  0365  00E5               	movwf	??_main
   840  0366                     u2777:	
   841  0366  0BE5               	decfsz	??_main,f
   842  0367  2B66               	goto	u2777
   843  0368  0BE6               	decfsz	??_main+1,f
   844  0369  2B66               	goto	u2777
   845                           
   846                           ;main.c: 21:     pwmInit1();
   847  036A  120A  158A  24A3  120A  118A  	fcall	_pwmInit1
   848                           
   849                           ;main.c: 22:     pwmInit2();
   850  036F  120A  158A  24AD  120A  118A  	fcall	_pwmInit2
   851                           
   852                           ;main.c: 23:     pwmSetDuty1(0);
   853  0374  3000               	movlw	0
   854  0375  1283               	bcf	3,5	;RP0=0, select bank0
   855  0376  1303               	bcf	3,6	;RP1=0, select bank0
   856  0377  00E1               	movwf	pwmSetDuty1@duty
   857  0378  00E2               	movwf	pwmSetDuty1@duty+1
   858  0379  120A  158A  2558  120A  118A  	fcall	_pwmSetDuty1
   859                           
   860                           ;main.c: 24:     pwmSetDuty2(0);
   861  037E  3000               	movlw	0
   862  037F  1283               	bcf	3,5	;RP0=0, select bank0
   863  0380  1303               	bcf	3,6	;RP1=0, select bank0
   864  0381  00E1               	movwf	pwmSetDuty2@duty
   865  0382  00E2               	movwf	pwmSetDuty2@duty+1
   866  0383  120A  158A  2587  120A  118A  	fcall	_pwmSetDuty2
   867                           
   868                           ;main.c: 26:     lcdClear();
   869  0388  120A  158A  24B7  120A  118A  	fcall	_lcdClear
   870                           
   871                           ;main.c: 27:     lcdSetCursor(1, 1);
   872  038D  01F4               	clrf	lcdSetCursor@b
   873  038E  0AF4               	incf	lcdSetCursor@b,f
   874  038F  3001               	movlw	1
   875  0390  120A  158A  2698  120A  118A  	fcall	_lcdSetCursor
   876                           
   877                           ;main.c: 28:     lcdPrint("Modulo iniciado");
   878  0395  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   879  0396  00F5               	movwf	lcdPrint@a
   880  0397  3080               	movlw	128
   881  0398  00F6               	movwf	lcdPrint@a+1
   882  0399  120A  158A  265B  120A  118A  	fcall	_lcdPrint
   883                           
   884                           ;main.c: 29:     _delay((unsigned long)((100)*(4000000/4000.0)));
   885  039E  3082               	movlw	130
   886  039F  1283               	bcf	3,5	;RP0=0, select bank0
   887  03A0  1303               	bcf	3,6	;RP1=0, select bank0
   888  03A1  00E6               	movwf	??_main+1
   889  03A2  30DD               	movlw	221
   890  03A3  00E5               	movwf	??_main
   891  03A4                     u2787:	
   892  03A4  0BE5               	decfsz	??_main,f
   893  03A5  2BA4               	goto	u2787
   894  03A6  0BE6               	decfsz	??_main+1,f
   895  03A7  2BA4               	goto	u2787
   896                           
   897                           ;main.c: 30:     lcdClear();
   898  03A8  120A  158A  24B7  120A  118A  	fcall	_lcdClear
   899                           
   900                           ;main.c: 31:     unsigned int pwm2 = 0;
   901  03AD  1283               	bcf	3,5	;RP0=0, select bank0
   902  03AE  1303               	bcf	3,6	;RP1=0, select bank0
   903  03AF  01EB               	clrf	main@pwm2
   904  03B0  01EC               	clrf	main@pwm2+1
   905  03B1                     l2203:	
   906                           
   907                           ;main.c: 33:         unsigned int v = adcRead(0);
   908  03B1  3000               	movlw	0
   909  03B2  00F0               	movwf	adcRead@adcChannel
   910  03B3  00F1               	movwf	adcRead@adcChannel+1
   911  03B4  120A  158A  2513  120A  118A  	fcall	_adcRead
   912  03B9  0871               	movf	?_adcRead+1,w
   913  03BA  1283               	bcf	3,5	;RP0=0, select bank0
   914  03BB  1303               	bcf	3,6	;RP1=0, select bank0
   915  03BC  00E8               	movwf	main@v+1
   916  03BD  0870               	movf	?_adcRead,w
   917  03BE  00E7               	movwf	main@v
   918                           
   919                           ;main.c: 34:         unsigned int m = ((float) v * 100) / 1023;
   920  03BF  0867               	movf	main@v,w
   921  03C0  00F0               	movwf	___xxtofl@val
   922  03C1  0868               	movf	main@v+1,w
   923  03C2  00F1               	movwf	___xxtofl@val+1
   924  03C3  01F2               	clrf	___xxtofl@val+2
   925  03C4  01F3               	clrf	___xxtofl@val+3
   926  03C5  3000               	movlw	0
   927  03C6  120A  118A  201B  120A  118A  	fcall	___xxtofl
   928  03CB  0873               	movf	?___xxtofl+3,w
   929  03CC  1283               	bcf	3,5	;RP0=0, select bank0
   930  03CD  1303               	bcf	3,6	;RP1=0, select bank0
   931  03CE  00A7               	movwf	___flmul@a+3
   932  03CF  0872               	movf	?___xxtofl+2,w
   933  03D0  00A6               	movwf	___flmul@a+2
   934  03D1  0871               	movf	?___xxtofl+1,w
   935  03D2  00A5               	movwf	___flmul@a+1
   936  03D3  0870               	movf	?___xxtofl,w
   937  03D4  00A4               	movwf	___flmul@a
   938  03D5  3042               	movlw	66
   939  03D6  00A3               	movwf	___flmul@b+3
   940  03D7  30C8               	movlw	200
   941  03D8  00A2               	movwf	___flmul@b+2
   942  03D9  3000               	movlw	0
   943  03DA  00A1               	movwf	___flmul@b+1
   944  03DB  3000               	movlw	0
   945  03DC  00A0               	movwf	___flmul@b
   946  03DD  120A  118A  24E0  120A  118A  	fcall	___flmul
   947  03E2  1283               	bcf	3,5	;RP0=0, select bank0
   948  03E3  1303               	bcf	3,6	;RP1=0, select bank0
   949  03E4  0823               	movf	?___flmul+3,w
   950  03E5  00C1               	movwf	___fldiv@b+3
   951  03E6  0822               	movf	?___flmul+2,w
   952  03E7  00C0               	movwf	___fldiv@b+2
   953  03E8  0821               	movf	?___flmul+1,w
   954  03E9  00BF               	movwf	___fldiv@b+1
   955  03EA  0820               	movf	?___flmul,w
   956  03EB  00BE               	movwf	___fldiv@b
   957  03EC  3044               	movlw	68
   958  03ED  00BD               	movwf	___fldiv@a+3
   959  03EE  307F               	movlw	127
   960  03EF  00BC               	movwf	___fldiv@a+2
   961  03F0  30C0               	movlw	192
   962  03F1  00BB               	movwf	___fldiv@a+1
   963  03F2  3000               	movlw	0
   964  03F3  00BA               	movwf	___fldiv@a
   965  03F4  120A  118A  2196  120A  118A  	fcall	___fldiv
   966  03F9  1283               	bcf	3,5	;RP0=0, select bank0
   967  03FA  1303               	bcf	3,6	;RP1=0, select bank0
   968  03FB  083D               	movf	?___fldiv+3,w
   969  03FC  00D7               	movwf	___fltol@f1+3
   970  03FD  083C               	movf	?___fldiv+2,w
   971  03FE  00D6               	movwf	___fltol@f1+2
   972  03FF  083B               	movf	?___fldiv+1,w
   973  0400  00D5               	movwf	___fltol@f1+1
   974  0401  083A               	movf	?___fldiv,w
   975  0402  00D4               	movwf	___fltol@f1
   976  0403  120A  158A  2793  120A  118A  	fcall	___fltol
   977  0408  1283               	bcf	3,5	;RP0=0, select bank0
   978  0409  1303               	bcf	3,6	;RP1=0, select bank0
   979  040A  0855               	movf	?___fltol+1,w
   980  040B  00EA               	movwf	main@m+1
   981  040C  0854               	movf	?___fltol,w
   982  040D  00E9               	movwf	main@m
   983                           
   984                           ;main.c: 35:         pwmSetDuty1(v);
   985  040E  0868               	movf	main@v+1,w
   986  040F  00E2               	movwf	pwmSetDuty1@duty+1
   987  0410  0867               	movf	main@v,w
   988  0411  00E1               	movwf	pwmSetDuty1@duty
   989  0412  120A  158A  2558  120A  118A  	fcall	_pwmSetDuty1
   990                           
   991                           ;main.c: 36:         lcdClear();
   992  0417  120A  158A  24B7  120A  118A  	fcall	_lcdClear
   993                           
   994                           ;main.c: 37:         sprintf(entero, "PWM1:%d%%", m);
   995  041C  3029               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   996  041D  1283               	bcf	3,5	;RP0=0, select bank0
   997  041E  1303               	bcf	3,6	;RP1=0, select bank0
   998  041F  00E5               	movwf	??_main
   999  0420  0865               	movf	??_main,w
  1000  0421  00A0               	movwf	sprintf@f
  1001  0422  086A               	movf	main@m+1,w
  1002  0423  00A2               	movwf	?_sprintf+2
  1003  0424  0869               	movf	main@m,w
  1004  0425  00A1               	movwf	?_sprintf+1
  1005  0426  30A0               	movlw	(low (_entero| 0))& (0+255)
  1006  0427  120A  118A  20BE  120A  118A  	fcall	_sprintf
  1007                           
  1008                           ;main.c: 38:         lcdSetCursor(1, 1);
  1009  042C  01F4               	clrf	lcdSetCursor@b
  1010  042D  0AF4               	incf	lcdSetCursor@b,f
  1011  042E  3001               	movlw	1
  1012  042F  120A  158A  2698  120A  118A  	fcall	_lcdSetCursor
  1013                           
  1014                           ;main.c: 39:         lcdPrint(entero);
  1015  0434  30A0               	movlw	(low (_entero| 0))& (0+255)
  1016  0435  00F5               	movwf	lcdPrint@a
  1017  0436  3000               	movlw	0
  1018  0437  00F6               	movwf	lcdPrint@a+1
  1019  0438  120A  158A  265B  120A  118A  	fcall	_lcdPrint
  1020                           
  1021                           ;main.c: 41:         if (RB0 == 1) {
  1022  043D  1283               	bcf	3,5	;RP0=0, select bank0
  1023  043E  1303               	bcf	3,6	;RP1=0, select bank0
  1024  043F  1C06               	btfss	6,0	;volatile
  1025  0440  2C4F               	goto	l149
  1026                           
  1027                           ;main.c: 42:             if (pwm2 < 1024)
  1028  0441  3004               	movlw	4
  1029  0442  026C               	subwf	main@pwm2+1,w
  1030  0443  3000               	movlw	0
  1031  0444  1903               	skipnz
  1032  0445  026B               	subwf	main@pwm2,w
  1033  0446  1803               	skipnc
  1034  0447  2C64               	goto	l151
  1035                           
  1036                           ;main.c: 43:                 pwmSetDuty2(++pwm2);
  1037  0448  3001               	movlw	1
  1038  0449  07EB               	addwf	main@pwm2,f
  1039  044A  1803               	skipnc
  1040  044B  0AEC               	incf	main@pwm2+1,f
  1041  044C  3000               	movlw	0
  1042  044D  07EC               	addwf	main@pwm2+1,f
  1043  044E  2C5B               	goto	L1
  1044  044F                     l149:	
  1045  044F  1C86               	btfss	6,1	;volatile
  1046  0450  2C64               	goto	l151
  1047                           
  1048                           ;main.c: 45:             if (pwm2 > 0)
  1049  0451  086B               	movf	main@pwm2,w
  1050  0452  046C               	iorwf	main@pwm2+1,w
  1051  0453  1903               	btfsc	3,2
  1052  0454  2C64               	goto	l151
  1053                           
  1054                           ;main.c: 46:                 pwmSetDuty2(--pwm2);
  1055  0455  3001               	movlw	1
  1056  0456  02EB               	subwf	main@pwm2,f
  1057  0457  3000               	movlw	0
  1058  0458  1C03               	skipc
  1059  0459  03EC               	decf	main@pwm2+1,f
  1060  045A  02EC               	subwf	main@pwm2+1,f
  1061  045B                     L1:	
  1062  045B  086C               	movf	main@pwm2+1,w
  1063  045C  00E2               	movwf	pwmSetDuty2@duty+1
  1064  045D  086B               	movf	main@pwm2,w
  1065  045E  00E1               	movwf	pwmSetDuty2@duty
  1066  045F  120A  158A  2587  120A  118A  	fcall	_pwmSetDuty2
  1067  0464                     l151:	
  1068                           
  1069                           ;main.c: 49:         m = ((float) pwm2 * 100) / 1023;
  1070  0464  1283               	bcf	3,5	;RP0=0, select bank0
  1071  0465  1303               	bcf	3,6	;RP1=0, select bank0
  1072  0466  086B               	movf	main@pwm2,w
  1073  0467  00F0               	movwf	___xxtofl@val
  1074  0468  086C               	movf	main@pwm2+1,w
  1075  0469  00F1               	movwf	___xxtofl@val+1
  1076  046A  01F2               	clrf	___xxtofl@val+2
  1077  046B  01F3               	clrf	___xxtofl@val+3
  1078  046C  3000               	movlw	0
  1079  046D  120A  118A  201B  120A  118A  	fcall	___xxtofl
  1080  0472  0873               	movf	?___xxtofl+3,w
  1081  0473  1283               	bcf	3,5	;RP0=0, select bank0
  1082  0474  1303               	bcf	3,6	;RP1=0, select bank0
  1083  0475  00A7               	movwf	___flmul@a+3
  1084  0476  0872               	movf	?___xxtofl+2,w
  1085  0477  00A6               	movwf	___flmul@a+2
  1086  0478  0871               	movf	?___xxtofl+1,w
  1087  0479  00A5               	movwf	___flmul@a+1
  1088  047A  0870               	movf	?___xxtofl,w
  1089  047B  00A4               	movwf	___flmul@a
  1090  047C  3042               	movlw	66
  1091  047D  00A3               	movwf	___flmul@b+3
  1092  047E  30C8               	movlw	200
  1093  047F  00A2               	movwf	___flmul@b+2
  1094  0480  3000               	movlw	0
  1095  0481  00A1               	movwf	___flmul@b+1
  1096  0482  3000               	movlw	0
  1097  0483  00A0               	movwf	___flmul@b
  1098  0484  120A  118A  24E0  120A  118A  	fcall	___flmul
  1099  0489  1283               	bcf	3,5	;RP0=0, select bank0
  1100  048A  1303               	bcf	3,6	;RP1=0, select bank0
  1101  048B  0823               	movf	?___flmul+3,w
  1102  048C  00C1               	movwf	___fldiv@b+3
  1103  048D  0822               	movf	?___flmul+2,w
  1104  048E  00C0               	movwf	___fldiv@b+2
  1105  048F  0821               	movf	?___flmul+1,w
  1106  0490  00BF               	movwf	___fldiv@b+1
  1107  0491  0820               	movf	?___flmul,w
  1108  0492  00BE               	movwf	___fldiv@b
  1109  0493  3044               	movlw	68
  1110  0494  00BD               	movwf	___fldiv@a+3
  1111  0495  307F               	movlw	127
  1112  0496  00BC               	movwf	___fldiv@a+2
  1113  0497  30C0               	movlw	192
  1114  0498  00BB               	movwf	___fldiv@a+1
  1115  0499  3000               	movlw	0
  1116  049A  00BA               	movwf	___fldiv@a
  1117  049B  120A  118A  2196  120A  118A  	fcall	___fldiv
  1118  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  1119  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  1120  04A2  083D               	movf	?___fldiv+3,w
  1121  04A3  00D7               	movwf	___fltol@f1+3
  1122  04A4  083C               	movf	?___fldiv+2,w
  1123  04A5  00D6               	movwf	___fltol@f1+2
  1124  04A6  083B               	movf	?___fldiv+1,w
  1125  04A7  00D5               	movwf	___fltol@f1+1
  1126  04A8  083A               	movf	?___fldiv,w
  1127  04A9  00D4               	movwf	___fltol@f1
  1128  04AA  120A  158A  2793  120A  118A  	fcall	___fltol
  1129  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  1130  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  1131  04B1  0855               	movf	?___fltol+1,w
  1132  04B2  00EA               	movwf	main@m+1
  1133  04B3  0854               	movf	?___fltol,w
  1134  04B4  00E9               	movwf	main@m
  1135                           
  1136                           ;main.c: 50:         sprintf(entero, "PWM2:%d%%", m);
  1137  04B5  3033               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1138  04B6  00E5               	movwf	??_main
  1139  04B7  0865               	movf	??_main,w
  1140  04B8  00A0               	movwf	sprintf@f
  1141  04B9  086A               	movf	main@m+1,w
  1142  04BA  00A2               	movwf	?_sprintf+2
  1143  04BB  0869               	movf	main@m,w
  1144  04BC  00A1               	movwf	?_sprintf+1
  1145  04BD  30A0               	movlw	(low (_entero| 0))& (0+255)
  1146  04BE  120A  118A  20BE  120A  118A  	fcall	_sprintf
  1147                           
  1148                           ;main.c: 51:         lcdSetCursor(2, 1);
  1149  04C3  01F4               	clrf	lcdSetCursor@b
  1150  04C4  0AF4               	incf	lcdSetCursor@b,f
  1151  04C5  3002               	movlw	2
  1152  04C6  120A  158A  2698  120A  118A  	fcall	_lcdSetCursor
  1153                           
  1154                           ;main.c: 52:         lcdPrint(entero);
  1155  04CB  30A0               	movlw	(low (_entero| 0))& (0+255)
  1156  04CC  00F5               	movwf	lcdPrint@a
  1157  04CD  3000               	movlw	0
  1158  04CE  00F6               	movwf	lcdPrint@a+1
  1159  04CF  120A  158A  265B  120A  118A  	fcall	_lcdPrint
  1160                           
  1161                           ;main.c: 53:         _delay((unsigned long)((50)*(4000000/4000.0)));
  1162  04D4  3041               	movlw	65
  1163  04D5  1283               	bcf	3,5	;RP0=0, select bank0
  1164  04D6  1303               	bcf	3,6	;RP1=0, select bank0
  1165  04D7  00E6               	movwf	??_main+1
  1166  04D8  30ED               	movlw	237
  1167  04D9  00E5               	movwf	??_main
  1168  04DA                     u2797:	
  1169  04DA  0BE5               	decfsz	??_main,f
  1170  04DB  2CDA               	goto	u2797
  1171  04DC  0BE6               	decfsz	??_main+1,f
  1172  04DD  2CDA               	goto	u2797
  1173  04DE  2CDF               	nop2
  1174                           
  1175                           ;main.c: 54:     }
  1176  04DF  2BB1               	goto	l2203
  1177  04E0                     __end_of_main:	
  1178                           
  1179                           	psect	text1
  1180  00BE                     __ptext1:	
  1181 ;; *************** function _sprintf *****************
  1182 ;; Defined at:
  1183 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  sp              1    wreg     PTR unsigned char 
  1186 ;;		 -> entero(16), 
  1187 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1188 ;;		 -> STR_4(10), STR_3(10), 
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1191 ;;		 -> entero(16), 
  1192 ;;  tmpval          4    0        struct .
  1193 ;;  val             2    9[BANK0 ] unsigned int 
  1194 ;;  cp              2    0        PTR const unsigned char 
  1195 ;;  len             2    0        unsigned int 
  1196 ;;  c               1   12[BANK0 ] unsigned char 
  1197 ;;  prec            1    8[BANK0 ] char 
  1198 ;;  flag            1    7[BANK0 ] unsigned char 
  1199 ;;  ap              1    6[BANK0 ] PTR void [1]
  1200 ;;		 -> ?_sprintf(2), 
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  2    0[BANK0 ] int 
  1203 ;; Registers used:
  1204 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1210 ;;      Params:         0       3       0       0       0
  1211 ;;      Locals:         0       7       0       0       0
  1212 ;;      Temps:          0       3       0       0       0
  1213 ;;      Totals:         0      13       0       0       0
  1214 ;;Total ram usage:       13 bytes
  1215 ;; Hardware stack levels used:    1
  1216 ;; Hardware stack levels required when called:    1
  1217 ;; This function calls:
  1218 ;;		___lwdiv
  1219 ;;		___lwmod
  1220 ;; This function is called by:
  1221 ;;		_main
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           
  1226                           ;psect for function _sprintf
  1227  00BE                     _sprintf:	
  1228                           
  1229                           ;incstack = 0
  1230                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1231                           ;sprintf@sp stored from wreg
  1232  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1233  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1234  00C0  00AB               	movwf	sprintf@sp
  1235                           
  1236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  1237  00C1  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1238  00C2  00A3               	movwf	??_sprintf
  1239  00C3  0823               	movf	??_sprintf,w
  1240  00C4  00A6               	movwf	sprintf@ap
  1241  00C5                     l2157:	
  1242                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1243                           
  1244                           
  1245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1246  00C5  3001               	movlw	1
  1247  00C6  07A0               	addwf	sprintf@f,f
  1248  00C7  30FF               	movlw	-1
  1249  00C8  0720               	addwf	sprintf@f,w
  1250  00C9  0084               	movwf	4
  1251  00CA  120A  158A  200A  120A  118A  	fcall	stringdir
  1252  00CF  00A3               	movwf	??_sprintf
  1253  00D0  0823               	movf	??_sprintf,w
  1254  00D1  00AC               	movwf	sprintf@c
  1255  00D2  082C               	movf	sprintf@c,w
  1256  00D3  1903               	btfsc	3,2
  1257  00D4  2991               	goto	l2159
  1258                           
  1259                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  1260  00D5  3025               	movlw	37
  1261  00D6  062C               	xorwf	sprintf@c,w
  1262  00D7  1903               	btfsc	3,2
  1263  00D8  28E5               	goto	l2109
  1264  00D9                     l2105:	
  1265                           
  1266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  1267  00D9  082C               	movf	sprintf@c,w
  1268  00DA  00A3               	movwf	??_sprintf
  1269  00DB  082B               	movf	sprintf@sp,w
  1270  00DC  0084               	movwf	4
  1271  00DD  0823               	movf	??_sprintf,w
  1272  00DE  1383               	bcf	3,7	;select IRP bank0
  1273  00DF  0080               	movwf	0
  1274  00E0  3001               	movlw	1
  1275  00E1  00A3               	movwf	??_sprintf
  1276  00E2  0823               	movf	??_sprintf,w
  1277  00E3  07AB               	addwf	sprintf@sp,f
  1278                           
  1279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  1280  00E4  28C5               	goto	l2157
  1281  00E5                     l2109:	
  1282                           
  1283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  1284  00E5  01A7               	clrf	sprintf@flag
  1285                           
  1286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  1287  00E6  3001               	movlw	1
  1288  00E7  07A0               	addwf	sprintf@f,f
  1289  00E8  30FF               	movlw	-1
  1290  00E9  0720               	addwf	sprintf@f,w
  1291  00EA  0084               	movwf	4
  1292  00EB  120A  158A  200A  120A  118A  	fcall	stringdir
  1293  00F0  00AC               	movwf	sprintf@c
  1294  00F1  00A3               	movwf	??_sprintf
  1295  00F2  01A4               	clrf	??_sprintf+1
  1296                           
  1297                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1298                           ; Switch size 1, requested type "simple"
  1299                           ; Number of cases is 1, Range of values is 0 to 0
  1300                           ; switch strategies available:
  1301                           ; Name         Instructions Cycles
  1302                           ; simple_byte            4     3 (average)
  1303                           ; direct_byte           11     8 (fixed)
  1304                           ; jumptable            260     6 (fixed)
  1305                           ;	Chosen strategy is simple_byte
  1306  00F3  0824               	movf	??_sprintf+1,w
  1307  00F4  3A00               	xorlw	0	; case 0
  1308  00F5  1903               	skipnz
  1309  00F6  28F8               	goto	l2255
  1310  00F7  28D9               	goto	l2105
  1311  00F8                     l2255:	
  1312                           
  1313                           ; Switch size 1, requested type "simple"
  1314                           ; Number of cases is 3, Range of values is 0 to 105
  1315                           ; switch strategies available:
  1316                           ; Name         Instructions Cycles
  1317                           ; simple_byte           10     6 (average)
  1318                           ; jumptable            260     6 (fixed)
  1319                           ;	Chosen strategy is simple_byte
  1320  00F8  0823               	movf	??_sprintf,w
  1321  00F9  3A00               	xorlw	0	; case 0
  1322  00FA  1903               	skipnz
  1323  00FB  2991               	goto	l2159
  1324  00FC  3A64               	xorlw	100	; case 100
  1325  00FD  1903               	skipnz
  1326  00FE  2903               	goto	l2119
  1327  00FF  3A0D               	xorlw	13	; case 105
  1328  0100  1903               	skipnz
  1329  0101  2903               	goto	l2119
  1330  0102  28D9               	goto	l2105
  1331  0103                     l2119:	
  1332                           
  1333                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1334  0103  0826               	movf	sprintf@ap,w
  1335  0104  0084               	movwf	4
  1336  0105  1383               	bcf	3,7	;select IRP bank0
  1337  0106  0800               	movf	0,w
  1338  0107  00A9               	movwf	sprintf@val
  1339  0108  0A84               	incf	4,f
  1340  0109  0800               	movf	0,w
  1341  010A  00AA               	movwf	sprintf@val+1
  1342  010B  3002               	movlw	2
  1343  010C  00A3               	movwf	??_sprintf
  1344  010D  0823               	movf	??_sprintf,w
  1345  010E  07A6               	addwf	sprintf@ap,f
  1346                           
  1347                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((int)val < 0) {
  1348  010F  1FAA               	btfss	sprintf@val+1,7
  1349  0110  291A               	goto	l2129
  1350                           
  1351                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  1352  0111  3003               	movlw	3
  1353  0112  00A3               	movwf	??_sprintf
  1354  0113  0823               	movf	??_sprintf,w
  1355  0114  04A7               	iorwf	sprintf@flag,f
  1356                           
  1357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  1358  0115  09A9               	comf	sprintf@val,f
  1359  0116  09AA               	comf	sprintf@val+1,f
  1360  0117  0AA9               	incf	sprintf@val,f
  1361  0118  1903               	skipnz
  1362  0119  0AAA               	incf	sprintf@val+1,f
  1363  011A                     l2129:	
  1364                           
  1365                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1366  011A  01AC               	clrf	sprintf@c
  1367  011B  0AAC               	incf	sprintf@c,f
  1368  011C                     l2135:	
  1369                           
  1370                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  1371  011C  082C               	movf	sprintf@c,w
  1372  011D  00A3               	movwf	??_sprintf
  1373  011E  0723               	addwf	??_sprintf,w
  1374  011F  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1375  0120  0084               	movwf	4
  1376  0121  120A  158A  200A  120A  118A  	fcall	stringdir
  1377  0126  00A4               	movwf	??_sprintf+1
  1378  0127  120A  158A  200A  120A  118A  	fcall	stringdir
  1379  012C  00A5               	movwf	??_sprintf+2
  1380  012D  0825               	movf	??_sprintf+2,w
  1381  012E  022A               	subwf	sprintf@val+1,w
  1382  012F  1D03               	skipz
  1383  0130  2933               	goto	u2685
  1384  0131  0824               	movf	??_sprintf+1,w
  1385  0132  0229               	subwf	sprintf@val,w
  1386  0133                     u2685:	
  1387  0133  1C03               	btfss	3,0
  1388  0134  293D               	goto	l2141
  1389  0135  3001               	movlw	1
  1390  0136  00A3               	movwf	??_sprintf
  1391  0137  0823               	movf	??_sprintf,w
  1392  0138  07AC               	addwf	sprintf@c,f
  1393  0139  3005               	movlw	5
  1394  013A  062C               	xorwf	sprintf@c,w
  1395  013B  1D03               	btfss	3,2
  1396  013C  291C               	goto	l2135
  1397  013D                     l2141:	
  1398                           
  1399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  1400  013D  0827               	movf	sprintf@flag,w
  1401  013E  3903               	andlw	3
  1402  013F  1903               	btfsc	3,2
  1403  0140  294C               	goto	l2147
  1404                           
  1405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  1406  0141  302D               	movlw	45
  1407  0142  00A3               	movwf	??_sprintf
  1408  0143  082B               	movf	sprintf@sp,w
  1409  0144  0084               	movwf	4
  1410  0145  0823               	movf	??_sprintf,w
  1411  0146  1383               	bcf	3,7	;select IRP bank0
  1412  0147  0080               	movwf	0
  1413  0148  3001               	movlw	1
  1414  0149  00A3               	movwf	??_sprintf
  1415  014A  0823               	movf	??_sprintf,w
  1416  014B  07AB               	addwf	sprintf@sp,f
  1417  014C                     l2147:	
  1418                           
  1419                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1488:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  1420  014C  082C               	movf	sprintf@c,w
  1421  014D  00A3               	movwf	??_sprintf
  1422  014E  0823               	movf	??_sprintf,w
  1423  014F  00A8               	movwf	sprintf@prec
  1424  0150                     l2155:	
  1425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  1426                           
  1427                           
  1428                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  1429  0150  30FF               	movlw	255
  1430  0151  00A3               	movwf	??_sprintf
  1431  0152  0823               	movf	??_sprintf,w
  1432  0153  07A8               	addwf	sprintf@prec,f
  1433  0154  0A28               	incf	sprintf@prec,w
  1434  0155  1903               	btfsc	3,2
  1435  0156  28C5               	goto	l2157
  1436                           
  1437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  1438  0157  300A               	movlw	10
  1439  0158  00F8               	movwf	___lwmod@divisor
  1440  0159  3000               	movlw	0
  1441  015A  00F9               	movwf	___lwmod@divisor+1
  1442  015B  0828               	movf	sprintf@prec,w
  1443  015C  00A3               	movwf	??_sprintf
  1444  015D  0723               	addwf	??_sprintf,w
  1445  015E  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1446  015F  0084               	movwf	4
  1447  0160  120A  158A  200A  120A  118A  	fcall	stringdir
  1448  0165  00F0               	movwf	___lwdiv@divisor
  1449  0166  120A  158A  200A  120A  118A  	fcall	stringdir
  1450  016B  00F1               	movwf	___lwdiv@divisor+1
  1451  016C  082A               	movf	sprintf@val+1,w
  1452  016D  00F3               	movwf	___lwdiv@dividend+1
  1453  016E  0829               	movf	sprintf@val,w
  1454  016F  00F2               	movwf	___lwdiv@dividend
  1455  0170  120A  158A  261F  120A  118A  	fcall	___lwdiv
  1456  0175  0871               	movf	?___lwdiv+1,w
  1457  0176  00FB               	movwf	___lwmod@dividend+1
  1458  0177  0870               	movf	?___lwdiv,w
  1459  0178  00FA               	movwf	___lwmod@dividend
  1460  0179  120A  158A  25B6  120A  118A  	fcall	___lwmod
  1461  017E  0878               	movf	?___lwmod,w
  1462  017F  3E30               	addlw	48
  1463  0180  1283               	bcf	3,5	;RP0=0, select bank0
  1464  0181  1303               	bcf	3,6	;RP1=0, select bank0
  1465  0182  00A4               	movwf	??_sprintf+1
  1466  0183  0824               	movf	??_sprintf+1,w
  1467  0184  00AC               	movwf	sprintf@c
  1468                           
  1469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  1470  0185  082C               	movf	sprintf@c,w
  1471  0186  00A3               	movwf	??_sprintf
  1472  0187  082B               	movf	sprintf@sp,w
  1473  0188  0084               	movwf	4
  1474  0189  0823               	movf	??_sprintf,w
  1475  018A  1383               	bcf	3,7	;select IRP bank0
  1476  018B  0080               	movwf	0
  1477  018C  3001               	movlw	1
  1478  018D  00A3               	movwf	??_sprintf
  1479  018E  0823               	movf	??_sprintf,w
  1480  018F  07AB               	addwf	sprintf@sp,f
  1481  0190  2950               	goto	l2155
  1482  0191                     l2159:	
  1483                           
  1484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  1485  0191  082B               	movf	sprintf@sp,w
  1486  0192  0084               	movwf	4
  1487  0193  1383               	bcf	3,7	;select IRP bank0
  1488  0194  0180               	clrf	0
  1489  0195  0008               	return
  1490  0196                     __end_of_sprintf:	
  1491                           
  1492                           	psect	text2
  1493  0DB6                     __ptext2:	
  1494 ;; *************** function ___lwmod *****************
  1495 ;; Defined at:
  1496 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  divisor         2    8[COMMON] unsigned int 
  1499 ;;  dividend        2   10[COMMON] unsigned int 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  counter         1   13[COMMON] unsigned char 
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  2    8[COMMON] unsigned int 
  1504 ;; Registers used:
  1505 ;;		wreg, status,2, status,0
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1511 ;;      Params:         4       0       0       0       0
  1512 ;;      Locals:         1       0       0       0       0
  1513 ;;      Temps:          1       0       0       0       0
  1514 ;;      Totals:         6       0       0       0       0
  1515 ;;Total ram usage:        6 bytes
  1516 ;; Hardware stack levels used:    1
  1517 ;; This function calls:
  1518 ;;		Nothing
  1519 ;; This function is called by:
  1520 ;;		_sprintf
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           
  1525                           ;psect for function ___lwmod
  1526  0DB6                     ___lwmod:	
  1527                           
  1528                           ;incstack = 0
  1529                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1530  0DB6  0878               	movf	___lwmod@divisor,w
  1531  0DB7  0479               	iorwf	___lwmod@divisor+1,w
  1532  0DB8  1903               	btfsc	3,2
  1533  0DB9  2DE3               	goto	l1989
  1534  0DBA  01FD               	clrf	___lwmod@counter
  1535  0DBB  0AFD               	incf	___lwmod@counter,f
  1536  0DBC                     l1979:	
  1537  0DBC  1BF9               	btfsc	___lwmod@divisor+1,7
  1538  0DBD  2DCA               	goto	l1981
  1539  0DBE  3001               	movlw	1
  1540  0DBF                     u2475:	
  1541  0DBF  1003               	clrc
  1542  0DC0  0DF8               	rlf	___lwmod@divisor,f
  1543  0DC1  0DF9               	rlf	___lwmod@divisor+1,f
  1544  0DC2  3EFF               	addlw	-1
  1545  0DC3  1D03               	skipz
  1546  0DC4  2DBF               	goto	u2475
  1547  0DC5  3001               	movlw	1
  1548  0DC6  00FC               	movwf	??___lwmod
  1549  0DC7  087C               	movf	??___lwmod,w
  1550  0DC8  07FD               	addwf	___lwmod@counter,f
  1551  0DC9  2DBC               	goto	l1979
  1552  0DCA                     l1981:	
  1553  0DCA  0879               	movf	___lwmod@divisor+1,w
  1554  0DCB  027B               	subwf	___lwmod@dividend+1,w
  1555  0DCC  1D03               	skipz
  1556  0DCD  2DD0               	goto	u2495
  1557  0DCE  0878               	movf	___lwmod@divisor,w
  1558  0DCF  027A               	subwf	___lwmod@dividend,w
  1559  0DD0                     u2495:	
  1560  0DD0  1C03               	skipc
  1561  0DD1  2DD8               	goto	l1985
  1562  0DD2  0878               	movf	___lwmod@divisor,w
  1563  0DD3  02FA               	subwf	___lwmod@dividend,f
  1564  0DD4  0879               	movf	___lwmod@divisor+1,w
  1565  0DD5  1C03               	skipc
  1566  0DD6  03FB               	decf	___lwmod@dividend+1,f
  1567  0DD7  02FB               	subwf	___lwmod@dividend+1,f
  1568  0DD8                     l1985:	
  1569  0DD8  3001               	movlw	1
  1570  0DD9                     u2505:	
  1571  0DD9  1003               	clrc
  1572  0DDA  0CF9               	rrf	___lwmod@divisor+1,f
  1573  0DDB  0CF8               	rrf	___lwmod@divisor,f
  1574  0DDC  3EFF               	addlw	-1
  1575  0DDD  1D03               	skipz
  1576  0DDE  2DD9               	goto	u2505
  1577  0DDF  3001               	movlw	1
  1578  0DE0  02FD               	subwf	___lwmod@counter,f
  1579  0DE1  1D03               	btfss	3,2
  1580  0DE2  2DCA               	goto	l1981
  1581  0DE3                     l1989:	
  1582  0DE3  087B               	movf	___lwmod@dividend+1,w
  1583  0DE4  00F9               	movwf	?___lwmod+1
  1584  0DE5  087A               	movf	___lwmod@dividend,w
  1585  0DE6  00F8               	movwf	?___lwmod
  1586  0DE7  0008               	return
  1587  0DE8                     __end_of___lwmod:	
  1588                           
  1589                           	psect	text3
  1590  0E1F                     __ptext3:	
  1591 ;; *************** function ___lwdiv *****************
  1592 ;; Defined at:
  1593 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;  divisor         2    0[COMMON] unsigned int 
  1596 ;;  dividend        2    2[COMMON] unsigned int 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  quotient        2    5[COMMON] unsigned int 
  1599 ;;  counter         1    7[COMMON] unsigned char 
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  2    0[COMMON] unsigned int 
  1602 ;; Registers used:
  1603 ;;		wreg, status,2, status,0
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1609 ;;      Params:         4       0       0       0       0
  1610 ;;      Locals:         3       0       0       0       0
  1611 ;;      Temps:          1       0       0       0       0
  1612 ;;      Totals:         8       0       0       0       0
  1613 ;;Total ram usage:        8 bytes
  1614 ;; Hardware stack levels used:    1
  1615 ;; This function calls:
  1616 ;;		Nothing
  1617 ;; This function is called by:
  1618 ;;		_sprintf
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           
  1623                           ;psect for function ___lwdiv
  1624  0E1F                     ___lwdiv:	
  1625                           
  1626                           ;incstack = 0
  1627                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1628  0E1F  01F5               	clrf	___lwdiv@quotient
  1629  0E20  01F6               	clrf	___lwdiv@quotient+1
  1630  0E21  0870               	movf	___lwdiv@divisor,w
  1631  0E22  0471               	iorwf	___lwdiv@divisor+1,w
  1632  0E23  1903               	btfsc	3,2
  1633  0E24  2E56               	goto	l1967
  1634  0E25  01F7               	clrf	___lwdiv@counter
  1635  0E26  0AF7               	incf	___lwdiv@counter,f
  1636  0E27                     l1955:	
  1637  0E27  1BF1               	btfsc	___lwdiv@divisor+1,7
  1638  0E28  2E35               	goto	l1957
  1639  0E29  3001               	movlw	1
  1640  0E2A                     u2405:	
  1641  0E2A  1003               	clrc
  1642  0E2B  0DF0               	rlf	___lwdiv@divisor,f
  1643  0E2C  0DF1               	rlf	___lwdiv@divisor+1,f
  1644  0E2D  3EFF               	addlw	-1
  1645  0E2E  1D03               	skipz
  1646  0E2F  2E2A               	goto	u2405
  1647  0E30  3001               	movlw	1
  1648  0E31  00F4               	movwf	??___lwdiv
  1649  0E32  0874               	movf	??___lwdiv,w
  1650  0E33  07F7               	addwf	___lwdiv@counter,f
  1651  0E34  2E27               	goto	l1955
  1652  0E35                     l1957:	
  1653  0E35  3001               	movlw	1
  1654  0E36                     u2425:	
  1655  0E36  1003               	clrc
  1656  0E37  0DF5               	rlf	___lwdiv@quotient,f
  1657  0E38  0DF6               	rlf	___lwdiv@quotient+1,f
  1658  0E39  3EFF               	addlw	-1
  1659  0E3A  1D03               	skipz
  1660  0E3B  2E36               	goto	u2425
  1661  0E3C  0871               	movf	___lwdiv@divisor+1,w
  1662  0E3D  0273               	subwf	___lwdiv@dividend+1,w
  1663  0E3E  1D03               	skipz
  1664  0E3F  2E42               	goto	u2435
  1665  0E40  0870               	movf	___lwdiv@divisor,w
  1666  0E41  0272               	subwf	___lwdiv@dividend,w
  1667  0E42                     u2435:	
  1668  0E42  1C03               	skipc
  1669  0E43  2E4B               	goto	l1963
  1670  0E44  0870               	movf	___lwdiv@divisor,w
  1671  0E45  02F2               	subwf	___lwdiv@dividend,f
  1672  0E46  0871               	movf	___lwdiv@divisor+1,w
  1673  0E47  1C03               	skipc
  1674  0E48  03F3               	decf	___lwdiv@dividend+1,f
  1675  0E49  02F3               	subwf	___lwdiv@dividend+1,f
  1676  0E4A  1475               	bsf	___lwdiv@quotient,0
  1677  0E4B                     l1963:	
  1678  0E4B  3001               	movlw	1
  1679  0E4C                     u2445:	
  1680  0E4C  1003               	clrc
  1681  0E4D  0CF1               	rrf	___lwdiv@divisor+1,f
  1682  0E4E  0CF0               	rrf	___lwdiv@divisor,f
  1683  0E4F  3EFF               	addlw	-1
  1684  0E50  1D03               	skipz
  1685  0E51  2E4C               	goto	u2445
  1686  0E52  3001               	movlw	1
  1687  0E53  02F7               	subwf	___lwdiv@counter,f
  1688  0E54  1D03               	btfss	3,2
  1689  0E55  2E35               	goto	l1957
  1690  0E56                     l1967:	
  1691  0E56  0876               	movf	___lwdiv@quotient+1,w
  1692  0E57  00F1               	movwf	?___lwdiv+1
  1693  0E58  0875               	movf	___lwdiv@quotient,w
  1694  0E59  00F0               	movwf	?___lwdiv
  1695  0E5A  0008               	return
  1696  0E5B                     __end_of___lwdiv:	
  1697                           
  1698                           	psect	text4
  1699  0D87                     __ptext4:	
  1700 ;; *************** function _pwmSetDuty2 *****************
  1701 ;; Defined at:
  1702 ;;		line 41 in file "./pwm.h"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;  duty            2   65[BANK0 ] unsigned int 
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;		None
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1716 ;;      Params:         0       2       0       0       0
  1717 ;;      Locals:         0       0       0       0       0
  1718 ;;      Temps:          0       2       0       0       0
  1719 ;;      Totals:         0       4       0       0       0
  1720 ;;Total ram usage:        4 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; Hardware stack levels required when called:    3
  1723 ;; This function calls:
  1724 ;;		_setDuty
  1725 ;; This function is called by:
  1726 ;;		_main
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           
  1731                           ;psect for function _pwmSetDuty2
  1732  0D87                     _pwmSetDuty2:	
  1733                           
  1734                           ;./pwm.h: 42:     if (duty > 1023) return;
  1735                           
  1736                           ;incstack = 0
  1737                           ; Regs used in _pwmSetDuty2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1738  0D87  3004               	movlw	4
  1739  0D88  1283               	bcf	3,5	;RP0=0, select bank0
  1740  0D89  1303               	bcf	3,6	;RP1=0, select bank0
  1741  0D8A  0262               	subwf	pwmSetDuty2@duty+1,w
  1742  0D8B  3000               	movlw	0
  1743  0D8C  1903               	skipnz
  1744  0D8D  0261               	subwf	pwmSetDuty2@duty,w
  1745  0D8E  1803               	btfsc	3,0
  1746  0D8F  0008               	return
  1747                           
  1748                           ;./pwm.h: 43:     duty = setDuty(duty);
  1749  0D90  0862               	movf	pwmSetDuty2@duty+1,w
  1750  0D91  00E0               	movwf	setDuty@duty+1
  1751  0D92  0861               	movf	pwmSetDuty2@duty,w
  1752  0D93  00DF               	movwf	setDuty@duty
  1753  0D94  120A  158A  26E2  120A  158A  	fcall	_setDuty
  1754  0D99  1283               	bcf	3,5	;RP0=0, select bank0
  1755  0D9A  1303               	bcf	3,6	;RP1=0, select bank0
  1756  0D9B  0860               	movf	?_setDuty+1,w
  1757  0D9C  00E2               	movwf	pwmSetDuty2@duty+1
  1758  0D9D  085F               	movf	?_setDuty,w
  1759  0D9E  00E1               	movwf	pwmSetDuty2@duty
  1760                           
  1761                           ;./pwm.h: 45:     CCP2X = duty & 0x01;
  1762  0D9F  1C61               	btfss	pwmSetDuty2@duty,0
  1763  0DA0  2DA5               	goto	u2560
  1764  0DA1  1283               	bcf	3,5	;RP0=0, select bank0
  1765  0DA2  1303               	bcf	3,6	;RP1=0, select bank0
  1766  0DA3  169D               	bsf	29,5	;volatile
  1767  0DA4  2DA8               	goto	l2017
  1768  0DA5                     u2560:	
  1769  0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  1770  0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  1771  0DA7  129D               	bcf	29,5	;volatile
  1772  0DA8                     l2017:	
  1773                           
  1774                           ;./pwm.h: 46:     CCP2Y = duty & 0x02;
  1775  0DA8  121D               	bcf	29,4	;volatile
  1776                           
  1777                           ;./pwm.h: 47:     CCPR2L = duty >> 2;
  1778  0DA9  0862               	movf	pwmSetDuty2@duty+1,w
  1779  0DAA  00E4               	movwf	??_pwmSetDuty2+1
  1780  0DAB  0861               	movf	pwmSetDuty2@duty,w
  1781  0DAC  00E3               	movwf	??_pwmSetDuty2
  1782  0DAD  1003               	clrc
  1783  0DAE  0CE4               	rrf	??_pwmSetDuty2+1,f
  1784  0DAF  0CE3               	rrf	??_pwmSetDuty2,f
  1785  0DB0  1003               	clrc
  1786  0DB1  0CE4               	rrf	??_pwmSetDuty2+1,f
  1787  0DB2  0CE3               	rrf	??_pwmSetDuty2,f
  1788  0DB3  0863               	movf	??_pwmSetDuty2,w
  1789  0DB4  009B               	movwf	27	;volatile
  1790  0DB5  0008               	return
  1791  0DB6                     __end_of_pwmSetDuty2:	
  1792                           
  1793                           	psect	text5
  1794  0D58                     __ptext5:	
  1795 ;; *************** function _pwmSetDuty1 *****************
  1796 ;; Defined at:
  1797 ;;		line 32 in file "./pwm.h"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  duty            2   65[BANK0 ] unsigned int 
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;		None
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      void 
  1804 ;; Registers used:
  1805 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1811 ;;      Params:         0       2       0       0       0
  1812 ;;      Locals:         0       0       0       0       0
  1813 ;;      Temps:          0       2       0       0       0
  1814 ;;      Totals:         0       4       0       0       0
  1815 ;;Total ram usage:        4 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; Hardware stack levels required when called:    3
  1818 ;; This function calls:
  1819 ;;		_setDuty
  1820 ;; This function is called by:
  1821 ;;		_main
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           
  1826                           ;psect for function _pwmSetDuty1
  1827  0D58                     _pwmSetDuty1:	
  1828                           
  1829                           ;./pwm.h: 33:     if (duty > 1023) return;
  1830                           
  1831                           ;incstack = 0
  1832                           ; Regs used in _pwmSetDuty1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1833  0D58  3004               	movlw	4
  1834  0D59  1283               	bcf	3,5	;RP0=0, select bank0
  1835  0D5A  1303               	bcf	3,6	;RP1=0, select bank0
  1836  0D5B  0262               	subwf	pwmSetDuty1@duty+1,w
  1837  0D5C  3000               	movlw	0
  1838  0D5D  1903               	skipnz
  1839  0D5E  0261               	subwf	pwmSetDuty1@duty,w
  1840  0D5F  1803               	btfsc	3,0
  1841  0D60  0008               	return
  1842                           
  1843                           ;./pwm.h: 34:     duty = setDuty(duty);
  1844  0D61  0862               	movf	pwmSetDuty1@duty+1,w
  1845  0D62  00E0               	movwf	setDuty@duty+1
  1846  0D63  0861               	movf	pwmSetDuty1@duty,w
  1847  0D64  00DF               	movwf	setDuty@duty
  1848  0D65  120A  158A  26E2  120A  158A  	fcall	_setDuty
  1849  0D6A  1283               	bcf	3,5	;RP0=0, select bank0
  1850  0D6B  1303               	bcf	3,6	;RP1=0, select bank0
  1851  0D6C  0860               	movf	?_setDuty+1,w
  1852  0D6D  00E2               	movwf	pwmSetDuty1@duty+1
  1853  0D6E  085F               	movf	?_setDuty,w
  1854  0D6F  00E1               	movwf	pwmSetDuty1@duty
  1855                           
  1856                           ;./pwm.h: 36:     CCP1X = duty & 0x01;
  1857  0D70  1C61               	btfss	pwmSetDuty1@duty,0
  1858  0D71  2D76               	goto	u2530
  1859  0D72  1283               	bcf	3,5	;RP0=0, select bank0
  1860  0D73  1303               	bcf	3,6	;RP1=0, select bank0
  1861  0D74  1697               	bsf	23,5	;volatile
  1862  0D75  2D79               	goto	l2005
  1863  0D76                     u2530:	
  1864  0D76  1283               	bcf	3,5	;RP0=0, select bank0
  1865  0D77  1303               	bcf	3,6	;RP1=0, select bank0
  1866  0D78  1297               	bcf	23,5	;volatile
  1867  0D79                     l2005:	
  1868                           
  1869                           ;./pwm.h: 37:     CCP1Y = duty & 0x02;
  1870  0D79  1217               	bcf	23,4	;volatile
  1871                           
  1872                           ;./pwm.h: 38:     CCPR1L = duty >> 2;
  1873  0D7A  0862               	movf	pwmSetDuty1@duty+1,w
  1874  0D7B  00E4               	movwf	??_pwmSetDuty1+1
  1875  0D7C  0861               	movf	pwmSetDuty1@duty,w
  1876  0D7D  00E3               	movwf	??_pwmSetDuty1
  1877  0D7E  1003               	clrc
  1878  0D7F  0CE4               	rrf	??_pwmSetDuty1+1,f
  1879  0D80  0CE3               	rrf	??_pwmSetDuty1,f
  1880  0D81  1003               	clrc
  1881  0D82  0CE4               	rrf	??_pwmSetDuty1+1,f
  1882  0D83  0CE3               	rrf	??_pwmSetDuty1,f
  1883  0D84  0863               	movf	??_pwmSetDuty1,w
  1884  0D85  0095               	movwf	21	;volatile
  1885  0D86  0008               	return
  1886  0D87                     __end_of_pwmSetDuty1:	
  1887                           
  1888                           	psect	text6
  1889  0EE2                     __ptext6:	
  1890 ;; *************** function _setDuty *****************
  1891 ;; Defined at:
  1892 ;;		line 18 in file "./pwm.h"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  duty            2   63[BANK0 ] unsigned int 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;		None
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  2   63[BANK0 ] unsigned int 
  1899 ;; Registers used:
  1900 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1906 ;;      Params:         0       2       0       0       0
  1907 ;;      Locals:         0       0       0       0       0
  1908 ;;      Temps:          0       0       0       0       0
  1909 ;;      Totals:         0       2       0       0       0
  1910 ;;Total ram usage:        2 bytes
  1911 ;; Hardware stack levels used:    1
  1912 ;; Hardware stack levels required when called:    2
  1913 ;; This function calls:
  1914 ;;		___fldiv
  1915 ;;		___flmul
  1916 ;;		___fltol
  1917 ;;		___xxtofl
  1918 ;; This function is called by:
  1919 ;;		_pwmSetDuty1
  1920 ;;		_pwmSetDuty2
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           
  1925                           ;psect for function _setDuty
  1926  0EE2                     _setDuty:	
  1927                           
  1928                           ;./pwm.h: 19:     return ((float) duty / 1023)*(4000000 / (245 * 16));
  1929                           
  1930                           ;incstack = 0
  1931                           ; Regs used in _setDuty: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1932  0EE2  1283               	bcf	3,5	;RP0=0, select bank0
  1933  0EE3  1303               	bcf	3,6	;RP1=0, select bank0
  1934  0EE4  085F               	movf	setDuty@duty,w
  1935  0EE5  00F0               	movwf	___xxtofl@val
  1936  0EE6  0860               	movf	setDuty@duty+1,w
  1937  0EE7  00F1               	movwf	___xxtofl@val+1
  1938  0EE8  01F2               	clrf	___xxtofl@val+2
  1939  0EE9  01F3               	clrf	___xxtofl@val+3
  1940  0EEA  3000               	movlw	0
  1941  0EEB  120A  118A  201B  120A  158A  	fcall	___xxtofl
  1942  0EF0  0873               	movf	?___xxtofl+3,w
  1943  0EF1  1283               	bcf	3,5	;RP0=0, select bank0
  1944  0EF2  1303               	bcf	3,6	;RP1=0, select bank0
  1945  0EF3  00C1               	movwf	___fldiv@b+3
  1946  0EF4  0872               	movf	?___xxtofl+2,w
  1947  0EF5  00C0               	movwf	___fldiv@b+2
  1948  0EF6  0871               	movf	?___xxtofl+1,w
  1949  0EF7  00BF               	movwf	___fldiv@b+1
  1950  0EF8  0870               	movf	?___xxtofl,w
  1951  0EF9  00BE               	movwf	___fldiv@b
  1952  0EFA  3044               	movlw	68
  1953  0EFB  00BD               	movwf	___fldiv@a+3
  1954  0EFC  307F               	movlw	127
  1955  0EFD  00BC               	movwf	___fldiv@a+2
  1956  0EFE  30C0               	movlw	192
  1957  0EFF  00BB               	movwf	___fldiv@a+1
  1958  0F00  3000               	movlw	0
  1959  0F01  00BA               	movwf	___fldiv@a
  1960  0F02  120A  118A  2196  120A  158A  	fcall	___fldiv
  1961  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  1962  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  1963  0F09  083D               	movf	?___fldiv+3,w
  1964  0F0A  00A7               	movwf	___flmul@a+3
  1965  0F0B  083C               	movf	?___fldiv+2,w
  1966  0F0C  00A6               	movwf	___flmul@a+2
  1967  0F0D  083B               	movf	?___fldiv+1,w
  1968  0F0E  00A5               	movwf	___flmul@a+1
  1969  0F0F  083A               	movf	?___fldiv,w
  1970  0F10  00A4               	movwf	___flmul@a
  1971  0F11  3044               	movlw	68
  1972  0F12  00A3               	movwf	___flmul@b+3
  1973  0F13  307F               	movlw	127
  1974  0F14  00A2               	movwf	___flmul@b+2
  1975  0F15  3000               	movlw	0
  1976  0F16  00A1               	movwf	___flmul@b+1
  1977  0F17  3000               	movlw	0
  1978  0F18  00A0               	movwf	___flmul@b
  1979  0F19  120A  118A  24E0  120A  158A  	fcall	___flmul
  1980  0F1E  1283               	bcf	3,5	;RP0=0, select bank0
  1981  0F1F  1303               	bcf	3,6	;RP1=0, select bank0
  1982  0F20  0823               	movf	?___flmul+3,w
  1983  0F21  00D7               	movwf	___fltol@f1+3
  1984  0F22  0822               	movf	?___flmul+2,w
  1985  0F23  00D6               	movwf	___fltol@f1+2
  1986  0F24  0821               	movf	?___flmul+1,w
  1987  0F25  00D5               	movwf	___fltol@f1+1
  1988  0F26  0820               	movf	?___flmul,w
  1989  0F27  00D4               	movwf	___fltol@f1
  1990  0F28  120A  158A  2793   	fcall	___fltol
  1991  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  1992  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  1993  0F2D  0855               	movf	?___fltol+1,w
  1994  0F2E  00E0               	movwf	?_setDuty+1
  1995  0F2F  0854               	movf	?___fltol,w
  1996  0F30  00DF               	movwf	?_setDuty
  1997  0F31  0008               	return
  1998  0F32                     __end_of_setDuty:	
  1999                           
  2000                           	psect	text7
  2001  001B                     __ptext7:	
  2002 ;; *************** function ___xxtofl *****************
  2003 ;; Defined at:
  2004 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;  sign            1    wreg     unsigned char 
  2007 ;;  val             4    0[COMMON] long 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  sign            1    8[COMMON] unsigned char 
  2010 ;;  arg             4   10[COMMON] unsigned long 
  2011 ;;  exp             1    9[COMMON] unsigned char 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  4    0[COMMON] unsigned char 
  2014 ;; Registers used:
  2015 ;;		wreg, status,2, status,0
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2021 ;;      Params:         4       0       0       0       0
  2022 ;;      Locals:         6       0       0       0       0
  2023 ;;      Temps:          4       0       0       0       0
  2024 ;;      Totals:        14       0       0       0       0
  2025 ;;Total ram usage:       14 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; This function calls:
  2028 ;;		Nothing
  2029 ;; This function is called by:
  2030 ;;		_setDuty
  2031 ;;		_main
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           
  2036                           ;psect for function ___xxtofl
  2037  001B                     ___xxtofl:	
  2038                           
  2039                           ;incstack = 0
  2040                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2041                           ;___xxtofl@sign stored from wreg
  2042  001B  00F8               	movwf	___xxtofl@sign
  2043  001C  0878               	movf	___xxtofl@sign,w
  2044  001D  1D03               	btfss	3,2
  2045  001E  1FF3               	btfss	___xxtofl@val+3,7
  2046  001F  2830               	goto	l1863
  2047  0020  0970               	comf	___xxtofl@val,w
  2048  0021  00FA               	movwf	___xxtofl@arg
  2049  0022  0971               	comf	___xxtofl@val+1,w
  2050  0023  00FB               	movwf	___xxtofl@arg+1
  2051  0024  0972               	comf	___xxtofl@val+2,w
  2052  0025  00FC               	movwf	___xxtofl@arg+2
  2053  0026  0973               	comf	___xxtofl@val+3,w
  2054  0027  00FD               	movwf	___xxtofl@arg+3
  2055  0028  0AFA               	incf	___xxtofl@arg,f
  2056  0029  1903               	skipnz
  2057  002A  0AFB               	incf	___xxtofl@arg+1,f
  2058  002B  1903               	skipnz
  2059  002C  0AFC               	incf	___xxtofl@arg+2,f
  2060  002D  1903               	skipnz
  2061  002E  0AFD               	incf	___xxtofl@arg+3,f
  2062  002F  2838               	goto	l696
  2063  0030                     l1863:	
  2064  0030  0873               	movf	___xxtofl@val+3,w
  2065  0031  00FD               	movwf	___xxtofl@arg+3
  2066  0032  0872               	movf	___xxtofl@val+2,w
  2067  0033  00FC               	movwf	___xxtofl@arg+2
  2068  0034  0871               	movf	___xxtofl@val+1,w
  2069  0035  00FB               	movwf	___xxtofl@arg+1
  2070  0036  0870               	movf	___xxtofl@val,w
  2071  0037  00FA               	movwf	___xxtofl@arg
  2072  0038                     l696:	
  2073  0038  0873               	movf	___xxtofl@val+3,w
  2074  0039  0472               	iorwf	___xxtofl@val+2,w
  2075  003A  0471               	iorwf	___xxtofl@val+1,w
  2076  003B  0470               	iorwf	___xxtofl@val,w
  2077  003C  1D03               	skipz
  2078  003D  2847               	goto	l1869
  2079  003E  3000               	movlw	0
  2080  003F  00F3               	movwf	?___xxtofl+3
  2081  0040  3000               	movlw	0
  2082  0041  00F2               	movwf	?___xxtofl+2
  2083  0042  3000               	movlw	0
  2084  0043  00F1               	movwf	?___xxtofl+1
  2085  0044  3000               	movlw	0
  2086  0045  00F0               	movwf	?___xxtofl
  2087  0046  0008               	return
  2088  0047                     l1869:	
  2089  0047  3096               	movlw	150
  2090  0048  00F4               	movwf	??___xxtofl
  2091  0049  0874               	movf	??___xxtofl,w
  2092  004A  00F9               	movwf	___xxtofl@exp
  2093  004B                     l1873:	
  2094  004B  30FE               	movlw	254
  2095  004C  057D               	andwf	___xxtofl@arg+3,w
  2096  004D  1903               	btfsc	3,2
  2097  004E  2878               	goto	l702
  2098  004F  3001               	movlw	1
  2099  0050  00F4               	movwf	??___xxtofl
  2100  0051  0874               	movf	??___xxtofl,w
  2101  0052  07F9               	addwf	___xxtofl@exp,f
  2102  0053  3001               	movlw	1
  2103  0054                     u2255:	
  2104  0054  1003               	clrc
  2105  0055  0CFD               	rrf	___xxtofl@arg+3,f
  2106  0056  0CFC               	rrf	___xxtofl@arg+2,f
  2107  0057  0CFB               	rrf	___xxtofl@arg+1,f
  2108  0058  0CFA               	rrf	___xxtofl@arg,f
  2109  0059  3EFF               	addlw	-1
  2110  005A  1D03               	skipz
  2111  005B  2854               	goto	u2255
  2112  005C  284B               	goto	l1873
  2113  005D                     l1875:	
  2114  005D  3001               	movlw	1
  2115  005E  00F4               	movwf	??___xxtofl
  2116  005F  0874               	movf	??___xxtofl,w
  2117  0060  07F9               	addwf	___xxtofl@exp,f
  2118  0061  3001               	movlw	1
  2119  0062  07FA               	addwf	___xxtofl@arg,f
  2120  0063  3000               	movlw	0
  2121  0064  1803               	skipnc
  2122  0065  3001               	movlw	1
  2123  0066  07FB               	addwf	___xxtofl@arg+1,f
  2124  0067  3000               	movlw	0
  2125  0068  1803               	skipnc
  2126  0069  3001               	movlw	1
  2127  006A  07FC               	addwf	___xxtofl@arg+2,f
  2128  006B  3000               	movlw	0
  2129  006C  1803               	skipnc
  2130  006D  3001               	movlw	1
  2131  006E  07FD               	addwf	___xxtofl@arg+3,f
  2132  006F  3001               	movlw	1
  2133  0070                     u2275:	
  2134  0070  1003               	clrc
  2135  0071  0CFD               	rrf	___xxtofl@arg+3,f
  2136  0072  0CFC               	rrf	___xxtofl@arg+2,f
  2137  0073  0CFB               	rrf	___xxtofl@arg+1,f
  2138  0074  0CFA               	rrf	___xxtofl@arg,f
  2139  0075  3EFF               	addlw	-1
  2140  0076  1D03               	skipz
  2141  0077  2870               	goto	u2275
  2142  0078                     l702:	
  2143  0078  30FF               	movlw	255
  2144  0079  057D               	andwf	___xxtofl@arg+3,w
  2145  007A  1903               	btfsc	3,2
  2146  007B  288C               	goto	l1883
  2147  007C  285D               	goto	l1875
  2148  007D                     l1885:	
  2149  007D  3002               	movlw	2
  2150  007E  0279               	subwf	___xxtofl@exp,w
  2151  007F  1C03               	btfss	3,0
  2152  0080  288E               	goto	l709
  2153  0081  3001               	movlw	1
  2154  0082  02F9               	subwf	___xxtofl@exp,f
  2155  0083  3001               	movlw	1
  2156  0084  00F4               	movwf	??___xxtofl
  2157  0085                     u2295:	
  2158  0085  1003               	clrc
  2159  0086  0DFA               	rlf	___xxtofl@arg,f
  2160  0087  0DFB               	rlf	___xxtofl@arg+1,f
  2161  0088  0DFC               	rlf	___xxtofl@arg+2,f
  2162  0089  0DFD               	rlf	___xxtofl@arg+3,f
  2163  008A  0BF4               	decfsz	??___xxtofl,f
  2164  008B  2885               	goto	u2295
  2165  008C                     l1883:	
  2166  008C  1FFC               	btfss	___xxtofl@arg+2,7
  2167  008D  287D               	goto	l1885
  2168  008E                     l709:	
  2169  008E  1879               	btfsc	___xxtofl@exp,0
  2170  008F  2898               	goto	l710
  2171  0090  30FF               	movlw	255
  2172  0091  05FA               	andwf	___xxtofl@arg,f
  2173  0092  30FF               	movlw	255
  2174  0093  05FB               	andwf	___xxtofl@arg+1,f
  2175  0094  307F               	movlw	127
  2176  0095  05FC               	andwf	___xxtofl@arg+2,f
  2177  0096  30FF               	movlw	255
  2178  0097  05FD               	andwf	___xxtofl@arg+3,f
  2179  0098                     l710:	
  2180  0098  1003               	clrc
  2181  0099  0CF9               	rrf	___xxtofl@exp,f
  2182  009A  0879               	movf	___xxtofl@exp,w
  2183  009B  00F4               	movwf	??___xxtofl
  2184  009C  01F5               	clrf	??___xxtofl+1
  2185  009D  01F6               	clrf	??___xxtofl+2
  2186  009E  01F7               	clrf	??___xxtofl+3
  2187  009F  3018               	movlw	24
  2188  00A0                     u2335:	
  2189  00A0  1003               	clrc
  2190  00A1  0DF4               	rlf	??___xxtofl,f
  2191  00A2  0DF5               	rlf	??___xxtofl+1,f
  2192  00A3  0DF6               	rlf	??___xxtofl+2,f
  2193  00A4  0DF7               	rlf	??___xxtofl+3,f
  2194  00A5  3EFF               	addlw	-1
  2195  00A6  1D03               	skipz
  2196  00A7  28A0               	goto	u2335
  2197  00A8  0874               	movf	??___xxtofl,w
  2198  00A9  04FA               	iorwf	___xxtofl@arg,f
  2199  00AA  0875               	movf	??___xxtofl+1,w
  2200  00AB  04FB               	iorwf	___xxtofl@arg+1,f
  2201  00AC  0876               	movf	??___xxtofl+2,w
  2202  00AD  04FC               	iorwf	___xxtofl@arg+2,f
  2203  00AE  0877               	movf	??___xxtofl+3,w
  2204  00AF  04FD               	iorwf	___xxtofl@arg+3,f
  2205  00B0  0878               	movf	___xxtofl@sign,w
  2206  00B1  1D03               	btfss	3,2
  2207  00B2  1FF3               	btfss	___xxtofl@val+3,7
  2208  00B3  28B5               	goto	l1897
  2209  00B4  17FD               	bsf	___xxtofl@arg+3,7
  2210  00B5                     l1897:	
  2211  00B5  087D               	movf	___xxtofl@arg+3,w
  2212  00B6  00F3               	movwf	?___xxtofl+3
  2213  00B7  087C               	movf	___xxtofl@arg+2,w
  2214  00B8  00F2               	movwf	?___xxtofl+2
  2215  00B9  087B               	movf	___xxtofl@arg+1,w
  2216  00BA  00F1               	movwf	?___xxtofl+1
  2217  00BB  087A               	movf	___xxtofl@arg,w
  2218  00BC  00F0               	movwf	?___xxtofl
  2219  00BD  0008               	return
  2220  00BE                     __end_of___xxtofl:	
  2221                           
  2222                           	psect	text8
  2223  0F93                     __ptext8:	
  2224 ;; *************** function ___fltol *****************
  2225 ;; Defined at:
  2226 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;  f1              4   52[BANK0 ] unsigned char 
  2229 ;; Auto vars:     Size  Location     Type
  2230 ;;  exp1            1   62[BANK0 ] unsigned char 
  2231 ;;  sign1           1   61[BANK0 ] unsigned char 
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  4   52[BANK0 ] long 
  2234 ;; Registers used:
  2235 ;;		wreg, status,2, status,0
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2241 ;;      Params:         0       4       0       0       0
  2242 ;;      Locals:         0       2       0       0       0
  2243 ;;      Temps:          0       5       0       0       0
  2244 ;;      Totals:         0      11       0       0       0
  2245 ;;Total ram usage:       11 bytes
  2246 ;; Hardware stack levels used:    1
  2247 ;; This function calls:
  2248 ;;		Nothing
  2249 ;; This function is called by:
  2250 ;;		_setDuty
  2251 ;;		_main
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           
  2256                           ;psect for function ___fltol
  2257  0F93                     ___fltol:	
  2258                           
  2259                           ;incstack = 0
  2260                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2261  0F93  1003               	clrc
  2262  0F94  1283               	bcf	3,5	;RP0=0, select bank0
  2263  0F95  1303               	bcf	3,6	;RP1=0, select bank0
  2264  0F96  0D56               	rlf	___fltol@f1+2,w
  2265  0F97  0D57               	rlf	___fltol@f1+3,w
  2266  0F98  00D8               	movwf	??___fltol
  2267  0F99  0858               	movf	??___fltol,w
  2268  0F9A  00DE               	movwf	___fltol@exp1
  2269  0F9B  085E               	movf	___fltol@exp1,w
  2270  0F9C  1D03               	btfss	3,2
  2271  0F9D  2FA7               	goto	l1545
  2272  0F9E                     l1541:	
  2273  0F9E  3000               	movlw	0
  2274  0F9F  00D7               	movwf	?___fltol+3
  2275  0FA0  3000               	movlw	0
  2276  0FA1  00D6               	movwf	?___fltol+2
  2277  0FA2  3000               	movlw	0
  2278  0FA3  00D5               	movwf	?___fltol+1
  2279  0FA4  3000               	movlw	0
  2280  0FA5  00D4               	movwf	?___fltol
  2281  0FA6  0008               	return
  2282  0FA7                     l1545:	
  2283  0FA7  0854               	movf	___fltol@f1,w
  2284  0FA8  00D8               	movwf	??___fltol
  2285  0FA9  0855               	movf	___fltol@f1+1,w
  2286  0FAA  00D9               	movwf	??___fltol+1
  2287  0FAB  0856               	movf	___fltol@f1+2,w
  2288  0FAC  00DA               	movwf	??___fltol+2
  2289  0FAD  0857               	movf	___fltol@f1+3,w
  2290  0FAE  00DB               	movwf	??___fltol+3
  2291  0FAF  301F               	movlw	31
  2292  0FB0                     u1475:	
  2293  0FB0  1003               	clrc
  2294  0FB1  0CDB               	rrf	??___fltol+3,f
  2295  0FB2  0CDA               	rrf	??___fltol+2,f
  2296  0FB3  0CD9               	rrf	??___fltol+1,f
  2297  0FB4  0CD8               	rrf	??___fltol,f
  2298  0FB5  3EFF               	addlw	-1
  2299  0FB6  1D03               	skipz
  2300  0FB7  2FB0               	goto	u1475
  2301  0FB8  0858               	movf	??___fltol,w
  2302  0FB9  00DC               	movwf	??___fltol+4
  2303  0FBA  085C               	movf	??___fltol+4,w
  2304  0FBB  00DD               	movwf	___fltol@sign1
  2305  0FBC  17D6               	bsf	___fltol@f1+2,7
  2306  0FBD  30FF               	movlw	255
  2307  0FBE  05D4               	andwf	___fltol@f1,f
  2308  0FBF  30FF               	movlw	255
  2309  0FC0  05D5               	andwf	___fltol@f1+1,f
  2310  0FC1  30FF               	movlw	255
  2311  0FC2  05D6               	andwf	___fltol@f1+2,f
  2312  0FC3  3000               	movlw	0
  2313  0FC4  05D7               	andwf	___fltol@f1+3,f
  2314  0FC5  3096               	movlw	150
  2315  0FC6  02DE               	subwf	___fltol@exp1,f
  2316  0FC7  1FDE               	btfss	___fltol@exp1,7
  2317  0FC8  2FDE               	goto	l1563
  2318  0FC9  085E               	movf	___fltol@exp1,w
  2319  0FCA  3A80               	xorlw	128
  2320  0FCB  3E97               	addlw	151
  2321  0FCC  1C03               	btfss	3,0
  2322  0FCD  2F9E               	goto	l1541
  2323  0FCE                     l1561:	
  2324  0FCE  3001               	movlw	1
  2325  0FCF                     u1505:	
  2326  0FCF  1003               	clrc
  2327  0FD0  0CD7               	rrf	___fltol@f1+3,f
  2328  0FD1  0CD6               	rrf	___fltol@f1+2,f
  2329  0FD2  0CD5               	rrf	___fltol@f1+1,f
  2330  0FD3  0CD4               	rrf	___fltol@f1,f
  2331  0FD4  3EFF               	addlw	-1
  2332  0FD5  1D03               	skipz
  2333  0FD6  2FCF               	goto	u1505
  2334  0FD7  3001               	movlw	1
  2335  0FD8  00D8               	movwf	??___fltol
  2336  0FD9  0858               	movf	??___fltol,w
  2337  0FDA  07DE               	addwf	___fltol@exp1,f
  2338  0FDB  1903               	btfsc	3,2
  2339  0FDC  2FF1               	goto	l1571
  2340  0FDD  2FCE               	goto	l1561
  2341  0FDE                     l1563:	
  2342  0FDE  3020               	movlw	32
  2343  0FDF  025E               	subwf	___fltol@exp1,w
  2344  0FE0  1803               	btfsc	3,0
  2345  0FE1  2F9E               	goto	l1541
  2346  0FE2                     l462:	
  2347  0FE2  085E               	movf	___fltol@exp1,w
  2348  0FE3  1903               	btfsc	3,2
  2349  0FE4  2FF1               	goto	l1571
  2350  0FE5  3001               	movlw	1
  2351  0FE6  00D8               	movwf	??___fltol
  2352  0FE7                     u1535:	
  2353  0FE7  1003               	clrc
  2354  0FE8  0DD4               	rlf	___fltol@f1,f
  2355  0FE9  0DD5               	rlf	___fltol@f1+1,f
  2356  0FEA  0DD6               	rlf	___fltol@f1+2,f
  2357  0FEB  0DD7               	rlf	___fltol@f1+3,f
  2358  0FEC  0BD8               	decfsz	??___fltol,f
  2359  0FED  2FE7               	goto	u1535
  2360  0FEE  3001               	movlw	1
  2361  0FEF  02DE               	subwf	___fltol@exp1,f
  2362  0FF0  2FE2               	goto	l462
  2363  0FF1                     l1571:	
  2364  0FF1  085D               	movf	___fltol@sign1,w
  2365  0FF2  1903               	btfsc	3,2
  2366  0FF3  0008               	return
  2367  0FF4  09D4               	comf	___fltol@f1,f
  2368  0FF5  09D5               	comf	___fltol@f1+1,f
  2369  0FF6  09D6               	comf	___fltol@f1+2,f
  2370  0FF7  09D7               	comf	___fltol@f1+3,f
  2371  0FF8  0AD4               	incf	___fltol@f1,f
  2372  0FF9  1903               	skipnz
  2373  0FFA  0AD5               	incf	___fltol@f1+1,f
  2374  0FFB  1903               	skipnz
  2375  0FFC  0AD6               	incf	___fltol@f1+2,f
  2376  0FFD  1903               	skipnz
  2377  0FFE  0AD7               	incf	___fltol@f1+3,f
  2378  0FFF  0008               	return
  2379  1000                     __end_of___fltol:	
  2380                           
  2381                           	psect	text9
  2382  04E0                     __ptext9:	
  2383 ;; *************** function ___flmul *****************
  2384 ;; Defined at:
  2385 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;  b               4    0[BANK0 ] long 
  2388 ;;  a               4    4[BANK0 ] long 
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  prod            4   20[BANK0 ] struct .
  2391 ;;  grs             4   14[BANK0 ] unsigned long 
  2392 ;;  temp            2   24[BANK0 ] struct .
  2393 ;;  bexp            1   19[BANK0 ] unsigned char 
  2394 ;;  aexp            1   18[BANK0 ] unsigned char 
  2395 ;;  sign            1   13[BANK0 ] unsigned char 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  4    0[BANK0 ] unsigned char 
  2398 ;; Registers used:
  2399 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2405 ;;      Params:         0       8       0       0       0
  2406 ;;      Locals:         0      13       0       0       0
  2407 ;;      Temps:          0       5       0       0       0
  2408 ;;      Totals:         0      26       0       0       0
  2409 ;;Total ram usage:       26 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; Hardware stack levels required when called:    1
  2412 ;; This function calls:
  2413 ;;		__Umul8_16
  2414 ;; This function is called by:
  2415 ;;		_setDuty
  2416 ;;		_main
  2417 ;; This function uses a non-reentrant model
  2418 ;;
  2419                           
  2420                           
  2421                           ;psect for function ___flmul
  2422  04E0                     ___flmul:	
  2423                           
  2424                           ;incstack = 0
  2425                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2426  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  2427  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  2428  04E2  0823               	movf	___flmul@b+3,w
  2429  04E3  3980               	andlw	128
  2430  04E4  00A8               	movwf	??___flmul
  2431  04E5  0828               	movf	??___flmul,w
  2432  04E6  00AD               	movwf	___flmul@sign
  2433  04E7  0823               	movf	___flmul@b+3,w
  2434  04E8  00A8               	movwf	??___flmul
  2435  04E9  0728               	addwf	??___flmul,w
  2436  04EA  00A9               	movwf	??___flmul+1
  2437  04EB  0829               	movf	??___flmul+1,w
  2438  04EC  00B3               	movwf	___flmul@bexp
  2439  04ED  1BA2               	btfsc	___flmul@b+2,7
  2440  04EE  1433               	bsf	___flmul@bexp,0
  2441  04EF  0833               	movf	___flmul@bexp,w
  2442  04F0  1903               	btfsc	3,2
  2443  04F1  2CFF               	goto	l1733
  2444  04F2  0A33               	incf	___flmul@bexp,w
  2445  04F3  1D03               	btfss	3,2
  2446  04F4  2CFD               	goto	l1731
  2447  04F5  3000               	movlw	0
  2448  04F6  00A3               	movwf	___flmul@b+3
  2449  04F7  3000               	movlw	0
  2450  04F8  00A2               	movwf	___flmul@b+2
  2451  04F9  3000               	movlw	0
  2452  04FA  00A1               	movwf	___flmul@b+1
  2453  04FB  3000               	movlw	0
  2454  04FC  00A0               	movwf	___flmul@b
  2455  04FD                     l1731:	
  2456  04FD  17A2               	bsf	___flmul@b+2,7
  2457  04FE  2D07               	goto	l1735
  2458  04FF                     l1733:	
  2459  04FF  3000               	movlw	0
  2460  0500  00A3               	movwf	___flmul@b+3
  2461  0501  3000               	movlw	0
  2462  0502  00A2               	movwf	___flmul@b+2
  2463  0503  3000               	movlw	0
  2464  0504  00A1               	movwf	___flmul@b+1
  2465  0505  3000               	movlw	0
  2466  0506  00A0               	movwf	___flmul@b
  2467  0507                     l1735:	
  2468  0507  0827               	movf	___flmul@a+3,w
  2469  0508  3980               	andlw	128
  2470  0509  00A8               	movwf	??___flmul
  2471  050A  0828               	movf	??___flmul,w
  2472  050B  06AD               	xorwf	___flmul@sign,f
  2473  050C  0827               	movf	___flmul@a+3,w
  2474  050D  00A8               	movwf	??___flmul
  2475  050E  0728               	addwf	??___flmul,w
  2476  050F  00A9               	movwf	??___flmul+1
  2477  0510  0829               	movf	??___flmul+1,w
  2478  0511  00B2               	movwf	___flmul@aexp
  2479  0512  1BA6               	btfsc	___flmul@a+2,7
  2480  0513  1432               	bsf	___flmul@aexp,0
  2481  0514  0832               	movf	___flmul@aexp,w
  2482  0515  1903               	btfsc	3,2
  2483  0516  2D24               	goto	l1751
  2484  0517  0A32               	incf	___flmul@aexp,w
  2485  0518  1D03               	btfss	3,2
  2486  0519  2D22               	goto	l1749
  2487  051A  3000               	movlw	0
  2488  051B  00A7               	movwf	___flmul@a+3
  2489  051C  3000               	movlw	0
  2490  051D  00A6               	movwf	___flmul@a+2
  2491  051E  3000               	movlw	0
  2492  051F  00A5               	movwf	___flmul@a+1
  2493  0520  3000               	movlw	0
  2494  0521  00A4               	movwf	___flmul@a
  2495  0522                     l1749:	
  2496  0522  17A6               	bsf	___flmul@a+2,7
  2497  0523  2D2C               	goto	l1753
  2498  0524                     l1751:	
  2499  0524  3000               	movlw	0
  2500  0525  00A7               	movwf	___flmul@a+3
  2501  0526  3000               	movlw	0
  2502  0527  00A6               	movwf	___flmul@a+2
  2503  0528  3000               	movlw	0
  2504  0529  00A5               	movwf	___flmul@a+1
  2505  052A  3000               	movlw	0
  2506  052B  00A4               	movwf	___flmul@a
  2507  052C                     l1753:	
  2508  052C  0832               	movf	___flmul@aexp,w
  2509  052D  1D03               	btfss	3,2
  2510  052E  0833               	movf	___flmul@bexp,w
  2511  052F  1D03               	btfss	3,2
  2512  0530  2D3A               	goto	l1761
  2513  0531  3000               	movlw	0
  2514  0532  00A3               	movwf	?___flmul+3
  2515  0533  3000               	movlw	0
  2516  0534  00A2               	movwf	?___flmul+2
  2517  0535  3000               	movlw	0
  2518  0536  00A1               	movwf	?___flmul+1
  2519  0537  3000               	movlw	0
  2520  0538  00A0               	movwf	?___flmul
  2521  0539  0008               	return
  2522  053A                     l1761:	
  2523  053A  0820               	movf	___flmul@b,w
  2524  053B  00A8               	movwf	??___flmul
  2525  053C  0828               	movf	??___flmul,w
  2526  053D  00F0               	movwf	__Umul8_16@multiplicand
  2527  053E  0826               	movf	___flmul@a+2,w
  2528  053F  120A  158A  2535  120A  118A  	fcall	__Umul8_16
  2529  0544  0871               	movf	?__Umul8_16+1,w
  2530  0545  1283               	bcf	3,5	;RP0=0, select bank0
  2531  0546  1303               	bcf	3,6	;RP1=0, select bank0
  2532  0547  00B9               	movwf	___flmul@temp+1
  2533  0548  0870               	movf	?__Umul8_16,w
  2534  0549  00B8               	movwf	___flmul@temp
  2535  054A  0838               	movf	___flmul@temp,w
  2536  054B  00A8               	movwf	??___flmul
  2537  054C  01A9               	clrf	??___flmul+1
  2538  054D  01AA               	clrf	??___flmul+2
  2539  054E  01AB               	clrf	??___flmul+3
  2540  054F  082B               	movf	??___flmul+3,w
  2541  0550  00B1               	movwf	___flmul@grs+3
  2542  0551  082A               	movf	??___flmul+2,w
  2543  0552  00B0               	movwf	___flmul@grs+2
  2544  0553  0829               	movf	??___flmul+1,w
  2545  0554  00AF               	movwf	___flmul@grs+1
  2546  0555  0828               	movf	??___flmul,w
  2547  0556  00AE               	movwf	___flmul@grs
  2548  0557  0839               	movf	___flmul@temp+1,w
  2549  0558  00A8               	movwf	??___flmul
  2550  0559  01A9               	clrf	??___flmul+1
  2551  055A  01AA               	clrf	??___flmul+2
  2552  055B  01AB               	clrf	??___flmul+3
  2553  055C  082B               	movf	??___flmul+3,w
  2554  055D  00B7               	movwf	___flmul@prod+3
  2555  055E  082A               	movf	??___flmul+2,w
  2556  055F  00B6               	movwf	___flmul@prod+2
  2557  0560  0829               	movf	??___flmul+1,w
  2558  0561  00B5               	movwf	___flmul@prod+1
  2559  0562  0828               	movf	??___flmul,w
  2560  0563  00B4               	movwf	___flmul@prod
  2561  0564  0821               	movf	___flmul@b+1,w
  2562  0565  00A8               	movwf	??___flmul
  2563  0566  0828               	movf	??___flmul,w
  2564  0567  00F0               	movwf	__Umul8_16@multiplicand
  2565  0568  0825               	movf	___flmul@a+1,w
  2566  0569  120A  158A  2535  120A  118A  	fcall	__Umul8_16
  2567  056E  0871               	movf	?__Umul8_16+1,w
  2568  056F  1283               	bcf	3,5	;RP0=0, select bank0
  2569  0570  1303               	bcf	3,6	;RP1=0, select bank0
  2570  0571  00B9               	movwf	___flmul@temp+1
  2571  0572  0870               	movf	?__Umul8_16,w
  2572  0573  00B8               	movwf	___flmul@temp
  2573  0574  0838               	movf	___flmul@temp,w
  2574  0575  00A8               	movwf	??___flmul
  2575  0576  01A9               	clrf	??___flmul+1
  2576  0577  01AA               	clrf	??___flmul+2
  2577  0578  01AB               	clrf	??___flmul+3
  2578  0579  0828               	movf	??___flmul,w
  2579  057A  07AE               	addwf	___flmul@grs,f
  2580  057B  0829               	movf	??___flmul+1,w
  2581  057C  1103               	clrz
  2582  057D  1803               	skipnc
  2583  057E  3E01               	addlw	1
  2584  057F  1D03               	btfss	3,2
  2585  0580  07AF               	addwf	___flmul@grs+1,f
  2586  0581  082A               	movf	??___flmul+2,w
  2587  0582  1103               	clrz
  2588  0583  1803               	skipnc
  2589  0584  3E01               	addlw	1
  2590  0585  1D03               	btfss	3,2
  2591  0586  07B0               	addwf	___flmul@grs+2,f
  2592  0587  082B               	movf	??___flmul+3,w
  2593  0588  1103               	clrz
  2594  0589  1803               	skipnc
  2595  058A  3E01               	addlw	1
  2596  058B  1D03               	btfss	3,2
  2597  058C  07B1               	addwf	___flmul@grs+3,f
  2598  058D  0839               	movf	___flmul@temp+1,w
  2599  058E  00A8               	movwf	??___flmul
  2600  058F  01A9               	clrf	??___flmul+1
  2601  0590  01AA               	clrf	??___flmul+2
  2602  0591  01AB               	clrf	??___flmul+3
  2603  0592  0828               	movf	??___flmul,w
  2604  0593  07B4               	addwf	___flmul@prod,f
  2605  0594  0829               	movf	??___flmul+1,w
  2606  0595  1103               	clrz
  2607  0596  1803               	skipnc
  2608  0597  3E01               	addlw	1
  2609  0598  1D03               	btfss	3,2
  2610  0599  07B5               	addwf	___flmul@prod+1,f
  2611  059A  082A               	movf	??___flmul+2,w
  2612  059B  1103               	clrz
  2613  059C  1803               	skipnc
  2614  059D  3E01               	addlw	1
  2615  059E  1D03               	btfss	3,2
  2616  059F  07B6               	addwf	___flmul@prod+2,f
  2617  05A0  082B               	movf	??___flmul+3,w
  2618  05A1  1103               	clrz
  2619  05A2  1803               	skipnc
  2620  05A3  3E01               	addlw	1
  2621  05A4  1D03               	btfss	3,2
  2622  05A5  07B7               	addwf	___flmul@prod+3,f
  2623  05A6  0822               	movf	___flmul@b+2,w
  2624  05A7  00A8               	movwf	??___flmul
  2625  05A8  0828               	movf	??___flmul,w
  2626  05A9  00F0               	movwf	__Umul8_16@multiplicand
  2627  05AA  0824               	movf	___flmul@a,w
  2628  05AB  120A  158A  2535  120A  118A  	fcall	__Umul8_16
  2629  05B0  0871               	movf	?__Umul8_16+1,w
  2630  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2631  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2632  05B3  00B9               	movwf	___flmul@temp+1
  2633  05B4  0870               	movf	?__Umul8_16,w
  2634  05B5  00B8               	movwf	___flmul@temp
  2635  05B6  0838               	movf	___flmul@temp,w
  2636  05B7  00A8               	movwf	??___flmul
  2637  05B8  01A9               	clrf	??___flmul+1
  2638  05B9  01AA               	clrf	??___flmul+2
  2639  05BA  01AB               	clrf	??___flmul+3
  2640  05BB  0828               	movf	??___flmul,w
  2641  05BC  07AE               	addwf	___flmul@grs,f
  2642  05BD  0829               	movf	??___flmul+1,w
  2643  05BE  1103               	clrz
  2644  05BF  1803               	skipnc
  2645  05C0  3E01               	addlw	1
  2646  05C1  1D03               	btfss	3,2
  2647  05C2  07AF               	addwf	___flmul@grs+1,f
  2648  05C3  082A               	movf	??___flmul+2,w
  2649  05C4  1103               	clrz
  2650  05C5  1803               	skipnc
  2651  05C6  3E01               	addlw	1
  2652  05C7  1D03               	btfss	3,2
  2653  05C8  07B0               	addwf	___flmul@grs+2,f
  2654  05C9  082B               	movf	??___flmul+3,w
  2655  05CA  1103               	clrz
  2656  05CB  1803               	skipnc
  2657  05CC  3E01               	addlw	1
  2658  05CD  1D03               	btfss	3,2
  2659  05CE  07B1               	addwf	___flmul@grs+3,f
  2660  05CF  0839               	movf	___flmul@temp+1,w
  2661  05D0  00A8               	movwf	??___flmul
  2662  05D1  01A9               	clrf	??___flmul+1
  2663  05D2  01AA               	clrf	??___flmul+2
  2664  05D3  01AB               	clrf	??___flmul+3
  2665  05D4  0828               	movf	??___flmul,w
  2666  05D5  07B4               	addwf	___flmul@prod,f
  2667  05D6  0829               	movf	??___flmul+1,w
  2668  05D7  1103               	clrz
  2669  05D8  1803               	skipnc
  2670  05D9  3E01               	addlw	1
  2671  05DA  1D03               	btfss	3,2
  2672  05DB  07B5               	addwf	___flmul@prod+1,f
  2673  05DC  082A               	movf	??___flmul+2,w
  2674  05DD  1103               	clrz
  2675  05DE  1803               	skipnc
  2676  05DF  3E01               	addlw	1
  2677  05E0  1D03               	btfss	3,2
  2678  05E1  07B6               	addwf	___flmul@prod+2,f
  2679  05E2  082B               	movf	??___flmul+3,w
  2680  05E3  1103               	clrz
  2681  05E4  1803               	skipnc
  2682  05E5  3E01               	addlw	1
  2683  05E6  1D03               	btfss	3,2
  2684  05E7  07B7               	addwf	___flmul@prod+3,f
  2685  05E8  3008               	movlw	8
  2686  05E9  00A8               	movwf	??___flmul
  2687  05EA                     u1975:	
  2688  05EA  1003               	clrc
  2689  05EB  0DAE               	rlf	___flmul@grs,f
  2690  05EC  0DAF               	rlf	___flmul@grs+1,f
  2691  05ED  0DB0               	rlf	___flmul@grs+2,f
  2692  05EE  0DB1               	rlf	___flmul@grs+3,f
  2693  05EF  0BA8               	decfsz	??___flmul,f
  2694  05F0  2DEA               	goto	u1975
  2695  05F1  0821               	movf	___flmul@b+1,w
  2696  05F2  00A8               	movwf	??___flmul
  2697  05F3  0828               	movf	??___flmul,w
  2698  05F4  00F0               	movwf	__Umul8_16@multiplicand
  2699  05F5  0824               	movf	___flmul@a,w
  2700  05F6  120A  158A  2535  120A  118A  	fcall	__Umul8_16
  2701  05FB  0871               	movf	?__Umul8_16+1,w
  2702  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  2703  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  2704  05FE  00B9               	movwf	___flmul@temp+1
  2705  05FF  0870               	movf	?__Umul8_16,w
  2706  0600  00B8               	movwf	___flmul@temp
  2707  0601  0838               	movf	___flmul@temp,w
  2708  0602  00A8               	movwf	??___flmul
  2709  0603  0839               	movf	___flmul@temp+1,w
  2710  0604  00A9               	movwf	??___flmul+1
  2711  0605  01AA               	clrf	??___flmul+2
  2712  0606  01AB               	clrf	??___flmul+3
  2713  0607  0828               	movf	??___flmul,w
  2714  0608  07AE               	addwf	___flmul@grs,f
  2715  0609  0829               	movf	??___flmul+1,w
  2716  060A  1103               	clrz
  2717  060B  1803               	skipnc
  2718  060C  3E01               	addlw	1
  2719  060D  1D03               	btfss	3,2
  2720  060E  07AF               	addwf	___flmul@grs+1,f
  2721  060F  082A               	movf	??___flmul+2,w
  2722  0610  1103               	clrz
  2723  0611  1803               	skipnc
  2724  0612  3E01               	addlw	1
  2725  0613  1D03               	btfss	3,2
  2726  0614  07B0               	addwf	___flmul@grs+2,f
  2727  0615  082B               	movf	??___flmul+3,w
  2728  0616  1103               	clrz
  2729  0617  1803               	skipnc
  2730  0618  3E01               	addlw	1
  2731  0619  1D03               	btfss	3,2
  2732  061A  07B1               	addwf	___flmul@grs+3,f
  2733  061B  0820               	movf	___flmul@b,w
  2734  061C  00A8               	movwf	??___flmul
  2735  061D  0828               	movf	??___flmul,w
  2736  061E  00F0               	movwf	__Umul8_16@multiplicand
  2737  061F  0825               	movf	___flmul@a+1,w
  2738  0620  120A  158A  2535  120A  118A  	fcall	__Umul8_16
  2739  0625  0871               	movf	?__Umul8_16+1,w
  2740  0626  1283               	bcf	3,5	;RP0=0, select bank0
  2741  0627  1303               	bcf	3,6	;RP1=0, select bank0
  2742  0628  00B9               	movwf	___flmul@temp+1
  2743  0629  0870               	movf	?__Umul8_16,w
  2744  062A  00B8               	movwf	___flmul@temp
  2745  062B  0838               	movf	___flmul@temp,w
  2746  062C  00A8               	movwf	??___flmul
  2747  062D  0839               	movf	___flmul@temp+1,w
  2748  062E  00A9               	movwf	??___flmul+1
  2749  062F  01AA               	clrf	??___flmul+2
  2750  0630  01AB               	clrf	??___flmul+3
  2751  0631  0828               	movf	??___flmul,w
  2752  0632  07AE               	addwf	___flmul@grs,f
  2753  0633  0829               	movf	??___flmul+1,w
  2754  0634  1103               	clrz
  2755  0635  1803               	skipnc
  2756  0636  3E01               	addlw	1
  2757  0637  1D03               	btfss	3,2
  2758  0638  07AF               	addwf	___flmul@grs+1,f
  2759  0639  082A               	movf	??___flmul+2,w
  2760  063A  1103               	clrz
  2761  063B  1803               	skipnc
  2762  063C  3E01               	addlw	1
  2763  063D  1D03               	btfss	3,2
  2764  063E  07B0               	addwf	___flmul@grs+2,f
  2765  063F  082B               	movf	??___flmul+3,w
  2766  0640  1103               	clrz
  2767  0641  1803               	skipnc
  2768  0642  3E01               	addlw	1
  2769  0643  1D03               	btfss	3,2
  2770  0644  07B1               	addwf	___flmul@grs+3,f
  2771  0645  3008               	movlw	8
  2772  0646  00A8               	movwf	??___flmul
  2773  0647                     u2005:	
  2774  0647  1003               	clrc
  2775  0648  0DAE               	rlf	___flmul@grs,f
  2776  0649  0DAF               	rlf	___flmul@grs+1,f
  2777  064A  0DB0               	rlf	___flmul@grs+2,f
  2778  064B  0DB1               	rlf	___flmul@grs+3,f
  2779  064C  0BA8               	decfsz	??___flmul,f
  2780  064D  2E47               	goto	u2005
  2781  064E  0820               	movf	___flmul@b,w
  2782  064F  00A8               	movwf	??___flmul
  2783  0650  0828               	movf	??___flmul,w
  2784  0651  00F0               	movwf	__Umul8_16@multiplicand
  2785  0652  0824               	movf	___flmul@a,w
  2786  0653  120A  158A  2535  120A  118A  	fcall	__Umul8_16
  2787  0658  0871               	movf	?__Umul8_16+1,w
  2788  0659  1283               	bcf	3,5	;RP0=0, select bank0
  2789  065A  1303               	bcf	3,6	;RP1=0, select bank0
  2790  065B  00B9               	movwf	___flmul@temp+1
  2791  065C  0870               	movf	?__Umul8_16,w
  2792  065D  00B8               	movwf	___flmul@temp
  2793  065E  0838               	movf	___flmul@temp,w
  2794  065F  00A8               	movwf	??___flmul
  2795  0660  0839               	movf	___flmul@temp+1,w
  2796  0661  00A9               	movwf	??___flmul+1
  2797  0662  01AA               	clrf	??___flmul+2
  2798  0663  01AB               	clrf	??___flmul+3
  2799  0664  0828               	movf	??___flmul,w
  2800  0665  07AE               	addwf	___flmul@grs,f
  2801  0666  0829               	movf	??___flmul+1,w
  2802  0667  1103               	clrz
  2803  0668  1803               	skipnc
  2804  0669  3E01               	addlw	1
  2805  066A  1D03               	btfss	3,2
  2806  066B  07AF               	addwf	___flmul@grs+1,f
  2807  066C  082A               	movf	??___flmul+2,w
  2808  066D  1103               	clrz
  2809  066E  1803               	skipnc
  2810  066F  3E01               	addlw	1
  2811  0670  1D03               	btfss	3,2
  2812  0671  07B0               	addwf	___flmul@grs+2,f
  2813  0672  082B               	movf	??___flmul+3,w
  2814  0673  1103               	clrz
  2815  0674  1803               	skipnc
  2816  0675  3E01               	addlw	1
  2817  0676  1D03               	btfss	3,2
  2818  0677  07B1               	addwf	___flmul@grs+3,f
  2819  0678  0821               	movf	___flmul@b+1,w
  2820  0679  00A8               	movwf	??___flmul
  2821  067A  0828               	movf	??___flmul,w
  2822  067B  00F0               	movwf	__Umul8_16@multiplicand
  2823  067C  0826               	movf	___flmul@a+2,w
  2824  067D  120A  158A  2535  120A  118A  	fcall	__Umul8_16
  2825  0682  0871               	movf	?__Umul8_16+1,w
  2826  0683  1283               	bcf	3,5	;RP0=0, select bank0
  2827  0684  1303               	bcf	3,6	;RP1=0, select bank0
  2828  0685  00B9               	movwf	___flmul@temp+1
  2829  0686  0870               	movf	?__Umul8_16,w
  2830  0687  00B8               	movwf	___flmul@temp
  2831  0688  0838               	movf	___flmul@temp,w
  2832  0689  00A8               	movwf	??___flmul
  2833  068A  0839               	movf	___flmul@temp+1,w
  2834  068B  00A9               	movwf	??___flmul+1
  2835  068C  01AA               	clrf	??___flmul+2
  2836  068D  01AB               	clrf	??___flmul+3
  2837  068E  0828               	movf	??___flmul,w
  2838  068F  07B4               	addwf	___flmul@prod,f
  2839  0690  0829               	movf	??___flmul+1,w
  2840  0691  1103               	clrz
  2841  0692  1803               	skipnc
  2842  0693  3E01               	addlw	1
  2843  0694  1D03               	btfss	3,2
  2844  0695  07B5               	addwf	___flmul@prod+1,f
  2845  0696  082A               	movf	??___flmul+2,w
  2846  0697  1103               	clrz
  2847  0698  1803               	skipnc
  2848  0699  3E01               	addlw	1
  2849  069A  1D03               	btfss	3,2
  2850  069B  07B6               	addwf	___flmul@prod+2,f
  2851  069C  082B               	movf	??___flmul+3,w
  2852  069D  1103               	clrz
  2853  069E  1803               	skipnc
  2854  069F  3E01               	addlw	1
  2855  06A0  1D03               	btfss	3,2
  2856  06A1  07B7               	addwf	___flmul@prod+3,f
  2857  06A2  0822               	movf	___flmul@b+2,w
  2858  06A3  00A8               	movwf	??___flmul
  2859  06A4  0828               	movf	??___flmul,w
  2860  06A5  00F0               	movwf	__Umul8_16@multiplicand
  2861  06A6  0825               	movf	___flmul@a+1,w
  2862  06A7  120A  158A  2535  120A  118A  	fcall	__Umul8_16
  2863  06AC  0871               	movf	?__Umul8_16+1,w
  2864  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  2865  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  2866  06AF  00B9               	movwf	___flmul@temp+1
  2867  06B0  0870               	movf	?__Umul8_16,w
  2868  06B1  00B8               	movwf	___flmul@temp
  2869  06B2  0838               	movf	___flmul@temp,w
  2870  06B3  00A8               	movwf	??___flmul
  2871  06B4  0839               	movf	___flmul@temp+1,w
  2872  06B5  00A9               	movwf	??___flmul+1
  2873  06B6  01AA               	clrf	??___flmul+2
  2874  06B7  01AB               	clrf	??___flmul+3
  2875  06B8  0828               	movf	??___flmul,w
  2876  06B9  07B4               	addwf	___flmul@prod,f
  2877  06BA  0829               	movf	??___flmul+1,w
  2878  06BB  1103               	clrz
  2879  06BC  1803               	skipnc
  2880  06BD  3E01               	addlw	1
  2881  06BE  1D03               	btfss	3,2
  2882  06BF  07B5               	addwf	___flmul@prod+1,f
  2883  06C0  082A               	movf	??___flmul+2,w
  2884  06C1  1103               	clrz
  2885  06C2  1803               	skipnc
  2886  06C3  3E01               	addlw	1
  2887  06C4  1D03               	btfss	3,2
  2888  06C5  07B6               	addwf	___flmul@prod+2,f
  2889  06C6  082B               	movf	??___flmul+3,w
  2890  06C7  1103               	clrz
  2891  06C8  1803               	skipnc
  2892  06C9  3E01               	addlw	1
  2893  06CA  1D03               	btfss	3,2
  2894  06CB  07B7               	addwf	___flmul@prod+3,f
  2895  06CC  0822               	movf	___flmul@b+2,w
  2896  06CD  00A8               	movwf	??___flmul
  2897  06CE  0828               	movf	??___flmul,w
  2898  06CF  00F0               	movwf	__Umul8_16@multiplicand
  2899  06D0  0826               	movf	___flmul@a+2,w
  2900  06D1  120A  158A  2535  120A  118A  	fcall	__Umul8_16
  2901  06D6  0871               	movf	?__Umul8_16+1,w
  2902  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  2903  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  2904  06D9  00B9               	movwf	___flmul@temp+1
  2905  06DA  0870               	movf	?__Umul8_16,w
  2906  06DB  00B8               	movwf	___flmul@temp
  2907  06DC  0838               	movf	___flmul@temp,w
  2908  06DD  00A8               	movwf	??___flmul
  2909  06DE  0839               	movf	___flmul@temp+1,w
  2910  06DF  00A9               	movwf	??___flmul+1
  2911  06E0  01AA               	clrf	??___flmul+2
  2912  06E1  01AB               	clrf	??___flmul+3
  2913  06E2  3008               	movlw	8
  2914  06E3                     u2045:	
  2915  06E3  1003               	clrc
  2916  06E4  0DA8               	rlf	??___flmul,f
  2917  06E5  0DA9               	rlf	??___flmul+1,f
  2918  06E6  0DAA               	rlf	??___flmul+2,f
  2919  06E7  0DAB               	rlf	??___flmul+3,f
  2920  06E8  3EFF               	addlw	-1
  2921  06E9  1D03               	skipz
  2922  06EA  2EE3               	goto	u2045
  2923  06EB  0828               	movf	??___flmul,w
  2924  06EC  07B4               	addwf	___flmul@prod,f
  2925  06ED  0829               	movf	??___flmul+1,w
  2926  06EE  1103               	clrz
  2927  06EF  1803               	skipnc
  2928  06F0  3E01               	addlw	1
  2929  06F1  1D03               	btfss	3,2
  2930  06F2  07B5               	addwf	___flmul@prod+1,f
  2931  06F3  082A               	movf	??___flmul+2,w
  2932  06F4  1103               	clrz
  2933  06F5  1803               	skipnc
  2934  06F6  3E01               	addlw	1
  2935  06F7  1D03               	btfss	3,2
  2936  06F8  07B6               	addwf	___flmul@prod+2,f
  2937  06F9  082B               	movf	??___flmul+3,w
  2938  06FA  1103               	clrz
  2939  06FB  1803               	skipnc
  2940  06FC  3E01               	addlw	1
  2941  06FD  1D03               	btfss	3,2
  2942  06FE  07B7               	addwf	___flmul@prod+3,f
  2943  06FF  082E               	movf	___flmul@grs,w
  2944  0700  00A8               	movwf	??___flmul
  2945  0701  082F               	movf	___flmul@grs+1,w
  2946  0702  00A9               	movwf	??___flmul+1
  2947  0703  0830               	movf	___flmul@grs+2,w
  2948  0704  00AA               	movwf	??___flmul+2
  2949  0705  0831               	movf	___flmul@grs+3,w
  2950  0706  00AB               	movwf	??___flmul+3
  2951  0707  3018               	movlw	24
  2952  0708                     u2065:	
  2953  0708  1003               	clrc
  2954  0709  0CAB               	rrf	??___flmul+3,f
  2955  070A  0CAA               	rrf	??___flmul+2,f
  2956  070B  0CA9               	rrf	??___flmul+1,f
  2957  070C  0CA8               	rrf	??___flmul,f
  2958  070D  3EFF               	addlw	-1
  2959  070E  1D03               	skipz
  2960  070F  2F08               	goto	u2065
  2961  0710  0828               	movf	??___flmul,w
  2962  0711  07B4               	addwf	___flmul@prod,f
  2963  0712  0829               	movf	??___flmul+1,w
  2964  0713  1103               	clrz
  2965  0714  1803               	skipnc
  2966  0715  3E01               	addlw	1
  2967  0716  1D03               	btfss	3,2
  2968  0717  07B5               	addwf	___flmul@prod+1,f
  2969  0718  082A               	movf	??___flmul+2,w
  2970  0719  1103               	clrz
  2971  071A  1803               	skipnc
  2972  071B  3E01               	addlw	1
  2973  071C  1D03               	btfss	3,2
  2974  071D  07B6               	addwf	___flmul@prod+2,f
  2975  071E  082B               	movf	??___flmul+3,w
  2976  071F  1103               	clrz
  2977  0720  1803               	skipnc
  2978  0721  3E01               	addlw	1
  2979  0722  1D03               	btfss	3,2
  2980  0723  07B7               	addwf	___flmul@prod+3,f
  2981  0724  3008               	movlw	8
  2982  0725  00A8               	movwf	??___flmul
  2983  0726                     u2085:	
  2984  0726  1003               	clrc
  2985  0727  0DAE               	rlf	___flmul@grs,f
  2986  0728  0DAF               	rlf	___flmul@grs+1,f
  2987  0729  0DB0               	rlf	___flmul@grs+2,f
  2988  072A  0DB1               	rlf	___flmul@grs+3,f
  2989  072B  0BA8               	decfsz	??___flmul,f
  2990  072C  2F26               	goto	u2085
  2991  072D  0833               	movf	___flmul@bexp,w
  2992  072E  0732               	addwf	___flmul@aexp,w
  2993  072F  00A8               	movwf	??___flmul
  2994  0730  01A9               	clrf	??___flmul+1
  2995  0731  0DA9               	rlf	??___flmul+1,f
  2996  0732  0828               	movf	??___flmul,w
  2997  0733  3E82               	addlw	130
  2998  0734  00B8               	movwf	___flmul@temp
  2999  0735  0829               	movf	??___flmul+1,w
  3000  0736  1803               	skipnc
  3001  0737  3E01               	addlw	1
  3002  0738  3EFF               	addlw	255
  3003  0739  00B9               	movwf	___flmul@temp+1
  3004  073A                     l1813:	
  3005  073A  1BB6               	btfsc	___flmul@prod+2,7
  3006  073B  2F57               	goto	l1815
  3007  073C  3001               	movlw	1
  3008  073D  00A8               	movwf	??___flmul
  3009  073E                     u2095:	
  3010  073E  1003               	clrc
  3011  073F  0DB4               	rlf	___flmul@prod,f
  3012  0740  0DB5               	rlf	___flmul@prod+1,f
  3013  0741  0DB6               	rlf	___flmul@prod+2,f
  3014  0742  0DB7               	rlf	___flmul@prod+3,f
  3015  0743  0BA8               	decfsz	??___flmul,f
  3016  0744  2F3E               	goto	u2095
  3017  0745  1BB1               	btfsc	___flmul@grs+3,7
  3018  0746  1434               	bsf	___flmul@prod,0
  3019  0747  3001               	movlw	1
  3020  0748  00A8               	movwf	??___flmul
  3021  0749                     u2115:	
  3022  0749  1003               	clrc
  3023  074A  0DAE               	rlf	___flmul@grs,f
  3024  074B  0DAF               	rlf	___flmul@grs+1,f
  3025  074C  0DB0               	rlf	___flmul@grs+2,f
  3026  074D  0DB1               	rlf	___flmul@grs+3,f
  3027  074E  0BA8               	decfsz	??___flmul,f
  3028  074F  2F49               	goto	u2115
  3029  0750  30FF               	movlw	255
  3030  0751  07B8               	addwf	___flmul@temp,f
  3031  0752  1803               	skipnc
  3032  0753  0AB9               	incf	___flmul@temp+1,f
  3033  0754  30FF               	movlw	255
  3034  0755  07B9               	addwf	___flmul@temp+1,f
  3035  0756  2F3A               	goto	l1813
  3036  0757                     l1815:	
  3037  0757  01B2               	clrf	___flmul@aexp
  3038  0758  1FB1               	btfss	___flmul@grs+3,7
  3039  0759  2F70               	goto	l1825
  3040  075A  30FF               	movlw	255
  3041  075B  052E               	andwf	___flmul@grs,w
  3042  075C  00A8               	movwf	??___flmul
  3043  075D  30FF               	movlw	255
  3044  075E  052F               	andwf	___flmul@grs+1,w
  3045  075F  00A9               	movwf	??___flmul+1
  3046  0760  30FF               	movlw	255
  3047  0761  0530               	andwf	___flmul@grs+2,w
  3048  0762  00AA               	movwf	??___flmul+2
  3049  0763  307F               	movlw	127
  3050  0764  0531               	andwf	___flmul@grs+3,w
  3051  0765  00AB               	movwf	??___flmul+3
  3052  0766  082B               	movf	??___flmul+3,w
  3053  0767  042A               	iorwf	??___flmul+2,w
  3054  0768  0429               	iorwf	??___flmul+1,w
  3055  0769  0428               	iorwf	??___flmul,w
  3056  076A  1903               	skipnz
  3057  076B  1834               	btfsc	___flmul@prod,0
  3058  076C  2F6E               	goto	l1821
  3059  076D  2F70               	goto	l1825
  3060  076E                     l1821:	
  3061  076E  01B2               	clrf	___flmul@aexp
  3062  076F  0AB2               	incf	___flmul@aexp,f
  3063  0770                     l1825:	
  3064  0770  0832               	movf	___flmul@aexp,w
  3065  0771  1903               	btfsc	3,2
  3066  0772  2FA2               	goto	l1835
  3067  0773  3001               	movlw	1
  3068  0774  07B4               	addwf	___flmul@prod,f
  3069  0775  3000               	movlw	0
  3070  0776  1803               	skipnc
  3071  0777  3001               	movlw	1
  3072  0778  07B5               	addwf	___flmul@prod+1,f
  3073  0779  3000               	movlw	0
  3074  077A  1803               	skipnc
  3075  077B  3001               	movlw	1
  3076  077C  07B6               	addwf	___flmul@prod+2,f
  3077  077D  3000               	movlw	0
  3078  077E  1803               	skipnc
  3079  077F  3001               	movlw	1
  3080  0780  07B7               	addwf	___flmul@prod+3,f
  3081  0781  1C37               	btfss	___flmul@prod+3,0
  3082  0782  2FA2               	goto	l1835
  3083  0783  0834               	movf	___flmul@prod,w
  3084  0784  00A8               	movwf	??___flmul
  3085  0785  0835               	movf	___flmul@prod+1,w
  3086  0786  00A9               	movwf	??___flmul+1
  3087  0787  0836               	movf	___flmul@prod+2,w
  3088  0788  00AA               	movwf	??___flmul+2
  3089  0789  0837               	movf	___flmul@prod+3,w
  3090  078A  00AB               	movwf	??___flmul+3
  3091  078B  3001               	movlw	1
  3092  078C  00AC               	movwf	??___flmul+4
  3093  078D                     u2185:	
  3094  078D  0D2B               	rlf	??___flmul+3,w
  3095  078E  0CAB               	rrf	??___flmul+3,f
  3096  078F  0CAA               	rrf	??___flmul+2,f
  3097  0790  0CA9               	rrf	??___flmul+1,f
  3098  0791  0CA8               	rrf	??___flmul,f
  3099  0792  0BAC               	decfsz	??___flmul+4,f
  3100  0793  2F8D               	goto	u2185
  3101  0794  082B               	movf	??___flmul+3,w
  3102  0795  00B7               	movwf	___flmul@prod+3
  3103  0796  082A               	movf	??___flmul+2,w
  3104  0797  00B6               	movwf	___flmul@prod+2
  3105  0798  0829               	movf	??___flmul+1,w
  3106  0799  00B5               	movwf	___flmul@prod+1
  3107  079A  0828               	movf	??___flmul,w
  3108  079B  00B4               	movwf	___flmul@prod
  3109  079C  3001               	movlw	1
  3110  079D  07B8               	addwf	___flmul@temp,f
  3111  079E  1803               	skipnc
  3112  079F  0AB9               	incf	___flmul@temp+1,f
  3113  07A0  3000               	movlw	0
  3114  07A1  07B9               	addwf	___flmul@temp+1,f
  3115  07A2                     l1835:	
  3116  07A2  0839               	movf	___flmul@temp+1,w
  3117  07A3  3A80               	xorlw	128
  3118  07A4  00FF               	movwf	127
  3119  07A5  3080               	movlw	128
  3120  07A6  027F               	subwf	127,w
  3121  07A7  1D03               	skipz
  3122  07A8  2FAB               	goto	u2195
  3123  07A9  30FF               	movlw	255
  3124  07AA  0238               	subwf	___flmul@temp,w
  3125  07AB                     u2195:	
  3126  07AB  1C03               	skipc
  3127  07AC  2FB8               	goto	l1839
  3128  07AD  307F               	movlw	127
  3129  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  3130  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  3131  07B0  00B7               	movwf	___flmul@prod+3
  3132  07B1  3080               	movlw	128
  3133  07B2  00B6               	movwf	___flmul@prod+2
  3134  07B3  3000               	movlw	0
  3135  07B4  00B5               	movwf	___flmul@prod+1
  3136  07B5  3000               	movlw	0
  3137  07B6  00B4               	movwf	___flmul@prod
  3138  07B7  2FE8               	goto	l670
  3139  07B8                     l1839:	
  3140  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  3141  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  3142  07BA  0839               	movf	___flmul@temp+1,w
  3143  07BB  3A80               	xorlw	128
  3144  07BC  00FF               	movwf	127
  3145  07BD  3080               	movlw	128
  3146  07BE  027F               	subwf	127,w
  3147  07BF  1D03               	skipz
  3148  07C0  2FC3               	goto	u2205
  3149  07C1  3001               	movlw	1
  3150  07C2  0238               	subwf	___flmul@temp,w
  3151  07C3                     u2205:	
  3152  07C3  1803               	skipnc
  3153  07C4  2FD1               	goto	l1845
  3154  07C5  3000               	movlw	0
  3155  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  3156  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  3157  07C8  00B7               	movwf	___flmul@prod+3
  3158  07C9  3000               	movlw	0
  3159  07CA  00B6               	movwf	___flmul@prod+2
  3160  07CB  3000               	movlw	0
  3161  07CC  00B5               	movwf	___flmul@prod+1
  3162  07CD  3000               	movlw	0
  3163  07CE  00B4               	movwf	___flmul@prod
  3164  07CF  01AD               	clrf	___flmul@sign
  3165  07D0  2FE8               	goto	l670
  3166  07D1                     l1845:	
  3167  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  3168  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  3169  07D3  0838               	movf	___flmul@temp,w
  3170  07D4  00A8               	movwf	??___flmul
  3171  07D5  0828               	movf	??___flmul,w
  3172  07D6  00B3               	movwf	___flmul@bexp
  3173  07D7  30FF               	movlw	255
  3174  07D8  05B4               	andwf	___flmul@prod,f
  3175  07D9  30FF               	movlw	255
  3176  07DA  05B5               	andwf	___flmul@prod+1,f
  3177  07DB  307F               	movlw	127
  3178  07DC  05B6               	andwf	___flmul@prod+2,f
  3179  07DD  3000               	movlw	0
  3180  07DE  05B7               	andwf	___flmul@prod+3,f
  3181  07DF  1833               	btfsc	___flmul@bexp,0
  3182  07E0  17B6               	bsf	___flmul@prod+2,7
  3183  07E1  0833               	movf	___flmul@bexp,w
  3184  07E2  00A8               	movwf	??___flmul
  3185  07E3  1003               	clrc
  3186  07E4  0C28               	rrf	??___flmul,w
  3187  07E5  00A9               	movwf	??___flmul+1
  3188  07E6  0829               	movf	??___flmul+1,w
  3189  07E7  00B7               	movwf	___flmul@prod+3
  3190  07E8                     l670:	
  3191  07E8  082D               	movf	___flmul@sign,w
  3192  07E9  00A8               	movwf	??___flmul
  3193  07EA  0828               	movf	??___flmul,w
  3194  07EB  04B7               	iorwf	___flmul@prod+3,f
  3195  07EC  0837               	movf	___flmul@prod+3,w
  3196  07ED  00A3               	movwf	?___flmul+3
  3197  07EE  0836               	movf	___flmul@prod+2,w
  3198  07EF  00A2               	movwf	?___flmul+2
  3199  07F0  0835               	movf	___flmul@prod+1,w
  3200  07F1  00A1               	movwf	?___flmul+1
  3201  07F2  0834               	movf	___flmul@prod,w
  3202  07F3  00A0               	movwf	?___flmul
  3203  07F4  0008               	return
  3204  07F5                     __end_of___flmul:	
  3205                           
  3206                           	psect	text10
  3207  0D35                     __ptext10:	
  3208 ;; *************** function __Umul8_16 *****************
  3209 ;; Defined at:
  3210 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  3211 ;; Parameters:    Size  Location     Type
  3212 ;;  multiplier      1    wreg     unsigned char 
  3213 ;;  multiplicand    1    0[COMMON] unsigned char 
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;  multiplier      1    8[COMMON] unsigned char 
  3216 ;;  word_mpld       2    6[COMMON] unsigned int 
  3217 ;;  product         2    4[COMMON] unsigned int 
  3218 ;; Return value:  Size  Location     Type
  3219 ;;                  2    0[COMMON] unsigned int 
  3220 ;; Registers used:
  3221 ;;		wreg, status,2, status,0
  3222 ;; Tracked objects:
  3223 ;;		On entry : 0/0
  3224 ;;		On exit  : 0/0
  3225 ;;		Unchanged: 0/0
  3226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3227 ;;      Params:         2       0       0       0       0
  3228 ;;      Locals:         5       0       0       0       0
  3229 ;;      Temps:          2       0       0       0       0
  3230 ;;      Totals:         9       0       0       0       0
  3231 ;;Total ram usage:        9 bytes
  3232 ;; Hardware stack levels used:    1
  3233 ;; This function calls:
  3234 ;;		Nothing
  3235 ;; This function is called by:
  3236 ;;		___flmul
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           
  3241                           ;psect for function __Umul8_16
  3242  0D35                     __Umul8_16:	
  3243                           
  3244                           ;incstack = 0
  3245                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3246                           ;__Umul8_16@multiplier stored from wreg
  3247  0D35  00F8               	movwf	__Umul8_16@multiplier
  3248  0D36  01F4               	clrf	__Umul8_16@product
  3249  0D37  01F5               	clrf	__Umul8_16@product+1
  3250  0D38  0870               	movf	__Umul8_16@multiplicand,w
  3251  0D39  00F2               	movwf	??__Umul8_16
  3252  0D3A  01F3               	clrf	??__Umul8_16+1
  3253  0D3B  0872               	movf	??__Umul8_16,w
  3254  0D3C  00F6               	movwf	__Umul8_16@word_mpld
  3255  0D3D  0873               	movf	??__Umul8_16+1,w
  3256  0D3E  00F7               	movwf	__Umul8_16@word_mpld+1
  3257  0D3F                     l1519:	
  3258  0D3F  1C78               	btfss	__Umul8_16@multiplier,0
  3259  0D40  2D47               	goto	l715
  3260  0D41  0876               	movf	__Umul8_16@word_mpld,w
  3261  0D42  07F4               	addwf	__Umul8_16@product,f
  3262  0D43  1803               	skipnc
  3263  0D44  0AF5               	incf	__Umul8_16@product+1,f
  3264  0D45  0877               	movf	__Umul8_16@word_mpld+1,w
  3265  0D46  07F5               	addwf	__Umul8_16@product+1,f
  3266  0D47                     l715:	
  3267  0D47  3001               	movlw	1
  3268  0D48                     u1405:	
  3269  0D48  1003               	clrc
  3270  0D49  0DF6               	rlf	__Umul8_16@word_mpld,f
  3271  0D4A  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  3272  0D4B  3EFF               	addlw	-1
  3273  0D4C  1D03               	skipz
  3274  0D4D  2D48               	goto	u1405
  3275  0D4E  1003               	clrc
  3276  0D4F  0CF8               	rrf	__Umul8_16@multiplier,f
  3277  0D50  0878               	movf	__Umul8_16@multiplier,w
  3278  0D51  1D03               	btfss	3,2
  3279  0D52  2D3F               	goto	l1519
  3280  0D53  0875               	movf	__Umul8_16@product+1,w
  3281  0D54  00F1               	movwf	?__Umul8_16+1
  3282  0D55  0874               	movf	__Umul8_16@product,w
  3283  0D56  00F0               	movwf	?__Umul8_16
  3284  0D57  0008               	return
  3285  0D58                     __end_of__Umul8_16:	
  3286                           
  3287                           	psect	text11
  3288  0196                     __ptext11:	
  3289 ;; *************** function ___fldiv *****************
  3290 ;; Defined at:
  3291 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  a               4   26[BANK0 ] unsigned int 
  3294 ;;  b               4   30[BANK0 ] unsigned int 
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;  grs             4   46[BANK0 ] unsigned long 
  3297 ;;  rem             4   39[BANK0 ] unsigned long 
  3298 ;;  new_exp         2   44[BANK0 ] int 
  3299 ;;  aexp            1   51[BANK0 ] unsigned char 
  3300 ;;  bexp            1   50[BANK0 ] unsigned char 
  3301 ;;  sign            1   43[BANK0 ] unsigned char 
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  4   26[BANK0 ] unsigned char 
  3304 ;; Registers used:
  3305 ;;		wreg, status,2, status,0, btemp+1
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3311 ;;      Params:         0       8       0       0       0
  3312 ;;      Locals:         0      13       0       0       0
  3313 ;;      Temps:          0       5       0       0       0
  3314 ;;      Totals:         0      26       0       0       0
  3315 ;;Total ram usage:       26 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; This function calls:
  3318 ;;		Nothing
  3319 ;; This function is called by:
  3320 ;;		_setDuty
  3321 ;;		_main
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325                           
  3326                           ;psect for function ___fldiv
  3327  0196                     ___fldiv:	
  3328                           
  3329                           ;incstack = 0
  3330                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  3331  0196  1283               	bcf	3,5	;RP0=0, select bank0
  3332  0197  1303               	bcf	3,6	;RP1=0, select bank0
  3333  0198  0841               	movf	___fldiv@b+3,w
  3334  0199  3980               	andlw	128
  3335  019A  00C2               	movwf	??___fldiv
  3336  019B  0842               	movf	??___fldiv,w
  3337  019C  00CB               	movwf	___fldiv@sign
  3338  019D  0841               	movf	___fldiv@b+3,w
  3339  019E  00C2               	movwf	??___fldiv
  3340  019F  0742               	addwf	??___fldiv,w
  3341  01A0  00C3               	movwf	??___fldiv+1
  3342  01A1  0843               	movf	??___fldiv+1,w
  3343  01A2  00D2               	movwf	___fldiv@bexp
  3344  01A3  1BC0               	btfsc	___fldiv@b+2,7
  3345  01A4  1452               	bsf	___fldiv@bexp,0
  3346  01A5  0852               	movf	___fldiv@bexp,w
  3347  01A6  1903               	btfsc	3,2
  3348  01A7  29B6               	goto	l1593
  3349  01A8  0A52               	incf	___fldiv@bexp,w
  3350  01A9  1D03               	btfss	3,2
  3351  01AA  29B3               	goto	l1589
  3352  01AB  3000               	movlw	0
  3353  01AC  00C1               	movwf	___fldiv@b+3
  3354  01AD  3000               	movlw	0
  3355  01AE  00C0               	movwf	___fldiv@b+2
  3356  01AF  3000               	movlw	0
  3357  01B0  00BF               	movwf	___fldiv@b+1
  3358  01B1  3000               	movlw	0
  3359  01B2  00BE               	movwf	___fldiv@b
  3360  01B3                     l1589:	
  3361  01B3  17C0               	bsf	___fldiv@b+2,7
  3362  01B4  01C1               	clrf	___fldiv@b+3
  3363  01B5  29BE               	goto	l1595
  3364  01B6                     l1593:	
  3365  01B6  3000               	movlw	0
  3366  01B7  00C1               	movwf	___fldiv@b+3
  3367  01B8  3000               	movlw	0
  3368  01B9  00C0               	movwf	___fldiv@b+2
  3369  01BA  3000               	movlw	0
  3370  01BB  00BF               	movwf	___fldiv@b+1
  3371  01BC  3000               	movlw	0
  3372  01BD  00BE               	movwf	___fldiv@b
  3373  01BE                     l1595:	
  3374  01BE  083D               	movf	___fldiv@a+3,w
  3375  01BF  3980               	andlw	128
  3376  01C0  00C2               	movwf	??___fldiv
  3377  01C1  0842               	movf	??___fldiv,w
  3378  01C2  06CB               	xorwf	___fldiv@sign,f
  3379  01C3  083D               	movf	___fldiv@a+3,w
  3380  01C4  00C2               	movwf	??___fldiv
  3381  01C5  0742               	addwf	??___fldiv,w
  3382  01C6  00C3               	movwf	??___fldiv+1
  3383  01C7  0843               	movf	??___fldiv+1,w
  3384  01C8  00D3               	movwf	___fldiv@aexp
  3385  01C9  1BBC               	btfsc	___fldiv@a+2,7
  3386  01CA  1453               	bsf	___fldiv@aexp,0
  3387  01CB  0853               	movf	___fldiv@aexp,w
  3388  01CC  1903               	btfsc	3,2
  3389  01CD  29DC               	goto	l1613
  3390  01CE  0A53               	incf	___fldiv@aexp,w
  3391  01CF  1D03               	btfss	3,2
  3392  01D0  29D9               	goto	l1609
  3393  01D1  3000               	movlw	0
  3394  01D2  00BD               	movwf	___fldiv@a+3
  3395  01D3  3000               	movlw	0
  3396  01D4  00BC               	movwf	___fldiv@a+2
  3397  01D5  3000               	movlw	0
  3398  01D6  00BB               	movwf	___fldiv@a+1
  3399  01D7  3000               	movlw	0
  3400  01D8  00BA               	movwf	___fldiv@a
  3401  01D9                     l1609:	
  3402  01D9  17BC               	bsf	___fldiv@a+2,7
  3403  01DA  01BD               	clrf	___fldiv@a+3
  3404  01DB  29E4               	goto	l618
  3405  01DC                     l1613:	
  3406  01DC  3000               	movlw	0
  3407  01DD  00BD               	movwf	___fldiv@a+3
  3408  01DE  3000               	movlw	0
  3409  01DF  00BC               	movwf	___fldiv@a+2
  3410  01E0  3000               	movlw	0
  3411  01E1  00BB               	movwf	___fldiv@a+1
  3412  01E2  3000               	movlw	0
  3413  01E3  00BA               	movwf	___fldiv@a
  3414  01E4                     l618:	
  3415  01E4  083D               	movf	___fldiv@a+3,w
  3416  01E5  043C               	iorwf	___fldiv@a+2,w
  3417  01E6  043B               	iorwf	___fldiv@a+1,w
  3418  01E7  043A               	iorwf	___fldiv@a,w
  3419  01E8  1D03               	skipz
  3420  01E9  2A03               	goto	l1623
  3421  01EA  3000               	movlw	0
  3422  01EB  00C1               	movwf	___fldiv@b+3
  3423  01EC  3000               	movlw	0
  3424  01ED  00C0               	movwf	___fldiv@b+2
  3425  01EE  3000               	movlw	0
  3426  01EF  00BF               	movwf	___fldiv@b+1
  3427  01F0  3000               	movlw	0
  3428  01F1  00BE               	movwf	___fldiv@b
  3429  01F2  3080               	movlw	128
  3430  01F3  04C0               	iorwf	___fldiv@b+2,f
  3431  01F4  307F               	movlw	127
  3432  01F5  04C1               	iorwf	___fldiv@b+3,f
  3433  01F6                     L2:	
  3434  01F6  084B               	movf	___fldiv@sign,w
  3435  01F7  00C2               	movwf	??___fldiv
  3436  01F8  0842               	movf	??___fldiv,w
  3437  01F9  04C1               	iorwf	___fldiv@b+3,f
  3438  01FA  0841               	movf	___fldiv@b+3,w
  3439  01FB  00BD               	movwf	?___fldiv+3
  3440  01FC  0840               	movf	___fldiv@b+2,w
  3441  01FD  00BC               	movwf	?___fldiv+2
  3442  01FE  083F               	movf	___fldiv@b+1,w
  3443  01FF  00BB               	movwf	?___fldiv+1
  3444  0200  083E               	movf	___fldiv@b,w
  3445  0201  00BA               	movwf	?___fldiv
  3446  0202  0008               	return
  3447  0203                     l1623:	
  3448  0203  0852               	movf	___fldiv@bexp,w
  3449  0204  1D03               	btfss	3,2
  3450  0205  2A0F               	goto	l1629
  3451  0206  3000               	movlw	0
  3452  0207  00BD               	movwf	?___fldiv+3
  3453  0208  3000               	movlw	0
  3454  0209  00BC               	movwf	?___fldiv+2
  3455  020A  3000               	movlw	0
  3456  020B  00BB               	movwf	?___fldiv+1
  3457  020C  3000               	movlw	0
  3458  020D  00BA               	movwf	?___fldiv
  3459  020E  0008               	return
  3460  020F                     l1629:	
  3461  020F  0852               	movf	___fldiv@bexp,w
  3462  0210  00C2               	movwf	??___fldiv
  3463  0211  01C3               	clrf	??___fldiv+1
  3464  0212  0843               	movf	??___fldiv+1,w
  3465  0213  00C5               	movwf	??___fldiv+3
  3466  0214  0853               	movf	___fldiv@aexp,w
  3467  0215  0242               	subwf	??___fldiv,w
  3468  0216  00C4               	movwf	??___fldiv+2
  3469  0217  1C03               	skipc
  3470  0218  03C5               	decf	??___fldiv+3,f
  3471  0219  0844               	movf	??___fldiv+2,w
  3472  021A  3E7F               	addlw	127
  3473  021B  00CC               	movwf	___fldiv@new_exp
  3474  021C  0845               	movf	??___fldiv+3,w
  3475  021D  1803               	skipnc
  3476  021E  3E01               	addlw	1
  3477  021F  3E00               	addlw	0
  3478  0220  00CD               	movwf	___fldiv@new_exp+1
  3479  0221  0841               	movf	___fldiv@b+3,w
  3480  0222  00CA               	movwf	___fldiv@rem+3
  3481  0223  0840               	movf	___fldiv@b+2,w
  3482  0224  00C9               	movwf	___fldiv@rem+2
  3483  0225  083F               	movf	___fldiv@b+1,w
  3484  0226  00C8               	movwf	___fldiv@rem+1
  3485  0227  083E               	movf	___fldiv@b,w
  3486  0228  00C7               	movwf	___fldiv@rem
  3487  0229  3000               	movlw	0
  3488  022A  00C1               	movwf	___fldiv@b+3
  3489  022B  3000               	movlw	0
  3490  022C  00C0               	movwf	___fldiv@b+2
  3491  022D  3000               	movlw	0
  3492  022E  00BF               	movwf	___fldiv@b+1
  3493  022F  3000               	movlw	0
  3494  0230  00BE               	movwf	___fldiv@b
  3495  0231  3000               	movlw	0
  3496  0232  00D1               	movwf	___fldiv@grs+3
  3497  0233  3000               	movlw	0
  3498  0234  00D0               	movwf	___fldiv@grs+2
  3499  0235  3000               	movlw	0
  3500  0236  00CF               	movwf	___fldiv@grs+1
  3501  0237  3000               	movlw	0
  3502  0238  00CE               	movwf	___fldiv@grs
  3503  0239  01D3               	clrf	___fldiv@aexp
  3504  023A                     l1657:	
  3505  023A  301A               	movlw	26
  3506  023B  0253               	subwf	___fldiv@aexp,w
  3507  023C  1803               	btfsc	3,0
  3508  023D  2A82               	goto	l1659
  3509  023E  0853               	movf	___fldiv@aexp,w
  3510  023F  1903               	btfsc	3,2
  3511  0240  2A5E               	goto	l1649
  3512  0241  3001               	movlw	1
  3513  0242  00C2               	movwf	??___fldiv
  3514  0243                     u1655:	
  3515  0243  1003               	clrc
  3516  0244  0DC7               	rlf	___fldiv@rem,f
  3517  0245  0DC8               	rlf	___fldiv@rem+1,f
  3518  0246  0DC9               	rlf	___fldiv@rem+2,f
  3519  0247  0DCA               	rlf	___fldiv@rem+3,f
  3520  0248  0BC2               	decfsz	??___fldiv,f
  3521  0249  2A43               	goto	u1655
  3522  024A  3001               	movlw	1
  3523  024B  00C2               	movwf	??___fldiv
  3524  024C                     u1665:	
  3525  024C  1003               	clrc
  3526  024D  0DBE               	rlf	___fldiv@b,f
  3527  024E  0DBF               	rlf	___fldiv@b+1,f
  3528  024F  0DC0               	rlf	___fldiv@b+2,f
  3529  0250  0DC1               	rlf	___fldiv@b+3,f
  3530  0251  0BC2               	decfsz	??___fldiv,f
  3531  0252  2A4C               	goto	u1665
  3532  0253  1BD1               	btfsc	___fldiv@grs+3,7
  3533  0254  143E               	bsf	___fldiv@b,0
  3534  0255  3001               	movlw	1
  3535  0256  00C2               	movwf	??___fldiv
  3536  0257                     u1685:	
  3537  0257  1003               	clrc
  3538  0258  0DCE               	rlf	___fldiv@grs,f
  3539  0259  0DCF               	rlf	___fldiv@grs+1,f
  3540  025A  0DD0               	rlf	___fldiv@grs+2,f
  3541  025B  0DD1               	rlf	___fldiv@grs+3,f
  3542  025C  0BC2               	decfsz	??___fldiv,f
  3543  025D  2A57               	goto	u1685
  3544  025E                     l1649:	
  3545  025E  083D               	movf	___fldiv@a+3,w
  3546  025F  024A               	subwf	___fldiv@rem+3,w
  3547  0260  1D03               	skipz
  3548  0261  2A6C               	goto	u1695
  3549  0262  083C               	movf	___fldiv@a+2,w
  3550  0263  0249               	subwf	___fldiv@rem+2,w
  3551  0264  1D03               	skipz
  3552  0265  2A6C               	goto	u1695
  3553  0266  083B               	movf	___fldiv@a+1,w
  3554  0267  0248               	subwf	___fldiv@rem+1,w
  3555  0268  1D03               	skipz
  3556  0269  2A6C               	goto	u1695
  3557  026A  083A               	movf	___fldiv@a,w
  3558  026B  0247               	subwf	___fldiv@rem,w
  3559  026C                     u1695:	
  3560  026C  1C03               	skipc
  3561  026D  2A7D               	goto	l1655
  3562  026E  1751               	bsf	___fldiv@grs+3,6
  3563  026F  083A               	movf	___fldiv@a,w
  3564  0270  02C7               	subwf	___fldiv@rem,f
  3565  0271  083B               	movf	___fldiv@a+1,w
  3566  0272  1C03               	skipc
  3567  0273  0F3B               	incfsz	___fldiv@a+1,w
  3568  0274  02C8               	subwf	___fldiv@rem+1,f
  3569  0275  083C               	movf	___fldiv@a+2,w
  3570  0276  1C03               	skipc
  3571  0277  0F3C               	incfsz	___fldiv@a+2,w
  3572  0278  02C9               	subwf	___fldiv@rem+2,f
  3573  0279  083D               	movf	___fldiv@a+3,w
  3574  027A  1C03               	skipc
  3575  027B  0F3D               	incfsz	___fldiv@a+3,w
  3576  027C  02CA               	subwf	___fldiv@rem+3,f
  3577  027D                     l1655:	
  3578  027D  3001               	movlw	1
  3579  027E  00C2               	movwf	??___fldiv
  3580  027F  0842               	movf	??___fldiv,w
  3581  0280  07D3               	addwf	___fldiv@aexp,f
  3582  0281  2A3A               	goto	l1657
  3583  0282                     l1659:	
  3584  0282  084A               	movf	___fldiv@rem+3,w
  3585  0283  0449               	iorwf	___fldiv@rem+2,w
  3586  0284  0448               	iorwf	___fldiv@rem+1,w
  3587  0285  0447               	iorwf	___fldiv@rem,w
  3588  0286  1D03               	btfss	3,2
  3589  0287  144E               	bsf	___fldiv@grs,0
  3590  0288                     l1673:	
  3591  0288  1BC0               	btfsc	___fldiv@b+2,7
  3592  0289  2AA5               	goto	l1675
  3593  028A  3001               	movlw	1
  3594  028B  00C2               	movwf	??___fldiv
  3595  028C                     u1725:	
  3596  028C  1003               	clrc
  3597  028D  0DBE               	rlf	___fldiv@b,f
  3598  028E  0DBF               	rlf	___fldiv@b+1,f
  3599  028F  0DC0               	rlf	___fldiv@b+2,f
  3600  0290  0DC1               	rlf	___fldiv@b+3,f
  3601  0291  0BC2               	decfsz	??___fldiv,f
  3602  0292  2A8C               	goto	u1725
  3603  0293  1BD1               	btfsc	___fldiv@grs+3,7
  3604  0294  143E               	bsf	___fldiv@b,0
  3605  0295  3001               	movlw	1
  3606  0296  00C2               	movwf	??___fldiv
  3607  0297                     u1745:	
  3608  0297  1003               	clrc
  3609  0298  0DCE               	rlf	___fldiv@grs,f
  3610  0299  0DCF               	rlf	___fldiv@grs+1,f
  3611  029A  0DD0               	rlf	___fldiv@grs+2,f
  3612  029B  0DD1               	rlf	___fldiv@grs+3,f
  3613  029C  0BC2               	decfsz	??___fldiv,f
  3614  029D  2A97               	goto	u1745
  3615  029E  30FF               	movlw	255
  3616  029F  07CC               	addwf	___fldiv@new_exp,f
  3617  02A0  1803               	skipnc
  3618  02A1  0ACD               	incf	___fldiv@new_exp+1,f
  3619  02A2  30FF               	movlw	255
  3620  02A3  07CD               	addwf	___fldiv@new_exp+1,f
  3621  02A4  2A88               	goto	l1673
  3622  02A5                     l1675:	
  3623  02A5  01D3               	clrf	___fldiv@aexp
  3624  02A6  1FD1               	btfss	___fldiv@grs+3,7
  3625  02A7  2ABE               	goto	l1685
  3626  02A8  30FF               	movlw	255
  3627  02A9  054E               	andwf	___fldiv@grs,w
  3628  02AA  00C2               	movwf	??___fldiv
  3629  02AB  30FF               	movlw	255
  3630  02AC  054F               	andwf	___fldiv@grs+1,w
  3631  02AD  00C3               	movwf	??___fldiv+1
  3632  02AE  30FF               	movlw	255
  3633  02AF  0550               	andwf	___fldiv@grs+2,w
  3634  02B0  00C4               	movwf	??___fldiv+2
  3635  02B1  307F               	movlw	127
  3636  02B2  0551               	andwf	___fldiv@grs+3,w
  3637  02B3  00C5               	movwf	??___fldiv+3
  3638  02B4  0845               	movf	??___fldiv+3,w
  3639  02B5  0444               	iorwf	??___fldiv+2,w
  3640  02B6  0443               	iorwf	??___fldiv+1,w
  3641  02B7  0442               	iorwf	??___fldiv,w
  3642  02B8  1903               	skipnz
  3643  02B9  183E               	btfsc	___fldiv@b,0
  3644  02BA  2ABC               	goto	l1681
  3645  02BB  2ABE               	goto	l1685
  3646  02BC                     l1681:	
  3647  02BC  01D3               	clrf	___fldiv@aexp
  3648  02BD  0AD3               	incf	___fldiv@aexp,f
  3649  02BE                     l1685:	
  3650  02BE  0853               	movf	___fldiv@aexp,w
  3651  02BF  1903               	btfsc	3,2
  3652  02C0  2AF0               	goto	l1695
  3653  02C1  3001               	movlw	1
  3654  02C2  07BE               	addwf	___fldiv@b,f
  3655  02C3  3000               	movlw	0
  3656  02C4  1803               	skipnc
  3657  02C5  3001               	movlw	1
  3658  02C6  07BF               	addwf	___fldiv@b+1,f
  3659  02C7  3000               	movlw	0
  3660  02C8  1803               	skipnc
  3661  02C9  3001               	movlw	1
  3662  02CA  07C0               	addwf	___fldiv@b+2,f
  3663  02CB  3000               	movlw	0
  3664  02CC  1803               	skipnc
  3665  02CD  3001               	movlw	1
  3666  02CE  07C1               	addwf	___fldiv@b+3,f
  3667  02CF  1C41               	btfss	___fldiv@b+3,0
  3668  02D0  2AF0               	goto	l1695
  3669  02D1  083E               	movf	___fldiv@b,w
  3670  02D2  00C2               	movwf	??___fldiv
  3671  02D3  083F               	movf	___fldiv@b+1,w
  3672  02D4  00C3               	movwf	??___fldiv+1
  3673  02D5  0840               	movf	___fldiv@b+2,w
  3674  02D6  00C4               	movwf	??___fldiv+2
  3675  02D7  0841               	movf	___fldiv@b+3,w
  3676  02D8  00C5               	movwf	??___fldiv+3
  3677  02D9  3001               	movlw	1
  3678  02DA  00C6               	movwf	??___fldiv+4
  3679  02DB                     u1815:	
  3680  02DB  0D45               	rlf	??___fldiv+3,w
  3681  02DC  0CC5               	rrf	??___fldiv+3,f
  3682  02DD  0CC4               	rrf	??___fldiv+2,f
  3683  02DE  0CC3               	rrf	??___fldiv+1,f
  3684  02DF  0CC2               	rrf	??___fldiv,f
  3685  02E0  0BC6               	decfsz	??___fldiv+4,f
  3686  02E1  2ADB               	goto	u1815
  3687  02E2  0845               	movf	??___fldiv+3,w
  3688  02E3  00C1               	movwf	___fldiv@b+3
  3689  02E4  0844               	movf	??___fldiv+2,w
  3690  02E5  00C0               	movwf	___fldiv@b+2
  3691  02E6  0843               	movf	??___fldiv+1,w
  3692  02E7  00BF               	movwf	___fldiv@b+1
  3693  02E8  0842               	movf	??___fldiv,w
  3694  02E9  00BE               	movwf	___fldiv@b
  3695  02EA  3001               	movlw	1
  3696  02EB  07CC               	addwf	___fldiv@new_exp,f
  3697  02EC  1803               	skipnc
  3698  02ED  0ACD               	incf	___fldiv@new_exp+1,f
  3699  02EE  3000               	movlw	0
  3700  02EF  07CD               	addwf	___fldiv@new_exp+1,f
  3701  02F0                     l1695:	
  3702  02F0  084D               	movf	___fldiv@new_exp+1,w
  3703  02F1  3A80               	xorlw	128
  3704  02F2  00FF               	movwf	127
  3705  02F3  3080               	movlw	128
  3706  02F4  027F               	subwf	127,w
  3707  02F5  1D03               	skipz
  3708  02F6  2AF9               	goto	u1825
  3709  02F7  30FF               	movlw	255
  3710  02F8  024C               	subwf	___fldiv@new_exp,w
  3711  02F9                     u1825:	
  3712  02F9  1C03               	skipc
  3713  02FA  2B09               	goto	l1699
  3714  02FB  30FF               	movlw	255
  3715  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  3716  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  3717  02FE  00CC               	movwf	___fldiv@new_exp
  3718  02FF  3000               	movlw	0
  3719  0300  00CD               	movwf	___fldiv@new_exp+1
  3720  0301  3000               	movlw	0
  3721  0302  00C1               	movwf	___fldiv@b+3
  3722  0303  3000               	movlw	0
  3723  0304  00C0               	movwf	___fldiv@b+2
  3724  0305  3000               	movlw	0
  3725  0306  00BF               	movwf	___fldiv@b+1
  3726  0307  3000               	movlw	0
  3727  0308  00BE               	movwf	___fldiv@b
  3728  0309                     l1699:	
  3729  0309  1283               	bcf	3,5	;RP0=0, select bank0
  3730  030A  1303               	bcf	3,6	;RP1=0, select bank0
  3731  030B  084D               	movf	___fldiv@new_exp+1,w
  3732  030C  3A80               	xorlw	128
  3733  030D  00FF               	movwf	127
  3734  030E  3080               	movlw	128
  3735  030F  027F               	subwf	127,w
  3736  0310  1D03               	skipz
  3737  0311  2B14               	goto	u1835
  3738  0312  3001               	movlw	1
  3739  0313  024C               	subwf	___fldiv@new_exp,w
  3740  0314                     u1835:	
  3741  0314  1803               	skipnc
  3742  0315  2B23               	goto	l640
  3743  0316  1283               	bcf	3,5	;RP0=0, select bank0
  3744  0317  1303               	bcf	3,6	;RP1=0, select bank0
  3745  0318  01CC               	clrf	___fldiv@new_exp
  3746  0319  01CD               	clrf	___fldiv@new_exp+1
  3747  031A  3000               	movlw	0
  3748  031B  00C1               	movwf	___fldiv@b+3
  3749  031C  3000               	movlw	0
  3750  031D  00C0               	movwf	___fldiv@b+2
  3751  031E  3000               	movlw	0
  3752  031F  00BF               	movwf	___fldiv@b+1
  3753  0320  3000               	movlw	0
  3754  0321  00BE               	movwf	___fldiv@b
  3755  0322  01CB               	clrf	___fldiv@sign
  3756  0323                     l640:	
  3757  0323  1283               	bcf	3,5	;RP0=0, select bank0
  3758  0324  1303               	bcf	3,6	;RP1=0, select bank0
  3759  0325  084C               	movf	___fldiv@new_exp,w
  3760  0326  00C2               	movwf	??___fldiv
  3761  0327  0842               	movf	??___fldiv,w
  3762  0328  00D2               	movwf	___fldiv@bexp
  3763  0329  1C52               	btfss	___fldiv@bexp,0
  3764  032A  2B2D               	goto	l1711
  3765  032B  17C0               	bsf	___fldiv@b+2,7
  3766  032C  2B31               	goto	l642
  3767  032D                     l1711:	
  3768  032D  307F               	movlw	127
  3769  032E  00C2               	movwf	??___fldiv
  3770  032F  0842               	movf	??___fldiv,w
  3771  0330  05C0               	andwf	___fldiv@b+2,f
  3772  0331                     l642:	
  3773  0331  0852               	movf	___fldiv@bexp,w
  3774  0332  00C2               	movwf	??___fldiv
  3775  0333  1003               	clrc
  3776  0334  0C42               	rrf	??___fldiv,w
  3777  0335  00C3               	movwf	??___fldiv+1
  3778  0336  0843               	movf	??___fldiv+1,w
  3779  0337  00C1               	movwf	___fldiv@b+3
  3780  0338  29F6               	goto	L2
  3781  0339                     __end_of___fldiv:	
  3782                           
  3783                           	psect	text12
  3784  0CAD                     __ptext12:	
  3785 ;; *************** function _pwmInit2 *****************
  3786 ;; Defined at:
  3787 ;;		line 27 in file "./pwm.h"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;		None
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;		None
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  1    wreg      void 
  3794 ;; Registers used:
  3795 ;;		wreg, status,2, status,0, pclath, cstack
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3801 ;;      Params:         0       0       0       0       0
  3802 ;;      Locals:         0       0       0       0       0
  3803 ;;      Temps:          0       0       0       0       0
  3804 ;;      Totals:         0       0       0       0       0
  3805 ;;Total ram usage:        0 bytes
  3806 ;; Hardware stack levels used:    1
  3807 ;; Hardware stack levels required when called:    1
  3808 ;; This function calls:
  3809 ;;		_setPR2
  3810 ;;		_setTMR2
  3811 ;; This function is called by:
  3812 ;;		_main
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           
  3817                           ;psect for function _pwmInit2
  3818  0CAD                     _pwmInit2:	
  3819                           
  3820                           ;./pwm.h: 28:     setPR2();
  3821                           
  3822                           ;incstack = 0
  3823                           ; Regs used in _pwmInit2: [wreg+status,2+status,0+pclath+cstack]
  3824  0CAD  120A  158A  249E  120A  158A  	fcall	_setPR2
  3825                           
  3826                           ;./pwm.h: 29:     setTMR2(2);
  3827  0CB2  3002               	movlw	2
  3828  0CB3  120A  158A  24F6   	fcall	_setTMR2
  3829  0CB6  0008               	return
  3830  0CB7                     __end_of_pwmInit2:	
  3831                           
  3832                           	psect	text13
  3833  0CA3                     __ptext13:	
  3834 ;; *************** function _pwmInit1 *****************
  3835 ;; Defined at:
  3836 ;;		line 22 in file "./pwm.h"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;		None
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;		None
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		wreg, status,2, status,0, pclath, cstack
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3850 ;;      Params:         0       0       0       0       0
  3851 ;;      Locals:         0       0       0       0       0
  3852 ;;      Temps:          0       0       0       0       0
  3853 ;;      Totals:         0       0       0       0       0
  3854 ;;Total ram usage:        0 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; Hardware stack levels required when called:    1
  3857 ;; This function calls:
  3858 ;;		_setPR2
  3859 ;;		_setTMR2
  3860 ;; This function is called by:
  3861 ;;		_main
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           
  3866                           ;psect for function _pwmInit1
  3867  0CA3                     _pwmInit1:	
  3868                           
  3869                           ;./pwm.h: 23:     setPR2();
  3870                           
  3871                           ;incstack = 0
  3872                           ; Regs used in _pwmInit1: [wreg+status,2+status,0+pclath+cstack]
  3873  0CA3  120A  158A  249E  120A  158A  	fcall	_setPR2
  3874                           
  3875                           ;./pwm.h: 24:     setTMR2(1);
  3876  0CA8  3001               	movlw	1
  3877  0CA9  120A  158A  24F6   	fcall	_setTMR2
  3878  0CAC  0008               	return
  3879  0CAD                     __end_of_pwmInit1:	
  3880                           
  3881                           	psect	text14
  3882  0CF6                     __ptext14:	
  3883 ;; *************** function _setTMR2 *****************
  3884 ;; Defined at:
  3885 ;;		line 50 in file "./pwm.h"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;  pwm             1    wreg     const unsigned char 
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;  pwm             1    0[COMMON] const unsigned char 
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  1    wreg      void 
  3892 ;; Registers used:
  3893 ;;		wreg, status,2, status,0
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3899 ;;      Params:         0       0       0       0       0
  3900 ;;      Locals:         1       0       0       0       0
  3901 ;;      Temps:          0       0       0       0       0
  3902 ;;      Totals:         1       0       0       0       0
  3903 ;;Total ram usage:        1 bytes
  3904 ;; Hardware stack levels used:    1
  3905 ;; This function calls:
  3906 ;;		Nothing
  3907 ;; This function is called by:
  3908 ;;		_pwmInit1
  3909 ;;		_pwmInit2
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           
  3914                           ;psect for function _setTMR2
  3915  0CF6                     _setTMR2:	
  3916                           
  3917                           ;incstack = 0
  3918                           ; Regs used in _setTMR2: [wreg+status,2+status,0]
  3919                           ;setTMR2@pwm stored from wreg
  3920  0CF6  00F0               	movwf	setTMR2@pwm
  3921                           
  3922                           ;./pwm.h: 51:     if (pwm == 2) {
  3923  0CF7  3002               	movlw	2
  3924  0CF8  0670               	xorwf	setTMR2@pwm,w
  3925  0CF9  1D03               	btfss	3,2
  3926  0CFA  2D00               	goto	l93
  3927                           
  3928                           ;./pwm.h: 52:         CCP2M3 = 1;
  3929  0CFB  1283               	bcf	3,5	;RP0=0, select bank0
  3930  0CFC  1303               	bcf	3,6	;RP1=0, select bank0
  3931  0CFD  159D               	bsf	29,3	;volatile
  3932                           
  3933                           ;./pwm.h: 53:         CCP2M2 = 1;
  3934  0CFE  151D               	bsf	29,2	;volatile
  3935                           
  3936                           ;./pwm.h: 54:     } else {
  3937  0CFF  2D04               	goto	l94
  3938  0D00                     l93:	
  3939                           
  3940                           ;./pwm.h: 55:         CCP1M3 = 1;
  3941  0D00  1283               	bcf	3,5	;RP0=0, select bank0
  3942  0D01  1303               	bcf	3,6	;RP1=0, select bank0
  3943  0D02  1597               	bsf	23,3	;volatile
  3944                           
  3945                           ;./pwm.h: 56:         CCP1M2 = 1;
  3946  0D03  1517               	bsf	23,2	;volatile
  3947  0D04                     l94:	
  3948                           ;./pwm.h: 57:     }
  3949                           
  3950                           
  3951                           ;./pwm.h: 66:         T2CKPS0 = 1;
  3952  0D04  1412               	bsf	18,0	;volatile
  3953                           
  3954                           ;./pwm.h: 67:         T2CKPS1 = 1;
  3955  0D05  1492               	bsf	18,1	;volatile
  3956                           
  3957                           ;./pwm.h: 70:     TMR2ON = 1;
  3958  0D06  1512               	bsf	18,2	;volatile
  3959                           
  3960                           ;./pwm.h: 71:     if (pwm == 2)
  3961  0D07  3002               	movlw	2
  3962  0D08  0670               	xorwf	setTMR2@pwm,w
  3963  0D09  1D03               	btfss	3,2
  3964  0D0A  2D0F               	goto	l95
  3965                           
  3966                           ;./pwm.h: 72:         TRISC2 = 0;
  3967  0D0B  1683               	bsf	3,5	;RP0=1, select bank1
  3968  0D0C  1303               	bcf	3,6	;RP1=0, select bank1
  3969  0D0D  1107               	bcf	7,2	;volatile
  3970  0D0E  0008               	return
  3971  0D0F                     l95:	
  3972                           ;./pwm.h: 73:     else
  3973                           
  3974                           
  3975                           ;./pwm.h: 74:         TRISC1 = 0;
  3976  0D0F  1683               	bsf	3,5	;RP0=1, select bank1
  3977  0D10  1303               	bcf	3,6	;RP1=0, select bank1
  3978  0D11  1087               	bcf	7,1	;volatile
  3979  0D12  0008               	return
  3980  0D13                     __end_of_setTMR2:	
  3981                           
  3982                           	psect	text15
  3983  0C9E                     __ptext15:	
  3984 ;; *************** function _setPR2 *****************
  3985 ;; Defined at:
  3986 ;;		line 14 in file "./pwm.h"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;		None
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;		None
  3991 ;; Return value:  Size  Location     Type
  3992 ;;                  1    wreg      void 
  3993 ;; Registers used:
  3994 ;;		wreg
  3995 ;; Tracked objects:
  3996 ;;		On entry : 0/0
  3997 ;;		On exit  : 0/0
  3998 ;;		Unchanged: 0/0
  3999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4000 ;;      Params:         0       0       0       0       0
  4001 ;;      Locals:         0       0       0       0       0
  4002 ;;      Temps:          0       0       0       0       0
  4003 ;;      Totals:         0       0       0       0       0
  4004 ;;Total ram usage:        0 bytes
  4005 ;; Hardware stack levels used:    1
  4006 ;; This function calls:
  4007 ;;		Nothing
  4008 ;; This function is called by:
  4009 ;;		_pwmInit1
  4010 ;;		_pwmInit2
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           
  4015                           ;psect for function _setPR2
  4016  0C9E                     _setPR2:	
  4017                           
  4018                           ;./pwm.h: 15:     PR2 = (4000000 / (245 * 4 * 16)) - 1;
  4019                           
  4020                           ;incstack = 0
  4021                           ; Regs used in _setPR2: [wreg]
  4022  0C9E  30FE               	movlw	254
  4023  0C9F  1683               	bsf	3,5	;RP0=1, select bank1
  4024  0CA0  1303               	bcf	3,6	;RP1=0, select bank1
  4025  0CA1  0092               	movwf	18	;volatile
  4026  0CA2  0008               	return
  4027  0CA3                     __end_of_setPR2:	
  4028                           
  4029                           	psect	text16
  4030  0E98                     __ptext16:	
  4031 ;; *************** function _lcdSetCursor *****************
  4032 ;; Defined at:
  4033 ;;		line 56 in file "./lcd.h"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;  a               1    wreg     unsigned char 
  4036 ;;  b               1    4[COMMON] unsigned char 
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;  a               1    7[COMMON] unsigned char 
  4039 ;;  temp            1   10[COMMON] unsigned char 
  4040 ;;  y               1    9[COMMON] unsigned char 
  4041 ;;  z               1    8[COMMON] unsigned char 
  4042 ;; Return value:  Size  Location     Type
  4043 ;;                  1    wreg      void 
  4044 ;; Registers used:
  4045 ;;		wreg, status,2, status,0, pclath, cstack
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4051 ;;      Params:         1       0       0       0       0
  4052 ;;      Locals:         4       0       0       0       0
  4053 ;;      Temps:          2       0       0       0       0
  4054 ;;      Totals:         7       0       0       0       0
  4055 ;;Total ram usage:        7 bytes
  4056 ;; Hardware stack levels used:    1
  4057 ;; Hardware stack levels required when called:    2
  4058 ;; This function calls:
  4059 ;;		_lcdCmd
  4060 ;; This function is called by:
  4061 ;;		_main
  4062 ;; This function uses a non-reentrant model
  4063 ;;
  4064                           
  4065                           
  4066                           ;psect for function _lcdSetCursor
  4067  0E98                     _lcdSetCursor:	
  4068                           
  4069                           ;incstack = 0
  4070                           ; Regs used in _lcdSetCursor: [wreg+status,2+status,0+pclath+cstack]
  4071                           ;lcdSetCursor@a stored from wreg
  4072  0E98  00F7               	movwf	lcdSetCursor@a
  4073                           
  4074                           ;./lcd.h: 57:     char temp, z, y;;./lcd.h: 58:     if (a == 1) {
  4075  0E99  0377               	decf	lcdSetCursor@a,w
  4076  0E9A  1D03               	btfss	3,2
  4077  0E9B  2EBD               	goto	l2033
  4078                           
  4079                           ;./lcd.h: 59:         temp = 0x80 + b - 1;
  4080  0E9C  0874               	movf	lcdSetCursor@b,w
  4081  0E9D  3E7F               	addlw	127
  4082  0E9E  00F5               	movwf	??_lcdSetCursor
  4083  0E9F  0875               	movf	??_lcdSetCursor,w
  4084  0EA0  00FA               	movwf	lcdSetCursor@temp
  4085                           
  4086                           ;./lcd.h: 60:         z = temp >> 4;
  4087  0EA1  087A               	movf	lcdSetCursor@temp,w
  4088  0EA2  00F5               	movwf	??_lcdSetCursor
  4089  0EA3  3004               	movlw	4
  4090  0EA4                     u2595:	
  4091  0EA4  1003               	clrc
  4092  0EA5  0CF5               	rrf	??_lcdSetCursor,f
  4093  0EA6  3EFF               	addlw	-1
  4094  0EA7  1D03               	skipz
  4095  0EA8  2EA4               	goto	u2595
  4096  0EA9  0875               	movf	??_lcdSetCursor,w
  4097  0EAA  00F6               	movwf	??_lcdSetCursor+1
  4098  0EAB  0876               	movf	??_lcdSetCursor+1,w
  4099  0EAC  00F8               	movwf	lcdSetCursor@z
  4100                           
  4101                           ;./lcd.h: 61:         y = temp & 0x0F;
  4102  0EAD  087A               	movf	lcdSetCursor@temp,w
  4103  0EAE  390F               	andlw	15
  4104  0EAF  00F5               	movwf	??_lcdSetCursor
  4105  0EB0  0875               	movf	??_lcdSetCursor,w
  4106  0EB1  00F9               	movwf	lcdSetCursor@y
  4107                           
  4108                           ;./lcd.h: 62:         lcdCmd(z);
  4109  0EB2  0878               	movf	lcdSetCursor@z,w
  4110  0EB3  120A  158A  24DC  120A  158A  	fcall	_lcdCmd
  4111                           
  4112                           ;./lcd.h: 63:         lcdCmd(y);
  4113  0EB8  0879               	movf	lcdSetCursor@y,w
  4114  0EB9  120A  158A  24DC   	fcall	_lcdCmd
  4115                           
  4116                           ;./lcd.h: 64:     } else if (a == 2) {
  4117  0EBC  0008               	return
  4118  0EBD                     l2033:	
  4119  0EBD  3002               	movlw	2
  4120  0EBE  0677               	xorwf	lcdSetCursor@a,w
  4121  0EBF  1D03               	btfss	3,2
  4122  0EC0  0008               	return
  4123                           
  4124                           ;./lcd.h: 65:         temp = 0xC0 + b - 1;
  4125  0EC1  0874               	movf	lcdSetCursor@b,w
  4126  0EC2  3EBF               	addlw	191
  4127  0EC3  00F5               	movwf	??_lcdSetCursor
  4128  0EC4  0875               	movf	??_lcdSetCursor,w
  4129  0EC5  00FA               	movwf	lcdSetCursor@temp
  4130                           
  4131                           ;./lcd.h: 66:         z = temp >> 4;
  4132  0EC6  087A               	movf	lcdSetCursor@temp,w
  4133  0EC7  00F5               	movwf	??_lcdSetCursor
  4134  0EC8  3004               	movlw	4
  4135  0EC9                     u2615:	
  4136  0EC9  1003               	clrc
  4137  0ECA  0CF5               	rrf	??_lcdSetCursor,f
  4138  0ECB  3EFF               	addlw	-1
  4139  0ECC  1D03               	skipz
  4140  0ECD  2EC9               	goto	u2615
  4141  0ECE  0875               	movf	??_lcdSetCursor,w
  4142  0ECF  00F6               	movwf	??_lcdSetCursor+1
  4143  0ED0  0876               	movf	??_lcdSetCursor+1,w
  4144  0ED1  00F8               	movwf	lcdSetCursor@z
  4145                           
  4146                           ;./lcd.h: 67:         y = temp & 0x0F;
  4147  0ED2  087A               	movf	lcdSetCursor@temp,w
  4148  0ED3  390F               	andlw	15
  4149  0ED4  00F5               	movwf	??_lcdSetCursor
  4150  0ED5  0875               	movf	??_lcdSetCursor,w
  4151  0ED6  00F9               	movwf	lcdSetCursor@y
  4152                           
  4153                           ;./lcd.h: 68:         lcdCmd(z);
  4154  0ED7  0878               	movf	lcdSetCursor@z,w
  4155  0ED8  120A  158A  24DC  120A  158A  	fcall	_lcdCmd
  4156                           
  4157                           ;./lcd.h: 69:         lcdCmd(y);
  4158  0EDD  0879               	movf	lcdSetCursor@y,w
  4159  0EDE  120A  158A  24DC   	fcall	_lcdCmd
  4160  0EE1  0008               	return
  4161  0EE2                     __end_of_lcdSetCursor:	
  4162                           
  4163                           	psect	text17
  4164  0E5B                     __ptext17:	
  4165 ;; *************** function _lcdPrint *****************
  4166 ;; Defined at:
  4167 ;;		line 108 in file "./lcd.h"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  a               2    5[COMMON] PTR unsigned char 
  4170 ;;		 -> entero(16), STR_2(16), STR_1(14), 
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;  i               2   10[COMMON] int 
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      void 
  4175 ;; Registers used:
  4176 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4182 ;;      Params:         2       0       0       0       0
  4183 ;;      Locals:         2       0       0       0       0
  4184 ;;      Temps:          3       0       0       0       0
  4185 ;;      Totals:         7       0       0       0       0
  4186 ;;Total ram usage:        7 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:    2
  4189 ;; This function calls:
  4190 ;;		_lcdWriteChar
  4191 ;; This function is called by:
  4192 ;;		_main
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196                           
  4197                           ;psect for function _lcdPrint
  4198  0E5B                     _lcdPrint:	
  4199                           
  4200                           ;./lcd.h: 109:     int i;;./lcd.h: 110:     for (i = 0; a[i] != '\0'; i++)
  4201                           
  4202                           ;incstack = 0
  4203                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4204  0E5B  01FA               	clrf	lcdPrint@i
  4205  0E5C  01FB               	clrf	lcdPrint@i+1
  4206  0E5D                     l2079:	
  4207  0E5D  087A               	movf	lcdPrint@i,w
  4208  0E5E  0775               	addwf	lcdPrint@a,w
  4209  0E5F  00F8               	movwf	??_lcdPrint+1
  4210  0E60  0876               	movf	lcdPrint@a+1,w
  4211  0E61  00F7               	movwf	??_lcdPrint
  4212  0E62  1803               	skipnc
  4213  0E63  0AF7               	incf	??_lcdPrint,f
  4214  0E64  1BFA               	btfsc	lcdPrint@i,7
  4215  0E65  03F7               	decf	??_lcdPrint,f
  4216  0E66  0877               	movf	??_lcdPrint,w
  4217  0E67  00F9               	movwf	??_lcdPrint+2
  4218  0E68  0879               	movf	??_lcdPrint+2,w
  4219  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  4220  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  4221  0E6B  00FF               	movwf	127
  4222  0E6C  0878               	movf	??_lcdPrint+1,w
  4223  0E6D  0084               	movwf	4
  4224  0E6E  120A  158A  2000  120A  158A  	fcall	stringtab
  4225  0E73  3A00               	xorlw	0
  4226  0E74  1903               	btfsc	3,2
  4227  0E75  0008               	return
  4228                           
  4229                           ;./lcd.h: 111:         lcdWriteChar(a[i]);
  4230  0E76  087A               	movf	lcdPrint@i,w
  4231  0E77  0775               	addwf	lcdPrint@a,w
  4232  0E78  00F8               	movwf	??_lcdPrint+1
  4233  0E79  0876               	movf	lcdPrint@a+1,w
  4234  0E7A  00F7               	movwf	??_lcdPrint
  4235  0E7B  1803               	skipnc
  4236  0E7C  0AF7               	incf	??_lcdPrint,f
  4237  0E7D  1BFA               	btfsc	lcdPrint@i,7
  4238  0E7E  03F7               	decf	??_lcdPrint,f
  4239  0E7F  0877               	movf	??_lcdPrint,w
  4240  0E80  00F9               	movwf	??_lcdPrint+2
  4241  0E81  0879               	movf	??_lcdPrint+2,w
  4242  0E82  1283               	bcf	3,5	;RP0=0, select bank0
  4243  0E83  1303               	bcf	3,6	;RP1=0, select bank0
  4244  0E84  00FF               	movwf	127
  4245  0E85  0878               	movf	??_lcdPrint+1,w
  4246  0E86  0084               	movwf	4
  4247  0E87  120A  158A  2000  120A  158A  	fcall	stringtab
  4248  0E8C  120A  158A  25E8  120A  158A  	fcall	_lcdWriteChar
  4249  0E91  3001               	movlw	1
  4250  0E92  07FA               	addwf	lcdPrint@i,f
  4251  0E93  1803               	skipnc
  4252  0E94  0AFB               	incf	lcdPrint@i+1,f
  4253  0E95  3000               	movlw	0
  4254  0E96  07FB               	addwf	lcdPrint@i+1,f
  4255  0E97  2E5D               	goto	l2079
  4256  0E98                     __end_of_lcdPrint:	
  4257                           
  4258                           	psect	text18
  4259  0DE8                     __ptext18:	
  4260 ;; *************** function _lcdWriteChar *****************
  4261 ;; Defined at:
  4262 ;;		line 93 in file "./lcd.h"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;  a               1    wreg     unsigned char 
  4265 ;; Auto vars:     Size  Location     Type
  4266 ;;  a               1    4[COMMON] unsigned char 
  4267 ;;  y               1    3[COMMON] unsigned char 
  4268 ;;  temp            1    2[COMMON] unsigned char 
  4269 ;; Return value:  Size  Location     Type
  4270 ;;                  1    wreg      void 
  4271 ;; Registers used:
  4272 ;;		wreg, status,2, status,0, pclath, cstack
  4273 ;; Tracked objects:
  4274 ;;		On entry : 0/0
  4275 ;;		On exit  : 0/0
  4276 ;;		Unchanged: 0/0
  4277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4278 ;;      Params:         0       0       0       0       0
  4279 ;;      Locals:         3       0       0       0       0
  4280 ;;      Temps:          1       0       0       0       0
  4281 ;;      Totals:         4       0       0       0       0
  4282 ;;Total ram usage:        4 bytes
  4283 ;; Hardware stack levels used:    1
  4284 ;; Hardware stack levels required when called:    1
  4285 ;; This function calls:
  4286 ;;		_lcdPort
  4287 ;; This function is called by:
  4288 ;;		_lcdPrint
  4289 ;; This function uses a non-reentrant model
  4290 ;;
  4291                           
  4292                           
  4293                           ;psect for function _lcdWriteChar
  4294  0DE8                     _lcdWriteChar:	
  4295                           
  4296                           ;incstack = 0
  4297                           ; Regs used in _lcdWriteChar: [wreg+status,2+status,0+pclath+cstack]
  4298                           ;lcdWriteChar@a stored from wreg
  4299  0DE8  00F4               	movwf	lcdWriteChar@a
  4300                           
  4301                           ;./lcd.h: 94:     char temp, y;;./lcd.h: 95:     temp = a & 0x0F;
  4302  0DE9  0874               	movf	lcdWriteChar@a,w
  4303  0DEA  390F               	andlw	15
  4304  0DEB  00F1               	movwf	??_lcdWriteChar
  4305  0DEC  0871               	movf	??_lcdWriteChar,w
  4306  0DED  00F2               	movwf	lcdWriteChar@temp
  4307                           
  4308                           ;./lcd.h: 96:     y = a & 0xF0;
  4309  0DEE  0874               	movf	lcdWriteChar@a,w
  4310  0DEF  39F0               	andlw	240
  4311  0DF0  00F1               	movwf	??_lcdWriteChar
  4312  0DF1  0871               	movf	??_lcdWriteChar,w
  4313  0DF2  00F3               	movwf	lcdWriteChar@y
  4314                           
  4315                           ;./lcd.h: 97:     RD2 = 1;
  4316  0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  4317  0DF4  1303               	bcf	3,6	;RP1=0, select bank0
  4318  0DF5  1508               	bsf	8,2	;volatile
  4319                           
  4320                           ;./lcd.h: 98:     lcdPort(y >> 4);
  4321  0DF6  0873               	movf	lcdWriteChar@y,w
  4322  0DF7  00F1               	movwf	??_lcdWriteChar
  4323  0DF8  3004               	movlw	4
  4324  0DF9                     u2385:	
  4325  0DF9  1003               	clrc
  4326  0DFA  0CF1               	rrf	??_lcdWriteChar,f
  4327  0DFB  3EFF               	addlw	-1
  4328  0DFC  1D03               	skipz
  4329  0DFD  2DF9               	goto	u2385
  4330  0DFE  0871               	movf	??_lcdWriteChar,w
  4331  0DFF  120A  158A  24C2  120A  158A  	fcall	_lcdPort
  4332                           
  4333                           ;./lcd.h: 99:     RD3 = 1;
  4334  0E04  1283               	bcf	3,5	;RP0=0, select bank0
  4335  0E05  1303               	bcf	3,6	;RP1=0, select bank0
  4336  0E06  1588               	bsf	8,3	;volatile
  4337                           
  4338                           ;./lcd.h: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4339  0E07  300D               	movlw	13
  4340  0E08  00F1               	movwf	??_lcdWriteChar
  4341  0E09                     u2807:	
  4342  0E09  0BF1               	decfsz	??_lcdWriteChar,f
  4343  0E0A  2E09               	goto	u2807
  4344                           
  4345                           ;./lcd.h: 101:     RD3 = 0;
  4346  0E0B  1283               	bcf	3,5	;RP0=0, select bank0
  4347  0E0C  1303               	bcf	3,6	;RP1=0, select bank0
  4348  0E0D  1188               	bcf	8,3	;volatile
  4349                           
  4350                           ;./lcd.h: 102:     lcdPort(temp);
  4351  0E0E  0872               	movf	lcdWriteChar@temp,w
  4352  0E0F  120A  158A  24C2  120A  158A  	fcall	_lcdPort
  4353                           
  4354                           ;./lcd.h: 103:     RD3 = 1;
  4355  0E14  1283               	bcf	3,5	;RP0=0, select bank0
  4356  0E15  1303               	bcf	3,6	;RP1=0, select bank0
  4357  0E16  1588               	bsf	8,3	;volatile
  4358                           
  4359                           ;./lcd.h: 104:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4360  0E17  300D               	movlw	13
  4361  0E18  00F1               	movwf	??_lcdWriteChar
  4362  0E19                     u2817:	
  4363  0E19  0BF1               	decfsz	??_lcdWriteChar,f
  4364  0E1A  2E19               	goto	u2817
  4365                           
  4366                           ;./lcd.h: 105:     RD3 = 0;
  4367  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  4368  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  4369  0E1D  1188               	bcf	8,3	;volatile
  4370  0E1E  0008               	return
  4371  0E1F                     __end_of_lcdWriteChar:	
  4372                           
  4373                           	psect	text19
  4374  0F32                     __ptext19:	
  4375 ;; *************** function _lcdInit *****************
  4376 ;; Defined at:
  4377 ;;		line 73 in file "./lcd.h"
  4378 ;; Parameters:    Size  Location     Type
  4379 ;;		None
  4380 ;; Auto vars:     Size  Location     Type
  4381 ;;		None
  4382 ;; Return value:  Size  Location     Type
  4383 ;;                  1    wreg      void 
  4384 ;; Registers used:
  4385 ;;		wreg, status,2, status,0, pclath, cstack
  4386 ;; Tracked objects:
  4387 ;;		On entry : 0/0
  4388 ;;		On exit  : 0/0
  4389 ;;		Unchanged: 0/0
  4390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4391 ;;      Params:         0       0       0       0       0
  4392 ;;      Locals:         0       0       0       0       0
  4393 ;;      Temps:          2       0       0       0       0
  4394 ;;      Totals:         2       0       0       0       0
  4395 ;;Total ram usage:        2 bytes
  4396 ;; Hardware stack levels used:    1
  4397 ;; Hardware stack levels required when called:    2
  4398 ;; This function calls:
  4399 ;;		_lcdCmd
  4400 ;;		_lcdPort
  4401 ;; This function is called by:
  4402 ;;		_main
  4403 ;; This function uses a non-reentrant model
  4404 ;;
  4405                           
  4406                           
  4407                           ;psect for function _lcdInit
  4408  0F32                     _lcdInit:	
  4409                           
  4410                           ;./lcd.h: 74:     TRISD = 0;
  4411                           
  4412                           ;incstack = 0
  4413                           ; Regs used in _lcdInit: [wreg+status,2+status,0+pclath+cstack]
  4414  0F32  1683               	bsf	3,5	;RP0=1, select bank1
  4415  0F33  1303               	bcf	3,6	;RP1=0, select bank1
  4416  0F34  0188               	clrf	8	;volatile
  4417                           
  4418                           ;./lcd.h: 75:     PORTD = 0;
  4419  0F35  1283               	bcf	3,5	;RP0=0, select bank0
  4420  0F36  1303               	bcf	3,6	;RP1=0, select bank0
  4421  0F37  0188               	clrf	8	;volatile
  4422                           
  4423                           ;./lcd.h: 76:     lcdPort(0x00);
  4424  0F38  3000               	movlw	0
  4425  0F39  120A  158A  24C2  120A  158A  	fcall	_lcdPort
  4426                           
  4427                           ;./lcd.h: 77:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4428  0F3E  301A               	movlw	26
  4429  0F3F  00F5               	movwf	??_lcdInit+1
  4430  0F40  30F8               	movlw	248
  4431  0F41  00F4               	movwf	??_lcdInit
  4432  0F42                     u2827:	
  4433  0F42  0BF4               	decfsz	??_lcdInit,f
  4434  0F43  2F42               	goto	u2827
  4435  0F44  0BF5               	decfsz	??_lcdInit+1,f
  4436  0F45  2F42               	goto	u2827
  4437  0F46  0000               	nop
  4438                           
  4439                           ;./lcd.h: 78:     lcdCmd(0x03);
  4440  0F47  3003               	movlw	3
  4441  0F48  120A  158A  24DC  120A  158A  	fcall	_lcdCmd
  4442                           
  4443                           ;./lcd.h: 79:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4444  0F4D  3007               	movlw	7
  4445  0F4E  00F5               	movwf	??_lcdInit+1
  4446  0F4F  307D               	movlw	125
  4447  0F50  00F4               	movwf	??_lcdInit
  4448  0F51                     u2837:	
  4449  0F51  0BF4               	decfsz	??_lcdInit,f
  4450  0F52  2F51               	goto	u2837
  4451  0F53  0BF5               	decfsz	??_lcdInit+1,f
  4452  0F54  2F51               	goto	u2837
  4453                           
  4454                           ;./lcd.h: 80:     lcdCmd(0x03);
  4455  0F55  3003               	movlw	3
  4456  0F56  120A  158A  24DC  120A  158A  	fcall	_lcdCmd
  4457                           
  4458                           ;./lcd.h: 81:     _delay((unsigned long)((11)*(4000000/4000.0)));
  4459  0F5B  300F               	movlw	15
  4460  0F5C  00F5               	movwf	??_lcdInit+1
  4461  0F5D  3047               	movlw	71
  4462  0F5E  00F4               	movwf	??_lcdInit
  4463  0F5F                     u2847:	
  4464  0F5F  0BF4               	decfsz	??_lcdInit,f
  4465  0F60  2F5F               	goto	u2847
  4466  0F61  0BF5               	decfsz	??_lcdInit+1,f
  4467  0F62  2F5F               	goto	u2847
  4468  0F63  2F64               	nop2
  4469                           
  4470                           ;./lcd.h: 82:     lcdCmd(0x03);
  4471  0F64  3003               	movlw	3
  4472  0F65  120A  158A  24DC  120A  158A  	fcall	_lcdCmd
  4473                           
  4474                           ;./lcd.h: 84:     lcdCmd(0x02);
  4475  0F6A  3002               	movlw	2
  4476  0F6B  120A  158A  24DC  120A  158A  	fcall	_lcdCmd
  4477                           
  4478                           ;./lcd.h: 85:     lcdCmd(0x02);
  4479  0F70  3002               	movlw	2
  4480  0F71  120A  158A  24DC  120A  158A  	fcall	_lcdCmd
  4481                           
  4482                           ;./lcd.h: 86:     lcdCmd(0x08);
  4483  0F76  3008               	movlw	8
  4484  0F77  120A  158A  24DC  120A  158A  	fcall	_lcdCmd
  4485                           
  4486                           ;./lcd.h: 87:     lcdCmd(0x00);
  4487  0F7C  3000               	movlw	0
  4488  0F7D  120A  158A  24DC  120A  158A  	fcall	_lcdCmd
  4489                           
  4490                           ;./lcd.h: 88:     lcdCmd(0x0C);
  4491  0F82  300C               	movlw	12
  4492  0F83  120A  158A  24DC  120A  158A  	fcall	_lcdCmd
  4493                           
  4494                           ;./lcd.h: 89:     lcdCmd(0x00);
  4495  0F88  3000               	movlw	0
  4496  0F89  120A  158A  24DC  120A  158A  	fcall	_lcdCmd
  4497                           
  4498                           ;./lcd.h: 90:     lcdCmd(0x06);
  4499  0F8E  3006               	movlw	6
  4500  0F8F  120A  158A  24DC   	fcall	_lcdCmd
  4501  0F92  0008               	return
  4502  0F93                     __end_of_lcdInit:	
  4503                           
  4504                           	psect	text20
  4505  0CB7                     __ptext20:	
  4506 ;; *************** function _lcdClear *****************
  4507 ;; Defined at:
  4508 ;;		line 51 in file "./lcd.h"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;		None
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;		None
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  1    wreg      void 
  4515 ;; Registers used:
  4516 ;;		wreg, status,2, status,0, pclath, cstack
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4522 ;;      Params:         0       0       0       0       0
  4523 ;;      Locals:         0       0       0       0       0
  4524 ;;      Temps:          0       0       0       0       0
  4525 ;;      Totals:         0       0       0       0       0
  4526 ;;Total ram usage:        0 bytes
  4527 ;; Hardware stack levels used:    1
  4528 ;; Hardware stack levels required when called:    2
  4529 ;; This function calls:
  4530 ;;		_lcdCmd
  4531 ;; This function is called by:
  4532 ;;		_main
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           
  4537                           ;psect for function _lcdClear
  4538  0CB7                     _lcdClear:	
  4539                           
  4540                           ;./lcd.h: 52:     lcdCmd(0);
  4541                           
  4542                           ;incstack = 0
  4543                           ; Regs used in _lcdClear: [wreg+status,2+status,0+pclath+cstack]
  4544  0CB7  3000               	movlw	0
  4545  0CB8  120A  158A  24DC  120A  158A  	fcall	_lcdCmd
  4546                           
  4547                           ;./lcd.h: 53:     lcdCmd(1);
  4548  0CBD  3001               	movlw	1
  4549  0CBE  120A  158A  24DC   	fcall	_lcdCmd
  4550  0CC1  0008               	return
  4551  0CC2                     __end_of_lcdClear:	
  4552                           
  4553                           	psect	text21
  4554  0CDC                     __ptext21:	
  4555 ;; *************** function _lcdCmd *****************
  4556 ;; Defined at:
  4557 ;;		line 43 in file "./lcd.h"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;  a               1    wreg     unsigned char 
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;  a               1    3[COMMON] unsigned char 
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  1    wreg      void 
  4564 ;; Registers used:
  4565 ;;		wreg, status,2, status,0, pclath, cstack
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4571 ;;      Params:         0       0       0       0       0
  4572 ;;      Locals:         1       0       0       0       0
  4573 ;;      Temps:          2       0       0       0       0
  4574 ;;      Totals:         3       0       0       0       0
  4575 ;;Total ram usage:        3 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:    1
  4578 ;; This function calls:
  4579 ;;		_lcdPort
  4580 ;; This function is called by:
  4581 ;;		_lcdClear
  4582 ;;		_lcdSetCursor
  4583 ;;		_lcdInit
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587                           
  4588                           ;psect for function _lcdCmd
  4589  0CDC                     _lcdCmd:	
  4590                           
  4591                           ;incstack = 0
  4592                           ; Regs used in _lcdCmd: [wreg+status,2+status,0+pclath+cstack]
  4593                           ;lcdCmd@a stored from wreg
  4594  0CDC  00F3               	movwf	lcdCmd@a
  4595                           
  4596                           ;./lcd.h: 44:     RD2 = 0;
  4597  0CDD  1283               	bcf	3,5	;RP0=0, select bank0
  4598  0CDE  1303               	bcf	3,6	;RP1=0, select bank0
  4599  0CDF  1108               	bcf	8,2	;volatile
  4600                           
  4601                           ;./lcd.h: 45:     lcdPort(a);
  4602  0CE0  0873               	movf	lcdCmd@a,w
  4603  0CE1  120A  158A  24C2  120A  158A  	fcall	_lcdPort
  4604                           
  4605                           ;./lcd.h: 46:     RD3 = 1;
  4606  0CE6  1283               	bcf	3,5	;RP0=0, select bank0
  4607  0CE7  1303               	bcf	3,6	;RP1=0, select bank0
  4608  0CE8  1588               	bsf	8,3	;volatile
  4609                           
  4610                           ;./lcd.h: 47:     _delay((unsigned long)((4)*(4000000/4000.0)));
  4611  0CE9  3006               	movlw	6
  4612  0CEA  00F2               	movwf	??_lcdCmd+1
  4613  0CEB  3030               	movlw	48
  4614  0CEC  00F1               	movwf	??_lcdCmd
  4615  0CED                     u2857:	
  4616  0CED  0BF1               	decfsz	??_lcdCmd,f
  4617  0CEE  2CED               	goto	u2857
  4618  0CEF  0BF2               	decfsz	??_lcdCmd+1,f
  4619  0CF0  2CED               	goto	u2857
  4620  0CF1  0000               	nop
  4621                           
  4622                           ;./lcd.h: 48:     RD3 = 0;
  4623  0CF2  1283               	bcf	3,5	;RP0=0, select bank0
  4624  0CF3  1303               	bcf	3,6	;RP1=0, select bank0
  4625  0CF4  1188               	bcf	8,3	;volatile
  4626  0CF5  0008               	return
  4627  0CF6                     __end_of_lcdCmd:	
  4628                           
  4629                           	psect	text22
  4630  0CC2                     __ptext22:	
  4631 ;; *************** function _lcdPort *****************
  4632 ;; Defined at:
  4633 ;;		line 21 in file "./lcd.h"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;  a               1    wreg     unsigned char 
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;  a               1    0[COMMON] unsigned char 
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  1    wreg      void 
  4640 ;; Registers used:
  4641 ;;		wreg
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4647 ;;      Params:         0       0       0       0       0
  4648 ;;      Locals:         1       0       0       0       0
  4649 ;;      Temps:          0       0       0       0       0
  4650 ;;      Totals:         1       0       0       0       0
  4651 ;;Total ram usage:        1 bytes
  4652 ;; Hardware stack levels used:    1
  4653 ;; This function calls:
  4654 ;;		Nothing
  4655 ;; This function is called by:
  4656 ;;		_lcdCmd
  4657 ;;		_lcdInit
  4658 ;;		_lcdWriteChar
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           
  4663                           ;psect for function _lcdPort
  4664  0CC2                     _lcdPort:	
  4665                           
  4666                           ;incstack = 0
  4667                           ; Regs used in _lcdPort: [wreg]
  4668                           ;lcdPort@a stored from wreg
  4669  0CC2  00F0               	movwf	lcdPort@a
  4670                           
  4671                           ;./lcd.h: 22:     if (a & 1)
  4672  0CC3  1C70               	btfss	lcdPort@a,0
  4673  0CC4  2CC9               	goto	l100
  4674                           
  4675                           ;./lcd.h: 23:         RD4 = 1;
  4676  0CC5  1283               	bcf	3,5	;RP0=0, select bank0
  4677  0CC6  1303               	bcf	3,6	;RP1=0, select bank0
  4678  0CC7  1608               	bsf	8,4	;volatile
  4679  0CC8  2CCC               	goto	l101
  4680  0CC9                     l100:	
  4681                           ;./lcd.h: 24:     else
  4682                           
  4683                           
  4684                           ;./lcd.h: 25:         RD4 = 0;
  4685  0CC9  1283               	bcf	3,5	;RP0=0, select bank0
  4686  0CCA  1303               	bcf	3,6	;RP1=0, select bank0
  4687  0CCB  1208               	bcf	8,4	;volatile
  4688  0CCC                     l101:	
  4689                           
  4690                           ;./lcd.h: 27:     if (a & 2)
  4691  0CCC  1CF0               	btfss	lcdPort@a,1
  4692  0CCD  2CD0               	goto	l102
  4693                           
  4694                           ;./lcd.h: 28:         RD5 = 1;
  4695  0CCE  1688               	bsf	8,5	;volatile
  4696  0CCF  2CD1               	goto	l103
  4697  0CD0                     l102:	
  4698                           ;./lcd.h: 29:     else
  4699                           
  4700                           
  4701                           ;./lcd.h: 30:         RD5 = 0;
  4702  0CD0  1288               	bcf	8,5	;volatile
  4703  0CD1                     l103:	
  4704                           
  4705                           ;./lcd.h: 32:     if (a & 4)
  4706  0CD1  1D70               	btfss	lcdPort@a,2
  4707  0CD2  2CD5               	goto	l104
  4708                           
  4709                           ;./lcd.h: 33:         RD6 = 1;
  4710  0CD3  1708               	bsf	8,6	;volatile
  4711  0CD4  2CD6               	goto	l105
  4712  0CD5                     l104:	
  4713                           ;./lcd.h: 34:     else
  4714                           
  4715                           
  4716                           ;./lcd.h: 35:         RD6 = 0;
  4717  0CD5  1308               	bcf	8,6	;volatile
  4718  0CD6                     l105:	
  4719                           
  4720                           ;./lcd.h: 37:     if (a & 8)
  4721  0CD6  1DF0               	btfss	lcdPort@a,3
  4722  0CD7  2CDA               	goto	l106
  4723                           
  4724                           ;./lcd.h: 38:         RD7 = 1;
  4725  0CD8  1788               	bsf	8,7	;volatile
  4726  0CD9  0008               	return
  4727  0CDA                     l106:	
  4728                           ;./lcd.h: 39:     else
  4729                           
  4730                           
  4731                           ;./lcd.h: 40:         RD7 = 0;
  4732  0CDA  1388               	bcf	8,7	;volatile
  4733  0CDB  0008               	return
  4734  0CDC                     __end_of_lcdPort:	
  4735                           
  4736                           	psect	text23
  4737  0D13                     __ptext23:	
  4738 ;; *************** function _adcRead *****************
  4739 ;; Defined at:
  4740 ;;		line 35 in file "./adc.h"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;  adcChannel      2    0[COMMON] const int 
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;		None
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  2    0[COMMON] int 
  4747 ;; Registers used:
  4748 ;;		wreg, status,2, status,0
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 0/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4754 ;;      Params:         2       0       0       0       0
  4755 ;;      Locals:         0       0       0       0       0
  4756 ;;      Temps:          2       0       0       0       0
  4757 ;;      Totals:         4       0       0       0       0
  4758 ;;Total ram usage:        4 bytes
  4759 ;; Hardware stack levels used:    1
  4760 ;; This function calls:
  4761 ;;		Nothing
  4762 ;; This function is called by:
  4763 ;;		_main
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           
  4768                           ;psect for function _adcRead
  4769  0D13                     _adcRead:	
  4770                           
  4771                           ;./adc.h: 36:     ADCON0bits.ADON = 1;
  4772                           
  4773                           ;incstack = 0
  4774                           ; Regs used in _adcRead: [wreg+status,2+status,0]
  4775  0D13  1283               	bcf	3,5	;RP0=0, select bank0
  4776  0D14  1303               	bcf	3,6	;RP1=0, select bank0
  4777  0D15  141F               	bsf	31,0	;volatile
  4778                           
  4779                           ;./adc.h: 37:     ADCON0bits.CHS = adcChannel;
  4780  0D16  0870               	movf	adcRead@adcChannel,w
  4781  0D17  00F2               	movwf	??_adcRead
  4782  0D18  0DF2               	rlf	??_adcRead,f
  4783  0D19  0DF2               	rlf	??_adcRead,f
  4784  0D1A  0DF2               	rlf	??_adcRead,f
  4785  0D1B  081F               	movf	31,w	;volatile
  4786  0D1C  0672               	xorwf	??_adcRead,w
  4787  0D1D  39C7               	andlw	-57
  4788  0D1E  0672               	xorwf	??_adcRead,w
  4789  0D1F  009F               	movwf	31	;volatile
  4790                           
  4791                           ;./adc.h: 38:     _delay((unsigned long)((10)*(4000000/4000.0)));
  4792  0D20  300D               	movlw	13
  4793  0D21  00F3               	movwf	??_adcRead+1
  4794  0D22  30FB               	movlw	251
  4795  0D23  00F2               	movwf	??_adcRead
  4796  0D24                     u2867:	
  4797  0D24  0BF2               	decfsz	??_adcRead,f
  4798  0D25  2D24               	goto	u2867
  4799  0D26  0BF3               	decfsz	??_adcRead+1,f
  4800  0D27  2D24               	goto	u2867
  4801  0D28  2D29               	nop2
  4802                           
  4803                           ;./adc.h: 39:     ADCON0bits.GO = 1;
  4804  0D29  1283               	bcf	3,5	;RP0=0, select bank0
  4805  0D2A  1303               	bcf	3,6	;RP1=0, select bank0
  4806  0D2B  151F               	bsf	31,2	;volatile
  4807  0D2C                     l138:	
  4808                           ;./adc.h: 40:     while (ADCON0bits.GO_DONE);
  4809                           
  4810  0D2C  191F               	btfsc	31,2	;volatile
  4811  0D2D  2D2C               	goto	l138
  4812                           
  4813                           ;./adc.h: 42:     return (ADRESH << 8) + (ADRESL);
  4814  0D2E  081E               	movf	30,w	;volatile
  4815  0D2F  00F1               	movwf	?_adcRead+1
  4816  0D30  1683               	bsf	3,5	;RP0=1, select bank1
  4817  0D31  1303               	bcf	3,6	;RP1=0, select bank1
  4818  0D32  081E               	movf	30,w	;volatile
  4819  0D33  00F0               	movwf	?_adcRead
  4820  0D34  0008               	return
  4821  0D35                     __end_of_adcRead:	
  4822                           
  4823                           	psect	text24
  4824  000B                     __ptext24:	
  4825 ;; *************** function _adcInit *****************
  4826 ;; Defined at:
  4827 ;;		line 1 in file "./adc.h"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;		None
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;		None
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  1    wreg      void 
  4834 ;; Registers used:
  4835 ;;		wreg, status,2, status,0
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4841 ;;      Params:         0       0       0       0       0
  4842 ;;      Locals:         0       0       0       0       0
  4843 ;;      Temps:          0       0       0       0       0
  4844 ;;      Totals:         0       0       0       0       0
  4845 ;;Total ram usage:        0 bytes
  4846 ;; Hardware stack levels used:    1
  4847 ;; This function calls:
  4848 ;;		Nothing
  4849 ;; This function is called by:
  4850 ;;		_main
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           
  4855                           ;psect for function _adcInit
  4856  000B                     _adcInit:	
  4857                           
  4858                           ;./adc.h: 11:     ADCON0bits.ADCS = 0b01;
  4859                           
  4860                           ;incstack = 0
  4861                           ; Regs used in _adcInit: [wreg+status,2+status,0]
  4862  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4863  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4864  000D  081F               	movf	31,w	;volatile
  4865  000E  393F               	andlw	-193
  4866  000F  3840               	iorlw	64
  4867  0010  009F               	movwf	31	;volatile
  4868                           
  4869                           ;./adc.h: 12:     ADCON0bits.CHS = 0b000;
  4870  0011  30C7               	movlw	-57
  4871  0012  059F               	andwf	31,f	;volatile
  4872                           
  4873                           ;./adc.h: 13:     ADCON0bits.ADON = 0;
  4874  0013  101F               	bcf	31,0	;volatile
  4875                           
  4876                           ;./adc.h: 24:     ADCON1bits.ADFM = 1;
  4877  0014  1683               	bsf	3,5	;RP0=1, select bank1
  4878  0015  1303               	bcf	3,6	;RP1=0, select bank1
  4879  0016  179F               	bsf	31,7	;volatile
  4880                           
  4881                           ;./adc.h: 25:     ADCON1bits.ADCS2 = 1;
  4882  0017  171F               	bsf	31,6	;volatile
  4883                           
  4884                           ;./adc.h: 26:     ADCON1bits.PCFG = 0b0000;
  4885  0018  30F0               	movlw	-16
  4886  0019  059F               	andwf	31,f	;volatile
  4887  001A  0008               	return
  4888  001B                     __end_of_adcInit:	
  4889  007E                     btemp	set	126	;btemp
  4890  007E                     wtemp0	set	126


Data Sizes:
    Strings     50
    Constant    10
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     77      77
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_4(CODE[10]), STR_3(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> entero(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcdPrint@a	PTR unsigned char  size(2) Largest target is 16
		 -> entero(BANK1[16]), STR_2(CODE[16]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setDuty->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _pwmInit2->_setTMR2
    _pwmInit1->_setTMR2
    _lcdSetCursor->_lcdCmd
    _lcdPrint->_lcdWriteChar
    _lcdWriteChar->_lcdPort
    _lcdInit->_lcdCmd
    _lcdClear->_lcdCmd
    _lcdCmd->_lcdPort

Critical Paths under _main in BANK0

    _main->_pwmSetDuty1
    _main->_pwmSetDuty2
    _pwmSetDuty2->_setDuty
    _pwmSetDuty1->_setDuty
    _setDuty->___fltol
    ___fltol->___fldiv
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   20138
                                             69 BANK0      8     8      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _adcInit
                            _adcRead
                           _lcdClear
                            _lcdInit
                           _lcdPrint
                       _lcdSetCursor
                           _pwmInit1
                           _pwmInit2
                        _pwmSetDuty1
                        _pwmSetDuty2
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1365
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _pwmSetDuty2                                          4     2      2    5796
                                             65 BANK0      4     2      2
                            _setDuty
 ---------------------------------------------------------------------------------
 (1) _pwmSetDuty1                                          4     2      2    5720
                                             65 BANK0      4     2      2
                            _setDuty
 ---------------------------------------------------------------------------------
 (2) _setDuty                                              2     0      2    5479
                                             63 BANK0      2     0      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     457
                                             52 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    2721
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1577
                                             26 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _pwmInit2                                             0     0      0      44
                             _setPR2
                            _setTMR2
 ---------------------------------------------------------------------------------
 (1) _pwmInit1                                             0     0      0      44
                             _setPR2
                            _setTMR2
 ---------------------------------------------------------------------------------
 (2) _setTMR2                                              1     1      0      44
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setPR2                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcdSetCursor                                         7     6      1     684
                                              4 COMMON     7     6      1
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             7     5      2     572
                                              5 COMMON     7     5      2
                       _lcdWriteChar
 ---------------------------------------------------------------------------------
 (2) _lcdWriteChar                                         4     4      0     178
                                              1 COMMON     4     4      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              2     2      0     198
                                              4 COMMON     2     2      0
                             _lcdCmd
                            _lcdPort
 ---------------------------------------------------------------------------------
 (1) _lcdClear                                             0     0      0     110
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (2) _lcdCmd                                               3     3      0     110
                                              1 COMMON     3     3      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (3) _lcdPort                                              1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adcRead                                              4     2      2      98
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___fldiv (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _adcInit
   _adcRead
   _lcdClear
     _lcdCmd
       _lcdPort
   _lcdInit
     _lcdCmd
       _lcdPort
     _lcdPort
   _lcdPrint
     _lcdWriteChar
       _lcdPort
   _lcdSetCursor
     _lcdCmd
       _lcdPort
   _pwmInit1
     _setPR2
     _setTMR2
   _pwmInit2
     _setPR2
     _setTMR2
   _pwmSetDuty1
     _setDuty
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
   _pwmSetDuty2
     _setDuty
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      6B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      4D       5       96.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      10       7       20.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      6B      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed May 15 18:52:45 2019

           ___fldiv@aexp 0053             ___fldiv@bexp 0052                        pc 0002  
           ___fldiv@sign 004B                       l93 0D00                       l94 0D04  
                     l95 0D0F                       fsr 0004      __Umul8_16@word_mpld 0076  
                    l100 0CC9                      l101 0CCC                      l102 0CD0  
                    l103 0CD1                      l104 0CD5                      l105 0CD6  
                    l106 0CDA                      l151 0464                      l138 0D2C  
                    l149 044F                      l462 0FE2                      l710 0098  
                    l702 0078                      l640 0323                      l642 0331  
                    l618 01E4                      l715 0D47                      l709 008E  
                    l670 07E8                      l696 0038                      _RB0 0030  
                    _RB1 0031                      _RD2 0042                      _RD3 0043  
                    _RD4 0044                      _RD5 0045                      _RD6 0046  
                    _RD7 0047                      _PR2 0092                      fsr0 0004  
                    indf 0000             ___flmul@aexp 0032             ___flmul@bexp 0033  
           ___flmul@sign 002D             ___flmul@temp 0038             ___flmul@prod 0034  
         ??_lcdWriteChar 0071            lcdWriteChar@a 0074            lcdWriteChar@y 0073  
           ___fltol@exp1 005E                     l2005 0D79                     l2033 0EBD  
                   l2017 0DA8                     l2105 00D9                     l2203 03B1  
                   l2141 013D                     l2109 00E5                     l2135 011C  
                   l2119 0103                     l2129 011A                     l2155 0150  
                   l2147 014C                     l1613 01DC                     l1541 0F9E  
                   l2157 00C5                     l2079 0E5D                     l1711 032D  
                   l1623 0203                     l1519 0D3F                     l2159 0191  
                   l2255 00F8                     l1609 01D9                     l1561 0FCE  
                   l1545 0FA7                     l1731 04FD                     l1571 0FF1  
                   l1563 0FDE                     l1629 020F                     l1821 076E  
                   l1813 073A                     l1733 04FF                     l1655 027D  
                   l1815 0757                     l1751 0524                     l1735 0507  
                   l1681 02BC                     l1673 0288                     l1649 025E  
                   l1657 023A                     l1593 01B6                     l1825 0770  
                   l1761 053A                     l1753 052C                     l1675 02A5  
                   l1659 0282                     l1595 01BE                     l1835 07A2  
                   l1685 02BE                     l1589 01B3                     l1845 07D1  
                   l1749 0522                     l1695 02F0                     l1839 07B8  
                   l1863 0030                     l1873 004B                     l1699 0309  
                   l1883 008C                     l1875 005D                     l1963 0E4B  
                   l1955 0E27                     l1885 007D                     l1869 0047  
                   l1957 0E35                     l1981 0DCA                     l1967 0E56  
                   l1897 00B5                     l1985 0DD8                     l1979 0DBC  
                   l1989 0DE3                     STR_1 082A                     STR_2 081A  
                   STR_3 0838                     STR_4 0842                     u2005 0647  
                   u2115 0749                     u1405 0D48                     u2205 07C3  
                   u2045 06E3                     u2065 0708                     u1505 0FCF  
                   u2085 0726                     u2405 0E2A                     u2095 073E  
                   u1535 0FE7                     u2335 00A0                     u2255 0054  
                   u2185 078D                     u2425 0E36                     u2505 0DD9  
                   u2530 0D76                     u2195 07AB                     u1475 0FB0  
                   u2275 0070                     u2435 0E42                     u1725 028C  
                   u2445 0E4C                     u2615 0EC9                     u1815 02DB  
                   u1655 0243                     u2295 0085                     u2560 0DA5  
                   u2385 0DF9                     u1825 02F9                     u1745 0297  
                   u1665 024C                     u1835 0314                     u2475 0DBF  
                   u1685 0257                     u2807 0E09                     u1695 026C  
                   u2495 0DD0                     u2817 0E19                     u2827 0F42  
                   u2595 0EA4                     u2837 0F51                     u2685 0133  
                   u2847 0F5F                     u1975 05EA                     u2857 0CED  
                   u2777 0366                     u2867 0D24                     u2787 03A4  
                   u2797 04DA                     _main 0339                     btemp 007E  
                   start 0000          ___fldiv@new_exp 004C            ___fltol@sign1 005D  
                  ?_main 0070          __end_of_adcInit 001B                    _CCP1X 00BD  
        __end_of___fldiv 0339                    _CCP1Y 00BC                    _CCP2X 00ED  
        __end_of_adcRead 0D35                    _CCP2Y 00EC          __end_of___flmul 07F5  
        __end_of___fltol 1000          __end_of___lwdiv 0E5B          __end_of___lwmod 0DE8  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088          __end_of_lcdInit 0F93          __end_of_lcdPort 0CDC  
        __end_of_dpowers 081A          __end_of_setTMR2 0D13                    main@m 0069  
                  main@v 0067          __end_of_setDuty 0F32                    pclath 000A  
                  status 0003                    wtemp0 007E          __end_of_sprintf 0196  
        __initialization 07F5             __end_of_main 04E0                   ??_main 0065  
   __end_of_lcdSetCursor 0EE2                   _CCP1M2 00BA                   _CCP1M3 00BB  
                 _CCP2M2 00EA                   _CCP2M3 00EB                   _ADRESH 001E  
                 _ADRESL 009E                   _CCPR1L 0015                   _CCPR2L 001B  
        pwmSetDuty1@duty 0061          pwmSetDuty2@duty 0061                   _TMR2ON 0092  
                 _TRISC1 0439                   _TRISC2 043A         __end_of___xxtofl 00BE  
       __end_of_lcdClear 0CC2         __end_of_lcdPrint 0E98                ??_adcInit 0070  
              ??___fldiv 0042                ??_adcRead 0072     __end_of_lcdWriteChar 0E1F  
              ??___flmul 0028                ??___fltol 0058                   _lcdCmd 0CDC  
              ??___lwdiv 0074                ??___lwmod 007C                   _entero 00A0  
                 _setPR2 0C9E                ??_lcdInit 0074                ??_lcdPort 0070  
              ??_setTMR2 0070       __size_of__Umul8_16 0023         __end_of_pwmInit1 0CAD  
       __end_of_pwmInit2 0CB7                ??_setDuty 007E             ?_pwmSetDuty1 0061  
           ?_pwmSetDuty2 0061                ??_sprintf 0023             ___xxtofl@arg 007A  
           ___xxtofl@exp 0079             ___xxtofl@val 0070  __end_of__initialization 07FC  
             ___fltol@f1 0054           __pcstackCOMMON 0070         lcdWriteChar@temp 0072  
             __pbssBANK1 00A0        __end_of__Umul8_16 0D58               __pmaintext 0339  
                ?_lcdCmd 0070    __size_of_lcdSetCursor 004A                  ?_setPR2 0070  
            setDuty@duty 005F                  _T2CKPS0 0090                  _T2CKPS1 0091  
              ?___xxtofl 0070                ?_lcdClear 0070                ?_lcdPrint 0075  
             __stringtab 0800    __size_of_lcdWriteChar 0037             _lcdSetCursor 0E98  
              ?_pwmInit1 0070                ?_pwmInit2 0070                  _adcInit 000B  
                ___fldiv 0196                  _adcRead 0D13                  ___flmul 04E0  
                ___fltol 0F93                  ___lwdiv 0E1F                  ___lwmod 0DB6  
        __size_of_lcdCmd 001A          __size_of_setPR2 0005                  _lcdInit 0F32  
                __ptext1 00BE                  __ptext2 0DB6                  __ptext3 0E1F  
                __ptext4 0D87                  __ptext5 0D58                  __ptext6 0EE2  
                __ptext7 001B                  __ptext8 0F93                  __ptext9 04E0  
                _lcdPort 0CC2                  _dpowers 0810               ??___xxtofl 0074  
                _setTMR2 0CF6                  lcdCmd@a 0073                  _setDuty 0EE2  
             ??_lcdClear 0074               ??_lcdPrint 0077                  _sprintf 00BE  
                clrloop0 0004             _lcdWriteChar 0DE8     end_of_initialization 07FC  
   __size_of_pwmSetDuty1 002F     __size_of_pwmSetDuty2 002F               ??_pwmInit1 0071  
             ??_pwmInit2 0071            ___xxtofl@sign 0078              ___fldiv@grs 004E  
            ___fldiv@rem 0047              ___flmul@grs 002E           __end_of_lcdCmd 0CF6  
         __end_of_setPR2 0CA3      start_initialization 07F5                 ??_lcdCmd 0071  
              __Umul8_16 0D35                 ??_setPR2 0070                ___fldiv@a 003A  
              ___fldiv@b 003E                ___flmul@a 0024                ___flmul@b 0020  
              ___latbits 0002               setTMR2@pwm 0070            __pcstackBANK0 0020  
      __size_of___xxtofl 00A3        __size_of_lcdClear 000B        __size_of_lcdPrint 003D  
            sprintf@flag 0027              sprintf@prec 0028         ___lwdiv@dividend 0072  
               ?_adcInit 0070                 ?___fldiv 003A                 ?_adcRead 0070  
               ?___flmul 0020                 ?___fltol 0054               ?__Umul8_16 0070  
               ?___lwdiv 0070                 ?___lwmod 0078        __size_of_pwmInit1 000A  
      __size_of_pwmInit2 000A                __pstrings 0800                 ?_lcdInit 0070  
               ?_lcdPort 0070        adcRead@adcChannel 0070                 ?_setTMR2 0070  
               ?_setDuty 005F         ___lwdiv@quotient 0075                 ?_sprintf 0020  
              clear_ram0 0003                lcdPrint@a 0075                lcdPrint@i 007A  
             _ADCON0bits 001F              __stringbase 080F               _ADCON1bits 009F  
          ??_pwmSetDuty1 0063            ??_pwmSetDuty2 0063         lcdSetCursor@temp 007A  
            ??__Umul8_16 0072         __size_of_adcInit 0010         __size_of___fldiv 01A3  
       __size_of_adcRead 0022         __size_of___flmul 0315         __size_of___fltol 006D  
       __size_of___lwdiv 003C         __size_of___lwmod 0032       __end_of__stringtab 0810  
       __size_of_lcdInit 0061         __size_of_lcdPort 001A               sprintf@val 0029  
               ___xxtofl 001B         __size_of_setTMR2 001D                 _lcdClear 0CB7  
        ___lwdiv@divisor 0070         __size_of_setDuty 0050          ___lwdiv@counter 0077  
               __ptext10 0D35                 __ptext11 0196                 __ptext20 0CB7  
               __ptext12 0CAD                 __ptext21 0CDC                 __ptext13 0CA3  
               __ptext22 0CC2                 __ptext14 0CF6                 __ptext23 0D13  
               __ptext15 0C9E                 __ptext24 000B                 __ptext16 0E98  
               __ptext17 0E5B                 __ptext18 0DE8                 __ptext19 0F32  
               _lcdPrint 0E5B         __size_of_sprintf 00D8            lcdSetCursor@a 0077  
          lcdSetCursor@b 0074            lcdSetCursor@y 0079            lcdSetCursor@z 0078  
          __size_of_main 01A7      __end_of_pwmSetDuty1 0D87      __end_of_pwmSetDuty2 0DB6  
               _pwmInit1 0CA3                 _pwmInit2 0CAD                 lcdPort@a 0070  
               main@pwm2 006B                sprintf@ap 0026                sprintf@sp 002B  
       ___lwmod@dividend 007A            ?_lcdSetCursor 0074                stringcode 080A  
 __Umul8_16@multiplicand 0070                 sprintf@c 002C                 sprintf@f 0020  
        ___lwmod@divisor 0078          ___lwmod@counter 007D                 stringdir 080A  
               stringtab 0800              _pwmSetDuty1 0D58              _pwmSetDuty2 0D87  
          ?_lcdWriteChar 0070     __Umul8_16@multiplier 0078           ??_lcdSetCursor 0075  
      __Umul8_16@product 0074  
