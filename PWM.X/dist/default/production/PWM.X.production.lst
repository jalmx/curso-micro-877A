

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat May 11 13:55:42 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.05
    35                           ; Generated 20/12/2018 GMT
    36                           ; 
    37                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F877A Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001D                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  0081                     	;# 
   104  0085                     	;# 
   105  0086                     	;# 
   106  0087                     	;# 
   107  0088                     	;# 
   108  0089                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0094                     	;# 
   176  0098                     	;# 
   177  0099                     	;# 
   178  009C                     	;# 
   179  009D                     	;# 
   180  009E                     	;# 
   181  009F                     	;# 
   182  010C                     	;# 
   183  010D                     	;# 
   184  010E                     	;# 
   185  010F                     	;# 
   186  018C                     	;# 
   187  018D                     	;# 
   188                           
   189                           	psect	strings
   190  0800                     __pstrings:	
   191  0800                     stringtab:	
   192  0800                     __stringtab:	
   193                           
   194                           ;	String table - string pointers are 1 byte each
   195  0800  1BFF               	btfsc	btemp+1,7
   196  0801  280A               	ljmp	stringcode
   197  0802  1383               	bcf	3,7
   198  0803  187F               	btfsc	btemp+1,0
   199  0804  1783               	bsf	3,7
   200  0805  0800               	movf	0,w
   201  0806  0A84               	incf	4,f
   202  0807  1903               	skipnz
   203  0808  0AFF               	incf	btemp+1,f
   204  0809  0008               	return
   205  080A                     stringcode:	
   206  080A                     stringdir:	
   207  080A  3008               	movlw	high stringdir
   208  080B  008A               	movwf	10
   209  080C  0804               	movf	4,w
   210  080D  0A84               	incf	4,f
   211  080E  0782               	addwf	2,f
   212  080F                     __stringbase:	
   213  080F  3400               	retlw	0
   214  0810                     __end_of__stringtab:	
   215  0810                     _dpowers:	
   216  0810  3401               	retlw	1
   217  0811  3400               	retlw	0
   218  0812  340A               	retlw	10
   219  0813  3400               	retlw	0
   220  0814  3464               	retlw	100
   221  0815  3400               	retlw	0
   222  0816  34E8               	retlw	232
   223  0817  3403               	retlw	3
   224  0818  3410               	retlw	16
   225  0819  3427               	retlw	39
   226  081A                     __end_of_dpowers:	
   227  0006                     _PORTB	set	6
   228  001E                     _ADRESH	set	30
   229  001F                     _ADCON0bits	set	31
   230  0008                     _PORTD	set	8
   231  001B                     _CCPR2L	set	27
   232  0015                     _CCPR1L	set	21
   233  0043                     _RD3	set	67
   234  0042                     _RD2	set	66
   235  0047                     _RD7	set	71
   236  0046                     _RD6	set	70
   237  0045                     _RD5	set	69
   238  0044                     _RD4	set	68
   239  0091                     _T2CKPS1	set	145
   240  0090                     _T2CKPS0	set	144
   241  00EA                     _CCP2M2	set	234
   242  00EB                     _CCP2M3	set	235
   243  0092                     _TMR2ON	set	146
   244  00BA                     _CCP1M2	set	186
   245  00BB                     _CCP1M3	set	187
   246  00EC                     _CCP2Y	set	236
   247  00ED                     _CCP2X	set	237
   248  00BC                     _CCP1Y	set	188
   249  00BD                     _CCP1X	set	189
   250  0086                     _TRISB	set	134
   251  009E                     _ADRESL	set	158
   252  009F                     _ADCON1bits	set	159
   253  0088                     _TRISD	set	136
   254  0092                     _PR2	set	146
   255  0439                     _TRISC1	set	1081
   256  043A                     _TRISC2	set	1082
   257  081A                     STR_2:	
   258  081A  344D               	retlw	77	;'M'
   259  081B  346F               	retlw	111	;'o'
   260  081C  3464               	retlw	100	;'d'
   261  081D  3475               	retlw	117	;'u'
   262  081E  346C               	retlw	108	;'l'
   263  081F  346F               	retlw	111	;'o'
   264  0820  3420               	retlw	32	;' '
   265  0821  3469               	retlw	105	;'i'
   266  0822  346E               	retlw	110	;'n'
   267  0823  3469               	retlw	105	;'i'
   268  0824  3463               	retlw	99	;'c'
   269  0825  3469               	retlw	105	;'i'
   270  0826  3461               	retlw	97	;'a'
   271  0827  3464               	retlw	100	;'d'
   272  0828  346F               	retlw	111	;'o'
   273  0829  3400               	retlw	0
   274  082A                     STR_1:	
   275  082A  3449               	retlw	73	;'I'
   276  082B  346E               	retlw	110	;'n'
   277  082C  3469               	retlw	105	;'i'
   278  082D  3463               	retlw	99	;'c'
   279  082E  3469               	retlw	105	;'i'
   280  082F  3461               	retlw	97	;'a'
   281  0830  346E               	retlw	110	;'n'
   282  0831  3464               	retlw	100	;'d'
   283  0832  346F               	retlw	111	;'o'
   284  0833  3420               	retlw	32	;' '
   285  0834  3450               	retlw	80	;'P'
   286  0835  3457               	retlw	87	;'W'
   287  0836  344D               	retlw	77	;'M'
   288  0837  3400               	retlw	0
   289  0838                     STR_3:	
   290  0838  3450               	retlw	80	;'P'
   291  0839  3457               	retlw	87	;'W'
   292  083A  344D               	retlw	77	;'M'
   293  083B  3420               	retlw	32	;' '
   294  083C  343D               	retlw	61	;'='
   295  083D  3420               	retlw	32	;' '
   296  083E  3425               	retlw	37	;'%'
   297  083F  3464               	retlw	100	;'d'
   298  0840  3400               	retlw	0
   299                           
   300                           	psect	cinit
   301  07FC                     start_initialization:	
   302                           ; #config settings
   303                           
   304  07FC                     __initialization:	
   305  07FC                     end_of_initialization:	
   306                           ;End of C runtime variable initialization code
   307                           
   308  07FC                     __end_of__initialization:	
   309  07FC  0183               	clrf	3
   310  07FD  120A  118A  29A3   	ljmp	_main	;jump to C main() function
   311                           
   312                           	psect	cstackBANK1
   313  00A0                     __pcstackBANK1:	
   314  00A0                     main@entero:	
   315                           
   316                           ; 16 bytes @ 0x0
   317  00A0                     	ds	16
   318  00B0                     main@v:	
   319                           
   320                           ; 2 bytes @ 0x10
   321  00B0                     	ds	2
   322                           
   323                           	psect	cstackCOMMON
   324  0070                     __pcstackCOMMON:	
   325  0070                     ?_setPR2:	
   326  0070                     ??_setPR2:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0070                     ?_pwmInit1:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ??_pwmInit1:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ?_pwmInit2:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ??_pwmInit2:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_lcdPort:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ??_lcdPort:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_lcdCmd:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_lcdClear:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_lcdInit:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_lcdWriteChar:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_adcInit:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ??_adcInit:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ?_main:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?__Umul8_16:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?_adcRead:	
   372                           ; 2 bytes @ 0x0
   373                           
   374  0070                     ?___lwdiv:	
   375                           ; 2 bytes @ 0x0
   376                           
   377  0070                     ?_pmwMaxDuty:	
   378                           ; 2 bytes @ 0x0
   379                           
   380  0070                     lcdPort@a:	
   381                           ; 4 bytes @ 0x0
   382                           
   383  0070                     __Umul8_16@multiplicand:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     adcRead@adcChannel:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ___lwdiv@divisor:	
   390                           ; 2 bytes @ 0x0
   391                           
   392                           
   393                           ; 2 bytes @ 0x0
   394  0070                     	ds	1
   395  0071                     ??_lcdCmd:	
   396  0071                     ??_lcdWriteChar:	
   397                           ; 1 bytes @ 0x1
   398                           
   399                           
   400                           ; 1 bytes @ 0x1
   401  0071                     	ds	1
   402  0072                     ??__Umul8_16:	
   403  0072                     ??_adcRead:	
   404                           ; 1 bytes @ 0x2
   405                           
   406  0072                     lcdWriteChar@temp:	
   407                           ; 1 bytes @ 0x2
   408                           
   409  0072                     ___lwdiv@dividend:	
   410                           ; 1 bytes @ 0x2
   411                           
   412                           
   413                           ; 2 bytes @ 0x2
   414  0072                     	ds	1
   415  0073                     lcdCmd@a:	
   416  0073                     lcdWriteChar@y:	
   417                           ; 1 bytes @ 0x3
   418                           
   419                           
   420                           ; 1 bytes @ 0x3
   421  0073                     	ds	1
   422  0074                     ??_pmwMaxDuty:	
   423  0074                     ??_lcdClear:	
   424                           ; 1 bytes @ 0x4
   425                           
   426  0074                     ?_lcdSetCursor:	
   427                           ; 1 bytes @ 0x4
   428                           
   429  0074                     ??_lcdInit:	
   430                           ; 1 bytes @ 0x4
   431                           
   432  0074                     ??___lwdiv:	
   433                           ; 1 bytes @ 0x4
   434                           
   435  0074                     ?___xxtofl:	
   436                           ; 1 bytes @ 0x4
   437                           
   438  0074                     lcdSetCursor@b:	
   439                           ; 4 bytes @ 0x4
   440                           
   441  0074                     lcdWriteChar@a:	
   442                           ; 1 bytes @ 0x4
   443                           
   444  0074                     __Umul8_16@product:	
   445                           ; 1 bytes @ 0x4
   446                           
   447  0074                     ___xxtofl@val:	
   448                           ; 2 bytes @ 0x4
   449                           
   450                           
   451                           ; 4 bytes @ 0x4
   452  0074                     	ds	1
   453  0075                     ??_lcdSetCursor:	
   454  0075                     ?_lcdPrint:	
   455                           ; 1 bytes @ 0x5
   456                           
   457  0075                     lcdPrint@a:	
   458                           ; 1 bytes @ 0x5
   459                           
   460  0075                     ___lwdiv@quotient:	
   461                           ; 2 bytes @ 0x5
   462                           
   463                           
   464                           ; 2 bytes @ 0x5
   465  0075                     	ds	1
   466  0076                     __Umul8_16@word_mpld:	
   467                           
   468                           ; 2 bytes @ 0x6
   469  0076                     	ds	1
   470  0077                     ??_lcdPrint:	
   471  0077                     lcdSetCursor@a:	
   472                           ; 1 bytes @ 0x7
   473                           
   474  0077                     ___lwdiv@counter:	
   475                           ; 1 bytes @ 0x7
   476                           
   477                           
   478                           ; 1 bytes @ 0x7
   479  0077                     	ds	1
   480  0078                     ??___xxtofl:	
   481  0078                     ?___lwmod:	
   482                           ; 1 bytes @ 0x8
   483                           
   484  0078                     lcdSetCursor@z:	
   485                           ; 2 bytes @ 0x8
   486                           
   487  0078                     __Umul8_16@multiplier:	
   488                           ; 1 bytes @ 0x8
   489                           
   490  0078                     ___lwmod@divisor:	
   491                           ; 1 bytes @ 0x8
   492                           
   493                           
   494                           ; 2 bytes @ 0x8
   495  0078                     	ds	1
   496  0079                     lcdSetCursor@y:	
   497                           
   498                           ; 1 bytes @ 0x9
   499  0079                     	ds	1
   500  007A                     lcdSetCursor@temp:	
   501  007A                     lcdPrint@i:	
   502                           ; 1 bytes @ 0xA
   503                           
   504  007A                     ___lwmod@dividend:	
   505                           ; 2 bytes @ 0xA
   506                           
   507                           
   508                           ; 2 bytes @ 0xA
   509  007A                     	ds	2
   510  007C                     ??___lwmod:	
   511  007C                     ___fltol@sign1:	
   512                           ; 1 bytes @ 0xC
   513                           
   514                           
   515                           ; 1 bytes @ 0xC
   516  007C                     	ds	1
   517  007D                     ___fltol@exp1:	
   518  007D                     ___lwmod@counter:	
   519                           ; 1 bytes @ 0xD
   520                           
   521                           
   522                           ; 1 bytes @ 0xD
   523  007D                     	ds	1
   524                           
   525                           	psect	cstackBANK0
   526  0020                     __pcstackBANK0:	
   527  0020                     ?_sprintf:	
   528  0020                     sprintf@f:	
   529                           ; 2 bytes @ 0x0
   530                           
   531  0020                     ___xxtofl@sign:	
   532                           ; 1 bytes @ 0x0
   533                           
   534                           
   535                           ; 1 bytes @ 0x0
   536  0020                     	ds	1
   537  0021                     ___xxtofl@exp:	
   538                           
   539                           ; 1 bytes @ 0x1
   540  0021                     	ds	1
   541  0022                     ___xxtofl@arg:	
   542                           
   543                           ; 4 bytes @ 0x2
   544  0022                     	ds	1
   545  0023                     ??_sprintf:	
   546                           
   547                           ; 1 bytes @ 0x3
   548  0023                     	ds	3
   549  0026                     ?___fldiv:	
   550  0026                     sprintf@ap:	
   551                           ; 4 bytes @ 0x6
   552                           
   553  0026                     ___fldiv@a:	
   554                           ; 1 bytes @ 0x6
   555                           
   556                           
   557                           ; 4 bytes @ 0x6
   558  0026                     	ds	1
   559  0027                     sprintf@flag:	
   560                           
   561                           ; 1 bytes @ 0x7
   562  0027                     	ds	1
   563  0028                     sprintf@prec:	
   564                           
   565                           ; 1 bytes @ 0x8
   566  0028                     	ds	1
   567  0029                     sprintf@val:	
   568                           
   569                           ; 2 bytes @ 0x9
   570  0029                     	ds	1
   571  002A                     ___fldiv@b:	
   572                           
   573                           ; 4 bytes @ 0xA
   574  002A                     	ds	1
   575  002B                     sprintf@sp:	
   576                           
   577                           ; 1 bytes @ 0xB
   578  002B                     	ds	1
   579  002C                     sprintf@c:	
   580                           
   581                           ; 1 bytes @ 0xC
   582  002C                     	ds	2
   583  002E                     ??___fldiv:	
   584                           
   585                           ; 1 bytes @ 0xE
   586  002E                     	ds	5
   587  0033                     ___fldiv@rem:	
   588                           
   589                           ; 4 bytes @ 0x13
   590  0033                     	ds	4
   591  0037                     ___fldiv@sign:	
   592                           
   593                           ; 1 bytes @ 0x17
   594  0037                     	ds	1
   595  0038                     ___fldiv@new_exp:	
   596                           
   597                           ; 2 bytes @ 0x18
   598  0038                     	ds	2
   599  003A                     ___fldiv@grs:	
   600                           
   601                           ; 4 bytes @ 0x1A
   602  003A                     	ds	4
   603  003E                     ___fldiv@bexp:	
   604                           
   605                           ; 1 bytes @ 0x1E
   606  003E                     	ds	1
   607  003F                     ___fldiv@aexp:	
   608                           
   609                           ; 1 bytes @ 0x1F
   610  003F                     	ds	1
   611  0040                     ?___flmul:	
   612  0040                     ___flmul@b:	
   613                           ; 4 bytes @ 0x20
   614                           
   615                           
   616                           ; 4 bytes @ 0x20
   617  0040                     	ds	4
   618  0044                     ___flmul@a:	
   619                           
   620                           ; 4 bytes @ 0x24
   621  0044                     	ds	4
   622  0048                     ??___flmul:	
   623                           
   624                           ; 1 bytes @ 0x28
   625  0048                     	ds	5
   626  004D                     ___flmul@sign:	
   627                           
   628                           ; 1 bytes @ 0x2D
   629  004D                     	ds	1
   630  004E                     ___flmul@grs:	
   631                           
   632                           ; 4 bytes @ 0x2E
   633  004E                     	ds	4
   634  0052                     ___flmul@aexp:	
   635                           
   636                           ; 1 bytes @ 0x32
   637  0052                     	ds	1
   638  0053                     ___flmul@bexp:	
   639                           
   640                           ; 1 bytes @ 0x33
   641  0053                     	ds	1
   642  0054                     ___flmul@prod:	
   643                           
   644                           ; 4 bytes @ 0x34
   645  0054                     	ds	4
   646  0058                     ___flmul@temp:	
   647                           
   648                           ; 2 bytes @ 0x38
   649  0058                     	ds	2
   650  005A                     ?___fltol:	
   651  005A                     ___fltol@f1:	
   652                           ; 4 bytes @ 0x3A
   653                           
   654                           
   655                           ; 4 bytes @ 0x3A
   656  005A                     	ds	4
   657  005E                     ??___fltol:	
   658                           
   659                           ; 1 bytes @ 0x3E
   660  005E                     	ds	5
   661  0063                     ?_pwmDuty1:	
   662  0063                     pwmDuty1@duty:	
   663                           ; 1 bytes @ 0x43
   664                           
   665                           
   666                           ; 2 bytes @ 0x43
   667  0063                     	ds	2
   668  0065                     ??_pwmDuty1:	
   669                           
   670                           ; 1 bytes @ 0x45
   671  0065                     	ds	2
   672  0067                     ??_main:	
   673                           
   674                           ; 1 bytes @ 0x47
   675  0067                     	ds	3
   676                           
   677                           	psect	maintext
   678  01A3                     __pmaintext:	
   679 ;;
   680 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   681 ;;
   682 ;; *************** function _main *****************
   683 ;; Defined at:
   684 ;;		line 9 in file "main.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;		None
   687 ;; Auto vars:     Size  Location     Type
   688 ;;  entero         16    0[BANK1 ] unsigned char [16]
   689 ;;  v               2   16[BANK1 ] unsigned int 
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      void 
   692 ;; Registers used:
   693 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   694 ;; Tracked objects:
   695 ;;		On entry : B00/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   699 ;;      Params:         0       0       0       0       0
   700 ;;      Locals:         0       0      18       0       0
   701 ;;      Temps:          0       3       0       0       0
   702 ;;      Totals:         0       3      18       0       0
   703 ;;Total ram usage:       21 bytes
   704 ;; Hardware stack levels required when called:    3
   705 ;; This function calls:
   706 ;;		_adcInit
   707 ;;		_adcRead
   708 ;;		_lcdClear
   709 ;;		_lcdInit
   710 ;;		_lcdPrint
   711 ;;		_lcdSetCursor
   712 ;;		_pwmDuty1
   713 ;;		_pwmInit1
   714 ;;		_pwmInit2
   715 ;;		_sprintf
   716 ;; This function is called by:
   717 ;;		Startup code after reset
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           
   722                           ;psect for function _main
   723  01A3                     _main:	
   724                           
   725                           ;main.c: 10:     TRISB = 255;
   726                           
   727                           ;incstack = 0
   728                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   729  01A3  30FF               	movlw	255
   730  01A4  1683               	bsf	3,5	;RP0=1, select bank1
   731  01A5  1303               	bcf	3,6	;RP1=0, select bank1
   732  01A6  0086               	movwf	6	;volatile
   733                           
   734                           ;main.c: 11:     PORTB = 0;
   735  01A7  1283               	bcf	3,5	;RP0=0, select bank0
   736  01A8  1303               	bcf	3,6	;RP1=0, select bank0
   737  01A9  0186               	clrf	6	;volatile
   738                           
   739                           ;main.c: 13:     adcInit();
   740  01AA  120A  158A  25E7  120A  118A  	fcall	_adcInit
   741                           
   742                           ;main.c: 14:     lcdInit();
   743  01AF  120A  158A  279E  120A  118A  	fcall	_lcdInit
   744                           
   745                           ;main.c: 15:     lcdClear();
   746  01B4  120A  158A  25C2  120A  118A  	fcall	_lcdClear
   747                           
   748                           ;main.c: 16:     lcdSetCursor(1,1);
   749  01B9  01F4               	clrf	lcdSetCursor@b
   750  01BA  0AF4               	incf	lcdSetCursor@b,f
   751  01BB  3001               	movlw	1
   752  01BC  120A  158A  2754  120A  118A  	fcall	_lcdSetCursor
   753                           
   754                           ;main.c: 17:     lcdPrint("Iniciando PWM");
   755  01C1  301B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   756  01C2  00F5               	movwf	lcdPrint@a
   757  01C3  3080               	movlw	128
   758  01C4  00F6               	movwf	lcdPrint@a+1
   759  01C5  120A  158A  2717  120A  118A  	fcall	_lcdPrint
   760                           
   761                           ;main.c: 18:     _delay((unsigned long)((10)*(20000000/4000.0)));
   762  01CA  3041               	movlw	65
   763  01CB  1283               	bcf	3,5	;RP0=0, select bank0
   764  01CC  1303               	bcf	3,6	;RP1=0, select bank0
   765  01CD  00E8               	movwf	??_main+1
   766  01CE  30ED               	movlw	237
   767  01CF  00E7               	movwf	??_main
   768  01D0                     u2657:	
   769  01D0  0BE7               	decfsz	??_main,f
   770  01D1  29D0               	goto	u2657
   771  01D2  0BE8               	decfsz	??_main+1,f
   772  01D3  29D0               	goto	u2657
   773  01D4  29D5               	nop2
   774                           
   775                           ;main.c: 19:     pwmInit1();
   776  01D5  120A  158A  25CD  120A  118A  	fcall	_pwmInit1
   777                           
   778                           ;main.c: 20:     pwmInit2();
   779  01DA  120A  158A  25D9  120A  118A  	fcall	_pwmInit2
   780                           
   781                           ;main.c: 21:     pwmDuty1(0);
   782  01DF  3000               	movlw	0
   783  01E0  1283               	bcf	3,5	;RP0=0, select bank0
   784  01E1  1303               	bcf	3,6	;RP1=0, select bank0
   785  01E2  00E3               	movwf	pwmDuty1@duty
   786  01E3  00E4               	movwf	pwmDuty1@duty+1
   787  01E4  120A  118A  207A  120A  118A  	fcall	_pwmDuty1
   788                           
   789                           ;main.c: 22:     lcdClear();
   790  01E9  120A  158A  25C2  120A  118A  	fcall	_lcdClear
   791                           
   792                           ;main.c: 23:     lcdSetCursor(1,1);
   793  01EE  01F4               	clrf	lcdSetCursor@b
   794  01EF  0AF4               	incf	lcdSetCursor@b,f
   795  01F0  3001               	movlw	1
   796  01F1  120A  158A  2754  120A  118A  	fcall	_lcdSetCursor
   797                           
   798                           ;main.c: 24:     lcdPrint("Modulo iniciado");
   799  01F6  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   800  01F7  00F5               	movwf	lcdPrint@a
   801  01F8  3080               	movlw	128
   802  01F9  00F6               	movwf	lcdPrint@a+1
   803  01FA  120A  158A  2717  120A  118A  	fcall	_lcdPrint
   804                           
   805                           ;main.c: 26:     _delay((unsigned long)((100)*(20000000/4000.0)));
   806  01FF  3003               	movlw	3
   807  0200  1283               	bcf	3,5	;RP0=0, select bank0
   808  0201  1303               	bcf	3,6	;RP1=0, select bank0
   809  0202  00E9               	movwf	??_main+2
   810  0203  308A               	movlw	138
   811  0204  00E8               	movwf	??_main+1
   812  0205  3055               	movlw	85
   813  0206  00E7               	movwf	??_main
   814  0207                     u2667:	
   815  0207  0BE7               	decfsz	??_main,f
   816  0208  2A07               	goto	u2667
   817  0209  0BE8               	decfsz	??_main+1,f
   818  020A  2A07               	goto	u2667
   819  020B  0BE9               	decfsz	??_main+2,f
   820  020C  2A07               	goto	u2667
   821                           
   822                           ;main.c: 27:     lcdClear();
   823  020D  120A  158A  25C2  120A  118A  	fcall	_lcdClear
   824  0212                     l2165:	
   825                           
   826                           ;main.c: 29:         unsigned int v = adcRead(0);
   827  0212  3000               	movlw	0
   828  0213  00F0               	movwf	adcRead@adcChannel
   829  0214  00F1               	movwf	adcRead@adcChannel+1
   830  0215  120A  158A  262B  120A  118A  	fcall	_adcRead
   831  021A  0871               	movf	?_adcRead+1,w
   832  021B  1683               	bsf	3,5	;RP0=1, select bank1
   833  021C  1303               	bcf	3,6	;RP1=0, select bank1
   834  021D  00B1               	movwf	(main@v+1)^(0+128)
   835  021E  0870               	movf	?_adcRead,w
   836  021F  00B0               	movwf	main@v^(0+128)
   837                           
   838                           ;main.c: 30:         pwmDuty1(v);
   839  0220  0831               	movf	(main@v+1)^(0+128),w
   840  0221  1283               	bcf	3,5	;RP0=0, select bank0
   841  0222  1303               	bcf	3,6	;RP1=0, select bank0
   842  0223  00E4               	movwf	pwmDuty1@duty+1
   843  0224  1683               	bsf	3,5	;RP0=1, select bank1
   844  0225  1303               	bcf	3,6	;RP1=0, select bank1
   845  0226  0830               	movf	main@v^(0+128),w
   846  0227  1283               	bcf	3,5	;RP0=0, select bank0
   847  0228  1303               	bcf	3,6	;RP1=0, select bank0
   848  0229  00E3               	movwf	pwmDuty1@duty
   849  022A  120A  118A  207A  120A  118A  	fcall	_pwmDuty1
   850                           
   851                           ;main.c: 31:         char entero[16];;main.c: 32:         sprintf(entero, "PWM = %d", v)
      +                          ;
   852  022F  3029               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   853  0230  1283               	bcf	3,5	;RP0=0, select bank0
   854  0231  1303               	bcf	3,6	;RP1=0, select bank0
   855  0232  00E7               	movwf	??_main
   856  0233  0867               	movf	??_main,w
   857  0234  00A0               	movwf	sprintf@f
   858  0235  1683               	bsf	3,5	;RP0=1, select bank1
   859  0236  1303               	bcf	3,6	;RP1=0, select bank1
   860  0237  0831               	movf	(main@v+1)^(0+128),w
   861  0238  1283               	bcf	3,5	;RP0=0, select bank0
   862  0239  1303               	bcf	3,6	;RP1=0, select bank0
   863  023A  00A2               	movwf	?_sprintf+2
   864  023B  1683               	bsf	3,5	;RP0=1, select bank1
   865  023C  1303               	bcf	3,6	;RP1=0, select bank1
   866  023D  0830               	movf	main@v^(0+128),w
   867  023E  1283               	bcf	3,5	;RP0=0, select bank0
   868  023F  1303               	bcf	3,6	;RP1=0, select bank0
   869  0240  00A1               	movwf	?_sprintf+1
   870  0241  30A0               	movlw	(low (main@entero| 0))& (0+255)
   871  0242  120A  118A  226C  120A  118A  	fcall	_sprintf
   872                           
   873                           ;main.c: 33:         lcdClear();
   874  0247  120A  158A  25C2  120A  118A  	fcall	_lcdClear
   875                           
   876                           ;main.c: 34:         lcdSetCursor(1, 1);
   877  024C  01F4               	clrf	lcdSetCursor@b
   878  024D  0AF4               	incf	lcdSetCursor@b,f
   879  024E  3001               	movlw	1
   880  024F  120A  158A  2754  120A  118A  	fcall	_lcdSetCursor
   881                           
   882                           ;main.c: 35:         lcdPrint(entero);
   883  0254  30A0               	movlw	(low (main@entero| 0))& (0+255)
   884  0255  00F5               	movwf	lcdPrint@a
   885  0256  3000               	movlw	0
   886  0257  00F6               	movwf	lcdPrint@a+1
   887  0258  120A  158A  2717  120A  118A  	fcall	_lcdPrint
   888                           
   889                           ;main.c: 37:         _delay((unsigned long)((50)*(20000000/4000.0)));
   890  025D  3002               	movlw	2
   891  025E  1283               	bcf	3,5	;RP0=0, select bank0
   892  025F  1303               	bcf	3,6	;RP1=0, select bank0
   893  0260  00E9               	movwf	??_main+2
   894  0261  3045               	movlw	69
   895  0262  00E8               	movwf	??_main+1
   896  0263  30A9               	movlw	169
   897  0264  00E7               	movwf	??_main
   898  0265                     u2677:	
   899  0265  0BE7               	decfsz	??_main,f
   900  0266  2A65               	goto	u2677
   901  0267  0BE8               	decfsz	??_main+1,f
   902  0268  2A65               	goto	u2677
   903  0269  0BE9               	decfsz	??_main+2,f
   904  026A  2A65               	goto	u2677
   905                           
   906                           ;main.c: 38:     }
   907  026B  2A12               	goto	l2165
   908  026C                     __end_of_main:	
   909                           
   910                           	psect	text1
   911  026C                     __ptext1:	
   912 ;; *************** function _sprintf *****************
   913 ;; Defined at:
   914 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;  sp              1    wreg     PTR unsigned char 
   917 ;;		 -> main@entero(16), 
   918 ;;  f               1    0[BANK0 ] PTR const unsigned char 
   919 ;;		 -> STR_3(9), 
   920 ;; Auto vars:     Size  Location     Type
   921 ;;  sp              1   11[BANK0 ] PTR unsigned char 
   922 ;;		 -> main@entero(16), 
   923 ;;  tmpval          4    0        struct .
   924 ;;  val             2    9[BANK0 ] unsigned int 
   925 ;;  cp              2    0        PTR const unsigned char 
   926 ;;  len             2    0        unsigned int 
   927 ;;  c               1   12[BANK0 ] unsigned char 
   928 ;;  prec            1    8[BANK0 ] char 
   929 ;;  flag            1    7[BANK0 ] unsigned char 
   930 ;;  ap              1    6[BANK0 ] PTR void [1]
   931 ;;		 -> ?_sprintf(2), 
   932 ;; Return value:  Size  Location     Type
   933 ;;                  2    0[BANK0 ] int 
   934 ;; Registers used:
   935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   941 ;;      Params:         0       3       0       0       0
   942 ;;      Locals:         0       7       0       0       0
   943 ;;      Temps:          0       3       0       0       0
   944 ;;      Totals:         0      13       0       0       0
   945 ;;Total ram usage:       13 bytes
   946 ;; Hardware stack levels used:    1
   947 ;; Hardware stack levels required when called:    1
   948 ;; This function calls:
   949 ;;		___lwdiv
   950 ;;		___lwmod
   951 ;; This function is called by:
   952 ;;		_main
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           
   957                           ;psect for function _sprintf
   958  026C                     _sprintf:	
   959                           
   960                           ;incstack = 0
   961                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   962                           ;sprintf@sp stored from wreg
   963  026C  1283               	bcf	3,5	;RP0=0, select bank0
   964  026D  1303               	bcf	3,6	;RP1=0, select bank0
   965  026E  00AB               	movwf	sprintf@sp
   966                           
   967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
   968  026F  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   969  0270  00A3               	movwf	??_sprintf
   970  0271  0823               	movf	??_sprintf,w
   971  0272  00A6               	movwf	sprintf@ap
   972  0273                     l2113:	
   973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
   974                           
   975                           
   976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
   977  0273  3001               	movlw	1
   978  0274  07A0               	addwf	sprintf@f,f
   979  0275  30FF               	movlw	-1
   980  0276  0720               	addwf	sprintf@f,w
   981  0277  0084               	movwf	4
   982  0278  120A  158A  200A  120A  118A  	fcall	stringdir
   983  027D  00A3               	movwf	??_sprintf
   984  027E  0823               	movf	??_sprintf,w
   985  027F  00AC               	movwf	sprintf@c
   986  0280  082C               	movf	sprintf@c,w
   987  0281  1903               	btfsc	3,2
   988  0282  2B3F               	goto	l2115
   989                           
   990                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
   991  0283  3025               	movlw	37
   992  0284  062C               	xorwf	sprintf@c,w
   993  0285  1903               	btfsc	3,2
   994  0286  2A93               	goto	l2069
   995                           
   996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
   997  0287  082C               	movf	sprintf@c,w
   998  0288  00A3               	movwf	??_sprintf
   999  0289  082B               	movf	sprintf@sp,w
  1000  028A  0084               	movwf	4
  1001  028B  0823               	movf	??_sprintf,w
  1002  028C  1383               	bcf	3,7	;select IRP bank0
  1003  028D  0080               	movwf	0
  1004  028E  3001               	movlw	1
  1005  028F  00A3               	movwf	??_sprintf
  1006  0290  0823               	movf	??_sprintf,w
  1007  0291  07AB               	addwf	sprintf@sp,f
  1008                           
  1009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  1010  0292  2A73               	goto	l2113
  1011  0293                     l2069:	
  1012                           
  1013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  1014  0293  01A7               	clrf	sprintf@flag
  1015                           
  1016                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  1017  0294  3001               	movlw	1
  1018  0295  07A0               	addwf	sprintf@f,f
  1019  0296  30FF               	movlw	-1
  1020  0297  0720               	addwf	sprintf@f,w
  1021  0298  0084               	movwf	4
  1022  0299  120A  158A  200A  120A  118A  	fcall	stringdir
  1023  029E  00AC               	movwf	sprintf@c
  1024  029F  00A3               	movwf	??_sprintf
  1025  02A0  01A4               	clrf	??_sprintf+1
  1026                           
  1027                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1028                           ; Switch size 1, requested type "simple"
  1029                           ; Number of cases is 1, Range of values is 0 to 0
  1030                           ; switch strategies available:
  1031                           ; Name         Instructions Cycles
  1032                           ; simple_byte            4     3 (average)
  1033                           ; direct_byte           11     8 (fixed)
  1034                           ; jumptable            260     6 (fixed)
  1035                           ;	Chosen strategy is simple_byte
  1036  02A1  0824               	movf	??_sprintf+1,w
  1037  02A2  3A00               	xorlw	0	; case 0
  1038  02A3  1903               	skipnz
  1039  02A4  2AA6               	goto	l2199
  1040  02A5  2A73               	goto	l2113
  1041  02A6                     l2199:	
  1042                           
  1043                           ; Switch size 1, requested type "simple"
  1044                           ; Number of cases is 3, Range of values is 0 to 105
  1045                           ; switch strategies available:
  1046                           ; Name         Instructions Cycles
  1047                           ; simple_byte           10     6 (average)
  1048                           ; jumptable            260     6 (fixed)
  1049                           ;	Chosen strategy is simple_byte
  1050  02A6  0823               	movf	??_sprintf,w
  1051  02A7  3A00               	xorlw	0	; case 0
  1052  02A8  1903               	skipnz
  1053  02A9  2B3F               	goto	l2115
  1054  02AA  3A64               	xorlw	100	; case 100
  1055  02AB  1903               	skipnz
  1056  02AC  2AB1               	goto	l2075
  1057  02AD  3A0D               	xorlw	13	; case 105
  1058  02AE  1903               	skipnz
  1059  02AF  2AB1               	goto	l2075
  1060  02B0  2A73               	goto	l2113
  1061  02B1                     l2075:	
  1062                           
  1063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1064  02B1  0826               	movf	sprintf@ap,w
  1065  02B2  0084               	movwf	4
  1066  02B3  1383               	bcf	3,7	;select IRP bank0
  1067  02B4  0800               	movf	0,w
  1068  02B5  00A9               	movwf	sprintf@val
  1069  02B6  0A84               	incf	4,f
  1070  02B7  0800               	movf	0,w
  1071  02B8  00AA               	movwf	sprintf@val+1
  1072  02B9  3002               	movlw	2
  1073  02BA  00A3               	movwf	??_sprintf
  1074  02BB  0823               	movf	??_sprintf,w
  1075  02BC  07A6               	addwf	sprintf@ap,f
  1076                           
  1077                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((int)val < 0) {
  1078  02BD  1FAA               	btfss	sprintf@val+1,7
  1079  02BE  2AC8               	goto	l2085
  1080                           
  1081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  1082  02BF  3003               	movlw	3
  1083  02C0  00A3               	movwf	??_sprintf
  1084  02C1  0823               	movf	??_sprintf,w
  1085  02C2  04A7               	iorwf	sprintf@flag,f
  1086                           
  1087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  1088  02C3  09A9               	comf	sprintf@val,f
  1089  02C4  09AA               	comf	sprintf@val+1,f
  1090  02C5  0AA9               	incf	sprintf@val,f
  1091  02C6  1903               	skipnz
  1092  02C7  0AAA               	incf	sprintf@val+1,f
  1093  02C8                     l2085:	
  1094                           
  1095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1096  02C8  01AC               	clrf	sprintf@c
  1097  02C9  0AAC               	incf	sprintf@c,f
  1098  02CA                     l2091:	
  1099                           
  1100                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  1101  02CA  082C               	movf	sprintf@c,w
  1102  02CB  00A3               	movwf	??_sprintf
  1103  02CC  0723               	addwf	??_sprintf,w
  1104  02CD  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1105  02CE  0084               	movwf	4
  1106  02CF  120A  158A  200A  120A  118A  	fcall	stringdir
  1107  02D4  00A4               	movwf	??_sprintf+1
  1108  02D5  120A  158A  200A  120A  118A  	fcall	stringdir
  1109  02DA  00A5               	movwf	??_sprintf+2
  1110  02DB  0825               	movf	??_sprintf+2,w
  1111  02DC  022A               	subwf	sprintf@val+1,w
  1112  02DD  1D03               	skipz
  1113  02DE  2AE1               	goto	u2575
  1114  02DF  0824               	movf	??_sprintf+1,w
  1115  02E0  0229               	subwf	sprintf@val,w
  1116  02E1                     u2575:	
  1117  02E1  1C03               	btfss	3,0
  1118  02E2  2AEB               	goto	l2097
  1119  02E3  3001               	movlw	1
  1120  02E4  00A3               	movwf	??_sprintf
  1121  02E5  0823               	movf	??_sprintf,w
  1122  02E6  07AC               	addwf	sprintf@c,f
  1123  02E7  3005               	movlw	5
  1124  02E8  062C               	xorwf	sprintf@c,w
  1125  02E9  1D03               	btfss	3,2
  1126  02EA  2ACA               	goto	l2091
  1127  02EB                     l2097:	
  1128                           
  1129                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  1130  02EB  0827               	movf	sprintf@flag,w
  1131  02EC  3903               	andlw	3
  1132  02ED  1903               	btfsc	3,2
  1133  02EE  2AFA               	goto	l2103
  1134                           
  1135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  1136  02EF  302D               	movlw	45
  1137  02F0  00A3               	movwf	??_sprintf
  1138  02F1  082B               	movf	sprintf@sp,w
  1139  02F2  0084               	movwf	4
  1140  02F3  0823               	movf	??_sprintf,w
  1141  02F4  1383               	bcf	3,7	;select IRP bank0
  1142  02F5  0080               	movwf	0
  1143  02F6  3001               	movlw	1
  1144  02F7  00A3               	movwf	??_sprintf
  1145  02F8  0823               	movf	??_sprintf,w
  1146  02F9  07AB               	addwf	sprintf@sp,f
  1147  02FA                     l2103:	
  1148                           
  1149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1488:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  1150  02FA  082C               	movf	sprintf@c,w
  1151  02FB  00A3               	movwf	??_sprintf
  1152  02FC  0823               	movf	??_sprintf,w
  1153  02FD  00A8               	movwf	sprintf@prec
  1154  02FE                     l2111:	
  1155                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  1156                           
  1157                           
  1158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  1159  02FE  30FF               	movlw	255
  1160  02FF  00A3               	movwf	??_sprintf
  1161  0300  0823               	movf	??_sprintf,w
  1162  0301  07A8               	addwf	sprintf@prec,f
  1163  0302  0A28               	incf	sprintf@prec,w
  1164  0303  1903               	btfsc	3,2
  1165  0304  2A73               	goto	l2113
  1166                           
  1167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  1168  0305  300A               	movlw	10
  1169  0306  00F8               	movwf	___lwmod@divisor
  1170  0307  3000               	movlw	0
  1171  0308  00F9               	movwf	___lwmod@divisor+1
  1172  0309  0828               	movf	sprintf@prec,w
  1173  030A  00A3               	movwf	??_sprintf
  1174  030B  0723               	addwf	??_sprintf,w
  1175  030C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1176  030D  0084               	movwf	4
  1177  030E  120A  158A  200A  120A  118A  	fcall	stringdir
  1178  0313  00F0               	movwf	___lwdiv@divisor
  1179  0314  120A  158A  200A  120A  118A  	fcall	stringdir
  1180  0319  00F1               	movwf	___lwdiv@divisor+1
  1181  031A  082A               	movf	sprintf@val+1,w
  1182  031B  00F3               	movwf	___lwdiv@dividend+1
  1183  031C  0829               	movf	sprintf@val,w
  1184  031D  00F2               	movwf	___lwdiv@dividend
  1185  031E  120A  158A  26DB  120A  118A  	fcall	___lwdiv
  1186  0323  0871               	movf	?___lwdiv+1,w
  1187  0324  00FB               	movwf	___lwmod@dividend+1
  1188  0325  0870               	movf	?___lwdiv,w
  1189  0326  00FA               	movwf	___lwmod@dividend
  1190  0327  120A  158A  2670  120A  118A  	fcall	___lwmod
  1191  032C  0878               	movf	?___lwmod,w
  1192  032D  3E30               	addlw	48
  1193  032E  1283               	bcf	3,5	;RP0=0, select bank0
  1194  032F  1303               	bcf	3,6	;RP1=0, select bank0
  1195  0330  00A4               	movwf	??_sprintf+1
  1196  0331  0824               	movf	??_sprintf+1,w
  1197  0332  00AC               	movwf	sprintf@c
  1198                           
  1199                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  1200  0333  082C               	movf	sprintf@c,w
  1201  0334  00A3               	movwf	??_sprintf
  1202  0335  082B               	movf	sprintf@sp,w
  1203  0336  0084               	movwf	4
  1204  0337  0823               	movf	??_sprintf,w
  1205  0338  1383               	bcf	3,7	;select IRP bank0
  1206  0339  0080               	movwf	0
  1207  033A  3001               	movlw	1
  1208  033B  00A3               	movwf	??_sprintf
  1209  033C  0823               	movf	??_sprintf,w
  1210  033D  07AB               	addwf	sprintf@sp,f
  1211  033E  2AFE               	goto	l2111
  1212  033F                     l2115:	
  1213                           
  1214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  1215  033F  082B               	movf	sprintf@sp,w
  1216  0340  0084               	movwf	4
  1217  0341  1383               	bcf	3,7	;select IRP bank0
  1218  0342  0180               	clrf	0
  1219  0343  0008               	return
  1220  0344                     __end_of_sprintf:	
  1221                           
  1222                           	psect	text2
  1223  0E70                     __ptext2:	
  1224 ;; *************** function ___lwmod *****************
  1225 ;; Defined at:
  1226 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;  divisor         2    8[COMMON] unsigned int 
  1229 ;;  dividend        2   10[COMMON] unsigned int 
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;  counter         1   13[COMMON] unsigned char 
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  2    8[COMMON] unsigned int 
  1234 ;; Registers used:
  1235 ;;		wreg, status,2, status,0
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1241 ;;      Params:         4       0       0       0       0
  1242 ;;      Locals:         1       0       0       0       0
  1243 ;;      Temps:          1       0       0       0       0
  1244 ;;      Totals:         6       0       0       0       0
  1245 ;;Total ram usage:        6 bytes
  1246 ;; Hardware stack levels used:    1
  1247 ;; This function calls:
  1248 ;;		Nothing
  1249 ;; This function is called by:
  1250 ;;		_sprintf
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           
  1255                           ;psect for function ___lwmod
  1256  0E70                     ___lwmod:	
  1257                           
  1258                           ;incstack = 0
  1259                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1260  0E70  0878               	movf	___lwmod@divisor,w
  1261  0E71  0479               	iorwf	___lwmod@divisor+1,w
  1262  0E72  1903               	btfsc	3,2
  1263  0E73  2E9D               	goto	l1617
  1264  0E74  01FD               	clrf	___lwmod@counter
  1265  0E75  0AFD               	incf	___lwmod@counter,f
  1266  0E76                     l1607:	
  1267  0E76  1BF9               	btfsc	___lwmod@divisor+1,7
  1268  0E77  2E84               	goto	l1609
  1269  0E78  3001               	movlw	1
  1270  0E79                     u1595:	
  1271  0E79  1003               	clrc
  1272  0E7A  0DF8               	rlf	___lwmod@divisor,f
  1273  0E7B  0DF9               	rlf	___lwmod@divisor+1,f
  1274  0E7C  3EFF               	addlw	-1
  1275  0E7D  1D03               	skipz
  1276  0E7E  2E79               	goto	u1595
  1277  0E7F  3001               	movlw	1
  1278  0E80  00FC               	movwf	??___lwmod
  1279  0E81  087C               	movf	??___lwmod,w
  1280  0E82  07FD               	addwf	___lwmod@counter,f
  1281  0E83  2E76               	goto	l1607
  1282  0E84                     l1609:	
  1283  0E84  0879               	movf	___lwmod@divisor+1,w
  1284  0E85  027B               	subwf	___lwmod@dividend+1,w
  1285  0E86  1D03               	skipz
  1286  0E87  2E8A               	goto	u1615
  1287  0E88  0878               	movf	___lwmod@divisor,w
  1288  0E89  027A               	subwf	___lwmod@dividend,w
  1289  0E8A                     u1615:	
  1290  0E8A  1C03               	skipc
  1291  0E8B  2E92               	goto	l1613
  1292  0E8C  0878               	movf	___lwmod@divisor,w
  1293  0E8D  02FA               	subwf	___lwmod@dividend,f
  1294  0E8E  0879               	movf	___lwmod@divisor+1,w
  1295  0E8F  1C03               	skipc
  1296  0E90  03FB               	decf	___lwmod@dividend+1,f
  1297  0E91  02FB               	subwf	___lwmod@dividend+1,f
  1298  0E92                     l1613:	
  1299  0E92  3001               	movlw	1
  1300  0E93                     u1625:	
  1301  0E93  1003               	clrc
  1302  0E94  0CF9               	rrf	___lwmod@divisor+1,f
  1303  0E95  0CF8               	rrf	___lwmod@divisor,f
  1304  0E96  3EFF               	addlw	-1
  1305  0E97  1D03               	skipz
  1306  0E98  2E93               	goto	u1625
  1307  0E99  3001               	movlw	1
  1308  0E9A  02FD               	subwf	___lwmod@counter,f
  1309  0E9B  1D03               	btfss	3,2
  1310  0E9C  2E84               	goto	l1609
  1311  0E9D                     l1617:	
  1312  0E9D  087B               	movf	___lwmod@dividend+1,w
  1313  0E9E  00F9               	movwf	?___lwmod+1
  1314  0E9F  087A               	movf	___lwmod@dividend,w
  1315  0EA0  00F8               	movwf	?___lwmod
  1316  0EA1  0008               	return
  1317  0EA2                     __end_of___lwmod:	
  1318                           
  1319                           	psect	text3
  1320  0EDB                     __ptext3:	
  1321 ;; *************** function ___lwdiv *****************
  1322 ;; Defined at:
  1323 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;  divisor         2    0[COMMON] unsigned int 
  1326 ;;  dividend        2    2[COMMON] unsigned int 
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;  quotient        2    5[COMMON] unsigned int 
  1329 ;;  counter         1    7[COMMON] unsigned char 
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  2    0[COMMON] unsigned int 
  1332 ;; Registers used:
  1333 ;;		wreg, status,2, status,0
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1339 ;;      Params:         4       0       0       0       0
  1340 ;;      Locals:         3       0       0       0       0
  1341 ;;      Temps:          1       0       0       0       0
  1342 ;;      Totals:         8       0       0       0       0
  1343 ;;Total ram usage:        8 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; This function calls:
  1346 ;;		Nothing
  1347 ;; This function is called by:
  1348 ;;		_sprintf
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           
  1353                           ;psect for function ___lwdiv
  1354  0EDB                     ___lwdiv:	
  1355                           
  1356                           ;incstack = 0
  1357                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1358  0EDB  01F5               	clrf	___lwdiv@quotient
  1359  0EDC  01F6               	clrf	___lwdiv@quotient+1
  1360  0EDD  0870               	movf	___lwdiv@divisor,w
  1361  0EDE  0471               	iorwf	___lwdiv@divisor+1,w
  1362  0EDF  1903               	btfsc	3,2
  1363  0EE0  2F12               	goto	l1595
  1364  0EE1  01F7               	clrf	___lwdiv@counter
  1365  0EE2  0AF7               	incf	___lwdiv@counter,f
  1366  0EE3                     l1583:	
  1367  0EE3  1BF1               	btfsc	___lwdiv@divisor+1,7
  1368  0EE4  2EF1               	goto	l1585
  1369  0EE5  3001               	movlw	1
  1370  0EE6                     u1525:	
  1371  0EE6  1003               	clrc
  1372  0EE7  0DF0               	rlf	___lwdiv@divisor,f
  1373  0EE8  0DF1               	rlf	___lwdiv@divisor+1,f
  1374  0EE9  3EFF               	addlw	-1
  1375  0EEA  1D03               	skipz
  1376  0EEB  2EE6               	goto	u1525
  1377  0EEC  3001               	movlw	1
  1378  0EED  00F4               	movwf	??___lwdiv
  1379  0EEE  0874               	movf	??___lwdiv,w
  1380  0EEF  07F7               	addwf	___lwdiv@counter,f
  1381  0EF0  2EE3               	goto	l1583
  1382  0EF1                     l1585:	
  1383  0EF1  3001               	movlw	1
  1384  0EF2                     u1545:	
  1385  0EF2  1003               	clrc
  1386  0EF3  0DF5               	rlf	___lwdiv@quotient,f
  1387  0EF4  0DF6               	rlf	___lwdiv@quotient+1,f
  1388  0EF5  3EFF               	addlw	-1
  1389  0EF6  1D03               	skipz
  1390  0EF7  2EF2               	goto	u1545
  1391  0EF8  0871               	movf	___lwdiv@divisor+1,w
  1392  0EF9  0273               	subwf	___lwdiv@dividend+1,w
  1393  0EFA  1D03               	skipz
  1394  0EFB  2EFE               	goto	u1555
  1395  0EFC  0870               	movf	___lwdiv@divisor,w
  1396  0EFD  0272               	subwf	___lwdiv@dividend,w
  1397  0EFE                     u1555:	
  1398  0EFE  1C03               	skipc
  1399  0EFF  2F07               	goto	l1591
  1400  0F00  0870               	movf	___lwdiv@divisor,w
  1401  0F01  02F2               	subwf	___lwdiv@dividend,f
  1402  0F02  0871               	movf	___lwdiv@divisor+1,w
  1403  0F03  1C03               	skipc
  1404  0F04  03F3               	decf	___lwdiv@dividend+1,f
  1405  0F05  02F3               	subwf	___lwdiv@dividend+1,f
  1406  0F06  1475               	bsf	___lwdiv@quotient,0
  1407  0F07                     l1591:	
  1408  0F07  3001               	movlw	1
  1409  0F08                     u1565:	
  1410  0F08  1003               	clrc
  1411  0F09  0CF1               	rrf	___lwdiv@divisor+1,f
  1412  0F0A  0CF0               	rrf	___lwdiv@divisor,f
  1413  0F0B  3EFF               	addlw	-1
  1414  0F0C  1D03               	skipz
  1415  0F0D  2F08               	goto	u1565
  1416  0F0E  3001               	movlw	1
  1417  0F0F  02F7               	subwf	___lwdiv@counter,f
  1418  0F10  1D03               	btfss	3,2
  1419  0F11  2EF1               	goto	l1585
  1420  0F12                     l1595:	
  1421  0F12  0876               	movf	___lwdiv@quotient+1,w
  1422  0F13  00F1               	movwf	?___lwdiv+1
  1423  0F14  0875               	movf	___lwdiv@quotient,w
  1424  0F15  00F0               	movwf	?___lwdiv
  1425  0F16  0008               	return
  1426  0F17                     __end_of___lwdiv:	
  1427                           
  1428                           	psect	text4
  1429  0DD9                     __ptext4:	
  1430 ;; *************** function _pwmInit2 *****************
  1431 ;; Defined at:
  1432 ;;		line 56 in file "./pwm2.h"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;		None
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg, status,2, status,0, pclath, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1446 ;;      Params:         0       0       0       0       0
  1447 ;;      Locals:         0       0       0       0       0
  1448 ;;      Temps:          0       0       0       0       0
  1449 ;;      Totals:         0       0       0       0       0
  1450 ;;Total ram usage:        0 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    1
  1453 ;; This function calls:
  1454 ;;		_setPR2
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           
  1461                           ;psect for function _pwmInit2
  1462  0DD9                     _pwmInit2:	
  1463                           
  1464                           ;./pwm2.h: 57:     setPR2();
  1465                           
  1466                           ;incstack = 0
  1467                           ; Regs used in _pwmInit2: [wreg+status,2+status,0+pclath+cstack]
  1468  0DD9  120A  158A  25BD   	fcall	_setPR2
  1469                           
  1470                           ;./pwm2.h: 58:     CCP2M3 = 1;
  1471  0DDC  1283               	bcf	3,5	;RP0=0, select bank0
  1472  0DDD  1303               	bcf	3,6	;RP1=0, select bank0
  1473  0DDE  159D               	bsf	29,3	;volatile
  1474                           
  1475                           ;./pwm2.h: 59:     CCP2M2 = 1;
  1476  0DDF  151D               	bsf	29,2	;volatile
  1477                           
  1478                           ;./pwm2.h: 67:     T2CKPS0 = 1;
  1479  0DE0  1412               	bsf	18,0	;volatile
  1480                           
  1481                           ;./pwm2.h: 68:     T2CKPS1 = 1;
  1482  0DE1  1492               	bsf	18,1	;volatile
  1483                           
  1484                           ;./pwm2.h: 70:     TMR2ON = 1;
  1485  0DE2  1512               	bsf	18,2	;volatile
  1486                           
  1487                           ;./pwm2.h: 71:     TRISC1 = 0;
  1488  0DE3  1683               	bsf	3,5	;RP0=1, select bank1
  1489  0DE4  1303               	bcf	3,6	;RP1=0, select bank1
  1490  0DE5  1087               	bcf	7,1	;volatile
  1491  0DE6  0008               	return
  1492  0DE7                     __end_of_pwmInit2:	
  1493                           
  1494                           	psect	text5
  1495  0DCD                     __ptext5:	
  1496 ;; *************** function _pwmInit1 *****************
  1497 ;; Defined at:
  1498 ;;		line 38 in file "./pwm2.h"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;		None
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;		None
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		wreg, status,2, status,0, pclath, cstack
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1512 ;;      Params:         0       0       0       0       0
  1513 ;;      Locals:         0       0       0       0       0
  1514 ;;      Temps:          0       0       0       0       0
  1515 ;;      Totals:         0       0       0       0       0
  1516 ;;Total ram usage:        0 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; Hardware stack levels required when called:    1
  1519 ;; This function calls:
  1520 ;;		_setPR2
  1521 ;; This function is called by:
  1522 ;;		_main
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           
  1527                           ;psect for function _pwmInit1
  1528  0DCD                     _pwmInit1:	
  1529                           
  1530                           ;./pwm2.h: 39:     setPR2();
  1531                           
  1532                           ;incstack = 0
  1533                           ; Regs used in _pwmInit1: [wreg+status,2+status,0+pclath+cstack]
  1534  0DCD  120A  158A  25BD   	fcall	_setPR2
  1535                           
  1536                           ;./pwm2.h: 40:     CCP1M3 = 1;
  1537  0DD0  1283               	bcf	3,5	;RP0=0, select bank0
  1538  0DD1  1303               	bcf	3,6	;RP1=0, select bank0
  1539  0DD2  1597               	bsf	23,3	;volatile
  1540                           
  1541                           ;./pwm2.h: 41:     CCP1M2 = 1;
  1542  0DD3  1517               	bsf	23,2	;volatile
  1543                           
  1544                           ;./pwm2.h: 52:     TMR2ON = 1;
  1545  0DD4  1512               	bsf	18,2	;volatile
  1546                           
  1547                           ;./pwm2.h: 53:     TRISC2 = 0;
  1548  0DD5  1683               	bsf	3,5	;RP0=1, select bank1
  1549  0DD6  1303               	bcf	3,6	;RP1=0, select bank1
  1550  0DD7  1107               	bcf	7,2	;volatile
  1551  0DD8  0008               	return
  1552  0DD9                     __end_of_pwmInit1:	
  1553                           
  1554                           	psect	text6
  1555  0DBD                     __ptext6:	
  1556 ;; *************** function _setPR2 *****************
  1557 ;; Defined at:
  1558 ;;		line 11 in file "./pwm2.h"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;		None
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;		None
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  1    wreg      void 
  1565 ;; Registers used:
  1566 ;;		wreg
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1572 ;;      Params:         0       0       0       0       0
  1573 ;;      Locals:         0       0       0       0       0
  1574 ;;      Temps:          0       0       0       0       0
  1575 ;;      Totals:         0       0       0       0       0
  1576 ;;Total ram usage:        0 bytes
  1577 ;; Hardware stack levels used:    1
  1578 ;; This function calls:
  1579 ;;		Nothing
  1580 ;; This function is called by:
  1581 ;;		_pwmInit1
  1582 ;;		_pwmInit2
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           
  1587                           ;psect for function _setPR2
  1588  0DBD                     _setPR2:	
  1589                           
  1590                           ;./pwm2.h: 12:     PR2 = (20000000 / (5000 * 4 * 16)) - 1;
  1591                           
  1592                           ;incstack = 0
  1593                           ; Regs used in _setPR2: [wreg]
  1594  0DBD  30D3               	movlw	211
  1595  0DBE  1683               	bsf	3,5	;RP0=1, select bank1
  1596  0DBF  1303               	bcf	3,6	;RP1=0, select bank1
  1597  0DC0  0092               	movwf	18	;volatile
  1598  0DC1  0008               	return
  1599  0DC2                     __end_of_setPR2:	
  1600                           
  1601                           	psect	text7
  1602  007A                     __ptext7:	
  1603 ;; *************** function _pwmDuty1 *****************
  1604 ;; Defined at:
  1605 ;;		line 20 in file "./pwm2.h"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;  duty            2   67[BANK0 ] unsigned short 
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;		None
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      void 
  1612 ;; Registers used:
  1613 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1619 ;;      Params:         0       2       0       0       0
  1620 ;;      Locals:         0       0       0       0       0
  1621 ;;      Temps:          0       2       0       0       0
  1622 ;;      Totals:         0       4       0       0       0
  1623 ;;Total ram usage:        4 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; Hardware stack levels required when called:    2
  1626 ;; This function calls:
  1627 ;;		___fldiv
  1628 ;;		___flmul
  1629 ;;		___fltol
  1630 ;;		___xxtofl
  1631 ;;		_pmwMaxDuty
  1632 ;; This function is called by:
  1633 ;;		_main
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           
  1638                           ;psect for function _pwmDuty1
  1639  007A                     _pwmDuty1:	
  1640                           
  1641                           ;./pwm2.h: 21:     if (duty < 1024) {
  1642                           
  1643                           ;incstack = 0
  1644                           ; Regs used in _pwmDuty1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1645  007A  3004               	movlw	4
  1646  007B  1283               	bcf	3,5	;RP0=0, select bank0
  1647  007C  1303               	bcf	3,6	;RP1=0, select bank0
  1648  007D  0264               	subwf	pwmDuty1@duty+1,w
  1649  007E  3000               	movlw	0
  1650  007F  1903               	skipnz
  1651  0080  0263               	subwf	pwmDuty1@duty,w
  1652  0081  1803               	skipnc
  1653  0082  0008               	return
  1654                           
  1655                           ;./pwm2.h: 22:         duty = ((float) duty / 1023) * pmwMaxDuty();
  1656  0083  0863               	movf	pwmDuty1@duty,w
  1657  0084  00F4               	movwf	___xxtofl@val
  1658  0085  0864               	movf	pwmDuty1@duty+1,w
  1659  0086  00F5               	movwf	___xxtofl@val+1
  1660  0087  01F6               	clrf	___xxtofl@val+2
  1661  0088  01F7               	clrf	___xxtofl@val+3
  1662  0089  3000               	movlw	0
  1663  008A  120A  118A  20FE  120A  118A  	fcall	___xxtofl
  1664  008F  0877               	movf	?___xxtofl+3,w
  1665  0090  1283               	bcf	3,5	;RP0=0, select bank0
  1666  0091  1303               	bcf	3,6	;RP1=0, select bank0
  1667  0092  00AD               	movwf	___fldiv@b+3
  1668  0093  0876               	movf	?___xxtofl+2,w
  1669  0094  00AC               	movwf	___fldiv@b+2
  1670  0095  0875               	movf	?___xxtofl+1,w
  1671  0096  00AB               	movwf	___fldiv@b+1
  1672  0097  0874               	movf	?___xxtofl,w
  1673  0098  00AA               	movwf	___fldiv@b
  1674  0099  3044               	movlw	68
  1675  009A  00A9               	movwf	___fldiv@a+3
  1676  009B  307F               	movlw	127
  1677  009C  00A8               	movwf	___fldiv@a+2
  1678  009D  30C0               	movlw	192
  1679  009E  00A7               	movwf	___fldiv@a+1
  1680  009F  3000               	movlw	0
  1681  00A0  00A6               	movwf	___fldiv@a
  1682  00A1  120A  118A  2344  120A  118A  	fcall	___fldiv
  1683  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  1684  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  1685  00A8  0829               	movf	?___fldiv+3,w
  1686  00A9  00C7               	movwf	___flmul@a+3
  1687  00AA  0828               	movf	?___fldiv+2,w
  1688  00AB  00C6               	movwf	___flmul@a+2
  1689  00AC  0827               	movf	?___fldiv+1,w
  1690  00AD  00C5               	movwf	___flmul@a+1
  1691  00AE  0826               	movf	?___fldiv,w
  1692  00AF  00C4               	movwf	___flmul@a
  1693  00B0  120A  118A  2004  120A  118A  	fcall	_pmwMaxDuty
  1694  00B5  0873               	movf	?_pmwMaxDuty+3,w
  1695  00B6  00F7               	movwf	___xxtofl@val+3
  1696  00B7  0872               	movf	?_pmwMaxDuty+2,w
  1697  00B8  00F6               	movwf	___xxtofl@val+2
  1698  00B9  0871               	movf	?_pmwMaxDuty+1,w
  1699  00BA  00F5               	movwf	___xxtofl@val+1
  1700  00BB  0870               	movf	?_pmwMaxDuty,w
  1701  00BC  00F4               	movwf	___xxtofl@val
  1702  00BD  3001               	movlw	1
  1703  00BE  120A  118A  20FE  120A  118A  	fcall	___xxtofl
  1704  00C3  0877               	movf	?___xxtofl+3,w
  1705  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1706  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1707  00C6  00C3               	movwf	___flmul@b+3
  1708  00C7  0876               	movf	?___xxtofl+2,w
  1709  00C8  00C2               	movwf	___flmul@b+2
  1710  00C9  0875               	movf	?___xxtofl+1,w
  1711  00CA  00C1               	movwf	___flmul@b+1
  1712  00CB  0874               	movf	?___xxtofl,w
  1713  00CC  00C0               	movwf	___flmul@b
  1714  00CD  120A  118A  24E7  120A  118A  	fcall	___flmul
  1715  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1716  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  1717  00D4  0843               	movf	?___flmul+3,w
  1718  00D5  00DD               	movwf	___fltol@f1+3
  1719  00D6  0842               	movf	?___flmul+2,w
  1720  00D7  00DC               	movwf	___fltol@f1+2
  1721  00D8  0841               	movf	?___flmul+1,w
  1722  00D9  00DB               	movwf	___fltol@f1+1
  1723  00DA  0840               	movf	?___flmul,w
  1724  00DB  00DA               	movwf	___fltol@f1
  1725  00DC  120A  118A  200D  120A  118A  	fcall	___fltol
  1726  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1727  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  1728  00E3  085B               	movf	?___fltol+1,w
  1729  00E4  00E4               	movwf	pwmDuty1@duty+1
  1730  00E5  085A               	movf	?___fltol,w
  1731  00E6  00E3               	movwf	pwmDuty1@duty
  1732                           
  1733                           ;./pwm2.h: 23:         CCP1X = duty & 2;
  1734  00E7  1297               	bcf	23,5	;volatile
  1735                           
  1736                           ;./pwm2.h: 24:         CCP1Y = duty & 1;
  1737  00E8  1C63               	btfss	pwmDuty1@duty,0
  1738  00E9  28EE               	goto	u2450
  1739  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1740  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1741  00EC  1617               	bsf	23,4	;volatile
  1742  00ED  28F1               	goto	l1955
  1743  00EE                     u2450:	
  1744  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1745  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1746  00F0  1217               	bcf	23,4	;volatile
  1747  00F1                     l1955:	
  1748                           
  1749                           ;./pwm2.h: 25:         CCPR1L = duty >> 2;
  1750  00F1  0864               	movf	pwmDuty1@duty+1,w
  1751  00F2  00E6               	movwf	??_pwmDuty1+1
  1752  00F3  0863               	movf	pwmDuty1@duty,w
  1753  00F4  00E5               	movwf	??_pwmDuty1
  1754  00F5  1003               	clrc
  1755  00F6  0CE6               	rrf	??_pwmDuty1+1,f
  1756  00F7  0CE5               	rrf	??_pwmDuty1,f
  1757  00F8  1003               	clrc
  1758  00F9  0CE6               	rrf	??_pwmDuty1+1,f
  1759  00FA  0CE5               	rrf	??_pwmDuty1,f
  1760  00FB  0865               	movf	??_pwmDuty1,w
  1761  00FC  0095               	movwf	21	;volatile
  1762  00FD  0008               	return
  1763  00FE                     __end_of_pwmDuty1:	
  1764                           
  1765                           	psect	text8
  1766  0004                     __ptext8:	
  1767 ;; *************** function _pmwMaxDuty *****************
  1768 ;; Defined at:
  1769 ;;		line 7 in file "./pwm2.h"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;		None
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  4    0[COMMON] long 
  1776 ;; Registers used:
  1777 ;;		wreg
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 0/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1783 ;;      Params:         4       0       0       0       0
  1784 ;;      Locals:         0       0       0       0       0
  1785 ;;      Temps:          0       0       0       0       0
  1786 ;;      Totals:         4       0       0       0       0
  1787 ;;Total ram usage:        4 bytes
  1788 ;; Hardware stack levels used:    1
  1789 ;; This function calls:
  1790 ;;		Nothing
  1791 ;; This function is called by:
  1792 ;;		_pwmDuty1
  1793 ;;		_pwmDuty2
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           
  1798                           ;psect for function _pmwMaxDuty
  1799  0004                     _pmwMaxDuty:	
  1800                           
  1801                           ;./pwm2.h: 8:     return (float) 20000000 / (5000 * 16);
  1802                           
  1803                           ;incstack = 0
  1804                           ; Regs used in _pmwMaxDuty: [wreg]
  1805  0004  3000               	movlw	0
  1806  0005  00F3               	movwf	?_pmwMaxDuty+3
  1807  0006  3000               	movlw	0
  1808  0007  00F2               	movwf	?_pmwMaxDuty+2
  1809  0008  3005               	movlw	5
  1810  0009  00F1               	movwf	?_pmwMaxDuty+1
  1811  000A  3066               	movlw	102
  1812  000B  00F0               	movwf	?_pmwMaxDuty
  1813  000C  0008               	return
  1814  000D                     __end_of_pmwMaxDuty:	
  1815                           
  1816                           	psect	text9
  1817  00FE                     __ptext9:	
  1818 ;; *************** function ___xxtofl *****************
  1819 ;; Defined at:
  1820 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;  sign            1    wreg     unsigned char 
  1823 ;;  val             4    4[COMMON] long 
  1824 ;; Auto vars:     Size  Location     Type
  1825 ;;  sign            1    0[BANK0 ] unsigned char 
  1826 ;;  arg             4    2[BANK0 ] unsigned long 
  1827 ;;  exp             1    1[BANK0 ] unsigned char 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  4    4[COMMON] unsigned char 
  1830 ;; Registers used:
  1831 ;;		wreg, status,2, status,0
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1837 ;;      Params:         4       0       0       0       0
  1838 ;;      Locals:         0       6       0       0       0
  1839 ;;      Temps:          4       0       0       0       0
  1840 ;;      Totals:         8       6       0       0       0
  1841 ;;Total ram usage:       14 bytes
  1842 ;; Hardware stack levels used:    1
  1843 ;; This function calls:
  1844 ;;		Nothing
  1845 ;; This function is called by:
  1846 ;;		_pwmDuty1
  1847 ;;		_pwmDuty2
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           
  1852                           ;psect for function ___xxtofl
  1853  00FE                     ___xxtofl:	
  1854                           
  1855                           ;incstack = 0
  1856                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1857                           ;___xxtofl@sign stored from wreg
  1858  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1859  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1860  0100  00A0               	movwf	___xxtofl@sign
  1861  0101  0820               	movf	___xxtofl@sign,w
  1862  0102  1D03               	btfss	3,2
  1863  0103  1FF7               	btfss	___xxtofl@val+3,7
  1864  0104  2915               	goto	l1909
  1865  0105  0974               	comf	___xxtofl@val,w
  1866  0106  00A2               	movwf	___xxtofl@arg
  1867  0107  0975               	comf	___xxtofl@val+1,w
  1868  0108  00A3               	movwf	___xxtofl@arg+1
  1869  0109  0976               	comf	___xxtofl@val+2,w
  1870  010A  00A4               	movwf	___xxtofl@arg+2
  1871  010B  0977               	comf	___xxtofl@val+3,w
  1872  010C  00A5               	movwf	___xxtofl@arg+3
  1873  010D  0AA2               	incf	___xxtofl@arg,f
  1874  010E  1903               	skipnz
  1875  010F  0AA3               	incf	___xxtofl@arg+1,f
  1876  0110  1903               	skipnz
  1877  0111  0AA4               	incf	___xxtofl@arg+2,f
  1878  0112  1903               	skipnz
  1879  0113  0AA5               	incf	___xxtofl@arg+3,f
  1880  0114  291D               	goto	l676
  1881  0115                     l1909:	
  1882  0115  0877               	movf	___xxtofl@val+3,w
  1883  0116  00A5               	movwf	___xxtofl@arg+3
  1884  0117  0876               	movf	___xxtofl@val+2,w
  1885  0118  00A4               	movwf	___xxtofl@arg+2
  1886  0119  0875               	movf	___xxtofl@val+1,w
  1887  011A  00A3               	movwf	___xxtofl@arg+1
  1888  011B  0874               	movf	___xxtofl@val,w
  1889  011C  00A2               	movwf	___xxtofl@arg
  1890  011D                     l676:	
  1891  011D  0877               	movf	___xxtofl@val+3,w
  1892  011E  0476               	iorwf	___xxtofl@val+2,w
  1893  011F  0475               	iorwf	___xxtofl@val+1,w
  1894  0120  0474               	iorwf	___xxtofl@val,w
  1895  0121  1D03               	skipz
  1896  0122  292C               	goto	l1915
  1897  0123  3000               	movlw	0
  1898  0124  00F7               	movwf	?___xxtofl+3
  1899  0125  3000               	movlw	0
  1900  0126  00F6               	movwf	?___xxtofl+2
  1901  0127  3000               	movlw	0
  1902  0128  00F5               	movwf	?___xxtofl+1
  1903  0129  3000               	movlw	0
  1904  012A  00F4               	movwf	?___xxtofl
  1905  012B  0008               	return
  1906  012C                     l1915:	
  1907  012C  3096               	movlw	150
  1908  012D  00F8               	movwf	??___xxtofl
  1909  012E  0878               	movf	??___xxtofl,w
  1910  012F  00A1               	movwf	___xxtofl@exp
  1911  0130                     l1919:	
  1912  0130  30FE               	movlw	254
  1913  0131  0525               	andwf	___xxtofl@arg+3,w
  1914  0132  1903               	btfsc	3,2
  1915  0133  295D               	goto	l682
  1916  0134  3001               	movlw	1
  1917  0135  00F8               	movwf	??___xxtofl
  1918  0136  0878               	movf	??___xxtofl,w
  1919  0137  07A1               	addwf	___xxtofl@exp,f
  1920  0138  3001               	movlw	1
  1921  0139                     u2335:	
  1922  0139  1003               	clrc
  1923  013A  0CA5               	rrf	___xxtofl@arg+3,f
  1924  013B  0CA4               	rrf	___xxtofl@arg+2,f
  1925  013C  0CA3               	rrf	___xxtofl@arg+1,f
  1926  013D  0CA2               	rrf	___xxtofl@arg,f
  1927  013E  3EFF               	addlw	-1
  1928  013F  1D03               	skipz
  1929  0140  2939               	goto	u2335
  1930  0141  2930               	goto	l1919
  1931  0142                     l1921:	
  1932  0142  3001               	movlw	1
  1933  0143  00F8               	movwf	??___xxtofl
  1934  0144  0878               	movf	??___xxtofl,w
  1935  0145  07A1               	addwf	___xxtofl@exp,f
  1936  0146  3001               	movlw	1
  1937  0147  07A2               	addwf	___xxtofl@arg,f
  1938  0148  3000               	movlw	0
  1939  0149  1803               	skipnc
  1940  014A  3001               	movlw	1
  1941  014B  07A3               	addwf	___xxtofl@arg+1,f
  1942  014C  3000               	movlw	0
  1943  014D  1803               	skipnc
  1944  014E  3001               	movlw	1
  1945  014F  07A4               	addwf	___xxtofl@arg+2,f
  1946  0150  3000               	movlw	0
  1947  0151  1803               	skipnc
  1948  0152  3001               	movlw	1
  1949  0153  07A5               	addwf	___xxtofl@arg+3,f
  1950  0154  3001               	movlw	1
  1951  0155                     u2355:	
  1952  0155  1003               	clrc
  1953  0156  0CA5               	rrf	___xxtofl@arg+3,f
  1954  0157  0CA4               	rrf	___xxtofl@arg+2,f
  1955  0158  0CA3               	rrf	___xxtofl@arg+1,f
  1956  0159  0CA2               	rrf	___xxtofl@arg,f
  1957  015A  3EFF               	addlw	-1
  1958  015B  1D03               	skipz
  1959  015C  2955               	goto	u2355
  1960  015D                     l682:	
  1961  015D  30FF               	movlw	255
  1962  015E  0525               	andwf	___xxtofl@arg+3,w
  1963  015F  1903               	btfsc	3,2
  1964  0160  2971               	goto	l1929
  1965  0161  2942               	goto	l1921
  1966  0162                     l1931:	
  1967  0162  3002               	movlw	2
  1968  0163  0221               	subwf	___xxtofl@exp,w
  1969  0164  1C03               	btfss	3,0
  1970  0165  2973               	goto	l689
  1971  0166  3001               	movlw	1
  1972  0167  02A1               	subwf	___xxtofl@exp,f
  1973  0168  3001               	movlw	1
  1974  0169  00F8               	movwf	??___xxtofl
  1975  016A                     u2375:	
  1976  016A  1003               	clrc
  1977  016B  0DA2               	rlf	___xxtofl@arg,f
  1978  016C  0DA3               	rlf	___xxtofl@arg+1,f
  1979  016D  0DA4               	rlf	___xxtofl@arg+2,f
  1980  016E  0DA5               	rlf	___xxtofl@arg+3,f
  1981  016F  0BF8               	decfsz	??___xxtofl,f
  1982  0170  296A               	goto	u2375
  1983  0171                     l1929:	
  1984  0171  1FA4               	btfss	___xxtofl@arg+2,7
  1985  0172  2962               	goto	l1931
  1986  0173                     l689:	
  1987  0173  1821               	btfsc	___xxtofl@exp,0
  1988  0174  297D               	goto	l690
  1989  0175  30FF               	movlw	255
  1990  0176  05A2               	andwf	___xxtofl@arg,f
  1991  0177  30FF               	movlw	255
  1992  0178  05A3               	andwf	___xxtofl@arg+1,f
  1993  0179  307F               	movlw	127
  1994  017A  05A4               	andwf	___xxtofl@arg+2,f
  1995  017B  30FF               	movlw	255
  1996  017C  05A5               	andwf	___xxtofl@arg+3,f
  1997  017D                     l690:	
  1998  017D  1003               	clrc
  1999  017E  0CA1               	rrf	___xxtofl@exp,f
  2000  017F  0821               	movf	___xxtofl@exp,w
  2001  0180  00F8               	movwf	??___xxtofl
  2002  0181  01F9               	clrf	??___xxtofl+1
  2003  0182  01FA               	clrf	??___xxtofl+2
  2004  0183  01FB               	clrf	??___xxtofl+3
  2005  0184  3018               	movlw	24
  2006  0185                     u2415:	
  2007  0185  1003               	clrc
  2008  0186  0DF8               	rlf	??___xxtofl,f
  2009  0187  0DF9               	rlf	??___xxtofl+1,f
  2010  0188  0DFA               	rlf	??___xxtofl+2,f
  2011  0189  0DFB               	rlf	??___xxtofl+3,f
  2012  018A  3EFF               	addlw	-1
  2013  018B  1D03               	skipz
  2014  018C  2985               	goto	u2415
  2015  018D  0878               	movf	??___xxtofl,w
  2016  018E  04A2               	iorwf	___xxtofl@arg,f
  2017  018F  0879               	movf	??___xxtofl+1,w
  2018  0190  04A3               	iorwf	___xxtofl@arg+1,f
  2019  0191  087A               	movf	??___xxtofl+2,w
  2020  0192  04A4               	iorwf	___xxtofl@arg+2,f
  2021  0193  087B               	movf	??___xxtofl+3,w
  2022  0194  04A5               	iorwf	___xxtofl@arg+3,f
  2023  0195  0820               	movf	___xxtofl@sign,w
  2024  0196  1D03               	btfss	3,2
  2025  0197  1FF7               	btfss	___xxtofl@val+3,7
  2026  0198  299A               	goto	l1943
  2027  0199  17A5               	bsf	___xxtofl@arg+3,7
  2028  019A                     l1943:	
  2029  019A  0825               	movf	___xxtofl@arg+3,w
  2030  019B  00F7               	movwf	?___xxtofl+3
  2031  019C  0824               	movf	___xxtofl@arg+2,w
  2032  019D  00F6               	movwf	?___xxtofl+2
  2033  019E  0823               	movf	___xxtofl@arg+1,w
  2034  019F  00F5               	movwf	?___xxtofl+1
  2035  01A0  0822               	movf	___xxtofl@arg,w
  2036  01A1  00F4               	movwf	?___xxtofl
  2037  01A2  0008               	return
  2038  01A3                     __end_of___xxtofl:	
  2039                           
  2040                           	psect	text10
  2041  000D                     __ptext10:	
  2042 ;; *************** function ___fltol *****************
  2043 ;; Defined at:
  2044 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;  f1              4   58[BANK0 ] unsigned char 
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;  exp1            1   13[COMMON] unsigned char 
  2049 ;;  sign1           1   12[COMMON] unsigned char 
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  4   58[BANK0 ] long 
  2052 ;; Registers used:
  2053 ;;		wreg, status,2, status,0
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2059 ;;      Params:         0       4       0       0       0
  2060 ;;      Locals:         2       0       0       0       0
  2061 ;;      Temps:          0       5       0       0       0
  2062 ;;      Totals:         2       9       0       0       0
  2063 ;;Total ram usage:       11 bytes
  2064 ;; Hardware stack levels used:    1
  2065 ;; This function calls:
  2066 ;;		Nothing
  2067 ;; This function is called by:
  2068 ;;		_pwmDuty1
  2069 ;;		_pwmDuty2
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           
  2074                           ;psect for function ___fltol
  2075  000D                     ___fltol:	
  2076                           
  2077                           ;incstack = 0
  2078                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2079  000D  1003               	clrc
  2080  000E  1283               	bcf	3,5	;RP0=0, select bank0
  2081  000F  1303               	bcf	3,6	;RP1=0, select bank0
  2082  0010  0D5C               	rlf	___fltol@f1+2,w
  2083  0011  0D5D               	rlf	___fltol@f1+3,w
  2084  0012  00DE               	movwf	??___fltol
  2085  0013  085E               	movf	??___fltol,w
  2086  0014  00FD               	movwf	___fltol@exp1
  2087  0015  087D               	movf	___fltol@exp1,w
  2088  0016  1D03               	btfss	3,2
  2089  0017  2821               	goto	l1543
  2090  0018                     l1539:	
  2091  0018  3000               	movlw	0
  2092  0019  00DD               	movwf	?___fltol+3
  2093  001A  3000               	movlw	0
  2094  001B  00DC               	movwf	?___fltol+2
  2095  001C  3000               	movlw	0
  2096  001D  00DB               	movwf	?___fltol+1
  2097  001E  3000               	movlw	0
  2098  001F  00DA               	movwf	?___fltol
  2099  0020  0008               	return
  2100  0021                     l1543:	
  2101  0021  085A               	movf	___fltol@f1,w
  2102  0022  00DE               	movwf	??___fltol
  2103  0023  085B               	movf	___fltol@f1+1,w
  2104  0024  00DF               	movwf	??___fltol+1
  2105  0025  085C               	movf	___fltol@f1+2,w
  2106  0026  00E0               	movwf	??___fltol+2
  2107  0027  085D               	movf	___fltol@f1+3,w
  2108  0028  00E1               	movwf	??___fltol+3
  2109  0029  301F               	movlw	31
  2110  002A                     u1425:	
  2111  002A  1003               	clrc
  2112  002B  0CE1               	rrf	??___fltol+3,f
  2113  002C  0CE0               	rrf	??___fltol+2,f
  2114  002D  0CDF               	rrf	??___fltol+1,f
  2115  002E  0CDE               	rrf	??___fltol,f
  2116  002F  3EFF               	addlw	-1
  2117  0030  1D03               	skipz
  2118  0031  282A               	goto	u1425
  2119  0032  085E               	movf	??___fltol,w
  2120  0033  00E2               	movwf	??___fltol+4
  2121  0034  0862               	movf	??___fltol+4,w
  2122  0035  00FC               	movwf	___fltol@sign1
  2123  0036  17DC               	bsf	___fltol@f1+2,7
  2124  0037  30FF               	movlw	255
  2125  0038  05DA               	andwf	___fltol@f1,f
  2126  0039  30FF               	movlw	255
  2127  003A  05DB               	andwf	___fltol@f1+1,f
  2128  003B  30FF               	movlw	255
  2129  003C  05DC               	andwf	___fltol@f1+2,f
  2130  003D  3000               	movlw	0
  2131  003E  05DD               	andwf	___fltol@f1+3,f
  2132  003F  3096               	movlw	150
  2133  0040  02FD               	subwf	___fltol@exp1,f
  2134  0041  1FFD               	btfss	___fltol@exp1,7
  2135  0042  2858               	goto	l1561
  2136  0043  087D               	movf	___fltol@exp1,w
  2137  0044  3A80               	xorlw	128
  2138  0045  3E97               	addlw	151
  2139  0046  1C03               	btfss	3,0
  2140  0047  2818               	goto	l1539
  2141  0048                     l1559:	
  2142  0048  3001               	movlw	1
  2143  0049                     u1455:	
  2144  0049  1003               	clrc
  2145  004A  0CDD               	rrf	___fltol@f1+3,f
  2146  004B  0CDC               	rrf	___fltol@f1+2,f
  2147  004C  0CDB               	rrf	___fltol@f1+1,f
  2148  004D  0CDA               	rrf	___fltol@f1,f
  2149  004E  3EFF               	addlw	-1
  2150  004F  1D03               	skipz
  2151  0050  2849               	goto	u1455
  2152  0051  3001               	movlw	1
  2153  0052  00DE               	movwf	??___fltol
  2154  0053  085E               	movf	??___fltol,w
  2155  0054  07FD               	addwf	___fltol@exp1,f
  2156  0055  1903               	btfsc	3,2
  2157  0056  286B               	goto	l1569
  2158  0057  2848               	goto	l1559
  2159  0058                     l1561:	
  2160  0058  3020               	movlw	32
  2161  0059  027D               	subwf	___fltol@exp1,w
  2162  005A  1803               	btfsc	3,0
  2163  005B  2818               	goto	l1539
  2164  005C                     l442:	
  2165  005C  087D               	movf	___fltol@exp1,w
  2166  005D  1903               	btfsc	3,2
  2167  005E  286B               	goto	l1569
  2168  005F  3001               	movlw	1
  2169  0060  00DE               	movwf	??___fltol
  2170  0061                     u1485:	
  2171  0061  1003               	clrc
  2172  0062  0DDA               	rlf	___fltol@f1,f
  2173  0063  0DDB               	rlf	___fltol@f1+1,f
  2174  0064  0DDC               	rlf	___fltol@f1+2,f
  2175  0065  0DDD               	rlf	___fltol@f1+3,f
  2176  0066  0BDE               	decfsz	??___fltol,f
  2177  0067  2861               	goto	u1485
  2178  0068  3001               	movlw	1
  2179  0069  02FD               	subwf	___fltol@exp1,f
  2180  006A  285C               	goto	l442
  2181  006B                     l1569:	
  2182  006B  087C               	movf	___fltol@sign1,w
  2183  006C  1903               	btfsc	3,2
  2184  006D  0008               	return
  2185  006E  09DA               	comf	___fltol@f1,f
  2186  006F  09DB               	comf	___fltol@f1+1,f
  2187  0070  09DC               	comf	___fltol@f1+2,f
  2188  0071  09DD               	comf	___fltol@f1+3,f
  2189  0072  0ADA               	incf	___fltol@f1,f
  2190  0073  1903               	skipnz
  2191  0074  0ADB               	incf	___fltol@f1+1,f
  2192  0075  1903               	skipnz
  2193  0076  0ADC               	incf	___fltol@f1+2,f
  2194  0077  1903               	skipnz
  2195  0078  0ADD               	incf	___fltol@f1+3,f
  2196  0079  0008               	return
  2197  007A                     __end_of___fltol:	
  2198                           
  2199                           	psect	text11
  2200  04E7                     __ptext11:	
  2201 ;; *************** function ___flmul *****************
  2202 ;; Defined at:
  2203 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;  b               4   32[BANK0 ] long 
  2206 ;;  a               4   36[BANK0 ] long 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;  prod            4   52[BANK0 ] struct .
  2209 ;;  grs             4   46[BANK0 ] unsigned long 
  2210 ;;  temp            2   56[BANK0 ] struct .
  2211 ;;  bexp            1   51[BANK0 ] unsigned char 
  2212 ;;  aexp            1   50[BANK0 ] unsigned char 
  2213 ;;  sign            1   45[BANK0 ] unsigned char 
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  4   32[BANK0 ] unsigned char 
  2216 ;; Registers used:
  2217 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2223 ;;      Params:         0       8       0       0       0
  2224 ;;      Locals:         0      13       0       0       0
  2225 ;;      Temps:          0       5       0       0       0
  2226 ;;      Totals:         0      26       0       0       0
  2227 ;;Total ram usage:       26 bytes
  2228 ;; Hardware stack levels used:    1
  2229 ;; Hardware stack levels required when called:    1
  2230 ;; This function calls:
  2231 ;;		__Umul8_16
  2232 ;; This function is called by:
  2233 ;;		_pwmDuty1
  2234 ;;		_pwmDuty2
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           
  2239                           ;psect for function ___flmul
  2240  04E7                     ___flmul:	
  2241                           
  2242                           ;incstack = 0
  2243                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2244  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  2245  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  2246  04E9  0843               	movf	___flmul@b+3,w
  2247  04EA  3980               	andlw	128
  2248  04EB  00C8               	movwf	??___flmul
  2249  04EC  0848               	movf	??___flmul,w
  2250  04ED  00CD               	movwf	___flmul@sign
  2251  04EE  0843               	movf	___flmul@b+3,w
  2252  04EF  00C8               	movwf	??___flmul
  2253  04F0  0748               	addwf	??___flmul,w
  2254  04F1  00C9               	movwf	??___flmul+1
  2255  04F2  0849               	movf	??___flmul+1,w
  2256  04F3  00D3               	movwf	___flmul@bexp
  2257  04F4  1BC2               	btfsc	___flmul@b+2,7
  2258  04F5  1453               	bsf	___flmul@bexp,0
  2259  04F6  0853               	movf	___flmul@bexp,w
  2260  04F7  1903               	btfsc	3,2
  2261  04F8  2D06               	goto	l1779
  2262  04F9  0A53               	incf	___flmul@bexp,w
  2263  04FA  1D03               	btfss	3,2
  2264  04FB  2D04               	goto	l1777
  2265  04FC  3000               	movlw	0
  2266  04FD  00C3               	movwf	___flmul@b+3
  2267  04FE  3000               	movlw	0
  2268  04FF  00C2               	movwf	___flmul@b+2
  2269  0500  3000               	movlw	0
  2270  0501  00C1               	movwf	___flmul@b+1
  2271  0502  3000               	movlw	0
  2272  0503  00C0               	movwf	___flmul@b
  2273  0504                     l1777:	
  2274  0504  17C2               	bsf	___flmul@b+2,7
  2275  0505  2D0E               	goto	l1781
  2276  0506                     l1779:	
  2277  0506  3000               	movlw	0
  2278  0507  00C3               	movwf	___flmul@b+3
  2279  0508  3000               	movlw	0
  2280  0509  00C2               	movwf	___flmul@b+2
  2281  050A  3000               	movlw	0
  2282  050B  00C1               	movwf	___flmul@b+1
  2283  050C  3000               	movlw	0
  2284  050D  00C0               	movwf	___flmul@b
  2285  050E                     l1781:	
  2286  050E  0847               	movf	___flmul@a+3,w
  2287  050F  3980               	andlw	128
  2288  0510  00C8               	movwf	??___flmul
  2289  0511  0848               	movf	??___flmul,w
  2290  0512  06CD               	xorwf	___flmul@sign,f
  2291  0513  0847               	movf	___flmul@a+3,w
  2292  0514  00C8               	movwf	??___flmul
  2293  0515  0748               	addwf	??___flmul,w
  2294  0516  00C9               	movwf	??___flmul+1
  2295  0517  0849               	movf	??___flmul+1,w
  2296  0518  00D2               	movwf	___flmul@aexp
  2297  0519  1BC6               	btfsc	___flmul@a+2,7
  2298  051A  1452               	bsf	___flmul@aexp,0
  2299  051B  0852               	movf	___flmul@aexp,w
  2300  051C  1903               	btfsc	3,2
  2301  051D  2D2B               	goto	l1797
  2302  051E  0A52               	incf	___flmul@aexp,w
  2303  051F  1D03               	btfss	3,2
  2304  0520  2D29               	goto	l1795
  2305  0521  3000               	movlw	0
  2306  0522  00C7               	movwf	___flmul@a+3
  2307  0523  3000               	movlw	0
  2308  0524  00C6               	movwf	___flmul@a+2
  2309  0525  3000               	movlw	0
  2310  0526  00C5               	movwf	___flmul@a+1
  2311  0527  3000               	movlw	0
  2312  0528  00C4               	movwf	___flmul@a
  2313  0529                     l1795:	
  2314  0529  17C6               	bsf	___flmul@a+2,7
  2315  052A  2D33               	goto	l1799
  2316  052B                     l1797:	
  2317  052B  3000               	movlw	0
  2318  052C  00C7               	movwf	___flmul@a+3
  2319  052D  3000               	movlw	0
  2320  052E  00C6               	movwf	___flmul@a+2
  2321  052F  3000               	movlw	0
  2322  0530  00C5               	movwf	___flmul@a+1
  2323  0531  3000               	movlw	0
  2324  0532  00C4               	movwf	___flmul@a
  2325  0533                     l1799:	
  2326  0533  0852               	movf	___flmul@aexp,w
  2327  0534  1D03               	btfss	3,2
  2328  0535  0853               	movf	___flmul@bexp,w
  2329  0536  1D03               	btfss	3,2
  2330  0537  2D41               	goto	l1807
  2331  0538  3000               	movlw	0
  2332  0539  00C3               	movwf	?___flmul+3
  2333  053A  3000               	movlw	0
  2334  053B  00C2               	movwf	?___flmul+2
  2335  053C  3000               	movlw	0
  2336  053D  00C1               	movwf	?___flmul+1
  2337  053E  3000               	movlw	0
  2338  053F  00C0               	movwf	?___flmul
  2339  0540  0008               	return
  2340  0541                     l1807:	
  2341  0541  0840               	movf	___flmul@b,w
  2342  0542  00C8               	movwf	??___flmul
  2343  0543  0848               	movf	??___flmul,w
  2344  0544  00F0               	movwf	__Umul8_16@multiplicand
  2345  0545  0846               	movf	___flmul@a+2,w
  2346  0546  120A  158A  264D  120A  118A  	fcall	__Umul8_16
  2347  054B  0871               	movf	?__Umul8_16+1,w
  2348  054C  1283               	bcf	3,5	;RP0=0, select bank0
  2349  054D  1303               	bcf	3,6	;RP1=0, select bank0
  2350  054E  00D9               	movwf	___flmul@temp+1
  2351  054F  0870               	movf	?__Umul8_16,w
  2352  0550  00D8               	movwf	___flmul@temp
  2353  0551  0858               	movf	___flmul@temp,w
  2354  0552  00C8               	movwf	??___flmul
  2355  0553  01C9               	clrf	??___flmul+1
  2356  0554  01CA               	clrf	??___flmul+2
  2357  0555  01CB               	clrf	??___flmul+3
  2358  0556  084B               	movf	??___flmul+3,w
  2359  0557  00D1               	movwf	___flmul@grs+3
  2360  0558  084A               	movf	??___flmul+2,w
  2361  0559  00D0               	movwf	___flmul@grs+2
  2362  055A  0849               	movf	??___flmul+1,w
  2363  055B  00CF               	movwf	___flmul@grs+1
  2364  055C  0848               	movf	??___flmul,w
  2365  055D  00CE               	movwf	___flmul@grs
  2366  055E  0859               	movf	___flmul@temp+1,w
  2367  055F  00C8               	movwf	??___flmul
  2368  0560  01C9               	clrf	??___flmul+1
  2369  0561  01CA               	clrf	??___flmul+2
  2370  0562  01CB               	clrf	??___flmul+3
  2371  0563  084B               	movf	??___flmul+3,w
  2372  0564  00D7               	movwf	___flmul@prod+3
  2373  0565  084A               	movf	??___flmul+2,w
  2374  0566  00D6               	movwf	___flmul@prod+2
  2375  0567  0849               	movf	??___flmul+1,w
  2376  0568  00D5               	movwf	___flmul@prod+1
  2377  0569  0848               	movf	??___flmul,w
  2378  056A  00D4               	movwf	___flmul@prod
  2379  056B  0841               	movf	___flmul@b+1,w
  2380  056C  00C8               	movwf	??___flmul
  2381  056D  0848               	movf	??___flmul,w
  2382  056E  00F0               	movwf	__Umul8_16@multiplicand
  2383  056F  0845               	movf	___flmul@a+1,w
  2384  0570  120A  158A  264D  120A  118A  	fcall	__Umul8_16
  2385  0575  0871               	movf	?__Umul8_16+1,w
  2386  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2387  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2388  0578  00D9               	movwf	___flmul@temp+1
  2389  0579  0870               	movf	?__Umul8_16,w
  2390  057A  00D8               	movwf	___flmul@temp
  2391  057B  0858               	movf	___flmul@temp,w
  2392  057C  00C8               	movwf	??___flmul
  2393  057D  01C9               	clrf	??___flmul+1
  2394  057E  01CA               	clrf	??___flmul+2
  2395  057F  01CB               	clrf	??___flmul+3
  2396  0580  0848               	movf	??___flmul,w
  2397  0581  07CE               	addwf	___flmul@grs,f
  2398  0582  0849               	movf	??___flmul+1,w
  2399  0583  1103               	clrz
  2400  0584  1803               	skipnc
  2401  0585  3E01               	addlw	1
  2402  0586  1D03               	btfss	3,2
  2403  0587  07CF               	addwf	___flmul@grs+1,f
  2404  0588  084A               	movf	??___flmul+2,w
  2405  0589  1103               	clrz
  2406  058A  1803               	skipnc
  2407  058B  3E01               	addlw	1
  2408  058C  1D03               	btfss	3,2
  2409  058D  07D0               	addwf	___flmul@grs+2,f
  2410  058E  084B               	movf	??___flmul+3,w
  2411  058F  1103               	clrz
  2412  0590  1803               	skipnc
  2413  0591  3E01               	addlw	1
  2414  0592  1D03               	btfss	3,2
  2415  0593  07D1               	addwf	___flmul@grs+3,f
  2416  0594  0859               	movf	___flmul@temp+1,w
  2417  0595  00C8               	movwf	??___flmul
  2418  0596  01C9               	clrf	??___flmul+1
  2419  0597  01CA               	clrf	??___flmul+2
  2420  0598  01CB               	clrf	??___flmul+3
  2421  0599  0848               	movf	??___flmul,w
  2422  059A  07D4               	addwf	___flmul@prod,f
  2423  059B  0849               	movf	??___flmul+1,w
  2424  059C  1103               	clrz
  2425  059D  1803               	skipnc
  2426  059E  3E01               	addlw	1
  2427  059F  1D03               	btfss	3,2
  2428  05A0  07D5               	addwf	___flmul@prod+1,f
  2429  05A1  084A               	movf	??___flmul+2,w
  2430  05A2  1103               	clrz
  2431  05A3  1803               	skipnc
  2432  05A4  3E01               	addlw	1
  2433  05A5  1D03               	btfss	3,2
  2434  05A6  07D6               	addwf	___flmul@prod+2,f
  2435  05A7  084B               	movf	??___flmul+3,w
  2436  05A8  1103               	clrz
  2437  05A9  1803               	skipnc
  2438  05AA  3E01               	addlw	1
  2439  05AB  1D03               	btfss	3,2
  2440  05AC  07D7               	addwf	___flmul@prod+3,f
  2441  05AD  0842               	movf	___flmul@b+2,w
  2442  05AE  00C8               	movwf	??___flmul
  2443  05AF  0848               	movf	??___flmul,w
  2444  05B0  00F0               	movwf	__Umul8_16@multiplicand
  2445  05B1  0844               	movf	___flmul@a,w
  2446  05B2  120A  158A  264D  120A  118A  	fcall	__Umul8_16
  2447  05B7  0871               	movf	?__Umul8_16+1,w
  2448  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  2449  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  2450  05BA  00D9               	movwf	___flmul@temp+1
  2451  05BB  0870               	movf	?__Umul8_16,w
  2452  05BC  00D8               	movwf	___flmul@temp
  2453  05BD  0858               	movf	___flmul@temp,w
  2454  05BE  00C8               	movwf	??___flmul
  2455  05BF  01C9               	clrf	??___flmul+1
  2456  05C0  01CA               	clrf	??___flmul+2
  2457  05C1  01CB               	clrf	??___flmul+3
  2458  05C2  0848               	movf	??___flmul,w
  2459  05C3  07CE               	addwf	___flmul@grs,f
  2460  05C4  0849               	movf	??___flmul+1,w
  2461  05C5  1103               	clrz
  2462  05C6  1803               	skipnc
  2463  05C7  3E01               	addlw	1
  2464  05C8  1D03               	btfss	3,2
  2465  05C9  07CF               	addwf	___flmul@grs+1,f
  2466  05CA  084A               	movf	??___flmul+2,w
  2467  05CB  1103               	clrz
  2468  05CC  1803               	skipnc
  2469  05CD  3E01               	addlw	1
  2470  05CE  1D03               	btfss	3,2
  2471  05CF  07D0               	addwf	___flmul@grs+2,f
  2472  05D0  084B               	movf	??___flmul+3,w
  2473  05D1  1103               	clrz
  2474  05D2  1803               	skipnc
  2475  05D3  3E01               	addlw	1
  2476  05D4  1D03               	btfss	3,2
  2477  05D5  07D1               	addwf	___flmul@grs+3,f
  2478  05D6  0859               	movf	___flmul@temp+1,w
  2479  05D7  00C8               	movwf	??___flmul
  2480  05D8  01C9               	clrf	??___flmul+1
  2481  05D9  01CA               	clrf	??___flmul+2
  2482  05DA  01CB               	clrf	??___flmul+3
  2483  05DB  0848               	movf	??___flmul,w
  2484  05DC  07D4               	addwf	___flmul@prod,f
  2485  05DD  0849               	movf	??___flmul+1,w
  2486  05DE  1103               	clrz
  2487  05DF  1803               	skipnc
  2488  05E0  3E01               	addlw	1
  2489  05E1  1D03               	btfss	3,2
  2490  05E2  07D5               	addwf	___flmul@prod+1,f
  2491  05E3  084A               	movf	??___flmul+2,w
  2492  05E4  1103               	clrz
  2493  05E5  1803               	skipnc
  2494  05E6  3E01               	addlw	1
  2495  05E7  1D03               	btfss	3,2
  2496  05E8  07D6               	addwf	___flmul@prod+2,f
  2497  05E9  084B               	movf	??___flmul+3,w
  2498  05EA  1103               	clrz
  2499  05EB  1803               	skipnc
  2500  05EC  3E01               	addlw	1
  2501  05ED  1D03               	btfss	3,2
  2502  05EE  07D7               	addwf	___flmul@prod+3,f
  2503  05EF  3008               	movlw	8
  2504  05F0  00C8               	movwf	??___flmul
  2505  05F1                     u2055:	
  2506  05F1  1003               	clrc
  2507  05F2  0DCE               	rlf	___flmul@grs,f
  2508  05F3  0DCF               	rlf	___flmul@grs+1,f
  2509  05F4  0DD0               	rlf	___flmul@grs+2,f
  2510  05F5  0DD1               	rlf	___flmul@grs+3,f
  2511  05F6  0BC8               	decfsz	??___flmul,f
  2512  05F7  2DF1               	goto	u2055
  2513  05F8  0841               	movf	___flmul@b+1,w
  2514  05F9  00C8               	movwf	??___flmul
  2515  05FA  0848               	movf	??___flmul,w
  2516  05FB  00F0               	movwf	__Umul8_16@multiplicand
  2517  05FC  0844               	movf	___flmul@a,w
  2518  05FD  120A  158A  264D  120A  118A  	fcall	__Umul8_16
  2519  0602  0871               	movf	?__Umul8_16+1,w
  2520  0603  1283               	bcf	3,5	;RP0=0, select bank0
  2521  0604  1303               	bcf	3,6	;RP1=0, select bank0
  2522  0605  00D9               	movwf	___flmul@temp+1
  2523  0606  0870               	movf	?__Umul8_16,w
  2524  0607  00D8               	movwf	___flmul@temp
  2525  0608  0858               	movf	___flmul@temp,w
  2526  0609  00C8               	movwf	??___flmul
  2527  060A  0859               	movf	___flmul@temp+1,w
  2528  060B  00C9               	movwf	??___flmul+1
  2529  060C  01CA               	clrf	??___flmul+2
  2530  060D  01CB               	clrf	??___flmul+3
  2531  060E  0848               	movf	??___flmul,w
  2532  060F  07CE               	addwf	___flmul@grs,f
  2533  0610  0849               	movf	??___flmul+1,w
  2534  0611  1103               	clrz
  2535  0612  1803               	skipnc
  2536  0613  3E01               	addlw	1
  2537  0614  1D03               	btfss	3,2
  2538  0615  07CF               	addwf	___flmul@grs+1,f
  2539  0616  084A               	movf	??___flmul+2,w
  2540  0617  1103               	clrz
  2541  0618  1803               	skipnc
  2542  0619  3E01               	addlw	1
  2543  061A  1D03               	btfss	3,2
  2544  061B  07D0               	addwf	___flmul@grs+2,f
  2545  061C  084B               	movf	??___flmul+3,w
  2546  061D  1103               	clrz
  2547  061E  1803               	skipnc
  2548  061F  3E01               	addlw	1
  2549  0620  1D03               	btfss	3,2
  2550  0621  07D1               	addwf	___flmul@grs+3,f
  2551  0622  0840               	movf	___flmul@b,w
  2552  0623  00C8               	movwf	??___flmul
  2553  0624  0848               	movf	??___flmul,w
  2554  0625  00F0               	movwf	__Umul8_16@multiplicand
  2555  0626  0845               	movf	___flmul@a+1,w
  2556  0627  120A  158A  264D  120A  118A  	fcall	__Umul8_16
  2557  062C  0871               	movf	?__Umul8_16+1,w
  2558  062D  1283               	bcf	3,5	;RP0=0, select bank0
  2559  062E  1303               	bcf	3,6	;RP1=0, select bank0
  2560  062F  00D9               	movwf	___flmul@temp+1
  2561  0630  0870               	movf	?__Umul8_16,w
  2562  0631  00D8               	movwf	___flmul@temp
  2563  0632  0858               	movf	___flmul@temp,w
  2564  0633  00C8               	movwf	??___flmul
  2565  0634  0859               	movf	___flmul@temp+1,w
  2566  0635  00C9               	movwf	??___flmul+1
  2567  0636  01CA               	clrf	??___flmul+2
  2568  0637  01CB               	clrf	??___flmul+3
  2569  0638  0848               	movf	??___flmul,w
  2570  0639  07CE               	addwf	___flmul@grs,f
  2571  063A  0849               	movf	??___flmul+1,w
  2572  063B  1103               	clrz
  2573  063C  1803               	skipnc
  2574  063D  3E01               	addlw	1
  2575  063E  1D03               	btfss	3,2
  2576  063F  07CF               	addwf	___flmul@grs+1,f
  2577  0640  084A               	movf	??___flmul+2,w
  2578  0641  1103               	clrz
  2579  0642  1803               	skipnc
  2580  0643  3E01               	addlw	1
  2581  0644  1D03               	btfss	3,2
  2582  0645  07D0               	addwf	___flmul@grs+2,f
  2583  0646  084B               	movf	??___flmul+3,w
  2584  0647  1103               	clrz
  2585  0648  1803               	skipnc
  2586  0649  3E01               	addlw	1
  2587  064A  1D03               	btfss	3,2
  2588  064B  07D1               	addwf	___flmul@grs+3,f
  2589  064C  3008               	movlw	8
  2590  064D  00C8               	movwf	??___flmul
  2591  064E                     u2085:	
  2592  064E  1003               	clrc
  2593  064F  0DCE               	rlf	___flmul@grs,f
  2594  0650  0DCF               	rlf	___flmul@grs+1,f
  2595  0651  0DD0               	rlf	___flmul@grs+2,f
  2596  0652  0DD1               	rlf	___flmul@grs+3,f
  2597  0653  0BC8               	decfsz	??___flmul,f
  2598  0654  2E4E               	goto	u2085
  2599  0655  0840               	movf	___flmul@b,w
  2600  0656  00C8               	movwf	??___flmul
  2601  0657  0848               	movf	??___flmul,w
  2602  0658  00F0               	movwf	__Umul8_16@multiplicand
  2603  0659  0844               	movf	___flmul@a,w
  2604  065A  120A  158A  264D  120A  118A  	fcall	__Umul8_16
  2605  065F  0871               	movf	?__Umul8_16+1,w
  2606  0660  1283               	bcf	3,5	;RP0=0, select bank0
  2607  0661  1303               	bcf	3,6	;RP1=0, select bank0
  2608  0662  00D9               	movwf	___flmul@temp+1
  2609  0663  0870               	movf	?__Umul8_16,w
  2610  0664  00D8               	movwf	___flmul@temp
  2611  0665  0858               	movf	___flmul@temp,w
  2612  0666  00C8               	movwf	??___flmul
  2613  0667  0859               	movf	___flmul@temp+1,w
  2614  0668  00C9               	movwf	??___flmul+1
  2615  0669  01CA               	clrf	??___flmul+2
  2616  066A  01CB               	clrf	??___flmul+3
  2617  066B  0848               	movf	??___flmul,w
  2618  066C  07CE               	addwf	___flmul@grs,f
  2619  066D  0849               	movf	??___flmul+1,w
  2620  066E  1103               	clrz
  2621  066F  1803               	skipnc
  2622  0670  3E01               	addlw	1
  2623  0671  1D03               	btfss	3,2
  2624  0672  07CF               	addwf	___flmul@grs+1,f
  2625  0673  084A               	movf	??___flmul+2,w
  2626  0674  1103               	clrz
  2627  0675  1803               	skipnc
  2628  0676  3E01               	addlw	1
  2629  0677  1D03               	btfss	3,2
  2630  0678  07D0               	addwf	___flmul@grs+2,f
  2631  0679  084B               	movf	??___flmul+3,w
  2632  067A  1103               	clrz
  2633  067B  1803               	skipnc
  2634  067C  3E01               	addlw	1
  2635  067D  1D03               	btfss	3,2
  2636  067E  07D1               	addwf	___flmul@grs+3,f
  2637  067F  0841               	movf	___flmul@b+1,w
  2638  0680  00C8               	movwf	??___flmul
  2639  0681  0848               	movf	??___flmul,w
  2640  0682  00F0               	movwf	__Umul8_16@multiplicand
  2641  0683  0846               	movf	___flmul@a+2,w
  2642  0684  120A  158A  264D  120A  118A  	fcall	__Umul8_16
  2643  0689  0871               	movf	?__Umul8_16+1,w
  2644  068A  1283               	bcf	3,5	;RP0=0, select bank0
  2645  068B  1303               	bcf	3,6	;RP1=0, select bank0
  2646  068C  00D9               	movwf	___flmul@temp+1
  2647  068D  0870               	movf	?__Umul8_16,w
  2648  068E  00D8               	movwf	___flmul@temp
  2649  068F  0858               	movf	___flmul@temp,w
  2650  0690  00C8               	movwf	??___flmul
  2651  0691  0859               	movf	___flmul@temp+1,w
  2652  0692  00C9               	movwf	??___flmul+1
  2653  0693  01CA               	clrf	??___flmul+2
  2654  0694  01CB               	clrf	??___flmul+3
  2655  0695  0848               	movf	??___flmul,w
  2656  0696  07D4               	addwf	___flmul@prod,f
  2657  0697  0849               	movf	??___flmul+1,w
  2658  0698  1103               	clrz
  2659  0699  1803               	skipnc
  2660  069A  3E01               	addlw	1
  2661  069B  1D03               	btfss	3,2
  2662  069C  07D5               	addwf	___flmul@prod+1,f
  2663  069D  084A               	movf	??___flmul+2,w
  2664  069E  1103               	clrz
  2665  069F  1803               	skipnc
  2666  06A0  3E01               	addlw	1
  2667  06A1  1D03               	btfss	3,2
  2668  06A2  07D6               	addwf	___flmul@prod+2,f
  2669  06A3  084B               	movf	??___flmul+3,w
  2670  06A4  1103               	clrz
  2671  06A5  1803               	skipnc
  2672  06A6  3E01               	addlw	1
  2673  06A7  1D03               	btfss	3,2
  2674  06A8  07D7               	addwf	___flmul@prod+3,f
  2675  06A9  0842               	movf	___flmul@b+2,w
  2676  06AA  00C8               	movwf	??___flmul
  2677  06AB  0848               	movf	??___flmul,w
  2678  06AC  00F0               	movwf	__Umul8_16@multiplicand
  2679  06AD  0845               	movf	___flmul@a+1,w
  2680  06AE  120A  158A  264D  120A  118A  	fcall	__Umul8_16
  2681  06B3  0871               	movf	?__Umul8_16+1,w
  2682  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  2683  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  2684  06B6  00D9               	movwf	___flmul@temp+1
  2685  06B7  0870               	movf	?__Umul8_16,w
  2686  06B8  00D8               	movwf	___flmul@temp
  2687  06B9  0858               	movf	___flmul@temp,w
  2688  06BA  00C8               	movwf	??___flmul
  2689  06BB  0859               	movf	___flmul@temp+1,w
  2690  06BC  00C9               	movwf	??___flmul+1
  2691  06BD  01CA               	clrf	??___flmul+2
  2692  06BE  01CB               	clrf	??___flmul+3
  2693  06BF  0848               	movf	??___flmul,w
  2694  06C0  07D4               	addwf	___flmul@prod,f
  2695  06C1  0849               	movf	??___flmul+1,w
  2696  06C2  1103               	clrz
  2697  06C3  1803               	skipnc
  2698  06C4  3E01               	addlw	1
  2699  06C5  1D03               	btfss	3,2
  2700  06C6  07D5               	addwf	___flmul@prod+1,f
  2701  06C7  084A               	movf	??___flmul+2,w
  2702  06C8  1103               	clrz
  2703  06C9  1803               	skipnc
  2704  06CA  3E01               	addlw	1
  2705  06CB  1D03               	btfss	3,2
  2706  06CC  07D6               	addwf	___flmul@prod+2,f
  2707  06CD  084B               	movf	??___flmul+3,w
  2708  06CE  1103               	clrz
  2709  06CF  1803               	skipnc
  2710  06D0  3E01               	addlw	1
  2711  06D1  1D03               	btfss	3,2
  2712  06D2  07D7               	addwf	___flmul@prod+3,f
  2713  06D3  0842               	movf	___flmul@b+2,w
  2714  06D4  00C8               	movwf	??___flmul
  2715  06D5  0848               	movf	??___flmul,w
  2716  06D6  00F0               	movwf	__Umul8_16@multiplicand
  2717  06D7  0846               	movf	___flmul@a+2,w
  2718  06D8  120A  158A  264D  120A  118A  	fcall	__Umul8_16
  2719  06DD  0871               	movf	?__Umul8_16+1,w
  2720  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  2721  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  2722  06E0  00D9               	movwf	___flmul@temp+1
  2723  06E1  0870               	movf	?__Umul8_16,w
  2724  06E2  00D8               	movwf	___flmul@temp
  2725  06E3  0858               	movf	___flmul@temp,w
  2726  06E4  00C8               	movwf	??___flmul
  2727  06E5  0859               	movf	___flmul@temp+1,w
  2728  06E6  00C9               	movwf	??___flmul+1
  2729  06E7  01CA               	clrf	??___flmul+2
  2730  06E8  01CB               	clrf	??___flmul+3
  2731  06E9  3008               	movlw	8
  2732  06EA                     u2125:	
  2733  06EA  1003               	clrc
  2734  06EB  0DC8               	rlf	??___flmul,f
  2735  06EC  0DC9               	rlf	??___flmul+1,f
  2736  06ED  0DCA               	rlf	??___flmul+2,f
  2737  06EE  0DCB               	rlf	??___flmul+3,f
  2738  06EF  3EFF               	addlw	-1
  2739  06F0  1D03               	skipz
  2740  06F1  2EEA               	goto	u2125
  2741  06F2  0848               	movf	??___flmul,w
  2742  06F3  07D4               	addwf	___flmul@prod,f
  2743  06F4  0849               	movf	??___flmul+1,w
  2744  06F5  1103               	clrz
  2745  06F6  1803               	skipnc
  2746  06F7  3E01               	addlw	1
  2747  06F8  1D03               	btfss	3,2
  2748  06F9  07D5               	addwf	___flmul@prod+1,f
  2749  06FA  084A               	movf	??___flmul+2,w
  2750  06FB  1103               	clrz
  2751  06FC  1803               	skipnc
  2752  06FD  3E01               	addlw	1
  2753  06FE  1D03               	btfss	3,2
  2754  06FF  07D6               	addwf	___flmul@prod+2,f
  2755  0700  084B               	movf	??___flmul+3,w
  2756  0701  1103               	clrz
  2757  0702  1803               	skipnc
  2758  0703  3E01               	addlw	1
  2759  0704  1D03               	btfss	3,2
  2760  0705  07D7               	addwf	___flmul@prod+3,f
  2761  0706  084E               	movf	___flmul@grs,w
  2762  0707  00C8               	movwf	??___flmul
  2763  0708  084F               	movf	___flmul@grs+1,w
  2764  0709  00C9               	movwf	??___flmul+1
  2765  070A  0850               	movf	___flmul@grs+2,w
  2766  070B  00CA               	movwf	??___flmul+2
  2767  070C  0851               	movf	___flmul@grs+3,w
  2768  070D  00CB               	movwf	??___flmul+3
  2769  070E  3018               	movlw	24
  2770  070F                     u2145:	
  2771  070F  1003               	clrc
  2772  0710  0CCB               	rrf	??___flmul+3,f
  2773  0711  0CCA               	rrf	??___flmul+2,f
  2774  0712  0CC9               	rrf	??___flmul+1,f
  2775  0713  0CC8               	rrf	??___flmul,f
  2776  0714  3EFF               	addlw	-1
  2777  0715  1D03               	skipz
  2778  0716  2F0F               	goto	u2145
  2779  0717  0848               	movf	??___flmul,w
  2780  0718  07D4               	addwf	___flmul@prod,f
  2781  0719  0849               	movf	??___flmul+1,w
  2782  071A  1103               	clrz
  2783  071B  1803               	skipnc
  2784  071C  3E01               	addlw	1
  2785  071D  1D03               	btfss	3,2
  2786  071E  07D5               	addwf	___flmul@prod+1,f
  2787  071F  084A               	movf	??___flmul+2,w
  2788  0720  1103               	clrz
  2789  0721  1803               	skipnc
  2790  0722  3E01               	addlw	1
  2791  0723  1D03               	btfss	3,2
  2792  0724  07D6               	addwf	___flmul@prod+2,f
  2793  0725  084B               	movf	??___flmul+3,w
  2794  0726  1103               	clrz
  2795  0727  1803               	skipnc
  2796  0728  3E01               	addlw	1
  2797  0729  1D03               	btfss	3,2
  2798  072A  07D7               	addwf	___flmul@prod+3,f
  2799  072B  3008               	movlw	8
  2800  072C  00C8               	movwf	??___flmul
  2801  072D                     u2165:	
  2802  072D  1003               	clrc
  2803  072E  0DCE               	rlf	___flmul@grs,f
  2804  072F  0DCF               	rlf	___flmul@grs+1,f
  2805  0730  0DD0               	rlf	___flmul@grs+2,f
  2806  0731  0DD1               	rlf	___flmul@grs+3,f
  2807  0732  0BC8               	decfsz	??___flmul,f
  2808  0733  2F2D               	goto	u2165
  2809  0734  0853               	movf	___flmul@bexp,w
  2810  0735  0752               	addwf	___flmul@aexp,w
  2811  0736  00C8               	movwf	??___flmul
  2812  0737  01C9               	clrf	??___flmul+1
  2813  0738  0DC9               	rlf	??___flmul+1,f
  2814  0739  0848               	movf	??___flmul,w
  2815  073A  3E82               	addlw	130
  2816  073B  00D8               	movwf	___flmul@temp
  2817  073C  0849               	movf	??___flmul+1,w
  2818  073D  1803               	skipnc
  2819  073E  3E01               	addlw	1
  2820  073F  3EFF               	addlw	255
  2821  0740  00D9               	movwf	___flmul@temp+1
  2822  0741                     l1859:	
  2823  0741  1BD6               	btfsc	___flmul@prod+2,7
  2824  0742  2F5E               	goto	l1861
  2825  0743  3001               	movlw	1
  2826  0744  00C8               	movwf	??___flmul
  2827  0745                     u2175:	
  2828  0745  1003               	clrc
  2829  0746  0DD4               	rlf	___flmul@prod,f
  2830  0747  0DD5               	rlf	___flmul@prod+1,f
  2831  0748  0DD6               	rlf	___flmul@prod+2,f
  2832  0749  0DD7               	rlf	___flmul@prod+3,f
  2833  074A  0BC8               	decfsz	??___flmul,f
  2834  074B  2F45               	goto	u2175
  2835  074C  1BD1               	btfsc	___flmul@grs+3,7
  2836  074D  1454               	bsf	___flmul@prod,0
  2837  074E  3001               	movlw	1
  2838  074F  00C8               	movwf	??___flmul
  2839  0750                     u2195:	
  2840  0750  1003               	clrc
  2841  0751  0DCE               	rlf	___flmul@grs,f
  2842  0752  0DCF               	rlf	___flmul@grs+1,f
  2843  0753  0DD0               	rlf	___flmul@grs+2,f
  2844  0754  0DD1               	rlf	___flmul@grs+3,f
  2845  0755  0BC8               	decfsz	??___flmul,f
  2846  0756  2F50               	goto	u2195
  2847  0757  30FF               	movlw	255
  2848  0758  07D8               	addwf	___flmul@temp,f
  2849  0759  1803               	skipnc
  2850  075A  0AD9               	incf	___flmul@temp+1,f
  2851  075B  30FF               	movlw	255
  2852  075C  07D9               	addwf	___flmul@temp+1,f
  2853  075D  2F41               	goto	l1859
  2854  075E                     l1861:	
  2855  075E  01D2               	clrf	___flmul@aexp
  2856  075F  1FD1               	btfss	___flmul@grs+3,7
  2857  0760  2F77               	goto	l1871
  2858  0761  30FF               	movlw	255
  2859  0762  054E               	andwf	___flmul@grs,w
  2860  0763  00C8               	movwf	??___flmul
  2861  0764  30FF               	movlw	255
  2862  0765  054F               	andwf	___flmul@grs+1,w
  2863  0766  00C9               	movwf	??___flmul+1
  2864  0767  30FF               	movlw	255
  2865  0768  0550               	andwf	___flmul@grs+2,w
  2866  0769  00CA               	movwf	??___flmul+2
  2867  076A  307F               	movlw	127
  2868  076B  0551               	andwf	___flmul@grs+3,w
  2869  076C  00CB               	movwf	??___flmul+3
  2870  076D  084B               	movf	??___flmul+3,w
  2871  076E  044A               	iorwf	??___flmul+2,w
  2872  076F  0449               	iorwf	??___flmul+1,w
  2873  0770  0448               	iorwf	??___flmul,w
  2874  0771  1903               	skipnz
  2875  0772  1854               	btfsc	___flmul@prod,0
  2876  0773  2F75               	goto	l1867
  2877  0774  2F77               	goto	l1871
  2878  0775                     l1867:	
  2879  0775  01D2               	clrf	___flmul@aexp
  2880  0776  0AD2               	incf	___flmul@aexp,f
  2881  0777                     l1871:	
  2882  0777  0852               	movf	___flmul@aexp,w
  2883  0778  1903               	btfsc	3,2
  2884  0779  2FA9               	goto	l1881
  2885  077A  3001               	movlw	1
  2886  077B  07D4               	addwf	___flmul@prod,f
  2887  077C  3000               	movlw	0
  2888  077D  1803               	skipnc
  2889  077E  3001               	movlw	1
  2890  077F  07D5               	addwf	___flmul@prod+1,f
  2891  0780  3000               	movlw	0
  2892  0781  1803               	skipnc
  2893  0782  3001               	movlw	1
  2894  0783  07D6               	addwf	___flmul@prod+2,f
  2895  0784  3000               	movlw	0
  2896  0785  1803               	skipnc
  2897  0786  3001               	movlw	1
  2898  0787  07D7               	addwf	___flmul@prod+3,f
  2899  0788  1C57               	btfss	___flmul@prod+3,0
  2900  0789  2FA9               	goto	l1881
  2901  078A  0854               	movf	___flmul@prod,w
  2902  078B  00C8               	movwf	??___flmul
  2903  078C  0855               	movf	___flmul@prod+1,w
  2904  078D  00C9               	movwf	??___flmul+1
  2905  078E  0856               	movf	___flmul@prod+2,w
  2906  078F  00CA               	movwf	??___flmul+2
  2907  0790  0857               	movf	___flmul@prod+3,w
  2908  0791  00CB               	movwf	??___flmul+3
  2909  0792  3001               	movlw	1
  2910  0793  00CC               	movwf	??___flmul+4
  2911  0794                     u2265:	
  2912  0794  0D4B               	rlf	??___flmul+3,w
  2913  0795  0CCB               	rrf	??___flmul+3,f
  2914  0796  0CCA               	rrf	??___flmul+2,f
  2915  0797  0CC9               	rrf	??___flmul+1,f
  2916  0798  0CC8               	rrf	??___flmul,f
  2917  0799  0BCC               	decfsz	??___flmul+4,f
  2918  079A  2F94               	goto	u2265
  2919  079B  084B               	movf	??___flmul+3,w
  2920  079C  00D7               	movwf	___flmul@prod+3
  2921  079D  084A               	movf	??___flmul+2,w
  2922  079E  00D6               	movwf	___flmul@prod+2
  2923  079F  0849               	movf	??___flmul+1,w
  2924  07A0  00D5               	movwf	___flmul@prod+1
  2925  07A1  0848               	movf	??___flmul,w
  2926  07A2  00D4               	movwf	___flmul@prod
  2927  07A3  3001               	movlw	1
  2928  07A4  07D8               	addwf	___flmul@temp,f
  2929  07A5  1803               	skipnc
  2930  07A6  0AD9               	incf	___flmul@temp+1,f
  2931  07A7  3000               	movlw	0
  2932  07A8  07D9               	addwf	___flmul@temp+1,f
  2933  07A9                     l1881:	
  2934  07A9  0859               	movf	___flmul@temp+1,w
  2935  07AA  3A80               	xorlw	128
  2936  07AB  00FF               	movwf	127
  2937  07AC  3080               	movlw	128
  2938  07AD  027F               	subwf	127,w
  2939  07AE  1D03               	skipz
  2940  07AF  2FB2               	goto	u2275
  2941  07B0  30FF               	movlw	255
  2942  07B1  0258               	subwf	___flmul@temp,w
  2943  07B2                     u2275:	
  2944  07B2  1C03               	skipc
  2945  07B3  2FBF               	goto	l1885
  2946  07B4  307F               	movlw	127
  2947  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  2948  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  2949  07B7  00D7               	movwf	___flmul@prod+3
  2950  07B8  3080               	movlw	128
  2951  07B9  00D6               	movwf	___flmul@prod+2
  2952  07BA  3000               	movlw	0
  2953  07BB  00D5               	movwf	___flmul@prod+1
  2954  07BC  3000               	movlw	0
  2955  07BD  00D4               	movwf	___flmul@prod
  2956  07BE  2FEF               	goto	l650
  2957  07BF                     l1885:	
  2958  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  2959  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  2960  07C1  0859               	movf	___flmul@temp+1,w
  2961  07C2  3A80               	xorlw	128
  2962  07C3  00FF               	movwf	127
  2963  07C4  3080               	movlw	128
  2964  07C5  027F               	subwf	127,w
  2965  07C6  1D03               	skipz
  2966  07C7  2FCA               	goto	u2285
  2967  07C8  3001               	movlw	1
  2968  07C9  0258               	subwf	___flmul@temp,w
  2969  07CA                     u2285:	
  2970  07CA  1803               	skipnc
  2971  07CB  2FD8               	goto	l1891
  2972  07CC  3000               	movlw	0
  2973  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  2974  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  2975  07CF  00D7               	movwf	___flmul@prod+3
  2976  07D0  3000               	movlw	0
  2977  07D1  00D6               	movwf	___flmul@prod+2
  2978  07D2  3000               	movlw	0
  2979  07D3  00D5               	movwf	___flmul@prod+1
  2980  07D4  3000               	movlw	0
  2981  07D5  00D4               	movwf	___flmul@prod
  2982  07D6  01CD               	clrf	___flmul@sign
  2983  07D7  2FEF               	goto	l650
  2984  07D8                     l1891:	
  2985  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  2986  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  2987  07DA  0858               	movf	___flmul@temp,w
  2988  07DB  00C8               	movwf	??___flmul
  2989  07DC  0848               	movf	??___flmul,w
  2990  07DD  00D3               	movwf	___flmul@bexp
  2991  07DE  30FF               	movlw	255
  2992  07DF  05D4               	andwf	___flmul@prod,f
  2993  07E0  30FF               	movlw	255
  2994  07E1  05D5               	andwf	___flmul@prod+1,f
  2995  07E2  307F               	movlw	127
  2996  07E3  05D6               	andwf	___flmul@prod+2,f
  2997  07E4  3000               	movlw	0
  2998  07E5  05D7               	andwf	___flmul@prod+3,f
  2999  07E6  1853               	btfsc	___flmul@bexp,0
  3000  07E7  17D6               	bsf	___flmul@prod+2,7
  3001  07E8  0853               	movf	___flmul@bexp,w
  3002  07E9  00C8               	movwf	??___flmul
  3003  07EA  1003               	clrc
  3004  07EB  0C48               	rrf	??___flmul,w
  3005  07EC  00C9               	movwf	??___flmul+1
  3006  07ED  0849               	movf	??___flmul+1,w
  3007  07EE  00D7               	movwf	___flmul@prod+3
  3008  07EF                     l650:	
  3009  07EF  084D               	movf	___flmul@sign,w
  3010  07F0  00C8               	movwf	??___flmul
  3011  07F1  0848               	movf	??___flmul,w
  3012  07F2  04D7               	iorwf	___flmul@prod+3,f
  3013  07F3  0857               	movf	___flmul@prod+3,w
  3014  07F4  00C3               	movwf	?___flmul+3
  3015  07F5  0856               	movf	___flmul@prod+2,w
  3016  07F6  00C2               	movwf	?___flmul+2
  3017  07F7  0855               	movf	___flmul@prod+1,w
  3018  07F8  00C1               	movwf	?___flmul+1
  3019  07F9  0854               	movf	___flmul@prod,w
  3020  07FA  00C0               	movwf	?___flmul
  3021  07FB  0008               	return
  3022  07FC                     __end_of___flmul:	
  3023                           
  3024                           	psect	text12
  3025  0E4D                     __ptext12:	
  3026 ;; *************** function __Umul8_16 *****************
  3027 ;; Defined at:
  3028 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;  multiplier      1    wreg     unsigned char 
  3031 ;;  multiplicand    1    0[COMMON] unsigned char 
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;  multiplier      1    8[COMMON] unsigned char 
  3034 ;;  word_mpld       2    6[COMMON] unsigned int 
  3035 ;;  product         2    4[COMMON] unsigned int 
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  2    0[COMMON] unsigned int 
  3038 ;; Registers used:
  3039 ;;		wreg, status,2, status,0
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3045 ;;      Params:         2       0       0       0       0
  3046 ;;      Locals:         5       0       0       0       0
  3047 ;;      Temps:          2       0       0       0       0
  3048 ;;      Totals:         9       0       0       0       0
  3049 ;;Total ram usage:        9 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; This function calls:
  3052 ;;		Nothing
  3053 ;; This function is called by:
  3054 ;;		___flmul
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           
  3059                           ;psect for function __Umul8_16
  3060  0E4D                     __Umul8_16:	
  3061                           
  3062                           ;incstack = 0
  3063                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3064                           ;__Umul8_16@multiplier stored from wreg
  3065  0E4D  00F8               	movwf	__Umul8_16@multiplier
  3066  0E4E  01F4               	clrf	__Umul8_16@product
  3067  0E4F  01F5               	clrf	__Umul8_16@product+1
  3068  0E50  0870               	movf	__Umul8_16@multiplicand,w
  3069  0E51  00F2               	movwf	??__Umul8_16
  3070  0E52  01F3               	clrf	??__Umul8_16+1
  3071  0E53  0872               	movf	??__Umul8_16,w
  3072  0E54  00F6               	movwf	__Umul8_16@word_mpld
  3073  0E55  0873               	movf	??__Umul8_16+1,w
  3074  0E56  00F7               	movwf	__Umul8_16@word_mpld+1
  3075  0E57                     l1491:	
  3076  0E57  1C78               	btfss	__Umul8_16@multiplier,0
  3077  0E58  2E5F               	goto	l695
  3078  0E59  0876               	movf	__Umul8_16@word_mpld,w
  3079  0E5A  07F4               	addwf	__Umul8_16@product,f
  3080  0E5B  1803               	skipnc
  3081  0E5C  0AF5               	incf	__Umul8_16@product+1,f
  3082  0E5D  0877               	movf	__Umul8_16@word_mpld+1,w
  3083  0E5E  07F5               	addwf	__Umul8_16@product+1,f
  3084  0E5F                     l695:	
  3085  0E5F  3001               	movlw	1
  3086  0E60                     u1385:	
  3087  0E60  1003               	clrc
  3088  0E61  0DF6               	rlf	__Umul8_16@word_mpld,f
  3089  0E62  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  3090  0E63  3EFF               	addlw	-1
  3091  0E64  1D03               	skipz
  3092  0E65  2E60               	goto	u1385
  3093  0E66  1003               	clrc
  3094  0E67  0CF8               	rrf	__Umul8_16@multiplier,f
  3095  0E68  0878               	movf	__Umul8_16@multiplier,w
  3096  0E69  1D03               	btfss	3,2
  3097  0E6A  2E57               	goto	l1491
  3098  0E6B  0875               	movf	__Umul8_16@product+1,w
  3099  0E6C  00F1               	movwf	?__Umul8_16+1
  3100  0E6D  0874               	movf	__Umul8_16@product,w
  3101  0E6E  00F0               	movwf	?__Umul8_16
  3102  0E6F  0008               	return
  3103  0E70                     __end_of__Umul8_16:	
  3104                           
  3105                           	psect	text13
  3106  0344                     __ptext13:	
  3107 ;; *************** function ___fldiv *****************
  3108 ;; Defined at:
  3109 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;  a               4    6[BANK0 ] unsigned int 
  3112 ;;  b               4   10[BANK0 ] unsigned int 
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  grs             4   26[BANK0 ] unsigned long 
  3115 ;;  rem             4   19[BANK0 ] unsigned long 
  3116 ;;  new_exp         2   24[BANK0 ] int 
  3117 ;;  aexp            1   31[BANK0 ] unsigned char 
  3118 ;;  bexp            1   30[BANK0 ] unsigned char 
  3119 ;;  sign            1   23[BANK0 ] unsigned char 
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  4    6[BANK0 ] unsigned char 
  3122 ;; Registers used:
  3123 ;;		wreg, status,2, status,0, btemp+1
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3129 ;;      Params:         0       8       0       0       0
  3130 ;;      Locals:         0      13       0       0       0
  3131 ;;      Temps:          0       5       0       0       0
  3132 ;;      Totals:         0      26       0       0       0
  3133 ;;Total ram usage:       26 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; This function calls:
  3136 ;;		Nothing
  3137 ;; This function is called by:
  3138 ;;		_pwmDuty1
  3139 ;;		_pwmDuty2
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           
  3144                           ;psect for function ___fldiv
  3145  0344                     ___fldiv:	
  3146                           
  3147                           ;incstack = 0
  3148                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  3149  0344  1283               	bcf	3,5	;RP0=0, select bank0
  3150  0345  1303               	bcf	3,6	;RP1=0, select bank0
  3151  0346  082D               	movf	___fldiv@b+3,w
  3152  0347  3980               	andlw	128
  3153  0348  00AE               	movwf	??___fldiv
  3154  0349  082E               	movf	??___fldiv,w
  3155  034A  00B7               	movwf	___fldiv@sign
  3156  034B  082D               	movf	___fldiv@b+3,w
  3157  034C  00AE               	movwf	??___fldiv
  3158  034D  072E               	addwf	??___fldiv,w
  3159  034E  00AF               	movwf	??___fldiv+1
  3160  034F  082F               	movf	??___fldiv+1,w
  3161  0350  00BE               	movwf	___fldiv@bexp
  3162  0351  1BAC               	btfsc	___fldiv@b+2,7
  3163  0352  143E               	bsf	___fldiv@bexp,0
  3164  0353  083E               	movf	___fldiv@bexp,w
  3165  0354  1903               	btfsc	3,2
  3166  0355  2B64               	goto	l1639
  3167  0356  0A3E               	incf	___fldiv@bexp,w
  3168  0357  1D03               	btfss	3,2
  3169  0358  2B61               	goto	l1635
  3170  0359  3000               	movlw	0
  3171  035A  00AD               	movwf	___fldiv@b+3
  3172  035B  3000               	movlw	0
  3173  035C  00AC               	movwf	___fldiv@b+2
  3174  035D  3000               	movlw	0
  3175  035E  00AB               	movwf	___fldiv@b+1
  3176  035F  3000               	movlw	0
  3177  0360  00AA               	movwf	___fldiv@b
  3178  0361                     l1635:	
  3179  0361  17AC               	bsf	___fldiv@b+2,7
  3180  0362  01AD               	clrf	___fldiv@b+3
  3181  0363  2B6C               	goto	l1641
  3182  0364                     l1639:	
  3183  0364  3000               	movlw	0
  3184  0365  00AD               	movwf	___fldiv@b+3
  3185  0366  3000               	movlw	0
  3186  0367  00AC               	movwf	___fldiv@b+2
  3187  0368  3000               	movlw	0
  3188  0369  00AB               	movwf	___fldiv@b+1
  3189  036A  3000               	movlw	0
  3190  036B  00AA               	movwf	___fldiv@b
  3191  036C                     l1641:	
  3192  036C  0829               	movf	___fldiv@a+3,w
  3193  036D  3980               	andlw	128
  3194  036E  00AE               	movwf	??___fldiv
  3195  036F  082E               	movf	??___fldiv,w
  3196  0370  06B7               	xorwf	___fldiv@sign,f
  3197  0371  0829               	movf	___fldiv@a+3,w
  3198  0372  00AE               	movwf	??___fldiv
  3199  0373  072E               	addwf	??___fldiv,w
  3200  0374  00AF               	movwf	??___fldiv+1
  3201  0375  082F               	movf	??___fldiv+1,w
  3202  0376  00BF               	movwf	___fldiv@aexp
  3203  0377  1BA8               	btfsc	___fldiv@a+2,7
  3204  0378  143F               	bsf	___fldiv@aexp,0
  3205  0379  083F               	movf	___fldiv@aexp,w
  3206  037A  1903               	btfsc	3,2
  3207  037B  2B8A               	goto	l1659
  3208  037C  0A3F               	incf	___fldiv@aexp,w
  3209  037D  1D03               	btfss	3,2
  3210  037E  2B87               	goto	l1655
  3211  037F  3000               	movlw	0
  3212  0380  00A9               	movwf	___fldiv@a+3
  3213  0381  3000               	movlw	0
  3214  0382  00A8               	movwf	___fldiv@a+2
  3215  0383  3000               	movlw	0
  3216  0384  00A7               	movwf	___fldiv@a+1
  3217  0385  3000               	movlw	0
  3218  0386  00A6               	movwf	___fldiv@a
  3219  0387                     l1655:	
  3220  0387  17A8               	bsf	___fldiv@a+2,7
  3221  0388  01A9               	clrf	___fldiv@a+3
  3222  0389  2B92               	goto	l598
  3223  038A                     l1659:	
  3224  038A  3000               	movlw	0
  3225  038B  00A9               	movwf	___fldiv@a+3
  3226  038C  3000               	movlw	0
  3227  038D  00A8               	movwf	___fldiv@a+2
  3228  038E  3000               	movlw	0
  3229  038F  00A7               	movwf	___fldiv@a+1
  3230  0390  3000               	movlw	0
  3231  0391  00A6               	movwf	___fldiv@a
  3232  0392                     l598:	
  3233  0392  0829               	movf	___fldiv@a+3,w
  3234  0393  0428               	iorwf	___fldiv@a+2,w
  3235  0394  0427               	iorwf	___fldiv@a+1,w
  3236  0395  0426               	iorwf	___fldiv@a,w
  3237  0396  1D03               	skipz
  3238  0397  2BB1               	goto	l1669
  3239  0398  3000               	movlw	0
  3240  0399  00AD               	movwf	___fldiv@b+3
  3241  039A  3000               	movlw	0
  3242  039B  00AC               	movwf	___fldiv@b+2
  3243  039C  3000               	movlw	0
  3244  039D  00AB               	movwf	___fldiv@b+1
  3245  039E  3000               	movlw	0
  3246  039F  00AA               	movwf	___fldiv@b
  3247  03A0  3080               	movlw	128
  3248  03A1  04AC               	iorwf	___fldiv@b+2,f
  3249  03A2  307F               	movlw	127
  3250  03A3  04AD               	iorwf	___fldiv@b+3,f
  3251  03A4                     L1:	
  3252  03A4  0837               	movf	___fldiv@sign,w
  3253  03A5  00AE               	movwf	??___fldiv
  3254  03A6  082E               	movf	??___fldiv,w
  3255  03A7  04AD               	iorwf	___fldiv@b+3,f
  3256  03A8  082D               	movf	___fldiv@b+3,w
  3257  03A9  00A9               	movwf	?___fldiv+3
  3258  03AA  082C               	movf	___fldiv@b+2,w
  3259  03AB  00A8               	movwf	?___fldiv+2
  3260  03AC  082B               	movf	___fldiv@b+1,w
  3261  03AD  00A7               	movwf	?___fldiv+1
  3262  03AE  082A               	movf	___fldiv@b,w
  3263  03AF  00A6               	movwf	?___fldiv
  3264  03B0  0008               	return
  3265  03B1                     l1669:	
  3266  03B1  083E               	movf	___fldiv@bexp,w
  3267  03B2  1D03               	btfss	3,2
  3268  03B3  2BBD               	goto	l1675
  3269  03B4  3000               	movlw	0
  3270  03B5  00A9               	movwf	?___fldiv+3
  3271  03B6  3000               	movlw	0
  3272  03B7  00A8               	movwf	?___fldiv+2
  3273  03B8  3000               	movlw	0
  3274  03B9  00A7               	movwf	?___fldiv+1
  3275  03BA  3000               	movlw	0
  3276  03BB  00A6               	movwf	?___fldiv
  3277  03BC  0008               	return
  3278  03BD                     l1675:	
  3279  03BD  083E               	movf	___fldiv@bexp,w
  3280  03BE  00AE               	movwf	??___fldiv
  3281  03BF  01AF               	clrf	??___fldiv+1
  3282  03C0  082F               	movf	??___fldiv+1,w
  3283  03C1  00B1               	movwf	??___fldiv+3
  3284  03C2  083F               	movf	___fldiv@aexp,w
  3285  03C3  022E               	subwf	??___fldiv,w
  3286  03C4  00B0               	movwf	??___fldiv+2
  3287  03C5  1C03               	skipc
  3288  03C6  03B1               	decf	??___fldiv+3,f
  3289  03C7  0830               	movf	??___fldiv+2,w
  3290  03C8  3E7F               	addlw	127
  3291  03C9  00B8               	movwf	___fldiv@new_exp
  3292  03CA  0831               	movf	??___fldiv+3,w
  3293  03CB  1803               	skipnc
  3294  03CC  3E01               	addlw	1
  3295  03CD  3E00               	addlw	0
  3296  03CE  00B9               	movwf	___fldiv@new_exp+1
  3297  03CF  082D               	movf	___fldiv@b+3,w
  3298  03D0  00B6               	movwf	___fldiv@rem+3
  3299  03D1  082C               	movf	___fldiv@b+2,w
  3300  03D2  00B5               	movwf	___fldiv@rem+2
  3301  03D3  082B               	movf	___fldiv@b+1,w
  3302  03D4  00B4               	movwf	___fldiv@rem+1
  3303  03D5  082A               	movf	___fldiv@b,w
  3304  03D6  00B3               	movwf	___fldiv@rem
  3305  03D7  3000               	movlw	0
  3306  03D8  00AD               	movwf	___fldiv@b+3
  3307  03D9  3000               	movlw	0
  3308  03DA  00AC               	movwf	___fldiv@b+2
  3309  03DB  3000               	movlw	0
  3310  03DC  00AB               	movwf	___fldiv@b+1
  3311  03DD  3000               	movlw	0
  3312  03DE  00AA               	movwf	___fldiv@b
  3313  03DF  3000               	movlw	0
  3314  03E0  00BD               	movwf	___fldiv@grs+3
  3315  03E1  3000               	movlw	0
  3316  03E2  00BC               	movwf	___fldiv@grs+2
  3317  03E3  3000               	movlw	0
  3318  03E4  00BB               	movwf	___fldiv@grs+1
  3319  03E5  3000               	movlw	0
  3320  03E6  00BA               	movwf	___fldiv@grs
  3321  03E7  01BF               	clrf	___fldiv@aexp
  3322  03E8                     l1703:	
  3323  03E8  301A               	movlw	26
  3324  03E9  023F               	subwf	___fldiv@aexp,w
  3325  03EA  1803               	btfsc	3,0
  3326  03EB  2C30               	goto	l1705
  3327  03EC  083F               	movf	___fldiv@aexp,w
  3328  03ED  1903               	btfsc	3,2
  3329  03EE  2C0C               	goto	l1695
  3330  03EF  3001               	movlw	1
  3331  03F0  00AE               	movwf	??___fldiv
  3332  03F1                     u1735:	
  3333  03F1  1003               	clrc
  3334  03F2  0DB3               	rlf	___fldiv@rem,f
  3335  03F3  0DB4               	rlf	___fldiv@rem+1,f
  3336  03F4  0DB5               	rlf	___fldiv@rem+2,f
  3337  03F5  0DB6               	rlf	___fldiv@rem+3,f
  3338  03F6  0BAE               	decfsz	??___fldiv,f
  3339  03F7  2BF1               	goto	u1735
  3340  03F8  3001               	movlw	1
  3341  03F9  00AE               	movwf	??___fldiv
  3342  03FA                     u1745:	
  3343  03FA  1003               	clrc
  3344  03FB  0DAA               	rlf	___fldiv@b,f
  3345  03FC  0DAB               	rlf	___fldiv@b+1,f
  3346  03FD  0DAC               	rlf	___fldiv@b+2,f
  3347  03FE  0DAD               	rlf	___fldiv@b+3,f
  3348  03FF  0BAE               	decfsz	??___fldiv,f
  3349  0400  2BFA               	goto	u1745
  3350  0401  1BBD               	btfsc	___fldiv@grs+3,7
  3351  0402  142A               	bsf	___fldiv@b,0
  3352  0403  3001               	movlw	1
  3353  0404  00AE               	movwf	??___fldiv
  3354  0405                     u1765:	
  3355  0405  1003               	clrc
  3356  0406  0DBA               	rlf	___fldiv@grs,f
  3357  0407  0DBB               	rlf	___fldiv@grs+1,f
  3358  0408  0DBC               	rlf	___fldiv@grs+2,f
  3359  0409  0DBD               	rlf	___fldiv@grs+3,f
  3360  040A  0BAE               	decfsz	??___fldiv,f
  3361  040B  2C05               	goto	u1765
  3362  040C                     l1695:	
  3363  040C  0829               	movf	___fldiv@a+3,w
  3364  040D  0236               	subwf	___fldiv@rem+3,w
  3365  040E  1D03               	skipz
  3366  040F  2C1A               	goto	u1775
  3367  0410  0828               	movf	___fldiv@a+2,w
  3368  0411  0235               	subwf	___fldiv@rem+2,w
  3369  0412  1D03               	skipz
  3370  0413  2C1A               	goto	u1775
  3371  0414  0827               	movf	___fldiv@a+1,w
  3372  0415  0234               	subwf	___fldiv@rem+1,w
  3373  0416  1D03               	skipz
  3374  0417  2C1A               	goto	u1775
  3375  0418  0826               	movf	___fldiv@a,w
  3376  0419  0233               	subwf	___fldiv@rem,w
  3377  041A                     u1775:	
  3378  041A  1C03               	skipc
  3379  041B  2C2B               	goto	l1701
  3380  041C  173D               	bsf	___fldiv@grs+3,6
  3381  041D  0826               	movf	___fldiv@a,w
  3382  041E  02B3               	subwf	___fldiv@rem,f
  3383  041F  0827               	movf	___fldiv@a+1,w
  3384  0420  1C03               	skipc
  3385  0421  0F27               	incfsz	___fldiv@a+1,w
  3386  0422  02B4               	subwf	___fldiv@rem+1,f
  3387  0423  0828               	movf	___fldiv@a+2,w
  3388  0424  1C03               	skipc
  3389  0425  0F28               	incfsz	___fldiv@a+2,w
  3390  0426  02B5               	subwf	___fldiv@rem+2,f
  3391  0427  0829               	movf	___fldiv@a+3,w
  3392  0428  1C03               	skipc
  3393  0429  0F29               	incfsz	___fldiv@a+3,w
  3394  042A  02B6               	subwf	___fldiv@rem+3,f
  3395  042B                     l1701:	
  3396  042B  3001               	movlw	1
  3397  042C  00AE               	movwf	??___fldiv
  3398  042D  082E               	movf	??___fldiv,w
  3399  042E  07BF               	addwf	___fldiv@aexp,f
  3400  042F  2BE8               	goto	l1703
  3401  0430                     l1705:	
  3402  0430  0836               	movf	___fldiv@rem+3,w
  3403  0431  0435               	iorwf	___fldiv@rem+2,w
  3404  0432  0434               	iorwf	___fldiv@rem+1,w
  3405  0433  0433               	iorwf	___fldiv@rem,w
  3406  0434  1D03               	btfss	3,2
  3407  0435  143A               	bsf	___fldiv@grs,0
  3408  0436                     l1719:	
  3409  0436  1BAC               	btfsc	___fldiv@b+2,7
  3410  0437  2C53               	goto	l1721
  3411  0438  3001               	movlw	1
  3412  0439  00AE               	movwf	??___fldiv
  3413  043A                     u1805:	
  3414  043A  1003               	clrc
  3415  043B  0DAA               	rlf	___fldiv@b,f
  3416  043C  0DAB               	rlf	___fldiv@b+1,f
  3417  043D  0DAC               	rlf	___fldiv@b+2,f
  3418  043E  0DAD               	rlf	___fldiv@b+3,f
  3419  043F  0BAE               	decfsz	??___fldiv,f
  3420  0440  2C3A               	goto	u1805
  3421  0441  1BBD               	btfsc	___fldiv@grs+3,7
  3422  0442  142A               	bsf	___fldiv@b,0
  3423  0443  3001               	movlw	1
  3424  0444  00AE               	movwf	??___fldiv
  3425  0445                     u1825:	
  3426  0445  1003               	clrc
  3427  0446  0DBA               	rlf	___fldiv@grs,f
  3428  0447  0DBB               	rlf	___fldiv@grs+1,f
  3429  0448  0DBC               	rlf	___fldiv@grs+2,f
  3430  0449  0DBD               	rlf	___fldiv@grs+3,f
  3431  044A  0BAE               	decfsz	??___fldiv,f
  3432  044B  2C45               	goto	u1825
  3433  044C  30FF               	movlw	255
  3434  044D  07B8               	addwf	___fldiv@new_exp,f
  3435  044E  1803               	skipnc
  3436  044F  0AB9               	incf	___fldiv@new_exp+1,f
  3437  0450  30FF               	movlw	255
  3438  0451  07B9               	addwf	___fldiv@new_exp+1,f
  3439  0452  2C36               	goto	l1719
  3440  0453                     l1721:	
  3441  0453  01BF               	clrf	___fldiv@aexp
  3442  0454  1FBD               	btfss	___fldiv@grs+3,7
  3443  0455  2C6C               	goto	l1731
  3444  0456  30FF               	movlw	255
  3445  0457  053A               	andwf	___fldiv@grs,w
  3446  0458  00AE               	movwf	??___fldiv
  3447  0459  30FF               	movlw	255
  3448  045A  053B               	andwf	___fldiv@grs+1,w
  3449  045B  00AF               	movwf	??___fldiv+1
  3450  045C  30FF               	movlw	255
  3451  045D  053C               	andwf	___fldiv@grs+2,w
  3452  045E  00B0               	movwf	??___fldiv+2
  3453  045F  307F               	movlw	127
  3454  0460  053D               	andwf	___fldiv@grs+3,w
  3455  0461  00B1               	movwf	??___fldiv+3
  3456  0462  0831               	movf	??___fldiv+3,w
  3457  0463  0430               	iorwf	??___fldiv+2,w
  3458  0464  042F               	iorwf	??___fldiv+1,w
  3459  0465  042E               	iorwf	??___fldiv,w
  3460  0466  1903               	skipnz
  3461  0467  182A               	btfsc	___fldiv@b,0
  3462  0468  2C6A               	goto	l1727
  3463  0469  2C6C               	goto	l1731
  3464  046A                     l1727:	
  3465  046A  01BF               	clrf	___fldiv@aexp
  3466  046B  0ABF               	incf	___fldiv@aexp,f
  3467  046C                     l1731:	
  3468  046C  083F               	movf	___fldiv@aexp,w
  3469  046D  1903               	btfsc	3,2
  3470  046E  2C9E               	goto	l1741
  3471  046F  3001               	movlw	1
  3472  0470  07AA               	addwf	___fldiv@b,f
  3473  0471  3000               	movlw	0
  3474  0472  1803               	skipnc
  3475  0473  3001               	movlw	1
  3476  0474  07AB               	addwf	___fldiv@b+1,f
  3477  0475  3000               	movlw	0
  3478  0476  1803               	skipnc
  3479  0477  3001               	movlw	1
  3480  0478  07AC               	addwf	___fldiv@b+2,f
  3481  0479  3000               	movlw	0
  3482  047A  1803               	skipnc
  3483  047B  3001               	movlw	1
  3484  047C  07AD               	addwf	___fldiv@b+3,f
  3485  047D  1C2D               	btfss	___fldiv@b+3,0
  3486  047E  2C9E               	goto	l1741
  3487  047F  082A               	movf	___fldiv@b,w
  3488  0480  00AE               	movwf	??___fldiv
  3489  0481  082B               	movf	___fldiv@b+1,w
  3490  0482  00AF               	movwf	??___fldiv+1
  3491  0483  082C               	movf	___fldiv@b+2,w
  3492  0484  00B0               	movwf	??___fldiv+2
  3493  0485  082D               	movf	___fldiv@b+3,w
  3494  0486  00B1               	movwf	??___fldiv+3
  3495  0487  3001               	movlw	1
  3496  0488  00B2               	movwf	??___fldiv+4
  3497  0489                     u1895:	
  3498  0489  0D31               	rlf	??___fldiv+3,w
  3499  048A  0CB1               	rrf	??___fldiv+3,f
  3500  048B  0CB0               	rrf	??___fldiv+2,f
  3501  048C  0CAF               	rrf	??___fldiv+1,f
  3502  048D  0CAE               	rrf	??___fldiv,f
  3503  048E  0BB2               	decfsz	??___fldiv+4,f
  3504  048F  2C89               	goto	u1895
  3505  0490  0831               	movf	??___fldiv+3,w
  3506  0491  00AD               	movwf	___fldiv@b+3
  3507  0492  0830               	movf	??___fldiv+2,w
  3508  0493  00AC               	movwf	___fldiv@b+2
  3509  0494  082F               	movf	??___fldiv+1,w
  3510  0495  00AB               	movwf	___fldiv@b+1
  3511  0496  082E               	movf	??___fldiv,w
  3512  0497  00AA               	movwf	___fldiv@b
  3513  0498  3001               	movlw	1
  3514  0499  07B8               	addwf	___fldiv@new_exp,f
  3515  049A  1803               	skipnc
  3516  049B  0AB9               	incf	___fldiv@new_exp+1,f
  3517  049C  3000               	movlw	0
  3518  049D  07B9               	addwf	___fldiv@new_exp+1,f
  3519  049E                     l1741:	
  3520  049E  0839               	movf	___fldiv@new_exp+1,w
  3521  049F  3A80               	xorlw	128
  3522  04A0  00FF               	movwf	127
  3523  04A1  3080               	movlw	128
  3524  04A2  027F               	subwf	127,w
  3525  04A3  1D03               	skipz
  3526  04A4  2CA7               	goto	u1905
  3527  04A5  30FF               	movlw	255
  3528  04A6  0238               	subwf	___fldiv@new_exp,w
  3529  04A7                     u1905:	
  3530  04A7  1C03               	skipc
  3531  04A8  2CB7               	goto	l1745
  3532  04A9  30FF               	movlw	255
  3533  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  3534  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  3535  04AC  00B8               	movwf	___fldiv@new_exp
  3536  04AD  3000               	movlw	0
  3537  04AE  00B9               	movwf	___fldiv@new_exp+1
  3538  04AF  3000               	movlw	0
  3539  04B0  00AD               	movwf	___fldiv@b+3
  3540  04B1  3000               	movlw	0
  3541  04B2  00AC               	movwf	___fldiv@b+2
  3542  04B3  3000               	movlw	0
  3543  04B4  00AB               	movwf	___fldiv@b+1
  3544  04B5  3000               	movlw	0
  3545  04B6  00AA               	movwf	___fldiv@b
  3546  04B7                     l1745:	
  3547  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  3548  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  3549  04B9  0839               	movf	___fldiv@new_exp+1,w
  3550  04BA  3A80               	xorlw	128
  3551  04BB  00FF               	movwf	127
  3552  04BC  3080               	movlw	128
  3553  04BD  027F               	subwf	127,w
  3554  04BE  1D03               	skipz
  3555  04BF  2CC2               	goto	u1915
  3556  04C0  3001               	movlw	1
  3557  04C1  0238               	subwf	___fldiv@new_exp,w
  3558  04C2                     u1915:	
  3559  04C2  1803               	skipnc
  3560  04C3  2CD1               	goto	l620
  3561  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  3562  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  3563  04C6  01B8               	clrf	___fldiv@new_exp
  3564  04C7  01B9               	clrf	___fldiv@new_exp+1
  3565  04C8  3000               	movlw	0
  3566  04C9  00AD               	movwf	___fldiv@b+3
  3567  04CA  3000               	movlw	0
  3568  04CB  00AC               	movwf	___fldiv@b+2
  3569  04CC  3000               	movlw	0
  3570  04CD  00AB               	movwf	___fldiv@b+1
  3571  04CE  3000               	movlw	0
  3572  04CF  00AA               	movwf	___fldiv@b
  3573  04D0  01B7               	clrf	___fldiv@sign
  3574  04D1                     l620:	
  3575  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  3576  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  3577  04D3  0838               	movf	___fldiv@new_exp,w
  3578  04D4  00AE               	movwf	??___fldiv
  3579  04D5  082E               	movf	??___fldiv,w
  3580  04D6  00BE               	movwf	___fldiv@bexp
  3581  04D7  1C3E               	btfss	___fldiv@bexp,0
  3582  04D8  2CDB               	goto	l1757
  3583  04D9  17AC               	bsf	___fldiv@b+2,7
  3584  04DA  2CDF               	goto	l622
  3585  04DB                     l1757:	
  3586  04DB  307F               	movlw	127
  3587  04DC  00AE               	movwf	??___fldiv
  3588  04DD  082E               	movf	??___fldiv,w
  3589  04DE  05AC               	andwf	___fldiv@b+2,f
  3590  04DF                     l622:	
  3591  04DF  083E               	movf	___fldiv@bexp,w
  3592  04E0  00AE               	movwf	??___fldiv
  3593  04E1  1003               	clrc
  3594  04E2  0C2E               	rrf	??___fldiv,w
  3595  04E3  00AF               	movwf	??___fldiv+1
  3596  04E4  082F               	movf	??___fldiv+1,w
  3597  04E5  00AD               	movwf	___fldiv@b+3
  3598  04E6  2BA4               	goto	L1
  3599  04E7                     __end_of___fldiv:	
  3600                           
  3601                           	psect	text14
  3602  0F54                     __ptext14:	
  3603 ;; *************** function _lcdSetCursor *****************
  3604 ;; Defined at:
  3605 ;;		line 56 in file "./lcd.h"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;  a               1    wreg     unsigned char 
  3608 ;;  b               1    4[COMMON] unsigned char 
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;  a               1    7[COMMON] unsigned char 
  3611 ;;  temp            1   10[COMMON] unsigned char 
  3612 ;;  y               1    9[COMMON] unsigned char 
  3613 ;;  z               1    8[COMMON] unsigned char 
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  1    wreg      void 
  3616 ;; Registers used:
  3617 ;;		wreg, status,2, status,0, pclath, cstack
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/0
  3620 ;;		On exit  : 0/0
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3623 ;;      Params:         1       0       0       0       0
  3624 ;;      Locals:         4       0       0       0       0
  3625 ;;      Temps:          2       0       0       0       0
  3626 ;;      Totals:         7       0       0       0       0
  3627 ;;Total ram usage:        7 bytes
  3628 ;; Hardware stack levels used:    1
  3629 ;; Hardware stack levels required when called:    2
  3630 ;; This function calls:
  3631 ;;		_lcdCmd
  3632 ;; This function is called by:
  3633 ;;		_main
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           
  3638                           ;psect for function _lcdSetCursor
  3639  0F54                     _lcdSetCursor:	
  3640                           
  3641                           ;incstack = 0
  3642                           ; Regs used in _lcdSetCursor: [wreg+status,2+status,0+pclath+cstack]
  3643                           ;lcdSetCursor@a stored from wreg
  3644  0F54  00F7               	movwf	lcdSetCursor@a
  3645                           
  3646                           ;./lcd.h: 57:     char temp, z, y;;./lcd.h: 58:     if (a == 1) {
  3647  0F55  0377               	decf	lcdSetCursor@a,w
  3648  0F56  1D03               	btfss	3,2
  3649  0F57  2F79               	goto	l1993
  3650                           
  3651                           ;./lcd.h: 59:         temp = 0x80 + b - 1;
  3652  0F58  0874               	movf	lcdSetCursor@b,w
  3653  0F59  3E7F               	addlw	127
  3654  0F5A  00F5               	movwf	??_lcdSetCursor
  3655  0F5B  0875               	movf	??_lcdSetCursor,w
  3656  0F5C  00FA               	movwf	lcdSetCursor@temp
  3657                           
  3658                           ;./lcd.h: 60:         z = temp >> 4;
  3659  0F5D  087A               	movf	lcdSetCursor@temp,w
  3660  0F5E  00F5               	movwf	??_lcdSetCursor
  3661  0F5F  3004               	movlw	4
  3662  0F60                     u2485:	
  3663  0F60  1003               	clrc
  3664  0F61  0CF5               	rrf	??_lcdSetCursor,f
  3665  0F62  3EFF               	addlw	-1
  3666  0F63  1D03               	skipz
  3667  0F64  2F60               	goto	u2485
  3668  0F65  0875               	movf	??_lcdSetCursor,w
  3669  0F66  00F6               	movwf	??_lcdSetCursor+1
  3670  0F67  0876               	movf	??_lcdSetCursor+1,w
  3671  0F68  00F8               	movwf	lcdSetCursor@z
  3672                           
  3673                           ;./lcd.h: 61:         y = temp & 0x0F;
  3674  0F69  087A               	movf	lcdSetCursor@temp,w
  3675  0F6A  390F               	andlw	15
  3676  0F6B  00F5               	movwf	??_lcdSetCursor
  3677  0F6C  0875               	movf	??_lcdSetCursor,w
  3678  0F6D  00F9               	movwf	lcdSetCursor@y
  3679                           
  3680                           ;./lcd.h: 62:         lcdCmd(z);
  3681  0F6E  0878               	movf	lcdSetCursor@z,w
  3682  0F6F  120A  158A  2611  120A  158A  	fcall	_lcdCmd
  3683                           
  3684                           ;./lcd.h: 63:         lcdCmd(y);
  3685  0F74  0879               	movf	lcdSetCursor@y,w
  3686  0F75  120A  158A  2611   	fcall	_lcdCmd
  3687                           
  3688                           ;./lcd.h: 64:     } else if (a == 2) {
  3689  0F78  0008               	return
  3690  0F79                     l1993:	
  3691  0F79  3002               	movlw	2
  3692  0F7A  0677               	xorwf	lcdSetCursor@a,w
  3693  0F7B  1D03               	btfss	3,2
  3694  0F7C  0008               	return
  3695                           
  3696                           ;./lcd.h: 65:         temp = 0xC0 + b - 1;
  3697  0F7D  0874               	movf	lcdSetCursor@b,w
  3698  0F7E  3EBF               	addlw	191
  3699  0F7F  00F5               	movwf	??_lcdSetCursor
  3700  0F80  0875               	movf	??_lcdSetCursor,w
  3701  0F81  00FA               	movwf	lcdSetCursor@temp
  3702                           
  3703                           ;./lcd.h: 66:         z = temp >> 4;
  3704  0F82  087A               	movf	lcdSetCursor@temp,w
  3705  0F83  00F5               	movwf	??_lcdSetCursor
  3706  0F84  3004               	movlw	4
  3707  0F85                     u2505:	
  3708  0F85  1003               	clrc
  3709  0F86  0CF5               	rrf	??_lcdSetCursor,f
  3710  0F87  3EFF               	addlw	-1
  3711  0F88  1D03               	skipz
  3712  0F89  2F85               	goto	u2505
  3713  0F8A  0875               	movf	??_lcdSetCursor,w
  3714  0F8B  00F6               	movwf	??_lcdSetCursor+1
  3715  0F8C  0876               	movf	??_lcdSetCursor+1,w
  3716  0F8D  00F8               	movwf	lcdSetCursor@z
  3717                           
  3718                           ;./lcd.h: 67:         y = temp & 0x0F;
  3719  0F8E  087A               	movf	lcdSetCursor@temp,w
  3720  0F8F  390F               	andlw	15
  3721  0F90  00F5               	movwf	??_lcdSetCursor
  3722  0F91  0875               	movf	??_lcdSetCursor,w
  3723  0F92  00F9               	movwf	lcdSetCursor@y
  3724                           
  3725                           ;./lcd.h: 68:         lcdCmd(z);
  3726  0F93  0878               	movf	lcdSetCursor@z,w
  3727  0F94  120A  158A  2611  120A  158A  	fcall	_lcdCmd
  3728                           
  3729                           ;./lcd.h: 69:         lcdCmd(y);
  3730  0F99  0879               	movf	lcdSetCursor@y,w
  3731  0F9A  120A  158A  2611   	fcall	_lcdCmd
  3732  0F9D  0008               	return
  3733  0F9E                     __end_of_lcdSetCursor:	
  3734                           
  3735                           	psect	text15
  3736  0F17                     __ptext15:	
  3737 ;; *************** function _lcdPrint *****************
  3738 ;; Defined at:
  3739 ;;		line 108 in file "./lcd.h"
  3740 ;; Parameters:    Size  Location     Type
  3741 ;;  a               2    5[COMMON] PTR unsigned char 
  3742 ;;		 -> main@entero(16), STR_2(16), STR_1(14), 
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;  i               2   10[COMMON] int 
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  1    wreg      void 
  3747 ;; Registers used:
  3748 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3754 ;;      Params:         2       0       0       0       0
  3755 ;;      Locals:         2       0       0       0       0
  3756 ;;      Temps:          3       0       0       0       0
  3757 ;;      Totals:         7       0       0       0       0
  3758 ;;Total ram usage:        7 bytes
  3759 ;; Hardware stack levels used:    1
  3760 ;; Hardware stack levels required when called:    2
  3761 ;; This function calls:
  3762 ;;		_lcdWriteChar
  3763 ;; This function is called by:
  3764 ;;		_main
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768                           
  3769                           ;psect for function _lcdPrint
  3770  0F17                     _lcdPrint:	
  3771                           
  3772                           ;./lcd.h: 109:     int i;;./lcd.h: 110:     for (i = 0; a[i] != '\0'; i++)
  3773                           
  3774                           ;incstack = 0
  3775                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3776  0F17  01FA               	clrf	lcdPrint@i
  3777  0F18  01FB               	clrf	lcdPrint@i+1
  3778  0F19                     l2039:	
  3779  0F19  087A               	movf	lcdPrint@i,w
  3780  0F1A  0775               	addwf	lcdPrint@a,w
  3781  0F1B  00F8               	movwf	??_lcdPrint+1
  3782  0F1C  0876               	movf	lcdPrint@a+1,w
  3783  0F1D  00F7               	movwf	??_lcdPrint
  3784  0F1E  1803               	skipnc
  3785  0F1F  0AF7               	incf	??_lcdPrint,f
  3786  0F20  1BFA               	btfsc	lcdPrint@i,7
  3787  0F21  03F7               	decf	??_lcdPrint,f
  3788  0F22  0877               	movf	??_lcdPrint,w
  3789  0F23  00F9               	movwf	??_lcdPrint+2
  3790  0F24  0879               	movf	??_lcdPrint+2,w
  3791  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  3792  0F26  1303               	bcf	3,6	;RP1=0, select bank0
  3793  0F27  00FF               	movwf	127
  3794  0F28  0878               	movf	??_lcdPrint+1,w
  3795  0F29  0084               	movwf	4
  3796  0F2A  120A  158A  2000  120A  158A  	fcall	stringtab
  3797  0F2F  3A00               	xorlw	0
  3798  0F30  1903               	btfsc	3,2
  3799  0F31  0008               	return
  3800                           
  3801                           ;./lcd.h: 111:         lcdWriteChar(a[i]);
  3802  0F32  087A               	movf	lcdPrint@i,w
  3803  0F33  0775               	addwf	lcdPrint@a,w
  3804  0F34  00F8               	movwf	??_lcdPrint+1
  3805  0F35  0876               	movf	lcdPrint@a+1,w
  3806  0F36  00F7               	movwf	??_lcdPrint
  3807  0F37  1803               	skipnc
  3808  0F38  0AF7               	incf	??_lcdPrint,f
  3809  0F39  1BFA               	btfsc	lcdPrint@i,7
  3810  0F3A  03F7               	decf	??_lcdPrint,f
  3811  0F3B  0877               	movf	??_lcdPrint,w
  3812  0F3C  00F9               	movwf	??_lcdPrint+2
  3813  0F3D  0879               	movf	??_lcdPrint+2,w
  3814  0F3E  1283               	bcf	3,5	;RP0=0, select bank0
  3815  0F3F  1303               	bcf	3,6	;RP1=0, select bank0
  3816  0F40  00FF               	movwf	127
  3817  0F41  0878               	movf	??_lcdPrint+1,w
  3818  0F42  0084               	movwf	4
  3819  0F43  120A  158A  2000  120A  158A  	fcall	stringtab
  3820  0F48  120A  158A  26A2  120A  158A  	fcall	_lcdWriteChar
  3821  0F4D  3001               	movlw	1
  3822  0F4E  07FA               	addwf	lcdPrint@i,f
  3823  0F4F  1803               	skipnc
  3824  0F50  0AFB               	incf	lcdPrint@i+1,f
  3825  0F51  3000               	movlw	0
  3826  0F52  07FB               	addwf	lcdPrint@i+1,f
  3827  0F53  2F19               	goto	l2039
  3828  0F54                     __end_of_lcdPrint:	
  3829                           
  3830                           	psect	text16
  3831  0EA2                     __ptext16:	
  3832 ;; *************** function _lcdWriteChar *****************
  3833 ;; Defined at:
  3834 ;;		line 93 in file "./lcd.h"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;  a               1    wreg     unsigned char 
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;  a               1    4[COMMON] unsigned char 
  3839 ;;  y               1    3[COMMON] unsigned char 
  3840 ;;  temp            1    2[COMMON] unsigned char 
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		wreg, status,2, status,0, pclath, cstack
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3850 ;;      Params:         0       0       0       0       0
  3851 ;;      Locals:         3       0       0       0       0
  3852 ;;      Temps:          1       0       0       0       0
  3853 ;;      Totals:         4       0       0       0       0
  3854 ;;Total ram usage:        4 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; Hardware stack levels required when called:    1
  3857 ;; This function calls:
  3858 ;;		_lcdPort
  3859 ;; This function is called by:
  3860 ;;		_lcdPrint
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           
  3865                           ;psect for function _lcdWriteChar
  3866  0EA2                     _lcdWriteChar:	
  3867                           
  3868                           ;incstack = 0
  3869                           ; Regs used in _lcdWriteChar: [wreg+status,2+status,0+pclath+cstack]
  3870                           ;lcdWriteChar@a stored from wreg
  3871  0EA2  00F4               	movwf	lcdWriteChar@a
  3872                           
  3873                           ;./lcd.h: 94:     char temp, y;;./lcd.h: 95:     temp = a & 0x0F;
  3874  0EA3  0874               	movf	lcdWriteChar@a,w
  3875  0EA4  390F               	andlw	15
  3876  0EA5  00F1               	movwf	??_lcdWriteChar
  3877  0EA6  0871               	movf	??_lcdWriteChar,w
  3878  0EA7  00F2               	movwf	lcdWriteChar@temp
  3879                           
  3880                           ;./lcd.h: 96:     y = a & 0xF0;
  3881  0EA8  0874               	movf	lcdWriteChar@a,w
  3882  0EA9  39F0               	andlw	240
  3883  0EAA  00F1               	movwf	??_lcdWriteChar
  3884  0EAB  0871               	movf	??_lcdWriteChar,w
  3885  0EAC  00F3               	movwf	lcdWriteChar@y
  3886                           
  3887                           ;./lcd.h: 97:     RD2 = 1;
  3888  0EAD  1283               	bcf	3,5	;RP0=0, select bank0
  3889  0EAE  1303               	bcf	3,6	;RP1=0, select bank0
  3890  0EAF  1508               	bsf	8,2	;volatile
  3891                           
  3892                           ;./lcd.h: 98:     lcdPort(y >> 4);
  3893  0EB0  0873               	movf	lcdWriteChar@y,w
  3894  0EB1  00F1               	movwf	??_lcdWriteChar
  3895  0EB2  3004               	movlw	4
  3896  0EB3                     u1405:	
  3897  0EB3  1003               	clrc
  3898  0EB4  0CF1               	rrf	??_lcdWriteChar,f
  3899  0EB5  3EFF               	addlw	-1
  3900  0EB6  1D03               	skipz
  3901  0EB7  2EB3               	goto	u1405
  3902  0EB8  0871               	movf	??_lcdWriteChar,w
  3903  0EB9  120A  158A  25F7  120A  158A  	fcall	_lcdPort
  3904                           
  3905                           ;./lcd.h: 99:     RD3 = 1;
  3906  0EBE  1283               	bcf	3,5	;RP0=0, select bank0
  3907  0EBF  1303               	bcf	3,6	;RP1=0, select bank0
  3908  0EC0  1588               	bsf	8,3	;volatile
  3909                           
  3910                           ;./lcd.h: 100:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  3911  0EC1  3042               	movlw	66
  3912  0EC2  00F1               	movwf	??_lcdWriteChar
  3913  0EC3                     u2687:	
  3914  0EC3  0BF1               	decfsz	??_lcdWriteChar,f
  3915  0EC4  2EC3               	goto	u2687
  3916  0EC5  0000               	nop
  3917                           
  3918                           ;./lcd.h: 101:     RD3 = 0;
  3919  0EC6  1283               	bcf	3,5	;RP0=0, select bank0
  3920  0EC7  1303               	bcf	3,6	;RP1=0, select bank0
  3921  0EC8  1188               	bcf	8,3	;volatile
  3922                           
  3923                           ;./lcd.h: 102:     lcdPort(temp);
  3924  0EC9  0872               	movf	lcdWriteChar@temp,w
  3925  0ECA  120A  158A  25F7  120A  158A  	fcall	_lcdPort
  3926                           
  3927                           ;./lcd.h: 103:     RD3 = 1;
  3928  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  3929  0ED0  1303               	bcf	3,6	;RP1=0, select bank0
  3930  0ED1  1588               	bsf	8,3	;volatile
  3931                           
  3932                           ;./lcd.h: 104:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  3933  0ED2  3042               	movlw	66
  3934  0ED3  00F1               	movwf	??_lcdWriteChar
  3935  0ED4                     u2697:	
  3936  0ED4  0BF1               	decfsz	??_lcdWriteChar,f
  3937  0ED5  2ED4               	goto	u2697
  3938  0ED6  0000               	nop
  3939                           
  3940                           ;./lcd.h: 105:     RD3 = 0;
  3941  0ED7  1283               	bcf	3,5	;RP0=0, select bank0
  3942  0ED8  1303               	bcf	3,6	;RP1=0, select bank0
  3943  0ED9  1188               	bcf	8,3	;volatile
  3944  0EDA  0008               	return
  3945  0EDB                     __end_of_lcdWriteChar:	
  3946                           
  3947                           	psect	text17
  3948  0F9E                     __ptext17:	
  3949 ;; *************** function _lcdInit *****************
  3950 ;; Defined at:
  3951 ;;		line 73 in file "./lcd.h"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;		None
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;		None
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  1    wreg      void 
  3958 ;; Registers used:
  3959 ;;		wreg, status,2, status,0, pclath, cstack
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3965 ;;      Params:         0       0       0       0       0
  3966 ;;      Locals:         0       0       0       0       0
  3967 ;;      Temps:          2       0       0       0       0
  3968 ;;      Totals:         2       0       0       0       0
  3969 ;;Total ram usage:        2 bytes
  3970 ;; Hardware stack levels used:    1
  3971 ;; Hardware stack levels required when called:    2
  3972 ;; This function calls:
  3973 ;;		_lcdCmd
  3974 ;;		_lcdPort
  3975 ;; This function is called by:
  3976 ;;		_main
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           
  3981                           ;psect for function _lcdInit
  3982  0F9E                     _lcdInit:	
  3983                           
  3984                           ;./lcd.h: 74:     TRISD = 0;
  3985                           
  3986                           ;incstack = 0
  3987                           ; Regs used in _lcdInit: [wreg+status,2+status,0+pclath+cstack]
  3988  0F9E  1683               	bsf	3,5	;RP0=1, select bank1
  3989  0F9F  1303               	bcf	3,6	;RP1=0, select bank1
  3990  0FA0  0188               	clrf	8	;volatile
  3991                           
  3992                           ;./lcd.h: 75:     PORTD = 0;
  3993  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  3994  0FA2  1303               	bcf	3,6	;RP1=0, select bank0
  3995  0FA3  0188               	clrf	8	;volatile
  3996                           
  3997                           ;./lcd.h: 76:     lcdPort(0x00);
  3998  0FA4  3000               	movlw	0
  3999  0FA5  120A  158A  25F7  120A  158A  	fcall	_lcdPort
  4000                           
  4001                           ;./lcd.h: 77:     _delay((unsigned long)((20)*(20000000/4000.0)));
  4002  0FAA  3082               	movlw	130
  4003  0FAB  00F5               	movwf	??_lcdInit+1
  4004  0FAC  30DD               	movlw	221
  4005  0FAD  00F4               	movwf	??_lcdInit
  4006  0FAE                     u2707:	
  4007  0FAE  0BF4               	decfsz	??_lcdInit,f
  4008  0FAF  2FAE               	goto	u2707
  4009  0FB0  0BF5               	decfsz	??_lcdInit+1,f
  4010  0FB1  2FAE               	goto	u2707
  4011  0FB2  2FB3               	nop2
  4012                           
  4013                           ;./lcd.h: 78:     lcdCmd(0x03);
  4014  0FB3  3003               	movlw	3
  4015  0FB4  120A  158A  2611  120A  158A  	fcall	_lcdCmd
  4016                           
  4017                           ;./lcd.h: 79:     _delay((unsigned long)((5)*(20000000/4000.0)));
  4018  0FB9  3021               	movlw	33
  4019  0FBA  00F5               	movwf	??_lcdInit+1
  4020  0FBB  3076               	movlw	118
  4021  0FBC  00F4               	movwf	??_lcdInit
  4022  0FBD                     u2717:	
  4023  0FBD  0BF4               	decfsz	??_lcdInit,f
  4024  0FBE  2FBD               	goto	u2717
  4025  0FBF  0BF5               	decfsz	??_lcdInit+1,f
  4026  0FC0  2FBD               	goto	u2717
  4027  0FC1  0000               	nop
  4028                           
  4029                           ;./lcd.h: 80:     lcdCmd(0x03);
  4030  0FC2  3003               	movlw	3
  4031  0FC3  120A  158A  2611  120A  158A  	fcall	_lcdCmd
  4032                           
  4033                           ;./lcd.h: 81:     _delay((unsigned long)((11)*(20000000/4000.0)));
  4034  0FC8  3048               	movlw	72
  4035  0FC9  00F5               	movwf	??_lcdInit+1
  4036  0FCA  306C               	movlw	108
  4037  0FCB  00F4               	movwf	??_lcdInit
  4038  0FCC                     u2727:	
  4039  0FCC  0BF4               	decfsz	??_lcdInit,f
  4040  0FCD  2FCC               	goto	u2727
  4041  0FCE  0BF5               	decfsz	??_lcdInit+1,f
  4042  0FCF  2FCC               	goto	u2727
  4043  0FD0  0000               	nop
  4044                           
  4045                           ;./lcd.h: 82:     lcdCmd(0x03);
  4046  0FD1  3003               	movlw	3
  4047  0FD2  120A  158A  2611  120A  158A  	fcall	_lcdCmd
  4048                           
  4049                           ;./lcd.h: 84:     lcdCmd(0x02);
  4050  0FD7  3002               	movlw	2
  4051  0FD8  120A  158A  2611  120A  158A  	fcall	_lcdCmd
  4052                           
  4053                           ;./lcd.h: 85:     lcdCmd(0x02);
  4054  0FDD  3002               	movlw	2
  4055  0FDE  120A  158A  2611  120A  158A  	fcall	_lcdCmd
  4056                           
  4057                           ;./lcd.h: 86:     lcdCmd(0x08);
  4058  0FE3  3008               	movlw	8
  4059  0FE4  120A  158A  2611  120A  158A  	fcall	_lcdCmd
  4060                           
  4061                           ;./lcd.h: 87:     lcdCmd(0x00);
  4062  0FE9  3000               	movlw	0
  4063  0FEA  120A  158A  2611  120A  158A  	fcall	_lcdCmd
  4064                           
  4065                           ;./lcd.h: 88:     lcdCmd(0x0C);
  4066  0FEF  300C               	movlw	12
  4067  0FF0  120A  158A  2611  120A  158A  	fcall	_lcdCmd
  4068                           
  4069                           ;./lcd.h: 89:     lcdCmd(0x00);
  4070  0FF5  3000               	movlw	0
  4071  0FF6  120A  158A  2611  120A  158A  	fcall	_lcdCmd
  4072                           
  4073                           ;./lcd.h: 90:     lcdCmd(0x06);
  4074  0FFB  3006               	movlw	6
  4075  0FFC  120A  158A  2611   	fcall	_lcdCmd
  4076  0FFF  0008               	return
  4077  1000                     __end_of_lcdInit:	
  4078                           
  4079                           	psect	text18
  4080  0DC2                     __ptext18:	
  4081 ;; *************** function _lcdClear *****************
  4082 ;; Defined at:
  4083 ;;		line 51 in file "./lcd.h"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;		None
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;		None
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  1    wreg      void 
  4090 ;; Registers used:
  4091 ;;		wreg, status,2, status,0, pclath, cstack
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4097 ;;      Params:         0       0       0       0       0
  4098 ;;      Locals:         0       0       0       0       0
  4099 ;;      Temps:          0       0       0       0       0
  4100 ;;      Totals:         0       0       0       0       0
  4101 ;;Total ram usage:        0 bytes
  4102 ;; Hardware stack levels used:    1
  4103 ;; Hardware stack levels required when called:    2
  4104 ;; This function calls:
  4105 ;;		_lcdCmd
  4106 ;; This function is called by:
  4107 ;;		_main
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           
  4112                           ;psect for function _lcdClear
  4113  0DC2                     _lcdClear:	
  4114                           
  4115                           ;./lcd.h: 52:     lcdCmd(0);
  4116                           
  4117                           ;incstack = 0
  4118                           ; Regs used in _lcdClear: [wreg+status,2+status,0+pclath+cstack]
  4119  0DC2  3000               	movlw	0
  4120  0DC3  120A  158A  2611  120A  158A  	fcall	_lcdCmd
  4121                           
  4122                           ;./lcd.h: 53:     lcdCmd(1);
  4123  0DC8  3001               	movlw	1
  4124  0DC9  120A  158A  2611   	fcall	_lcdCmd
  4125  0DCC  0008               	return
  4126  0DCD                     __end_of_lcdClear:	
  4127                           
  4128                           	psect	text19
  4129  0E11                     __ptext19:	
  4130 ;; *************** function _lcdCmd *****************
  4131 ;; Defined at:
  4132 ;;		line 43 in file "./lcd.h"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;  a               1    wreg     unsigned char 
  4135 ;; Auto vars:     Size  Location     Type
  4136 ;;  a               1    3[COMMON] unsigned char 
  4137 ;; Return value:  Size  Location     Type
  4138 ;;                  1    wreg      void 
  4139 ;; Registers used:
  4140 ;;		wreg, status,2, status,0, pclath, cstack
  4141 ;; Tracked objects:
  4142 ;;		On entry : 0/0
  4143 ;;		On exit  : 0/0
  4144 ;;		Unchanged: 0/0
  4145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4146 ;;      Params:         0       0       0       0       0
  4147 ;;      Locals:         1       0       0       0       0
  4148 ;;      Temps:          2       0       0       0       0
  4149 ;;      Totals:         3       0       0       0       0
  4150 ;;Total ram usage:        3 bytes
  4151 ;; Hardware stack levels used:    1
  4152 ;; Hardware stack levels required when called:    1
  4153 ;; This function calls:
  4154 ;;		_lcdPort
  4155 ;; This function is called by:
  4156 ;;		_lcdClear
  4157 ;;		_lcdSetCursor
  4158 ;;		_lcdInit
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           
  4163                           ;psect for function _lcdCmd
  4164  0E11                     _lcdCmd:	
  4165                           
  4166                           ;incstack = 0
  4167                           ; Regs used in _lcdCmd: [wreg+status,2+status,0+pclath+cstack]
  4168                           ;lcdCmd@a stored from wreg
  4169  0E11  00F3               	movwf	lcdCmd@a
  4170                           
  4171                           ;./lcd.h: 44:     RD2 = 0;
  4172  0E12  1283               	bcf	3,5	;RP0=0, select bank0
  4173  0E13  1303               	bcf	3,6	;RP1=0, select bank0
  4174  0E14  1108               	bcf	8,2	;volatile
  4175                           
  4176                           ;./lcd.h: 45:     lcdPort(a);
  4177  0E15  0873               	movf	lcdCmd@a,w
  4178  0E16  120A  158A  25F7  120A  158A  	fcall	_lcdPort
  4179                           
  4180                           ;./lcd.h: 46:     RD3 = 1;
  4181  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  4182  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  4183  0E1D  1588               	bsf	8,3	;volatile
  4184                           
  4185                           ;./lcd.h: 47:     _delay((unsigned long)((4)*(20000000/4000.0)));
  4186  0E1E  301A               	movlw	26
  4187  0E1F  00F2               	movwf	??_lcdCmd+1
  4188  0E20  30F8               	movlw	248
  4189  0E21  00F1               	movwf	??_lcdCmd
  4190  0E22                     u2737:	
  4191  0E22  0BF1               	decfsz	??_lcdCmd,f
  4192  0E23  2E22               	goto	u2737
  4193  0E24  0BF2               	decfsz	??_lcdCmd+1,f
  4194  0E25  2E22               	goto	u2737
  4195  0E26  0000               	nop
  4196                           
  4197                           ;./lcd.h: 48:     RD3 = 0;
  4198  0E27  1283               	bcf	3,5	;RP0=0, select bank0
  4199  0E28  1303               	bcf	3,6	;RP1=0, select bank0
  4200  0E29  1188               	bcf	8,3	;volatile
  4201  0E2A  0008               	return
  4202  0E2B                     __end_of_lcdCmd:	
  4203                           
  4204                           	psect	text20
  4205  0DF7                     __ptext20:	
  4206 ;; *************** function _lcdPort *****************
  4207 ;; Defined at:
  4208 ;;		line 21 in file "./lcd.h"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;  a               1    wreg     unsigned char 
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;  a               1    0[COMMON] unsigned char 
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  1    wreg      void 
  4215 ;; Registers used:
  4216 ;;		wreg
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4222 ;;      Params:         0       0       0       0       0
  4223 ;;      Locals:         1       0       0       0       0
  4224 ;;      Temps:          0       0       0       0       0
  4225 ;;      Totals:         1       0       0       0       0
  4226 ;;Total ram usage:        1 bytes
  4227 ;; Hardware stack levels used:    1
  4228 ;; This function calls:
  4229 ;;		Nothing
  4230 ;; This function is called by:
  4231 ;;		_lcdCmd
  4232 ;;		_lcdInit
  4233 ;;		_lcdWriteChar
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           
  4238                           ;psect for function _lcdPort
  4239  0DF7                     _lcdPort:	
  4240                           
  4241                           ;incstack = 0
  4242                           ; Regs used in _lcdPort: [wreg]
  4243                           ;lcdPort@a stored from wreg
  4244  0DF7  00F0               	movwf	lcdPort@a
  4245                           
  4246                           ;./lcd.h: 22:     if (a & 1)
  4247  0DF8  1C70               	btfss	lcdPort@a,0
  4248  0DF9  2DFE               	goto	l87
  4249                           
  4250                           ;./lcd.h: 23:         RD4 = 1;
  4251  0DFA  1283               	bcf	3,5	;RP0=0, select bank0
  4252  0DFB  1303               	bcf	3,6	;RP1=0, select bank0
  4253  0DFC  1608               	bsf	8,4	;volatile
  4254  0DFD  2E01               	goto	l88
  4255  0DFE                     l87:	
  4256                           ;./lcd.h: 24:     else
  4257                           
  4258                           
  4259                           ;./lcd.h: 25:         RD4 = 0;
  4260  0DFE  1283               	bcf	3,5	;RP0=0, select bank0
  4261  0DFF  1303               	bcf	3,6	;RP1=0, select bank0
  4262  0E00  1208               	bcf	8,4	;volatile
  4263  0E01                     l88:	
  4264                           
  4265                           ;./lcd.h: 27:     if (a & 2)
  4266  0E01  1CF0               	btfss	lcdPort@a,1
  4267  0E02  2E05               	goto	l89
  4268                           
  4269                           ;./lcd.h: 28:         RD5 = 1;
  4270  0E03  1688               	bsf	8,5	;volatile
  4271  0E04  2E06               	goto	l90
  4272  0E05                     l89:	
  4273                           ;./lcd.h: 29:     else
  4274                           
  4275                           
  4276                           ;./lcd.h: 30:         RD5 = 0;
  4277  0E05  1288               	bcf	8,5	;volatile
  4278  0E06                     l90:	
  4279                           
  4280                           ;./lcd.h: 32:     if (a & 4)
  4281  0E06  1D70               	btfss	lcdPort@a,2
  4282  0E07  2E0A               	goto	l91
  4283                           
  4284                           ;./lcd.h: 33:         RD6 = 1;
  4285  0E08  1708               	bsf	8,6	;volatile
  4286  0E09  2E0B               	goto	l92
  4287  0E0A                     l91:	
  4288                           ;./lcd.h: 34:     else
  4289                           
  4290                           
  4291                           ;./lcd.h: 35:         RD6 = 0;
  4292  0E0A  1308               	bcf	8,6	;volatile
  4293  0E0B                     l92:	
  4294                           
  4295                           ;./lcd.h: 37:     if (a & 8)
  4296  0E0B  1DF0               	btfss	lcdPort@a,3
  4297  0E0C  2E0F               	goto	l93
  4298                           
  4299                           ;./lcd.h: 38:         RD7 = 1;
  4300  0E0D  1788               	bsf	8,7	;volatile
  4301  0E0E  0008               	return
  4302  0E0F                     l93:	
  4303                           ;./lcd.h: 39:     else
  4304                           
  4305                           
  4306                           ;./lcd.h: 40:         RD7 = 0;
  4307  0E0F  1388               	bcf	8,7	;volatile
  4308  0E10  0008               	return
  4309  0E11                     __end_of_lcdPort:	
  4310                           
  4311                           	psect	text21
  4312  0E2B                     __ptext21:	
  4313 ;; *************** function _adcRead *****************
  4314 ;; Defined at:
  4315 ;;		line 35 in file "./adc.h"
  4316 ;; Parameters:    Size  Location     Type
  4317 ;;  adcChannel      2    0[COMMON] const int 
  4318 ;; Auto vars:     Size  Location     Type
  4319 ;;		None
  4320 ;; Return value:  Size  Location     Type
  4321 ;;                  2    0[COMMON] int 
  4322 ;; Registers used:
  4323 ;;		wreg, status,2, status,0
  4324 ;; Tracked objects:
  4325 ;;		On entry : 0/0
  4326 ;;		On exit  : 0/0
  4327 ;;		Unchanged: 0/0
  4328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4329 ;;      Params:         2       0       0       0       0
  4330 ;;      Locals:         0       0       0       0       0
  4331 ;;      Temps:          2       0       0       0       0
  4332 ;;      Totals:         4       0       0       0       0
  4333 ;;Total ram usage:        4 bytes
  4334 ;; Hardware stack levels used:    1
  4335 ;; This function calls:
  4336 ;;		Nothing
  4337 ;; This function is called by:
  4338 ;;		_main
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           
  4343                           ;psect for function _adcRead
  4344  0E2B                     _adcRead:	
  4345                           
  4346                           ;./adc.h: 36:     ADCON0bits.ADON = 1;
  4347                           
  4348                           ;incstack = 0
  4349                           ; Regs used in _adcRead: [wreg+status,2+status,0]
  4350  0E2B  1283               	bcf	3,5	;RP0=0, select bank0
  4351  0E2C  1303               	bcf	3,6	;RP1=0, select bank0
  4352  0E2D  141F               	bsf	31,0	;volatile
  4353                           
  4354                           ;./adc.h: 37:     ADCON0bits.CHS = adcChannel;
  4355  0E2E  0870               	movf	adcRead@adcChannel,w
  4356  0E2F  00F2               	movwf	??_adcRead
  4357  0E30  0DF2               	rlf	??_adcRead,f
  4358  0E31  0DF2               	rlf	??_adcRead,f
  4359  0E32  0DF2               	rlf	??_adcRead,f
  4360  0E33  081F               	movf	31,w	;volatile
  4361  0E34  0672               	xorwf	??_adcRead,w
  4362  0E35  39C7               	andlw	-57
  4363  0E36  0672               	xorwf	??_adcRead,w
  4364  0E37  009F               	movwf	31	;volatile
  4365                           
  4366                           ;./adc.h: 38:     _delay((unsigned long)((10)*(20000000/4000.0)));
  4367  0E38  3041               	movlw	65
  4368  0E39  00F3               	movwf	??_adcRead+1
  4369  0E3A  30EE               	movlw	238
  4370  0E3B  00F2               	movwf	??_adcRead
  4371  0E3C                     u2747:	
  4372  0E3C  0BF2               	decfsz	??_adcRead,f
  4373  0E3D  2E3C               	goto	u2747
  4374  0E3E  0BF3               	decfsz	??_adcRead+1,f
  4375  0E3F  2E3C               	goto	u2747
  4376  0E40  0000               	nop
  4377                           
  4378                           ;./adc.h: 39:     ADCON0bits.GO = 1;
  4379  0E41  1283               	bcf	3,5	;RP0=0, select bank0
  4380  0E42  1303               	bcf	3,6	;RP1=0, select bank0
  4381  0E43  151F               	bsf	31,2	;volatile
  4382  0E44                     l125:	
  4383                           ;./adc.h: 40:     while (ADCON0bits.GO_DONE);
  4384                           
  4385  0E44  191F               	btfsc	31,2	;volatile
  4386  0E45  2E44               	goto	l125
  4387                           
  4388                           ;./adc.h: 42:     return (ADRESH << 8) + (ADRESL);
  4389  0E46  081E               	movf	30,w	;volatile
  4390  0E47  00F1               	movwf	?_adcRead+1
  4391  0E48  1683               	bsf	3,5	;RP0=1, select bank1
  4392  0E49  1303               	bcf	3,6	;RP1=0, select bank1
  4393  0E4A  081E               	movf	30,w	;volatile
  4394  0E4B  00F0               	movwf	?_adcRead
  4395  0E4C  0008               	return
  4396  0E4D                     __end_of_adcRead:	
  4397                           
  4398                           	psect	text22
  4399  0DE7                     __ptext22:	
  4400 ;; *************** function _adcInit *****************
  4401 ;; Defined at:
  4402 ;;		line 1 in file "./adc.h"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;		None
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;		None
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  1    wreg      void 
  4409 ;; Registers used:
  4410 ;;		wreg, status,2, status,0
  4411 ;; Tracked objects:
  4412 ;;		On entry : 0/0
  4413 ;;		On exit  : 0/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4416 ;;      Params:         0       0       0       0       0
  4417 ;;      Locals:         0       0       0       0       0
  4418 ;;      Temps:          0       0       0       0       0
  4419 ;;      Totals:         0       0       0       0       0
  4420 ;;Total ram usage:        0 bytes
  4421 ;; Hardware stack levels used:    1
  4422 ;; This function calls:
  4423 ;;		Nothing
  4424 ;; This function is called by:
  4425 ;;		_main
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           
  4430                           ;psect for function _adcInit
  4431  0DE7                     _adcInit:	
  4432                           
  4433                           ;./adc.h: 11:     ADCON0bits.ADCS = 0b01;
  4434                           
  4435                           ;incstack = 0
  4436                           ; Regs used in _adcInit: [wreg+status,2+status,0]
  4437  0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  4438  0DE8  1303               	bcf	3,6	;RP1=0, select bank0
  4439  0DE9  081F               	movf	31,w	;volatile
  4440  0DEA  393F               	andlw	-193
  4441  0DEB  3840               	iorlw	64
  4442  0DEC  009F               	movwf	31	;volatile
  4443                           
  4444                           ;./adc.h: 12:     ADCON0bits.CHS = 0b000;
  4445  0DED  30C7               	movlw	-57
  4446  0DEE  059F               	andwf	31,f	;volatile
  4447                           
  4448                           ;./adc.h: 13:     ADCON0bits.ADON = 0;
  4449  0DEF  101F               	bcf	31,0	;volatile
  4450                           
  4451                           ;./adc.h: 24:     ADCON1bits.ADFM = 1;
  4452  0DF0  1683               	bsf	3,5	;RP0=1, select bank1
  4453  0DF1  1303               	bcf	3,6	;RP1=0, select bank1
  4454  0DF2  179F               	bsf	31,7	;volatile
  4455                           
  4456                           ;./adc.h: 25:     ADCON1bits.ADCS2 = 1;
  4457  0DF3  171F               	bsf	31,6	;volatile
  4458                           
  4459                           ;./adc.h: 26:     ADCON1bits.PCFG = 0b0000;
  4460  0DF4  30F0               	movlw	-16
  4461  0DF5  059F               	andwf	31,f	;volatile
  4462  0DF6  0008               	return
  4463  0DF7                     __end_of_adcInit:	
  4464  007E                     btemp	set	126	;btemp
  4465  007E                     wtemp0	set	126


Data Sizes:
    Strings     39
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     74      74
    BANK1            80     18      18
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_3(CODE[9]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@entero(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcdPrint@a	PTR unsigned char  size(2) Largest target is 16
		 -> main@entero(BANK1[16]), STR_2(CODE[16]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _pwmDuty1->___fltol
    ___xxtofl->_pmwMaxDuty
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _lcdSetCursor->_lcdCmd
    _lcdPrint->_lcdWriteChar
    _lcdWriteChar->_lcdPort
    _lcdInit->_lcdCmd
    _lcdClear->_lcdCmd
    _lcdCmd->_lcdPort

Critical Paths under _main in BANK0

    _main->_pwmDuty1
    _pwmDuty1->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0    8062
                                             71 BANK0      3     3      0
                                              0 BANK1     18    18      0
                            _adcInit
                            _adcRead
                           _lcdClear
                            _lcdInit
                           _lcdPrint
                       _lcdSetCursor
                           _pwmDuty1
                           _pwmInit1
                           _pwmInit2
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _pwmInit2                                             0     0      0       0
                             _setPR2
 ---------------------------------------------------------------------------------
 (1) _pwmInit1                                             0     0      0       0
                             _setPR2
 ---------------------------------------------------------------------------------
 (2) _setPR2                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwmDuty1                                             4     2      2    5242
                                             67 BANK0      4     2      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                         _pmwMaxDuty
 ---------------------------------------------------------------------------------
 (2) _pmwMaxDuty                                           4     0      4       0
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              4 COMMON     8     4      4
                                              0 BANK0      6     6      0
                         _pmwMaxDuty (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     381
                                             12 COMMON     2     2      0
                                             58 BANK0      9     5      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                         _pmwMaxDuty (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2569
                                             32 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
                         _pmwMaxDuty (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1425
                                              6 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcdSetCursor                                         7     6      1     608
                                              4 COMMON     7     6      1
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             7     5      2     496
                                              5 COMMON     7     5      2
                       _lcdWriteChar
 ---------------------------------------------------------------------------------
 (2) _lcdWriteChar                                         4     4      0     178
                                              1 COMMON     4     4      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              2     2      0     198
                                              4 COMMON     2     2      0
                             _lcdCmd
                            _lcdPort
 ---------------------------------------------------------------------------------
 (1) _lcdClear                                             0     0      0     110
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (2) _lcdCmd                                               3     3      0     110
                                              1 COMMON     3     3      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (3) _lcdPort                                              1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adcRead                                              4     2      2      98
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcInit
   _adcRead
   _lcdClear
     _lcdCmd
       _lcdPort
   _lcdInit
     _lcdCmd
       _lcdPort
     _lcdPort
   _lcdPrint
     _lcdWriteChar
       _lcdPort
   _lcdSetCursor
     _lcdCmd
       _lcdPort
   _pwmDuty1
     ___fldiv
       ___xxtofl (ARG)
         _pmwMaxDuty (ARG)
     ___flmul
       __Umul8_16
       ___fldiv (ARG)
         ___xxtofl (ARG)
           _pmwMaxDuty (ARG)
       ___xxtofl (ARG)
         _pmwMaxDuty (ARG)
       _pmwMaxDuty (ARG)
     ___fltol
       ___fldiv (ARG)
         ___xxtofl (ARG)
           _pmwMaxDuty (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
             _pmwMaxDuty (ARG)
         ___xxtofl (ARG)
           _pmwMaxDuty (ARG)
         _pmwMaxDuty (ARG)
       ___xxtofl (ARG)
         _pmwMaxDuty (ARG)
       _pmwMaxDuty (ARG)
     ___xxtofl
       _pmwMaxDuty (ARG)
     _pmwMaxDuty
   _pwmInit1
     _setPR2
   _pwmInit2
     _setPR2
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      4A       5       92.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     12      12       7       22.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat May 11 13:55:42 2019

           ___fldiv@aexp 003F             ___fldiv@bexp 003E                        pc 0002  
           ___fldiv@sign 0037                       l90 0E06                       l91 0E0A  
                     l92 0E0B                       l93 0E0F                       l87 0DFE  
                     l88 0E01                       l89 0E05                       fsr 0004  
    __Umul8_16@word_mpld 0076                      l125 0E44                      l442 005C  
                    l620 04D1                      l622 04DF                      l650 07EF  
                    l690 017D                      l682 015D                      l676 011D  
                    l598 0392                      l695 0E5F                      l689 0173  
                    _RD2 0042                      _RD3 0043                      _RD4 0044  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
                    _PR2 0092                      fsr0 0004                      indf 0000  
           ___flmul@aexp 0052             ___flmul@bexp 0053             ___flmul@sign 004D  
           ___flmul@temp 0058             ___flmul@prod 0054           ??_lcdWriteChar 0071  
          lcdWriteChar@a 0074            lcdWriteChar@y 0073             ___fltol@exp1 007D  
                   l2111 02FE                     l2103 02FA                     l2113 0273  
                   l2115 033F                     l2039 0F19                     l2091 02CA  
                   l2075 02B1                     l1701 042B                     l1613 0E92  
                   l2085 02C8                     l2069 0293                     l2165 0212  
                   l1703 03E8                     l1543 0021                     l1607 0E76  
                   l1721 0453                     l1705 0430                     l1641 036C  
                   l1561 0058                     l1609 0E84                     l1617 0E9D  
                   l2097 02EB                     l1731 046C                     l1635 0361  
                   l1491 0E57                     l1539 0018                     l1741 049E  
                   l1727 046A                     l1719 0436                     l1655 0387  
                   l1639 0364                     l1807 0541                     l1559 0048  
                   l1591 0F07                     l1583 0EE3                     l2199 02A6  
                   l1745 04B7                     l1569 006B                     l1921 0142  
                   l1585 0EF1                     l1675 03BD                     l1659 038A  
                   l1931 0162                     l1915 012C                     l1595 0F12  
                   l1757 04DB                     l1669 03B1                     l1861 075E  
                   l1781 050E                     l1909 0115                     l1695 040C  
                   l1871 0777                     l1943 019A                     l1919 0130  
                   l1881 07A9                     l1777 0504                     l1929 0171  
                   l1891 07D8                     l1867 0775                     l1859 0741  
                   l1795 0529                     l1779 0506                     l1955 00F1  
                   l1885 07BF                     l1797 052B                     l1799 0533  
                   l1993 0F79                     STR_1 082A                     STR_2 081A  
                   STR_3 0838                     u1405 0EB3                     u2125 06EA  
                   u2055 05F1                     u2145 070F                     u1425 002A  
                   u2165 072D                     u2085 064E                     u1525 0EE6  
                   u2175 0745                     u1455 0049                     u2415 0185  
                   u2335 0139                     u1615 0E8A                     u2505 0F85  
                   u1385 0E60                     u2265 0794                     u1545 0EF2  
                   u1625 0E93                     u2450 00EE                     u2275 07B2  
                   u2195 0750                     u2355 0155                     u1555 0EFE  
                   u1805 043A                     u2285 07CA                     u1485 0061  
                   u1565 0F08                     u1735 03F1                     u2375 016A  
                   u1905 04A7                     u1825 0445                     u1745 03FA  
                   u2707 0FAE                     u1915 04C2                     u1595 0E79  
                   u2717 0FBD                     u2485 0F60                     u1765 0405  
                   u2727 0FCC                     u1775 041A                     u2575 02E1  
                   u2737 0E22                     u2657 01D0                     u2747 0E3C  
                   u2667 0207                     u2677 0265                     u2687 0EC3  
                   u1895 0489                     u2697 0ED4                     _main 01A3  
                   btemp 007E                     start 0000          ___fldiv@new_exp 0038  
          ___fltol@sign1 007C                    ?_main 0070          __end_of_adcInit 0DF7  
                  _CCP1X 00BD          __end_of___fldiv 04E7                    _CCP1Y 00BC  
                  _CCP2X 00ED          __end_of_adcRead 0E4D                    _CCP2Y 00EC  
        __end_of___flmul 07FC          __end_of___fltol 007A          __end_of___lwdiv 0F17  
        __end_of___lwmod 0EA2                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088          __end_of_lcdInit 1000  
        __end_of_lcdPort 0E11          __end_of_dpowers 081A                    main@v 00B0  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __end_of_sprintf 0344          __initialization 07FC             __end_of_main 026C  
                 ??_main 0067     __end_of_lcdSetCursor 0F9E                   _CCP1M2 00BA  
                 _CCP1M3 00BB                   _CCP2M2 00EA                   _CCP2M3 00EB  
                 _ADRESH 001E                   _ADRESL 009E                   _CCPR1L 0015  
                 _CCPR2L 001B                   _TMR2ON 0092                   _TRISC1 0439  
                 _TRISC2 043A         __end_of___xxtofl 01A3         __end_of_lcdClear 0DCD  
       __end_of_lcdPrint 0F54                ??_adcInit 0070                ??___fldiv 002E  
              ??_adcRead 0072     __end_of_lcdWriteChar 0EDB                ??___flmul 0048  
              ??___fltol 005E                   _lcdCmd 0E11                ??___lwdiv 0074  
              ??___lwmod 007C                   _setPR2 0DBD                ??_lcdInit 0074  
              ??_lcdPort 0070       __size_of__Umul8_16 0023         __end_of_pwmInit1 0DD9  
       __end_of_pwmInit2 0DE7         __end_of_pwmDuty1 00FE                ??_sprintf 0023  
           ___xxtofl@arg 0022             ___xxtofl@exp 0021             ___xxtofl@val 0074  
__end_of__initialization 07FC               ___fltol@f1 005A           __pcstackCOMMON 0070  
       lcdWriteChar@temp 0072        __end_of__Umul8_16 0E70               __pmaintext 01A3  
                ?_lcdCmd 0070    __size_of_lcdSetCursor 004A                  ?_setPR2 0070  
                _T2CKPS0 0090                  _T2CKPS1 0091                ?___xxtofl 0074  
              ?_lcdClear 0070                ?_lcdPrint 0075               __stringtab 0800  
  __size_of_lcdWriteChar 0039             _lcdSetCursor 0F54                ?_pwmInit1 0070  
              ?_pwmInit2 0070                ?_pwmDuty1 0063                  _adcInit 0DE7  
                ___fldiv 0344                  _adcRead 0E2B                  ___flmul 04E7  
                ___fltol 000D                  ___lwdiv 0EDB                  ___lwmod 0E70  
        __size_of_lcdCmd 001A          __size_of_setPR2 0005                  _lcdInit 0F9E  
                __ptext1 026C                  __ptext2 0E70                  __ptext3 0EDB  
                __ptext4 0DD9                  __ptext5 0DCD                  __ptext6 0DBD  
                __ptext7 007A                  __ptext8 0004                  __ptext9 00FE  
                _lcdPort 0DF7                  _dpowers 0810               ??___xxtofl 0078  
                lcdCmd@a 0073               ??_lcdClear 0074               ??_lcdPrint 0077  
                _sprintf 026C             _lcdWriteChar 0EA2     end_of_initialization 07FC  
             _pmwMaxDuty 0004               ??_pwmInit1 0070               ??_pwmInit2 0070  
             ??_pwmDuty1 0065            ___xxtofl@sign 0020              ___fldiv@grs 003A  
            ___fldiv@rem 0033              ___flmul@grs 004E               main@entero 00A0  
         __end_of_lcdCmd 0E2B           __end_of_setPR2 0DC2      start_initialization 07FC  
            ?_pmwMaxDuty 0070                 ??_lcdCmd 0071                __Umul8_16 0E4D  
               ??_setPR2 0070                ___fldiv@a 0026                ___fldiv@b 002A  
              ___flmul@a 0044                ___flmul@b 0040                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00A0        __size_of___xxtofl 00A5  
      __size_of_lcdClear 000B        __size_of_lcdPrint 003D              sprintf@flag 0027  
            sprintf@prec 0028         ___lwdiv@dividend 0072                 ?_adcInit 0070  
               ?___fldiv 0026                 ?_adcRead 0070                 ?___flmul 0040  
               ?___fltol 005A               ?__Umul8_16 0070                 ?___lwdiv 0070  
               ?___lwmod 0078        __size_of_pwmInit1 000C        __size_of_pwmInit2 000E  
      __size_of_pwmDuty1 0084                __pstrings 0800                 ?_lcdInit 0070  
               ?_lcdPort 0070        adcRead@adcChannel 0070      __size_of_pmwMaxDuty 0009  
       ___lwdiv@quotient 0075                 ?_sprintf 0020                lcdPrint@a 0075  
              lcdPrint@i 007A               _ADCON0bits 001F              __stringbase 080F  
             _ADCON1bits 009F         lcdSetCursor@temp 007A              ??__Umul8_16 0072  
       __size_of_adcInit 0010         __size_of___fldiv 01A3         __size_of_adcRead 0022  
       __size_of___flmul 0315         __size_of___fltol 006D         __size_of___lwdiv 003C  
       __size_of___lwmod 0032       __end_of__stringtab 0810         __size_of_lcdInit 0062  
       __size_of_lcdPort 001A               sprintf@val 0029                 ___xxtofl 00FE  
               _lcdClear 0DC2          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
               __ptext10 000D                 __ptext11 04E7                 __ptext20 0DF7  
               __ptext12 0E4D                 __ptext21 0E2B                 __ptext13 0344  
               __ptext22 0DE7                 __ptext14 0F54                 __ptext15 0F17  
               __ptext16 0EA2                 __ptext17 0F9E                 __ptext18 0DC2  
               __ptext19 0E11                 _lcdPrint 0F17         __size_of_sprintf 00D8  
          lcdSetCursor@a 0077            lcdSetCursor@b 0074            lcdSetCursor@y 0079  
          lcdSetCursor@z 0078            __size_of_main 00C9             ??_pmwMaxDuty 0074  
               _pwmInit1 0DCD                 _pwmInit2 0DD9                 _pwmDuty1 007A  
               lcdPort@a 0070       __end_of_pmwMaxDuty 000D                sprintf@ap 0026  
              sprintf@sp 002B         ___lwmod@dividend 007A            ?_lcdSetCursor 0074  
              stringcode 080A   __Umul8_16@multiplicand 0070                 sprintf@c 002C  
               sprintf@f 0020          ___lwmod@divisor 0078          ___lwmod@counter 007D  
               stringdir 080A                 stringtab 0800             pwmDuty1@duty 0063  
          ?_lcdWriteChar 0070     __Umul8_16@multiplier 0078           ??_lcdSetCursor 0075  
      __Umul8_16@product 0074  
