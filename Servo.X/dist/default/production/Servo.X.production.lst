

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu May 09 01:58:53 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.05
    33                           ; Generated 20/12/2018 GMT
    34                           ; 
    35                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F877A Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  0091                     	;# 
   171  0092                     	;# 
   172  0093                     	;# 
   173  0094                     	;# 
   174  0098                     	;# 
   175  0099                     	;# 
   176  009C                     	;# 
   177  009D                     	;# 
   178  009E                     	;# 
   179  009F                     	;# 
   180  010C                     	;# 
   181  010D                     	;# 
   182  010E                     	;# 
   183  010F                     	;# 
   184  018C                     	;# 
   185  018D                     	;# 
   186                           
   187                           	psect	strings
   188  0800                     __pstrings:	
   189  0800                     stringtab:	
   190  0800                     __stringtab:	
   191  0800                     stringcode:	
   192                           ;	String table - string pointers are 1 byte each
   193                           
   194  0800                     stringdir:	
   195  0800  3008               	movlw	high stringdir
   196  0801  008A               	movwf	10
   197  0802  0804               	movf	4,w
   198  0803  0A84               	incf	4,f
   199  0804  0782               	addwf	2,f
   200  0805                     __stringbase:	
   201  0805  3400               	retlw	0
   202  0806                     __end_of__stringtab:	
   203  0806                     _dpowers:	
   204  0806  3401               	retlw	1
   205  0807  3400               	retlw	0
   206  0808  340A               	retlw	10
   207  0809  3400               	retlw	0
   208  080A  3464               	retlw	100
   209  080B  3400               	retlw	0
   210  080C  34E8               	retlw	232
   211  080D  3403               	retlw	3
   212  080E  3410               	retlw	16
   213  080F  3427               	retlw	39
   214  0810                     __end_of_dpowers:	
   215  0007                     _PORTCbits	set	7
   216  0006                     _PORTB	set	6
   217  0007                     _PORTC	set	7
   218  0006                     _PORTBbits	set	6
   219  001E                     _ADRESH	set	30
   220  001F                     _ADCON0bits	set	31
   221  0008                     _PORTD	set	8
   222  0043                     _RD3	set	67
   223  0042                     _RD2	set	66
   224  0047                     _RD7	set	71
   225  0046                     _RD6	set	70
   226  0045                     _RD5	set	69
   227  0044                     _RD4	set	68
   228  0086                     _TRISB	set	134
   229  0087                     _TRISC	set	135
   230  009E                     _ADRESL	set	158
   231  009F                     _ADCON1bits	set	159
   232  0088                     _TRISD	set	136
   233  0810                     STR_1:	
   234  0810  3456               	retlw	86	;'V'
   235  0811  3461               	retlw	97	;'a'
   236  0812  346C               	retlw	108	;'l'
   237  0813  346F               	retlw	111	;'o'
   238  0814  3472               	retlw	114	;'r'
   239  0815  343A               	retlw	58	;':'
   240  0816  3420               	retlw	32	;' '
   241  0817  3425               	retlw	37	;'%'
   242  0818  3464               	retlw	100	;'d'
   243  0819  3400               	retlw	0
   244                           
   245                           ; #config settings
   246  0000                     
   247                           	psect	cinit
   248  07F5                     start_initialization:	
   249  07F5                     __initialization:	
   250                           
   251                           ; Clear objects allocated to BANK1
   252  07F5  1383               	bcf	3,7	;select IRP bank0
   253  07F6  30A0               	movlw	low __pbssBANK1
   254  07F7  0084               	movwf	4
   255  07F8  30B0               	movlw	low (__pbssBANK1+16)
   256  07F9  120A  158A  2435   	fcall	clear_ram0
   257  07FC                     end_of_initialization:	
   258                           ;End of C runtime variable initialization code
   259                           
   260  07FC                     __end_of__initialization:	
   261  07FC  0183               	clrf	3
   262  07FD  120A  158A  2F39   	ljmp	_main	;jump to C main() function
   263                           
   264                           	psect	bssBANK1
   265  00A0                     __pbssBANK1:	
   266  00A0                     _mensaje:	
   267  00A0                     	ds	16
   268                           
   269                           	psect	clrtext
   270  0C35                     clear_ram0:	
   271                           ;	Called with FSR containing the base address, and
   272                           ;	W with the last address+1
   273                           
   274  0C35  0064               	clrwdt	;clear the watchdog before getting into this loop
   275  0C36                     clrloop0:	
   276  0C36  0180               	clrf	0	;clear RAM location pointed to by FSR
   277  0C37  0A84               	incf	4,f	;increment pointer
   278  0C38  0604               	xorwf	4,w	;XOR with final address
   279  0C39  1903               	btfsc	3,2	;have we reached the end yet?
   280  0C3A  3400               	retlw	0	;all done for this memory range, return
   281  0C3B  0604               	xorwf	4,w	;XOR again to restore value
   282  0C3C  2C36               	goto	clrloop0	;do the next byte
   283                           
   284                           	psect	cstackCOMMON
   285  0070                     __pcstackCOMMON:	
   286  0070                     ?_lcdPort:	
   287  0070                     ??_lcdPort:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ?_lcdCmd:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ?_lcdInit:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ?_lcdWriteChar:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?_lcdPrint:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_adcInit:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ??_adcInit:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ?_main:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     ?__Umul8_16:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0070                     ?_adcRead:	
   315                           ; 2 bytes @ 0x0
   316                           
   317  0070                     ?_position2:	
   318                           ; 2 bytes @ 0x0
   319                           
   320  0070                     ?___lwdiv:	
   321                           ; 2 bytes @ 0x0
   322                           
   323  0070                     ?___xxtofl:	
   324                           ; 2 bytes @ 0x0
   325                           
   326  0070                     lcdPort@a:	
   327                           ; 4 bytes @ 0x0
   328                           
   329  0070                     __Umul8_16@multiplicand:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ___lwdiv@divisor:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ___xxtofl@val:	
   336                           ; 2 bytes @ 0x0
   337                           
   338                           
   339                           ; 4 bytes @ 0x0
   340  0070                     	ds	1
   341  0071                     ??_lcdCmd:	
   342  0071                     ??_lcdWriteChar:	
   343                           ; 1 bytes @ 0x1
   344                           
   345                           
   346                           ; 1 bytes @ 0x1
   347  0071                     	ds	1
   348  0072                     ??__Umul8_16:	
   349  0072                     ??_adcRead:	
   350                           ; 1 bytes @ 0x2
   351                           
   352  0072                     lcdWriteChar@temp:	
   353                           ; 1 bytes @ 0x2
   354                           
   355  0072                     ___lwdiv@dividend:	
   356                           ; 1 bytes @ 0x2
   357                           
   358                           
   359                           ; 2 bytes @ 0x2
   360  0072                     	ds	1
   361  0073                     lcdCmd@a:	
   362  0073                     lcdWriteChar@y:	
   363                           ; 1 bytes @ 0x3
   364                           
   365                           
   366                           ; 1 bytes @ 0x3
   367  0073                     	ds	1
   368  0074                     ?_lcdSetCursor:	
   369  0074                     ??_lcdInit:	
   370                           ; 1 bytes @ 0x4
   371                           
   372  0074                     ??___lwdiv:	
   373                           ; 1 bytes @ 0x4
   374                           
   375  0074                     ??___xxtofl:	
   376                           ; 1 bytes @ 0x4
   377                           
   378  0074                     lcdSetCursor@b:	
   379                           ; 1 bytes @ 0x4
   380                           
   381  0074                     lcdWriteChar@a:	
   382                           ; 1 bytes @ 0x4
   383                           
   384  0074                     adcRead@adcChannel:	
   385                           ; 1 bytes @ 0x4
   386                           
   387  0074                     __Umul8_16@product:	
   388                           ; 1 bytes @ 0x4
   389                           
   390                           
   391                           ; 2 bytes @ 0x4
   392  0074                     	ds	1
   393  0075                     ??_lcdSetCursor:	
   394  0075                     ??_lcdPrint:	
   395                           ; 1 bytes @ 0x5
   396                           
   397  0075                     ___lwdiv@quotient:	
   398                           ; 1 bytes @ 0x5
   399                           
   400                           
   401                           ; 2 bytes @ 0x5
   402  0075                     	ds	1
   403  0076                     lcdPrint@i:	
   404  0076                     __Umul8_16@word_mpld:	
   405                           ; 2 bytes @ 0x6
   406                           
   407                           
   408                           ; 2 bytes @ 0x6
   409  0076                     	ds	1
   410  0077                     lcdSetCursor@a:	
   411  0077                     ___lwdiv@counter:	
   412                           ; 1 bytes @ 0x7
   413                           
   414                           
   415                           ; 1 bytes @ 0x7
   416  0077                     	ds	1
   417  0078                     ?___lwmod:	
   418  0078                     lcdSetCursor@z:	
   419                           ; 2 bytes @ 0x8
   420                           
   421  0078                     lcdPrint@a:	
   422                           ; 1 bytes @ 0x8
   423                           
   424  0078                     ___xxtofl@sign:	
   425                           ; 1 bytes @ 0x8
   426                           
   427  0078                     __Umul8_16@multiplier:	
   428                           ; 1 bytes @ 0x8
   429                           
   430  0078                     ___lwmod@divisor:	
   431                           ; 1 bytes @ 0x8
   432                           
   433                           
   434                           ; 2 bytes @ 0x8
   435  0078                     	ds	1
   436  0079                     lcdSetCursor@y:	
   437  0079                     ___xxtofl@exp:	
   438                           ; 1 bytes @ 0x9
   439                           
   440                           
   441                           ; 1 bytes @ 0x9
   442  0079                     	ds	1
   443  007A                     lcdSetCursor@temp:	
   444  007A                     ___lwmod@dividend:	
   445                           ; 1 bytes @ 0xA
   446                           
   447  007A                     ___xxtofl@arg:	
   448                           ; 2 bytes @ 0xA
   449                           
   450                           
   451                           ; 4 bytes @ 0xA
   452  007A                     	ds	2
   453  007C                     ??___lwmod:	
   454                           
   455                           ; 1 bytes @ 0xC
   456  007C                     	ds	1
   457  007D                     ___lwmod@counter:	
   458                           
   459                           ; 1 bytes @ 0xD
   460  007D                     	ds	1
   461                           
   462                           	psect	cstackBANK0
   463  0020                     __pcstackBANK0:	
   464  0020                     ?_sprintf:	
   465  0020                     ?___flmul:	
   466                           ; 2 bytes @ 0x0
   467                           
   468  0020                     sprintf@f:	
   469                           ; 4 bytes @ 0x0
   470                           
   471  0020                     ___flmul@b:	
   472                           ; 1 bytes @ 0x0
   473                           
   474                           
   475                           ; 4 bytes @ 0x0
   476  0020                     	ds	3
   477  0023                     ??_sprintf:	
   478                           
   479                           ; 1 bytes @ 0x3
   480  0023                     	ds	1
   481  0024                     ___flmul@a:	
   482                           
   483                           ; 4 bytes @ 0x4
   484  0024                     	ds	2
   485  0026                     sprintf@ap:	
   486                           
   487                           ; 1 bytes @ 0x6
   488  0026                     	ds	1
   489  0027                     sprintf@flag:	
   490                           
   491                           ; 1 bytes @ 0x7
   492  0027                     	ds	1
   493  0028                     ??___flmul:	
   494  0028                     sprintf@prec:	
   495                           ; 1 bytes @ 0x8
   496                           
   497                           
   498                           ; 1 bytes @ 0x8
   499  0028                     	ds	1
   500  0029                     sprintf@val:	
   501                           
   502                           ; 2 bytes @ 0x9
   503  0029                     	ds	2
   504  002B                     sprintf@sp:	
   505                           
   506                           ; 1 bytes @ 0xB
   507  002B                     	ds	1
   508  002C                     sprintf@c:	
   509                           
   510                           ; 1 bytes @ 0xC
   511  002C                     	ds	1
   512  002D                     ?_print:	
   513  002D                     ___flmul@sign:	
   514                           ; 1 bytes @ 0xD
   515                           
   516  002D                     print@valor:	
   517                           ; 1 bytes @ 0xD
   518                           
   519                           
   520                           ; 2 bytes @ 0xD
   521  002D                     	ds	1
   522  002E                     ___flmul@grs:	
   523                           
   524                           ; 4 bytes @ 0xE
   525  002E                     	ds	1
   526  002F                     print@y:	
   527                           
   528                           ; 1 bytes @ 0xF
   529  002F                     	ds	1
   530  0030                     ??_print:	
   531                           
   532                           ; 1 bytes @ 0x10
   533  0030                     	ds	2
   534  0032                     ___flmul@aexp:	
   535                           
   536                           ; 1 bytes @ 0x12
   537  0032                     	ds	1
   538  0033                     ___flmul@bexp:	
   539                           
   540                           ; 1 bytes @ 0x13
   541  0033                     	ds	1
   542  0034                     ___flmul@prod:	
   543                           
   544                           ; 4 bytes @ 0x14
   545  0034                     	ds	4
   546  0038                     ___flmul@temp:	
   547                           
   548                           ; 2 bytes @ 0x18
   549  0038                     	ds	2
   550  003A                     ?___fltol:	
   551  003A                     ?___fladd:	
   552                           ; 4 bytes @ 0x1A
   553                           
   554  003A                     ___fltol@f1:	
   555                           ; 4 bytes @ 0x1A
   556                           
   557  003A                     ___fladd@b:	
   558                           ; 4 bytes @ 0x1A
   559                           
   560                           
   561                           ; 4 bytes @ 0x1A
   562  003A                     	ds	4
   563  003E                     ??___fltol:	
   564  003E                     ___fladd@a:	
   565                           ; 1 bytes @ 0x1E
   566                           
   567                           
   568                           ; 4 bytes @ 0x1E
   569  003E                     	ds	4
   570  0042                     ??___fladd:	
   571                           
   572                           ; 1 bytes @ 0x22
   573  0042                     	ds	1
   574  0043                     ___fltol@sign1:	
   575                           
   576                           ; 1 bytes @ 0x23
   577  0043                     	ds	1
   578  0044                     ___fltol@exp1:	
   579                           
   580                           ; 1 bytes @ 0x24
   581  0044                     	ds	6
   582  004A                     ___fladd@signs:	
   583                           
   584                           ; 1 bytes @ 0x2A
   585  004A                     	ds	1
   586  004B                     ___fladd@aexp:	
   587                           
   588                           ; 1 bytes @ 0x2B
   589  004B                     	ds	1
   590  004C                     ___fladd@bexp:	
   591                           
   592                           ; 1 bytes @ 0x2C
   593  004C                     	ds	1
   594  004D                     ___fladd@grs:	
   595                           
   596                           ; 1 bytes @ 0x2D
   597  004D                     	ds	1
   598  004E                     ??_position2:	
   599  004E                     ?_position1:	
   600                           ; 1 bytes @ 0x2E
   601                           
   602                           
   603                           ; 2 bytes @ 0x2E
   604  004E                     	ds	2
   605  0050                     ??_position1:	
   606                           
   607                           ; 1 bytes @ 0x30
   608  0050                     	ds	3
   609  0053                     _position2$222:	
   610                           
   611                           ; 4 bytes @ 0x33
   612  0053                     	ds	2
   613  0055                     _position1$206:	
   614                           
   615                           ; 4 bytes @ 0x35
   616  0055                     	ds	2
   617  0057                     _position2$223:	
   618                           
   619                           ; 4 bytes @ 0x37
   620  0057                     	ds	2
   621  0059                     _position1$207:	
   622                           
   623                           ; 4 bytes @ 0x39
   624  0059                     	ds	2
   625  005B                     position2@j:	
   626                           
   627                           ; 2 bytes @ 0x3B
   628  005B                     	ds	2
   629  005D                     position1@j:	
   630  005D                     position2@j_226:	
   631                           ; 2 bytes @ 0x3D
   632                           
   633                           
   634                           ; 2 bytes @ 0x3D
   635  005D                     	ds	2
   636  005F                     position1@j_218:	
   637  005F                     position2@time:	
   638                           ; 2 bytes @ 0x3F
   639                           
   640                           
   641                           ; 2 bytes @ 0x3F
   642  005F                     	ds	2
   643  0061                     position1@i:	
   644  0061                     position2@i:	
   645                           ; 1 bytes @ 0x41
   646                           
   647                           
   648                           ; 1 bytes @ 0x41
   649  0061                     	ds	1
   650  0062                     position2@angule:	
   651  0062                     position1@time:	
   652                           ; 1 bytes @ 0x42
   653                           
   654                           
   655                           ; 2 bytes @ 0x42
   656  0062                     	ds	2
   657  0064                     position1@angule:	
   658                           
   659                           ; 1 bytes @ 0x44
   660  0064                     	ds	1
   661  0065                     ??_main:	
   662                           
   663                           ; 1 bytes @ 0x45
   664  0065                     	ds	1
   665  0066                     main@time:	
   666                           
   667                           ; 2 bytes @ 0x46
   668  0066                     	ds	2
   669  0068                     main@time_253:	
   670                           
   671                           ; 2 bytes @ 0x48
   672  0068                     	ds	2
   673  006A                     main@adc:	
   674                           
   675                           ; 2 bytes @ 0x4A
   676  006A                     	ds	2
   677  006C                     main@ang:	
   678                           
   679                           ; 1 bytes @ 0x4C
   680  006C                     	ds	1
   681  006D                     main@angulo:	
   682                           
   683                           ; 2 bytes @ 0x4D
   684  006D                     	ds	2
   685                           
   686                           	psect	maintext
   687  0F39                     __pmaintext:	
   688 ;;
   689 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   690 ;;
   691 ;; *************** function _main *****************
   692 ;; Defined at:
   693 ;;		line 18 in file "main.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;		None
   696 ;; Auto vars:     Size  Location     Type
   697 ;;  time            2   72[BANK0 ] int 
   698 ;;  time            2   70[BANK0 ] int 
   699 ;;  adc             2   74[BANK0 ] unsigned int 
   700 ;;  ang             1   76[BANK0 ] unsigned char 
   701 ;;  angulo          2   77[BANK0 ] int 
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   706 ;; Tracked objects:
   707 ;;		On entry : B00/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   711 ;;      Params:         0       0       0       0       0
   712 ;;      Locals:         0       9       0       0       0
   713 ;;      Temps:          0       1       0       0       0
   714 ;;      Totals:         0      10       0       0       0
   715 ;;Total ram usage:       10 bytes
   716 ;; Hardware stack levels required when called:    4
   717 ;; This function calls:
   718 ;;		___flmul
   719 ;;		___fltol
   720 ;;		___xxtofl
   721 ;;		_adcInit
   722 ;;		_adcRead
   723 ;;		_lcdInit
   724 ;;		_position1
   725 ;;		_position2
   726 ;;		_print
   727 ;; This function is called by:
   728 ;;		Startup code after reset
   729 ;; This function uses a non-reentrant model
   730 ;;
   731                           
   732                           
   733                           ;psect for function _main
   734  0F39                     _main:	
   735                           
   736                           ;main.c: 19:     TRISC = 255;
   737                           
   738                           ;incstack = 0
   739                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   740  0F39  30FF               	movlw	255
   741  0F3A  1683               	bsf	3,5	;RP0=1, select bank1
   742  0F3B  1303               	bcf	3,6	;RP1=0, select bank1
   743  0F3C  0087               	movwf	7	;volatile
   744                           
   745                           ;main.c: 20:     PORTC = 0;
   746  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
   747  0F3E  1303               	bcf	3,6	;RP1=0, select bank0
   748  0F3F  0187               	clrf	7	;volatile
   749                           
   750                           ;main.c: 21:     TRISB = 0;
   751  0F40  1683               	bsf	3,5	;RP0=1, select bank1
   752  0F41  1303               	bcf	3,6	;RP1=0, select bank1
   753  0F42  0186               	clrf	6	;volatile
   754                           
   755                           ;main.c: 22:     PORTB = 0;
   756  0F43  1283               	bcf	3,5	;RP0=0, select bank0
   757  0F44  1303               	bcf	3,6	;RP1=0, select bank0
   758  0F45  0186               	clrf	6	;volatile
   759                           
   760                           ;main.c: 24:     adcInit();
   761  0F46  120A  158A  243D  120A  158A  	fcall	_adcInit
   762                           
   763                           ;main.c: 25:     lcdInit();
   764  0F4B  120A  158A  25C8  120A  158A  	fcall	_lcdInit
   765                           
   766                           ;main.c: 27:     int angulo = 0;
   767  0F50  1283               	bcf	3,5	;RP0=0, select bank0
   768  0F51  1303               	bcf	3,6	;RP1=0, select bank0
   769  0F52  01ED               	clrf	main@angulo
   770  0F53  01EE               	clrf	main@angulo+1
   771                           
   772                           ;main.c: 28:     print(42, 1);
   773  0F54  302A               	movlw	42
   774  0F55  00AD               	movwf	print@valor
   775  0F56  3000               	movlw	0
   776  0F57  00AE               	movwf	print@valor+1
   777  0F58  01AF               	clrf	print@y
   778  0F59  0AAF               	incf	print@y,f
   779  0F5A  120A  158A  24E5  120A  158A  	fcall	_print
   780                           
   781                           ;main.c: 29:     print(angulo, 2);
   782  0F5F  3000               	movlw	0
   783  0F60  1283               	bcf	3,5	;RP0=0, select bank0
   784  0F61  1303               	bcf	3,6	;RP1=0, select bank0
   785  0F62  00AD               	movwf	print@valor
   786  0F63  00AE               	movwf	print@valor+1
   787  0F64  3002               	movlw	2
   788  0F65  00E5               	movwf	??_main
   789  0F66  0865               	movf	??_main,w
   790  0F67  00AF               	movwf	print@y
   791  0F68  120A  158A  24E5  120A  158A  	fcall	_print
   792  0F6D                     l2305:	
   793                           
   794                           ;main.c: 34:         if (PORTCbits.RC0) {
   795  0F6D  1283               	bcf	3,5	;RP0=0, select bank0
   796  0F6E  1303               	bcf	3,6	;RP1=0, select bank0
   797  0F6F  1C07               	btfss	7,0	;volatile
   798  0F70  2F87               	goto	l133
   799                           
   800                           ;main.c: 35:             angulo++;
   801  0F71  3001               	movlw	1
   802  0F72  07ED               	addwf	main@angulo,f
   803  0F73  1803               	skipnc
   804  0F74  0AEE               	incf	main@angulo+1,f
   805  0F75  3000               	movlw	0
   806  0F76  07EE               	addwf	main@angulo+1,f
   807                           
   808                           ;main.c: 36:             int time = position1(angulo);
   809  0F77  086D               	movf	main@angulo,w
   810  0F78  120A  118A  2109  120A  158A  	fcall	_position1
   811  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
   812  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
   813  0F7F  084F               	movf	?_position1+1,w
   814  0F80  00E7               	movwf	main@time+1
   815  0F81  084E               	movf	?_position1,w
   816  0F82  00E6               	movwf	main@time
   817                           
   818                           ;main.c: 37:             print(time, 1);
   819  0F83  0867               	movf	main@time+1,w
   820  0F84  00AE               	movwf	print@valor+1
   821  0F85  0866               	movf	main@time,w
   822  0F86  2F9E               	goto	L1
   823  0F87                     l133:	
   824                           ;main.c: 39:         } else if (PORTCbits.RC1) {
   825                           
   826  0F87  1C87               	btfss	7,1	;volatile
   827  0F88  2FB5               	goto	l2323
   828                           
   829                           ;main.c: 40:             angulo--;
   830  0F89  30FF               	movlw	255
   831  0F8A  07ED               	addwf	main@angulo,f
   832  0F8B  1803               	skipnc
   833  0F8C  0AEE               	incf	main@angulo+1,f
   834  0F8D  30FF               	movlw	255
   835  0F8E  07EE               	addwf	main@angulo+1,f
   836                           
   837                           ;main.c: 41:             int time = position1(angulo);
   838  0F8F  086D               	movf	main@angulo,w
   839  0F90  120A  118A  2109  120A  158A  	fcall	_position1
   840  0F95  1283               	bcf	3,5	;RP0=0, select bank0
   841  0F96  1303               	bcf	3,6	;RP1=0, select bank0
   842  0F97  084F               	movf	?_position1+1,w
   843  0F98  00E9               	movwf	main@time_253+1
   844  0F99  084E               	movf	?_position1,w
   845  0F9A  00E8               	movwf	main@time_253
   846                           
   847                           ;main.c: 42:             print(time, 1);
   848  0F9B  0869               	movf	main@time_253+1,w
   849  0F9C  00AE               	movwf	print@valor+1
   850  0F9D  0868               	movf	main@time_253,w
   851  0F9E                     L1:	
   852  0F9E  00AD               	movwf	print@valor
   853  0F9F  01AF               	clrf	print@y
   854  0FA0  0AAF               	incf	print@y,f
   855  0FA1  120A  158A  24E5  120A  158A  	fcall	_print
   856                           
   857                           ;main.c: 38:             print(angulo, 2);
   858  0FA6  1283               	bcf	3,5	;RP0=0, select bank0
   859  0FA7  1303               	bcf	3,6	;RP1=0, select bank0
   860  0FA8  086E               	movf	main@angulo+1,w
   861  0FA9  00AE               	movwf	print@valor+1
   862  0FAA  086D               	movf	main@angulo,w
   863  0FAB  00AD               	movwf	print@valor
   864  0FAC  3002               	movlw	2
   865  0FAD  00E5               	movwf	??_main
   866  0FAE  0865               	movf	??_main,w
   867  0FAF  00AF               	movwf	print@y
   868  0FB0  120A  158A  24E5  120A  158A  	fcall	_print
   869  0FB5                     l2323:	
   870                           
   871                           ;main.c: 46:         unsigned int adc = adcRead(0);
   872  0FB5  3000               	movlw	0
   873  0FB6  120A  158A  249F  120A  158A  	fcall	_adcRead
   874  0FBB  0871               	movf	?_adcRead+1,w
   875  0FBC  1283               	bcf	3,5	;RP0=0, select bank0
   876  0FBD  1303               	bcf	3,6	;RP1=0, select bank0
   877  0FBE  00EB               	movwf	main@adc+1
   878  0FBF  0870               	movf	?_adcRead,w
   879  0FC0  00EA               	movwf	main@adc
   880                           
   881                           ;main.c: 47:         unsigned char ang = adc * 0.1759530791788856;
   882  0FC1  086A               	movf	main@adc,w
   883  0FC2  00F0               	movwf	___xxtofl@val
   884  0FC3  086B               	movf	main@adc+1,w
   885  0FC4  00F1               	movwf	___xxtofl@val+1
   886  0FC5  01F2               	clrf	___xxtofl@val+2
   887  0FC6  01F3               	clrf	___xxtofl@val+3
   888  0FC7  3000               	movlw	0
   889  0FC8  120A  158A  2696  120A  158A  	fcall	___xxtofl
   890  0FCD  0873               	movf	?___xxtofl+3,w
   891  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
   892  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
   893  0FD0  00A7               	movwf	___flmul@a+3
   894  0FD1  0872               	movf	?___xxtofl+2,w
   895  0FD2  00A6               	movwf	___flmul@a+2
   896  0FD3  0871               	movf	?___xxtofl+1,w
   897  0FD4  00A5               	movwf	___flmul@a+1
   898  0FD5  0870               	movf	?___xxtofl,w
   899  0FD6  00A4               	movwf	___flmul@a
   900  0FD7  303E               	movlw	62
   901  0FD8  00A3               	movwf	___flmul@b+3
   902  0FD9  3034               	movlw	52
   903  0FDA  00A2               	movwf	___flmul@b+2
   904  0FDB  302D               	movlw	45
   905  0FDC  00A1               	movwf	___flmul@b+1
   906  0FDD  300B               	movlw	11
   907  0FDE  00A0               	movwf	___flmul@b
   908  0FDF  120A  118A  24E0  120A  158A  	fcall	___flmul
   909  0FE4  1283               	bcf	3,5	;RP0=0, select bank0
   910  0FE5  1303               	bcf	3,6	;RP1=0, select bank0
   911  0FE6  0823               	movf	?___flmul+3,w
   912  0FE7  00BD               	movwf	___fltol@f1+3
   913  0FE8  0822               	movf	?___flmul+2,w
   914  0FE9  00BC               	movwf	___fltol@f1+2
   915  0FEA  0821               	movf	?___flmul+1,w
   916  0FEB  00BB               	movwf	___fltol@f1+1
   917  0FEC  0820               	movf	?___flmul,w
   918  0FED  00BA               	movwf	___fltol@f1
   919  0FEE  120A  158A  2629  120A  158A  	fcall	___fltol
   920  0FF3  1283               	bcf	3,5	;RP0=0, select bank0
   921  0FF4  1303               	bcf	3,6	;RP1=0, select bank0
   922  0FF5  083A               	movf	?___fltol,w
   923  0FF6  00E5               	movwf	??_main
   924  0FF7  0865               	movf	??_main,w
   925  0FF8  00EC               	movwf	main@ang
   926                           
   927                           ;main.c: 48:         position2(ang);
   928  0FF9  086C               	movf	main@ang,w
   929  0FFA  120A  118A  203D  120A  158A  	fcall	_position2
   930                           
   931                           ;main.c: 50:     }
   932  0FFF  2F6D               	goto	l2305
   933  1000                     __end_of_main:	
   934                           
   935                           	psect	text1
   936  0CE5                     __ptext1:	
   937 ;; *************** function _print *****************
   938 ;; Defined at:
   939 ;;		line 11 in file "main.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;  valor           2   13[BANK0 ] const int 
   942 ;;  y               1   15[BANK0 ] const unsigned char 
   943 ;; Auto vars:     Size  Location     Type
   944 ;;		None
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      void 
   947 ;; Registers used:
   948 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   954 ;;      Params:         0       3       0       0       0
   955 ;;      Locals:         0       0       0       0       0
   956 ;;      Temps:          0       2       0       0       0
   957 ;;      Totals:         0       5       0       0       0
   958 ;;Total ram usage:        5 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; Hardware stack levels required when called:    3
   961 ;; This function calls:
   962 ;;		_lcdPrint
   963 ;;		_lcdSetCursor
   964 ;;		_sprintf
   965 ;; This function is called by:
   966 ;;		_main
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970                           
   971                           ;psect for function _print
   972  0CE5                     _print:	
   973                           
   974                           ;main.c: 12:     lcdSetCursor(y, 1);
   975                           
   976                           ;incstack = 0
   977                           ; Regs used in _print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   978  0CE5  01F4               	clrf	lcdSetCursor@b
   979  0CE6  0AF4               	incf	lcdSetCursor@b,f
   980  0CE7  1283               	bcf	3,5	;RP0=0, select bank0
   981  0CE8  1303               	bcf	3,6	;RP1=0, select bank0
   982  0CE9  082F               	movf	print@y,w
   983  0CEA  120A  158A  257E  120A  158A  	fcall	_lcdSetCursor
   984                           
   985                           ;main.c: 13:     sprintf(mensaje, "Valor: %d", valor);
   986  0CEF  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   987  0CF0  1283               	bcf	3,5	;RP0=0, select bank0
   988  0CF1  1303               	bcf	3,6	;RP1=0, select bank0
   989  0CF2  00B0               	movwf	??_print
   990  0CF3  0830               	movf	??_print,w
   991  0CF4  00A0               	movwf	sprintf@f
   992  0CF5  082E               	movf	print@valor+1,w
   993  0CF6  00A2               	movwf	?_sprintf+2
   994  0CF7  082D               	movf	print@valor,w
   995  0CF8  00A1               	movwf	?_sprintf+1
   996  0CF9  30A0               	movlw	(low (_mensaje| 0))& (0+255)
   997  0CFA  120A  118A  21D9  120A  158A  	fcall	_sprintf
   998                           
   999                           ;main.c: 14:     lcdPrint(mensaje);
  1000  0CFF  30A0               	movlw	(low (_mensaje| 0))& (0+255)
  1001  0D00  120A  158A  2481  120A  158A  	fcall	_lcdPrint
  1002                           
  1003                           ;main.c: 15:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1004  0D05  300D               	movlw	13
  1005  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  1006  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  1007  0D08  00B1               	movwf	??_print+1
  1008  0D09  30FB               	movlw	251
  1009  0D0A  00B0               	movwf	??_print
  1010  0D0B                     u3077:	
  1011  0D0B  0BB0               	decfsz	??_print,f
  1012  0D0C  2D0B               	goto	u3077
  1013  0D0D  0BB1               	decfsz	??_print+1,f
  1014  0D0E  2D0B               	goto	u3077
  1015  0D0F  0008               	return
  1016  0D10                     __end_of_print:	
  1017                           
  1018                           	psect	text2
  1019  01D9                     __ptext2:	
  1020 ;; *************** function _sprintf *****************
  1021 ;; Defined at:
  1022 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;  sp              1    wreg     PTR unsigned char 
  1025 ;;		 -> mensaje(16), 
  1026 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1027 ;;		 -> STR_1(10), 
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1030 ;;		 -> mensaje(16), 
  1031 ;;  tmpval          4    0        struct .
  1032 ;;  val             2    9[BANK0 ] unsigned int 
  1033 ;;  cp              2    0        PTR const unsigned char 
  1034 ;;  len             2    0        unsigned int 
  1035 ;;  c               1   12[BANK0 ] unsigned char 
  1036 ;;  prec            1    8[BANK0 ] char 
  1037 ;;  flag            1    7[BANK0 ] unsigned char 
  1038 ;;  ap              1    6[BANK0 ] PTR void [1]
  1039 ;;		 -> ?_sprintf(2), 
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  2    0[BANK0 ] int 
  1042 ;; Registers used:
  1043 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1049 ;;      Params:         0       3       0       0       0
  1050 ;;      Locals:         0       7       0       0       0
  1051 ;;      Temps:          0       3       0       0       0
  1052 ;;      Totals:         0      13       0       0       0
  1053 ;;Total ram usage:       13 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; Hardware stack levels required when called:    1
  1056 ;; This function calls:
  1057 ;;		___lwdiv
  1058 ;;		___lwmod
  1059 ;; This function is called by:
  1060 ;;		_print
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           
  1065                           ;psect for function _sprintf
  1066  01D9                     _sprintf:	
  1067                           
  1068                           ;incstack = 0
  1069                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1070                           ;sprintf@sp stored from wreg
  1071  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1072  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1073  01DB  00AB               	movwf	sprintf@sp
  1074                           
  1075                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  1076  01DC  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1077  01DD  00A3               	movwf	??_sprintf
  1078  01DE  0823               	movf	??_sprintf,w
  1079  01DF  00A6               	movwf	sprintf@ap
  1080  01E0                     l1735:	
  1081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1082                           
  1083                           
  1084                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1085  01E0  3001               	movlw	1
  1086  01E1  07A0               	addwf	sprintf@f,f
  1087  01E2  30FF               	movlw	-1
  1088  01E3  0720               	addwf	sprintf@f,w
  1089  01E4  0084               	movwf	4
  1090  01E5  120A  158A  2000  120A  118A  	fcall	stringdir
  1091  01EA  00A3               	movwf	??_sprintf
  1092  01EB  0823               	movf	??_sprintf,w
  1093  01EC  00AC               	movwf	sprintf@c
  1094  01ED  082C               	movf	sprintf@c,w
  1095  01EE  1903               	btfsc	3,2
  1096  01EF  2AAC               	goto	l1737
  1097                           
  1098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  1099  01F0  3025               	movlw	37
  1100  01F1  062C               	xorwf	sprintf@c,w
  1101  01F2  1903               	btfsc	3,2
  1102  01F3  2A00               	goto	l1691
  1103                           
  1104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  1105  01F4  082C               	movf	sprintf@c,w
  1106  01F5  00A3               	movwf	??_sprintf
  1107  01F6  082B               	movf	sprintf@sp,w
  1108  01F7  0084               	movwf	4
  1109  01F8  0823               	movf	??_sprintf,w
  1110  01F9  1383               	bcf	3,7	;select IRP bank0
  1111  01FA  0080               	movwf	0
  1112  01FB  3001               	movlw	1
  1113  01FC  00A3               	movwf	??_sprintf
  1114  01FD  0823               	movf	??_sprintf,w
  1115  01FE  07AB               	addwf	sprintf@sp,f
  1116                           
  1117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  1118  01FF  29E0               	goto	l1735
  1119  0200                     l1691:	
  1120                           
  1121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  1122  0200  01A7               	clrf	sprintf@flag
  1123                           
  1124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  1125  0201  3001               	movlw	1
  1126  0202  07A0               	addwf	sprintf@f,f
  1127  0203  30FF               	movlw	-1
  1128  0204  0720               	addwf	sprintf@f,w
  1129  0205  0084               	movwf	4
  1130  0206  120A  158A  2000  120A  118A  	fcall	stringdir
  1131  020B  00AC               	movwf	sprintf@c
  1132  020C  00A3               	movwf	??_sprintf
  1133  020D  01A4               	clrf	??_sprintf+1
  1134                           
  1135                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1136                           ; Switch size 1, requested type "simple"
  1137                           ; Number of cases is 1, Range of values is 0 to 0
  1138                           ; switch strategies available:
  1139                           ; Name         Instructions Cycles
  1140                           ; simple_byte            4     3 (average)
  1141                           ; direct_byte           11     8 (fixed)
  1142                           ; jumptable            260     6 (fixed)
  1143                           ;	Chosen strategy is simple_byte
  1144  020E  0824               	movf	??_sprintf+1,w
  1145  020F  3A00               	xorlw	0	; case 0
  1146  0210  1903               	skipnz
  1147  0211  2A13               	goto	l2349
  1148  0212  29E0               	goto	l1735
  1149  0213                     l2349:	
  1150                           
  1151                           ; Switch size 1, requested type "simple"
  1152                           ; Number of cases is 3, Range of values is 0 to 105
  1153                           ; switch strategies available:
  1154                           ; Name         Instructions Cycles
  1155                           ; simple_byte           10     6 (average)
  1156                           ; jumptable            260     6 (fixed)
  1157                           ;	Chosen strategy is simple_byte
  1158  0213  0823               	movf	??_sprintf,w
  1159  0214  3A00               	xorlw	0	; case 0
  1160  0215  1903               	skipnz
  1161  0216  2AAC               	goto	l1737
  1162  0217  3A64               	xorlw	100	; case 100
  1163  0218  1903               	skipnz
  1164  0219  2A1E               	goto	l1697
  1165  021A  3A0D               	xorlw	13	; case 105
  1166  021B  1903               	skipnz
  1167  021C  2A1E               	goto	l1697
  1168  021D  29E0               	goto	l1735
  1169  021E                     l1697:	
  1170                           
  1171                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1172  021E  0826               	movf	sprintf@ap,w
  1173  021F  0084               	movwf	4
  1174  0220  1383               	bcf	3,7	;select IRP bank0
  1175  0221  0800               	movf	0,w
  1176  0222  00A9               	movwf	sprintf@val
  1177  0223  0A84               	incf	4,f
  1178  0224  0800               	movf	0,w
  1179  0225  00AA               	movwf	sprintf@val+1
  1180  0226  3002               	movlw	2
  1181  0227  00A3               	movwf	??_sprintf
  1182  0228  0823               	movf	??_sprintf,w
  1183  0229  07A6               	addwf	sprintf@ap,f
  1184                           
  1185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((int)val < 0) {
  1186  022A  1FAA               	btfss	sprintf@val+1,7
  1187  022B  2A35               	goto	l1707
  1188                           
  1189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  1190  022C  3003               	movlw	3
  1191  022D  00A3               	movwf	??_sprintf
  1192  022E  0823               	movf	??_sprintf,w
  1193  022F  04A7               	iorwf	sprintf@flag,f
  1194                           
  1195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  1196  0230  09A9               	comf	sprintf@val,f
  1197  0231  09AA               	comf	sprintf@val+1,f
  1198  0232  0AA9               	incf	sprintf@val,f
  1199  0233  1903               	skipnz
  1200  0234  0AAA               	incf	sprintf@val+1,f
  1201  0235                     l1707:	
  1202                           
  1203                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1204  0235  01AC               	clrf	sprintf@c
  1205  0236  0AAC               	incf	sprintf@c,f
  1206  0237                     l1713:	
  1207                           
  1208                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  1209  0237  082C               	movf	sprintf@c,w
  1210  0238  00A3               	movwf	??_sprintf
  1211  0239  0723               	addwf	??_sprintf,w
  1212  023A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1213  023B  0084               	movwf	4
  1214  023C  120A  158A  2000  120A  118A  	fcall	stringdir
  1215  0241  00A4               	movwf	??_sprintf+1
  1216  0242  120A  158A  2000  120A  118A  	fcall	stringdir
  1217  0247  00A5               	movwf	??_sprintf+2
  1218  0248  0825               	movf	??_sprintf+2,w
  1219  0249  022A               	subwf	sprintf@val+1,w
  1220  024A  1D03               	skipz
  1221  024B  2A4E               	goto	u1825
  1222  024C  0824               	movf	??_sprintf+1,w
  1223  024D  0229               	subwf	sprintf@val,w
  1224  024E                     u1825:	
  1225  024E  1C03               	btfss	3,0
  1226  024F  2A58               	goto	l1719
  1227  0250  3001               	movlw	1
  1228  0251  00A3               	movwf	??_sprintf
  1229  0252  0823               	movf	??_sprintf,w
  1230  0253  07AC               	addwf	sprintf@c,f
  1231  0254  3005               	movlw	5
  1232  0255  062C               	xorwf	sprintf@c,w
  1233  0256  1D03               	btfss	3,2
  1234  0257  2A37               	goto	l1713
  1235  0258                     l1719:	
  1236                           
  1237                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  1238  0258  0827               	movf	sprintf@flag,w
  1239  0259  3903               	andlw	3
  1240  025A  1903               	btfsc	3,2
  1241  025B  2A67               	goto	l1725
  1242                           
  1243                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  1244  025C  302D               	movlw	45
  1245  025D  00A3               	movwf	??_sprintf
  1246  025E  082B               	movf	sprintf@sp,w
  1247  025F  0084               	movwf	4
  1248  0260  0823               	movf	??_sprintf,w
  1249  0261  1383               	bcf	3,7	;select IRP bank0
  1250  0262  0080               	movwf	0
  1251  0263  3001               	movlw	1
  1252  0264  00A3               	movwf	??_sprintf
  1253  0265  0823               	movf	??_sprintf,w
  1254  0266  07AB               	addwf	sprintf@sp,f
  1255  0267                     l1725:	
  1256                           
  1257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1488:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  1258  0267  082C               	movf	sprintf@c,w
  1259  0268  00A3               	movwf	??_sprintf
  1260  0269  0823               	movf	??_sprintf,w
  1261  026A  00A8               	movwf	sprintf@prec
  1262  026B                     l1733:	
  1263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  1264                           
  1265                           
  1266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  1267  026B  30FF               	movlw	255
  1268  026C  00A3               	movwf	??_sprintf
  1269  026D  0823               	movf	??_sprintf,w
  1270  026E  07A8               	addwf	sprintf@prec,f
  1271  026F  0A28               	incf	sprintf@prec,w
  1272  0270  1903               	btfsc	3,2
  1273  0271  29E0               	goto	l1735
  1274                           
  1275                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  1276  0272  300A               	movlw	10
  1277  0273  00F8               	movwf	___lwmod@divisor
  1278  0274  3000               	movlw	0
  1279  0275  00F9               	movwf	___lwmod@divisor+1
  1280  0276  0828               	movf	sprintf@prec,w
  1281  0277  00A3               	movwf	??_sprintf
  1282  0278  0723               	addwf	??_sprintf,w
  1283  0279  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1284  027A  0084               	movwf	4
  1285  027B  120A  158A  2000  120A  118A  	fcall	stringdir
  1286  0280  00F0               	movwf	___lwdiv@divisor
  1287  0281  120A  158A  2000  120A  118A  	fcall	stringdir
  1288  0286  00F1               	movwf	___lwdiv@divisor+1
  1289  0287  082A               	movf	sprintf@val+1,w
  1290  0288  00F3               	movwf	___lwdiv@dividend+1
  1291  0289  0829               	movf	sprintf@val,w
  1292  028A  00F2               	movwf	___lwdiv@dividend
  1293  028B  120A  158A  2542  120A  118A  	fcall	___lwdiv
  1294  0290  0871               	movf	?___lwdiv+1,w
  1295  0291  00FB               	movwf	___lwmod@dividend+1
  1296  0292  0870               	movf	?___lwdiv,w
  1297  0293  00FA               	movwf	___lwmod@dividend
  1298  0294  120A  158A  2510  120A  118A  	fcall	___lwmod
  1299  0299  0878               	movf	?___lwmod,w
  1300  029A  3E30               	addlw	48
  1301  029B  1283               	bcf	3,5	;RP0=0, select bank0
  1302  029C  1303               	bcf	3,6	;RP1=0, select bank0
  1303  029D  00A4               	movwf	??_sprintf+1
  1304  029E  0824               	movf	??_sprintf+1,w
  1305  029F  00AC               	movwf	sprintf@c
  1306                           
  1307                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  1308  02A0  082C               	movf	sprintf@c,w
  1309  02A1  00A3               	movwf	??_sprintf
  1310  02A2  082B               	movf	sprintf@sp,w
  1311  02A3  0084               	movwf	4
  1312  02A4  0823               	movf	??_sprintf,w
  1313  02A5  1383               	bcf	3,7	;select IRP bank0
  1314  02A6  0080               	movwf	0
  1315  02A7  3001               	movlw	1
  1316  02A8  00A3               	movwf	??_sprintf
  1317  02A9  0823               	movf	??_sprintf,w
  1318  02AA  07AB               	addwf	sprintf@sp,f
  1319  02AB  2A6B               	goto	l1733
  1320  02AC                     l1737:	
  1321                           
  1322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  1323  02AC  082B               	movf	sprintf@sp,w
  1324  02AD  0084               	movwf	4
  1325  02AE  1383               	bcf	3,7	;select IRP bank0
  1326  02AF  0180               	clrf	0
  1327  02B0  0008               	return
  1328  02B1                     __end_of_sprintf:	
  1329                           
  1330                           	psect	text3
  1331  0D10                     __ptext3:	
  1332 ;; *************** function ___lwmod *****************
  1333 ;; Defined at:
  1334 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;  divisor         2    8[COMMON] unsigned int 
  1337 ;;  dividend        2   10[COMMON] unsigned int 
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;  counter         1   13[COMMON] unsigned char 
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  2    8[COMMON] unsigned int 
  1342 ;; Registers used:
  1343 ;;		wreg, status,2, status,0
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1349 ;;      Params:         4       0       0       0       0
  1350 ;;      Locals:         1       0       0       0       0
  1351 ;;      Temps:          1       0       0       0       0
  1352 ;;      Totals:         6       0       0       0       0
  1353 ;;Total ram usage:        6 bytes
  1354 ;; Hardware stack levels used:    1
  1355 ;; This function calls:
  1356 ;;		Nothing
  1357 ;; This function is called by:
  1358 ;;		_sprintf
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           
  1363                           ;psect for function ___lwmod
  1364  0D10                     ___lwmod:	
  1365                           
  1366                           ;incstack = 0
  1367                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1368  0D10  0878               	movf	___lwmod@divisor,w
  1369  0D11  0479               	iorwf	___lwmod@divisor+1,w
  1370  0D12  1903               	btfsc	3,2
  1371  0D13  2D3D               	goto	l1637
  1372  0D14  01FD               	clrf	___lwmod@counter
  1373  0D15  0AFD               	incf	___lwmod@counter,f
  1374  0D16                     l1627:	
  1375  0D16  1BF9               	btfsc	___lwmod@divisor+1,7
  1376  0D17  2D24               	goto	l1629
  1377  0D18  3001               	movlw	1
  1378  0D19                     u1675:	
  1379  0D19  1003               	clrc
  1380  0D1A  0DF8               	rlf	___lwmod@divisor,f
  1381  0D1B  0DF9               	rlf	___lwmod@divisor+1,f
  1382  0D1C  3EFF               	addlw	-1
  1383  0D1D  1D03               	skipz
  1384  0D1E  2D19               	goto	u1675
  1385  0D1F  3001               	movlw	1
  1386  0D20  00FC               	movwf	??___lwmod
  1387  0D21  087C               	movf	??___lwmod,w
  1388  0D22  07FD               	addwf	___lwmod@counter,f
  1389  0D23  2D16               	goto	l1627
  1390  0D24                     l1629:	
  1391  0D24  0879               	movf	___lwmod@divisor+1,w
  1392  0D25  027B               	subwf	___lwmod@dividend+1,w
  1393  0D26  1D03               	skipz
  1394  0D27  2D2A               	goto	u1695
  1395  0D28  0878               	movf	___lwmod@divisor,w
  1396  0D29  027A               	subwf	___lwmod@dividend,w
  1397  0D2A                     u1695:	
  1398  0D2A  1C03               	skipc
  1399  0D2B  2D32               	goto	l1633
  1400  0D2C  0878               	movf	___lwmod@divisor,w
  1401  0D2D  02FA               	subwf	___lwmod@dividend,f
  1402  0D2E  0879               	movf	___lwmod@divisor+1,w
  1403  0D2F  1C03               	skipc
  1404  0D30  03FB               	decf	___lwmod@dividend+1,f
  1405  0D31  02FB               	subwf	___lwmod@dividend+1,f
  1406  0D32                     l1633:	
  1407  0D32  3001               	movlw	1
  1408  0D33                     u1705:	
  1409  0D33  1003               	clrc
  1410  0D34  0CF9               	rrf	___lwmod@divisor+1,f
  1411  0D35  0CF8               	rrf	___lwmod@divisor,f
  1412  0D36  3EFF               	addlw	-1
  1413  0D37  1D03               	skipz
  1414  0D38  2D33               	goto	u1705
  1415  0D39  3001               	movlw	1
  1416  0D3A  02FD               	subwf	___lwmod@counter,f
  1417  0D3B  1D03               	btfss	3,2
  1418  0D3C  2D24               	goto	l1629
  1419  0D3D                     l1637:	
  1420  0D3D  087B               	movf	___lwmod@dividend+1,w
  1421  0D3E  00F9               	movwf	?___lwmod+1
  1422  0D3F  087A               	movf	___lwmod@dividend,w
  1423  0D40  00F8               	movwf	?___lwmod
  1424  0D41  0008               	return
  1425  0D42                     __end_of___lwmod:	
  1426                           
  1427                           	psect	text4
  1428  0D42                     __ptext4:	
  1429 ;; *************** function ___lwdiv *****************
  1430 ;; Defined at:
  1431 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;  divisor         2    0[COMMON] unsigned int 
  1434 ;;  dividend        2    2[COMMON] unsigned int 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  quotient        2    5[COMMON] unsigned int 
  1437 ;;  counter         1    7[COMMON] unsigned char 
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  2    0[COMMON] unsigned int 
  1440 ;; Registers used:
  1441 ;;		wreg, status,2, status,0
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1447 ;;      Params:         4       0       0       0       0
  1448 ;;      Locals:         3       0       0       0       0
  1449 ;;      Temps:          1       0       0       0       0
  1450 ;;      Totals:         8       0       0       0       0
  1451 ;;Total ram usage:        8 bytes
  1452 ;; Hardware stack levels used:    1
  1453 ;; This function calls:
  1454 ;;		Nothing
  1455 ;; This function is called by:
  1456 ;;		_sprintf
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           
  1461                           ;psect for function ___lwdiv
  1462  0D42                     ___lwdiv:	
  1463                           
  1464                           ;incstack = 0
  1465                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1466  0D42  01F5               	clrf	___lwdiv@quotient
  1467  0D43  01F6               	clrf	___lwdiv@quotient+1
  1468  0D44  0870               	movf	___lwdiv@divisor,w
  1469  0D45  0471               	iorwf	___lwdiv@divisor+1,w
  1470  0D46  1903               	btfsc	3,2
  1471  0D47  2D79               	goto	l1615
  1472  0D48  01F7               	clrf	___lwdiv@counter
  1473  0D49  0AF7               	incf	___lwdiv@counter,f
  1474  0D4A                     l1603:	
  1475  0D4A  1BF1               	btfsc	___lwdiv@divisor+1,7
  1476  0D4B  2D58               	goto	l1605
  1477  0D4C  3001               	movlw	1
  1478  0D4D                     u1605:	
  1479  0D4D  1003               	clrc
  1480  0D4E  0DF0               	rlf	___lwdiv@divisor,f
  1481  0D4F  0DF1               	rlf	___lwdiv@divisor+1,f
  1482  0D50  3EFF               	addlw	-1
  1483  0D51  1D03               	skipz
  1484  0D52  2D4D               	goto	u1605
  1485  0D53  3001               	movlw	1
  1486  0D54  00F4               	movwf	??___lwdiv
  1487  0D55  0874               	movf	??___lwdiv,w
  1488  0D56  07F7               	addwf	___lwdiv@counter,f
  1489  0D57  2D4A               	goto	l1603
  1490  0D58                     l1605:	
  1491  0D58  3001               	movlw	1
  1492  0D59                     u1625:	
  1493  0D59  1003               	clrc
  1494  0D5A  0DF5               	rlf	___lwdiv@quotient,f
  1495  0D5B  0DF6               	rlf	___lwdiv@quotient+1,f
  1496  0D5C  3EFF               	addlw	-1
  1497  0D5D  1D03               	skipz
  1498  0D5E  2D59               	goto	u1625
  1499  0D5F  0871               	movf	___lwdiv@divisor+1,w
  1500  0D60  0273               	subwf	___lwdiv@dividend+1,w
  1501  0D61  1D03               	skipz
  1502  0D62  2D65               	goto	u1635
  1503  0D63  0870               	movf	___lwdiv@divisor,w
  1504  0D64  0272               	subwf	___lwdiv@dividend,w
  1505  0D65                     u1635:	
  1506  0D65  1C03               	skipc
  1507  0D66  2D6E               	goto	l1611
  1508  0D67  0870               	movf	___lwdiv@divisor,w
  1509  0D68  02F2               	subwf	___lwdiv@dividend,f
  1510  0D69  0871               	movf	___lwdiv@divisor+1,w
  1511  0D6A  1C03               	skipc
  1512  0D6B  03F3               	decf	___lwdiv@dividend+1,f
  1513  0D6C  02F3               	subwf	___lwdiv@dividend+1,f
  1514  0D6D  1475               	bsf	___lwdiv@quotient,0
  1515  0D6E                     l1611:	
  1516  0D6E  3001               	movlw	1
  1517  0D6F                     u1645:	
  1518  0D6F  1003               	clrc
  1519  0D70  0CF1               	rrf	___lwdiv@divisor+1,f
  1520  0D71  0CF0               	rrf	___lwdiv@divisor,f
  1521  0D72  3EFF               	addlw	-1
  1522  0D73  1D03               	skipz
  1523  0D74  2D6F               	goto	u1645
  1524  0D75  3001               	movlw	1
  1525  0D76  02F7               	subwf	___lwdiv@counter,f
  1526  0D77  1D03               	btfss	3,2
  1527  0D78  2D58               	goto	l1605
  1528  0D79                     l1615:	
  1529  0D79  0876               	movf	___lwdiv@quotient+1,w
  1530  0D7A  00F1               	movwf	?___lwdiv+1
  1531  0D7B  0875               	movf	___lwdiv@quotient,w
  1532  0D7C  00F0               	movwf	?___lwdiv
  1533  0D7D  0008               	return
  1534  0D7E                     __end_of___lwdiv:	
  1535                           
  1536                           	psect	text5
  1537  0D7E                     __ptext5:	
  1538 ;; *************** function _lcdSetCursor *****************
  1539 ;; Defined at:
  1540 ;;		line 49 in file "./lcd.h"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  a               1    wreg     unsigned char 
  1543 ;;  b               1    4[COMMON] unsigned char 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  a               1    7[COMMON] unsigned char 
  1546 ;;  temp            1   10[COMMON] unsigned char 
  1547 ;;  y               1    9[COMMON] unsigned char 
  1548 ;;  z               1    8[COMMON] unsigned char 
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, status,2, status,0, pclath, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1558 ;;      Params:         1       0       0       0       0
  1559 ;;      Locals:         4       0       0       0       0
  1560 ;;      Temps:          2       0       0       0       0
  1561 ;;      Totals:         7       0       0       0       0
  1562 ;;Total ram usage:        7 bytes
  1563 ;; Hardware stack levels used:    1
  1564 ;; Hardware stack levels required when called:    2
  1565 ;; This function calls:
  1566 ;;		_lcdCmd
  1567 ;; This function is called by:
  1568 ;;		_print
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           
  1573                           ;psect for function _lcdSetCursor
  1574  0D7E                     _lcdSetCursor:	
  1575                           
  1576                           ;incstack = 0
  1577                           ; Regs used in _lcdSetCursor: [wreg+status,2+status,0+pclath+cstack]
  1578                           ;lcdSetCursor@a stored from wreg
  1579  0D7E  00F7               	movwf	lcdSetCursor@a
  1580                           
  1581                           ;./lcd.h: 50:     char temp, z, y;;./lcd.h: 51:     if (a == 1) {
  1582  0D7F  0377               	decf	lcdSetCursor@a,w
  1583  0D80  1D03               	btfss	3,2
  1584  0D81  2DA3               	goto	l1665
  1585                           
  1586                           ;./lcd.h: 52:         temp = 0x80 + b - 1;
  1587  0D82  0874               	movf	lcdSetCursor@b,w
  1588  0D83  3E7F               	addlw	127
  1589  0D84  00F5               	movwf	??_lcdSetCursor
  1590  0D85  0875               	movf	??_lcdSetCursor,w
  1591  0D86  00FA               	movwf	lcdSetCursor@temp
  1592                           
  1593                           ;./lcd.h: 53:         z = temp >> 4;
  1594  0D87  087A               	movf	lcdSetCursor@temp,w
  1595  0D88  00F5               	movwf	??_lcdSetCursor
  1596  0D89  3004               	movlw	4
  1597  0D8A                     u1765:	
  1598  0D8A  1003               	clrc
  1599  0D8B  0CF5               	rrf	??_lcdSetCursor,f
  1600  0D8C  3EFF               	addlw	-1
  1601  0D8D  1D03               	skipz
  1602  0D8E  2D8A               	goto	u1765
  1603  0D8F  0875               	movf	??_lcdSetCursor,w
  1604  0D90  00F6               	movwf	??_lcdSetCursor+1
  1605  0D91  0876               	movf	??_lcdSetCursor+1,w
  1606  0D92  00F8               	movwf	lcdSetCursor@z
  1607                           
  1608                           ;./lcd.h: 54:         y = temp & 0x0F;
  1609  0D93  087A               	movf	lcdSetCursor@temp,w
  1610  0D94  390F               	andlw	15
  1611  0D95  00F5               	movwf	??_lcdSetCursor
  1612  0D96  0875               	movf	??_lcdSetCursor,w
  1613  0D97  00F9               	movwf	lcdSetCursor@y
  1614                           
  1615                           ;./lcd.h: 55:         lcdCmd(z);
  1616  0D98  0878               	movf	lcdSetCursor@z,w
  1617  0D99  120A  158A  2467  120A  158A  	fcall	_lcdCmd
  1618                           
  1619                           ;./lcd.h: 56:         lcdCmd(y);
  1620  0D9E  0879               	movf	lcdSetCursor@y,w
  1621  0D9F  120A  158A  2467   	fcall	_lcdCmd
  1622                           
  1623                           ;./lcd.h: 57:     } else if (a == 2) {
  1624  0DA2  0008               	return
  1625  0DA3                     l1665:	
  1626  0DA3  3002               	movlw	2
  1627  0DA4  0677               	xorwf	lcdSetCursor@a,w
  1628  0DA5  1D03               	btfss	3,2
  1629  0DA6  0008               	return
  1630                           
  1631                           ;./lcd.h: 58:         temp = 0xC0 + b - 1;
  1632  0DA7  0874               	movf	lcdSetCursor@b,w
  1633  0DA8  3EBF               	addlw	191
  1634  0DA9  00F5               	movwf	??_lcdSetCursor
  1635  0DAA  0875               	movf	??_lcdSetCursor,w
  1636  0DAB  00FA               	movwf	lcdSetCursor@temp
  1637                           
  1638                           ;./lcd.h: 59:         z = temp >> 4;
  1639  0DAC  087A               	movf	lcdSetCursor@temp,w
  1640  0DAD  00F5               	movwf	??_lcdSetCursor
  1641  0DAE  3004               	movlw	4
  1642  0DAF                     u1785:	
  1643  0DAF  1003               	clrc
  1644  0DB0  0CF5               	rrf	??_lcdSetCursor,f
  1645  0DB1  3EFF               	addlw	-1
  1646  0DB2  1D03               	skipz
  1647  0DB3  2DAF               	goto	u1785
  1648  0DB4  0875               	movf	??_lcdSetCursor,w
  1649  0DB5  00F6               	movwf	??_lcdSetCursor+1
  1650  0DB6  0876               	movf	??_lcdSetCursor+1,w
  1651  0DB7  00F8               	movwf	lcdSetCursor@z
  1652                           
  1653                           ;./lcd.h: 60:         y = temp & 0x0F;
  1654  0DB8  087A               	movf	lcdSetCursor@temp,w
  1655  0DB9  390F               	andlw	15
  1656  0DBA  00F5               	movwf	??_lcdSetCursor
  1657  0DBB  0875               	movf	??_lcdSetCursor,w
  1658  0DBC  00F9               	movwf	lcdSetCursor@y
  1659                           
  1660                           ;./lcd.h: 61:         lcdCmd(z);
  1661  0DBD  0878               	movf	lcdSetCursor@z,w
  1662  0DBE  120A  158A  2467  120A  158A  	fcall	_lcdCmd
  1663                           
  1664                           ;./lcd.h: 62:         lcdCmd(y);
  1665  0DC3  0879               	movf	lcdSetCursor@y,w
  1666  0DC4  120A  158A  2467   	fcall	_lcdCmd
  1667  0DC7  0008               	return
  1668  0DC8                     __end_of_lcdSetCursor:	
  1669                           
  1670                           	psect	text6
  1671  0C81                     __ptext6:	
  1672 ;; *************** function _lcdPrint *****************
  1673 ;; Defined at:
  1674 ;;		line 101 in file "./lcd.h"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;  a               1    wreg     PTR unsigned char 
  1677 ;;		 -> mensaje(16), 
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  a               1    8[COMMON] PTR unsigned char 
  1680 ;;		 -> mensaje(16), 
  1681 ;;  i               2    6[COMMON] int 
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      void 
  1684 ;; Registers used:
  1685 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1691 ;;      Params:         0       0       0       0       0
  1692 ;;      Locals:         3       0       0       0       0
  1693 ;;      Temps:          1       0       0       0       0
  1694 ;;      Totals:         4       0       0       0       0
  1695 ;;Total ram usage:        4 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:    2
  1698 ;; This function calls:
  1699 ;;		_lcdWriteChar
  1700 ;; This function is called by:
  1701 ;;		_print
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           
  1706                           ;psect for function _lcdPrint
  1707  0C81                     _lcdPrint:	
  1708                           
  1709                           ;incstack = 0
  1710                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1711                           ;lcdPrint@a stored from wreg
  1712  0C81  00F8               	movwf	lcdPrint@a
  1713                           
  1714                           ;./lcd.h: 102:     int i;;./lcd.h: 103:     for (i = 0; a[i] != '\0'; i++)
  1715  0C82  01F6               	clrf	lcdPrint@i
  1716  0C83  01F7               	clrf	lcdPrint@i+1
  1717  0C84                     l1681:	
  1718  0C84  0876               	movf	lcdPrint@i,w
  1719  0C85  0778               	addwf	lcdPrint@a,w
  1720  0C86  00F5               	movwf	??_lcdPrint
  1721  0C87  0875               	movf	??_lcdPrint,w
  1722  0C88  0084               	movwf	4
  1723  0C89  1383               	bcf	3,7	;select IRP bank0
  1724  0C8A  0800               	movf	0,w
  1725  0C8B  1903               	btfsc	3,2
  1726  0C8C  0008               	return
  1727                           
  1728                           ;./lcd.h: 104:         lcdWriteChar(a[i]);
  1729  0C8D  0876               	movf	lcdPrint@i,w
  1730  0C8E  0778               	addwf	lcdPrint@a,w
  1731  0C8F  00F5               	movwf	??_lcdPrint
  1732  0C90  0875               	movf	??_lcdPrint,w
  1733  0C91  0084               	movwf	4
  1734  0C92  0800               	movf	0,w
  1735  0C93  120A  118A  2006  120A  158A  	fcall	_lcdWriteChar
  1736  0C98  3001               	movlw	1
  1737  0C99  07F6               	addwf	lcdPrint@i,f
  1738  0C9A  1803               	skipnc
  1739  0C9B  0AF7               	incf	lcdPrint@i+1,f
  1740  0C9C  3000               	movlw	0
  1741  0C9D  07F7               	addwf	lcdPrint@i+1,f
  1742  0C9E  2C84               	goto	l1681
  1743  0C9F                     __end_of_lcdPrint:	
  1744                           
  1745                           	psect	text7
  1746  0006                     __ptext7:	
  1747 ;; *************** function _lcdWriteChar *****************
  1748 ;; Defined at:
  1749 ;;		line 86 in file "./lcd.h"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;  a               1    wreg     unsigned char 
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;  a               1    4[COMMON] unsigned char 
  1754 ;;  y               1    3[COMMON] unsigned char 
  1755 ;;  temp            1    2[COMMON] unsigned char 
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  1    wreg      void 
  1758 ;; Registers used:
  1759 ;;		wreg, status,2, status,0, pclath, cstack
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1765 ;;      Params:         0       0       0       0       0
  1766 ;;      Locals:         3       0       0       0       0
  1767 ;;      Temps:          1       0       0       0       0
  1768 ;;      Totals:         4       0       0       0       0
  1769 ;;Total ram usage:        4 bytes
  1770 ;; Hardware stack levels used:    1
  1771 ;; Hardware stack levels required when called:    1
  1772 ;; This function calls:
  1773 ;;		_lcdPort
  1774 ;; This function is called by:
  1775 ;;		_lcdPrint
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           
  1780                           ;psect for function _lcdWriteChar
  1781  0006                     _lcdWriteChar:	
  1782                           
  1783                           ;incstack = 0
  1784                           ; Regs used in _lcdWriteChar: [wreg+status,2+status,0+pclath+cstack]
  1785                           ;lcdWriteChar@a stored from wreg
  1786  0006  00F4               	movwf	lcdWriteChar@a
  1787                           
  1788                           ;./lcd.h: 87:     char temp, y;;./lcd.h: 88:     temp = a & 0x0F;
  1789  0007  0874               	movf	lcdWriteChar@a,w
  1790  0008  390F               	andlw	15
  1791  0009  00F1               	movwf	??_lcdWriteChar
  1792  000A  0871               	movf	??_lcdWriteChar,w
  1793  000B  00F2               	movwf	lcdWriteChar@temp
  1794                           
  1795                           ;./lcd.h: 89:     y = a & 0xF0;
  1796  000C  0874               	movf	lcdWriteChar@a,w
  1797  000D  39F0               	andlw	240
  1798  000E  00F1               	movwf	??_lcdWriteChar
  1799  000F  0871               	movf	??_lcdWriteChar,w
  1800  0010  00F3               	movwf	lcdWriteChar@y
  1801                           
  1802                           ;./lcd.h: 90:     RD2 = 1;
  1803  0011  1283               	bcf	3,5	;RP0=0, select bank0
  1804  0012  1303               	bcf	3,6	;RP1=0, select bank0
  1805  0013  1508               	bsf	8,2	;volatile
  1806                           
  1807                           ;./lcd.h: 91:     lcdPort(y >> 4);
  1808  0014  0873               	movf	lcdWriteChar@y,w
  1809  0015  00F1               	movwf	??_lcdWriteChar
  1810  0016  3004               	movlw	4
  1811  0017                     u1585:	
  1812  0017  1003               	clrc
  1813  0018  0CF1               	rrf	??_lcdWriteChar,f
  1814  0019  3EFF               	addlw	-1
  1815  001A  1D03               	skipz
  1816  001B  2817               	goto	u1585
  1817  001C  0871               	movf	??_lcdWriteChar,w
  1818  001D  120A  158A  244D  120A  118A  	fcall	_lcdPort
  1819                           
  1820                           ;./lcd.h: 92:     RD3 = 1;
  1821  0022  1283               	bcf	3,5	;RP0=0, select bank0
  1822  0023  1303               	bcf	3,6	;RP1=0, select bank0
  1823  0024  1588               	bsf	8,3	;volatile
  1824                           
  1825                           ;./lcd.h: 93:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1826  0025  300D               	movlw	13
  1827  0026  00F1               	movwf	??_lcdWriteChar
  1828  0027                     u3087:	
  1829  0027  0BF1               	decfsz	??_lcdWriteChar,f
  1830  0028  2827               	goto	u3087
  1831                           
  1832                           ;./lcd.h: 94:     RD3 = 0;
  1833  0029  1283               	bcf	3,5	;RP0=0, select bank0
  1834  002A  1303               	bcf	3,6	;RP1=0, select bank0
  1835  002B  1188               	bcf	8,3	;volatile
  1836                           
  1837                           ;./lcd.h: 95:     lcdPort(temp);
  1838  002C  0872               	movf	lcdWriteChar@temp,w
  1839  002D  120A  158A  244D  120A  118A  	fcall	_lcdPort
  1840                           
  1841                           ;./lcd.h: 96:     RD3 = 1;
  1842  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1843  0033  1303               	bcf	3,6	;RP1=0, select bank0
  1844  0034  1588               	bsf	8,3	;volatile
  1845                           
  1846                           ;./lcd.h: 97:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1847  0035  300D               	movlw	13
  1848  0036  00F1               	movwf	??_lcdWriteChar
  1849  0037                     u3097:	
  1850  0037  0BF1               	decfsz	??_lcdWriteChar,f
  1851  0038  2837               	goto	u3097
  1852                           
  1853                           ;./lcd.h: 98:     RD3 = 0;
  1854  0039  1283               	bcf	3,5	;RP0=0, select bank0
  1855  003A  1303               	bcf	3,6	;RP1=0, select bank0
  1856  003B  1188               	bcf	8,3	;volatile
  1857  003C  0008               	return
  1858  003D                     __end_of_lcdWriteChar:	
  1859                           
  1860                           	psect	text8
  1861  003D                     __ptext8:	
  1862 ;; *************** function _position2 *****************
  1863 ;; Defined at:
  1864 ;;		line 27 in file "./servo.h"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;  angule          1    wreg     const unsigned char 
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;  angule          1   66[BANK0 ] const unsigned char 
  1869 ;;  j               2   61[BANK0 ] int 
  1870 ;;  j               2   59[BANK0 ] int 
  1871 ;;  i               1   65[BANK0 ] unsigned char 
  1872 ;;  time            2   63[BANK0 ] int 
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  2  105[None  ] int 
  1875 ;; Registers used:
  1876 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1882 ;;      Params:         0       0       0       0       0
  1883 ;;      Locals:         0      16       0       0       0
  1884 ;;      Temps:          0       5       0       0       0
  1885 ;;      Totals:         0      21       0       0       0
  1886 ;;Total ram usage:       21 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    2
  1889 ;; This function calls:
  1890 ;;		___fladd
  1891 ;;		___flmul
  1892 ;;		___fltol
  1893 ;;		___xxtofl
  1894 ;; This function is called by:
  1895 ;;		_main
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           
  1900                           ;psect for function _position2
  1901  003D                     _position2:	
  1902                           
  1903                           ;incstack = 0
  1904                           ; Regs used in _position2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1905                           ;position2@angule stored from wreg
  1906  003D  1283               	bcf	3,5	;RP0=0, select bank0
  1907  003E  1303               	bcf	3,6	;RP1=0, select bank0
  1908  003F  00E2               	movwf	position2@angule
  1909                           
  1910                           ;./servo.h: 29:     int time = angule <= 0 ? 42 : angule >= 86 ? 86 : ((angule * 0.23333
      +                          3333333333) + 42);
  1911  0040  0862               	movf	position2@angule,w
  1912  0041  1903               	btfsc	3,2
  1913  0042  28A2               	goto	l2253
  1914  0043  3056               	movlw	86
  1915  0044  0262               	subwf	position2@angule,w
  1916  0045  1803               	skipnc
  1917  0046  2892               	goto	l2251
  1918  0047  3042               	movlw	66
  1919  0048  00BD               	movwf	___fladd@b+3
  1920  0049  3028               	movlw	40
  1921  004A  00BC               	movwf	___fladd@b+2
  1922  004B  3000               	movlw	0
  1923  004C  00BB               	movwf	___fladd@b+1
  1924  004D  3000               	movlw	0
  1925  004E  00BA               	movwf	___fladd@b
  1926  004F  303E               	movlw	62
  1927  0050  00A3               	movwf	___flmul@b+3
  1928  0051  306E               	movlw	110
  1929  0052  00A2               	movwf	___flmul@b+2
  1930  0053  30EE               	movlw	238
  1931  0054  00A1               	movwf	___flmul@b+1
  1932  0055  30EF               	movlw	239
  1933  0056  00A0               	movwf	___flmul@b
  1934  0057  0862               	movf	position2@angule,w
  1935  0058  00CE               	movwf	??_position2
  1936  0059  01CF               	clrf	??_position2+1
  1937  005A  01D0               	clrf	??_position2+2
  1938  005B  01D1               	clrf	??_position2+3
  1939  005C  0851               	movf	??_position2+3,w
  1940  005D  00F3               	movwf	___xxtofl@val+3
  1941  005E  0850               	movf	??_position2+2,w
  1942  005F  00F2               	movwf	___xxtofl@val+2
  1943  0060  084F               	movf	??_position2+1,w
  1944  0061  00F1               	movwf	___xxtofl@val+1
  1945  0062  084E               	movf	??_position2,w
  1946  0063  00F0               	movwf	___xxtofl@val
  1947  0064  3001               	movlw	1
  1948  0065  120A  158A  2696  120A  118A  	fcall	___xxtofl
  1949  006A  0873               	movf	?___xxtofl+3,w
  1950  006B  1283               	bcf	3,5	;RP0=0, select bank0
  1951  006C  1303               	bcf	3,6	;RP1=0, select bank0
  1952  006D  00A7               	movwf	___flmul@a+3
  1953  006E  0872               	movf	?___xxtofl+2,w
  1954  006F  00A6               	movwf	___flmul@a+2
  1955  0070  0871               	movf	?___xxtofl+1,w
  1956  0071  00A5               	movwf	___flmul@a+1
  1957  0072  0870               	movf	?___xxtofl,w
  1958  0073  00A4               	movwf	___flmul@a
  1959  0074  120A  118A  24E0  120A  118A  	fcall	___flmul
  1960  0079  1283               	bcf	3,5	;RP0=0, select bank0
  1961  007A  1303               	bcf	3,6	;RP1=0, select bank0
  1962  007B  0823               	movf	?___flmul+3,w
  1963  007C  00C1               	movwf	___fladd@a+3
  1964  007D  0822               	movf	?___flmul+2,w
  1965  007E  00C0               	movwf	___fladd@a+2
  1966  007F  0821               	movf	?___flmul+1,w
  1967  0080  00BF               	movwf	___fladd@a+1
  1968  0081  0820               	movf	?___flmul,w
  1969  0082  00BE               	movwf	___fladd@a
  1970  0083  120A  118A  22B1  120A  118A  	fcall	___fladd
  1971  0088  1283               	bcf	3,5	;RP0=0, select bank0
  1972  0089  1303               	bcf	3,6	;RP1=0, select bank0
  1973  008A  083D               	movf	?___fladd+3,w
  1974  008B  00DA               	movwf	_position2$223+3
  1975  008C  083C               	movf	?___fladd+2,w
  1976  008D  00D9               	movwf	_position2$223+2
  1977  008E  083B               	movf	?___fladd+1,w
  1978  008F  00D8               	movwf	_position2$223+1
  1979  0090  083A               	movf	?___fladd,w
  1980  0091  2899               	goto	L2
  1981  0092                     l2251:	
  1982  0092  3042               	movlw	66
  1983  0093  00DA               	movwf	_position2$223+3
  1984  0094  30AC               	movlw	172
  1985  0095  00D9               	movwf	_position2$223+2
  1986  0096  3000               	movlw	0
  1987  0097  00D8               	movwf	_position2$223+1
  1988  0098  3000               	movlw	0
  1989  0099                     L2:	
  1990  0099  00D7               	movwf	_position2$223
  1991  009A  085A               	movf	_position2$223+3,w
  1992  009B  00D6               	movwf	_position2$222+3
  1993  009C  0859               	movf	_position2$223+2,w
  1994  009D  00D5               	movwf	_position2$222+2
  1995  009E  0858               	movf	_position2$223+1,w
  1996  009F  00D4               	movwf	_position2$222+1
  1997  00A0  0857               	movf	_position2$223,w
  1998  00A1  28A9               	goto	L3
  1999  00A2                     l2253:	
  2000  00A2  3042               	movlw	66
  2001  00A3  00D6               	movwf	_position2$222+3
  2002  00A4  3028               	movlw	40
  2003  00A5  00D5               	movwf	_position2$222+2
  2004  00A6  3000               	movlw	0
  2005  00A7  00D4               	movwf	_position2$222+1
  2006  00A8  3000               	movlw	0
  2007  00A9                     L3:	
  2008  00A9  00D3               	movwf	_position2$222
  2009  00AA  0856               	movf	_position2$222+3,w
  2010  00AB  00BD               	movwf	___fltol@f1+3
  2011  00AC  0855               	movf	_position2$222+2,w
  2012  00AD  00BC               	movwf	___fltol@f1+2
  2013  00AE  0854               	movf	_position2$222+1,w
  2014  00AF  00BB               	movwf	___fltol@f1+1
  2015  00B0  0853               	movf	_position2$222,w
  2016  00B1  00BA               	movwf	___fltol@f1
  2017  00B2  120A  158A  2629  120A  118A  	fcall	___fltol
  2018  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  2019  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  2020  00B9  083B               	movf	?___fltol+1,w
  2021  00BA  00E0               	movwf	position2@time+1
  2022  00BB  083A               	movf	?___fltol,w
  2023  00BC  00DF               	movwf	position2@time
  2024                           
  2025                           ;./servo.h: 31:     for (char i = 0; i < 50; i++) {
  2026  00BD  01E1               	clrf	position2@i
  2027  00BE                     l114:	
  2028                           
  2029                           ;./servo.h: 32:         PORTBbits.RB1 = 1;
  2030  00BE  1486               	bsf	6,1	;volatile
  2031                           
  2032                           ;./servo.h: 33:         for (int j = 0; j < time; j++)
  2033  00BF  01DB               	clrf	position2@j
  2034  00C0  01DC               	clrf	position2@j+1
  2035  00C1                     l116:	
  2036  00C1  085C               	movf	position2@j+1,w
  2037  00C2  3A80               	xorlw	128
  2038  00C3  00CE               	movwf	??_position2
  2039  00C4  0860               	movf	position2@time+1,w
  2040  00C5  3A80               	xorlw	128
  2041  00C6  024E               	subwf	??_position2,w
  2042  00C7  1D03               	skipz
  2043  00C8  28CB               	goto	u3025
  2044  00C9  085F               	movf	position2@time,w
  2045  00CA  025B               	subwf	position2@j,w
  2046  00CB                     u3025:	
  2047  00CB  1803               	btfsc	3,0
  2048  00CC  28D7               	goto	l118
  2049                           
  2050                           ;./servo.h: 34:             _delay((unsigned long)((1)*(4000000/4000000.0)));
  2051  00CD  0000               	nop
  2052  00CE  3001               	movlw	1
  2053  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  2054  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  2055  00D1  07DB               	addwf	position2@j,f
  2056  00D2  1803               	skipnc
  2057  00D3  0ADC               	incf	position2@j+1,f
  2058  00D4  3000               	movlw	0
  2059  00D5  07DC               	addwf	position2@j+1,f
  2060  00D6  28C1               	goto	l116
  2061  00D7                     l118:	
  2062                           
  2063                           ;./servo.h: 36:         PORTBbits.RB1 = 0;
  2064  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  2065  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  2066  00D9  1086               	bcf	6,1	;volatile
  2067                           
  2068                           ;./servo.h: 37:         for (int j = 0; j < (2000 - time); j++)
  2069  00DA  01DD               	clrf	position2@j_226
  2070  00DB  01DE               	clrf	position2@j_226+1
  2071  00DC                     l2271:	
  2072  00DC  30D0               	movlw	208
  2073  00DD  00CE               	movwf	??_position2
  2074  00DE  3007               	movlw	7
  2075  00DF  00CF               	movwf	??_position2+1
  2076  00E0  085F               	movf	position2@time,w
  2077  00E1  024E               	subwf	??_position2,w
  2078  00E2  00D0               	movwf	??_position2+2
  2079  00E3  0860               	movf	position2@time+1,w
  2080  00E4  1C03               	skipc
  2081  00E5  0A60               	incf	position2@time+1,w
  2082  00E6  024F               	subwf	??_position2+1,w
  2083  00E7  00D1               	movwf	??_position2+3
  2084  00E8  085E               	movf	position2@j_226+1,w
  2085  00E9  3A80               	xorlw	128
  2086  00EA  00D2               	movwf	??_position2+4
  2087  00EB  0851               	movf	??_position2+3,w
  2088  00EC  3A80               	xorlw	128
  2089  00ED  0252               	subwf	??_position2+4,w
  2090  00EE  1D03               	skipz
  2091  00EF  28F2               	goto	u3035
  2092  00F0  0850               	movf	??_position2+2,w
  2093  00F1  025D               	subwf	position2@j_226,w
  2094  00F2                     u3035:	
  2095  00F2  1803               	btfsc	3,0
  2096  00F3  28FE               	goto	l2273
  2097                           
  2098                           ;./servo.h: 38:             _delay((unsigned long)((1)*(4000000/4000000.0)));
  2099  00F4  0000               	nop
  2100  00F5  3001               	movlw	1
  2101  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  2102  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  2103  00F8  07DD               	addwf	position2@j_226,f
  2104  00F9  1803               	skipnc
  2105  00FA  0ADE               	incf	position2@j_226+1,f
  2106  00FB  3000               	movlw	0
  2107  00FC  07DE               	addwf	position2@j_226+1,f
  2108  00FD  28DC               	goto	l2271
  2109  00FE                     l2273:	
  2110                           
  2111                           ;./servo.h: 39:     }
  2112  00FE  3001               	movlw	1
  2113  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  2114  0100  1303               	bcf	3,6	;RP1=0, select bank0
  2115  0101  00CE               	movwf	??_position2
  2116  0102  084E               	movf	??_position2,w
  2117  0103  07E1               	addwf	position2@i,f
  2118  0104  3032               	movlw	50
  2119  0105  0261               	subwf	position2@i,w
  2120  0106  1803               	btfsc	3,0
  2121  0107  0008               	return
  2122  0108  28BE               	goto	l114
  2123  0109                     __end_of_position2:	
  2124                           
  2125                           	psect	text9
  2126  0109                     __ptext9:	
  2127 ;; *************** function _position1 *****************
  2128 ;; Defined at:
  2129 ;;		line 7 in file "./servo.h"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  angule          1    wreg     const unsigned char 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  angule          1   68[BANK0 ] const unsigned char 
  2134 ;;  j               2   63[BANK0 ] int 
  2135 ;;  j               2   61[BANK0 ] int 
  2136 ;;  i               1   65[BANK0 ] unsigned char 
  2137 ;;  time            2   66[BANK0 ] int 
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  2   46[BANK0 ] int 
  2140 ;; Registers used:
  2141 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2147 ;;      Params:         0       2       0       0       0
  2148 ;;      Locals:         0      16       0       0       0
  2149 ;;      Temps:          0       5       0       0       0
  2150 ;;      Totals:         0      23       0       0       0
  2151 ;;Total ram usage:       23 bytes
  2152 ;; Hardware stack levels used:    1
  2153 ;; Hardware stack levels required when called:    2
  2154 ;; This function calls:
  2155 ;;		___fladd
  2156 ;;		___flmul
  2157 ;;		___fltol
  2158 ;;		___xxtofl
  2159 ;; This function is called by:
  2160 ;;		_main
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           
  2165                           ;psect for function _position1
  2166  0109                     _position1:	
  2167                           
  2168                           ;incstack = 0
  2169                           ; Regs used in _position1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2170                           ;position1@angule stored from wreg
  2171  0109  1283               	bcf	3,5	;RP0=0, select bank0
  2172  010A  1303               	bcf	3,6	;RP1=0, select bank0
  2173  010B  00E4               	movwf	position1@angule
  2174                           
  2175                           ;./servo.h: 9:     int time = angule <= 0 ? 42 : angule >= 86 ? 86 : ((angule * 0.233333
      +                          333333333) + 42);
  2176  010C  0864               	movf	position1@angule,w
  2177  010D  1903               	btfsc	3,2
  2178  010E  296E               	goto	l2217
  2179  010F  3056               	movlw	86
  2180  0110  0264               	subwf	position1@angule,w
  2181  0111  1803               	skipnc
  2182  0112  295E               	goto	l2215
  2183  0113  3042               	movlw	66
  2184  0114  00BD               	movwf	___fladd@b+3
  2185  0115  3028               	movlw	40
  2186  0116  00BC               	movwf	___fladd@b+2
  2187  0117  3000               	movlw	0
  2188  0118  00BB               	movwf	___fladd@b+1
  2189  0119  3000               	movlw	0
  2190  011A  00BA               	movwf	___fladd@b
  2191  011B  303E               	movlw	62
  2192  011C  00A3               	movwf	___flmul@b+3
  2193  011D  306E               	movlw	110
  2194  011E  00A2               	movwf	___flmul@b+2
  2195  011F  30EE               	movlw	238
  2196  0120  00A1               	movwf	___flmul@b+1
  2197  0121  30EF               	movlw	239
  2198  0122  00A0               	movwf	___flmul@b
  2199  0123  0864               	movf	position1@angule,w
  2200  0124  00D0               	movwf	??_position1
  2201  0125  01D1               	clrf	??_position1+1
  2202  0126  01D2               	clrf	??_position1+2
  2203  0127  01D3               	clrf	??_position1+3
  2204  0128  0853               	movf	??_position1+3,w
  2205  0129  00F3               	movwf	___xxtofl@val+3
  2206  012A  0852               	movf	??_position1+2,w
  2207  012B  00F2               	movwf	___xxtofl@val+2
  2208  012C  0851               	movf	??_position1+1,w
  2209  012D  00F1               	movwf	___xxtofl@val+1
  2210  012E  0850               	movf	??_position1,w
  2211  012F  00F0               	movwf	___xxtofl@val
  2212  0130  3001               	movlw	1
  2213  0131  120A  158A  2696  120A  118A  	fcall	___xxtofl
  2214  0136  0873               	movf	?___xxtofl+3,w
  2215  0137  1283               	bcf	3,5	;RP0=0, select bank0
  2216  0138  1303               	bcf	3,6	;RP1=0, select bank0
  2217  0139  00A7               	movwf	___flmul@a+3
  2218  013A  0872               	movf	?___xxtofl+2,w
  2219  013B  00A6               	movwf	___flmul@a+2
  2220  013C  0871               	movf	?___xxtofl+1,w
  2221  013D  00A5               	movwf	___flmul@a+1
  2222  013E  0870               	movf	?___xxtofl,w
  2223  013F  00A4               	movwf	___flmul@a
  2224  0140  120A  118A  24E0  120A  118A  	fcall	___flmul
  2225  0145  1283               	bcf	3,5	;RP0=0, select bank0
  2226  0146  1303               	bcf	3,6	;RP1=0, select bank0
  2227  0147  0823               	movf	?___flmul+3,w
  2228  0148  00C1               	movwf	___fladd@a+3
  2229  0149  0822               	movf	?___flmul+2,w
  2230  014A  00C0               	movwf	___fladd@a+2
  2231  014B  0821               	movf	?___flmul+1,w
  2232  014C  00BF               	movwf	___fladd@a+1
  2233  014D  0820               	movf	?___flmul,w
  2234  014E  00BE               	movwf	___fladd@a
  2235  014F  120A  118A  22B1  120A  118A  	fcall	___fladd
  2236  0154  1283               	bcf	3,5	;RP0=0, select bank0
  2237  0155  1303               	bcf	3,6	;RP1=0, select bank0
  2238  0156  083D               	movf	?___fladd+3,w
  2239  0157  00DC               	movwf	_position1$207+3
  2240  0158  083C               	movf	?___fladd+2,w
  2241  0159  00DB               	movwf	_position1$207+2
  2242  015A  083B               	movf	?___fladd+1,w
  2243  015B  00DA               	movwf	_position1$207+1
  2244  015C  083A               	movf	?___fladd,w
  2245  015D  2965               	goto	L4
  2246  015E                     l2215:	
  2247  015E  3042               	movlw	66
  2248  015F  00DC               	movwf	_position1$207+3
  2249  0160  30AC               	movlw	172
  2250  0161  00DB               	movwf	_position1$207+2
  2251  0162  3000               	movlw	0
  2252  0163  00DA               	movwf	_position1$207+1
  2253  0164  3000               	movlw	0
  2254  0165                     L4:	
  2255  0165  00D9               	movwf	_position1$207
  2256  0166  085C               	movf	_position1$207+3,w
  2257  0167  00D8               	movwf	_position1$206+3
  2258  0168  085B               	movf	_position1$207+2,w
  2259  0169  00D7               	movwf	_position1$206+2
  2260  016A  085A               	movf	_position1$207+1,w
  2261  016B  00D6               	movwf	_position1$206+1
  2262  016C  0859               	movf	_position1$207,w
  2263  016D  2975               	goto	L5
  2264  016E                     l2217:	
  2265  016E  3042               	movlw	66
  2266  016F  00D8               	movwf	_position1$206+3
  2267  0170  3028               	movlw	40
  2268  0171  00D7               	movwf	_position1$206+2
  2269  0172  3000               	movlw	0
  2270  0173  00D6               	movwf	_position1$206+1
  2271  0174  3000               	movlw	0
  2272  0175                     L5:	
  2273  0175  00D5               	movwf	_position1$206
  2274  0176  0858               	movf	_position1$206+3,w
  2275  0177  00BD               	movwf	___fltol@f1+3
  2276  0178  0857               	movf	_position1$206+2,w
  2277  0179  00BC               	movwf	___fltol@f1+2
  2278  017A  0856               	movf	_position1$206+1,w
  2279  017B  00BB               	movwf	___fltol@f1+1
  2280  017C  0855               	movf	_position1$206,w
  2281  017D  00BA               	movwf	___fltol@f1
  2282  017E  120A  158A  2629  120A  118A  	fcall	___fltol
  2283  0183  1283               	bcf	3,5	;RP0=0, select bank0
  2284  0184  1303               	bcf	3,6	;RP1=0, select bank0
  2285  0185  083B               	movf	?___fltol+1,w
  2286  0186  00E3               	movwf	position1@time+1
  2287  0187  083A               	movf	?___fltol,w
  2288  0188  00E2               	movwf	position1@time
  2289                           
  2290                           ;./servo.h: 11:     for (char i = 0; i < 50; i++) {
  2291  0189  01E1               	clrf	position1@i
  2292  018A                     l95:	
  2293                           
  2294                           ;./servo.h: 12:         PORTBbits.RB0 = 1;
  2295  018A  1406               	bsf	6,0	;volatile
  2296                           
  2297                           ;./servo.h: 13:         for (int j = 0; j < time; j++)
  2298  018B  01DD               	clrf	position1@j
  2299  018C  01DE               	clrf	position1@j+1
  2300  018D                     l97:	
  2301  018D  085E               	movf	position1@j+1,w
  2302  018E  3A80               	xorlw	128
  2303  018F  00D0               	movwf	??_position1
  2304  0190  0863               	movf	position1@time+1,w
  2305  0191  3A80               	xorlw	128
  2306  0192  0250               	subwf	??_position1,w
  2307  0193  1D03               	skipz
  2308  0194  2997               	goto	u2975
  2309  0195  0862               	movf	position1@time,w
  2310  0196  025D               	subwf	position1@j,w
  2311  0197                     u2975:	
  2312  0197  1803               	btfsc	3,0
  2313  0198  29A3               	goto	l99
  2314                           
  2315                           ;./servo.h: 14:             _delay((unsigned long)((1)*(4000000/4000000.0)));
  2316  0199  0000               	nop
  2317  019A  3001               	movlw	1
  2318  019B  1283               	bcf	3,5	;RP0=0, select bank0
  2319  019C  1303               	bcf	3,6	;RP1=0, select bank0
  2320  019D  07DD               	addwf	position1@j,f
  2321  019E  1803               	skipnc
  2322  019F  0ADE               	incf	position1@j+1,f
  2323  01A0  3000               	movlw	0
  2324  01A1  07DE               	addwf	position1@j+1,f
  2325  01A2  298D               	goto	l97
  2326  01A3                     l99:	
  2327                           
  2328                           ;./servo.h: 16:         PORTBbits.RB0 = 0;
  2329  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  2330  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  2331  01A5  1006               	bcf	6,0	;volatile
  2332                           
  2333                           ;./servo.h: 17:         for (int j = 0; j < (2000 - time); j++)
  2334  01A6  01DF               	clrf	position1@j_218
  2335  01A7  01E0               	clrf	position1@j_218+1
  2336  01A8                     l2235:	
  2337  01A8  30D0               	movlw	208
  2338  01A9  00D0               	movwf	??_position1
  2339  01AA  3007               	movlw	7
  2340  01AB  00D1               	movwf	??_position1+1
  2341  01AC  0862               	movf	position1@time,w
  2342  01AD  0250               	subwf	??_position1,w
  2343  01AE  00D2               	movwf	??_position1+2
  2344  01AF  0863               	movf	position1@time+1,w
  2345  01B0  1C03               	skipc
  2346  01B1  0A63               	incf	position1@time+1,w
  2347  01B2  0251               	subwf	??_position1+1,w
  2348  01B3  00D3               	movwf	??_position1+3
  2349  01B4  0860               	movf	position1@j_218+1,w
  2350  01B5  3A80               	xorlw	128
  2351  01B6  00D4               	movwf	??_position1+4
  2352  01B7  0853               	movf	??_position1+3,w
  2353  01B8  3A80               	xorlw	128
  2354  01B9  0254               	subwf	??_position1+4,w
  2355  01BA  1D03               	skipz
  2356  01BB  29BE               	goto	u2985
  2357  01BC  0852               	movf	??_position1+2,w
  2358  01BD  025F               	subwf	position1@j_218,w
  2359  01BE                     u2985:	
  2360  01BE  1803               	btfsc	3,0
  2361  01BF  29CA               	goto	l2237
  2362                           
  2363                           ;./servo.h: 18:             _delay((unsigned long)((1)*(4000000/4000000.0)));
  2364  01C0  0000               	nop
  2365  01C1  3001               	movlw	1
  2366  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  2367  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  2368  01C4  07DF               	addwf	position1@j_218,f
  2369  01C5  1803               	skipnc
  2370  01C6  0AE0               	incf	position1@j_218+1,f
  2371  01C7  3000               	movlw	0
  2372  01C8  07E0               	addwf	position1@j_218+1,f
  2373  01C9  29A8               	goto	l2235
  2374  01CA                     l2237:	
  2375                           
  2376                           ;./servo.h: 19:     }
  2377  01CA  3001               	movlw	1
  2378  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  2379  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  2380  01CD  00D0               	movwf	??_position1
  2381  01CE  0850               	movf	??_position1,w
  2382  01CF  07E1               	addwf	position1@i,f
  2383  01D0  3032               	movlw	50
  2384  01D1  0261               	subwf	position1@i,w
  2385  01D2  1C03               	skipc
  2386  01D3  298A               	goto	l95
  2387                           
  2388                           ;./servo.h: 21:     return time;
  2389  01D4  0863               	movf	position1@time+1,w
  2390  01D5  00CF               	movwf	?_position1+1
  2391  01D6  0862               	movf	position1@time,w
  2392  01D7  00CE               	movwf	?_position1
  2393  01D8  0008               	return
  2394  01D9                     __end_of_position1:	
  2395                           
  2396                           	psect	text10
  2397  0E96                     __ptext10:	
  2398 ;; *************** function ___xxtofl *****************
  2399 ;; Defined at:
  2400 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;  sign            1    wreg     unsigned char 
  2403 ;;  val             4    0[COMMON] long 
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;  sign            1    8[COMMON] unsigned char 
  2406 ;;  arg             4   10[COMMON] unsigned long 
  2407 ;;  exp             1    9[COMMON] unsigned char 
  2408 ;; Return value:  Size  Location     Type
  2409 ;;                  4    0[COMMON] unsigned char 
  2410 ;; Registers used:
  2411 ;;		wreg, status,2, status,0
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2417 ;;      Params:         4       0       0       0       0
  2418 ;;      Locals:         6       0       0       0       0
  2419 ;;      Temps:          4       0       0       0       0
  2420 ;;      Totals:        14       0       0       0       0
  2421 ;;Total ram usage:       14 bytes
  2422 ;; Hardware stack levels used:    1
  2423 ;; This function calls:
  2424 ;;		Nothing
  2425 ;; This function is called by:
  2426 ;;		_position1
  2427 ;;		_position2
  2428 ;;		_main
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           
  2433                           ;psect for function ___xxtofl
  2434  0E96                     ___xxtofl:	
  2435                           
  2436                           ;incstack = 0
  2437                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2438                           ;___xxtofl@sign stored from wreg
  2439  0E96  00F8               	movwf	___xxtofl@sign
  2440  0E97  0878               	movf	___xxtofl@sign,w
  2441  0E98  1D03               	btfss	3,2
  2442  0E99  1FF3               	btfss	___xxtofl@val+3,7
  2443  0E9A  2EAB               	goto	l2121
  2444  0E9B  0970               	comf	___xxtofl@val,w
  2445  0E9C  00FA               	movwf	___xxtofl@arg
  2446  0E9D  0971               	comf	___xxtofl@val+1,w
  2447  0E9E  00FB               	movwf	___xxtofl@arg+1
  2448  0E9F  0972               	comf	___xxtofl@val+2,w
  2449  0EA0  00FC               	movwf	___xxtofl@arg+2
  2450  0EA1  0973               	comf	___xxtofl@val+3,w
  2451  0EA2  00FD               	movwf	___xxtofl@arg+3
  2452  0EA3  0AFA               	incf	___xxtofl@arg,f
  2453  0EA4  1903               	skipnz
  2454  0EA5  0AFB               	incf	___xxtofl@arg+1,f
  2455  0EA6  1903               	skipnz
  2456  0EA7  0AFC               	incf	___xxtofl@arg+2,f
  2457  0EA8  1903               	skipnz
  2458  0EA9  0AFD               	incf	___xxtofl@arg+3,f
  2459  0EAA  2EB3               	goto	l678
  2460  0EAB                     l2121:	
  2461  0EAB  0873               	movf	___xxtofl@val+3,w
  2462  0EAC  00FD               	movwf	___xxtofl@arg+3
  2463  0EAD  0872               	movf	___xxtofl@val+2,w
  2464  0EAE  00FC               	movwf	___xxtofl@arg+2
  2465  0EAF  0871               	movf	___xxtofl@val+1,w
  2466  0EB0  00FB               	movwf	___xxtofl@arg+1
  2467  0EB1  0870               	movf	___xxtofl@val,w
  2468  0EB2  00FA               	movwf	___xxtofl@arg
  2469  0EB3                     l678:	
  2470  0EB3  0873               	movf	___xxtofl@val+3,w
  2471  0EB4  0472               	iorwf	___xxtofl@val+2,w
  2472  0EB5  0471               	iorwf	___xxtofl@val+1,w
  2473  0EB6  0470               	iorwf	___xxtofl@val,w
  2474  0EB7  1D03               	skipz
  2475  0EB8  2EC2               	goto	l2127
  2476  0EB9  3000               	movlw	0
  2477  0EBA  00F3               	movwf	?___xxtofl+3
  2478  0EBB  3000               	movlw	0
  2479  0EBC  00F2               	movwf	?___xxtofl+2
  2480  0EBD  3000               	movlw	0
  2481  0EBE  00F1               	movwf	?___xxtofl+1
  2482  0EBF  3000               	movlw	0
  2483  0EC0  00F0               	movwf	?___xxtofl
  2484  0EC1  0008               	return
  2485  0EC2                     l2127:	
  2486  0EC2  3096               	movlw	150
  2487  0EC3  00F4               	movwf	??___xxtofl
  2488  0EC4  0874               	movf	??___xxtofl,w
  2489  0EC5  00F9               	movwf	___xxtofl@exp
  2490  0EC6                     l2131:	
  2491  0EC6  30FE               	movlw	254
  2492  0EC7  057D               	andwf	___xxtofl@arg+3,w
  2493  0EC8  1903               	btfsc	3,2
  2494  0EC9  2EF3               	goto	l684
  2495  0ECA  3001               	movlw	1
  2496  0ECB  00F4               	movwf	??___xxtofl
  2497  0ECC  0874               	movf	??___xxtofl,w
  2498  0ECD  07F9               	addwf	___xxtofl@exp,f
  2499  0ECE  3001               	movlw	1
  2500  0ECF                     u2835:	
  2501  0ECF  1003               	clrc
  2502  0ED0  0CFD               	rrf	___xxtofl@arg+3,f
  2503  0ED1  0CFC               	rrf	___xxtofl@arg+2,f
  2504  0ED2  0CFB               	rrf	___xxtofl@arg+1,f
  2505  0ED3  0CFA               	rrf	___xxtofl@arg,f
  2506  0ED4  3EFF               	addlw	-1
  2507  0ED5  1D03               	skipz
  2508  0ED6  2ECF               	goto	u2835
  2509  0ED7  2EC6               	goto	l2131
  2510  0ED8                     l2133:	
  2511  0ED8  3001               	movlw	1
  2512  0ED9  00F4               	movwf	??___xxtofl
  2513  0EDA  0874               	movf	??___xxtofl,w
  2514  0EDB  07F9               	addwf	___xxtofl@exp,f
  2515  0EDC  3001               	movlw	1
  2516  0EDD  07FA               	addwf	___xxtofl@arg,f
  2517  0EDE  3000               	movlw	0
  2518  0EDF  1803               	skipnc
  2519  0EE0  3001               	movlw	1
  2520  0EE1  07FB               	addwf	___xxtofl@arg+1,f
  2521  0EE2  3000               	movlw	0
  2522  0EE3  1803               	skipnc
  2523  0EE4  3001               	movlw	1
  2524  0EE5  07FC               	addwf	___xxtofl@arg+2,f
  2525  0EE6  3000               	movlw	0
  2526  0EE7  1803               	skipnc
  2527  0EE8  3001               	movlw	1
  2528  0EE9  07FD               	addwf	___xxtofl@arg+3,f
  2529  0EEA  3001               	movlw	1
  2530  0EEB                     u2855:	
  2531  0EEB  1003               	clrc
  2532  0EEC  0CFD               	rrf	___xxtofl@arg+3,f
  2533  0EED  0CFC               	rrf	___xxtofl@arg+2,f
  2534  0EEE  0CFB               	rrf	___xxtofl@arg+1,f
  2535  0EEF  0CFA               	rrf	___xxtofl@arg,f
  2536  0EF0  3EFF               	addlw	-1
  2537  0EF1  1D03               	skipz
  2538  0EF2  2EEB               	goto	u2855
  2539  0EF3                     l684:	
  2540  0EF3  30FF               	movlw	255
  2541  0EF4  057D               	andwf	___xxtofl@arg+3,w
  2542  0EF5  1903               	btfsc	3,2
  2543  0EF6  2F07               	goto	l2141
  2544  0EF7  2ED8               	goto	l2133
  2545  0EF8                     l2143:	
  2546  0EF8  3002               	movlw	2
  2547  0EF9  0279               	subwf	___xxtofl@exp,w
  2548  0EFA  1C03               	btfss	3,0
  2549  0EFB  2F09               	goto	l691
  2550  0EFC  3001               	movlw	1
  2551  0EFD  02F9               	subwf	___xxtofl@exp,f
  2552  0EFE  3001               	movlw	1
  2553  0EFF  00F4               	movwf	??___xxtofl
  2554  0F00                     u2875:	
  2555  0F00  1003               	clrc
  2556  0F01  0DFA               	rlf	___xxtofl@arg,f
  2557  0F02  0DFB               	rlf	___xxtofl@arg+1,f
  2558  0F03  0DFC               	rlf	___xxtofl@arg+2,f
  2559  0F04  0DFD               	rlf	___xxtofl@arg+3,f
  2560  0F05  0BF4               	decfsz	??___xxtofl,f
  2561  0F06  2F00               	goto	u2875
  2562  0F07                     l2141:	
  2563  0F07  1FFC               	btfss	___xxtofl@arg+2,7
  2564  0F08  2EF8               	goto	l2143
  2565  0F09                     l691:	
  2566  0F09  1879               	btfsc	___xxtofl@exp,0
  2567  0F0A  2F13               	goto	l692
  2568  0F0B  30FF               	movlw	255
  2569  0F0C  05FA               	andwf	___xxtofl@arg,f
  2570  0F0D  30FF               	movlw	255
  2571  0F0E  05FB               	andwf	___xxtofl@arg+1,f
  2572  0F0F  307F               	movlw	127
  2573  0F10  05FC               	andwf	___xxtofl@arg+2,f
  2574  0F11  30FF               	movlw	255
  2575  0F12  05FD               	andwf	___xxtofl@arg+3,f
  2576  0F13                     l692:	
  2577  0F13  1003               	clrc
  2578  0F14  0CF9               	rrf	___xxtofl@exp,f
  2579  0F15  0879               	movf	___xxtofl@exp,w
  2580  0F16  00F4               	movwf	??___xxtofl
  2581  0F17  01F5               	clrf	??___xxtofl+1
  2582  0F18  01F6               	clrf	??___xxtofl+2
  2583  0F19  01F7               	clrf	??___xxtofl+3
  2584  0F1A  3018               	movlw	24
  2585  0F1B                     u2915:	
  2586  0F1B  1003               	clrc
  2587  0F1C  0DF4               	rlf	??___xxtofl,f
  2588  0F1D  0DF5               	rlf	??___xxtofl+1,f
  2589  0F1E  0DF6               	rlf	??___xxtofl+2,f
  2590  0F1F  0DF7               	rlf	??___xxtofl+3,f
  2591  0F20  3EFF               	addlw	-1
  2592  0F21  1D03               	skipz
  2593  0F22  2F1B               	goto	u2915
  2594  0F23  0874               	movf	??___xxtofl,w
  2595  0F24  04FA               	iorwf	___xxtofl@arg,f
  2596  0F25  0875               	movf	??___xxtofl+1,w
  2597  0F26  04FB               	iorwf	___xxtofl@arg+1,f
  2598  0F27  0876               	movf	??___xxtofl+2,w
  2599  0F28  04FC               	iorwf	___xxtofl@arg+2,f
  2600  0F29  0877               	movf	??___xxtofl+3,w
  2601  0F2A  04FD               	iorwf	___xxtofl@arg+3,f
  2602  0F2B  0878               	movf	___xxtofl@sign,w
  2603  0F2C  1D03               	btfss	3,2
  2604  0F2D  1FF3               	btfss	___xxtofl@val+3,7
  2605  0F2E  2F30               	goto	l2155
  2606  0F2F  17FD               	bsf	___xxtofl@arg+3,7
  2607  0F30                     l2155:	
  2608  0F30  087D               	movf	___xxtofl@arg+3,w
  2609  0F31  00F3               	movwf	?___xxtofl+3
  2610  0F32  087C               	movf	___xxtofl@arg+2,w
  2611  0F33  00F2               	movwf	?___xxtofl+2
  2612  0F34  087B               	movf	___xxtofl@arg+1,w
  2613  0F35  00F1               	movwf	?___xxtofl+1
  2614  0F36  087A               	movf	___xxtofl@arg,w
  2615  0F37  00F0               	movwf	?___xxtofl
  2616  0F38  0008               	return
  2617  0F39                     __end_of___xxtofl:	
  2618                           
  2619                           	psect	text11
  2620  0E29                     __ptext11:	
  2621 ;; *************** function ___fltol *****************
  2622 ;; Defined at:
  2623 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;  f1              4   26[BANK0 ] unsigned char 
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;  exp1            1   36[BANK0 ] unsigned char 
  2628 ;;  sign1           1   35[BANK0 ] unsigned char 
  2629 ;; Return value:  Size  Location     Type
  2630 ;;                  4   26[BANK0 ] long 
  2631 ;; Registers used:
  2632 ;;		wreg, status,2, status,0
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2638 ;;      Params:         0       4       0       0       0
  2639 ;;      Locals:         0       2       0       0       0
  2640 ;;      Temps:          0       5       0       0       0
  2641 ;;      Totals:         0      11       0       0       0
  2642 ;;Total ram usage:       11 bytes
  2643 ;; Hardware stack levels used:    1
  2644 ;; This function calls:
  2645 ;;		Nothing
  2646 ;; This function is called by:
  2647 ;;		_position1
  2648 ;;		_position2
  2649 ;;		_main
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           
  2654                           ;psect for function ___fltol
  2655  0E29                     ___fltol:	
  2656                           
  2657                           ;incstack = 0
  2658                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2659  0E29  1003               	clrc
  2660  0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  2661  0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  2662  0E2C  0D3C               	rlf	___fltol@f1+2,w
  2663  0E2D  0D3D               	rlf	___fltol@f1+3,w
  2664  0E2E  00BE               	movwf	??___fltol
  2665  0E2F  083E               	movf	??___fltol,w
  2666  0E30  00C4               	movwf	___fltol@exp1
  2667  0E31  0844               	movf	___fltol@exp1,w
  2668  0E32  1D03               	btfss	3,2
  2669  0E33  2E3D               	goto	l1751
  2670  0E34                     l1747:	
  2671  0E34  3000               	movlw	0
  2672  0E35  00BD               	movwf	?___fltol+3
  2673  0E36  3000               	movlw	0
  2674  0E37  00BC               	movwf	?___fltol+2
  2675  0E38  3000               	movlw	0
  2676  0E39  00BB               	movwf	?___fltol+1
  2677  0E3A  3000               	movlw	0
  2678  0E3B  00BA               	movwf	?___fltol
  2679  0E3C  0008               	return
  2680  0E3D                     l1751:	
  2681  0E3D  083A               	movf	___fltol@f1,w
  2682  0E3E  00BE               	movwf	??___fltol
  2683  0E3F  083B               	movf	___fltol@f1+1,w
  2684  0E40  00BF               	movwf	??___fltol+1
  2685  0E41  083C               	movf	___fltol@f1+2,w
  2686  0E42  00C0               	movwf	??___fltol+2
  2687  0E43  083D               	movf	___fltol@f1+3,w
  2688  0E44  00C1               	movwf	??___fltol+3
  2689  0E45  301F               	movlw	31
  2690  0E46                     u1885:	
  2691  0E46  1003               	clrc
  2692  0E47  0CC1               	rrf	??___fltol+3,f
  2693  0E48  0CC0               	rrf	??___fltol+2,f
  2694  0E49  0CBF               	rrf	??___fltol+1,f
  2695  0E4A  0CBE               	rrf	??___fltol,f
  2696  0E4B  3EFF               	addlw	-1
  2697  0E4C  1D03               	skipz
  2698  0E4D  2E46               	goto	u1885
  2699  0E4E  083E               	movf	??___fltol,w
  2700  0E4F  00C2               	movwf	??___fltol+4
  2701  0E50  0842               	movf	??___fltol+4,w
  2702  0E51  00C3               	movwf	___fltol@sign1
  2703  0E52  17BC               	bsf	___fltol@f1+2,7
  2704  0E53  30FF               	movlw	255
  2705  0E54  05BA               	andwf	___fltol@f1,f
  2706  0E55  30FF               	movlw	255
  2707  0E56  05BB               	andwf	___fltol@f1+1,f
  2708  0E57  30FF               	movlw	255
  2709  0E58  05BC               	andwf	___fltol@f1+2,f
  2710  0E59  3000               	movlw	0
  2711  0E5A  05BD               	andwf	___fltol@f1+3,f
  2712  0E5B  3096               	movlw	150
  2713  0E5C  02C4               	subwf	___fltol@exp1,f
  2714  0E5D  1FC4               	btfss	___fltol@exp1,7
  2715  0E5E  2E74               	goto	l1769
  2716  0E5F  0844               	movf	___fltol@exp1,w
  2717  0E60  3A80               	xorlw	128
  2718  0E61  3E97               	addlw	151
  2719  0E62  1C03               	btfss	3,0
  2720  0E63  2E34               	goto	l1747
  2721  0E64                     l1767:	
  2722  0E64  3001               	movlw	1
  2723  0E65                     u1915:	
  2724  0E65  1003               	clrc
  2725  0E66  0CBD               	rrf	___fltol@f1+3,f
  2726  0E67  0CBC               	rrf	___fltol@f1+2,f
  2727  0E68  0CBB               	rrf	___fltol@f1+1,f
  2728  0E69  0CBA               	rrf	___fltol@f1,f
  2729  0E6A  3EFF               	addlw	-1
  2730  0E6B  1D03               	skipz
  2731  0E6C  2E65               	goto	u1915
  2732  0E6D  3001               	movlw	1
  2733  0E6E  00BE               	movwf	??___fltol
  2734  0E6F  083E               	movf	??___fltol,w
  2735  0E70  07C4               	addwf	___fltol@exp1,f
  2736  0E71  1903               	btfsc	3,2
  2737  0E72  2E87               	goto	l1777
  2738  0E73  2E64               	goto	l1767
  2739  0E74                     l1769:	
  2740  0E74  3020               	movlw	32
  2741  0E75  0244               	subwf	___fltol@exp1,w
  2742  0E76  1803               	btfsc	3,0
  2743  0E77  2E34               	goto	l1747
  2744  0E78                     l444:	
  2745  0E78  0844               	movf	___fltol@exp1,w
  2746  0E79  1903               	btfsc	3,2
  2747  0E7A  2E87               	goto	l1777
  2748  0E7B  3001               	movlw	1
  2749  0E7C  00BE               	movwf	??___fltol
  2750  0E7D                     u1945:	
  2751  0E7D  1003               	clrc
  2752  0E7E  0DBA               	rlf	___fltol@f1,f
  2753  0E7F  0DBB               	rlf	___fltol@f1+1,f
  2754  0E80  0DBC               	rlf	___fltol@f1+2,f
  2755  0E81  0DBD               	rlf	___fltol@f1+3,f
  2756  0E82  0BBE               	decfsz	??___fltol,f
  2757  0E83  2E7D               	goto	u1945
  2758  0E84  3001               	movlw	1
  2759  0E85  02C4               	subwf	___fltol@exp1,f
  2760  0E86  2E78               	goto	l444
  2761  0E87                     l1777:	
  2762  0E87  0843               	movf	___fltol@sign1,w
  2763  0E88  1903               	btfsc	3,2
  2764  0E89  0008               	return
  2765  0E8A  09BA               	comf	___fltol@f1,f
  2766  0E8B  09BB               	comf	___fltol@f1+1,f
  2767  0E8C  09BC               	comf	___fltol@f1+2,f
  2768  0E8D  09BD               	comf	___fltol@f1+3,f
  2769  0E8E  0ABA               	incf	___fltol@f1,f
  2770  0E8F  1903               	skipnz
  2771  0E90  0ABB               	incf	___fltol@f1+1,f
  2772  0E91  1903               	skipnz
  2773  0E92  0ABC               	incf	___fltol@f1+2,f
  2774  0E93  1903               	skipnz
  2775  0E94  0ABD               	incf	___fltol@f1+3,f
  2776  0E95  0008               	return
  2777  0E96                     __end_of___fltol:	
  2778                           
  2779                           	psect	text12
  2780  04E0                     __ptext12:	
  2781 ;; *************** function ___flmul *****************
  2782 ;; Defined at:
  2783 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;  b               4    0[BANK0 ] long 
  2786 ;;  a               4    4[BANK0 ] long 
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;  prod            4   20[BANK0 ] struct .
  2789 ;;  grs             4   14[BANK0 ] unsigned long 
  2790 ;;  temp            2   24[BANK0 ] struct .
  2791 ;;  bexp            1   19[BANK0 ] unsigned char 
  2792 ;;  aexp            1   18[BANK0 ] unsigned char 
  2793 ;;  sign            1   13[BANK0 ] unsigned char 
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  4    0[BANK0 ] unsigned char 
  2796 ;; Registers used:
  2797 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2803 ;;      Params:         0       8       0       0       0
  2804 ;;      Locals:         0      13       0       0       0
  2805 ;;      Temps:          0       5       0       0       0
  2806 ;;      Totals:         0      26       0       0       0
  2807 ;;Total ram usage:       26 bytes
  2808 ;; Hardware stack levels used:    1
  2809 ;; Hardware stack levels required when called:    1
  2810 ;; This function calls:
  2811 ;;		__Umul8_16
  2812 ;; This function is called by:
  2813 ;;		_position1
  2814 ;;		_position2
  2815 ;;		_main
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           
  2820                           ;psect for function ___flmul
  2821  04E0                     ___flmul:	
  2822                           
  2823                           ;incstack = 0
  2824                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2825  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  2826  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  2827  04E2  0823               	movf	___flmul@b+3,w
  2828  04E3  3980               	andlw	128
  2829  04E4  00A8               	movwf	??___flmul
  2830  04E5  0828               	movf	??___flmul,w
  2831  04E6  00AD               	movwf	___flmul@sign
  2832  04E7  0823               	movf	___flmul@b+3,w
  2833  04E8  00A8               	movwf	??___flmul
  2834  04E9  0728               	addwf	??___flmul,w
  2835  04EA  00A9               	movwf	??___flmul+1
  2836  04EB  0829               	movf	??___flmul+1,w
  2837  04EC  00B3               	movwf	___flmul@bexp
  2838  04ED  1BA2               	btfsc	___flmul@b+2,7
  2839  04EE  1433               	bsf	___flmul@bexp,0
  2840  04EF  0833               	movf	___flmul@bexp,w
  2841  04F0  1903               	btfsc	3,2
  2842  04F1  2CFF               	goto	l1991
  2843  04F2  0A33               	incf	___flmul@bexp,w
  2844  04F3  1D03               	btfss	3,2
  2845  04F4  2CFD               	goto	l1989
  2846  04F5  3000               	movlw	0
  2847  04F6  00A3               	movwf	___flmul@b+3
  2848  04F7  3000               	movlw	0
  2849  04F8  00A2               	movwf	___flmul@b+2
  2850  04F9  3000               	movlw	0
  2851  04FA  00A1               	movwf	___flmul@b+1
  2852  04FB  3000               	movlw	0
  2853  04FC  00A0               	movwf	___flmul@b
  2854  04FD                     l1989:	
  2855  04FD  17A2               	bsf	___flmul@b+2,7
  2856  04FE  2D07               	goto	l1993
  2857  04FF                     l1991:	
  2858  04FF  3000               	movlw	0
  2859  0500  00A3               	movwf	___flmul@b+3
  2860  0501  3000               	movlw	0
  2861  0502  00A2               	movwf	___flmul@b+2
  2862  0503  3000               	movlw	0
  2863  0504  00A1               	movwf	___flmul@b+1
  2864  0505  3000               	movlw	0
  2865  0506  00A0               	movwf	___flmul@b
  2866  0507                     l1993:	
  2867  0507  0827               	movf	___flmul@a+3,w
  2868  0508  3980               	andlw	128
  2869  0509  00A8               	movwf	??___flmul
  2870  050A  0828               	movf	??___flmul,w
  2871  050B  06AD               	xorwf	___flmul@sign,f
  2872  050C  0827               	movf	___flmul@a+3,w
  2873  050D  00A8               	movwf	??___flmul
  2874  050E  0728               	addwf	??___flmul,w
  2875  050F  00A9               	movwf	??___flmul+1
  2876  0510  0829               	movf	??___flmul+1,w
  2877  0511  00B2               	movwf	___flmul@aexp
  2878  0512  1BA6               	btfsc	___flmul@a+2,7
  2879  0513  1432               	bsf	___flmul@aexp,0
  2880  0514  0832               	movf	___flmul@aexp,w
  2881  0515  1903               	btfsc	3,2
  2882  0516  2D24               	goto	l2009
  2883  0517  0A32               	incf	___flmul@aexp,w
  2884  0518  1D03               	btfss	3,2
  2885  0519  2D22               	goto	l2007
  2886  051A  3000               	movlw	0
  2887  051B  00A7               	movwf	___flmul@a+3
  2888  051C  3000               	movlw	0
  2889  051D  00A6               	movwf	___flmul@a+2
  2890  051E  3000               	movlw	0
  2891  051F  00A5               	movwf	___flmul@a+1
  2892  0520  3000               	movlw	0
  2893  0521  00A4               	movwf	___flmul@a
  2894  0522                     l2007:	
  2895  0522  17A6               	bsf	___flmul@a+2,7
  2896  0523  2D2C               	goto	l2011
  2897  0524                     l2009:	
  2898  0524  3000               	movlw	0
  2899  0525  00A7               	movwf	___flmul@a+3
  2900  0526  3000               	movlw	0
  2901  0527  00A6               	movwf	___flmul@a+2
  2902  0528  3000               	movlw	0
  2903  0529  00A5               	movwf	___flmul@a+1
  2904  052A  3000               	movlw	0
  2905  052B  00A4               	movwf	___flmul@a
  2906  052C                     l2011:	
  2907  052C  0832               	movf	___flmul@aexp,w
  2908  052D  1D03               	btfss	3,2
  2909  052E  0833               	movf	___flmul@bexp,w
  2910  052F  1D03               	btfss	3,2
  2911  0530  2D3A               	goto	l2019
  2912  0531  3000               	movlw	0
  2913  0532  00A3               	movwf	?___flmul+3
  2914  0533  3000               	movlw	0
  2915  0534  00A2               	movwf	?___flmul+2
  2916  0535  3000               	movlw	0
  2917  0536  00A1               	movwf	?___flmul+1
  2918  0537  3000               	movlw	0
  2919  0538  00A0               	movwf	?___flmul
  2920  0539  0008               	return
  2921  053A                     l2019:	
  2922  053A  0820               	movf	___flmul@b,w
  2923  053B  00A8               	movwf	??___flmul
  2924  053C  0828               	movf	??___flmul,w
  2925  053D  00F0               	movwf	__Umul8_16@multiplicand
  2926  053E  0826               	movf	___flmul@a+2,w
  2927  053F  120A  158A  24C2  120A  118A  	fcall	__Umul8_16
  2928  0544  0871               	movf	?__Umul8_16+1,w
  2929  0545  1283               	bcf	3,5	;RP0=0, select bank0
  2930  0546  1303               	bcf	3,6	;RP1=0, select bank0
  2931  0547  00B9               	movwf	___flmul@temp+1
  2932  0548  0870               	movf	?__Umul8_16,w
  2933  0549  00B8               	movwf	___flmul@temp
  2934  054A  0838               	movf	___flmul@temp,w
  2935  054B  00A8               	movwf	??___flmul
  2936  054C  01A9               	clrf	??___flmul+1
  2937  054D  01AA               	clrf	??___flmul+2
  2938  054E  01AB               	clrf	??___flmul+3
  2939  054F  082B               	movf	??___flmul+3,w
  2940  0550  00B1               	movwf	___flmul@grs+3
  2941  0551  082A               	movf	??___flmul+2,w
  2942  0552  00B0               	movwf	___flmul@grs+2
  2943  0553  0829               	movf	??___flmul+1,w
  2944  0554  00AF               	movwf	___flmul@grs+1
  2945  0555  0828               	movf	??___flmul,w
  2946  0556  00AE               	movwf	___flmul@grs
  2947  0557  0839               	movf	___flmul@temp+1,w
  2948  0558  00A8               	movwf	??___flmul
  2949  0559  01A9               	clrf	??___flmul+1
  2950  055A  01AA               	clrf	??___flmul+2
  2951  055B  01AB               	clrf	??___flmul+3
  2952  055C  082B               	movf	??___flmul+3,w
  2953  055D  00B7               	movwf	___flmul@prod+3
  2954  055E  082A               	movf	??___flmul+2,w
  2955  055F  00B6               	movwf	___flmul@prod+2
  2956  0560  0829               	movf	??___flmul+1,w
  2957  0561  00B5               	movwf	___flmul@prod+1
  2958  0562  0828               	movf	??___flmul,w
  2959  0563  00B4               	movwf	___flmul@prod
  2960  0564  0821               	movf	___flmul@b+1,w
  2961  0565  00A8               	movwf	??___flmul
  2962  0566  0828               	movf	??___flmul,w
  2963  0567  00F0               	movwf	__Umul8_16@multiplicand
  2964  0568  0825               	movf	___flmul@a+1,w
  2965  0569  120A  158A  24C2  120A  118A  	fcall	__Umul8_16
  2966  056E  0871               	movf	?__Umul8_16+1,w
  2967  056F  1283               	bcf	3,5	;RP0=0, select bank0
  2968  0570  1303               	bcf	3,6	;RP1=0, select bank0
  2969  0571  00B9               	movwf	___flmul@temp+1
  2970  0572  0870               	movf	?__Umul8_16,w
  2971  0573  00B8               	movwf	___flmul@temp
  2972  0574  0838               	movf	___flmul@temp,w
  2973  0575  00A8               	movwf	??___flmul
  2974  0576  01A9               	clrf	??___flmul+1
  2975  0577  01AA               	clrf	??___flmul+2
  2976  0578  01AB               	clrf	??___flmul+3
  2977  0579  0828               	movf	??___flmul,w
  2978  057A  07AE               	addwf	___flmul@grs,f
  2979  057B  0829               	movf	??___flmul+1,w
  2980  057C  1103               	clrz
  2981  057D  1803               	skipnc
  2982  057E  3E01               	addlw	1
  2983  057F  1D03               	btfss	3,2
  2984  0580  07AF               	addwf	___flmul@grs+1,f
  2985  0581  082A               	movf	??___flmul+2,w
  2986  0582  1103               	clrz
  2987  0583  1803               	skipnc
  2988  0584  3E01               	addlw	1
  2989  0585  1D03               	btfss	3,2
  2990  0586  07B0               	addwf	___flmul@grs+2,f
  2991  0587  082B               	movf	??___flmul+3,w
  2992  0588  1103               	clrz
  2993  0589  1803               	skipnc
  2994  058A  3E01               	addlw	1
  2995  058B  1D03               	btfss	3,2
  2996  058C  07B1               	addwf	___flmul@grs+3,f
  2997  058D  0839               	movf	___flmul@temp+1,w
  2998  058E  00A8               	movwf	??___flmul
  2999  058F  01A9               	clrf	??___flmul+1
  3000  0590  01AA               	clrf	??___flmul+2
  3001  0591  01AB               	clrf	??___flmul+3
  3002  0592  0828               	movf	??___flmul,w
  3003  0593  07B4               	addwf	___flmul@prod,f
  3004  0594  0829               	movf	??___flmul+1,w
  3005  0595  1103               	clrz
  3006  0596  1803               	skipnc
  3007  0597  3E01               	addlw	1
  3008  0598  1D03               	btfss	3,2
  3009  0599  07B5               	addwf	___flmul@prod+1,f
  3010  059A  082A               	movf	??___flmul+2,w
  3011  059B  1103               	clrz
  3012  059C  1803               	skipnc
  3013  059D  3E01               	addlw	1
  3014  059E  1D03               	btfss	3,2
  3015  059F  07B6               	addwf	___flmul@prod+2,f
  3016  05A0  082B               	movf	??___flmul+3,w
  3017  05A1  1103               	clrz
  3018  05A2  1803               	skipnc
  3019  05A3  3E01               	addlw	1
  3020  05A4  1D03               	btfss	3,2
  3021  05A5  07B7               	addwf	___flmul@prod+3,f
  3022  05A6  0822               	movf	___flmul@b+2,w
  3023  05A7  00A8               	movwf	??___flmul
  3024  05A8  0828               	movf	??___flmul,w
  3025  05A9  00F0               	movwf	__Umul8_16@multiplicand
  3026  05AA  0824               	movf	___flmul@a,w
  3027  05AB  120A  158A  24C2  120A  118A  	fcall	__Umul8_16
  3028  05B0  0871               	movf	?__Umul8_16+1,w
  3029  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  3030  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  3031  05B3  00B9               	movwf	___flmul@temp+1
  3032  05B4  0870               	movf	?__Umul8_16,w
  3033  05B5  00B8               	movwf	___flmul@temp
  3034  05B6  0838               	movf	___flmul@temp,w
  3035  05B7  00A8               	movwf	??___flmul
  3036  05B8  01A9               	clrf	??___flmul+1
  3037  05B9  01AA               	clrf	??___flmul+2
  3038  05BA  01AB               	clrf	??___flmul+3
  3039  05BB  0828               	movf	??___flmul,w
  3040  05BC  07AE               	addwf	___flmul@grs,f
  3041  05BD  0829               	movf	??___flmul+1,w
  3042  05BE  1103               	clrz
  3043  05BF  1803               	skipnc
  3044  05C0  3E01               	addlw	1
  3045  05C1  1D03               	btfss	3,2
  3046  05C2  07AF               	addwf	___flmul@grs+1,f
  3047  05C3  082A               	movf	??___flmul+2,w
  3048  05C4  1103               	clrz
  3049  05C5  1803               	skipnc
  3050  05C6  3E01               	addlw	1
  3051  05C7  1D03               	btfss	3,2
  3052  05C8  07B0               	addwf	___flmul@grs+2,f
  3053  05C9  082B               	movf	??___flmul+3,w
  3054  05CA  1103               	clrz
  3055  05CB  1803               	skipnc
  3056  05CC  3E01               	addlw	1
  3057  05CD  1D03               	btfss	3,2
  3058  05CE  07B1               	addwf	___flmul@grs+3,f
  3059  05CF  0839               	movf	___flmul@temp+1,w
  3060  05D0  00A8               	movwf	??___flmul
  3061  05D1  01A9               	clrf	??___flmul+1
  3062  05D2  01AA               	clrf	??___flmul+2
  3063  05D3  01AB               	clrf	??___flmul+3
  3064  05D4  0828               	movf	??___flmul,w
  3065  05D5  07B4               	addwf	___flmul@prod,f
  3066  05D6  0829               	movf	??___flmul+1,w
  3067  05D7  1103               	clrz
  3068  05D8  1803               	skipnc
  3069  05D9  3E01               	addlw	1
  3070  05DA  1D03               	btfss	3,2
  3071  05DB  07B5               	addwf	___flmul@prod+1,f
  3072  05DC  082A               	movf	??___flmul+2,w
  3073  05DD  1103               	clrz
  3074  05DE  1803               	skipnc
  3075  05DF  3E01               	addlw	1
  3076  05E0  1D03               	btfss	3,2
  3077  05E1  07B6               	addwf	___flmul@prod+2,f
  3078  05E2  082B               	movf	??___flmul+3,w
  3079  05E3  1103               	clrz
  3080  05E4  1803               	skipnc
  3081  05E5  3E01               	addlw	1
  3082  05E6  1D03               	btfss	3,2
  3083  05E7  07B7               	addwf	___flmul@prod+3,f
  3084  05E8  3008               	movlw	8
  3085  05E9  00A8               	movwf	??___flmul
  3086  05EA                     u2555:	
  3087  05EA  1003               	clrc
  3088  05EB  0DAE               	rlf	___flmul@grs,f
  3089  05EC  0DAF               	rlf	___flmul@grs+1,f
  3090  05ED  0DB0               	rlf	___flmul@grs+2,f
  3091  05EE  0DB1               	rlf	___flmul@grs+3,f
  3092  05EF  0BA8               	decfsz	??___flmul,f
  3093  05F0  2DEA               	goto	u2555
  3094  05F1  0821               	movf	___flmul@b+1,w
  3095  05F2  00A8               	movwf	??___flmul
  3096  05F3  0828               	movf	??___flmul,w
  3097  05F4  00F0               	movwf	__Umul8_16@multiplicand
  3098  05F5  0824               	movf	___flmul@a,w
  3099  05F6  120A  158A  24C2  120A  118A  	fcall	__Umul8_16
  3100  05FB  0871               	movf	?__Umul8_16+1,w
  3101  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  3102  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  3103  05FE  00B9               	movwf	___flmul@temp+1
  3104  05FF  0870               	movf	?__Umul8_16,w
  3105  0600  00B8               	movwf	___flmul@temp
  3106  0601  0838               	movf	___flmul@temp,w
  3107  0602  00A8               	movwf	??___flmul
  3108  0603  0839               	movf	___flmul@temp+1,w
  3109  0604  00A9               	movwf	??___flmul+1
  3110  0605  01AA               	clrf	??___flmul+2
  3111  0606  01AB               	clrf	??___flmul+3
  3112  0607  0828               	movf	??___flmul,w
  3113  0608  07AE               	addwf	___flmul@grs,f
  3114  0609  0829               	movf	??___flmul+1,w
  3115  060A  1103               	clrz
  3116  060B  1803               	skipnc
  3117  060C  3E01               	addlw	1
  3118  060D  1D03               	btfss	3,2
  3119  060E  07AF               	addwf	___flmul@grs+1,f
  3120  060F  082A               	movf	??___flmul+2,w
  3121  0610  1103               	clrz
  3122  0611  1803               	skipnc
  3123  0612  3E01               	addlw	1
  3124  0613  1D03               	btfss	3,2
  3125  0614  07B0               	addwf	___flmul@grs+2,f
  3126  0615  082B               	movf	??___flmul+3,w
  3127  0616  1103               	clrz
  3128  0617  1803               	skipnc
  3129  0618  3E01               	addlw	1
  3130  0619  1D03               	btfss	3,2
  3131  061A  07B1               	addwf	___flmul@grs+3,f
  3132  061B  0820               	movf	___flmul@b,w
  3133  061C  00A8               	movwf	??___flmul
  3134  061D  0828               	movf	??___flmul,w
  3135  061E  00F0               	movwf	__Umul8_16@multiplicand
  3136  061F  0825               	movf	___flmul@a+1,w
  3137  0620  120A  158A  24C2  120A  118A  	fcall	__Umul8_16
  3138  0625  0871               	movf	?__Umul8_16+1,w
  3139  0626  1283               	bcf	3,5	;RP0=0, select bank0
  3140  0627  1303               	bcf	3,6	;RP1=0, select bank0
  3141  0628  00B9               	movwf	___flmul@temp+1
  3142  0629  0870               	movf	?__Umul8_16,w
  3143  062A  00B8               	movwf	___flmul@temp
  3144  062B  0838               	movf	___flmul@temp,w
  3145  062C  00A8               	movwf	??___flmul
  3146  062D  0839               	movf	___flmul@temp+1,w
  3147  062E  00A9               	movwf	??___flmul+1
  3148  062F  01AA               	clrf	??___flmul+2
  3149  0630  01AB               	clrf	??___flmul+3
  3150  0631  0828               	movf	??___flmul,w
  3151  0632  07AE               	addwf	___flmul@grs,f
  3152  0633  0829               	movf	??___flmul+1,w
  3153  0634  1103               	clrz
  3154  0635  1803               	skipnc
  3155  0636  3E01               	addlw	1
  3156  0637  1D03               	btfss	3,2
  3157  0638  07AF               	addwf	___flmul@grs+1,f
  3158  0639  082A               	movf	??___flmul+2,w
  3159  063A  1103               	clrz
  3160  063B  1803               	skipnc
  3161  063C  3E01               	addlw	1
  3162  063D  1D03               	btfss	3,2
  3163  063E  07B0               	addwf	___flmul@grs+2,f
  3164  063F  082B               	movf	??___flmul+3,w
  3165  0640  1103               	clrz
  3166  0641  1803               	skipnc
  3167  0642  3E01               	addlw	1
  3168  0643  1D03               	btfss	3,2
  3169  0644  07B1               	addwf	___flmul@grs+3,f
  3170  0645  3008               	movlw	8
  3171  0646  00A8               	movwf	??___flmul
  3172  0647                     u2585:	
  3173  0647  1003               	clrc
  3174  0648  0DAE               	rlf	___flmul@grs,f
  3175  0649  0DAF               	rlf	___flmul@grs+1,f
  3176  064A  0DB0               	rlf	___flmul@grs+2,f
  3177  064B  0DB1               	rlf	___flmul@grs+3,f
  3178  064C  0BA8               	decfsz	??___flmul,f
  3179  064D  2E47               	goto	u2585
  3180  064E  0820               	movf	___flmul@b,w
  3181  064F  00A8               	movwf	??___flmul
  3182  0650  0828               	movf	??___flmul,w
  3183  0651  00F0               	movwf	__Umul8_16@multiplicand
  3184  0652  0824               	movf	___flmul@a,w
  3185  0653  120A  158A  24C2  120A  118A  	fcall	__Umul8_16
  3186  0658  0871               	movf	?__Umul8_16+1,w
  3187  0659  1283               	bcf	3,5	;RP0=0, select bank0
  3188  065A  1303               	bcf	3,6	;RP1=0, select bank0
  3189  065B  00B9               	movwf	___flmul@temp+1
  3190  065C  0870               	movf	?__Umul8_16,w
  3191  065D  00B8               	movwf	___flmul@temp
  3192  065E  0838               	movf	___flmul@temp,w
  3193  065F  00A8               	movwf	??___flmul
  3194  0660  0839               	movf	___flmul@temp+1,w
  3195  0661  00A9               	movwf	??___flmul+1
  3196  0662  01AA               	clrf	??___flmul+2
  3197  0663  01AB               	clrf	??___flmul+3
  3198  0664  0828               	movf	??___flmul,w
  3199  0665  07AE               	addwf	___flmul@grs,f
  3200  0666  0829               	movf	??___flmul+1,w
  3201  0667  1103               	clrz
  3202  0668  1803               	skipnc
  3203  0669  3E01               	addlw	1
  3204  066A  1D03               	btfss	3,2
  3205  066B  07AF               	addwf	___flmul@grs+1,f
  3206  066C  082A               	movf	??___flmul+2,w
  3207  066D  1103               	clrz
  3208  066E  1803               	skipnc
  3209  066F  3E01               	addlw	1
  3210  0670  1D03               	btfss	3,2
  3211  0671  07B0               	addwf	___flmul@grs+2,f
  3212  0672  082B               	movf	??___flmul+3,w
  3213  0673  1103               	clrz
  3214  0674  1803               	skipnc
  3215  0675  3E01               	addlw	1
  3216  0676  1D03               	btfss	3,2
  3217  0677  07B1               	addwf	___flmul@grs+3,f
  3218  0678  0821               	movf	___flmul@b+1,w
  3219  0679  00A8               	movwf	??___flmul
  3220  067A  0828               	movf	??___flmul,w
  3221  067B  00F0               	movwf	__Umul8_16@multiplicand
  3222  067C  0826               	movf	___flmul@a+2,w
  3223  067D  120A  158A  24C2  120A  118A  	fcall	__Umul8_16
  3224  0682  0871               	movf	?__Umul8_16+1,w
  3225  0683  1283               	bcf	3,5	;RP0=0, select bank0
  3226  0684  1303               	bcf	3,6	;RP1=0, select bank0
  3227  0685  00B9               	movwf	___flmul@temp+1
  3228  0686  0870               	movf	?__Umul8_16,w
  3229  0687  00B8               	movwf	___flmul@temp
  3230  0688  0838               	movf	___flmul@temp,w
  3231  0689  00A8               	movwf	??___flmul
  3232  068A  0839               	movf	___flmul@temp+1,w
  3233  068B  00A9               	movwf	??___flmul+1
  3234  068C  01AA               	clrf	??___flmul+2
  3235  068D  01AB               	clrf	??___flmul+3
  3236  068E  0828               	movf	??___flmul,w
  3237  068F  07B4               	addwf	___flmul@prod,f
  3238  0690  0829               	movf	??___flmul+1,w
  3239  0691  1103               	clrz
  3240  0692  1803               	skipnc
  3241  0693  3E01               	addlw	1
  3242  0694  1D03               	btfss	3,2
  3243  0695  07B5               	addwf	___flmul@prod+1,f
  3244  0696  082A               	movf	??___flmul+2,w
  3245  0697  1103               	clrz
  3246  0698  1803               	skipnc
  3247  0699  3E01               	addlw	1
  3248  069A  1D03               	btfss	3,2
  3249  069B  07B6               	addwf	___flmul@prod+2,f
  3250  069C  082B               	movf	??___flmul+3,w
  3251  069D  1103               	clrz
  3252  069E  1803               	skipnc
  3253  069F  3E01               	addlw	1
  3254  06A0  1D03               	btfss	3,2
  3255  06A1  07B7               	addwf	___flmul@prod+3,f
  3256  06A2  0822               	movf	___flmul@b+2,w
  3257  06A3  00A8               	movwf	??___flmul
  3258  06A4  0828               	movf	??___flmul,w
  3259  06A5  00F0               	movwf	__Umul8_16@multiplicand
  3260  06A6  0825               	movf	___flmul@a+1,w
  3261  06A7  120A  158A  24C2  120A  118A  	fcall	__Umul8_16
  3262  06AC  0871               	movf	?__Umul8_16+1,w
  3263  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  3264  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  3265  06AF  00B9               	movwf	___flmul@temp+1
  3266  06B0  0870               	movf	?__Umul8_16,w
  3267  06B1  00B8               	movwf	___flmul@temp
  3268  06B2  0838               	movf	___flmul@temp,w
  3269  06B3  00A8               	movwf	??___flmul
  3270  06B4  0839               	movf	___flmul@temp+1,w
  3271  06B5  00A9               	movwf	??___flmul+1
  3272  06B6  01AA               	clrf	??___flmul+2
  3273  06B7  01AB               	clrf	??___flmul+3
  3274  06B8  0828               	movf	??___flmul,w
  3275  06B9  07B4               	addwf	___flmul@prod,f
  3276  06BA  0829               	movf	??___flmul+1,w
  3277  06BB  1103               	clrz
  3278  06BC  1803               	skipnc
  3279  06BD  3E01               	addlw	1
  3280  06BE  1D03               	btfss	3,2
  3281  06BF  07B5               	addwf	___flmul@prod+1,f
  3282  06C0  082A               	movf	??___flmul+2,w
  3283  06C1  1103               	clrz
  3284  06C2  1803               	skipnc
  3285  06C3  3E01               	addlw	1
  3286  06C4  1D03               	btfss	3,2
  3287  06C5  07B6               	addwf	___flmul@prod+2,f
  3288  06C6  082B               	movf	??___flmul+3,w
  3289  06C7  1103               	clrz
  3290  06C8  1803               	skipnc
  3291  06C9  3E01               	addlw	1
  3292  06CA  1D03               	btfss	3,2
  3293  06CB  07B7               	addwf	___flmul@prod+3,f
  3294  06CC  0822               	movf	___flmul@b+2,w
  3295  06CD  00A8               	movwf	??___flmul
  3296  06CE  0828               	movf	??___flmul,w
  3297  06CF  00F0               	movwf	__Umul8_16@multiplicand
  3298  06D0  0826               	movf	___flmul@a+2,w
  3299  06D1  120A  158A  24C2  120A  118A  	fcall	__Umul8_16
  3300  06D6  0871               	movf	?__Umul8_16+1,w
  3301  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  3302  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  3303  06D9  00B9               	movwf	___flmul@temp+1
  3304  06DA  0870               	movf	?__Umul8_16,w
  3305  06DB  00B8               	movwf	___flmul@temp
  3306  06DC  0838               	movf	___flmul@temp,w
  3307  06DD  00A8               	movwf	??___flmul
  3308  06DE  0839               	movf	___flmul@temp+1,w
  3309  06DF  00A9               	movwf	??___flmul+1
  3310  06E0  01AA               	clrf	??___flmul+2
  3311  06E1  01AB               	clrf	??___flmul+3
  3312  06E2  3008               	movlw	8
  3313  06E3                     u2625:	
  3314  06E3  1003               	clrc
  3315  06E4  0DA8               	rlf	??___flmul,f
  3316  06E5  0DA9               	rlf	??___flmul+1,f
  3317  06E6  0DAA               	rlf	??___flmul+2,f
  3318  06E7  0DAB               	rlf	??___flmul+3,f
  3319  06E8  3EFF               	addlw	-1
  3320  06E9  1D03               	skipz
  3321  06EA  2EE3               	goto	u2625
  3322  06EB  0828               	movf	??___flmul,w
  3323  06EC  07B4               	addwf	___flmul@prod,f
  3324  06ED  0829               	movf	??___flmul+1,w
  3325  06EE  1103               	clrz
  3326  06EF  1803               	skipnc
  3327  06F0  3E01               	addlw	1
  3328  06F1  1D03               	btfss	3,2
  3329  06F2  07B5               	addwf	___flmul@prod+1,f
  3330  06F3  082A               	movf	??___flmul+2,w
  3331  06F4  1103               	clrz
  3332  06F5  1803               	skipnc
  3333  06F6  3E01               	addlw	1
  3334  06F7  1D03               	btfss	3,2
  3335  06F8  07B6               	addwf	___flmul@prod+2,f
  3336  06F9  082B               	movf	??___flmul+3,w
  3337  06FA  1103               	clrz
  3338  06FB  1803               	skipnc
  3339  06FC  3E01               	addlw	1
  3340  06FD  1D03               	btfss	3,2
  3341  06FE  07B7               	addwf	___flmul@prod+3,f
  3342  06FF  082E               	movf	___flmul@grs,w
  3343  0700  00A8               	movwf	??___flmul
  3344  0701  082F               	movf	___flmul@grs+1,w
  3345  0702  00A9               	movwf	??___flmul+1
  3346  0703  0830               	movf	___flmul@grs+2,w
  3347  0704  00AA               	movwf	??___flmul+2
  3348  0705  0831               	movf	___flmul@grs+3,w
  3349  0706  00AB               	movwf	??___flmul+3
  3350  0707  3018               	movlw	24
  3351  0708                     u2645:	
  3352  0708  1003               	clrc
  3353  0709  0CAB               	rrf	??___flmul+3,f
  3354  070A  0CAA               	rrf	??___flmul+2,f
  3355  070B  0CA9               	rrf	??___flmul+1,f
  3356  070C  0CA8               	rrf	??___flmul,f
  3357  070D  3EFF               	addlw	-1
  3358  070E  1D03               	skipz
  3359  070F  2F08               	goto	u2645
  3360  0710  0828               	movf	??___flmul,w
  3361  0711  07B4               	addwf	___flmul@prod,f
  3362  0712  0829               	movf	??___flmul+1,w
  3363  0713  1103               	clrz
  3364  0714  1803               	skipnc
  3365  0715  3E01               	addlw	1
  3366  0716  1D03               	btfss	3,2
  3367  0717  07B5               	addwf	___flmul@prod+1,f
  3368  0718  082A               	movf	??___flmul+2,w
  3369  0719  1103               	clrz
  3370  071A  1803               	skipnc
  3371  071B  3E01               	addlw	1
  3372  071C  1D03               	btfss	3,2
  3373  071D  07B6               	addwf	___flmul@prod+2,f
  3374  071E  082B               	movf	??___flmul+3,w
  3375  071F  1103               	clrz
  3376  0720  1803               	skipnc
  3377  0721  3E01               	addlw	1
  3378  0722  1D03               	btfss	3,2
  3379  0723  07B7               	addwf	___flmul@prod+3,f
  3380  0724  3008               	movlw	8
  3381  0725  00A8               	movwf	??___flmul
  3382  0726                     u2665:	
  3383  0726  1003               	clrc
  3384  0727  0DAE               	rlf	___flmul@grs,f
  3385  0728  0DAF               	rlf	___flmul@grs+1,f
  3386  0729  0DB0               	rlf	___flmul@grs+2,f
  3387  072A  0DB1               	rlf	___flmul@grs+3,f
  3388  072B  0BA8               	decfsz	??___flmul,f
  3389  072C  2F26               	goto	u2665
  3390  072D  0833               	movf	___flmul@bexp,w
  3391  072E  0732               	addwf	___flmul@aexp,w
  3392  072F  00A8               	movwf	??___flmul
  3393  0730  01A9               	clrf	??___flmul+1
  3394  0731  0DA9               	rlf	??___flmul+1,f
  3395  0732  0828               	movf	??___flmul,w
  3396  0733  3E82               	addlw	130
  3397  0734  00B8               	movwf	___flmul@temp
  3398  0735  0829               	movf	??___flmul+1,w
  3399  0736  1803               	skipnc
  3400  0737  3E01               	addlw	1
  3401  0738  3EFF               	addlw	255
  3402  0739  00B9               	movwf	___flmul@temp+1
  3403  073A                     l2071:	
  3404  073A  1BB6               	btfsc	___flmul@prod+2,7
  3405  073B  2F57               	goto	l2073
  3406  073C  3001               	movlw	1
  3407  073D  00A8               	movwf	??___flmul
  3408  073E                     u2675:	
  3409  073E  1003               	clrc
  3410  073F  0DB4               	rlf	___flmul@prod,f
  3411  0740  0DB5               	rlf	___flmul@prod+1,f
  3412  0741  0DB6               	rlf	___flmul@prod+2,f
  3413  0742  0DB7               	rlf	___flmul@prod+3,f
  3414  0743  0BA8               	decfsz	??___flmul,f
  3415  0744  2F3E               	goto	u2675
  3416  0745  1BB1               	btfsc	___flmul@grs+3,7
  3417  0746  1434               	bsf	___flmul@prod,0
  3418  0747  3001               	movlw	1
  3419  0748  00A8               	movwf	??___flmul
  3420  0749                     u2695:	
  3421  0749  1003               	clrc
  3422  074A  0DAE               	rlf	___flmul@grs,f
  3423  074B  0DAF               	rlf	___flmul@grs+1,f
  3424  074C  0DB0               	rlf	___flmul@grs+2,f
  3425  074D  0DB1               	rlf	___flmul@grs+3,f
  3426  074E  0BA8               	decfsz	??___flmul,f
  3427  074F  2F49               	goto	u2695
  3428  0750  30FF               	movlw	255
  3429  0751  07B8               	addwf	___flmul@temp,f
  3430  0752  1803               	skipnc
  3431  0753  0AB9               	incf	___flmul@temp+1,f
  3432  0754  30FF               	movlw	255
  3433  0755  07B9               	addwf	___flmul@temp+1,f
  3434  0756  2F3A               	goto	l2071
  3435  0757                     l2073:	
  3436  0757  01B2               	clrf	___flmul@aexp
  3437  0758  1FB1               	btfss	___flmul@grs+3,7
  3438  0759  2F70               	goto	l2083
  3439  075A  30FF               	movlw	255
  3440  075B  052E               	andwf	___flmul@grs,w
  3441  075C  00A8               	movwf	??___flmul
  3442  075D  30FF               	movlw	255
  3443  075E  052F               	andwf	___flmul@grs+1,w
  3444  075F  00A9               	movwf	??___flmul+1
  3445  0760  30FF               	movlw	255
  3446  0761  0530               	andwf	___flmul@grs+2,w
  3447  0762  00AA               	movwf	??___flmul+2
  3448  0763  307F               	movlw	127
  3449  0764  0531               	andwf	___flmul@grs+3,w
  3450  0765  00AB               	movwf	??___flmul+3
  3451  0766  082B               	movf	??___flmul+3,w
  3452  0767  042A               	iorwf	??___flmul+2,w
  3453  0768  0429               	iorwf	??___flmul+1,w
  3454  0769  0428               	iorwf	??___flmul,w
  3455  076A  1903               	skipnz
  3456  076B  1834               	btfsc	___flmul@prod,0
  3457  076C  2F6E               	goto	l2079
  3458  076D  2F70               	goto	l2083
  3459  076E                     l2079:	
  3460  076E  01B2               	clrf	___flmul@aexp
  3461  076F  0AB2               	incf	___flmul@aexp,f
  3462  0770                     l2083:	
  3463  0770  0832               	movf	___flmul@aexp,w
  3464  0771  1903               	btfsc	3,2
  3465  0772  2FA2               	goto	l2093
  3466  0773  3001               	movlw	1
  3467  0774  07B4               	addwf	___flmul@prod,f
  3468  0775  3000               	movlw	0
  3469  0776  1803               	skipnc
  3470  0777  3001               	movlw	1
  3471  0778  07B5               	addwf	___flmul@prod+1,f
  3472  0779  3000               	movlw	0
  3473  077A  1803               	skipnc
  3474  077B  3001               	movlw	1
  3475  077C  07B6               	addwf	___flmul@prod+2,f
  3476  077D  3000               	movlw	0
  3477  077E  1803               	skipnc
  3478  077F  3001               	movlw	1
  3479  0780  07B7               	addwf	___flmul@prod+3,f
  3480  0781  1C37               	btfss	___flmul@prod+3,0
  3481  0782  2FA2               	goto	l2093
  3482  0783  0834               	movf	___flmul@prod,w
  3483  0784  00A8               	movwf	??___flmul
  3484  0785  0835               	movf	___flmul@prod+1,w
  3485  0786  00A9               	movwf	??___flmul+1
  3486  0787  0836               	movf	___flmul@prod+2,w
  3487  0788  00AA               	movwf	??___flmul+2
  3488  0789  0837               	movf	___flmul@prod+3,w
  3489  078A  00AB               	movwf	??___flmul+3
  3490  078B  3001               	movlw	1
  3491  078C  00AC               	movwf	??___flmul+4
  3492  078D                     u2765:	
  3493  078D  0D2B               	rlf	??___flmul+3,w
  3494  078E  0CAB               	rrf	??___flmul+3,f
  3495  078F  0CAA               	rrf	??___flmul+2,f
  3496  0790  0CA9               	rrf	??___flmul+1,f
  3497  0791  0CA8               	rrf	??___flmul,f
  3498  0792  0BAC               	decfsz	??___flmul+4,f
  3499  0793  2F8D               	goto	u2765
  3500  0794  082B               	movf	??___flmul+3,w
  3501  0795  00B7               	movwf	___flmul@prod+3
  3502  0796  082A               	movf	??___flmul+2,w
  3503  0797  00B6               	movwf	___flmul@prod+2
  3504  0798  0829               	movf	??___flmul+1,w
  3505  0799  00B5               	movwf	___flmul@prod+1
  3506  079A  0828               	movf	??___flmul,w
  3507  079B  00B4               	movwf	___flmul@prod
  3508  079C  3001               	movlw	1
  3509  079D  07B8               	addwf	___flmul@temp,f
  3510  079E  1803               	skipnc
  3511  079F  0AB9               	incf	___flmul@temp+1,f
  3512  07A0  3000               	movlw	0
  3513  07A1  07B9               	addwf	___flmul@temp+1,f
  3514  07A2                     l2093:	
  3515  07A2  0839               	movf	___flmul@temp+1,w
  3516  07A3  3A80               	xorlw	128
  3517  07A4  00FF               	movwf	127
  3518  07A5  3080               	movlw	128
  3519  07A6  027F               	subwf	127,w
  3520  07A7  1D03               	skipz
  3521  07A8  2FAB               	goto	u2775
  3522  07A9  30FF               	movlw	255
  3523  07AA  0238               	subwf	___flmul@temp,w
  3524  07AB                     u2775:	
  3525  07AB  1C03               	skipc
  3526  07AC  2FB8               	goto	l2097
  3527  07AD  307F               	movlw	127
  3528  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  3529  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  3530  07B0  00B7               	movwf	___flmul@prod+3
  3531  07B1  3080               	movlw	128
  3532  07B2  00B6               	movwf	___flmul@prod+2
  3533  07B3  3000               	movlw	0
  3534  07B4  00B5               	movwf	___flmul@prod+1
  3535  07B5  3000               	movlw	0
  3536  07B6  00B4               	movwf	___flmul@prod
  3537  07B7  2FE8               	goto	l652
  3538  07B8                     l2097:	
  3539  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  3540  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  3541  07BA  0839               	movf	___flmul@temp+1,w
  3542  07BB  3A80               	xorlw	128
  3543  07BC  00FF               	movwf	127
  3544  07BD  3080               	movlw	128
  3545  07BE  027F               	subwf	127,w
  3546  07BF  1D03               	skipz
  3547  07C0  2FC3               	goto	u2785
  3548  07C1  3001               	movlw	1
  3549  07C2  0238               	subwf	___flmul@temp,w
  3550  07C3                     u2785:	
  3551  07C3  1803               	skipnc
  3552  07C4  2FD1               	goto	l2103
  3553  07C5  3000               	movlw	0
  3554  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  3555  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  3556  07C8  00B7               	movwf	___flmul@prod+3
  3557  07C9  3000               	movlw	0
  3558  07CA  00B6               	movwf	___flmul@prod+2
  3559  07CB  3000               	movlw	0
  3560  07CC  00B5               	movwf	___flmul@prod+1
  3561  07CD  3000               	movlw	0
  3562  07CE  00B4               	movwf	___flmul@prod
  3563  07CF  01AD               	clrf	___flmul@sign
  3564  07D0  2FE8               	goto	l652
  3565  07D1                     l2103:	
  3566  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  3567  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  3568  07D3  0838               	movf	___flmul@temp,w
  3569  07D4  00A8               	movwf	??___flmul
  3570  07D5  0828               	movf	??___flmul,w
  3571  07D6  00B3               	movwf	___flmul@bexp
  3572  07D7  30FF               	movlw	255
  3573  07D8  05B4               	andwf	___flmul@prod,f
  3574  07D9  30FF               	movlw	255
  3575  07DA  05B5               	andwf	___flmul@prod+1,f
  3576  07DB  307F               	movlw	127
  3577  07DC  05B6               	andwf	___flmul@prod+2,f
  3578  07DD  3000               	movlw	0
  3579  07DE  05B7               	andwf	___flmul@prod+3,f
  3580  07DF  1833               	btfsc	___flmul@bexp,0
  3581  07E0  17B6               	bsf	___flmul@prod+2,7
  3582  07E1  0833               	movf	___flmul@bexp,w
  3583  07E2  00A8               	movwf	??___flmul
  3584  07E3  1003               	clrc
  3585  07E4  0C28               	rrf	??___flmul,w
  3586  07E5  00A9               	movwf	??___flmul+1
  3587  07E6  0829               	movf	??___flmul+1,w
  3588  07E7  00B7               	movwf	___flmul@prod+3
  3589  07E8                     l652:	
  3590  07E8  082D               	movf	___flmul@sign,w
  3591  07E9  00A8               	movwf	??___flmul
  3592  07EA  0828               	movf	??___flmul,w
  3593  07EB  04B7               	iorwf	___flmul@prod+3,f
  3594  07EC  0837               	movf	___flmul@prod+3,w
  3595  07ED  00A3               	movwf	?___flmul+3
  3596  07EE  0836               	movf	___flmul@prod+2,w
  3597  07EF  00A2               	movwf	?___flmul+2
  3598  07F0  0835               	movf	___flmul@prod+1,w
  3599  07F1  00A1               	movwf	?___flmul+1
  3600  07F2  0834               	movf	___flmul@prod,w
  3601  07F3  00A0               	movwf	?___flmul
  3602  07F4  0008               	return
  3603  07F5                     __end_of___flmul:	
  3604                           
  3605                           	psect	text13
  3606  0CC2                     __ptext13:	
  3607 ;; *************** function __Umul8_16 *****************
  3608 ;; Defined at:
  3609 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;  multiplier      1    wreg     unsigned char 
  3612 ;;  multiplicand    1    0[COMMON] unsigned char 
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;  multiplier      1    8[COMMON] unsigned char 
  3615 ;;  word_mpld       2    6[COMMON] unsigned int 
  3616 ;;  product         2    4[COMMON] unsigned int 
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  2    0[COMMON] unsigned int 
  3619 ;; Registers used:
  3620 ;;		wreg, status,2, status,0
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3626 ;;      Params:         2       0       0       0       0
  3627 ;;      Locals:         5       0       0       0       0
  3628 ;;      Temps:          2       0       0       0       0
  3629 ;;      Totals:         9       0       0       0       0
  3630 ;;Total ram usage:        9 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; This function calls:
  3633 ;;		Nothing
  3634 ;; This function is called by:
  3635 ;;		___flmul
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           
  3640                           ;psect for function __Umul8_16
  3641  0CC2                     __Umul8_16:	
  3642                           
  3643                           ;incstack = 0
  3644                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3645                           ;__Umul8_16@multiplier stored from wreg
  3646  0CC2  00F8               	movwf	__Umul8_16@multiplier
  3647  0CC3  01F4               	clrf	__Umul8_16@product
  3648  0CC4  01F5               	clrf	__Umul8_16@product+1
  3649  0CC5  0870               	movf	__Umul8_16@multiplicand,w
  3650  0CC6  00F2               	movwf	??__Umul8_16
  3651  0CC7  01F3               	clrf	??__Umul8_16+1
  3652  0CC8  0872               	movf	??__Umul8_16,w
  3653  0CC9  00F6               	movwf	__Umul8_16@word_mpld
  3654  0CCA  0873               	movf	??__Umul8_16+1,w
  3655  0CCB  00F7               	movwf	__Umul8_16@word_mpld+1
  3656  0CCC                     l1645:	
  3657  0CCC  1C78               	btfss	__Umul8_16@multiplier,0
  3658  0CCD  2CD4               	goto	l697
  3659  0CCE  0876               	movf	__Umul8_16@word_mpld,w
  3660  0CCF  07F4               	addwf	__Umul8_16@product,f
  3661  0CD0  1803               	skipnc
  3662  0CD1  0AF5               	incf	__Umul8_16@product+1,f
  3663  0CD2  0877               	movf	__Umul8_16@word_mpld+1,w
  3664  0CD3  07F5               	addwf	__Umul8_16@product+1,f
  3665  0CD4                     l697:	
  3666  0CD4  3001               	movlw	1
  3667  0CD5                     u1735:	
  3668  0CD5  1003               	clrc
  3669  0CD6  0DF6               	rlf	__Umul8_16@word_mpld,f
  3670  0CD7  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  3671  0CD8  3EFF               	addlw	-1
  3672  0CD9  1D03               	skipz
  3673  0CDA  2CD5               	goto	u1735
  3674  0CDB  1003               	clrc
  3675  0CDC  0CF8               	rrf	__Umul8_16@multiplier,f
  3676  0CDD  0878               	movf	__Umul8_16@multiplier,w
  3677  0CDE  1D03               	btfss	3,2
  3678  0CDF  2CCC               	goto	l1645
  3679  0CE0  0875               	movf	__Umul8_16@product+1,w
  3680  0CE1  00F1               	movwf	?__Umul8_16+1
  3681  0CE2  0874               	movf	__Umul8_16@product,w
  3682  0CE3  00F0               	movwf	?__Umul8_16
  3683  0CE4  0008               	return
  3684  0CE5                     __end_of__Umul8_16:	
  3685                           
  3686                           	psect	text14
  3687  02B1                     __ptext14:	
  3688 ;; *************** function ___fladd *****************
  3689 ;; Defined at:
  3690 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;  b               4   26[BANK0 ] unsigned int 
  3693 ;;  a               4   30[BANK0 ] unsigned int 
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;  grs             1   45[BANK0 ] unsigned char 
  3696 ;;  bexp            1   44[BANK0 ] unsigned char 
  3697 ;;  aexp            1   43[BANK0 ] unsigned char 
  3698 ;;  signs           1   42[BANK0 ] unsigned char 
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  4   26[BANK0 ] unsigned char 
  3701 ;; Registers used:
  3702 ;;		wreg, status,2, status,0, btemp+1
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3708 ;;      Params:         0       8       0       0       0
  3709 ;;      Locals:         0       4       0       0       0
  3710 ;;      Temps:          0       8       0       0       0
  3711 ;;      Totals:         0      20       0       0       0
  3712 ;;Total ram usage:       20 bytes
  3713 ;; Hardware stack levels used:    1
  3714 ;; This function calls:
  3715 ;;		Nothing
  3716 ;; This function is called by:
  3717 ;;		_position1
  3718 ;;		_position2
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           
  3723                           ;psect for function ___fladd
  3724  02B1                     ___fladd:	
  3725                           
  3726                           ;incstack = 0
  3727                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3728  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  3729  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  3730  02B3  083D               	movf	___fladd@b+3,w
  3731  02B4  3980               	andlw	128
  3732  02B5  00C2               	movwf	??___fladd
  3733  02B6  0842               	movf	??___fladd,w
  3734  02B7  00CA               	movwf	___fladd@signs
  3735  02B8  083D               	movf	___fladd@b+3,w
  3736  02B9  00C2               	movwf	??___fladd
  3737  02BA  0742               	addwf	??___fladd,w
  3738  02BB  00C3               	movwf	??___fladd+1
  3739  02BC  0843               	movf	??___fladd+1,w
  3740  02BD  00CC               	movwf	___fladd@bexp
  3741  02BE  1BBC               	btfsc	___fladd@b+2,7
  3742  02BF  144C               	bsf	___fladd@bexp,0
  3743  02C0  084C               	movf	___fladd@bexp,w
  3744  02C1  1903               	btfsc	3,2
  3745  02C2  2AD1               	goto	l1799
  3746  02C3  0A4C               	incf	___fladd@bexp,w
  3747  02C4  1D03               	btfss	3,2
  3748  02C5  2ACE               	goto	l1795
  3749  02C6  3000               	movlw	0
  3750  02C7  00BD               	movwf	___fladd@b+3
  3751  02C8  3000               	movlw	0
  3752  02C9  00BC               	movwf	___fladd@b+2
  3753  02CA  3000               	movlw	0
  3754  02CB  00BB               	movwf	___fladd@b+1
  3755  02CC  3000               	movlw	0
  3756  02CD  00BA               	movwf	___fladd@b
  3757  02CE                     l1795:	
  3758  02CE  17BC               	bsf	___fladd@b+2,7
  3759  02CF  01BD               	clrf	___fladd@b+3
  3760  02D0  2AD9               	goto	l1801
  3761  02D1                     l1799:	
  3762  02D1  3000               	movlw	0
  3763  02D2  00BD               	movwf	___fladd@b+3
  3764  02D3  3000               	movlw	0
  3765  02D4  00BC               	movwf	___fladd@b+2
  3766  02D5  3000               	movlw	0
  3767  02D6  00BB               	movwf	___fladd@b+1
  3768  02D7  3000               	movlw	0
  3769  02D8  00BA               	movwf	___fladd@b
  3770  02D9                     l1801:	
  3771  02D9  0841               	movf	___fladd@a+3,w
  3772  02DA  3980               	andlw	128
  3773  02DB  00C2               	movwf	??___fladd
  3774  02DC  0842               	movf	??___fladd,w
  3775  02DD  00CB               	movwf	___fladd@aexp
  3776  02DE  084B               	movf	___fladd@aexp,w
  3777  02DF  064A               	xorwf	___fladd@signs,w
  3778  02E0  1D03               	btfss	3,2
  3779  02E1  174A               	bsf	___fladd@signs,6
  3780  02E2  0841               	movf	___fladd@a+3,w
  3781  02E3  00C2               	movwf	??___fladd
  3782  02E4  0742               	addwf	??___fladd,w
  3783  02E5  00C3               	movwf	??___fladd+1
  3784  02E6  0843               	movf	??___fladd+1,w
  3785  02E7  00CB               	movwf	___fladd@aexp
  3786  02E8  1BC0               	btfsc	___fladd@a+2,7
  3787  02E9  144B               	bsf	___fladd@aexp,0
  3788  02EA  084B               	movf	___fladd@aexp,w
  3789  02EB  1903               	btfsc	3,2
  3790  02EC  2AFB               	goto	l1823
  3791  02ED  0A4B               	incf	___fladd@aexp,w
  3792  02EE  1D03               	btfss	3,2
  3793  02EF  2AF8               	goto	l1819
  3794  02F0  3000               	movlw	0
  3795  02F1  00C1               	movwf	___fladd@a+3
  3796  02F2  3000               	movlw	0
  3797  02F3  00C0               	movwf	___fladd@a+2
  3798  02F4  3000               	movlw	0
  3799  02F5  00BF               	movwf	___fladd@a+1
  3800  02F6  3000               	movlw	0
  3801  02F7  00BE               	movwf	___fladd@a
  3802  02F8                     l1819:	
  3803  02F8  17C0               	bsf	___fladd@a+2,7
  3804  02F9  01C1               	clrf	___fladd@a+3
  3805  02FA  2B03               	goto	l544
  3806  02FB                     l1823:	
  3807  02FB  3000               	movlw	0
  3808  02FC  00C1               	movwf	___fladd@a+3
  3809  02FD  3000               	movlw	0
  3810  02FE  00C0               	movwf	___fladd@a+2
  3811  02FF  3000               	movlw	0
  3812  0300  00BF               	movwf	___fladd@a+1
  3813  0301  3000               	movlw	0
  3814  0302  00BE               	movwf	___fladd@a
  3815  0303                     l544:	
  3816  0303  084C               	movf	___fladd@bexp,w
  3817  0304  024B               	subwf	___fladd@aexp,w
  3818  0305  1803               	skipnc
  3819  0306  2B49               	goto	l1859
  3820  0307  1F4A               	btfss	___fladd@signs,6
  3821  0308  2B0D               	goto	l1829
  3822  0309  3080               	movlw	128
  3823  030A  00C2               	movwf	??___fladd
  3824  030B  0842               	movf	??___fladd,w
  3825  030C  06CA               	xorwf	___fladd@signs,f
  3826  030D                     l1829:	
  3827  030D  084C               	movf	___fladd@bexp,w
  3828  030E  00C2               	movwf	??___fladd
  3829  030F  0842               	movf	??___fladd,w
  3830  0310  00CD               	movwf	___fladd@grs
  3831  0311  084B               	movf	___fladd@aexp,w
  3832  0312  00C2               	movwf	??___fladd
  3833  0313  0842               	movf	??___fladd,w
  3834  0314  00CC               	movwf	___fladd@bexp
  3835  0315  084D               	movf	___fladd@grs,w
  3836  0316  00C2               	movwf	??___fladd
  3837  0317  0842               	movf	??___fladd,w
  3838  0318  00CB               	movwf	___fladd@aexp
  3839  0319  083A               	movf	___fladd@b,w
  3840  031A  00C2               	movwf	??___fladd
  3841  031B  0842               	movf	??___fladd,w
  3842  031C  00CD               	movwf	___fladd@grs
  3843  031D  083E               	movf	___fladd@a,w
  3844  031E  00C2               	movwf	??___fladd
  3845  031F  0842               	movf	??___fladd,w
  3846  0320  00BA               	movwf	___fladd@b
  3847  0321  084D               	movf	___fladd@grs,w
  3848  0322  00C2               	movwf	??___fladd
  3849  0323  0842               	movf	??___fladd,w
  3850  0324  00BE               	movwf	___fladd@a
  3851  0325  083B               	movf	___fladd@b+1,w
  3852  0326  00C2               	movwf	??___fladd
  3853  0327  0842               	movf	??___fladd,w
  3854  0328  00CD               	movwf	___fladd@grs
  3855  0329  083F               	movf	___fladd@a+1,w
  3856  032A  00C2               	movwf	??___fladd
  3857  032B  0842               	movf	??___fladd,w
  3858  032C  00BB               	movwf	___fladd@b+1
  3859  032D  084D               	movf	___fladd@grs,w
  3860  032E  00C2               	movwf	??___fladd
  3861  032F  0842               	movf	??___fladd,w
  3862  0330  00BF               	movwf	___fladd@a+1
  3863  0331  083C               	movf	___fladd@b+2,w
  3864  0332  00C2               	movwf	??___fladd
  3865  0333  0842               	movf	??___fladd,w
  3866  0334  00CD               	movwf	___fladd@grs
  3867  0335  0840               	movf	___fladd@a+2,w
  3868  0336  00C2               	movwf	??___fladd
  3869  0337  0842               	movf	??___fladd,w
  3870  0338  00BC               	movwf	___fladd@b+2
  3871  0339  084D               	movf	___fladd@grs,w
  3872  033A  00C2               	movwf	??___fladd
  3873  033B  0842               	movf	??___fladd,w
  3874  033C  00C0               	movwf	___fladd@a+2
  3875  033D  083D               	movf	___fladd@b+3,w
  3876  033E  00C2               	movwf	??___fladd
  3877  033F  0842               	movf	??___fladd,w
  3878  0340  00CD               	movwf	___fladd@grs
  3879  0341  0841               	movf	___fladd@a+3,w
  3880  0342  00C2               	movwf	??___fladd
  3881  0343  0842               	movf	??___fladd,w
  3882  0344  00BD               	movwf	___fladd@b+3
  3883  0345  084D               	movf	___fladd@grs,w
  3884  0346  00C2               	movwf	??___fladd
  3885  0347  0842               	movf	??___fladd,w
  3886  0348  00C1               	movwf	___fladd@a+3
  3887  0349                     l1859:	
  3888  0349  01CD               	clrf	___fladd@grs
  3889  034A  084B               	movf	___fladd@aexp,w
  3890  034B  00C2               	movwf	??___fladd
  3891  034C  01C3               	clrf	??___fladd+1
  3892  034D  0843               	movf	??___fladd+1,w
  3893  034E  00C5               	movwf	??___fladd+3
  3894  034F  084C               	movf	___fladd@bexp,w
  3895  0350  0242               	subwf	??___fladd,w
  3896  0351  00C4               	movwf	??___fladd+2
  3897  0352  1C03               	skipc
  3898  0353  03C5               	decf	??___fladd+3,f
  3899  0354  0845               	movf	??___fladd+3,w
  3900  0355  3A80               	xorlw	128
  3901  0356  00FF               	movwf	127
  3902  0357  3080               	movlw	128
  3903  0358  027F               	subwf	127,w
  3904  0359  1D03               	skipz
  3905  035A  2B5D               	goto	u2065
  3906  035B  301A               	movlw	26
  3907  035C  0244               	subwf	??___fladd+2,w
  3908  035D                     u2065:	
  3909  035D  1C03               	skipc
  3910  035E  2B96               	goto	l1877
  3911  035F  1283               	bcf	3,5	;RP0=0, select bank0
  3912  0360  1303               	bcf	3,6	;RP1=0, select bank0
  3913  0361  083D               	movf	___fladd@b+3,w
  3914  0362  043C               	iorwf	___fladd@b+2,w
  3915  0363  043B               	iorwf	___fladd@b+1,w
  3916  0364  043A               	iorwf	___fladd@b,w
  3917  0365  1903               	btfsc	3,2
  3918  0366  2B69               	goto	u2070
  3919  0367  3001               	movlw	1
  3920  0368  2B6A               	goto	u2080
  3921  0369                     u2070:	
  3922  0369  3000               	movlw	0
  3923  036A                     u2080:	
  3924  036A  00C2               	movwf	??___fladd
  3925  036B  0842               	movf	??___fladd,w
  3926  036C  00CD               	movwf	___fladd@grs
  3927  036D  3000               	movlw	0
  3928  036E  00BD               	movwf	___fladd@b+3
  3929  036F  3000               	movlw	0
  3930  0370  00BC               	movwf	___fladd@b+2
  3931  0371  3000               	movlw	0
  3932  0372  00BB               	movwf	___fladd@b+1
  3933  0373  3000               	movlw	0
  3934  0374  00BA               	movwf	___fladd@b
  3935  0375  084B               	movf	___fladd@aexp,w
  3936  0376  00C2               	movwf	??___fladd
  3937  0377  0842               	movf	??___fladd,w
  3938  0378  00CC               	movwf	___fladd@bexp
  3939  0379  2B9C               	goto	l548
  3940  037A                     l550:	
  3941  037A  1C4D               	btfss	___fladd@grs,0
  3942  037B  2B85               	goto	l1867
  3943  037C  084D               	movf	___fladd@grs,w
  3944  037D  00C2               	movwf	??___fladd
  3945  037E  1003               	clrc
  3946  037F  0C42               	rrf	??___fladd,w
  3947  0380  3801               	iorlw	1
  3948  0381  00C3               	movwf	??___fladd+1
  3949  0382  0843               	movf	??___fladd+1,w
  3950  0383  00CD               	movwf	___fladd@grs
  3951  0384  2B87               	goto	l1869
  3952  0385                     l1867:	
  3953  0385  1003               	clrc
  3954  0386  0CCD               	rrf	___fladd@grs,f
  3955  0387                     l1869:	
  3956  0387  183A               	btfsc	___fladd@b,0
  3957  0388  17CD               	bsf	___fladd@grs,7
  3958  0389  3001               	movlw	1
  3959  038A  00C2               	movwf	??___fladd
  3960  038B                     u2115:	
  3961  038B  0D3D               	rlf	___fladd@b+3,w
  3962  038C  0CBD               	rrf	___fladd@b+3,f
  3963  038D  0CBC               	rrf	___fladd@b+2,f
  3964  038E  0CBB               	rrf	___fladd@b+1,f
  3965  038F  0CBA               	rrf	___fladd@b,f
  3966  0390  0BC2               	decfsz	??___fladd& (0+127),f
  3967  0391  2B8B               	goto	u2115
  3968  0392  3001               	movlw	1
  3969  0393  00C2               	movwf	??___fladd
  3970  0394  0842               	movf	??___fladd,w
  3971  0395  07CC               	addwf	___fladd@bexp,f
  3972  0396                     l1877:	
  3973  0396  1283               	bcf	3,5	;RP0=0, select bank0
  3974  0397  1303               	bcf	3,6	;RP1=0, select bank0
  3975  0398  084B               	movf	___fladd@aexp,w
  3976  0399  024C               	subwf	___fladd@bexp,w
  3977  039A  1C03               	skipc
  3978  039B  2B7A               	goto	l550
  3979  039C                     l548:	
  3980  039C  1B4A               	btfsc	___fladd@signs,6
  3981  039D  2BDD               	goto	l1903
  3982  039E  084C               	movf	___fladd@bexp,w
  3983  039F  1D03               	btfss	3,2
  3984  03A0  2BAA               	goto	l1885
  3985  03A1  3000               	movlw	0
  3986  03A2  00BD               	movwf	?___fladd+3
  3987  03A3  3000               	movlw	0
  3988  03A4  00BC               	movwf	?___fladd+2
  3989  03A5  3000               	movlw	0
  3990  03A6  00BB               	movwf	?___fladd+1
  3991  03A7  3000               	movlw	0
  3992  03A8  00BA               	movwf	?___fladd
  3993  03A9  0008               	return
  3994  03AA                     l1885:	
  3995  03AA  083E               	movf	___fladd@a,w
  3996  03AB  07BA               	addwf	___fladd@b,f
  3997  03AC  083F               	movf	___fladd@a+1,w
  3998  03AD  1103               	clrz
  3999  03AE  1803               	skipnc
  4000  03AF  3E01               	addlw	1
  4001  03B0  1D03               	btfss	3,2
  4002  03B1  07BB               	addwf	___fladd@b+1,f
  4003  03B2  0840               	movf	___fladd@a+2,w
  4004  03B3  1103               	clrz
  4005  03B4  1803               	skipnc
  4006  03B5  3E01               	addlw	1
  4007  03B6  1D03               	btfss	3,2
  4008  03B7  07BC               	addwf	___fladd@b+2,f
  4009  03B8  0841               	movf	___fladd@a+3,w
  4010  03B9  1103               	clrz
  4011  03BA  1803               	skipnc
  4012  03BB  3E01               	addlw	1
  4013  03BC  1D03               	btfss	3,2
  4014  03BD  07BD               	addwf	___fladd@b+3,f
  4015  03BE  1C3D               	btfss	___fladd@b+3,0
  4016  03BF  2C7F               	goto	l1937
  4017  03C0  1C4D               	btfss	___fladd@grs,0
  4018  03C1  2BCB               	goto	l1893
  4019  03C2  084D               	movf	___fladd@grs,w
  4020  03C3  00C2               	movwf	??___fladd
  4021  03C4  1003               	clrc
  4022  03C5  0C42               	rrf	??___fladd,w
  4023  03C6  3801               	iorlw	1
  4024  03C7  00C3               	movwf	??___fladd+1
  4025  03C8  0843               	movf	??___fladd+1,w
  4026  03C9  00CD               	movwf	___fladd@grs
  4027  03CA  2BCD               	goto	l1895
  4028  03CB                     l1893:	
  4029  03CB  1003               	clrc
  4030  03CC  0CCD               	rrf	___fladd@grs,f
  4031  03CD                     l1895:	
  4032  03CD  183A               	btfsc	___fladd@b,0
  4033  03CE  17CD               	bsf	___fladd@grs,7
  4034  03CF  3001               	movlw	1
  4035  03D0  00C2               	movwf	??___fladd
  4036  03D1                     u2195:	
  4037  03D1  0D3D               	rlf	___fladd@b+3,w
  4038  03D2  0CBD               	rrf	___fladd@b+3,f
  4039  03D3  0CBC               	rrf	___fladd@b+2,f
  4040  03D4  0CBB               	rrf	___fladd@b+1,f
  4041  03D5  0CBA               	rrf	___fladd@b,f
  4042  03D6  0BC2               	decfsz	??___fladd& (0+127),f
  4043  03D7  2BD1               	goto	u2195
  4044  03D8  3001               	movlw	1
  4045  03D9  00C2               	movwf	??___fladd
  4046  03DA  0842               	movf	??___fladd,w
  4047  03DB  07CC               	addwf	___fladd@bexp,f
  4048  03DC  2C7F               	goto	l1937
  4049  03DD                     l1903:	
  4050  03DD  083D               	movf	___fladd@b+3,w
  4051  03DE  3A80               	xorlw	128
  4052  03DF  00FF               	movwf	127
  4053  03E0  0841               	movf	___fladd@a+3,w
  4054  03E1  3A80               	xorlw	128
  4055  03E2  027F               	subwf	127,w
  4056  03E3  1D03               	skipz
  4057  03E4  2BEF               	goto	u2203
  4058  03E5  0840               	movf	___fladd@a+2,w
  4059  03E6  023C               	subwf	___fladd@b+2,w
  4060  03E7  1D03               	skipz
  4061  03E8  2BEF               	goto	u2203
  4062  03E9  083F               	movf	___fladd@a+1,w
  4063  03EA  023B               	subwf	___fladd@b+1,w
  4064  03EB  1D03               	skipz
  4065  03EC  2BEF               	goto	u2203
  4066  03ED  083E               	movf	___fladd@a,w
  4067  03EE  023A               	subwf	___fladd@b,w
  4068  03EF                     u2203:	
  4069  03EF  1803               	skipnc
  4070  03F0  2C47               	goto	l1913
  4071  03F1  30FF               	movlw	255
  4072  03F2  00C2               	movwf	??___fladd
  4073  03F3  30FF               	movlw	255
  4074  03F4  00C3               	movwf	??___fladd+1
  4075  03F5  30FF               	movlw	255
  4076  03F6  00C4               	movwf	??___fladd+2
  4077  03F7  30FF               	movlw	255
  4078  03F8  00C5               	movwf	??___fladd+3
  4079  03F9  083E               	movf	___fladd@a,w
  4080  03FA  00C6               	movwf	??___fladd+4
  4081  03FB  083F               	movf	___fladd@a+1,w
  4082  03FC  00C7               	movwf	??___fladd+5
  4083  03FD  0840               	movf	___fladd@a+2,w
  4084  03FE  00C8               	movwf	??___fladd+6
  4085  03FF  0841               	movf	___fladd@a+3,w
  4086  0400  00C9               	movwf	??___fladd+7
  4087  0401  083A               	movf	___fladd@b,w
  4088  0402  02C6               	subwf	??___fladd+4,f
  4089  0403  083B               	movf	___fladd@b+1,w
  4090  0404  1C03               	skipc
  4091  0405  0F3B               	incfsz	___fladd@b+1,w
  4092  0406  2C08               	goto	u2211
  4093  0407  2C09               	goto	u2212
  4094  0408                     u2211:	
  4095  0408  02C7               	subwf	??___fladd+5,f
  4096  0409                     u2212:	
  4097  0409  083C               	movf	___fladd@b+2,w
  4098  040A  1C03               	skipc
  4099  040B  0F3C               	incfsz	___fladd@b+2,w
  4100  040C  2C0E               	goto	u2213
  4101  040D  2C0F               	goto	u2214
  4102  040E                     u2213:	
  4103  040E  02C8               	subwf	??___fladd+6,f
  4104  040F                     u2214:	
  4105  040F  083D               	movf	___fladd@b+3,w
  4106  0410  1C03               	skipc
  4107  0411  0F3D               	incfsz	___fladd@b+3,w
  4108  0412  2C14               	goto	u2215
  4109  0413  2C15               	goto	u2216
  4110  0414                     u2215:	
  4111  0414  02C9               	subwf	??___fladd+7,f
  4112  0415                     u2216:	
  4113  0415  0846               	movf	??___fladd+4,w
  4114  0416  07C2               	addwf	??___fladd,f
  4115  0417  0847               	movf	??___fladd+5,w
  4116  0418  1803               	skipnc
  4117  0419  0F47               	incfsz	??___fladd+5,w
  4118  041A  2C1C               	goto	u2220
  4119  041B  2C1D               	goto	u2221
  4120  041C                     u2220:	
  4121  041C  07C3               	addwf	??___fladd+1,f
  4122  041D                     u2221:	
  4123  041D  0848               	movf	??___fladd+6,w
  4124  041E  1803               	skipnc
  4125  041F  0F48               	incfsz	??___fladd+6,w
  4126  0420  2C22               	goto	u2222
  4127  0421  2C23               	goto	u2223
  4128  0422                     u2222:	
  4129  0422  07C4               	addwf	??___fladd+2,f
  4130  0423                     u2223:	
  4131  0423  0849               	movf	??___fladd+7,w
  4132  0424  1803               	skipnc
  4133  0425  0A49               	incf	??___fladd+7,w
  4134  0426  07C5               	addwf	??___fladd+3,f
  4135  0427  0845               	movf	??___fladd+3,w
  4136  0428  00BD               	movwf	___fladd@b+3
  4137  0429  0844               	movf	??___fladd+2,w
  4138  042A  00BC               	movwf	___fladd@b+2
  4139  042B  0843               	movf	??___fladd+1,w
  4140  042C  00BB               	movwf	___fladd@b+1
  4141  042D  0842               	movf	??___fladd,w
  4142  042E  00BA               	movwf	___fladd@b
  4143  042F  3080               	movlw	128
  4144  0430  00C2               	movwf	??___fladd
  4145  0431  0842               	movf	??___fladd,w
  4146  0432  06CA               	xorwf	___fladd@signs,f
  4147  0433  09CD               	comf	___fladd@grs,f
  4148  0434  0ACD               	incf	___fladd@grs,f
  4149  0435  084D               	movf	___fladd@grs,w
  4150  0436  1D03               	btfss	3,2
  4151  0437  2C55               	goto	l565
  4152  0438  3001               	movlw	1
  4153  0439  07BA               	addwf	___fladd@b,f
  4154  043A  3000               	movlw	0
  4155  043B  1803               	skipnc
  4156  043C  3001               	movlw	1
  4157  043D  07BB               	addwf	___fladd@b+1,f
  4158  043E  3000               	movlw	0
  4159  043F  1803               	skipnc
  4160  0440  3001               	movlw	1
  4161  0441  07BC               	addwf	___fladd@b+2,f
  4162  0442  3000               	movlw	0
  4163  0443  1803               	skipnc
  4164  0444  3001               	movlw	1
  4165  0445  07BD               	addwf	___fladd@b+3,f
  4166  0446  2C55               	goto	l565
  4167  0447                     l1913:	
  4168  0447  083E               	movf	___fladd@a,w
  4169  0448  02BA               	subwf	___fladd@b,f
  4170  0449  083F               	movf	___fladd@a+1,w
  4171  044A  1C03               	skipc
  4172  044B  0F3F               	incfsz	___fladd@a+1,w
  4173  044C  02BB               	subwf	___fladd@b+1,f
  4174  044D  0840               	movf	___fladd@a+2,w
  4175  044E  1C03               	skipc
  4176  044F  0F40               	incfsz	___fladd@a+2,w
  4177  0450  02BC               	subwf	___fladd@b+2,f
  4178  0451  0841               	movf	___fladd@a+3,w
  4179  0452  1C03               	skipc
  4180  0453  0F41               	incfsz	___fladd@a+3,w
  4181  0454  02BD               	subwf	___fladd@b+3,f
  4182  0455                     l565:	
  4183  0455  083D               	movf	___fladd@b+3,w
  4184  0456  043C               	iorwf	___fladd@b+2,w
  4185  0457  043B               	iorwf	___fladd@b+1,w
  4186  0458  043A               	iorwf	___fladd@b,w
  4187  0459  1D03               	skipz
  4188  045A  2C7D               	goto	l1935
  4189  045B  084D               	movf	___fladd@grs,w
  4190  045C  1D03               	btfss	3,2
  4191  045D  2C7D               	goto	l1935
  4192  045E  3000               	movlw	0
  4193  045F  00BD               	movwf	?___fladd+3
  4194  0460  3000               	movlw	0
  4195  0461  00BC               	movwf	?___fladd+2
  4196  0462  3000               	movlw	0
  4197  0463  00BB               	movwf	?___fladd+1
  4198  0464  3000               	movlw	0
  4199  0465  00BA               	movwf	?___fladd
  4200  0466  0008               	return
  4201  0467                     l1921:	
  4202  0467  3001               	movlw	1
  4203  0468  00C2               	movwf	??___fladd
  4204  0469                     u2265:	
  4205  0469  1003               	clrc
  4206  046A  0DBA               	rlf	___fladd@b,f
  4207  046B  0DBB               	rlf	___fladd@b+1,f
  4208  046C  0DBC               	rlf	___fladd@b+2,f
  4209  046D  0DBD               	rlf	___fladd@b+3,f
  4210  046E  0BC2               	decfsz	??___fladd,f
  4211  046F  2C69               	goto	u2265
  4212  0470  1BCD               	btfsc	___fladd@grs,7
  4213  0471  143A               	bsf	___fladd@b,0
  4214  0472  1C4D               	btfss	___fladd@grs,0
  4215  0473  2C76               	goto	l1929
  4216  0474  1403               	setc
  4217  0475  2C77               	goto	L6
  4218  0476                     l1929:	
  4219  0476  1003               	clrc
  4220  0477                     L6:	
  4221  0477  0DCD               	rlf	___fladd@grs,f
  4222  0478  084C               	movf	___fladd@bexp,w
  4223  0479  1903               	btfsc	3,2
  4224  047A  2C7D               	goto	l1935
  4225  047B  3001               	movlw	1
  4226  047C  02CC               	subwf	___fladd@bexp,f
  4227  047D                     l1935:	
  4228  047D  1FBC               	btfss	___fladd@b+2,7
  4229  047E  2C67               	goto	l1921
  4230  047F                     l1937:	
  4231  047F  01CB               	clrf	___fladd@aexp
  4232  0480  1FCD               	btfss	___fladd@grs,7
  4233  0481  2C8A               	goto	l1947
  4234  0482  084D               	movf	___fladd@grs,w
  4235  0483  397F               	andlw	127
  4236  0484  1903               	btfsc	3,2
  4237  0485  183A               	btfsc	___fladd@b,0
  4238  0486  2C88               	goto	l1943
  4239  0487  2C8A               	goto	l1947
  4240  0488                     l1943:	
  4241  0488  01CB               	clrf	___fladd@aexp
  4242  0489  0ACB               	incf	___fladd@aexp,f
  4243  048A                     l1947:	
  4244  048A  084B               	movf	___fladd@aexp,w
  4245  048B  1903               	btfsc	3,2
  4246  048C  2CBD               	goto	l578
  4247  048D  3001               	movlw	1
  4248  048E  07BA               	addwf	___fladd@b,f
  4249  048F  3000               	movlw	0
  4250  0490  1803               	skipnc
  4251  0491  3001               	movlw	1
  4252  0492  07BB               	addwf	___fladd@b+1,f
  4253  0493  3000               	movlw	0
  4254  0494  1803               	skipnc
  4255  0495  3001               	movlw	1
  4256  0496  07BC               	addwf	___fladd@b+2,f
  4257  0497  3000               	movlw	0
  4258  0498  1803               	skipnc
  4259  0499  3001               	movlw	1
  4260  049A  07BD               	addwf	___fladd@b+3,f
  4261  049B  1C3D               	btfss	___fladd@b+3,0
  4262  049C  2CBD               	goto	l578
  4263  049D  083A               	movf	___fladd@b,w
  4264  049E  00C2               	movwf	??___fladd
  4265  049F  083B               	movf	___fladd@b+1,w
  4266  04A0  00C3               	movwf	??___fladd+1
  4267  04A1  083C               	movf	___fladd@b+2,w
  4268  04A2  00C4               	movwf	??___fladd+2
  4269  04A3  083D               	movf	___fladd@b+3,w
  4270  04A4  00C5               	movwf	??___fladd+3
  4271  04A5  3001               	movlw	1
  4272  04A6  00C6               	movwf	??___fladd+4
  4273  04A7                     u2365:	
  4274  04A7  0D45               	rlf	??___fladd+3,w
  4275  04A8  0CC5               	rrf	??___fladd+3,f
  4276  04A9  0CC4               	rrf	??___fladd+2,f
  4277  04AA  0CC3               	rrf	??___fladd+1,f
  4278  04AB  0CC2               	rrf	??___fladd,f
  4279  04AC  0BC6               	decfsz	??___fladd+4,f
  4280  04AD  2CA7               	goto	u2365
  4281  04AE  0845               	movf	??___fladd+3,w
  4282  04AF  00BD               	movwf	___fladd@b+3
  4283  04B0  0844               	movf	??___fladd+2,w
  4284  04B1  00BC               	movwf	___fladd@b+2
  4285  04B2  0843               	movf	??___fladd+1,w
  4286  04B3  00BB               	movwf	___fladd@b+1
  4287  04B4  0842               	movf	??___fladd,w
  4288  04B5  00BA               	movwf	___fladd@b
  4289  04B6  0A4C               	incf	___fladd@bexp,w
  4290  04B7  1903               	btfsc	3,2
  4291  04B8  2CBD               	goto	l578
  4292  04B9  3001               	movlw	1
  4293  04BA  00C2               	movwf	??___fladd
  4294  04BB  0842               	movf	??___fladd,w
  4295  04BC  07CC               	addwf	___fladd@bexp,f
  4296  04BD                     l578:	
  4297  04BD  0A4C               	incf	___fladd@bexp,w
  4298  04BE  1D03               	btfss	3,2
  4299  04BF  084C               	movf	___fladd@bexp,w
  4300  04C0  1D03               	btfss	3,2
  4301  04C1  2CCD               	goto	l1965
  4302  04C2  3000               	movlw	0
  4303  04C3  00BD               	movwf	___fladd@b+3
  4304  04C4  3000               	movlw	0
  4305  04C5  00BC               	movwf	___fladd@b+2
  4306  04C6  3000               	movlw	0
  4307  04C7  00BB               	movwf	___fladd@b+1
  4308  04C8  3000               	movlw	0
  4309  04C9  00BA               	movwf	___fladd@b
  4310  04CA  084C               	movf	___fladd@bexp,w
  4311  04CB  1903               	btfsc	3,2
  4312  04CC  01CA               	clrf	___fladd@signs
  4313  04CD                     l1965:	
  4314  04CD  1C4C               	btfss	___fladd@bexp,0
  4315  04CE  2CD1               	goto	l1969
  4316  04CF  17BC               	bsf	___fladd@b+2,7
  4317  04D0  2CD5               	goto	l586
  4318  04D1                     l1969:	
  4319  04D1  307F               	movlw	127
  4320  04D2  00C2               	movwf	??___fladd
  4321  04D3  0842               	movf	??___fladd,w
  4322  04D4  05BC               	andwf	___fladd@b+2,f
  4323  04D5                     l586:	
  4324  04D5  084C               	movf	___fladd@bexp,w
  4325  04D6  00C2               	movwf	??___fladd
  4326  04D7  1003               	clrc
  4327  04D8  0C42               	rrf	??___fladd,w
  4328  04D9  00C3               	movwf	??___fladd+1
  4329  04DA  0843               	movf	??___fladd+1,w
  4330  04DB  00BD               	movwf	___fladd@b+3
  4331  04DC  1FCA               	btfss	___fladd@signs,7
  4332  04DD  0008               	return
  4333  04DE  17BD               	bsf	___fladd@b+3,7
  4334  04DF  0008               	return
  4335  04E0                     __end_of___fladd:	
  4336                           
  4337                           	psect	text15
  4338  0DC8                     __ptext15:	
  4339 ;; *************** function _lcdInit *****************
  4340 ;; Defined at:
  4341 ;;		line 66 in file "./lcd.h"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;		None
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;		None
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  1    wreg      void 
  4348 ;; Registers used:
  4349 ;;		wreg, status,2, status,0, pclath, cstack
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4355 ;;      Params:         0       0       0       0       0
  4356 ;;      Locals:         0       0       0       0       0
  4357 ;;      Temps:          2       0       0       0       0
  4358 ;;      Totals:         2       0       0       0       0
  4359 ;;Total ram usage:        2 bytes
  4360 ;; Hardware stack levels used:    1
  4361 ;; Hardware stack levels required when called:    2
  4362 ;; This function calls:
  4363 ;;		_lcdCmd
  4364 ;;		_lcdPort
  4365 ;; This function is called by:
  4366 ;;		_main
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           
  4371                           ;psect for function _lcdInit
  4372  0DC8                     _lcdInit:	
  4373                           
  4374                           ;./lcd.h: 67:     TRISD = 0;
  4375                           
  4376                           ;incstack = 0
  4377                           ; Regs used in _lcdInit: [wreg+status,2+status,0+pclath+cstack]
  4378  0DC8  1683               	bsf	3,5	;RP0=1, select bank1
  4379  0DC9  1303               	bcf	3,6	;RP1=0, select bank1
  4380  0DCA  0188               	clrf	8	;volatile
  4381                           
  4382                           ;./lcd.h: 68:     PORTD = 0;
  4383  0DCB  1283               	bcf	3,5	;RP0=0, select bank0
  4384  0DCC  1303               	bcf	3,6	;RP1=0, select bank0
  4385  0DCD  0188               	clrf	8	;volatile
  4386                           
  4387                           ;./lcd.h: 69:     lcdPort(0x00);
  4388  0DCE  3000               	movlw	0
  4389  0DCF  120A  158A  244D  120A  158A  	fcall	_lcdPort
  4390                           
  4391                           ;./lcd.h: 70:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4392  0DD4  301A               	movlw	26
  4393  0DD5  00F5               	movwf	??_lcdInit+1
  4394  0DD6  30F8               	movlw	248
  4395  0DD7  00F4               	movwf	??_lcdInit
  4396  0DD8                     u3107:	
  4397  0DD8  0BF4               	decfsz	??_lcdInit,f
  4398  0DD9  2DD8               	goto	u3107
  4399  0DDA  0BF5               	decfsz	??_lcdInit+1,f
  4400  0DDB  2DD8               	goto	u3107
  4401  0DDC  0000               	nop
  4402                           
  4403                           ;./lcd.h: 71:     lcdCmd(0x03);
  4404  0DDD  3003               	movlw	3
  4405  0DDE  120A  158A  2467  120A  158A  	fcall	_lcdCmd
  4406                           
  4407                           ;./lcd.h: 72:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4408  0DE3  3007               	movlw	7
  4409  0DE4  00F5               	movwf	??_lcdInit+1
  4410  0DE5  307D               	movlw	125
  4411  0DE6  00F4               	movwf	??_lcdInit
  4412  0DE7                     u3117:	
  4413  0DE7  0BF4               	decfsz	??_lcdInit,f
  4414  0DE8  2DE7               	goto	u3117
  4415  0DE9  0BF5               	decfsz	??_lcdInit+1,f
  4416  0DEA  2DE7               	goto	u3117
  4417                           
  4418                           ;./lcd.h: 73:     lcdCmd(0x03);
  4419  0DEB  3003               	movlw	3
  4420  0DEC  120A  158A  2467  120A  158A  	fcall	_lcdCmd
  4421                           
  4422                           ;./lcd.h: 74:     _delay((unsigned long)((11)*(4000000/4000.0)));
  4423  0DF1  300F               	movlw	15
  4424  0DF2  00F5               	movwf	??_lcdInit+1
  4425  0DF3  3047               	movlw	71
  4426  0DF4  00F4               	movwf	??_lcdInit
  4427  0DF5                     u3127:	
  4428  0DF5  0BF4               	decfsz	??_lcdInit,f
  4429  0DF6  2DF5               	goto	u3127
  4430  0DF7  0BF5               	decfsz	??_lcdInit+1,f
  4431  0DF8  2DF5               	goto	u3127
  4432  0DF9  2DFA               	nop2
  4433                           
  4434                           ;./lcd.h: 75:     lcdCmd(0x03);
  4435  0DFA  3003               	movlw	3
  4436  0DFB  120A  158A  2467  120A  158A  	fcall	_lcdCmd
  4437                           
  4438                           ;./lcd.h: 77:     lcdCmd(0x02);
  4439  0E00  3002               	movlw	2
  4440  0E01  120A  158A  2467  120A  158A  	fcall	_lcdCmd
  4441                           
  4442                           ;./lcd.h: 78:     lcdCmd(0x02);
  4443  0E06  3002               	movlw	2
  4444  0E07  120A  158A  2467  120A  158A  	fcall	_lcdCmd
  4445                           
  4446                           ;./lcd.h: 79:     lcdCmd(0x08);
  4447  0E0C  3008               	movlw	8
  4448  0E0D  120A  158A  2467  120A  158A  	fcall	_lcdCmd
  4449                           
  4450                           ;./lcd.h: 80:     lcdCmd(0x00);
  4451  0E12  3000               	movlw	0
  4452  0E13  120A  158A  2467  120A  158A  	fcall	_lcdCmd
  4453                           
  4454                           ;./lcd.h: 81:     lcdCmd(0x0C);
  4455  0E18  300C               	movlw	12
  4456  0E19  120A  158A  2467  120A  158A  	fcall	_lcdCmd
  4457                           
  4458                           ;./lcd.h: 82:     lcdCmd(0x00);
  4459  0E1E  3000               	movlw	0
  4460  0E1F  120A  158A  2467  120A  158A  	fcall	_lcdCmd
  4461                           
  4462                           ;./lcd.h: 83:     lcdCmd(0x06);
  4463  0E24  3006               	movlw	6
  4464  0E25  120A  158A  2467   	fcall	_lcdCmd
  4465  0E28  0008               	return
  4466  0E29                     __end_of_lcdInit:	
  4467                           
  4468                           	psect	text16
  4469  0C67                     __ptext16:	
  4470 ;; *************** function _lcdCmd *****************
  4471 ;; Defined at:
  4472 ;;		line 36 in file "./lcd.h"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;  a               1    wreg     unsigned char 
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;  a               1    3[COMMON] unsigned char 
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  1    wreg      void 
  4479 ;; Registers used:
  4480 ;;		wreg, status,2, status,0, pclath, cstack
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4486 ;;      Params:         0       0       0       0       0
  4487 ;;      Locals:         1       0       0       0       0
  4488 ;;      Temps:          2       0       0       0       0
  4489 ;;      Totals:         3       0       0       0       0
  4490 ;;Total ram usage:        3 bytes
  4491 ;; Hardware stack levels used:    1
  4492 ;; Hardware stack levels required when called:    1
  4493 ;; This function calls:
  4494 ;;		_lcdPort
  4495 ;; This function is called by:
  4496 ;;		_lcdSetCursor
  4497 ;;		_lcdInit
  4498 ;;		_lcdClear
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           
  4503                           ;psect for function _lcdCmd
  4504  0C67                     _lcdCmd:	
  4505                           
  4506                           ;incstack = 0
  4507                           ; Regs used in _lcdCmd: [wreg+status,2+status,0+pclath+cstack]
  4508                           ;lcdCmd@a stored from wreg
  4509  0C67  00F3               	movwf	lcdCmd@a
  4510                           
  4511                           ;./lcd.h: 37:     RD2 = 0;
  4512  0C68  1283               	bcf	3,5	;RP0=0, select bank0
  4513  0C69  1303               	bcf	3,6	;RP1=0, select bank0
  4514  0C6A  1108               	bcf	8,2	;volatile
  4515                           
  4516                           ;./lcd.h: 38:     lcdPort(a);
  4517  0C6B  0873               	movf	lcdCmd@a,w
  4518  0C6C  120A  158A  244D  120A  158A  	fcall	_lcdPort
  4519                           
  4520                           ;./lcd.h: 39:     RD3 = 1;
  4521  0C71  1283               	bcf	3,5	;RP0=0, select bank0
  4522  0C72  1303               	bcf	3,6	;RP1=0, select bank0
  4523  0C73  1588               	bsf	8,3	;volatile
  4524                           
  4525                           ;./lcd.h: 40:     _delay((unsigned long)((4)*(4000000/4000.0)));
  4526  0C74  3006               	movlw	6
  4527  0C75  00F2               	movwf	??_lcdCmd+1
  4528  0C76  3030               	movlw	48
  4529  0C77  00F1               	movwf	??_lcdCmd
  4530  0C78                     u3137:	
  4531  0C78  0BF1               	decfsz	??_lcdCmd,f
  4532  0C79  2C78               	goto	u3137
  4533  0C7A  0BF2               	decfsz	??_lcdCmd+1,f
  4534  0C7B  2C78               	goto	u3137
  4535  0C7C  0000               	nop
  4536                           
  4537                           ;./lcd.h: 41:     RD3 = 0;
  4538  0C7D  1283               	bcf	3,5	;RP0=0, select bank0
  4539  0C7E  1303               	bcf	3,6	;RP1=0, select bank0
  4540  0C7F  1188               	bcf	8,3	;volatile
  4541  0C80  0008               	return
  4542  0C81                     __end_of_lcdCmd:	
  4543                           
  4544                           	psect	text17
  4545  0C4D                     __ptext17:	
  4546 ;; *************** function _lcdPort *****************
  4547 ;; Defined at:
  4548 ;;		line 14 in file "./lcd.h"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;  a               1    wreg     unsigned char 
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;  a               1    0[COMMON] unsigned char 
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  1    wreg      void 
  4555 ;; Registers used:
  4556 ;;		wreg
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4562 ;;      Params:         0       0       0       0       0
  4563 ;;      Locals:         1       0       0       0       0
  4564 ;;      Temps:          0       0       0       0       0
  4565 ;;      Totals:         1       0       0       0       0
  4566 ;;Total ram usage:        1 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; This function calls:
  4569 ;;		Nothing
  4570 ;; This function is called by:
  4571 ;;		_lcdCmd
  4572 ;;		_lcdInit
  4573 ;;		_lcdWriteChar
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           
  4578                           ;psect for function _lcdPort
  4579  0C4D                     _lcdPort:	
  4580                           
  4581                           ;incstack = 0
  4582                           ; Regs used in _lcdPort: [wreg]
  4583                           ;lcdPort@a stored from wreg
  4584  0C4D  00F0               	movwf	lcdPort@a
  4585                           
  4586                           ;./lcd.h: 15:     if (a & 1)
  4587  0C4E  1C70               	btfss	lcdPort@a,0
  4588  0C4F  2C54               	goto	l43
  4589                           
  4590                           ;./lcd.h: 16:         RD4 = 1;
  4591  0C50  1283               	bcf	3,5	;RP0=0, select bank0
  4592  0C51  1303               	bcf	3,6	;RP1=0, select bank0
  4593  0C52  1608               	bsf	8,4	;volatile
  4594  0C53  2C57               	goto	l44
  4595  0C54                     l43:	
  4596                           ;./lcd.h: 17:     else
  4597                           
  4598                           
  4599                           ;./lcd.h: 18:         RD4 = 0;
  4600  0C54  1283               	bcf	3,5	;RP0=0, select bank0
  4601  0C55  1303               	bcf	3,6	;RP1=0, select bank0
  4602  0C56  1208               	bcf	8,4	;volatile
  4603  0C57                     l44:	
  4604                           
  4605                           ;./lcd.h: 20:     if (a & 2)
  4606  0C57  1CF0               	btfss	lcdPort@a,1
  4607  0C58  2C5B               	goto	l45
  4608                           
  4609                           ;./lcd.h: 21:         RD5 = 1;
  4610  0C59  1688               	bsf	8,5	;volatile
  4611  0C5A  2C5C               	goto	l46
  4612  0C5B                     l45:	
  4613                           ;./lcd.h: 22:     else
  4614                           
  4615                           
  4616                           ;./lcd.h: 23:         RD5 = 0;
  4617  0C5B  1288               	bcf	8,5	;volatile
  4618  0C5C                     l46:	
  4619                           
  4620                           ;./lcd.h: 25:     if (a & 4)
  4621  0C5C  1D70               	btfss	lcdPort@a,2
  4622  0C5D  2C60               	goto	l47
  4623                           
  4624                           ;./lcd.h: 26:         RD6 = 1;
  4625  0C5E  1708               	bsf	8,6	;volatile
  4626  0C5F  2C61               	goto	l48
  4627  0C60                     l47:	
  4628                           ;./lcd.h: 27:     else
  4629                           
  4630                           
  4631                           ;./lcd.h: 28:         RD6 = 0;
  4632  0C60  1308               	bcf	8,6	;volatile
  4633  0C61                     l48:	
  4634                           
  4635                           ;./lcd.h: 30:     if (a & 8)
  4636  0C61  1DF0               	btfss	lcdPort@a,3
  4637  0C62  2C65               	goto	l49
  4638                           
  4639                           ;./lcd.h: 31:         RD7 = 1;
  4640  0C63  1788               	bsf	8,7	;volatile
  4641  0C64  0008               	return
  4642  0C65                     l49:	
  4643                           ;./lcd.h: 32:     else
  4644                           
  4645                           
  4646                           ;./lcd.h: 33:         RD7 = 0;
  4647  0C65  1388               	bcf	8,7	;volatile
  4648  0C66  0008               	return
  4649  0C67                     __end_of_lcdPort:	
  4650                           
  4651                           	psect	text18
  4652  0C9F                     __ptext18:	
  4653 ;; *************** function _adcRead *****************
  4654 ;; Defined at:
  4655 ;;		line 35 in file "./adc.h"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  adcChannel      1    wreg     const unsigned char 
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;  adcChannel      1    4[COMMON] const unsigned char 
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  2    0[COMMON] int 
  4662 ;; Registers used:
  4663 ;;		wreg, status,2, status,0
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4669 ;;      Params:         2       0       0       0       0
  4670 ;;      Locals:         1       0       0       0       0
  4671 ;;      Temps:          2       0       0       0       0
  4672 ;;      Totals:         5       0       0       0       0
  4673 ;;Total ram usage:        5 bytes
  4674 ;; Hardware stack levels used:    1
  4675 ;; This function calls:
  4676 ;;		Nothing
  4677 ;; This function is called by:
  4678 ;;		_main
  4679 ;; This function uses a non-reentrant model
  4680 ;;
  4681                           
  4682                           
  4683                           ;psect for function _adcRead
  4684  0C9F                     _adcRead:	
  4685                           
  4686                           ;incstack = 0
  4687                           ; Regs used in _adcRead: [wreg+status,2+status,0]
  4688                           ;adcRead@adcChannel stored from wreg
  4689  0C9F  00F4               	movwf	adcRead@adcChannel
  4690                           
  4691                           ;./adc.h: 36:     ADCON0bits.ADON = 1;
  4692  0CA0  1283               	bcf	3,5	;RP0=0, select bank0
  4693  0CA1  1303               	bcf	3,6	;RP1=0, select bank0
  4694  0CA2  141F               	bsf	31,0	;volatile
  4695                           
  4696                           ;./adc.h: 37:     ADCON0bits.CHS = adcChannel;
  4697  0CA3  0874               	movf	adcRead@adcChannel,w
  4698  0CA4  00F2               	movwf	??_adcRead
  4699  0CA5  0DF2               	rlf	??_adcRead,f
  4700  0CA6  0DF2               	rlf	??_adcRead,f
  4701  0CA7  0DF2               	rlf	??_adcRead,f
  4702  0CA8  081F               	movf	31,w	;volatile
  4703  0CA9  0672               	xorwf	??_adcRead,w
  4704  0CAA  39C7               	andlw	-57
  4705  0CAB  0672               	xorwf	??_adcRead,w
  4706  0CAC  009F               	movwf	31	;volatile
  4707                           
  4708                           ;./adc.h: 38:     _delay((unsigned long)((10)*(4000000/4000.0)));
  4709  0CAD  300D               	movlw	13
  4710  0CAE  00F3               	movwf	??_adcRead+1
  4711  0CAF  30FB               	movlw	251
  4712  0CB0  00F2               	movwf	??_adcRead
  4713  0CB1                     u3147:	
  4714  0CB1  0BF2               	decfsz	??_adcRead,f
  4715  0CB2  2CB1               	goto	u3147
  4716  0CB3  0BF3               	decfsz	??_adcRead+1,f
  4717  0CB4  2CB1               	goto	u3147
  4718  0CB5  2CB6               	nop2
  4719                           
  4720                           ;./adc.h: 39:     ADCON0bits.GO = 1;
  4721  0CB6  1283               	bcf	3,5	;RP0=0, select bank0
  4722  0CB7  1303               	bcf	3,6	;RP1=0, select bank0
  4723  0CB8  151F               	bsf	31,2	;volatile
  4724  0CB9                     l81:	
  4725                           ;./adc.h: 40:     while (ADCON0bits.GO_DONE);
  4726                           
  4727  0CB9  191F               	btfsc	31,2	;volatile
  4728  0CBA  2CB9               	goto	l81
  4729                           
  4730                           ;./adc.h: 42:     return (ADRESH << 8) + (ADRESL);
  4731  0CBB  081E               	movf	30,w	;volatile
  4732  0CBC  00F1               	movwf	?_adcRead+1
  4733  0CBD  1683               	bsf	3,5	;RP0=1, select bank1
  4734  0CBE  1303               	bcf	3,6	;RP1=0, select bank1
  4735  0CBF  081E               	movf	30,w	;volatile
  4736  0CC0  00F0               	movwf	?_adcRead
  4737  0CC1  0008               	return
  4738  0CC2                     __end_of_adcRead:	
  4739                           
  4740                           	psect	text19
  4741  0C3D                     __ptext19:	
  4742 ;; *************** function _adcInit *****************
  4743 ;; Defined at:
  4744 ;;		line 1 in file "./adc.h"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;		None
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;		None
  4749 ;; Return value:  Size  Location     Type
  4750 ;;                  1    wreg      void 
  4751 ;; Registers used:
  4752 ;;		wreg, status,2, status,0
  4753 ;; Tracked objects:
  4754 ;;		On entry : 0/0
  4755 ;;		On exit  : 0/0
  4756 ;;		Unchanged: 0/0
  4757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4758 ;;      Params:         0       0       0       0       0
  4759 ;;      Locals:         0       0       0       0       0
  4760 ;;      Temps:          0       0       0       0       0
  4761 ;;      Totals:         0       0       0       0       0
  4762 ;;Total ram usage:        0 bytes
  4763 ;; Hardware stack levels used:    1
  4764 ;; This function calls:
  4765 ;;		Nothing
  4766 ;; This function is called by:
  4767 ;;		_main
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770                           
  4771                           
  4772                           ;psect for function _adcInit
  4773  0C3D                     _adcInit:	
  4774                           
  4775                           ;./adc.h: 11:     ADCON0bits.ADCS = 0b01;
  4776                           
  4777                           ;incstack = 0
  4778                           ; Regs used in _adcInit: [wreg+status,2+status,0]
  4779  0C3D  1283               	bcf	3,5	;RP0=0, select bank0
  4780  0C3E  1303               	bcf	3,6	;RP1=0, select bank0
  4781  0C3F  081F               	movf	31,w	;volatile
  4782  0C40  393F               	andlw	-193
  4783  0C41  3840               	iorlw	64
  4784  0C42  009F               	movwf	31	;volatile
  4785                           
  4786                           ;./adc.h: 12:     ADCON0bits.CHS = 0b000;
  4787  0C43  30C7               	movlw	-57
  4788  0C44  059F               	andwf	31,f	;volatile
  4789                           
  4790                           ;./adc.h: 13:     ADCON0bits.ADON = 0;
  4791  0C45  101F               	bcf	31,0	;volatile
  4792                           
  4793                           ;./adc.h: 24:     ADCON1bits.ADFM = 1;
  4794  0C46  1683               	bsf	3,5	;RP0=1, select bank1
  4795  0C47  1303               	bcf	3,6	;RP1=0, select bank1
  4796  0C48  179F               	bsf	31,7	;volatile
  4797                           
  4798                           ;./adc.h: 25:     ADCON1bits.ADCS2 = 1;
  4799  0C49  171F               	bsf	31,6	;volatile
  4800                           
  4801                           ;./adc.h: 26:     ADCON1bits.PCFG = 0b0000;
  4802  0C4A  30F0               	movlw	-16
  4803  0C4B  059F               	andwf	31,f	;volatile
  4804  0C4C  0008               	return
  4805  0C4D                     __end_of_adcInit:	
  4806  007E                     btemp	set	126	;btemp
  4807  007E                     wtemp0	set	126


Data Sizes:
    Strings     10
    Constant    10
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> mensaje(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcdPrint@a	PTR unsigned char  size(1) Largest target is 16
		 -> mensaje(BANK1[16]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcdSetCursor->_lcdCmd
    _lcdPrint->_lcdWriteChar
    _lcdWriteChar->_lcdPort
    _position2->___xxtofl
    _position1->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___xxtofl
    _lcdInit->_lcdCmd
    _lcdCmd->_lcdPort

Critical Paths under _main in BANK0

    _main->_position1
    _print->_sprintf
    _position2->___fladd
    _position1->___fladd
    ___fltol->___flmul
    ___fladd->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   19895
                                             69 BANK0     10    10      0
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _adcInit
                            _adcRead
                            _lcdInit
                          _position1
                          _position2
                              _print
 ---------------------------------------------------------------------------------
 (1) _print                                                5     2      3    2924
                                             13 BANK0      5     2      3
                           _lcdPrint
                       _lcdSetCursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _lcdSetCursor                                         7     6      1     456
                                              4 COMMON     7     6      1
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (2) _lcdPrint                                             4     4      0     301
                                              5 COMMON     4     4      0
                       _lcdWriteChar
 ---------------------------------------------------------------------------------
 (3) _lcdWriteChar                                         4     4      0     178
                                              1 COMMON     4     4      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (1) _position2                                           21    21      0    6401
                                             46 BANK0     21    21      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _position1                                           23    21      2    6417
                                             46 BANK0     23    21      2
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             26 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2721
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2414
                                             26 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              2     2      0     198
                                              4 COMMON     2     2      0
                             _lcdCmd
                            _lcdPort
 ---------------------------------------------------------------------------------
 (3) _lcdCmd                                               3     3      0     110
                                              1 COMMON     3     3      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (4) _lcdPort                                              1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adcRead                                              5     3      2      22
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _adcInit
   _adcRead
   _lcdInit
     _lcdCmd
       _lcdPort
     _lcdPort
   _position1
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _position2
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _print
     _lcdPrint
       _lcdWriteChar
         _lcdPort
     _lcdSetCursor
       _lcdCmd
         _lcdPort
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      6D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      10       7       20.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      6D      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu May 09 01:58:53 2019

                      pc 0002              __CFG_CP$OFF 0000                       l43 0C54  
                     l44 0C57                       l45 0C5B                       l46 0C5C  
                     l47 0C60                       l48 0C61                       l81 0CB9  
                     l49 0C65                       l95 018A                       l97 018D  
                     l99 01A3                       fsr 0004      __Umul8_16@word_mpld 0076  
                    l114 00BE                      l116 00C1                      l133 0F87  
                    l118 00D7                      l444 0E78                      l550 037A  
                    l544 0303                      l548 039C                      l652 07E8  
                    l565 0455                      l586 04D5                      l578 04BD  
                    l691 0F09                      l692 0F13                      l684 0EF3  
                    l678 0EB3                      l697 0CD4                      _RD2 0042  
                    _RD3 0043                      _RD4 0044                      _RD5 0045  
                    _RD6 0046                      _RD7 0047             __CFG_CPD$OFF 0000  
                    fsr0 0004                      indf 0000             __CFG_FOSC$XT 0000  
           ___flmul@aexp 0032             ___flmul@bexp 0033             ___flmul@sign 002D  
           ___flmul@temp 0038             ___flmul@prod 0034           ??_lcdWriteChar 0071  
          lcdWriteChar@a 0074            lcdWriteChar@y 0073             __CFG_LVP$OFF 0000  
           ___fltol@exp1 0044                     l2011 052C                     l2103 07D1  
                   l2007 0522                     l2009 0524                     l2121 0EAB  
                   l2019 053A                     l2131 0EC6                     l2141 0F07  
                   l2133 0ED8                     l2071 073A                     l2143 0EF8  
                   l2127 0EC2                     l2215 015E                     l2073 0757  
                   l2217 016E                     l2305 0F6D                     l2083 0770  
                   l2155 0F30                     l2235 01A8                     l2251 0092  
                   l1611 0D6E                     l1603 0D4A                     l2323 0FB5  
                   l2093 07A2                     l2237 01CA                     l2253 00A2  
                   l1605 0D58                     l2079 076E                     l2271 00DC  
                   l1615 0D79                     l1801 02D9                     l2097 07B8  
                   l2273 00FE                     l1633 0D32                     l1713 0237  
                   l1627 0D16                     l1707 0235                     l1645 0CCC  
                   l1629 0D24                     l1637 0D3D                     l1733 026B  
                   l1725 0267                     l2349 0213                     l1903 03DD  
                   l1823 02FB                     l1751 0E3D                     l1719 0258  
                   l1735 01E0                     l1921 0467                     l1913 0447  
                   l1681 0C84                     l1665 0DA3                     l1737 02AC  
                   l1819 02F8                     l1747 0E34                     l1691 0200  
                   l1829 030D                     l1943 0488                     l1935 047D  
                   l1767 0E64                     l1929 0476                     l1937 047F  
                   l1777 0E87                     l1769 0E74                     l1697 021E  
                   l1947 048A                     l1867 0385                     l1859 0349  
                   l1795 02CE                     l1965 04CD                     l1893 03CB  
                   l1885 03AA                     l1869 0387                     l1877 0396  
                   l1895 03CD                     l1799 02D1                     l1991 04FF  
                   l1969 04D1                     l1993 0507                     l1989 04FD  
                   STR_1 0810                     u2211 0408                     u2203 03EF  
                   u2115 038B                     u2220 041C                     u2212 0409  
                   u2221 041D                     u2213 040E                     u2222 0422  
                   u2214 040F                     u2070 0369                     u2223 0423  
                   u2215 0414                     u2216 0415                     u2080 036A  
                   u2065 035D                     u3025 00CB                     u3107 0DD8  
                   u3035 00F2                     u3117 0DE7                     u1605 0D4D  
                   u3127 0DF5                     u3137 0C78                     u2265 0469  
                   u1625 0D59                     u1705 0D33                     u3147 0CB1  
                   u2195 03D1                     u1635 0D65                     u2365 04A7  
                   u1645 0D6F                     u3077 0D0B                     u1735 0CD5  
                   u3087 0027                     u2625 06E3                     u3097 0037  
                   u1585 0017                     u1825 024E                     u2555 05EA  
                   u1915 0E65                     u1675 0D19                     u2645 0708  
                   u1765 0D8A                     u1695 0D2A                     u2665 0726  
                   u2585 0647                     u1945 0E7D                     u1785 0DAF  
                   u2675 073E                     u2915 0F1B                     u2835 0ECF  
                   u2765 078D                     u1885 0E46                     u2775 07AB  
                   u2695 0749                     u2855 0EEB                     u2785 07C3  
                   u2875 0F00                     u2975 0197                     u2985 01BE  
           __CFG_WRT$OFF 0000                     _main 0F39                     btemp 007E  
                   start 0000            ___fltol@sign1 0043          __end_of___fladd 04E0  
                  ?_main 0070          __end_of_adcInit 0C4D          __end_of_adcRead 0CC2  
          __CFG_WDTE$OFF 0000          __end_of___flmul 07F5          __end_of___fltol 0E96  
        __end_of___lwdiv 0D7E          __end_of___lwmod 0D42                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088          __end_of_lcdInit 0E29  
        __end_of_lcdPort 0C67             main@time_253 0068          __end_of_dpowers 0810  
                  _print 0CE5           __CFG_BOREN$OFF 0000                    pclath 000A  
                  status 0003                    wtemp0 007E          __end_of_sprintf 02B1  
        __initialization 07F5             __end_of_main 1000                   ??_main 0065  
   __end_of_lcdSetCursor 0DC8                   _ADRESH 001E                   _ADRESL 009E  
                 ?_print 002D         __end_of___xxtofl 0F39           __CFG_PWRTE$OFF 0000  
       __end_of_lcdPrint 0C9F            position1@time 0062            position2@time 005F  
              ??___fladd 0042                ??_adcInit 0070                ??_adcRead 0072  
   __end_of_lcdWriteChar 003D                ??___flmul 0028                ??___fltol 003E  
                 _lcdCmd 0C67                ??___lwdiv 0074                ??___lwmod 007C  
              ??_lcdInit 0074                ??_lcdPort 0070       __size_of__Umul8_16 0023  
                 print@y 002F                ??_sprintf 0023             ___xxtofl@arg 007A  
           ___xxtofl@exp 0079             ___xxtofl@val 0070  __end_of__initialization 07FC  
             ___fltol@f1 003A           __pcstackCOMMON 0070            __end_of_print 0D10  
       lcdWriteChar@temp 0072                  ??_print 0030               __pbssBANK1 00A0  
      __end_of__Umul8_16 0CE5               __pmaintext 0F39                  ?_lcdCmd 0070  
  __size_of_lcdSetCursor 004A                ?___xxtofl 0070       __size_of_position1 00D0  
     __size_of_position2 00CC                ?_lcdPrint 0070               __stringtab 0800  
  __size_of_lcdWriteChar 0037             _lcdSetCursor 0D7E           position1@j_218 005F  
         position2@j_226 005D                  ___fladd 02B1                  _adcInit 0C3D  
                _adcRead 0C9F                  ___flmul 04E0                  ___fltol 0E29  
                ___lwdiv 0D42                  ___lwmod 0D10          __size_of_lcdCmd 001A  
                _lcdInit 0DC8                  __ptext1 0CE5                  __ptext2 01D9  
                __ptext3 0D10                  __ptext4 0D42                  __ptext5 0D7E  
                __ptext6 0C81                  __ptext7 0006                  __ptext8 003D  
                __ptext9 0109                  _lcdPort 0C4D                  _dpowers 0806  
                _mensaje 00A0               ??___xxtofl 0074                  lcdCmd@a 0073  
             ??_lcdPrint 0075                  main@adc 006A                  main@ang 006C  
                _sprintf 01D9                  clrloop0 0C36             _lcdWriteChar 0006  
   end_of_initialization 07FC        __end_of_position1 01D9        __end_of_position2 0109  
              _PORTBbits 0006                _PORTCbits 0007              ___fladd@grs 004D  
          ___xxtofl@sign 0078              ___flmul@grs 002E               main@angulo 006D  
         __end_of_lcdCmd 0C81      start_initialization 07F5                 ??_lcdCmd 0071  
              __Umul8_16 0CC2                ___fladd@a 003E                ___fladd@b 003A  
              ___flmul@a 0024                ___flmul@b 0020                ___latbits 0002  
          __pcstackBANK0 0020        __size_of___xxtofl 00A3        __size_of_lcdPrint 001E  
            sprintf@flag 0027              sprintf@prec 0028         ___lwdiv@dividend 0072  
               ?___fladd 003A                 ?_adcInit 0070                 ?_adcRead 0070  
               ?___flmul 0020                 ?___fltol 003A               ?__Umul8_16 0070  
               ?___lwdiv 0070                 ?___lwmod 0078                __pstrings 0800  
               ?_lcdInit 0070                 ?_lcdPort 0070        adcRead@adcChannel 0074  
       ___lwdiv@quotient 0075                 ?_sprintf 0020           __size_of_print 002B  
              clear_ram0 0C35                lcdPrint@a 0078                lcdPrint@i 0076  
              _position1 0109                _position2 003D               _ADCON0bits 001F  
             print@valor 002D              __stringbase 0805               _ADCON1bits 009F  
             position1@i 0061               position1@j 005D               position2@i 0061  
             position2@j 005B         lcdSetCursor@temp 007A          position1@angule 0064  
        position2@angule 0062              ??__Umul8_16 0072         __size_of___fladd 022F  
       __size_of_adcInit 0010         __size_of_adcRead 0023         __size_of___flmul 0315  
       __size_of___fltol 006D         __size_of___lwdiv 003C               ?_position1 004E  
             ?_position2 0070         __size_of___lwmod 0032       __end_of__stringtab 0806  
       __size_of_lcdInit 0061         __size_of_lcdPort 001A               sprintf@val 0029  
               ___xxtofl 0E96          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
               __ptext10 0E96                 __ptext11 0E29                 __ptext12 04E0  
               __ptext13 0CC2                 __ptext14 02B1                 __ptext15 0DC8  
               __ptext16 0C67                 __ptext17 0C4D                 __ptext18 0C9F  
               __ptext19 0C3D                 _lcdPrint 0C81         __size_of_sprintf 00D8  
          lcdSetCursor@a 0077            lcdSetCursor@b 0074            lcdSetCursor@y 0079  
          lcdSetCursor@z 0078            __size_of_main 00C7                 lcdPort@a 0070  
               main@time 0066                sprintf@ap 0026                sprintf@sp 002B  
       ___lwmod@dividend 007A            ?_lcdSetCursor 0074                stringcode 0800  
            ??_position1 0050              ??_position2 004E   __Umul8_16@multiplicand 0070  
          _position1$206 0055            _position1$207 0059            _position2$222 0053  
          _position2$223 0057                 sprintf@c 002C                 sprintf@f 0020  
        ___lwmod@divisor 0078          ___lwmod@counter 007D                 stringdir 0800  
               stringtab 0800            ?_lcdWriteChar 0070            ___fladd@signs 004A  
           ___fladd@aexp 004B             ___fladd@bexp 004C     __Umul8_16@multiplier 0078  
         ??_lcdSetCursor 0075        __Umul8_16@product 0074  
