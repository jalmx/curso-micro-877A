

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed May 15 17:19:48 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.05
    36                           ; Generated 20/12/2018 GMT
    37                           ; 
    38                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F877A Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0098                     	;# 
   178  0099                     	;# 
   179  009C                     	;# 
   180  009D                     	;# 
   181  009E                     	;# 
   182  009F                     	;# 
   183  010C                     	;# 
   184  010D                     	;# 
   185  010E                     	;# 
   186  010F                     	;# 
   187  018C                     	;# 
   188  018D                     	;# 
   189                           
   190                           	psect	strings
   191  0800                     __pstrings:	
   192  0800                     stringtab:	
   193  0800                     __stringtab:	
   194  0800                     stringcode:	
   195                           ;	String table - string pointers are 1 byte each
   196                           
   197  0800                     stringdir:	
   198  0800  3008               	movlw	high stringdir
   199  0801  008A               	movwf	10
   200  0802  0804               	movf	4,w
   201  0803  0A84               	incf	4,f
   202  0804  0782               	addwf	2,f
   203  0805                     __stringbase:	
   204  0805  3400               	retlw	0
   205  0806                     __end_of__stringtab:	
   206  0806                     _dpowers:	
   207  0806  3401               	retlw	1
   208  0807  3400               	retlw	0
   209  0808  340A               	retlw	10
   210  0809  3400               	retlw	0
   211  080A  3464               	retlw	100
   212  080B  3400               	retlw	0
   213  080C  34E8               	retlw	232
   214  080D  3403               	retlw	3
   215  080E  3410               	retlw	16
   216  080F  3427               	retlw	39
   217  0810                     __end_of_dpowers:	
   218  0007                     _PORTCbits	set	7
   219  0006                     _PORTB	set	6
   220  0007                     _PORTC	set	7
   221  0006                     _PORTBbits	set	6
   222  001E                     _ADRESH	set	30
   223  001F                     _ADCON0bits	set	31
   224  0008                     _PORTD	set	8
   225  0043                     _RD3	set	67
   226  0042                     _RD2	set	66
   227  0047                     _RD7	set	71
   228  0046                     _RD6	set	70
   229  0045                     _RD5	set	69
   230  0044                     _RD4	set	68
   231  0086                     _TRISB	set	134
   232  0087                     _TRISC	set	135
   233  009E                     _ADRESL	set	158
   234  009F                     _ADCON1bits	set	159
   235  0088                     _TRISD	set	136
   236  0810                     STR_1:	
   237  0810  3441               	retlw	65	;'A'
   238  0811  346E               	retlw	110	;'n'
   239  0812  3467               	retlw	103	;'g'
   240  0813  3475               	retlw	117	;'u'
   241  0814  346C               	retlw	108	;'l'
   242  0815  3465               	retlw	101	;'e'
   243  0816  3420               	retlw	32	;' '
   244  0817  3431               	retlw	49	;'1'
   245  0818  343A               	retlw	58	;':'
   246  0819  3420               	retlw	32	;' '
   247  081A  3425               	retlw	37	;'%'
   248  081B  3464               	retlw	100	;'d'
   249  081C  3400               	retlw	0
   250  081D                     STR_2:	
   251  081D  3441               	retlw	65	;'A'
   252  081E  346E               	retlw	110	;'n'
   253  081F  3467               	retlw	103	;'g'
   254  0820  3475               	retlw	117	;'u'
   255  0821  346C               	retlw	108	;'l'
   256  0822  3465               	retlw	101	;'e'
   257  0823  3420               	retlw	32	;' '
   258  0824  3432               	retlw	50	;'2'
   259  0825  343A               	retlw	58	;':'
   260  0826  3420               	retlw	32	;' '
   261  0827  3425               	retlw	37	;'%'
   262  0828  3464               	retlw	100	;'d'
   263  0829  3400               	retlw	0
   264                           
   265                           ; #config settings
   266  0000                     
   267                           	psect	cinit
   268  07F5                     start_initialization:	
   269  07F5                     __initialization:	
   270                           
   271                           ; Clear objects allocated to BANK1
   272  07F5  1383               	bcf	3,7	;select IRP bank0
   273  07F6  30A0               	movlw	low __pbssBANK1
   274  07F7  0084               	movwf	4
   275  07F8  30B0               	movlw	low (__pbssBANK1+16)
   276  07F9  120A  158A  2441   	fcall	clear_ram0
   277  07FC                     end_of_initialization:	
   278                           ;End of C runtime variable initialization code
   279                           
   280  07FC                     __end_of__initialization:	
   281  07FC  0183               	clrf	3
   282  07FD  120A  118A  296D   	ljmp	_main	;jump to C main() function
   283                           
   284                           	psect	bssBANK1
   285  00A0                     __pbssBANK1:	
   286  00A0                     _mensaje:	
   287  00A0                     	ds	16
   288                           
   289                           	psect	clrtext
   290  0C41                     clear_ram0:	
   291                           ;	Called with FSR containing the base address, and
   292                           ;	W with the last address+1
   293                           
   294  0C41  0064               	clrwdt	;clear the watchdog before getting into this loop
   295  0C42                     clrloop0:	
   296  0C42  0180               	clrf	0	;clear RAM location pointed to by FSR
   297  0C43  0A84               	incf	4,f	;increment pointer
   298  0C44  0604               	xorwf	4,w	;XOR with final address
   299  0C45  1903               	btfsc	3,2	;have we reached the end yet?
   300  0C46  3400               	retlw	0	;all done for this memory range, return
   301  0C47  0604               	xorwf	4,w	;XOR again to restore value
   302  0C48  2C42               	goto	clrloop0	;do the next byte
   303                           
   304                           	psect	cstackBANK1
   305  00B0                     __pcstackBANK1:	
   306  00B0                     main@angulo1Old:	
   307                           
   308                           ; 2 bytes @ 0x0
   309  00B0                     	ds	2
   310  00B2                     main@adcOld:	
   311                           
   312                           ; 2 bytes @ 0x2
   313  00B2                     	ds	2
   314  00B4                     main@adc:	
   315                           
   316                           ; 2 bytes @ 0x4
   317  00B4                     	ds	2
   318  00B6                     main@angule2:	
   319                           
   320                           ; 1 bytes @ 0x6
   321  00B6                     	ds	1
   322  00B7                     main@angulo1:	
   323                           
   324                           ; 2 bytes @ 0x7
   325  00B7                     	ds	2
   326                           
   327                           	psect	cstackCOMMON
   328  0070                     __pcstackCOMMON:	
   329  0070                     ?_lcdPort:	
   330  0070                     ??_lcdPort:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_lcdCmd:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_lcdClear:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ?_lcdInit:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?_lcdWriteChar:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ?_lcdPrint:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ?_adcInit:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0070                     ??_adcInit:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0070                     ?_position2:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0070                     ?_main:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0070                     ?__Umul8_16:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0070                     ?_adcRead:	
   364                           ; 2 bytes @ 0x0
   365                           
   366  0070                     ?___lwdiv:	
   367                           ; 2 bytes @ 0x0
   368                           
   369  0070                     ?_position1:	
   370                           ; 2 bytes @ 0x0
   371                           
   372  0070                     ?___xxtofl:	
   373                           ; 4 bytes @ 0x0
   374                           
   375  0070                     lcdPort@a:	
   376                           ; 4 bytes @ 0x0
   377                           
   378  0070                     __Umul8_16@multiplicand:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0070                     ___lwdiv@divisor:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     ___xxtofl@val:	
   385                           ; 2 bytes @ 0x0
   386                           
   387                           
   388                           ; 4 bytes @ 0x0
   389  0070                     	ds	1
   390  0071                     ??_lcdCmd:	
   391  0071                     ??_lcdWriteChar:	
   392                           ; 1 bytes @ 0x1
   393                           
   394                           
   395                           ; 1 bytes @ 0x1
   396  0071                     	ds	1
   397  0072                     ??__Umul8_16:	
   398  0072                     ??_adcRead:	
   399                           ; 1 bytes @ 0x2
   400                           
   401  0072                     lcdWriteChar@temp:	
   402                           ; 1 bytes @ 0x2
   403                           
   404  0072                     ___lwdiv@dividend:	
   405                           ; 1 bytes @ 0x2
   406                           
   407                           
   408                           ; 2 bytes @ 0x2
   409  0072                     	ds	1
   410  0073                     lcdCmd@a:	
   411  0073                     lcdWriteChar@y:	
   412                           ; 1 bytes @ 0x3
   413                           
   414                           
   415                           ; 1 bytes @ 0x3
   416  0073                     	ds	1
   417  0074                     ??_lcdClear:	
   418  0074                     ?_lcdSetCursor:	
   419                           ; 1 bytes @ 0x4
   420                           
   421  0074                     ??_lcdInit:	
   422                           ; 1 bytes @ 0x4
   423                           
   424  0074                     ??___lwdiv:	
   425                           ; 1 bytes @ 0x4
   426                           
   427  0074                     ??___xxtofl:	
   428                           ; 1 bytes @ 0x4
   429                           
   430  0074                     lcdSetCursor@b:	
   431                           ; 1 bytes @ 0x4
   432                           
   433  0074                     lcdWriteChar@a:	
   434                           ; 1 bytes @ 0x4
   435                           
   436  0074                     adcRead@adcChannel:	
   437                           ; 1 bytes @ 0x4
   438                           
   439  0074                     __Umul8_16@product:	
   440                           ; 1 bytes @ 0x4
   441                           
   442                           
   443                           ; 2 bytes @ 0x4
   444  0074                     	ds	1
   445  0075                     ??_lcdSetCursor:	
   446  0075                     ??_lcdPrint:	
   447                           ; 1 bytes @ 0x5
   448                           
   449  0075                     ___lwdiv@quotient:	
   450                           ; 1 bytes @ 0x5
   451                           
   452                           
   453                           ; 2 bytes @ 0x5
   454  0075                     	ds	1
   455  0076                     lcdPrint@i:	
   456  0076                     __Umul8_16@word_mpld:	
   457                           ; 2 bytes @ 0x6
   458                           
   459                           
   460                           ; 2 bytes @ 0x6
   461  0076                     	ds	1
   462  0077                     lcdSetCursor@a:	
   463  0077                     ___lwdiv@counter:	
   464                           ; 1 bytes @ 0x7
   465                           
   466                           
   467                           ; 1 bytes @ 0x7
   468  0077                     	ds	1
   469  0078                     ?___lwmod:	
   470  0078                     lcdSetCursor@z:	
   471                           ; 2 bytes @ 0x8
   472                           
   473  0078                     lcdPrint@a:	
   474                           ; 1 bytes @ 0x8
   475                           
   476  0078                     ___xxtofl@sign:	
   477                           ; 1 bytes @ 0x8
   478                           
   479  0078                     __Umul8_16@multiplier:	
   480                           ; 1 bytes @ 0x8
   481                           
   482  0078                     ___lwmod@divisor:	
   483                           ; 1 bytes @ 0x8
   484                           
   485                           
   486                           ; 2 bytes @ 0x8
   487  0078                     	ds	1
   488  0079                     lcdSetCursor@y:	
   489  0079                     ___xxtofl@exp:	
   490                           ; 1 bytes @ 0x9
   491                           
   492                           
   493                           ; 1 bytes @ 0x9
   494  0079                     	ds	1
   495  007A                     lcdSetCursor@temp:	
   496  007A                     ___lwmod@dividend:	
   497                           ; 1 bytes @ 0xA
   498                           
   499  007A                     ___xxtofl@arg:	
   500                           ; 2 bytes @ 0xA
   501                           
   502                           
   503                           ; 4 bytes @ 0xA
   504  007A                     	ds	2
   505  007C                     ??___lwmod:	
   506                           
   507                           ; 1 bytes @ 0xC
   508  007C                     	ds	1
   509  007D                     ___lwmod@counter:	
   510                           
   511                           ; 1 bytes @ 0xD
   512  007D                     	ds	1
   513                           
   514                           	psect	cstackBANK0
   515  0020                     __pcstackBANK0:	
   516  0020                     ?_sprintf:	
   517  0020                     ?___flmul:	
   518                           ; 2 bytes @ 0x0
   519                           
   520  0020                     sprintf@f:	
   521                           ; 4 bytes @ 0x0
   522                           
   523  0020                     ___flmul@b:	
   524                           ; 1 bytes @ 0x0
   525                           
   526                           
   527                           ; 4 bytes @ 0x0
   528  0020                     	ds	3
   529  0023                     ??_sprintf:	
   530                           
   531                           ; 1 bytes @ 0x3
   532  0023                     	ds	1
   533  0024                     ___flmul@a:	
   534                           
   535                           ; 4 bytes @ 0x4
   536  0024                     	ds	2
   537  0026                     sprintf@ap:	
   538                           
   539                           ; 1 bytes @ 0x6
   540  0026                     	ds	1
   541  0027                     sprintf@flag:	
   542                           
   543                           ; 1 bytes @ 0x7
   544  0027                     	ds	1
   545  0028                     ??___flmul:	
   546  0028                     sprintf@prec:	
   547                           ; 1 bytes @ 0x8
   548                           
   549                           
   550                           ; 1 bytes @ 0x8
   551  0028                     	ds	1
   552  0029                     sprintf@val:	
   553                           
   554                           ; 2 bytes @ 0x9
   555  0029                     	ds	2
   556  002B                     sprintf@sp:	
   557                           
   558                           ; 1 bytes @ 0xB
   559  002B                     	ds	1
   560  002C                     sprintf@c:	
   561                           
   562                           ; 1 bytes @ 0xC
   563  002C                     	ds	1
   564  002D                     ?_print:	
   565  002D                     ___flmul@sign:	
   566                           ; 1 bytes @ 0xD
   567                           
   568  002D                     print@valor1:	
   569                           ; 1 bytes @ 0xD
   570                           
   571                           
   572                           ; 2 bytes @ 0xD
   573  002D                     	ds	1
   574  002E                     ___flmul@grs:	
   575                           
   576                           ; 4 bytes @ 0xE
   577  002E                     	ds	1
   578  002F                     print@valor2:	
   579                           
   580                           ; 2 bytes @ 0xF
   581  002F                     	ds	2
   582  0031                     ??_print:	
   583                           
   584                           ; 1 bytes @ 0x11
   585  0031                     	ds	1
   586  0032                     ___flmul@aexp:	
   587                           
   588                           ; 1 bytes @ 0x12
   589  0032                     	ds	1
   590  0033                     ___flmul@bexp:	
   591                           
   592                           ; 1 bytes @ 0x13
   593  0033                     	ds	1
   594  0034                     ___flmul@prod:	
   595                           
   596                           ; 4 bytes @ 0x14
   597  0034                     	ds	4
   598  0038                     ___flmul@temp:	
   599                           
   600                           ; 2 bytes @ 0x18
   601  0038                     	ds	2
   602  003A                     ?___fladd:	
   603  003A                     ___fladd@b:	
   604                           ; 4 bytes @ 0x1A
   605                           
   606                           
   607                           ; 4 bytes @ 0x1A
   608  003A                     	ds	4
   609  003E                     ___fladd@a:	
   610                           
   611                           ; 4 bytes @ 0x1E
   612  003E                     	ds	4
   613  0042                     ??___fladd:	
   614                           
   615                           ; 1 bytes @ 0x22
   616  0042                     	ds	8
   617  004A                     ___fladd@signs:	
   618                           
   619                           ; 1 bytes @ 0x2A
   620  004A                     	ds	1
   621  004B                     ___fladd@aexp:	
   622                           
   623                           ; 1 bytes @ 0x2B
   624  004B                     	ds	1
   625  004C                     ___fladd@bexp:	
   626                           
   627                           ; 1 bytes @ 0x2C
   628  004C                     	ds	1
   629  004D                     ___fladd@grs:	
   630                           
   631                           ; 1 bytes @ 0x2D
   632  004D                     	ds	1
   633  004E                     ?_convertion:	
   634                           
   635                           ; 4 bytes @ 0x2E
   636  004E                     	ds	4
   637  0052                     ??_convertion:	
   638                           
   639                           ; 1 bytes @ 0x32
   640  0052                     	ds	4
   641  0056                     _convertion$205:	
   642                           
   643                           ; 4 bytes @ 0x36
   644  0056                     	ds	4
   645  005A                     _convertion$206:	
   646                           
   647                           ; 4 bytes @ 0x3A
   648  005A                     	ds	4
   649  005E                     convertion@angule:	
   650                           
   651                           ; 1 bytes @ 0x3E
   652  005E                     	ds	1
   653  005F                     ?___fltol:	
   654  005F                     ___fltol@f1:	
   655                           ; 4 bytes @ 0x3F
   656                           
   657                           
   658                           ; 4 bytes @ 0x3F
   659  005F                     	ds	4
   660  0063                     ??___fltol:	
   661                           
   662                           ; 1 bytes @ 0x43
   663  0063                     	ds	5
   664  0068                     ___fltol@sign1:	
   665                           
   666                           ; 1 bytes @ 0x48
   667  0068                     	ds	1
   668  0069                     ___fltol@exp1:	
   669                           
   670                           ; 1 bytes @ 0x49
   671  0069                     	ds	1
   672  006A                     ??_position1:	
   673  006A                     ??_position2:	
   674                           ; 1 bytes @ 0x4A
   675                           
   676                           
   677                           ; 1 bytes @ 0x4A
   678  006A                     	ds	2
   679  006C                     position1@time:	
   680  006C                     position2@time:	
   681                           ; 1 bytes @ 0x4C
   682                           
   683                           
   684                           ; 1 bytes @ 0x4C
   685  006C                     	ds	1
   686  006D                     position1@angule:	
   687  006D                     position2@angule:	
   688                           ; 1 bytes @ 0x4D
   689                           
   690                           
   691                           ; 1 bytes @ 0x4D
   692  006D                     	ds	1
   693  006E                     ??_main:	
   694                           
   695                           ; 1 bytes @ 0x4E
   696  006E                     	ds	2
   697                           
   698                           	psect	maintext
   699  016D                     __pmaintext:	
   700 ;;
   701 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   702 ;;
   703 ;; *************** function _main *****************
   704 ;; Defined at:
   705 ;;		line 22 in file "main.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;		None
   708 ;; Auto vars:     Size  Location     Type
   709 ;;  angulo1         2    7[BANK1 ] unsigned int 
   710 ;;  adc             2    4[BANK1 ] unsigned int 
   711 ;;  adcOld          2    2[BANK1 ] unsigned int 
   712 ;;  angulo1Old      2    0[BANK1 ] unsigned int 
   713 ;;  angule2         1    6[BANK1 ] unsigned char 
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      void 
   716 ;; Registers used:
   717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   718 ;; Tracked objects:
   719 ;;		On entry : B00/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   723 ;;      Params:         0       0       0       0       0
   724 ;;      Locals:         0       0       9       0       0
   725 ;;      Temps:          0       2       0       0       0
   726 ;;      Totals:         0       2       9       0       0
   727 ;;Total ram usage:       11 bytes
   728 ;; Hardware stack levels required when called:    4
   729 ;; This function calls:
   730 ;;		___flmul
   731 ;;		___fltol
   732 ;;		___xxtofl
   733 ;;		_adcInit
   734 ;;		_adcRead
   735 ;;		_lcdInit
   736 ;;		_position1
   737 ;;		_position2
   738 ;;		_print
   739 ;; This function is called by:
   740 ;;		Startup code after reset
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           
   745                           ;psect for function _main
   746  016D                     _main:	
   747                           
   748                           ;main.c: 23:     TRISC = 255;
   749                           
   750                           ;incstack = 0
   751                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   752  016D  30FF               	movlw	255
   753  016E  1683               	bsf	3,5	;RP0=1, select bank1
   754  016F  1303               	bcf	3,6	;RP1=0, select bank1
   755  0170  0087               	movwf	7	;volatile
   756                           
   757                           ;main.c: 24:     PORTC = 0;
   758  0171  1283               	bcf	3,5	;RP0=0, select bank0
   759  0172  1303               	bcf	3,6	;RP1=0, select bank0
   760  0173  0187               	clrf	7	;volatile
   761                           
   762                           ;main.c: 25:     TRISB = 0;
   763  0174  1683               	bsf	3,5	;RP0=1, select bank1
   764  0175  1303               	bcf	3,6	;RP1=0, select bank1
   765  0176  0186               	clrf	6	;volatile
   766                           
   767                           ;main.c: 26:     PORTB = 0;
   768  0177  1283               	bcf	3,5	;RP0=0, select bank0
   769  0178  1303               	bcf	3,6	;RP1=0, select bank0
   770  0179  0186               	clrf	6	;volatile
   771                           
   772                           ;main.c: 28:     adcInit();
   773  017A  120A  158A  2454  120A  118A  	fcall	_adcInit
   774                           
   775                           ;main.c: 29:     lcdInit();
   776  017F  120A  158A  268F  120A  118A  	fcall	_lcdInit
   777                           
   778                           ;main.c: 31:     unsigned int angulo1 = 0, angulo1Old = 0, adc = 0, adcOld = 0;
   779  0184  1683               	bsf	3,5	;RP0=1, select bank1
   780  0185  1303               	bcf	3,6	;RP1=0, select bank1
   781  0186  01B7               	clrf	main@angulo1^(0+128)
   782  0187  01B8               	clrf	(main@angulo1+1)^(0+128)
   783  0188  01B0               	clrf	main@angulo1Old^(0+128)
   784  0189  01B1               	clrf	(main@angulo1Old+1)^(0+128)
   785  018A  01B2               	clrf	main@adcOld^(0+128)
   786  018B  01B3               	clrf	(main@adcOld+1)^(0+128)
   787                           
   788                           ;main.c: 32:     unsigned char angule2 = 0;
   789  018C  01B6               	clrf	main@angule2^(0+128)
   790                           
   791                           ;main.c: 33:     print(angulo1, 0);
   792  018D  3000               	movlw	0
   793  018E  1283               	bcf	3,5	;RP0=0, select bank0
   794  018F  1303               	bcf	3,6	;RP1=0, select bank0
   795  0190  00AD               	movwf	print@valor1
   796  0191  00AE               	movwf	print@valor1+1
   797  0192  3000               	movlw	0
   798  0193  00AF               	movwf	print@valor2
   799  0194  00B0               	movwf	print@valor2+1
   800  0195  120A  158A  2643  120A  118A  	fcall	_print
   801                           
   802                           ;main.c: 34:     _delay((unsigned long)((10)*(4000000/4000.0)));
   803  019A  300D               	movlw	13
   804  019B  1283               	bcf	3,5	;RP0=0, select bank0
   805  019C  1303               	bcf	3,6	;RP1=0, select bank0
   806  019D  00EF               	movwf	??_main+1
   807  019E  30FB               	movlw	251
   808  019F  00EE               	movwf	??_main
   809  01A0                     u3037:	
   810  01A0  0BEE               	decfsz	??_main,f
   811  01A1  29A0               	goto	u3037
   812  01A2  0BEF               	decfsz	??_main+1,f
   813  01A3  29A0               	goto	u3037
   814  01A4                     l2252:	
   815                           
   816                           ;main.c: 38:         if (PORTCbits.RC0 && angulo1 < 180) {
   817  01A4  1283               	bcf	3,5	;RP0=0, select bank0
   818  01A5  1303               	bcf	3,6	;RP1=0, select bank0
   819  01A6  1C07               	btfss	7,0	;volatile
   820  01A7  29C3               	goto	l118
   821  01A8  3000               	movlw	0
   822  01A9  1683               	bsf	3,5	;RP0=1, select bank1
   823  01AA  1303               	bcf	3,6	;RP1=0, select bank1
   824  01AB  0238               	subwf	(main@angulo1+1)^(0+128),w
   825  01AC  30B4               	movlw	180
   826  01AD  1903               	skipnz
   827  01AE  0237               	subwf	main@angulo1^(0+128),w
   828  01AF  1803               	skipnc
   829  01B0  29C3               	goto	l118
   830                           
   831                           ;main.c: 39:             angulo1++;
   832  01B1  3001               	movlw	1
   833  01B2  07B7               	addwf	main@angulo1^(0+128),f
   834  01B3  1803               	skipnc
   835  01B4  0AB8               	incf	(main@angulo1+1)^(0+128),f
   836  01B5  3000               	movlw	0
   837  01B6  07B8               	addwf	(main@angulo1+1)^(0+128),f
   838                           
   839                           ;main.c: 40:             _delay((unsigned long)((150)*(4000000/4000.0)));
   840  01B7  30C3               	movlw	195
   841  01B8  1283               	bcf	3,5	;RP0=0, select bank0
   842  01B9  1303               	bcf	3,6	;RP1=0, select bank0
   843  01BA  00EF               	movwf	??_main+1
   844  01BB  30CC               	movlw	204
   845  01BC  00EE               	movwf	??_main
   846  01BD                     u3047:	
   847  01BD  0BEE               	decfsz	??_main,f
   848  01BE  29BD               	goto	u3047
   849  01BF  0BEF               	decfsz	??_main+1,f
   850  01C0  29BD               	goto	u3047
   851  01C1  0000               	nop
   852                           
   853                           ;main.c: 41:         } else if (PORTCbits.RC1 && angulo1 > 0) {
   854  01C2  29DD               	goto	l119
   855  01C3                     l118:	
   856  01C3  1283               	bcf	3,5	;RP0=0, select bank0
   857  01C4  1C87               	btfss	7,1	;volatile
   858  01C5  29DD               	goto	l119
   859  01C6  1683               	bsf	3,5	;RP0=1, select bank1
   860  01C7  1303               	bcf	3,6	;RP1=0, select bank1
   861  01C8  0837               	movf	main@angulo1^(0+128),w
   862  01C9  0438               	iorwf	(main@angulo1+1)^(0+128),w
   863  01CA  1903               	btfsc	3,2
   864  01CB  29DD               	goto	l119
   865                           
   866                           ;main.c: 42:             angulo1--;
   867  01CC  3001               	movlw	1
   868  01CD  02B7               	subwf	main@angulo1^(0+128),f
   869  01CE  3000               	movlw	0
   870  01CF  1C03               	skipc
   871  01D0  03B8               	decf	(main@angulo1+1)^(0+128),f
   872  01D1  02B8               	subwf	(main@angulo1+1)^(0+128),f
   873                           
   874                           ;main.c: 43:             _delay((unsigned long)((150)*(4000000/4000.0)));
   875  01D2  30C3               	movlw	195
   876  01D3  1283               	bcf	3,5	;RP0=0, select bank0
   877  01D4  1303               	bcf	3,6	;RP1=0, select bank0
   878  01D5  00EF               	movwf	??_main+1
   879  01D6  30CC               	movlw	204
   880  01D7  00EE               	movwf	??_main
   881  01D8                     u3057:	
   882  01D8  0BEE               	decfsz	??_main,f
   883  01D9  29D8               	goto	u3057
   884  01DA  0BEF               	decfsz	??_main+1,f
   885  01DB  29D8               	goto	u3057
   886  01DC  0000               	nop
   887  01DD                     l119:	
   888                           
   889                           ;main.c: 46:         if (angulo1 != angulo1Old) {
   890  01DD  1683               	bsf	3,5	;RP0=1, select bank1
   891  01DE  1303               	bcf	3,6	;RP1=0, select bank1
   892  01DF  0831               	movf	(main@angulo1Old+1)^(0+128),w
   893  01E0  0638               	xorwf	(main@angulo1+1)^(0+128),w
   894  01E1  1D03               	skipz
   895  01E2  29E5               	goto	u3015
   896  01E3  0830               	movf	main@angulo1Old^(0+128),w
   897  01E4  0637               	xorwf	main@angulo1^(0+128),w
   898  01E5                     u3015:	
   899  01E5  1903               	skipnz
   900  01E6  2A24               	goto	l2270
   901                           
   902                           ;main.c: 47:             print(angulo1, angule2);
   903  01E7  0838               	movf	(main@angulo1+1)^(0+128),w
   904  01E8  1283               	bcf	3,5	;RP0=0, select bank0
   905  01E9  1303               	bcf	3,6	;RP1=0, select bank0
   906  01EA  00AE               	movwf	print@valor1+1
   907  01EB  1683               	bsf	3,5	;RP0=1, select bank1
   908  01EC  1303               	bcf	3,6	;RP1=0, select bank1
   909  01ED  0837               	movf	main@angulo1^(0+128),w
   910  01EE  1283               	bcf	3,5	;RP0=0, select bank0
   911  01EF  1303               	bcf	3,6	;RP1=0, select bank0
   912  01F0  00AD               	movwf	print@valor1
   913  01F1  1683               	bsf	3,5	;RP0=1, select bank1
   914  01F2  1303               	bcf	3,6	;RP1=0, select bank1
   915  01F3  0836               	movf	main@angule2^(0+128),w
   916  01F4  1283               	bcf	3,5	;RP0=0, select bank0
   917  01F5  1303               	bcf	3,6	;RP1=0, select bank0
   918  01F6  00EE               	movwf	??_main
   919  01F7  01EF               	clrf	??_main+1
   920  01F8  086E               	movf	??_main,w
   921  01F9  00AF               	movwf	print@valor2
   922  01FA  086F               	movf	??_main+1,w
   923  01FB  00B0               	movwf	print@valor2+1
   924  01FC  120A  158A  2643  120A  118A  	fcall	_print
   925                           
   926                           ;main.c: 48:             position1(angulo1);
   927  0201  1683               	bsf	3,5	;RP0=1, select bank1
   928  0202  1303               	bcf	3,6	;RP1=0, select bank1
   929  0203  0837               	movf	main@angulo1^(0+128),w
   930  0204  120A  158A  254B  120A  118A  	fcall	_position1
   931                           
   932                           ;main.c: 49:             print(angulo1, 99);
   933  0209  1683               	bsf	3,5	;RP0=1, select bank1
   934  020A  1303               	bcf	3,6	;RP1=0, select bank1
   935  020B  0838               	movf	(main@angulo1+1)^(0+128),w
   936  020C  1283               	bcf	3,5	;RP0=0, select bank0
   937  020D  1303               	bcf	3,6	;RP1=0, select bank0
   938  020E  00AE               	movwf	print@valor1+1
   939  020F  1683               	bsf	3,5	;RP0=1, select bank1
   940  0210  1303               	bcf	3,6	;RP1=0, select bank1
   941  0211  0837               	movf	main@angulo1^(0+128),w
   942  0212  1283               	bcf	3,5	;RP0=0, select bank0
   943  0213  1303               	bcf	3,6	;RP1=0, select bank0
   944  0214  00AD               	movwf	print@valor1
   945  0215  3063               	movlw	99
   946  0216  00AF               	movwf	print@valor2
   947  0217  3000               	movlw	0
   948  0218  00B0               	movwf	print@valor2+1
   949  0219  120A  158A  2643  120A  118A  	fcall	_print
   950                           
   951                           ;main.c: 50:             angulo1Old = angulo1;
   952  021E  1683               	bsf	3,5	;RP0=1, select bank1
   953  021F  1303               	bcf	3,6	;RP1=0, select bank1
   954  0220  0838               	movf	(main@angulo1+1)^(0+128),w
   955  0221  00B1               	movwf	(main@angulo1Old+1)^(0+128)
   956  0222  0837               	movf	main@angulo1^(0+128),w
   957  0223  00B0               	movwf	main@angulo1Old^(0+128)
   958  0224                     l2270:	
   959                           
   960                           ;main.c: 53:         adc = adcRead(0);
   961  0224  3000               	movlw	0
   962  0225  120A  158A  249C  120A  118A  	fcall	_adcRead
   963  022A  0871               	movf	?_adcRead+1,w
   964  022B  1683               	bsf	3,5	;RP0=1, select bank1
   965  022C  1303               	bcf	3,6	;RP1=0, select bank1
   966  022D  00B5               	movwf	(main@adc+1)^(0+128)
   967  022E  0870               	movf	?_adcRead,w
   968  022F  00B4               	movwf	main@adc^(0+128)
   969                           
   970                           ;main.c: 54:         if (adc != adcOld) {
   971  0230  0833               	movf	(main@adcOld+1)^(0+128),w
   972  0231  0635               	xorwf	(main@adc+1)^(0+128),w
   973  0232  1D03               	skipz
   974  0233  2A36               	goto	u3025
   975  0234  0832               	movf	main@adcOld^(0+128),w
   976  0235  0634               	xorwf	main@adc^(0+128),w
   977  0236                     u3025:	
   978  0236  1903               	skipnz
   979  0237  2AA5               	goto	l2282
   980                           
   981                           ;main.c: 55:             angule2 = adc * 0.175953079;
   982  0238  0834               	movf	main@adc^(0+128),w
   983  0239  00F0               	movwf	___xxtofl@val
   984  023A  0835               	movf	(main@adc+1)^(0+128),w
   985  023B  00F1               	movwf	___xxtofl@val+1
   986  023C  01F2               	clrf	___xxtofl@val+2
   987  023D  01F3               	clrf	___xxtofl@val+3
   988  023E  3000               	movlw	0
   989  023F  120A  158A  275D  120A  118A  	fcall	___xxtofl
   990  0244  0873               	movf	?___xxtofl+3,w
   991  0245  1283               	bcf	3,5	;RP0=0, select bank0
   992  0246  1303               	bcf	3,6	;RP1=0, select bank0
   993  0247  00A7               	movwf	___flmul@a+3
   994  0248  0872               	movf	?___xxtofl+2,w
   995  0249  00A6               	movwf	___flmul@a+2
   996  024A  0871               	movf	?___xxtofl+1,w
   997  024B  00A5               	movwf	___flmul@a+1
   998  024C  0870               	movf	?___xxtofl,w
   999  024D  00A4               	movwf	___flmul@a
  1000  024E  303E               	movlw	62
  1001  024F  00A3               	movwf	___flmul@b+3
  1002  0250  3034               	movlw	52
  1003  0251  00A2               	movwf	___flmul@b+2
  1004  0252  302D               	movlw	45
  1005  0253  00A1               	movwf	___flmul@b+1
  1006  0254  300B               	movlw	11
  1007  0255  00A0               	movwf	___flmul@b
  1008  0256  120A  118A  24E0  120A  118A  	fcall	___flmul
  1009  025B  1283               	bcf	3,5	;RP0=0, select bank0
  1010  025C  1303               	bcf	3,6	;RP1=0, select bank0
  1011  025D  0823               	movf	?___flmul+3,w
  1012  025E  00E2               	movwf	___fltol@f1+3
  1013  025F  0822               	movf	?___flmul+2,w
  1014  0260  00E1               	movwf	___fltol@f1+2
  1015  0261  0821               	movf	?___flmul+1,w
  1016  0262  00E0               	movwf	___fltol@f1+1
  1017  0263  0820               	movf	?___flmul,w
  1018  0264  00DF               	movwf	___fltol@f1
  1019  0265  120A  158A  26F0  120A  118A  	fcall	___fltol
  1020  026A  1283               	bcf	3,5	;RP0=0, select bank0
  1021  026B  1303               	bcf	3,6	;RP1=0, select bank0
  1022  026C  085F               	movf	?___fltol,w
  1023  026D  00EE               	movwf	??_main
  1024  026E  086E               	movf	??_main,w
  1025  026F  1683               	bsf	3,5	;RP0=1, select bank1
  1026  0270  1303               	bcf	3,6	;RP1=0, select bank1
  1027  0271  00B6               	movwf	main@angule2^(0+128)
  1028                           
  1029                           ;main.c: 56:             print(angulo1, angule2);
  1030  0272  0838               	movf	(main@angulo1+1)^(0+128),w
  1031  0273  1283               	bcf	3,5	;RP0=0, select bank0
  1032  0274  1303               	bcf	3,6	;RP1=0, select bank0
  1033  0275  00AE               	movwf	print@valor1+1
  1034  0276  1683               	bsf	3,5	;RP0=1, select bank1
  1035  0277  1303               	bcf	3,6	;RP1=0, select bank1
  1036  0278  0837               	movf	main@angulo1^(0+128),w
  1037  0279  1283               	bcf	3,5	;RP0=0, select bank0
  1038  027A  1303               	bcf	3,6	;RP1=0, select bank0
  1039  027B  00AD               	movwf	print@valor1
  1040  027C  1683               	bsf	3,5	;RP0=1, select bank1
  1041  027D  1303               	bcf	3,6	;RP1=0, select bank1
  1042  027E  0836               	movf	main@angule2^(0+128),w
  1043  027F  1283               	bcf	3,5	;RP0=0, select bank0
  1044  0280  1303               	bcf	3,6	;RP1=0, select bank0
  1045  0281  00EE               	movwf	??_main
  1046  0282  01EF               	clrf	??_main+1
  1047  0283  086E               	movf	??_main,w
  1048  0284  00AF               	movwf	print@valor2
  1049  0285  086F               	movf	??_main+1,w
  1050  0286  00B0               	movwf	print@valor2+1
  1051  0287  120A  158A  2643  120A  118A  	fcall	_print
  1052                           
  1053                           ;main.c: 57:             position2(angule2);
  1054  028C  1683               	bsf	3,5	;RP0=1, select bank1
  1055  028D  1303               	bcf	3,6	;RP1=0, select bank1
  1056  028E  0836               	movf	main@angule2^(0+128),w
  1057  028F  120A  158A  2584  120A  118A  	fcall	_position2
  1058                           
  1059                           ;main.c: 58:             adcOld = angule2;
  1060  0294  1683               	bsf	3,5	;RP0=1, select bank1
  1061  0295  1303               	bcf	3,6	;RP1=0, select bank1
  1062  0296  0836               	movf	main@angule2^(0+128),w
  1063  0297  1283               	bcf	3,5	;RP0=0, select bank0
  1064  0298  1303               	bcf	3,6	;RP1=0, select bank0
  1065  0299  00EE               	movwf	??_main
  1066  029A  01EF               	clrf	??_main+1
  1067  029B  086E               	movf	??_main,w
  1068  029C  1683               	bsf	3,5	;RP0=1, select bank1
  1069  029D  1303               	bcf	3,6	;RP1=0, select bank1
  1070  029E  00B2               	movwf	main@adcOld^(0+128)
  1071  029F  1283               	bcf	3,5	;RP0=0, select bank0
  1072  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  1073  02A1  086F               	movf	??_main+1,w
  1074  02A2  1683               	bsf	3,5	;RP0=1, select bank1
  1075  02A3  1303               	bcf	3,6	;RP1=0, select bank1
  1076  02A4  00B3               	movwf	(main@adcOld+1)^(0+128)
  1077  02A5                     l2282:	
  1078                           
  1079                           ;main.c: 61:         _delay((unsigned long)((50)*(4000000/4000.0)));
  1080  02A5  3041               	movlw	65
  1081  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  1082  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  1083  02A8  00EF               	movwf	??_main+1
  1084  02A9  30ED               	movlw	237
  1085  02AA  00EE               	movwf	??_main
  1086  02AB                     u3067:	
  1087  02AB  0BEE               	decfsz	??_main,f
  1088  02AC  2AAB               	goto	u3067
  1089  02AD  0BEF               	decfsz	??_main+1,f
  1090  02AE  2AAB               	goto	u3067
  1091  02AF  2AB0               	nop2
  1092                           
  1093                           ;main.c: 62:     }
  1094  02B0  29A4               	goto	l2252
  1095  02B1                     __end_of_main:	
  1096                           
  1097                           	psect	text1
  1098  0E43                     __ptext1:	
  1099 ;; *************** function _print *****************
  1100 ;; Defined at:
  1101 ;;		line 11 in file "main.c"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;  valor1          2   13[BANK0 ] const unsigned int 
  1104 ;;  valor2          2   15[BANK0 ] const unsigned int 
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;		None
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1116 ;;      Params:         0       4       0       0       0
  1117 ;;      Locals:         0       0       0       0       0
  1118 ;;      Temps:          0       2       0       0       0
  1119 ;;      Totals:         0       6       0       0       0
  1120 ;;Total ram usage:        6 bytes
  1121 ;; Hardware stack levels used:    1
  1122 ;; Hardware stack levels required when called:    3
  1123 ;; This function calls:
  1124 ;;		_lcdClear
  1125 ;;		_lcdPrint
  1126 ;;		_lcdSetCursor
  1127 ;;		_sprintf
  1128 ;; This function is called by:
  1129 ;;		_main
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           
  1134                           ;psect for function _print
  1135  0E43                     _print:	
  1136                           
  1137                           ;main.c: 12:     lcdClear();
  1138                           
  1139                           ;incstack = 0
  1140                           ; Regs used in _print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1141  0E43  120A  158A  2449  120A  158A  	fcall	_lcdClear
  1142                           
  1143                           ;main.c: 13:     lcdSetCursor(1, 1);
  1144  0E48  01F4               	clrf	lcdSetCursor@b
  1145  0E49  0AF4               	incf	lcdSetCursor@b,f
  1146  0E4A  3001               	movlw	1
  1147  0E4B  120A  158A  25F9  120A  158A  	fcall	_lcdSetCursor
  1148                           
  1149                           ;main.c: 14:     sprintf(mensaje, "Angule 1: %d", valor1);
  1150  0E50  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1151  0E51  1283               	bcf	3,5	;RP0=0, select bank0
  1152  0E52  1303               	bcf	3,6	;RP1=0, select bank0
  1153  0E53  00B1               	movwf	??_print
  1154  0E54  0831               	movf	??_print,w
  1155  0E55  00A0               	movwf	sprintf@f
  1156  0E56  082E               	movf	print@valor1+1,w
  1157  0E57  00A2               	movwf	?_sprintf+2
  1158  0E58  082D               	movf	print@valor1,w
  1159  0E59  00A1               	movwf	?_sprintf+1
  1160  0E5A  30A0               	movlw	(low (_mensaje| 0))& (0+255)
  1161  0E5B  120A  118A  2095  120A  158A  	fcall	_sprintf
  1162                           
  1163                           ;main.c: 15:     lcdPrint(mensaje);
  1164  0E60  30A0               	movlw	(low (_mensaje| 0))& (0+255)
  1165  0E61  120A  158A  247E  120A  158A  	fcall	_lcdPrint
  1166                           
  1167                           ;main.c: 16:     lcdSetCursor(2, 1);
  1168  0E66  01F4               	clrf	lcdSetCursor@b
  1169  0E67  0AF4               	incf	lcdSetCursor@b,f
  1170  0E68  3002               	movlw	2
  1171  0E69  120A  158A  25F9  120A  158A  	fcall	_lcdSetCursor
  1172                           
  1173                           ;main.c: 17:     sprintf(mensaje, "Angule 2: %d", valor2);
  1174  0E6E  3018               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1175  0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  1176  0E70  1303               	bcf	3,6	;RP1=0, select bank0
  1177  0E71  00B1               	movwf	??_print
  1178  0E72  0831               	movf	??_print,w
  1179  0E73  00A0               	movwf	sprintf@f
  1180  0E74  0830               	movf	print@valor2+1,w
  1181  0E75  00A2               	movwf	?_sprintf+2
  1182  0E76  082F               	movf	print@valor2,w
  1183  0E77  00A1               	movwf	?_sprintf+1
  1184  0E78  30A0               	movlw	(low (_mensaje| 0))& (0+255)
  1185  0E79  120A  118A  2095  120A  158A  	fcall	_sprintf
  1186                           
  1187                           ;main.c: 18:     lcdPrint(mensaje);
  1188  0E7E  30A0               	movlw	(low (_mensaje| 0))& (0+255)
  1189  0E7F  120A  158A  247E  120A  158A  	fcall	_lcdPrint
  1190                           
  1191                           ;main.c: 19:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1192  0E84  300D               	movlw	13
  1193  0E85  1283               	bcf	3,5	;RP0=0, select bank0
  1194  0E86  1303               	bcf	3,6	;RP1=0, select bank0
  1195  0E87  00B2               	movwf	??_print+1
  1196  0E88  30FB               	movlw	251
  1197  0E89  00B1               	movwf	??_print
  1198  0E8A                     u3077:	
  1199  0E8A  0BB1               	decfsz	??_print,f
  1200  0E8B  2E8A               	goto	u3077
  1201  0E8C  0BB2               	decfsz	??_print+1,f
  1202  0E8D  2E8A               	goto	u3077
  1203  0E8E  0008               	return
  1204  0E8F                     __end_of_print:	
  1205                           
  1206                           	psect	text2
  1207  0095                     __ptext2:	
  1208 ;; *************** function _sprintf *****************
  1209 ;; Defined at:
  1210 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;  sp              1    wreg     PTR unsigned char 
  1213 ;;		 -> mensaje(16), 
  1214 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1215 ;;		 -> STR_2(13), STR_1(13), 
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1218 ;;		 -> mensaje(16), 
  1219 ;;  tmpval          4    0        struct .
  1220 ;;  val             2    9[BANK0 ] unsigned int 
  1221 ;;  cp              2    0        PTR const unsigned char 
  1222 ;;  len             2    0        unsigned int 
  1223 ;;  c               1   12[BANK0 ] unsigned char 
  1224 ;;  prec            1    8[BANK0 ] char 
  1225 ;;  flag            1    7[BANK0 ] unsigned char 
  1226 ;;  ap              1    6[BANK0 ] PTR void [1]
  1227 ;;		 -> ?_sprintf(2), 
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  2    0[BANK0 ] int 
  1230 ;; Registers used:
  1231 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1237 ;;      Params:         0       3       0       0       0
  1238 ;;      Locals:         0       7       0       0       0
  1239 ;;      Temps:          0       3       0       0       0
  1240 ;;      Totals:         0      13       0       0       0
  1241 ;;Total ram usage:       13 bytes
  1242 ;; Hardware stack levels used:    1
  1243 ;; Hardware stack levels required when called:    1
  1244 ;; This function calls:
  1245 ;;		___lwdiv
  1246 ;;		___lwmod
  1247 ;; This function is called by:
  1248 ;;		_print
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           
  1253                           ;psect for function _sprintf
  1254  0095                     _sprintf:	
  1255                           
  1256                           ;incstack = 0
  1257                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1258                           ;sprintf@sp stored from wreg
  1259  0095  1283               	bcf	3,5	;RP0=0, select bank0
  1260  0096  1303               	bcf	3,6	;RP1=0, select bank0
  1261  0097  00AB               	movwf	sprintf@sp
  1262                           
  1263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  1264  0098  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1265  0099  00A3               	movwf	??_sprintf
  1266  009A  0823               	movf	??_sprintf,w
  1267  009B  00A6               	movwf	sprintf@ap
  1268  009C                     l2098:	
  1269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1270                           
  1271                           
  1272                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1273  009C  3001               	movlw	1
  1274  009D  07A0               	addwf	sprintf@f,f
  1275  009E  30FF               	movlw	-1
  1276  009F  0720               	addwf	sprintf@f,w
  1277  00A0  0084               	movwf	4
  1278  00A1  120A  158A  2000  120A  118A  	fcall	stringdir
  1279  00A6  00A3               	movwf	??_sprintf
  1280  00A7  0823               	movf	??_sprintf,w
  1281  00A8  00AC               	movwf	sprintf@c
  1282  00A9  082C               	movf	sprintf@c,w
  1283  00AA  1903               	btfsc	3,2
  1284  00AB  2968               	goto	l2100
  1285                           
  1286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  1287  00AC  3025               	movlw	37
  1288  00AD  062C               	xorwf	sprintf@c,w
  1289  00AE  1903               	btfsc	3,2
  1290  00AF  28BC               	goto	l2054
  1291                           
  1292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  1293  00B0  082C               	movf	sprintf@c,w
  1294  00B1  00A3               	movwf	??_sprintf
  1295  00B2  082B               	movf	sprintf@sp,w
  1296  00B3  0084               	movwf	4
  1297  00B4  0823               	movf	??_sprintf,w
  1298  00B5  1383               	bcf	3,7	;select IRP bank0
  1299  00B6  0080               	movwf	0
  1300  00B7  3001               	movlw	1
  1301  00B8  00A3               	movwf	??_sprintf
  1302  00B9  0823               	movf	??_sprintf,w
  1303  00BA  07AB               	addwf	sprintf@sp,f
  1304                           
  1305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  1306  00BB  289C               	goto	l2098
  1307  00BC                     l2054:	
  1308                           
  1309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  1310  00BC  01A7               	clrf	sprintf@flag
  1311                           
  1312                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  1313  00BD  3001               	movlw	1
  1314  00BE  07A0               	addwf	sprintf@f,f
  1315  00BF  30FF               	movlw	-1
  1316  00C0  0720               	addwf	sprintf@f,w
  1317  00C1  0084               	movwf	4
  1318  00C2  120A  158A  2000  120A  118A  	fcall	stringdir
  1319  00C7  00AC               	movwf	sprintf@c
  1320  00C8  00A3               	movwf	??_sprintf
  1321  00C9  01A4               	clrf	??_sprintf+1
  1322                           
  1323                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1324                           ; Switch size 1, requested type "simple"
  1325                           ; Number of cases is 1, Range of values is 0 to 0
  1326                           ; switch strategies available:
  1327                           ; Name         Instructions Cycles
  1328                           ; simple_byte            4     3 (average)
  1329                           ; direct_byte           11     8 (fixed)
  1330                           ; jumptable            260     6 (fixed)
  1331                           ;	Chosen strategy is simple_byte
  1332  00CA  0824               	movf	??_sprintf+1,w
  1333  00CB  3A00               	xorlw	0	; case 0
  1334  00CC  1903               	skipnz
  1335  00CD  28CF               	goto	l2304
  1336  00CE  289C               	goto	l2098
  1337  00CF                     l2304:	
  1338                           
  1339                           ; Switch size 1, requested type "simple"
  1340                           ; Number of cases is 3, Range of values is 0 to 105
  1341                           ; switch strategies available:
  1342                           ; Name         Instructions Cycles
  1343                           ; simple_byte           10     6 (average)
  1344                           ; jumptable            260     6 (fixed)
  1345                           ;	Chosen strategy is simple_byte
  1346  00CF  0823               	movf	??_sprintf,w
  1347  00D0  3A00               	xorlw	0	; case 0
  1348  00D1  1903               	skipnz
  1349  00D2  2968               	goto	l2100
  1350  00D3  3A64               	xorlw	100	; case 100
  1351  00D4  1903               	skipnz
  1352  00D5  28DA               	goto	l2060
  1353  00D6  3A0D               	xorlw	13	; case 105
  1354  00D7  1903               	skipnz
  1355  00D8  28DA               	goto	l2060
  1356  00D9  289C               	goto	l2098
  1357  00DA                     l2060:	
  1358                           
  1359                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1360  00DA  0826               	movf	sprintf@ap,w
  1361  00DB  0084               	movwf	4
  1362  00DC  1383               	bcf	3,7	;select IRP bank0
  1363  00DD  0800               	movf	0,w
  1364  00DE  00A9               	movwf	sprintf@val
  1365  00DF  0A84               	incf	4,f
  1366  00E0  0800               	movf	0,w
  1367  00E1  00AA               	movwf	sprintf@val+1
  1368  00E2  3002               	movlw	2
  1369  00E3  00A3               	movwf	??_sprintf
  1370  00E4  0823               	movf	??_sprintf,w
  1371  00E5  07A6               	addwf	sprintf@ap,f
  1372                           
  1373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((int)val < 0) {
  1374  00E6  1FAA               	btfss	sprintf@val+1,7
  1375  00E7  28F1               	goto	l2070
  1376                           
  1377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  1378  00E8  3003               	movlw	3
  1379  00E9  00A3               	movwf	??_sprintf
  1380  00EA  0823               	movf	??_sprintf,w
  1381  00EB  04A7               	iorwf	sprintf@flag,f
  1382                           
  1383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  1384  00EC  09A9               	comf	sprintf@val,f
  1385  00ED  09AA               	comf	sprintf@val+1,f
  1386  00EE  0AA9               	incf	sprintf@val,f
  1387  00EF  1903               	skipnz
  1388  00F0  0AAA               	incf	sprintf@val+1,f
  1389  00F1                     l2070:	
  1390                           
  1391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1392  00F1  01AC               	clrf	sprintf@c
  1393  00F2  0AAC               	incf	sprintf@c,f
  1394  00F3                     l2076:	
  1395                           
  1396                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  1397  00F3  082C               	movf	sprintf@c,w
  1398  00F4  00A3               	movwf	??_sprintf
  1399  00F5  0723               	addwf	??_sprintf,w
  1400  00F6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1401  00F7  0084               	movwf	4
  1402  00F8  120A  158A  2000  120A  118A  	fcall	stringdir
  1403  00FD  00A4               	movwf	??_sprintf+1
  1404  00FE  120A  158A  2000  120A  118A  	fcall	stringdir
  1405  0103  00A5               	movwf	??_sprintf+2
  1406  0104  0825               	movf	??_sprintf+2,w
  1407  0105  022A               	subwf	sprintf@val+1,w
  1408  0106  1D03               	skipz
  1409  0107  290A               	goto	u2795
  1410  0108  0824               	movf	??_sprintf+1,w
  1411  0109  0229               	subwf	sprintf@val,w
  1412  010A                     u2795:	
  1413  010A  1C03               	btfss	3,0
  1414  010B  2914               	goto	l2082
  1415  010C  3001               	movlw	1
  1416  010D  00A3               	movwf	??_sprintf
  1417  010E  0823               	movf	??_sprintf,w
  1418  010F  07AC               	addwf	sprintf@c,f
  1419  0110  3005               	movlw	5
  1420  0111  062C               	xorwf	sprintf@c,w
  1421  0112  1D03               	btfss	3,2
  1422  0113  28F3               	goto	l2076
  1423  0114                     l2082:	
  1424                           
  1425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  1426  0114  0827               	movf	sprintf@flag,w
  1427  0115  3903               	andlw	3
  1428  0116  1903               	btfsc	3,2
  1429  0117  2923               	goto	l2088
  1430                           
  1431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  1432  0118  302D               	movlw	45
  1433  0119  00A3               	movwf	??_sprintf
  1434  011A  082B               	movf	sprintf@sp,w
  1435  011B  0084               	movwf	4
  1436  011C  0823               	movf	??_sprintf,w
  1437  011D  1383               	bcf	3,7	;select IRP bank0
  1438  011E  0080               	movwf	0
  1439  011F  3001               	movlw	1
  1440  0120  00A3               	movwf	??_sprintf
  1441  0121  0823               	movf	??_sprintf,w
  1442  0122  07AB               	addwf	sprintf@sp,f
  1443  0123                     l2088:	
  1444                           
  1445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1488:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  1446  0123  082C               	movf	sprintf@c,w
  1447  0124  00A3               	movwf	??_sprintf
  1448  0125  0823               	movf	??_sprintf,w
  1449  0126  00A8               	movwf	sprintf@prec
  1450  0127                     l2096:	
  1451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  1452                           
  1453                           
  1454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  1455  0127  30FF               	movlw	255
  1456  0128  00A3               	movwf	??_sprintf
  1457  0129  0823               	movf	??_sprintf,w
  1458  012A  07A8               	addwf	sprintf@prec,f
  1459  012B  0A28               	incf	sprintf@prec,w
  1460  012C  1903               	btfsc	3,2
  1461  012D  289C               	goto	l2098
  1462                           
  1463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  1464  012E  300A               	movlw	10
  1465  012F  00F8               	movwf	___lwmod@divisor
  1466  0130  3000               	movlw	0
  1467  0131  00F9               	movwf	___lwmod@divisor+1
  1468  0132  0828               	movf	sprintf@prec,w
  1469  0133  00A3               	movwf	??_sprintf
  1470  0134  0723               	addwf	??_sprintf,w
  1471  0135  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1472  0136  0084               	movwf	4
  1473  0137  120A  158A  2000  120A  118A  	fcall	stringdir
  1474  013C  00F0               	movwf	___lwdiv@divisor
  1475  013D  120A  158A  2000  120A  118A  	fcall	stringdir
  1476  0142  00F1               	movwf	___lwdiv@divisor+1
  1477  0143  082A               	movf	sprintf@val+1,w
  1478  0144  00F3               	movwf	___lwdiv@dividend+1
  1479  0145  0829               	movf	sprintf@val,w
  1480  0146  00F2               	movwf	___lwdiv@dividend
  1481  0147  120A  158A  25BD  120A  118A  	fcall	___lwdiv
  1482  014C  0871               	movf	?___lwdiv+1,w
  1483  014D  00FB               	movwf	___lwmod@dividend+1
  1484  014E  0870               	movf	?___lwdiv,w
  1485  014F  00FA               	movwf	___lwmod@dividend
  1486  0150  120A  158A  24E2  120A  118A  	fcall	___lwmod
  1487  0155  0878               	movf	?___lwmod,w
  1488  0156  3E30               	addlw	48
  1489  0157  1283               	bcf	3,5	;RP0=0, select bank0
  1490  0158  1303               	bcf	3,6	;RP1=0, select bank0
  1491  0159  00A4               	movwf	??_sprintf+1
  1492  015A  0824               	movf	??_sprintf+1,w
  1493  015B  00AC               	movwf	sprintf@c
  1494                           
  1495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  1496  015C  082C               	movf	sprintf@c,w
  1497  015D  00A3               	movwf	??_sprintf
  1498  015E  082B               	movf	sprintf@sp,w
  1499  015F  0084               	movwf	4
  1500  0160  0823               	movf	??_sprintf,w
  1501  0161  1383               	bcf	3,7	;select IRP bank0
  1502  0162  0080               	movwf	0
  1503  0163  3001               	movlw	1
  1504  0164  00A3               	movwf	??_sprintf
  1505  0165  0823               	movf	??_sprintf,w
  1506  0166  07AB               	addwf	sprintf@sp,f
  1507  0167  2927               	goto	l2096
  1508  0168                     l2100:	
  1509                           
  1510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  1511  0168  082B               	movf	sprintf@sp,w
  1512  0169  0084               	movwf	4
  1513  016A  1383               	bcf	3,7	;select IRP bank0
  1514  016B  0180               	clrf	0
  1515  016C  0008               	return
  1516  016D                     __end_of_sprintf:	
  1517                           
  1518                           	psect	text3
  1519  0CE2                     __ptext3:	
  1520 ;; *************** function ___lwmod *****************
  1521 ;; Defined at:
  1522 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;  divisor         2    8[COMMON] unsigned int 
  1525 ;;  dividend        2   10[COMMON] unsigned int 
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;  counter         1   13[COMMON] unsigned char 
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  2    8[COMMON] unsigned int 
  1530 ;; Registers used:
  1531 ;;		wreg, status,2, status,0
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1537 ;;      Params:         4       0       0       0       0
  1538 ;;      Locals:         1       0       0       0       0
  1539 ;;      Temps:          1       0       0       0       0
  1540 ;;      Totals:         6       0       0       0       0
  1541 ;;Total ram usage:        6 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; This function calls:
  1544 ;;		Nothing
  1545 ;; This function is called by:
  1546 ;;		_sprintf
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550                           
  1551                           ;psect for function ___lwmod
  1552  0CE2                     ___lwmod:	
  1553                           
  1554                           ;incstack = 0
  1555                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1556  0CE2  0878               	movf	___lwmod@divisor,w
  1557  0CE3  0479               	iorwf	___lwmod@divisor+1,w
  1558  0CE4  1903               	btfsc	3,2
  1559  0CE5  2D0F               	goto	l1622
  1560  0CE6  01FD               	clrf	___lwmod@counter
  1561  0CE7  0AFD               	incf	___lwmod@counter,f
  1562  0CE8                     l1612:	
  1563  0CE8  1BF9               	btfsc	___lwmod@divisor+1,7
  1564  0CE9  2CF6               	goto	l1614
  1565  0CEA  3001               	movlw	1
  1566  0CEB                     u1685:	
  1567  0CEB  1003               	clrc
  1568  0CEC  0DF8               	rlf	___lwmod@divisor,f
  1569  0CED  0DF9               	rlf	___lwmod@divisor+1,f
  1570  0CEE  3EFF               	addlw	-1
  1571  0CEF  1D03               	skipz
  1572  0CF0  2CEB               	goto	u1685
  1573  0CF1  3001               	movlw	1
  1574  0CF2  00FC               	movwf	??___lwmod
  1575  0CF3  087C               	movf	??___lwmod,w
  1576  0CF4  07FD               	addwf	___lwmod@counter,f
  1577  0CF5  2CE8               	goto	l1612
  1578  0CF6                     l1614:	
  1579  0CF6  0879               	movf	___lwmod@divisor+1,w
  1580  0CF7  027B               	subwf	___lwmod@dividend+1,w
  1581  0CF8  1D03               	skipz
  1582  0CF9  2CFC               	goto	u1705
  1583  0CFA  0878               	movf	___lwmod@divisor,w
  1584  0CFB  027A               	subwf	___lwmod@dividend,w
  1585  0CFC                     u1705:	
  1586  0CFC  1C03               	skipc
  1587  0CFD  2D04               	goto	l1618
  1588  0CFE  0878               	movf	___lwmod@divisor,w
  1589  0CFF  02FA               	subwf	___lwmod@dividend,f
  1590  0D00  0879               	movf	___lwmod@divisor+1,w
  1591  0D01  1C03               	skipc
  1592  0D02  03FB               	decf	___lwmod@dividend+1,f
  1593  0D03  02FB               	subwf	___lwmod@dividend+1,f
  1594  0D04                     l1618:	
  1595  0D04  3001               	movlw	1
  1596  0D05                     u1715:	
  1597  0D05  1003               	clrc
  1598  0D06  0CF9               	rrf	___lwmod@divisor+1,f
  1599  0D07  0CF8               	rrf	___lwmod@divisor,f
  1600  0D08  3EFF               	addlw	-1
  1601  0D09  1D03               	skipz
  1602  0D0A  2D05               	goto	u1715
  1603  0D0B  3001               	movlw	1
  1604  0D0C  02FD               	subwf	___lwmod@counter,f
  1605  0D0D  1D03               	btfss	3,2
  1606  0D0E  2CF6               	goto	l1614
  1607  0D0F                     l1622:	
  1608  0D0F  087B               	movf	___lwmod@dividend+1,w
  1609  0D10  00F9               	movwf	?___lwmod+1
  1610  0D11  087A               	movf	___lwmod@dividend,w
  1611  0D12  00F8               	movwf	?___lwmod
  1612  0D13  0008               	return
  1613  0D14                     __end_of___lwmod:	
  1614                           
  1615                           	psect	text4
  1616  0DBD                     __ptext4:	
  1617 ;; *************** function ___lwdiv *****************
  1618 ;; Defined at:
  1619 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;  divisor         2    0[COMMON] unsigned int 
  1622 ;;  dividend        2    2[COMMON] unsigned int 
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;  quotient        2    5[COMMON] unsigned int 
  1625 ;;  counter         1    7[COMMON] unsigned char 
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  2    0[COMMON] unsigned int 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1635 ;;      Params:         4       0       0       0       0
  1636 ;;      Locals:         3       0       0       0       0
  1637 ;;      Temps:          1       0       0       0       0
  1638 ;;      Totals:         8       0       0       0       0
  1639 ;;Total ram usage:        8 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; This function calls:
  1642 ;;		Nothing
  1643 ;; This function is called by:
  1644 ;;		_sprintf
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           
  1649                           ;psect for function ___lwdiv
  1650  0DBD                     ___lwdiv:	
  1651                           
  1652                           ;incstack = 0
  1653                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1654  0DBD  01F5               	clrf	___lwdiv@quotient
  1655  0DBE  01F6               	clrf	___lwdiv@quotient+1
  1656  0DBF  0870               	movf	___lwdiv@divisor,w
  1657  0DC0  0471               	iorwf	___lwdiv@divisor+1,w
  1658  0DC1  1903               	btfsc	3,2
  1659  0DC2  2DF4               	goto	l1600
  1660  0DC3  01F7               	clrf	___lwdiv@counter
  1661  0DC4  0AF7               	incf	___lwdiv@counter,f
  1662  0DC5                     l1588:	
  1663  0DC5  1BF1               	btfsc	___lwdiv@divisor+1,7
  1664  0DC6  2DD3               	goto	l1590
  1665  0DC7  3001               	movlw	1
  1666  0DC8                     u1615:	
  1667  0DC8  1003               	clrc
  1668  0DC9  0DF0               	rlf	___lwdiv@divisor,f
  1669  0DCA  0DF1               	rlf	___lwdiv@divisor+1,f
  1670  0DCB  3EFF               	addlw	-1
  1671  0DCC  1D03               	skipz
  1672  0DCD  2DC8               	goto	u1615
  1673  0DCE  3001               	movlw	1
  1674  0DCF  00F4               	movwf	??___lwdiv
  1675  0DD0  0874               	movf	??___lwdiv,w
  1676  0DD1  07F7               	addwf	___lwdiv@counter,f
  1677  0DD2  2DC5               	goto	l1588
  1678  0DD3                     l1590:	
  1679  0DD3  3001               	movlw	1
  1680  0DD4                     u1635:	
  1681  0DD4  1003               	clrc
  1682  0DD5  0DF5               	rlf	___lwdiv@quotient,f
  1683  0DD6  0DF6               	rlf	___lwdiv@quotient+1,f
  1684  0DD7  3EFF               	addlw	-1
  1685  0DD8  1D03               	skipz
  1686  0DD9  2DD4               	goto	u1635
  1687  0DDA  0871               	movf	___lwdiv@divisor+1,w
  1688  0DDB  0273               	subwf	___lwdiv@dividend+1,w
  1689  0DDC  1D03               	skipz
  1690  0DDD  2DE0               	goto	u1645
  1691  0DDE  0870               	movf	___lwdiv@divisor,w
  1692  0DDF  0272               	subwf	___lwdiv@dividend,w
  1693  0DE0                     u1645:	
  1694  0DE0  1C03               	skipc
  1695  0DE1  2DE9               	goto	l1596
  1696  0DE2  0870               	movf	___lwdiv@divisor,w
  1697  0DE3  02F2               	subwf	___lwdiv@dividend,f
  1698  0DE4  0871               	movf	___lwdiv@divisor+1,w
  1699  0DE5  1C03               	skipc
  1700  0DE6  03F3               	decf	___lwdiv@dividend+1,f
  1701  0DE7  02F3               	subwf	___lwdiv@dividend+1,f
  1702  0DE8  1475               	bsf	___lwdiv@quotient,0
  1703  0DE9                     l1596:	
  1704  0DE9  3001               	movlw	1
  1705  0DEA                     u1655:	
  1706  0DEA  1003               	clrc
  1707  0DEB  0CF1               	rrf	___lwdiv@divisor+1,f
  1708  0DEC  0CF0               	rrf	___lwdiv@divisor,f
  1709  0DED  3EFF               	addlw	-1
  1710  0DEE  1D03               	skipz
  1711  0DEF  2DEA               	goto	u1655
  1712  0DF0  3001               	movlw	1
  1713  0DF1  02F7               	subwf	___lwdiv@counter,f
  1714  0DF2  1D03               	btfss	3,2
  1715  0DF3  2DD3               	goto	l1590
  1716  0DF4                     l1600:	
  1717  0DF4  0876               	movf	___lwdiv@quotient+1,w
  1718  0DF5  00F1               	movwf	?___lwdiv+1
  1719  0DF6  0875               	movf	___lwdiv@quotient,w
  1720  0DF7  00F0               	movwf	?___lwdiv
  1721  0DF8  0008               	return
  1722  0DF9                     __end_of___lwdiv:	
  1723                           
  1724                           	psect	text5
  1725  0DF9                     __ptext5:	
  1726 ;; *************** function _lcdSetCursor *****************
  1727 ;; Defined at:
  1728 ;;		line 49 in file "./lcd.h"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;  a               1    wreg     unsigned char 
  1731 ;;  b               1    4[COMMON] unsigned char 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  a               1    7[COMMON] unsigned char 
  1734 ;;  temp            1   10[COMMON] unsigned char 
  1735 ;;  y               1    9[COMMON] unsigned char 
  1736 ;;  z               1    8[COMMON] unsigned char 
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		wreg, status,2, status,0, pclath, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1746 ;;      Params:         1       0       0       0       0
  1747 ;;      Locals:         4       0       0       0       0
  1748 ;;      Temps:          2       0       0       0       0
  1749 ;;      Totals:         7       0       0       0       0
  1750 ;;Total ram usage:        7 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    2
  1753 ;; This function calls:
  1754 ;;		_lcdCmd
  1755 ;; This function is called by:
  1756 ;;		_print
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           
  1761                           ;psect for function _lcdSetCursor
  1762  0DF9                     _lcdSetCursor:	
  1763                           
  1764                           ;incstack = 0
  1765                           ; Regs used in _lcdSetCursor: [wreg+status,2+status,0+pclath+cstack]
  1766                           ;lcdSetCursor@a stored from wreg
  1767  0DF9  00F7               	movwf	lcdSetCursor@a
  1768                           
  1769                           ;./lcd.h: 50:     char temp, z, y;;./lcd.h: 51:     if (a == 1) {
  1770  0DFA  0377               	decf	lcdSetCursor@a,w
  1771  0DFB  1D03               	btfss	3,2
  1772  0DFC  2E1E               	goto	l2016
  1773                           
  1774                           ;./lcd.h: 52:         temp = 0x80 + b - 1;
  1775  0DFD  0874               	movf	lcdSetCursor@b,w
  1776  0DFE  3E7F               	addlw	127
  1777  0DFF  00F5               	movwf	??_lcdSetCursor
  1778  0E00  0875               	movf	??_lcdSetCursor,w
  1779  0E01  00FA               	movwf	lcdSetCursor@temp
  1780                           
  1781                           ;./lcd.h: 53:         z = temp >> 4;
  1782  0E02  087A               	movf	lcdSetCursor@temp,w
  1783  0E03  00F5               	movwf	??_lcdSetCursor
  1784  0E04  3004               	movlw	4
  1785  0E05                     u2715:	
  1786  0E05  1003               	clrc
  1787  0E06  0CF5               	rrf	??_lcdSetCursor,f
  1788  0E07  3EFF               	addlw	-1
  1789  0E08  1D03               	skipz
  1790  0E09  2E05               	goto	u2715
  1791  0E0A  0875               	movf	??_lcdSetCursor,w
  1792  0E0B  00F6               	movwf	??_lcdSetCursor+1
  1793  0E0C  0876               	movf	??_lcdSetCursor+1,w
  1794  0E0D  00F8               	movwf	lcdSetCursor@z
  1795                           
  1796                           ;./lcd.h: 54:         y = temp & 0x0F;
  1797  0E0E  087A               	movf	lcdSetCursor@temp,w
  1798  0E0F  390F               	andlw	15
  1799  0E10  00F5               	movwf	??_lcdSetCursor
  1800  0E11  0875               	movf	??_lcdSetCursor,w
  1801  0E12  00F9               	movwf	lcdSetCursor@y
  1802                           
  1803                           ;./lcd.h: 55:         lcdCmd(z);
  1804  0E13  0878               	movf	lcdSetCursor@z,w
  1805  0E14  120A  118A  2005  120A  158A  	fcall	_lcdCmd
  1806                           
  1807                           ;./lcd.h: 56:         lcdCmd(y);
  1808  0E19  0879               	movf	lcdSetCursor@y,w
  1809  0E1A  120A  118A  2005   	fcall	_lcdCmd
  1810                           
  1811                           ;./lcd.h: 57:     } else if (a == 2) {
  1812  0E1D  0008               	return
  1813  0E1E                     l2016:	
  1814  0E1E  3002               	movlw	2
  1815  0E1F  0677               	xorwf	lcdSetCursor@a,w
  1816  0E20  1D03               	btfss	3,2
  1817  0E21  0008               	return
  1818                           
  1819                           ;./lcd.h: 58:         temp = 0xC0 + b - 1;
  1820  0E22  0874               	movf	lcdSetCursor@b,w
  1821  0E23  3EBF               	addlw	191
  1822  0E24  00F5               	movwf	??_lcdSetCursor
  1823  0E25  0875               	movf	??_lcdSetCursor,w
  1824  0E26  00FA               	movwf	lcdSetCursor@temp
  1825                           
  1826                           ;./lcd.h: 59:         z = temp >> 4;
  1827  0E27  087A               	movf	lcdSetCursor@temp,w
  1828  0E28  00F5               	movwf	??_lcdSetCursor
  1829  0E29  3004               	movlw	4
  1830  0E2A                     u2735:	
  1831  0E2A  1003               	clrc
  1832  0E2B  0CF5               	rrf	??_lcdSetCursor,f
  1833  0E2C  3EFF               	addlw	-1
  1834  0E2D  1D03               	skipz
  1835  0E2E  2E2A               	goto	u2735
  1836  0E2F  0875               	movf	??_lcdSetCursor,w
  1837  0E30  00F6               	movwf	??_lcdSetCursor+1
  1838  0E31  0876               	movf	??_lcdSetCursor+1,w
  1839  0E32  00F8               	movwf	lcdSetCursor@z
  1840                           
  1841                           ;./lcd.h: 60:         y = temp & 0x0F;
  1842  0E33  087A               	movf	lcdSetCursor@temp,w
  1843  0E34  390F               	andlw	15
  1844  0E35  00F5               	movwf	??_lcdSetCursor
  1845  0E36  0875               	movf	??_lcdSetCursor,w
  1846  0E37  00F9               	movwf	lcdSetCursor@y
  1847                           
  1848                           ;./lcd.h: 61:         lcdCmd(z);
  1849  0E38  0878               	movf	lcdSetCursor@z,w
  1850  0E39  120A  118A  2005  120A  158A  	fcall	_lcdCmd
  1851                           
  1852                           ;./lcd.h: 62:         lcdCmd(y);
  1853  0E3E  0879               	movf	lcdSetCursor@y,w
  1854  0E3F  120A  118A  2005   	fcall	_lcdCmd
  1855  0E42  0008               	return
  1856  0E43                     __end_of_lcdSetCursor:	
  1857                           
  1858                           	psect	text6
  1859  0C7E                     __ptext6:	
  1860 ;; *************** function _lcdPrint *****************
  1861 ;; Defined at:
  1862 ;;		line 101 in file "./lcd.h"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;  a               1    wreg     PTR unsigned char 
  1865 ;;		 -> mensaje(16), 
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;  a               1    8[COMMON] PTR unsigned char 
  1868 ;;		 -> mensaje(16), 
  1869 ;;  i               2    6[COMMON] int 
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1879 ;;      Params:         0       0       0       0       0
  1880 ;;      Locals:         3       0       0       0       0
  1881 ;;      Temps:          1       0       0       0       0
  1882 ;;      Totals:         4       0       0       0       0
  1883 ;;Total ram usage:        4 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; Hardware stack levels required when called:    2
  1886 ;; This function calls:
  1887 ;;		_lcdWriteChar
  1888 ;; This function is called by:
  1889 ;;		_print
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           
  1894                           ;psect for function _lcdPrint
  1895  0C7E                     _lcdPrint:	
  1896                           
  1897                           ;incstack = 0
  1898                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1899                           ;lcdPrint@a stored from wreg
  1900  0C7E  00F8               	movwf	lcdPrint@a
  1901                           
  1902                           ;./lcd.h: 102:     int i;;./lcd.h: 103:     for (i = 0; a[i] != '\0'; i++)
  1903  0C7F  01F6               	clrf	lcdPrint@i
  1904  0C80  01F7               	clrf	lcdPrint@i+1
  1905  0C81                     l2032:	
  1906  0C81  0876               	movf	lcdPrint@i,w
  1907  0C82  0778               	addwf	lcdPrint@a,w
  1908  0C83  00F5               	movwf	??_lcdPrint
  1909  0C84  0875               	movf	??_lcdPrint,w
  1910  0C85  0084               	movwf	4
  1911  0C86  1383               	bcf	3,7	;select IRP bank0
  1912  0C87  0800               	movf	0,w
  1913  0C88  1903               	btfsc	3,2
  1914  0C89  0008               	return
  1915                           
  1916                           ;./lcd.h: 104:         lcdWriteChar(a[i]);
  1917  0C8A  0876               	movf	lcdPrint@i,w
  1918  0C8B  0778               	addwf	lcdPrint@a,w
  1919  0C8C  00F5               	movwf	??_lcdPrint
  1920  0C8D  0875               	movf	??_lcdPrint,w
  1921  0C8E  0084               	movwf	4
  1922  0C8F  0800               	movf	0,w
  1923  0C90  120A  158A  2514  120A  158A  	fcall	_lcdWriteChar
  1924  0C95  3001               	movlw	1
  1925  0C96  07F6               	addwf	lcdPrint@i,f
  1926  0C97  1803               	skipnc
  1927  0C98  0AF7               	incf	lcdPrint@i+1,f
  1928  0C99  3000               	movlw	0
  1929  0C9A  07F7               	addwf	lcdPrint@i+1,f
  1930  0C9B  2C81               	goto	l2032
  1931  0C9C                     __end_of_lcdPrint:	
  1932                           
  1933                           	psect	text7
  1934  0D14                     __ptext7:	
  1935 ;; *************** function _lcdWriteChar *****************
  1936 ;; Defined at:
  1937 ;;		line 86 in file "./lcd.h"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;  a               1    wreg     unsigned char 
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  a               1    4[COMMON] unsigned char 
  1942 ;;  y               1    3[COMMON] unsigned char 
  1943 ;;  temp            1    2[COMMON] unsigned char 
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  1    wreg      void 
  1946 ;; Registers used:
  1947 ;;		wreg, status,2, status,0, pclath, cstack
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1953 ;;      Params:         0       0       0       0       0
  1954 ;;      Locals:         3       0       0       0       0
  1955 ;;      Temps:          1       0       0       0       0
  1956 ;;      Totals:         4       0       0       0       0
  1957 ;;Total ram usage:        4 bytes
  1958 ;; Hardware stack levels used:    1
  1959 ;; Hardware stack levels required when called:    1
  1960 ;; This function calls:
  1961 ;;		_lcdPort
  1962 ;; This function is called by:
  1963 ;;		_lcdPrint
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           
  1968                           ;psect for function _lcdWriteChar
  1969  0D14                     _lcdWriteChar:	
  1970                           
  1971                           ;incstack = 0
  1972                           ; Regs used in _lcdWriteChar: [wreg+status,2+status,0+pclath+cstack]
  1973                           ;lcdWriteChar@a stored from wreg
  1974  0D14  00F4               	movwf	lcdWriteChar@a
  1975                           
  1976                           ;./lcd.h: 87:     char temp, y;;./lcd.h: 88:     temp = a & 0x0F;
  1977  0D15  0874               	movf	lcdWriteChar@a,w
  1978  0D16  390F               	andlw	15
  1979  0D17  00F1               	movwf	??_lcdWriteChar
  1980  0D18  0871               	movf	??_lcdWriteChar,w
  1981  0D19  00F2               	movwf	lcdWriteChar@temp
  1982                           
  1983                           ;./lcd.h: 89:     y = a & 0xF0;
  1984  0D1A  0874               	movf	lcdWriteChar@a,w
  1985  0D1B  39F0               	andlw	240
  1986  0D1C  00F1               	movwf	??_lcdWriteChar
  1987  0D1D  0871               	movf	??_lcdWriteChar,w
  1988  0D1E  00F3               	movwf	lcdWriteChar@y
  1989                           
  1990                           ;./lcd.h: 90:     RD2 = 1;
  1991  0D1F  1283               	bcf	3,5	;RP0=0, select bank0
  1992  0D20  1303               	bcf	3,6	;RP1=0, select bank0
  1993  0D21  1508               	bsf	8,2	;volatile
  1994                           
  1995                           ;./lcd.h: 91:     lcdPort(y >> 4);
  1996  0D22  0873               	movf	lcdWriteChar@y,w
  1997  0D23  00F1               	movwf	??_lcdWriteChar
  1998  0D24  3004               	movlw	4
  1999  0D25                     u1595:	
  2000  0D25  1003               	clrc
  2001  0D26  0CF1               	rrf	??_lcdWriteChar,f
  2002  0D27  3EFF               	addlw	-1
  2003  0D28  1D03               	skipz
  2004  0D29  2D25               	goto	u1595
  2005  0D2A  0871               	movf	??_lcdWriteChar,w
  2006  0D2B  120A  158A  2464  120A  158A  	fcall	_lcdPort
  2007                           
  2008                           ;./lcd.h: 92:     RD3 = 1;
  2009  0D30  1283               	bcf	3,5	;RP0=0, select bank0
  2010  0D31  1303               	bcf	3,6	;RP1=0, select bank0
  2011  0D32  1588               	bsf	8,3	;volatile
  2012                           
  2013                           ;./lcd.h: 93:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2014  0D33  300D               	movlw	13
  2015  0D34  00F1               	movwf	??_lcdWriteChar
  2016  0D35                     u3087:	
  2017  0D35  0BF1               	decfsz	??_lcdWriteChar,f
  2018  0D36  2D35               	goto	u3087
  2019                           
  2020                           ;./lcd.h: 94:     RD3 = 0;
  2021  0D37  1283               	bcf	3,5	;RP0=0, select bank0
  2022  0D38  1303               	bcf	3,6	;RP1=0, select bank0
  2023  0D39  1188               	bcf	8,3	;volatile
  2024                           
  2025                           ;./lcd.h: 95:     lcdPort(temp);
  2026  0D3A  0872               	movf	lcdWriteChar@temp,w
  2027  0D3B  120A  158A  2464  120A  158A  	fcall	_lcdPort
  2028                           
  2029                           ;./lcd.h: 96:     RD3 = 1;
  2030  0D40  1283               	bcf	3,5	;RP0=0, select bank0
  2031  0D41  1303               	bcf	3,6	;RP1=0, select bank0
  2032  0D42  1588               	bsf	8,3	;volatile
  2033                           
  2034                           ;./lcd.h: 97:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2035  0D43  300D               	movlw	13
  2036  0D44  00F1               	movwf	??_lcdWriteChar
  2037  0D45                     u3097:	
  2038  0D45  0BF1               	decfsz	??_lcdWriteChar,f
  2039  0D46  2D45               	goto	u3097
  2040                           
  2041                           ;./lcd.h: 98:     RD3 = 0;
  2042  0D47  1283               	bcf	3,5	;RP0=0, select bank0
  2043  0D48  1303               	bcf	3,6	;RP1=0, select bank0
  2044  0D49  1188               	bcf	8,3	;volatile
  2045  0D4A  0008               	return
  2046  0D4B                     __end_of_lcdWriteChar:	
  2047                           
  2048                           	psect	text8
  2049  0C49                     __ptext8:	
  2050 ;; *************** function _lcdClear *****************
  2051 ;; Defined at:
  2052 ;;		line 44 in file "./lcd.h"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;		None
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;		None
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  1    wreg      void 
  2059 ;; Registers used:
  2060 ;;		wreg, status,2, status,0, pclath, cstack
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2066 ;;      Params:         0       0       0       0       0
  2067 ;;      Locals:         0       0       0       0       0
  2068 ;;      Temps:          0       0       0       0       0
  2069 ;;      Totals:         0       0       0       0       0
  2070 ;;Total ram usage:        0 bytes
  2071 ;; Hardware stack levels used:    1
  2072 ;; Hardware stack levels required when called:    2
  2073 ;; This function calls:
  2074 ;;		_lcdCmd
  2075 ;; This function is called by:
  2076 ;;		_print
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080                           
  2081                           ;psect for function _lcdClear
  2082  0C49                     _lcdClear:	
  2083                           
  2084                           ;./lcd.h: 45:     lcdCmd(0);
  2085                           
  2086                           ;incstack = 0
  2087                           ; Regs used in _lcdClear: [wreg+status,2+status,0+pclath+cstack]
  2088  0C49  3000               	movlw	0
  2089  0C4A  120A  118A  2005  120A  158A  	fcall	_lcdCmd
  2090                           
  2091                           ;./lcd.h: 46:     lcdCmd(1);
  2092  0C4F  3001               	movlw	1
  2093  0C50  120A  118A  2005   	fcall	_lcdCmd
  2094  0C53  0008               	return
  2095  0C54                     __end_of_lcdClear:	
  2096                           
  2097                           	psect	text9
  2098  0D84                     __ptext9:	
  2099 ;; *************** function _position2 *****************
  2100 ;; Defined at:
  2101 ;;		line 34 in file "./servo.h"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  angule          1    wreg     unsigned char 
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;  angule          1   77[BANK0 ] unsigned char 
  2106 ;;  time            1   76[BANK0 ] unsigned char 
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  1    wreg      void 
  2109 ;; Registers used:
  2110 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2116 ;;      Params:         0       0       0       0       0
  2117 ;;      Locals:         0       2       0       0       0
  2118 ;;      Temps:          0       2       0       0       0
  2119 ;;      Totals:         0       4       0       0       0
  2120 ;;Total ram usage:        4 bytes
  2121 ;; Hardware stack levels used:    1
  2122 ;; Hardware stack levels required when called:    3
  2123 ;; This function calls:
  2124 ;;		___fltol
  2125 ;;		_convertion
  2126 ;; This function is called by:
  2127 ;;		_main
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           
  2132                           ;psect for function _position2
  2133  0D84                     _position2:	
  2134                           
  2135                           ;incstack = 0
  2136                           ; Regs used in _position2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2137                           ;position2@angule stored from wreg
  2138  0D84  1283               	bcf	3,5	;RP0=0, select bank0
  2139  0D85  1303               	bcf	3,6	;RP1=0, select bank0
  2140  0D86  00ED               	movwf	position2@angule
  2141                           
  2142                           ;./servo.h: 35:     unsigned char time = 0;
  2143  0D87  01EC               	clrf	position2@time
  2144                           
  2145                           ;./servo.h: 36:     angule = convertion(angule);
  2146  0D88  086D               	movf	position2@angule,w
  2147  0D89  120A  118A  201F  120A  158A  	fcall	_convertion
  2148  0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  2149  0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  2150  0D90  0851               	movf	?_convertion+3,w
  2151  0D91  00E2               	movwf	___fltol@f1+3
  2152  0D92  0850               	movf	?_convertion+2,w
  2153  0D93  00E1               	movwf	___fltol@f1+2
  2154  0D94  084F               	movf	?_convertion+1,w
  2155  0D95  00E0               	movwf	___fltol@f1+1
  2156  0D96  084E               	movf	?_convertion,w
  2157  0D97  00DF               	movwf	___fltol@f1
  2158  0D98  120A  158A  26F0  120A  158A  	fcall	___fltol
  2159  0D9D  1283               	bcf	3,5	;RP0=0, select bank0
  2160  0D9E  1303               	bcf	3,6	;RP1=0, select bank0
  2161  0D9F  085F               	movf	?___fltol,w
  2162  0DA0  00EA               	movwf	??_position2
  2163  0DA1  086A               	movf	??_position2,w
  2164  0DA2  00ED               	movwf	position2@angule
  2165                           
  2166                           ;./servo.h: 38:     PORTBbits.RB1 = 1;
  2167  0DA3  1486               	bsf	6,1	;volatile
  2168  0DA4                     l2210:	
  2169                           ;./servo.h: 39:     while (time++ < angule)
  2170                           
  2171                           
  2172                           ;./servo.h: 39:     while (time++ < angule)
  2173  0DA4  3001               	movlw	1
  2174  0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  2175  0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  2176  0DA7  07EC               	addwf	position2@time,f
  2177  0DA8  30FF               	movlw	-1
  2178  0DA9  076C               	addwf	position2@time,w
  2179  0DAA  00EA               	movwf	??_position2
  2180  0DAB  086D               	movf	position2@angule,w
  2181  0DAC  026A               	subwf	??_position2,w
  2182  0DAD  1803               	btfsc	3,0
  2183  0DAE  2DB1               	goto	l106
  2184                           
  2185                           ;./servo.h: 40:         _delay((unsigned long)((1)*(4000000/4000000.0)));
  2186  0DAF  0000               	nop
  2187  0DB0  2DA4               	goto	l2210
  2188  0DB1                     l106:	
  2189                           
  2190                           ;./servo.h: 42:     PORTBbits.RB1 = 0;
  2191  0DB1  1086               	bcf	6,1	;volatile
  2192                           
  2193                           ;./servo.h: 43:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2194  0DB2  300D               	movlw	13
  2195  0DB3  1283               	bcf	3,5	;RP0=0, select bank0
  2196  0DB4  1303               	bcf	3,6	;RP1=0, select bank0
  2197  0DB5  00EB               	movwf	??_position2+1
  2198  0DB6  30FB               	movlw	251
  2199  0DB7  00EA               	movwf	??_position2
  2200  0DB8                     u3107:	
  2201  0DB8  0BEA               	decfsz	??_position2,f
  2202  0DB9  2DB8               	goto	u3107
  2203  0DBA  0BEB               	decfsz	??_position2+1,f
  2204  0DBB  2DB8               	goto	u3107
  2205  0DBC  0008               	return
  2206  0DBD                     __end_of_position2:	
  2207                           
  2208                           	psect	text10
  2209  0D4B                     __ptext10:	
  2210 ;; *************** function _position1 *****************
  2211 ;; Defined at:
  2212 ;;		line 18 in file "./servo.h"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;  angule          1    wreg     unsigned char 
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;  angule          1   77[BANK0 ] unsigned char 
  2217 ;;  time            1   76[BANK0 ] unsigned char 
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  4   97[None  ] float 
  2220 ;; Registers used:
  2221 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2227 ;;      Params:         0       0       0       0       0
  2228 ;;      Locals:         0       2       0       0       0
  2229 ;;      Temps:          0       2       0       0       0
  2230 ;;      Totals:         0       4       0       0       0
  2231 ;;Total ram usage:        4 bytes
  2232 ;; Hardware stack levels used:    1
  2233 ;; Hardware stack levels required when called:    3
  2234 ;; This function calls:
  2235 ;;		___fltol
  2236 ;;		_convertion
  2237 ;; This function is called by:
  2238 ;;		_main
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           
  2243                           ;psect for function _position1
  2244  0D4B                     _position1:	
  2245                           
  2246                           ;incstack = 0
  2247                           ; Regs used in _position1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2248                           ;position1@angule stored from wreg
  2249  0D4B  1283               	bcf	3,5	;RP0=0, select bank0
  2250  0D4C  1303               	bcf	3,6	;RP1=0, select bank0
  2251  0D4D  00ED               	movwf	position1@angule
  2252                           
  2253                           ;./servo.h: 19:     unsigned char time = 0;
  2254  0D4E  01EC               	clrf	position1@time
  2255                           
  2256                           ;./servo.h: 20:     angule = convertion(angule);
  2257  0D4F  086D               	movf	position1@angule,w
  2258  0D50  120A  118A  201F  120A  158A  	fcall	_convertion
  2259  0D55  1283               	bcf	3,5	;RP0=0, select bank0
  2260  0D56  1303               	bcf	3,6	;RP1=0, select bank0
  2261  0D57  0851               	movf	?_convertion+3,w
  2262  0D58  00E2               	movwf	___fltol@f1+3
  2263  0D59  0850               	movf	?_convertion+2,w
  2264  0D5A  00E1               	movwf	___fltol@f1+2
  2265  0D5B  084F               	movf	?_convertion+1,w
  2266  0D5C  00E0               	movwf	___fltol@f1+1
  2267  0D5D  084E               	movf	?_convertion,w
  2268  0D5E  00DF               	movwf	___fltol@f1
  2269  0D5F  120A  158A  26F0  120A  158A  	fcall	___fltol
  2270  0D64  1283               	bcf	3,5	;RP0=0, select bank0
  2271  0D65  1303               	bcf	3,6	;RP1=0, select bank0
  2272  0D66  085F               	movf	?___fltol,w
  2273  0D67  00EA               	movwf	??_position1
  2274  0D68  086A               	movf	??_position1,w
  2275  0D69  00ED               	movwf	position1@angule
  2276                           
  2277                           ;./servo.h: 22:     PORTBbits.RB0 = 1;
  2278  0D6A  1406               	bsf	6,0	;volatile
  2279  0D6B                     l2200:	
  2280                           ;./servo.h: 23:     while (time++ < angule)
  2281                           
  2282                           
  2283                           ;./servo.h: 23:     while (time++ < angule)
  2284  0D6B  3001               	movlw	1
  2285  0D6C  1283               	bcf	3,5	;RP0=0, select bank0
  2286  0D6D  1303               	bcf	3,6	;RP1=0, select bank0
  2287  0D6E  07EC               	addwf	position1@time,f
  2288  0D6F  30FF               	movlw	-1
  2289  0D70  076C               	addwf	position1@time,w
  2290  0D71  00EA               	movwf	??_position1
  2291  0D72  086D               	movf	position1@angule,w
  2292  0D73  026A               	subwf	??_position1,w
  2293  0D74  1803               	btfsc	3,0
  2294  0D75  2D78               	goto	l100
  2295                           
  2296                           ;./servo.h: 24:         _delay((unsigned long)((1)*(4000000/4000000.0)));
  2297  0D76  0000               	nop
  2298  0D77  2D6B               	goto	l2200
  2299  0D78                     l100:	
  2300                           
  2301                           ;./servo.h: 26:     PORTBbits.RB0 = 0;
  2302  0D78  1006               	bcf	6,0	;volatile
  2303                           
  2304                           ;./servo.h: 27:     _delay((unsigned long)((10)*(4000000/4000.0)));
  2305  0D79  300D               	movlw	13
  2306  0D7A  1283               	bcf	3,5	;RP0=0, select bank0
  2307  0D7B  1303               	bcf	3,6	;RP1=0, select bank0
  2308  0D7C  00EB               	movwf	??_position1+1
  2309  0D7D  30FB               	movlw	251
  2310  0D7E  00EA               	movwf	??_position1
  2311  0D7F                     u3117:	
  2312  0D7F  0BEA               	decfsz	??_position1,f
  2313  0D80  2D7F               	goto	u3117
  2314  0D81  0BEB               	decfsz	??_position1+1,f
  2315  0D82  2D7F               	goto	u3117
  2316  0D83  0008               	return
  2317  0D84                     __end_of_position1:	
  2318                           
  2319                           	psect	text11
  2320  001F                     __ptext11:	
  2321 ;; *************** function _convertion *****************
  2322 ;; Defined at:
  2323 ;;		line 14 in file "./servo.h"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;  angule          1    wreg     unsigned char 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;  angule          1   62[BANK0 ] unsigned char 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  4   46[BANK0 ] float 
  2330 ;; Registers used:
  2331 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2337 ;;      Params:         0       4       0       0       0
  2338 ;;      Locals:         0       9       0       0       0
  2339 ;;      Temps:          0       4       0       0       0
  2340 ;;      Totals:         0      17       0       0       0
  2341 ;;Total ram usage:       17 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:    2
  2344 ;; This function calls:
  2345 ;;		___fladd
  2346 ;;		___flmul
  2347 ;;		___xxtofl
  2348 ;; This function is called by:
  2349 ;;		_position1
  2350 ;;		_position2
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           
  2355                           ;psect for function _convertion
  2356  001F                     _convertion:	
  2357                           
  2358                           ;incstack = 0
  2359                           ; Regs used in _convertion: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2360                           ;convertion@angule stored from wreg
  2361  001F  1283               	bcf	3,5	;RP0=0, select bank0
  2362  0020  1303               	bcf	3,6	;RP1=0, select bank0
  2363  0021  00DE               	movwf	convertion@angule
  2364                           
  2365                           ;./servo.h: 15:     return angule <= 0 ? 70 : angule >= 180 ? 142 : ((float) angule * 0.
      +                          4) + 70;
  2366  0022  085E               	movf	convertion@angule,w
  2367  0023  1903               	btfsc	3,2
  2368  0024  2884               	goto	l2042
  2369  0025  30B4               	movlw	180
  2370  0026  025E               	subwf	convertion@angule,w
  2371  0027  1803               	skipnc
  2372  0028  2874               	goto	l2040
  2373  0029  3042               	movlw	66
  2374  002A  00BD               	movwf	___fladd@b+3
  2375  002B  308C               	movlw	140
  2376  002C  00BC               	movwf	___fladd@b+2
  2377  002D  3000               	movlw	0
  2378  002E  00BB               	movwf	___fladd@b+1
  2379  002F  3000               	movlw	0
  2380  0030  00BA               	movwf	___fladd@b
  2381  0031  303E               	movlw	62
  2382  0032  00A3               	movwf	___flmul@b+3
  2383  0033  30CC               	movlw	204
  2384  0034  00A2               	movwf	___flmul@b+2
  2385  0035  30CC               	movlw	204
  2386  0036  00A1               	movwf	___flmul@b+1
  2387  0037  30CD               	movlw	205
  2388  0038  00A0               	movwf	___flmul@b
  2389  0039  085E               	movf	convertion@angule,w
  2390  003A  00D2               	movwf	??_convertion
  2391  003B  01D3               	clrf	??_convertion+1
  2392  003C  01D4               	clrf	??_convertion+2
  2393  003D  01D5               	clrf	??_convertion+3
  2394  003E  0855               	movf	??_convertion+3,w
  2395  003F  00F3               	movwf	___xxtofl@val+3
  2396  0040  0854               	movf	??_convertion+2,w
  2397  0041  00F2               	movwf	___xxtofl@val+2
  2398  0042  0853               	movf	??_convertion+1,w
  2399  0043  00F1               	movwf	___xxtofl@val+1
  2400  0044  0852               	movf	??_convertion,w
  2401  0045  00F0               	movwf	___xxtofl@val
  2402  0046  3000               	movlw	0
  2403  0047  120A  158A  275D  120A  118A  	fcall	___xxtofl
  2404  004C  0873               	movf	?___xxtofl+3,w
  2405  004D  1283               	bcf	3,5	;RP0=0, select bank0
  2406  004E  1303               	bcf	3,6	;RP1=0, select bank0
  2407  004F  00A7               	movwf	___flmul@a+3
  2408  0050  0872               	movf	?___xxtofl+2,w
  2409  0051  00A6               	movwf	___flmul@a+2
  2410  0052  0871               	movf	?___xxtofl+1,w
  2411  0053  00A5               	movwf	___flmul@a+1
  2412  0054  0870               	movf	?___xxtofl,w
  2413  0055  00A4               	movwf	___flmul@a
  2414  0056  120A  118A  24E0  120A  118A  	fcall	___flmul
  2415  005B  1283               	bcf	3,5	;RP0=0, select bank0
  2416  005C  1303               	bcf	3,6	;RP1=0, select bank0
  2417  005D  0823               	movf	?___flmul+3,w
  2418  005E  00C1               	movwf	___fladd@a+3
  2419  005F  0822               	movf	?___flmul+2,w
  2420  0060  00C0               	movwf	___fladd@a+2
  2421  0061  0821               	movf	?___flmul+1,w
  2422  0062  00BF               	movwf	___fladd@a+1
  2423  0063  0820               	movf	?___flmul,w
  2424  0064  00BE               	movwf	___fladd@a
  2425  0065  120A  118A  22B1  120A  118A  	fcall	___fladd
  2426  006A  1283               	bcf	3,5	;RP0=0, select bank0
  2427  006B  1303               	bcf	3,6	;RP1=0, select bank0
  2428  006C  083D               	movf	?___fladd+3,w
  2429  006D  00DD               	movwf	_convertion$206+3
  2430  006E  083C               	movf	?___fladd+2,w
  2431  006F  00DC               	movwf	_convertion$206+2
  2432  0070  083B               	movf	?___fladd+1,w
  2433  0071  00DB               	movwf	_convertion$206+1
  2434  0072  083A               	movf	?___fladd,w
  2435  0073  287B               	goto	L1
  2436  0074                     l2040:	
  2437  0074  3043               	movlw	67
  2438  0075  00DD               	movwf	_convertion$206+3
  2439  0076  300E               	movlw	14
  2440  0077  00DC               	movwf	_convertion$206+2
  2441  0078  3000               	movlw	0
  2442  0079  00DB               	movwf	_convertion$206+1
  2443  007A  3000               	movlw	0
  2444  007B                     L1:	
  2445  007B  00DA               	movwf	_convertion$206
  2446  007C  085D               	movf	_convertion$206+3,w
  2447  007D  00D9               	movwf	_convertion$205+3
  2448  007E  085C               	movf	_convertion$206+2,w
  2449  007F  00D8               	movwf	_convertion$205+2
  2450  0080  085B               	movf	_convertion$206+1,w
  2451  0081  00D7               	movwf	_convertion$205+1
  2452  0082  085A               	movf	_convertion$206,w
  2453  0083  288B               	goto	L2
  2454  0084                     l2042:	
  2455  0084  3042               	movlw	66
  2456  0085  00D9               	movwf	_convertion$205+3
  2457  0086  308C               	movlw	140
  2458  0087  00D8               	movwf	_convertion$205+2
  2459  0088  3000               	movlw	0
  2460  0089  00D7               	movwf	_convertion$205+1
  2461  008A  3000               	movlw	0
  2462  008B                     L2:	
  2463  008B  00D6               	movwf	_convertion$205
  2464  008C  0859               	movf	_convertion$205+3,w
  2465  008D  00D1               	movwf	?_convertion+3
  2466  008E  0858               	movf	_convertion$205+2,w
  2467  008F  00D0               	movwf	?_convertion+2
  2468  0090  0857               	movf	_convertion$205+1,w
  2469  0091  00CF               	movwf	?_convertion+1
  2470  0092  0856               	movf	_convertion$205,w
  2471  0093  00CE               	movwf	?_convertion
  2472  0094  0008               	return
  2473  0095                     __end_of_convertion:	
  2474                           
  2475                           	psect	text12
  2476  0F5D                     __ptext12:	
  2477 ;; *************** function ___xxtofl *****************
  2478 ;; Defined at:
  2479 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  sign            1    wreg     unsigned char 
  2482 ;;  val             4    0[COMMON] long 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  sign            1    8[COMMON] unsigned char 
  2485 ;;  arg             4   10[COMMON] unsigned long 
  2486 ;;  exp             1    9[COMMON] unsigned char 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  4    0[COMMON] unsigned char 
  2489 ;; Registers used:
  2490 ;;		wreg, status,2, status,0
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2496 ;;      Params:         4       0       0       0       0
  2497 ;;      Locals:         6       0       0       0       0
  2498 ;;      Temps:          4       0       0       0       0
  2499 ;;      Totals:        14       0       0       0       0
  2500 ;;Total ram usage:       14 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		_convertion
  2506 ;;		_main
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           
  2511                           ;psect for function ___xxtofl
  2512  0F5D                     ___xxtofl:	
  2513                           
  2514                           ;incstack = 0
  2515                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2516                           ;___xxtofl@sign stored from wreg
  2517  0F5D  00F8               	movwf	___xxtofl@sign
  2518  0F5E  0878               	movf	___xxtofl@sign,w
  2519  0F5F  1D03               	btfss	3,2
  2520  0F60  1FF3               	btfss	___xxtofl@val+3,7
  2521  0F61  2F72               	goto	l1966
  2522  0F62  0970               	comf	___xxtofl@val,w
  2523  0F63  00FA               	movwf	___xxtofl@arg
  2524  0F64  0971               	comf	___xxtofl@val+1,w
  2525  0F65  00FB               	movwf	___xxtofl@arg+1
  2526  0F66  0972               	comf	___xxtofl@val+2,w
  2527  0F67  00FC               	movwf	___xxtofl@arg+2
  2528  0F68  0973               	comf	___xxtofl@val+3,w
  2529  0F69  00FD               	movwf	___xxtofl@arg+3
  2530  0F6A  0AFA               	incf	___xxtofl@arg,f
  2531  0F6B  1903               	skipnz
  2532  0F6C  0AFB               	incf	___xxtofl@arg+1,f
  2533  0F6D  1903               	skipnz
  2534  0F6E  0AFC               	incf	___xxtofl@arg+2,f
  2535  0F6F  1903               	skipnz
  2536  0F70  0AFD               	incf	___xxtofl@arg+3,f
  2537  0F71  2F7A               	goto	l665
  2538  0F72                     l1966:	
  2539  0F72  0873               	movf	___xxtofl@val+3,w
  2540  0F73  00FD               	movwf	___xxtofl@arg+3
  2541  0F74  0872               	movf	___xxtofl@val+2,w
  2542  0F75  00FC               	movwf	___xxtofl@arg+2
  2543  0F76  0871               	movf	___xxtofl@val+1,w
  2544  0F77  00FB               	movwf	___xxtofl@arg+1
  2545  0F78  0870               	movf	___xxtofl@val,w
  2546  0F79  00FA               	movwf	___xxtofl@arg
  2547  0F7A                     l665:	
  2548  0F7A  0873               	movf	___xxtofl@val+3,w
  2549  0F7B  0472               	iorwf	___xxtofl@val+2,w
  2550  0F7C  0471               	iorwf	___xxtofl@val+1,w
  2551  0F7D  0470               	iorwf	___xxtofl@val,w
  2552  0F7E  1D03               	skipz
  2553  0F7F  2F89               	goto	l1972
  2554  0F80  3000               	movlw	0
  2555  0F81  00F3               	movwf	?___xxtofl+3
  2556  0F82  3000               	movlw	0
  2557  0F83  00F2               	movwf	?___xxtofl+2
  2558  0F84  3000               	movlw	0
  2559  0F85  00F1               	movwf	?___xxtofl+1
  2560  0F86  3000               	movlw	0
  2561  0F87  00F0               	movwf	?___xxtofl
  2562  0F88  0008               	return
  2563  0F89                     l1972:	
  2564  0F89  3096               	movlw	150
  2565  0F8A  00F4               	movwf	??___xxtofl
  2566  0F8B  0874               	movf	??___xxtofl,w
  2567  0F8C  00F9               	movwf	___xxtofl@exp
  2568  0F8D                     l1976:	
  2569  0F8D  30FE               	movlw	254
  2570  0F8E  057D               	andwf	___xxtofl@arg+3,w
  2571  0F8F  1903               	btfsc	3,2
  2572  0F90  2FBA               	goto	l671
  2573  0F91  3001               	movlw	1
  2574  0F92  00F4               	movwf	??___xxtofl
  2575  0F93  0874               	movf	??___xxtofl,w
  2576  0F94  07F9               	addwf	___xxtofl@exp,f
  2577  0F95  3001               	movlw	1
  2578  0F96                     u2595:	
  2579  0F96  1003               	clrc
  2580  0F97  0CFD               	rrf	___xxtofl@arg+3,f
  2581  0F98  0CFC               	rrf	___xxtofl@arg+2,f
  2582  0F99  0CFB               	rrf	___xxtofl@arg+1,f
  2583  0F9A  0CFA               	rrf	___xxtofl@arg,f
  2584  0F9B  3EFF               	addlw	-1
  2585  0F9C  1D03               	skipz
  2586  0F9D  2F96               	goto	u2595
  2587  0F9E  2F8D               	goto	l1976
  2588  0F9F                     l1978:	
  2589  0F9F  3001               	movlw	1
  2590  0FA0  00F4               	movwf	??___xxtofl
  2591  0FA1  0874               	movf	??___xxtofl,w
  2592  0FA2  07F9               	addwf	___xxtofl@exp,f
  2593  0FA3  3001               	movlw	1
  2594  0FA4  07FA               	addwf	___xxtofl@arg,f
  2595  0FA5  3000               	movlw	0
  2596  0FA6  1803               	skipnc
  2597  0FA7  3001               	movlw	1
  2598  0FA8  07FB               	addwf	___xxtofl@arg+1,f
  2599  0FA9  3000               	movlw	0
  2600  0FAA  1803               	skipnc
  2601  0FAB  3001               	movlw	1
  2602  0FAC  07FC               	addwf	___xxtofl@arg+2,f
  2603  0FAD  3000               	movlw	0
  2604  0FAE  1803               	skipnc
  2605  0FAF  3001               	movlw	1
  2606  0FB0  07FD               	addwf	___xxtofl@arg+3,f
  2607  0FB1  3001               	movlw	1
  2608  0FB2                     u2615:	
  2609  0FB2  1003               	clrc
  2610  0FB3  0CFD               	rrf	___xxtofl@arg+3,f
  2611  0FB4  0CFC               	rrf	___xxtofl@arg+2,f
  2612  0FB5  0CFB               	rrf	___xxtofl@arg+1,f
  2613  0FB6  0CFA               	rrf	___xxtofl@arg,f
  2614  0FB7  3EFF               	addlw	-1
  2615  0FB8  1D03               	skipz
  2616  0FB9  2FB2               	goto	u2615
  2617  0FBA                     l671:	
  2618  0FBA  30FF               	movlw	255
  2619  0FBB  057D               	andwf	___xxtofl@arg+3,w
  2620  0FBC  1903               	btfsc	3,2
  2621  0FBD  2FCE               	goto	l1986
  2622  0FBE  2F9F               	goto	l1978
  2623  0FBF                     l1988:	
  2624  0FBF  3002               	movlw	2
  2625  0FC0  0279               	subwf	___xxtofl@exp,w
  2626  0FC1  1C03               	btfss	3,0
  2627  0FC2  2FD0               	goto	l678
  2628  0FC3  3001               	movlw	1
  2629  0FC4  02F9               	subwf	___xxtofl@exp,f
  2630  0FC5  3001               	movlw	1
  2631  0FC6  00F4               	movwf	??___xxtofl
  2632  0FC7                     u2635:	
  2633  0FC7  1003               	clrc
  2634  0FC8  0DFA               	rlf	___xxtofl@arg,f
  2635  0FC9  0DFB               	rlf	___xxtofl@arg+1,f
  2636  0FCA  0DFC               	rlf	___xxtofl@arg+2,f
  2637  0FCB  0DFD               	rlf	___xxtofl@arg+3,f
  2638  0FCC  0BF4               	decfsz	??___xxtofl,f
  2639  0FCD  2FC7               	goto	u2635
  2640  0FCE                     l1986:	
  2641  0FCE  1FFC               	btfss	___xxtofl@arg+2,7
  2642  0FCF  2FBF               	goto	l1988
  2643  0FD0                     l678:	
  2644  0FD0  1879               	btfsc	___xxtofl@exp,0
  2645  0FD1  2FDA               	goto	l679
  2646  0FD2  30FF               	movlw	255
  2647  0FD3  05FA               	andwf	___xxtofl@arg,f
  2648  0FD4  30FF               	movlw	255
  2649  0FD5  05FB               	andwf	___xxtofl@arg+1,f
  2650  0FD6  307F               	movlw	127
  2651  0FD7  05FC               	andwf	___xxtofl@arg+2,f
  2652  0FD8  30FF               	movlw	255
  2653  0FD9  05FD               	andwf	___xxtofl@arg+3,f
  2654  0FDA                     l679:	
  2655  0FDA  1003               	clrc
  2656  0FDB  0CF9               	rrf	___xxtofl@exp,f
  2657  0FDC  0879               	movf	___xxtofl@exp,w
  2658  0FDD  00F4               	movwf	??___xxtofl
  2659  0FDE  01F5               	clrf	??___xxtofl+1
  2660  0FDF  01F6               	clrf	??___xxtofl+2
  2661  0FE0  01F7               	clrf	??___xxtofl+3
  2662  0FE1  3018               	movlw	24
  2663  0FE2                     u2675:	
  2664  0FE2  1003               	clrc
  2665  0FE3  0DF4               	rlf	??___xxtofl,f
  2666  0FE4  0DF5               	rlf	??___xxtofl+1,f
  2667  0FE5  0DF6               	rlf	??___xxtofl+2,f
  2668  0FE6  0DF7               	rlf	??___xxtofl+3,f
  2669  0FE7  3EFF               	addlw	-1
  2670  0FE8  1D03               	skipz
  2671  0FE9  2FE2               	goto	u2675
  2672  0FEA  0874               	movf	??___xxtofl,w
  2673  0FEB  04FA               	iorwf	___xxtofl@arg,f
  2674  0FEC  0875               	movf	??___xxtofl+1,w
  2675  0FED  04FB               	iorwf	___xxtofl@arg+1,f
  2676  0FEE  0876               	movf	??___xxtofl+2,w
  2677  0FEF  04FC               	iorwf	___xxtofl@arg+2,f
  2678  0FF0  0877               	movf	??___xxtofl+3,w
  2679  0FF1  04FD               	iorwf	___xxtofl@arg+3,f
  2680  0FF2  0878               	movf	___xxtofl@sign,w
  2681  0FF3  1D03               	btfss	3,2
  2682  0FF4  1FF3               	btfss	___xxtofl@val+3,7
  2683  0FF5  2FF7               	goto	l2000
  2684  0FF6  17FD               	bsf	___xxtofl@arg+3,7
  2685  0FF7                     l2000:	
  2686  0FF7  087D               	movf	___xxtofl@arg+3,w
  2687  0FF8  00F3               	movwf	?___xxtofl+3
  2688  0FF9  087C               	movf	___xxtofl@arg+2,w
  2689  0FFA  00F2               	movwf	?___xxtofl+2
  2690  0FFB  087B               	movf	___xxtofl@arg+1,w
  2691  0FFC  00F1               	movwf	?___xxtofl+1
  2692  0FFD  087A               	movf	___xxtofl@arg,w
  2693  0FFE  00F0               	movwf	?___xxtofl
  2694  0FFF  0008               	return
  2695  1000                     __end_of___xxtofl:	
  2696                           
  2697                           	psect	text13
  2698  04E0                     __ptext13:	
  2699 ;; *************** function ___flmul *****************
  2700 ;; Defined at:
  2701 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  b               4    0[BANK0 ] unsigned char 
  2704 ;;  a               4    4[BANK0 ] unsigned char 
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  prod            4   20[BANK0 ] struct .
  2707 ;;  grs             4   14[BANK0 ] unsigned long 
  2708 ;;  temp            2   24[BANK0 ] struct .
  2709 ;;  bexp            1   19[BANK0 ] unsigned char 
  2710 ;;  aexp            1   18[BANK0 ] unsigned char 
  2711 ;;  sign            1   13[BANK0 ] unsigned char 
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  4    0[BANK0 ] unsigned char 
  2714 ;; Registers used:
  2715 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2721 ;;      Params:         0       8       0       0       0
  2722 ;;      Locals:         0      13       0       0       0
  2723 ;;      Temps:          0       5       0       0       0
  2724 ;;      Totals:         0      26       0       0       0
  2725 ;;Total ram usage:       26 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    1
  2728 ;; This function calls:
  2729 ;;		__Umul8_16
  2730 ;; This function is called by:
  2731 ;;		_convertion
  2732 ;;		_main
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           
  2737                           ;psect for function ___flmul
  2738  04E0                     ___flmul:	
  2739                           
  2740                           ;incstack = 0
  2741                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2742  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  2743  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  2744  04E2  0823               	movf	___flmul@b+3,w
  2745  04E3  3980               	andlw	128
  2746  04E4  00A8               	movwf	??___flmul
  2747  04E5  0828               	movf	??___flmul,w
  2748  04E6  00AD               	movwf	___flmul@sign
  2749  04E7  0823               	movf	___flmul@b+3,w
  2750  04E8  00A8               	movwf	??___flmul
  2751  04E9  0728               	addwf	??___flmul,w
  2752  04EA  00A9               	movwf	??___flmul+1
  2753  04EB  0829               	movf	??___flmul+1,w
  2754  04EC  00B3               	movwf	___flmul@bexp
  2755  04ED  1BA2               	btfsc	___flmul@b+2,7
  2756  04EE  1433               	bsf	___flmul@bexp,0
  2757  04EF  0833               	movf	___flmul@bexp,w
  2758  04F0  1903               	btfsc	3,2
  2759  04F1  2CFF               	goto	l1836
  2760  04F2  0A33               	incf	___flmul@bexp,w
  2761  04F3  1D03               	btfss	3,2
  2762  04F4  2CFD               	goto	l1834
  2763  04F5  3000               	movlw	0
  2764  04F6  00A3               	movwf	___flmul@b+3
  2765  04F7  3000               	movlw	0
  2766  04F8  00A2               	movwf	___flmul@b+2
  2767  04F9  3000               	movlw	0
  2768  04FA  00A1               	movwf	___flmul@b+1
  2769  04FB  3000               	movlw	0
  2770  04FC  00A0               	movwf	___flmul@b
  2771  04FD                     l1834:	
  2772  04FD  17A2               	bsf	___flmul@b+2,7
  2773  04FE  2D07               	goto	l1838
  2774  04FF                     l1836:	
  2775  04FF  3000               	movlw	0
  2776  0500  00A3               	movwf	___flmul@b+3
  2777  0501  3000               	movlw	0
  2778  0502  00A2               	movwf	___flmul@b+2
  2779  0503  3000               	movlw	0
  2780  0504  00A1               	movwf	___flmul@b+1
  2781  0505  3000               	movlw	0
  2782  0506  00A0               	movwf	___flmul@b
  2783  0507                     l1838:	
  2784  0507  0827               	movf	___flmul@a+3,w
  2785  0508  3980               	andlw	128
  2786  0509  00A8               	movwf	??___flmul
  2787  050A  0828               	movf	??___flmul,w
  2788  050B  06AD               	xorwf	___flmul@sign,f
  2789  050C  0827               	movf	___flmul@a+3,w
  2790  050D  00A8               	movwf	??___flmul
  2791  050E  0728               	addwf	??___flmul,w
  2792  050F  00A9               	movwf	??___flmul+1
  2793  0510  0829               	movf	??___flmul+1,w
  2794  0511  00B2               	movwf	___flmul@aexp
  2795  0512  1BA6               	btfsc	___flmul@a+2,7
  2796  0513  1432               	bsf	___flmul@aexp,0
  2797  0514  0832               	movf	___flmul@aexp,w
  2798  0515  1903               	btfsc	3,2
  2799  0516  2D24               	goto	l1854
  2800  0517  0A32               	incf	___flmul@aexp,w
  2801  0518  1D03               	btfss	3,2
  2802  0519  2D22               	goto	l1852
  2803  051A  3000               	movlw	0
  2804  051B  00A7               	movwf	___flmul@a+3
  2805  051C  3000               	movlw	0
  2806  051D  00A6               	movwf	___flmul@a+2
  2807  051E  3000               	movlw	0
  2808  051F  00A5               	movwf	___flmul@a+1
  2809  0520  3000               	movlw	0
  2810  0521  00A4               	movwf	___flmul@a
  2811  0522                     l1852:	
  2812  0522  17A6               	bsf	___flmul@a+2,7
  2813  0523  2D2C               	goto	l1856
  2814  0524                     l1854:	
  2815  0524  3000               	movlw	0
  2816  0525  00A7               	movwf	___flmul@a+3
  2817  0526  3000               	movlw	0
  2818  0527  00A6               	movwf	___flmul@a+2
  2819  0528  3000               	movlw	0
  2820  0529  00A5               	movwf	___flmul@a+1
  2821  052A  3000               	movlw	0
  2822  052B  00A4               	movwf	___flmul@a
  2823  052C                     l1856:	
  2824  052C  0832               	movf	___flmul@aexp,w
  2825  052D  1D03               	btfss	3,2
  2826  052E  0833               	movf	___flmul@bexp,w
  2827  052F  1D03               	btfss	3,2
  2828  0530  2D3A               	goto	l1864
  2829  0531  3000               	movlw	0
  2830  0532  00A3               	movwf	?___flmul+3
  2831  0533  3000               	movlw	0
  2832  0534  00A2               	movwf	?___flmul+2
  2833  0535  3000               	movlw	0
  2834  0536  00A1               	movwf	?___flmul+1
  2835  0537  3000               	movlw	0
  2836  0538  00A0               	movwf	?___flmul
  2837  0539  0008               	return
  2838  053A                     l1864:	
  2839  053A  0820               	movf	___flmul@b,w
  2840  053B  00A8               	movwf	??___flmul
  2841  053C  0828               	movf	??___flmul,w
  2842  053D  00F0               	movwf	__Umul8_16@multiplicand
  2843  053E  0826               	movf	___flmul@a+2,w
  2844  053F  120A  158A  24BF  120A  118A  	fcall	__Umul8_16
  2845  0544  0871               	movf	?__Umul8_16+1,w
  2846  0545  1283               	bcf	3,5	;RP0=0, select bank0
  2847  0546  1303               	bcf	3,6	;RP1=0, select bank0
  2848  0547  00B9               	movwf	___flmul@temp+1
  2849  0548  0870               	movf	?__Umul8_16,w
  2850  0549  00B8               	movwf	___flmul@temp
  2851  054A  0838               	movf	___flmul@temp,w
  2852  054B  00A8               	movwf	??___flmul
  2853  054C  01A9               	clrf	??___flmul+1
  2854  054D  01AA               	clrf	??___flmul+2
  2855  054E  01AB               	clrf	??___flmul+3
  2856  054F  082B               	movf	??___flmul+3,w
  2857  0550  00B1               	movwf	___flmul@grs+3
  2858  0551  082A               	movf	??___flmul+2,w
  2859  0552  00B0               	movwf	___flmul@grs+2
  2860  0553  0829               	movf	??___flmul+1,w
  2861  0554  00AF               	movwf	___flmul@grs+1
  2862  0555  0828               	movf	??___flmul,w
  2863  0556  00AE               	movwf	___flmul@grs
  2864  0557  0839               	movf	___flmul@temp+1,w
  2865  0558  00A8               	movwf	??___flmul
  2866  0559  01A9               	clrf	??___flmul+1
  2867  055A  01AA               	clrf	??___flmul+2
  2868  055B  01AB               	clrf	??___flmul+3
  2869  055C  082B               	movf	??___flmul+3,w
  2870  055D  00B7               	movwf	___flmul@prod+3
  2871  055E  082A               	movf	??___flmul+2,w
  2872  055F  00B6               	movwf	___flmul@prod+2
  2873  0560  0829               	movf	??___flmul+1,w
  2874  0561  00B5               	movwf	___flmul@prod+1
  2875  0562  0828               	movf	??___flmul,w
  2876  0563  00B4               	movwf	___flmul@prod
  2877  0564  0821               	movf	___flmul@b+1,w
  2878  0565  00A8               	movwf	??___flmul
  2879  0566  0828               	movf	??___flmul,w
  2880  0567  00F0               	movwf	__Umul8_16@multiplicand
  2881  0568  0825               	movf	___flmul@a+1,w
  2882  0569  120A  158A  24BF  120A  118A  	fcall	__Umul8_16
  2883  056E  0871               	movf	?__Umul8_16+1,w
  2884  056F  1283               	bcf	3,5	;RP0=0, select bank0
  2885  0570  1303               	bcf	3,6	;RP1=0, select bank0
  2886  0571  00B9               	movwf	___flmul@temp+1
  2887  0572  0870               	movf	?__Umul8_16,w
  2888  0573  00B8               	movwf	___flmul@temp
  2889  0574  0838               	movf	___flmul@temp,w
  2890  0575  00A8               	movwf	??___flmul
  2891  0576  01A9               	clrf	??___flmul+1
  2892  0577  01AA               	clrf	??___flmul+2
  2893  0578  01AB               	clrf	??___flmul+3
  2894  0579  0828               	movf	??___flmul,w
  2895  057A  07AE               	addwf	___flmul@grs,f
  2896  057B  0829               	movf	??___flmul+1,w
  2897  057C  1103               	clrz
  2898  057D  1803               	skipnc
  2899  057E  3E01               	addlw	1
  2900  057F  1D03               	btfss	3,2
  2901  0580  07AF               	addwf	___flmul@grs+1,f
  2902  0581  082A               	movf	??___flmul+2,w
  2903  0582  1103               	clrz
  2904  0583  1803               	skipnc
  2905  0584  3E01               	addlw	1
  2906  0585  1D03               	btfss	3,2
  2907  0586  07B0               	addwf	___flmul@grs+2,f
  2908  0587  082B               	movf	??___flmul+3,w
  2909  0588  1103               	clrz
  2910  0589  1803               	skipnc
  2911  058A  3E01               	addlw	1
  2912  058B  1D03               	btfss	3,2
  2913  058C  07B1               	addwf	___flmul@grs+3,f
  2914  058D  0839               	movf	___flmul@temp+1,w
  2915  058E  00A8               	movwf	??___flmul
  2916  058F  01A9               	clrf	??___flmul+1
  2917  0590  01AA               	clrf	??___flmul+2
  2918  0591  01AB               	clrf	??___flmul+3
  2919  0592  0828               	movf	??___flmul,w
  2920  0593  07B4               	addwf	___flmul@prod,f
  2921  0594  0829               	movf	??___flmul+1,w
  2922  0595  1103               	clrz
  2923  0596  1803               	skipnc
  2924  0597  3E01               	addlw	1
  2925  0598  1D03               	btfss	3,2
  2926  0599  07B5               	addwf	___flmul@prod+1,f
  2927  059A  082A               	movf	??___flmul+2,w
  2928  059B  1103               	clrz
  2929  059C  1803               	skipnc
  2930  059D  3E01               	addlw	1
  2931  059E  1D03               	btfss	3,2
  2932  059F  07B6               	addwf	___flmul@prod+2,f
  2933  05A0  082B               	movf	??___flmul+3,w
  2934  05A1  1103               	clrz
  2935  05A2  1803               	skipnc
  2936  05A3  3E01               	addlw	1
  2937  05A4  1D03               	btfss	3,2
  2938  05A5  07B7               	addwf	___flmul@prod+3,f
  2939  05A6  0822               	movf	___flmul@b+2,w
  2940  05A7  00A8               	movwf	??___flmul
  2941  05A8  0828               	movf	??___flmul,w
  2942  05A9  00F0               	movwf	__Umul8_16@multiplicand
  2943  05AA  0824               	movf	___flmul@a,w
  2944  05AB  120A  158A  24BF  120A  118A  	fcall	__Umul8_16
  2945  05B0  0871               	movf	?__Umul8_16+1,w
  2946  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2947  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2948  05B3  00B9               	movwf	___flmul@temp+1
  2949  05B4  0870               	movf	?__Umul8_16,w
  2950  05B5  00B8               	movwf	___flmul@temp
  2951  05B6  0838               	movf	___flmul@temp,w
  2952  05B7  00A8               	movwf	??___flmul
  2953  05B8  01A9               	clrf	??___flmul+1
  2954  05B9  01AA               	clrf	??___flmul+2
  2955  05BA  01AB               	clrf	??___flmul+3
  2956  05BB  0828               	movf	??___flmul,w
  2957  05BC  07AE               	addwf	___flmul@grs,f
  2958  05BD  0829               	movf	??___flmul+1,w
  2959  05BE  1103               	clrz
  2960  05BF  1803               	skipnc
  2961  05C0  3E01               	addlw	1
  2962  05C1  1D03               	btfss	3,2
  2963  05C2  07AF               	addwf	___flmul@grs+1,f
  2964  05C3  082A               	movf	??___flmul+2,w
  2965  05C4  1103               	clrz
  2966  05C5  1803               	skipnc
  2967  05C6  3E01               	addlw	1
  2968  05C7  1D03               	btfss	3,2
  2969  05C8  07B0               	addwf	___flmul@grs+2,f
  2970  05C9  082B               	movf	??___flmul+3,w
  2971  05CA  1103               	clrz
  2972  05CB  1803               	skipnc
  2973  05CC  3E01               	addlw	1
  2974  05CD  1D03               	btfss	3,2
  2975  05CE  07B1               	addwf	___flmul@grs+3,f
  2976  05CF  0839               	movf	___flmul@temp+1,w
  2977  05D0  00A8               	movwf	??___flmul
  2978  05D1  01A9               	clrf	??___flmul+1
  2979  05D2  01AA               	clrf	??___flmul+2
  2980  05D3  01AB               	clrf	??___flmul+3
  2981  05D4  0828               	movf	??___flmul,w
  2982  05D5  07B4               	addwf	___flmul@prod,f
  2983  05D6  0829               	movf	??___flmul+1,w
  2984  05D7  1103               	clrz
  2985  05D8  1803               	skipnc
  2986  05D9  3E01               	addlw	1
  2987  05DA  1D03               	btfss	3,2
  2988  05DB  07B5               	addwf	___flmul@prod+1,f
  2989  05DC  082A               	movf	??___flmul+2,w
  2990  05DD  1103               	clrz
  2991  05DE  1803               	skipnc
  2992  05DF  3E01               	addlw	1
  2993  05E0  1D03               	btfss	3,2
  2994  05E1  07B6               	addwf	___flmul@prod+2,f
  2995  05E2  082B               	movf	??___flmul+3,w
  2996  05E3  1103               	clrz
  2997  05E4  1803               	skipnc
  2998  05E5  3E01               	addlw	1
  2999  05E6  1D03               	btfss	3,2
  3000  05E7  07B7               	addwf	___flmul@prod+3,f
  3001  05E8  3008               	movlw	8
  3002  05E9  00A8               	movwf	??___flmul
  3003  05EA                     u2315:	
  3004  05EA  1003               	clrc
  3005  05EB  0DAE               	rlf	___flmul@grs,f
  3006  05EC  0DAF               	rlf	___flmul@grs+1,f
  3007  05ED  0DB0               	rlf	___flmul@grs+2,f
  3008  05EE  0DB1               	rlf	___flmul@grs+3,f
  3009  05EF  0BA8               	decfsz	??___flmul,f
  3010  05F0  2DEA               	goto	u2315
  3011  05F1  0821               	movf	___flmul@b+1,w
  3012  05F2  00A8               	movwf	??___flmul
  3013  05F3  0828               	movf	??___flmul,w
  3014  05F4  00F0               	movwf	__Umul8_16@multiplicand
  3015  05F5  0824               	movf	___flmul@a,w
  3016  05F6  120A  158A  24BF  120A  118A  	fcall	__Umul8_16
  3017  05FB  0871               	movf	?__Umul8_16+1,w
  3018  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  3019  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  3020  05FE  00B9               	movwf	___flmul@temp+1
  3021  05FF  0870               	movf	?__Umul8_16,w
  3022  0600  00B8               	movwf	___flmul@temp
  3023  0601  0838               	movf	___flmul@temp,w
  3024  0602  00A8               	movwf	??___flmul
  3025  0603  0839               	movf	___flmul@temp+1,w
  3026  0604  00A9               	movwf	??___flmul+1
  3027  0605  01AA               	clrf	??___flmul+2
  3028  0606  01AB               	clrf	??___flmul+3
  3029  0607  0828               	movf	??___flmul,w
  3030  0608  07AE               	addwf	___flmul@grs,f
  3031  0609  0829               	movf	??___flmul+1,w
  3032  060A  1103               	clrz
  3033  060B  1803               	skipnc
  3034  060C  3E01               	addlw	1
  3035  060D  1D03               	btfss	3,2
  3036  060E  07AF               	addwf	___flmul@grs+1,f
  3037  060F  082A               	movf	??___flmul+2,w
  3038  0610  1103               	clrz
  3039  0611  1803               	skipnc
  3040  0612  3E01               	addlw	1
  3041  0613  1D03               	btfss	3,2
  3042  0614  07B0               	addwf	___flmul@grs+2,f
  3043  0615  082B               	movf	??___flmul+3,w
  3044  0616  1103               	clrz
  3045  0617  1803               	skipnc
  3046  0618  3E01               	addlw	1
  3047  0619  1D03               	btfss	3,2
  3048  061A  07B1               	addwf	___flmul@grs+3,f
  3049  061B  0820               	movf	___flmul@b,w
  3050  061C  00A8               	movwf	??___flmul
  3051  061D  0828               	movf	??___flmul,w
  3052  061E  00F0               	movwf	__Umul8_16@multiplicand
  3053  061F  0825               	movf	___flmul@a+1,w
  3054  0620  120A  158A  24BF  120A  118A  	fcall	__Umul8_16
  3055  0625  0871               	movf	?__Umul8_16+1,w
  3056  0626  1283               	bcf	3,5	;RP0=0, select bank0
  3057  0627  1303               	bcf	3,6	;RP1=0, select bank0
  3058  0628  00B9               	movwf	___flmul@temp+1
  3059  0629  0870               	movf	?__Umul8_16,w
  3060  062A  00B8               	movwf	___flmul@temp
  3061  062B  0838               	movf	___flmul@temp,w
  3062  062C  00A8               	movwf	??___flmul
  3063  062D  0839               	movf	___flmul@temp+1,w
  3064  062E  00A9               	movwf	??___flmul+1
  3065  062F  01AA               	clrf	??___flmul+2
  3066  0630  01AB               	clrf	??___flmul+3
  3067  0631  0828               	movf	??___flmul,w
  3068  0632  07AE               	addwf	___flmul@grs,f
  3069  0633  0829               	movf	??___flmul+1,w
  3070  0634  1103               	clrz
  3071  0635  1803               	skipnc
  3072  0636  3E01               	addlw	1
  3073  0637  1D03               	btfss	3,2
  3074  0638  07AF               	addwf	___flmul@grs+1,f
  3075  0639  082A               	movf	??___flmul+2,w
  3076  063A  1103               	clrz
  3077  063B  1803               	skipnc
  3078  063C  3E01               	addlw	1
  3079  063D  1D03               	btfss	3,2
  3080  063E  07B0               	addwf	___flmul@grs+2,f
  3081  063F  082B               	movf	??___flmul+3,w
  3082  0640  1103               	clrz
  3083  0641  1803               	skipnc
  3084  0642  3E01               	addlw	1
  3085  0643  1D03               	btfss	3,2
  3086  0644  07B1               	addwf	___flmul@grs+3,f
  3087  0645  3008               	movlw	8
  3088  0646  00A8               	movwf	??___flmul
  3089  0647                     u2345:	
  3090  0647  1003               	clrc
  3091  0648  0DAE               	rlf	___flmul@grs,f
  3092  0649  0DAF               	rlf	___flmul@grs+1,f
  3093  064A  0DB0               	rlf	___flmul@grs+2,f
  3094  064B  0DB1               	rlf	___flmul@grs+3,f
  3095  064C  0BA8               	decfsz	??___flmul,f
  3096  064D  2E47               	goto	u2345
  3097  064E  0820               	movf	___flmul@b,w
  3098  064F  00A8               	movwf	??___flmul
  3099  0650  0828               	movf	??___flmul,w
  3100  0651  00F0               	movwf	__Umul8_16@multiplicand
  3101  0652  0824               	movf	___flmul@a,w
  3102  0653  120A  158A  24BF  120A  118A  	fcall	__Umul8_16
  3103  0658  0871               	movf	?__Umul8_16+1,w
  3104  0659  1283               	bcf	3,5	;RP0=0, select bank0
  3105  065A  1303               	bcf	3,6	;RP1=0, select bank0
  3106  065B  00B9               	movwf	___flmul@temp+1
  3107  065C  0870               	movf	?__Umul8_16,w
  3108  065D  00B8               	movwf	___flmul@temp
  3109  065E  0838               	movf	___flmul@temp,w
  3110  065F  00A8               	movwf	??___flmul
  3111  0660  0839               	movf	___flmul@temp+1,w
  3112  0661  00A9               	movwf	??___flmul+1
  3113  0662  01AA               	clrf	??___flmul+2
  3114  0663  01AB               	clrf	??___flmul+3
  3115  0664  0828               	movf	??___flmul,w
  3116  0665  07AE               	addwf	___flmul@grs,f
  3117  0666  0829               	movf	??___flmul+1,w
  3118  0667  1103               	clrz
  3119  0668  1803               	skipnc
  3120  0669  3E01               	addlw	1
  3121  066A  1D03               	btfss	3,2
  3122  066B  07AF               	addwf	___flmul@grs+1,f
  3123  066C  082A               	movf	??___flmul+2,w
  3124  066D  1103               	clrz
  3125  066E  1803               	skipnc
  3126  066F  3E01               	addlw	1
  3127  0670  1D03               	btfss	3,2
  3128  0671  07B0               	addwf	___flmul@grs+2,f
  3129  0672  082B               	movf	??___flmul+3,w
  3130  0673  1103               	clrz
  3131  0674  1803               	skipnc
  3132  0675  3E01               	addlw	1
  3133  0676  1D03               	btfss	3,2
  3134  0677  07B1               	addwf	___flmul@grs+3,f
  3135  0678  0821               	movf	___flmul@b+1,w
  3136  0679  00A8               	movwf	??___flmul
  3137  067A  0828               	movf	??___flmul,w
  3138  067B  00F0               	movwf	__Umul8_16@multiplicand
  3139  067C  0826               	movf	___flmul@a+2,w
  3140  067D  120A  158A  24BF  120A  118A  	fcall	__Umul8_16
  3141  0682  0871               	movf	?__Umul8_16+1,w
  3142  0683  1283               	bcf	3,5	;RP0=0, select bank0
  3143  0684  1303               	bcf	3,6	;RP1=0, select bank0
  3144  0685  00B9               	movwf	___flmul@temp+1
  3145  0686  0870               	movf	?__Umul8_16,w
  3146  0687  00B8               	movwf	___flmul@temp
  3147  0688  0838               	movf	___flmul@temp,w
  3148  0689  00A8               	movwf	??___flmul
  3149  068A  0839               	movf	___flmul@temp+1,w
  3150  068B  00A9               	movwf	??___flmul+1
  3151  068C  01AA               	clrf	??___flmul+2
  3152  068D  01AB               	clrf	??___flmul+3
  3153  068E  0828               	movf	??___flmul,w
  3154  068F  07B4               	addwf	___flmul@prod,f
  3155  0690  0829               	movf	??___flmul+1,w
  3156  0691  1103               	clrz
  3157  0692  1803               	skipnc
  3158  0693  3E01               	addlw	1
  3159  0694  1D03               	btfss	3,2
  3160  0695  07B5               	addwf	___flmul@prod+1,f
  3161  0696  082A               	movf	??___flmul+2,w
  3162  0697  1103               	clrz
  3163  0698  1803               	skipnc
  3164  0699  3E01               	addlw	1
  3165  069A  1D03               	btfss	3,2
  3166  069B  07B6               	addwf	___flmul@prod+2,f
  3167  069C  082B               	movf	??___flmul+3,w
  3168  069D  1103               	clrz
  3169  069E  1803               	skipnc
  3170  069F  3E01               	addlw	1
  3171  06A0  1D03               	btfss	3,2
  3172  06A1  07B7               	addwf	___flmul@prod+3,f
  3173  06A2  0822               	movf	___flmul@b+2,w
  3174  06A3  00A8               	movwf	??___flmul
  3175  06A4  0828               	movf	??___flmul,w
  3176  06A5  00F0               	movwf	__Umul8_16@multiplicand
  3177  06A6  0825               	movf	___flmul@a+1,w
  3178  06A7  120A  158A  24BF  120A  118A  	fcall	__Umul8_16
  3179  06AC  0871               	movf	?__Umul8_16+1,w
  3180  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  3181  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  3182  06AF  00B9               	movwf	___flmul@temp+1
  3183  06B0  0870               	movf	?__Umul8_16,w
  3184  06B1  00B8               	movwf	___flmul@temp
  3185  06B2  0838               	movf	___flmul@temp,w
  3186  06B3  00A8               	movwf	??___flmul
  3187  06B4  0839               	movf	___flmul@temp+1,w
  3188  06B5  00A9               	movwf	??___flmul+1
  3189  06B6  01AA               	clrf	??___flmul+2
  3190  06B7  01AB               	clrf	??___flmul+3
  3191  06B8  0828               	movf	??___flmul,w
  3192  06B9  07B4               	addwf	___flmul@prod,f
  3193  06BA  0829               	movf	??___flmul+1,w
  3194  06BB  1103               	clrz
  3195  06BC  1803               	skipnc
  3196  06BD  3E01               	addlw	1
  3197  06BE  1D03               	btfss	3,2
  3198  06BF  07B5               	addwf	___flmul@prod+1,f
  3199  06C0  082A               	movf	??___flmul+2,w
  3200  06C1  1103               	clrz
  3201  06C2  1803               	skipnc
  3202  06C3  3E01               	addlw	1
  3203  06C4  1D03               	btfss	3,2
  3204  06C5  07B6               	addwf	___flmul@prod+2,f
  3205  06C6  082B               	movf	??___flmul+3,w
  3206  06C7  1103               	clrz
  3207  06C8  1803               	skipnc
  3208  06C9  3E01               	addlw	1
  3209  06CA  1D03               	btfss	3,2
  3210  06CB  07B7               	addwf	___flmul@prod+3,f
  3211  06CC  0822               	movf	___flmul@b+2,w
  3212  06CD  00A8               	movwf	??___flmul
  3213  06CE  0828               	movf	??___flmul,w
  3214  06CF  00F0               	movwf	__Umul8_16@multiplicand
  3215  06D0  0826               	movf	___flmul@a+2,w
  3216  06D1  120A  158A  24BF  120A  118A  	fcall	__Umul8_16
  3217  06D6  0871               	movf	?__Umul8_16+1,w
  3218  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  3219  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  3220  06D9  00B9               	movwf	___flmul@temp+1
  3221  06DA  0870               	movf	?__Umul8_16,w
  3222  06DB  00B8               	movwf	___flmul@temp
  3223  06DC  0838               	movf	___flmul@temp,w
  3224  06DD  00A8               	movwf	??___flmul
  3225  06DE  0839               	movf	___flmul@temp+1,w
  3226  06DF  00A9               	movwf	??___flmul+1
  3227  06E0  01AA               	clrf	??___flmul+2
  3228  06E1  01AB               	clrf	??___flmul+3
  3229  06E2  3008               	movlw	8
  3230  06E3                     u2385:	
  3231  06E3  1003               	clrc
  3232  06E4  0DA8               	rlf	??___flmul,f
  3233  06E5  0DA9               	rlf	??___flmul+1,f
  3234  06E6  0DAA               	rlf	??___flmul+2,f
  3235  06E7  0DAB               	rlf	??___flmul+3,f
  3236  06E8  3EFF               	addlw	-1
  3237  06E9  1D03               	skipz
  3238  06EA  2EE3               	goto	u2385
  3239  06EB  0828               	movf	??___flmul,w
  3240  06EC  07B4               	addwf	___flmul@prod,f
  3241  06ED  0829               	movf	??___flmul+1,w
  3242  06EE  1103               	clrz
  3243  06EF  1803               	skipnc
  3244  06F0  3E01               	addlw	1
  3245  06F1  1D03               	btfss	3,2
  3246  06F2  07B5               	addwf	___flmul@prod+1,f
  3247  06F3  082A               	movf	??___flmul+2,w
  3248  06F4  1103               	clrz
  3249  06F5  1803               	skipnc
  3250  06F6  3E01               	addlw	1
  3251  06F7  1D03               	btfss	3,2
  3252  06F8  07B6               	addwf	___flmul@prod+2,f
  3253  06F9  082B               	movf	??___flmul+3,w
  3254  06FA  1103               	clrz
  3255  06FB  1803               	skipnc
  3256  06FC  3E01               	addlw	1
  3257  06FD  1D03               	btfss	3,2
  3258  06FE  07B7               	addwf	___flmul@prod+3,f
  3259  06FF  082E               	movf	___flmul@grs,w
  3260  0700  00A8               	movwf	??___flmul
  3261  0701  082F               	movf	___flmul@grs+1,w
  3262  0702  00A9               	movwf	??___flmul+1
  3263  0703  0830               	movf	___flmul@grs+2,w
  3264  0704  00AA               	movwf	??___flmul+2
  3265  0705  0831               	movf	___flmul@grs+3,w
  3266  0706  00AB               	movwf	??___flmul+3
  3267  0707  3018               	movlw	24
  3268  0708                     u2405:	
  3269  0708  1003               	clrc
  3270  0709  0CAB               	rrf	??___flmul+3,f
  3271  070A  0CAA               	rrf	??___flmul+2,f
  3272  070B  0CA9               	rrf	??___flmul+1,f
  3273  070C  0CA8               	rrf	??___flmul,f
  3274  070D  3EFF               	addlw	-1
  3275  070E  1D03               	skipz
  3276  070F  2F08               	goto	u2405
  3277  0710  0828               	movf	??___flmul,w
  3278  0711  07B4               	addwf	___flmul@prod,f
  3279  0712  0829               	movf	??___flmul+1,w
  3280  0713  1103               	clrz
  3281  0714  1803               	skipnc
  3282  0715  3E01               	addlw	1
  3283  0716  1D03               	btfss	3,2
  3284  0717  07B5               	addwf	___flmul@prod+1,f
  3285  0718  082A               	movf	??___flmul+2,w
  3286  0719  1103               	clrz
  3287  071A  1803               	skipnc
  3288  071B  3E01               	addlw	1
  3289  071C  1D03               	btfss	3,2
  3290  071D  07B6               	addwf	___flmul@prod+2,f
  3291  071E  082B               	movf	??___flmul+3,w
  3292  071F  1103               	clrz
  3293  0720  1803               	skipnc
  3294  0721  3E01               	addlw	1
  3295  0722  1D03               	btfss	3,2
  3296  0723  07B7               	addwf	___flmul@prod+3,f
  3297  0724  3008               	movlw	8
  3298  0725  00A8               	movwf	??___flmul
  3299  0726                     u2425:	
  3300  0726  1003               	clrc
  3301  0727  0DAE               	rlf	___flmul@grs,f
  3302  0728  0DAF               	rlf	___flmul@grs+1,f
  3303  0729  0DB0               	rlf	___flmul@grs+2,f
  3304  072A  0DB1               	rlf	___flmul@grs+3,f
  3305  072B  0BA8               	decfsz	??___flmul,f
  3306  072C  2F26               	goto	u2425
  3307  072D  0833               	movf	___flmul@bexp,w
  3308  072E  0732               	addwf	___flmul@aexp,w
  3309  072F  00A8               	movwf	??___flmul
  3310  0730  01A9               	clrf	??___flmul+1
  3311  0731  0DA9               	rlf	??___flmul+1,f
  3312  0732  0828               	movf	??___flmul,w
  3313  0733  3E82               	addlw	130
  3314  0734  00B8               	movwf	___flmul@temp
  3315  0735  0829               	movf	??___flmul+1,w
  3316  0736  1803               	skipnc
  3317  0737  3E01               	addlw	1
  3318  0738  3EFF               	addlw	255
  3319  0739  00B9               	movwf	___flmul@temp+1
  3320  073A                     l1916:	
  3321  073A  1BB6               	btfsc	___flmul@prod+2,7
  3322  073B  2F57               	goto	l1918
  3323  073C  3001               	movlw	1
  3324  073D  00A8               	movwf	??___flmul
  3325  073E                     u2435:	
  3326  073E  1003               	clrc
  3327  073F  0DB4               	rlf	___flmul@prod,f
  3328  0740  0DB5               	rlf	___flmul@prod+1,f
  3329  0741  0DB6               	rlf	___flmul@prod+2,f
  3330  0742  0DB7               	rlf	___flmul@prod+3,f
  3331  0743  0BA8               	decfsz	??___flmul,f
  3332  0744  2F3E               	goto	u2435
  3333  0745  1BB1               	btfsc	___flmul@grs+3,7
  3334  0746  1434               	bsf	___flmul@prod,0
  3335  0747  3001               	movlw	1
  3336  0748  00A8               	movwf	??___flmul
  3337  0749                     u2455:	
  3338  0749  1003               	clrc
  3339  074A  0DAE               	rlf	___flmul@grs,f
  3340  074B  0DAF               	rlf	___flmul@grs+1,f
  3341  074C  0DB0               	rlf	___flmul@grs+2,f
  3342  074D  0DB1               	rlf	___flmul@grs+3,f
  3343  074E  0BA8               	decfsz	??___flmul,f
  3344  074F  2F49               	goto	u2455
  3345  0750  30FF               	movlw	255
  3346  0751  07B8               	addwf	___flmul@temp,f
  3347  0752  1803               	skipnc
  3348  0753  0AB9               	incf	___flmul@temp+1,f
  3349  0754  30FF               	movlw	255
  3350  0755  07B9               	addwf	___flmul@temp+1,f
  3351  0756  2F3A               	goto	l1916
  3352  0757                     l1918:	
  3353  0757  01B2               	clrf	___flmul@aexp
  3354  0758  1FB1               	btfss	___flmul@grs+3,7
  3355  0759  2F70               	goto	l1928
  3356  075A  30FF               	movlw	255
  3357  075B  052E               	andwf	___flmul@grs,w
  3358  075C  00A8               	movwf	??___flmul
  3359  075D  30FF               	movlw	255
  3360  075E  052F               	andwf	___flmul@grs+1,w
  3361  075F  00A9               	movwf	??___flmul+1
  3362  0760  30FF               	movlw	255
  3363  0761  0530               	andwf	___flmul@grs+2,w
  3364  0762  00AA               	movwf	??___flmul+2
  3365  0763  307F               	movlw	127
  3366  0764  0531               	andwf	___flmul@grs+3,w
  3367  0765  00AB               	movwf	??___flmul+3
  3368  0766  082B               	movf	??___flmul+3,w
  3369  0767  042A               	iorwf	??___flmul+2,w
  3370  0768  0429               	iorwf	??___flmul+1,w
  3371  0769  0428               	iorwf	??___flmul,w
  3372  076A  1903               	skipnz
  3373  076B  1834               	btfsc	___flmul@prod,0
  3374  076C  2F6E               	goto	l1924
  3375  076D  2F70               	goto	l1928
  3376  076E                     l1924:	
  3377  076E  01B2               	clrf	___flmul@aexp
  3378  076F  0AB2               	incf	___flmul@aexp,f
  3379  0770                     l1928:	
  3380  0770  0832               	movf	___flmul@aexp,w
  3381  0771  1903               	btfsc	3,2
  3382  0772  2FA2               	goto	l1938
  3383  0773  3001               	movlw	1
  3384  0774  07B4               	addwf	___flmul@prod,f
  3385  0775  3000               	movlw	0
  3386  0776  1803               	skipnc
  3387  0777  3001               	movlw	1
  3388  0778  07B5               	addwf	___flmul@prod+1,f
  3389  0779  3000               	movlw	0
  3390  077A  1803               	skipnc
  3391  077B  3001               	movlw	1
  3392  077C  07B6               	addwf	___flmul@prod+2,f
  3393  077D  3000               	movlw	0
  3394  077E  1803               	skipnc
  3395  077F  3001               	movlw	1
  3396  0780  07B7               	addwf	___flmul@prod+3,f
  3397  0781  1C37               	btfss	___flmul@prod+3,0
  3398  0782  2FA2               	goto	l1938
  3399  0783  0834               	movf	___flmul@prod,w
  3400  0784  00A8               	movwf	??___flmul
  3401  0785  0835               	movf	___flmul@prod+1,w
  3402  0786  00A9               	movwf	??___flmul+1
  3403  0787  0836               	movf	___flmul@prod+2,w
  3404  0788  00AA               	movwf	??___flmul+2
  3405  0789  0837               	movf	___flmul@prod+3,w
  3406  078A  00AB               	movwf	??___flmul+3
  3407  078B  3001               	movlw	1
  3408  078C  00AC               	movwf	??___flmul+4
  3409  078D                     u2525:	
  3410  078D  0D2B               	rlf	??___flmul+3,w
  3411  078E  0CAB               	rrf	??___flmul+3,f
  3412  078F  0CAA               	rrf	??___flmul+2,f
  3413  0790  0CA9               	rrf	??___flmul+1,f
  3414  0791  0CA8               	rrf	??___flmul,f
  3415  0792  0BAC               	decfsz	??___flmul+4,f
  3416  0793  2F8D               	goto	u2525
  3417  0794  082B               	movf	??___flmul+3,w
  3418  0795  00B7               	movwf	___flmul@prod+3
  3419  0796  082A               	movf	??___flmul+2,w
  3420  0797  00B6               	movwf	___flmul@prod+2
  3421  0798  0829               	movf	??___flmul+1,w
  3422  0799  00B5               	movwf	___flmul@prod+1
  3423  079A  0828               	movf	??___flmul,w
  3424  079B  00B4               	movwf	___flmul@prod
  3425  079C  3001               	movlw	1
  3426  079D  07B8               	addwf	___flmul@temp,f
  3427  079E  1803               	skipnc
  3428  079F  0AB9               	incf	___flmul@temp+1,f
  3429  07A0  3000               	movlw	0
  3430  07A1  07B9               	addwf	___flmul@temp+1,f
  3431  07A2                     l1938:	
  3432  07A2  0839               	movf	___flmul@temp+1,w
  3433  07A3  3A80               	xorlw	128
  3434  07A4  00FF               	movwf	127
  3435  07A5  3080               	movlw	128
  3436  07A6  027F               	subwf	127,w
  3437  07A7  1D03               	skipz
  3438  07A8  2FAB               	goto	u2535
  3439  07A9  30FF               	movlw	255
  3440  07AA  0238               	subwf	___flmul@temp,w
  3441  07AB                     u2535:	
  3442  07AB  1C03               	skipc
  3443  07AC  2FB8               	goto	l1942
  3444  07AD  307F               	movlw	127
  3445  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  3446  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  3447  07B0  00B7               	movwf	___flmul@prod+3
  3448  07B1  3080               	movlw	128
  3449  07B2  00B6               	movwf	___flmul@prod+2
  3450  07B3  3000               	movlw	0
  3451  07B4  00B5               	movwf	___flmul@prod+1
  3452  07B5  3000               	movlw	0
  3453  07B6  00B4               	movwf	___flmul@prod
  3454  07B7  2FE8               	goto	l639
  3455  07B8                     l1942:	
  3456  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  3457  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  3458  07BA  0839               	movf	___flmul@temp+1,w
  3459  07BB  3A80               	xorlw	128
  3460  07BC  00FF               	movwf	127
  3461  07BD  3080               	movlw	128
  3462  07BE  027F               	subwf	127,w
  3463  07BF  1D03               	skipz
  3464  07C0  2FC3               	goto	u2545
  3465  07C1  3001               	movlw	1
  3466  07C2  0238               	subwf	___flmul@temp,w
  3467  07C3                     u2545:	
  3468  07C3  1803               	skipnc
  3469  07C4  2FD1               	goto	l1948
  3470  07C5  3000               	movlw	0
  3471  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  3472  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  3473  07C8  00B7               	movwf	___flmul@prod+3
  3474  07C9  3000               	movlw	0
  3475  07CA  00B6               	movwf	___flmul@prod+2
  3476  07CB  3000               	movlw	0
  3477  07CC  00B5               	movwf	___flmul@prod+1
  3478  07CD  3000               	movlw	0
  3479  07CE  00B4               	movwf	___flmul@prod
  3480  07CF  01AD               	clrf	___flmul@sign
  3481  07D0  2FE8               	goto	l639
  3482  07D1                     l1948:	
  3483  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  3484  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  3485  07D3  0838               	movf	___flmul@temp,w
  3486  07D4  00A8               	movwf	??___flmul
  3487  07D5  0828               	movf	??___flmul,w
  3488  07D6  00B3               	movwf	___flmul@bexp
  3489  07D7  30FF               	movlw	255
  3490  07D8  05B4               	andwf	___flmul@prod,f
  3491  07D9  30FF               	movlw	255
  3492  07DA  05B5               	andwf	___flmul@prod+1,f
  3493  07DB  307F               	movlw	127
  3494  07DC  05B6               	andwf	___flmul@prod+2,f
  3495  07DD  3000               	movlw	0
  3496  07DE  05B7               	andwf	___flmul@prod+3,f
  3497  07DF  1833               	btfsc	___flmul@bexp,0
  3498  07E0  17B6               	bsf	___flmul@prod+2,7
  3499  07E1  0833               	movf	___flmul@bexp,w
  3500  07E2  00A8               	movwf	??___flmul
  3501  07E3  1003               	clrc
  3502  07E4  0C28               	rrf	??___flmul,w
  3503  07E5  00A9               	movwf	??___flmul+1
  3504  07E6  0829               	movf	??___flmul+1,w
  3505  07E7  00B7               	movwf	___flmul@prod+3
  3506  07E8                     l639:	
  3507  07E8  082D               	movf	___flmul@sign,w
  3508  07E9  00A8               	movwf	??___flmul
  3509  07EA  0828               	movf	??___flmul,w
  3510  07EB  04B7               	iorwf	___flmul@prod+3,f
  3511  07EC  0837               	movf	___flmul@prod+3,w
  3512  07ED  00A3               	movwf	?___flmul+3
  3513  07EE  0836               	movf	___flmul@prod+2,w
  3514  07EF  00A2               	movwf	?___flmul+2
  3515  07F0  0835               	movf	___flmul@prod+1,w
  3516  07F1  00A1               	movwf	?___flmul+1
  3517  07F2  0834               	movf	___flmul@prod,w
  3518  07F3  00A0               	movwf	?___flmul
  3519  07F4  0008               	return
  3520  07F5                     __end_of___flmul:	
  3521                           
  3522                           	psect	text14
  3523  0CBF                     __ptext14:	
  3524 ;; *************** function __Umul8_16 *****************
  3525 ;; Defined at:
  3526 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;  multiplier      1    wreg     unsigned char 
  3529 ;;  multiplicand    1    0[COMMON] unsigned char 
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;  multiplier      1    8[COMMON] unsigned char 
  3532 ;;  word_mpld       2    6[COMMON] unsigned int 
  3533 ;;  product         2    4[COMMON] unsigned int 
  3534 ;; Return value:  Size  Location     Type
  3535 ;;                  2    0[COMMON] unsigned int 
  3536 ;; Registers used:
  3537 ;;		wreg, status,2, status,0
  3538 ;; Tracked objects:
  3539 ;;		On entry : 0/0
  3540 ;;		On exit  : 0/0
  3541 ;;		Unchanged: 0/0
  3542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3543 ;;      Params:         2       0       0       0       0
  3544 ;;      Locals:         5       0       0       0       0
  3545 ;;      Temps:          2       0       0       0       0
  3546 ;;      Totals:         9       0       0       0       0
  3547 ;;Total ram usage:        9 bytes
  3548 ;; Hardware stack levels used:    1
  3549 ;; This function calls:
  3550 ;;		Nothing
  3551 ;; This function is called by:
  3552 ;;		___flmul
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           
  3557                           ;psect for function __Umul8_16
  3558  0CBF                     __Umul8_16:	
  3559                           
  3560                           ;incstack = 0
  3561                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3562                           ;__Umul8_16@multiplier stored from wreg
  3563  0CBF  00F8               	movwf	__Umul8_16@multiplier
  3564  0CC0  01F4               	clrf	__Umul8_16@product
  3565  0CC1  01F5               	clrf	__Umul8_16@product+1
  3566  0CC2  0870               	movf	__Umul8_16@multiplicand,w
  3567  0CC3  00F2               	movwf	??__Umul8_16
  3568  0CC4  01F3               	clrf	??__Umul8_16+1
  3569  0CC5  0872               	movf	??__Umul8_16,w
  3570  0CC6  00F6               	movwf	__Umul8_16@word_mpld
  3571  0CC7  0873               	movf	??__Umul8_16+1,w
  3572  0CC8  00F7               	movwf	__Umul8_16@word_mpld+1
  3573  0CC9                     l1538:	
  3574  0CC9  1C78               	btfss	__Umul8_16@multiplier,0
  3575  0CCA  2CD1               	goto	l684
  3576  0CCB  0876               	movf	__Umul8_16@word_mpld,w
  3577  0CCC  07F4               	addwf	__Umul8_16@product,f
  3578  0CCD  1803               	skipnc
  3579  0CCE  0AF5               	incf	__Umul8_16@product+1,f
  3580  0CCF  0877               	movf	__Umul8_16@word_mpld+1,w
  3581  0CD0  07F5               	addwf	__Umul8_16@product+1,f
  3582  0CD1                     l684:	
  3583  0CD1  3001               	movlw	1
  3584  0CD2                     u1575:	
  3585  0CD2  1003               	clrc
  3586  0CD3  0DF6               	rlf	__Umul8_16@word_mpld,f
  3587  0CD4  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  3588  0CD5  3EFF               	addlw	-1
  3589  0CD6  1D03               	skipz
  3590  0CD7  2CD2               	goto	u1575
  3591  0CD8  1003               	clrc
  3592  0CD9  0CF8               	rrf	__Umul8_16@multiplier,f
  3593  0CDA  0878               	movf	__Umul8_16@multiplier,w
  3594  0CDB  1D03               	btfss	3,2
  3595  0CDC  2CC9               	goto	l1538
  3596  0CDD  0875               	movf	__Umul8_16@product+1,w
  3597  0CDE  00F1               	movwf	?__Umul8_16+1
  3598  0CDF  0874               	movf	__Umul8_16@product,w
  3599  0CE0  00F0               	movwf	?__Umul8_16
  3600  0CE1  0008               	return
  3601  0CE2                     __end_of__Umul8_16:	
  3602                           
  3603                           	psect	text15
  3604  02B1                     __ptext15:	
  3605 ;; *************** function ___fladd *****************
  3606 ;; Defined at:
  3607 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  b               4   26[BANK0 ] unsigned int 
  3610 ;;  a               4   30[BANK0 ] unsigned int 
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  grs             1   45[BANK0 ] unsigned char 
  3613 ;;  bexp            1   44[BANK0 ] unsigned char 
  3614 ;;  aexp            1   43[BANK0 ] unsigned char 
  3615 ;;  signs           1   42[BANK0 ] unsigned char 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  4   26[BANK0 ] unsigned char 
  3618 ;; Registers used:
  3619 ;;		wreg, status,2, status,0, btemp+1
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3625 ;;      Params:         0       8       0       0       0
  3626 ;;      Locals:         0       4       0       0       0
  3627 ;;      Temps:          0       8       0       0       0
  3628 ;;      Totals:         0      20       0       0       0
  3629 ;;Total ram usage:       20 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; This function calls:
  3632 ;;		Nothing
  3633 ;; This function is called by:
  3634 ;;		_convertion
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           
  3638                           
  3639                           ;psect for function ___fladd
  3640  02B1                     ___fladd:	
  3641                           
  3642                           ;incstack = 0
  3643                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  3644  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  3645  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  3646  02B3  083D               	movf	___fladd@b+3,w
  3647  02B4  3980               	andlw	128
  3648  02B5  00C2               	movwf	??___fladd
  3649  02B6  0842               	movf	??___fladd,w
  3650  02B7  00CA               	movwf	___fladd@signs
  3651  02B8  083D               	movf	___fladd@b+3,w
  3652  02B9  00C2               	movwf	??___fladd
  3653  02BA  0742               	addwf	??___fladd,w
  3654  02BB  00C3               	movwf	??___fladd+1
  3655  02BC  0843               	movf	??___fladd+1,w
  3656  02BD  00CC               	movwf	___fladd@bexp
  3657  02BE  1BBC               	btfsc	___fladd@b+2,7
  3658  02BF  144C               	bsf	___fladd@bexp,0
  3659  02C0  084C               	movf	___fladd@bexp,w
  3660  02C1  1903               	btfsc	3,2
  3661  02C2  2AD1               	goto	l1644
  3662  02C3  0A4C               	incf	___fladd@bexp,w
  3663  02C4  1D03               	btfss	3,2
  3664  02C5  2ACE               	goto	l1640
  3665  02C6  3000               	movlw	0
  3666  02C7  00BD               	movwf	___fladd@b+3
  3667  02C8  3000               	movlw	0
  3668  02C9  00BC               	movwf	___fladd@b+2
  3669  02CA  3000               	movlw	0
  3670  02CB  00BB               	movwf	___fladd@b+1
  3671  02CC  3000               	movlw	0
  3672  02CD  00BA               	movwf	___fladd@b
  3673  02CE                     l1640:	
  3674  02CE  17BC               	bsf	___fladd@b+2,7
  3675  02CF  01BD               	clrf	___fladd@b+3
  3676  02D0  2AD9               	goto	l1646
  3677  02D1                     l1644:	
  3678  02D1  3000               	movlw	0
  3679  02D2  00BD               	movwf	___fladd@b+3
  3680  02D3  3000               	movlw	0
  3681  02D4  00BC               	movwf	___fladd@b+2
  3682  02D5  3000               	movlw	0
  3683  02D6  00BB               	movwf	___fladd@b+1
  3684  02D7  3000               	movlw	0
  3685  02D8  00BA               	movwf	___fladd@b
  3686  02D9                     l1646:	
  3687  02D9  0841               	movf	___fladd@a+3,w
  3688  02DA  3980               	andlw	128
  3689  02DB  00C2               	movwf	??___fladd
  3690  02DC  0842               	movf	??___fladd,w
  3691  02DD  00CB               	movwf	___fladd@aexp
  3692  02DE  084B               	movf	___fladd@aexp,w
  3693  02DF  064A               	xorwf	___fladd@signs,w
  3694  02E0  1D03               	btfss	3,2
  3695  02E1  174A               	bsf	___fladd@signs,6
  3696  02E2  0841               	movf	___fladd@a+3,w
  3697  02E3  00C2               	movwf	??___fladd
  3698  02E4  0742               	addwf	??___fladd,w
  3699  02E5  00C3               	movwf	??___fladd+1
  3700  02E6  0843               	movf	??___fladd+1,w
  3701  02E7  00CB               	movwf	___fladd@aexp
  3702  02E8  1BC0               	btfsc	___fladd@a+2,7
  3703  02E9  144B               	bsf	___fladd@aexp,0
  3704  02EA  084B               	movf	___fladd@aexp,w
  3705  02EB  1903               	btfsc	3,2
  3706  02EC  2AFB               	goto	l1668
  3707  02ED  0A4B               	incf	___fladd@aexp,w
  3708  02EE  1D03               	btfss	3,2
  3709  02EF  2AF8               	goto	l1664
  3710  02F0  3000               	movlw	0
  3711  02F1  00C1               	movwf	___fladd@a+3
  3712  02F2  3000               	movlw	0
  3713  02F3  00C0               	movwf	___fladd@a+2
  3714  02F4  3000               	movlw	0
  3715  02F5  00BF               	movwf	___fladd@a+1
  3716  02F6  3000               	movlw	0
  3717  02F7  00BE               	movwf	___fladd@a
  3718  02F8                     l1664:	
  3719  02F8  17C0               	bsf	___fladd@a+2,7
  3720  02F9  01C1               	clrf	___fladd@a+3
  3721  02FA  2B03               	goto	l531
  3722  02FB                     l1668:	
  3723  02FB  3000               	movlw	0
  3724  02FC  00C1               	movwf	___fladd@a+3
  3725  02FD  3000               	movlw	0
  3726  02FE  00C0               	movwf	___fladd@a+2
  3727  02FF  3000               	movlw	0
  3728  0300  00BF               	movwf	___fladd@a+1
  3729  0301  3000               	movlw	0
  3730  0302  00BE               	movwf	___fladd@a
  3731  0303                     l531:	
  3732  0303  084C               	movf	___fladd@bexp,w
  3733  0304  024B               	subwf	___fladd@aexp,w
  3734  0305  1803               	skipnc
  3735  0306  2B49               	goto	l1704
  3736  0307  1F4A               	btfss	___fladd@signs,6
  3737  0308  2B0D               	goto	l1674
  3738  0309  3080               	movlw	128
  3739  030A  00C2               	movwf	??___fladd
  3740  030B  0842               	movf	??___fladd,w
  3741  030C  06CA               	xorwf	___fladd@signs,f
  3742  030D                     l1674:	
  3743  030D  084C               	movf	___fladd@bexp,w
  3744  030E  00C2               	movwf	??___fladd
  3745  030F  0842               	movf	??___fladd,w
  3746  0310  00CD               	movwf	___fladd@grs
  3747  0311  084B               	movf	___fladd@aexp,w
  3748  0312  00C2               	movwf	??___fladd
  3749  0313  0842               	movf	??___fladd,w
  3750  0314  00CC               	movwf	___fladd@bexp
  3751  0315  084D               	movf	___fladd@grs,w
  3752  0316  00C2               	movwf	??___fladd
  3753  0317  0842               	movf	??___fladd,w
  3754  0318  00CB               	movwf	___fladd@aexp
  3755  0319  083A               	movf	___fladd@b,w
  3756  031A  00C2               	movwf	??___fladd
  3757  031B  0842               	movf	??___fladd,w
  3758  031C  00CD               	movwf	___fladd@grs
  3759  031D  083E               	movf	___fladd@a,w
  3760  031E  00C2               	movwf	??___fladd
  3761  031F  0842               	movf	??___fladd,w
  3762  0320  00BA               	movwf	___fladd@b
  3763  0321  084D               	movf	___fladd@grs,w
  3764  0322  00C2               	movwf	??___fladd
  3765  0323  0842               	movf	??___fladd,w
  3766  0324  00BE               	movwf	___fladd@a
  3767  0325  083B               	movf	___fladd@b+1,w
  3768  0326  00C2               	movwf	??___fladd
  3769  0327  0842               	movf	??___fladd,w
  3770  0328  00CD               	movwf	___fladd@grs
  3771  0329  083F               	movf	___fladd@a+1,w
  3772  032A  00C2               	movwf	??___fladd
  3773  032B  0842               	movf	??___fladd,w
  3774  032C  00BB               	movwf	___fladd@b+1
  3775  032D  084D               	movf	___fladd@grs,w
  3776  032E  00C2               	movwf	??___fladd
  3777  032F  0842               	movf	??___fladd,w
  3778  0330  00BF               	movwf	___fladd@a+1
  3779  0331  083C               	movf	___fladd@b+2,w
  3780  0332  00C2               	movwf	??___fladd
  3781  0333  0842               	movf	??___fladd,w
  3782  0334  00CD               	movwf	___fladd@grs
  3783  0335  0840               	movf	___fladd@a+2,w
  3784  0336  00C2               	movwf	??___fladd
  3785  0337  0842               	movf	??___fladd,w
  3786  0338  00BC               	movwf	___fladd@b+2
  3787  0339  084D               	movf	___fladd@grs,w
  3788  033A  00C2               	movwf	??___fladd
  3789  033B  0842               	movf	??___fladd,w
  3790  033C  00C0               	movwf	___fladd@a+2
  3791  033D  083D               	movf	___fladd@b+3,w
  3792  033E  00C2               	movwf	??___fladd
  3793  033F  0842               	movf	??___fladd,w
  3794  0340  00CD               	movwf	___fladd@grs
  3795  0341  0841               	movf	___fladd@a+3,w
  3796  0342  00C2               	movwf	??___fladd
  3797  0343  0842               	movf	??___fladd,w
  3798  0344  00BD               	movwf	___fladd@b+3
  3799  0345  084D               	movf	___fladd@grs,w
  3800  0346  00C2               	movwf	??___fladd
  3801  0347  0842               	movf	??___fladd,w
  3802  0348  00C1               	movwf	___fladd@a+3
  3803  0349                     l1704:	
  3804  0349  01CD               	clrf	___fladd@grs
  3805  034A  084B               	movf	___fladd@aexp,w
  3806  034B  00C2               	movwf	??___fladd
  3807  034C  01C3               	clrf	??___fladd+1
  3808  034D  0843               	movf	??___fladd+1,w
  3809  034E  00C5               	movwf	??___fladd+3
  3810  034F  084C               	movf	___fladd@bexp,w
  3811  0350  0242               	subwf	??___fladd,w
  3812  0351  00C4               	movwf	??___fladd+2
  3813  0352  1C03               	skipc
  3814  0353  03C5               	decf	??___fladd+3,f
  3815  0354  0845               	movf	??___fladd+3,w
  3816  0355  3A80               	xorlw	128
  3817  0356  00FF               	movwf	127
  3818  0357  3080               	movlw	128
  3819  0358  027F               	subwf	127,w
  3820  0359  1D03               	skipz
  3821  035A  2B5D               	goto	u1825
  3822  035B  301A               	movlw	26
  3823  035C  0244               	subwf	??___fladd+2,w
  3824  035D                     u1825:	
  3825  035D  1C03               	skipc
  3826  035E  2B96               	goto	l1722
  3827  035F  1283               	bcf	3,5	;RP0=0, select bank0
  3828  0360  1303               	bcf	3,6	;RP1=0, select bank0
  3829  0361  083D               	movf	___fladd@b+3,w
  3830  0362  043C               	iorwf	___fladd@b+2,w
  3831  0363  043B               	iorwf	___fladd@b+1,w
  3832  0364  043A               	iorwf	___fladd@b,w
  3833  0365  1903               	btfsc	3,2
  3834  0366  2B69               	goto	u1830
  3835  0367  3001               	movlw	1
  3836  0368  2B6A               	goto	u1840
  3837  0369                     u1830:	
  3838  0369  3000               	movlw	0
  3839  036A                     u1840:	
  3840  036A  00C2               	movwf	??___fladd
  3841  036B  0842               	movf	??___fladd,w
  3842  036C  00CD               	movwf	___fladd@grs
  3843  036D  3000               	movlw	0
  3844  036E  00BD               	movwf	___fladd@b+3
  3845  036F  3000               	movlw	0
  3846  0370  00BC               	movwf	___fladd@b+2
  3847  0371  3000               	movlw	0
  3848  0372  00BB               	movwf	___fladd@b+1
  3849  0373  3000               	movlw	0
  3850  0374  00BA               	movwf	___fladd@b
  3851  0375  084B               	movf	___fladd@aexp,w
  3852  0376  00C2               	movwf	??___fladd
  3853  0377  0842               	movf	??___fladd,w
  3854  0378  00CC               	movwf	___fladd@bexp
  3855  0379  2B9C               	goto	l535
  3856  037A                     l537:	
  3857  037A  1C4D               	btfss	___fladd@grs,0
  3858  037B  2B85               	goto	l1712
  3859  037C  084D               	movf	___fladd@grs,w
  3860  037D  00C2               	movwf	??___fladd
  3861  037E  1003               	clrc
  3862  037F  0C42               	rrf	??___fladd,w
  3863  0380  3801               	iorlw	1
  3864  0381  00C3               	movwf	??___fladd+1
  3865  0382  0843               	movf	??___fladd+1,w
  3866  0383  00CD               	movwf	___fladd@grs
  3867  0384  2B87               	goto	l1714
  3868  0385                     l1712:	
  3869  0385  1003               	clrc
  3870  0386  0CCD               	rrf	___fladd@grs,f
  3871  0387                     l1714:	
  3872  0387  183A               	btfsc	___fladd@b,0
  3873  0388  17CD               	bsf	___fladd@grs,7
  3874  0389  3001               	movlw	1
  3875  038A  00C2               	movwf	??___fladd
  3876  038B                     u1875:	
  3877  038B  0D3D               	rlf	___fladd@b+3,w
  3878  038C  0CBD               	rrf	___fladd@b+3,f
  3879  038D  0CBC               	rrf	___fladd@b+2,f
  3880  038E  0CBB               	rrf	___fladd@b+1,f
  3881  038F  0CBA               	rrf	___fladd@b,f
  3882  0390  0BC2               	decfsz	??___fladd& (0+127),f
  3883  0391  2B8B               	goto	u1875
  3884  0392  3001               	movlw	1
  3885  0393  00C2               	movwf	??___fladd
  3886  0394  0842               	movf	??___fladd,w
  3887  0395  07CC               	addwf	___fladd@bexp,f
  3888  0396                     l1722:	
  3889  0396  1283               	bcf	3,5	;RP0=0, select bank0
  3890  0397  1303               	bcf	3,6	;RP1=0, select bank0
  3891  0398  084B               	movf	___fladd@aexp,w
  3892  0399  024C               	subwf	___fladd@bexp,w
  3893  039A  1C03               	skipc
  3894  039B  2B7A               	goto	l537
  3895  039C                     l535:	
  3896  039C  1B4A               	btfsc	___fladd@signs,6
  3897  039D  2BDD               	goto	l1748
  3898  039E  084C               	movf	___fladd@bexp,w
  3899  039F  1D03               	btfss	3,2
  3900  03A0  2BAA               	goto	l1730
  3901  03A1  3000               	movlw	0
  3902  03A2  00BD               	movwf	?___fladd+3
  3903  03A3  3000               	movlw	0
  3904  03A4  00BC               	movwf	?___fladd+2
  3905  03A5  3000               	movlw	0
  3906  03A6  00BB               	movwf	?___fladd+1
  3907  03A7  3000               	movlw	0
  3908  03A8  00BA               	movwf	?___fladd
  3909  03A9  0008               	return
  3910  03AA                     l1730:	
  3911  03AA  083E               	movf	___fladd@a,w
  3912  03AB  07BA               	addwf	___fladd@b,f
  3913  03AC  083F               	movf	___fladd@a+1,w
  3914  03AD  1103               	clrz
  3915  03AE  1803               	skipnc
  3916  03AF  3E01               	addlw	1
  3917  03B0  1D03               	btfss	3,2
  3918  03B1  07BB               	addwf	___fladd@b+1,f
  3919  03B2  0840               	movf	___fladd@a+2,w
  3920  03B3  1103               	clrz
  3921  03B4  1803               	skipnc
  3922  03B5  3E01               	addlw	1
  3923  03B6  1D03               	btfss	3,2
  3924  03B7  07BC               	addwf	___fladd@b+2,f
  3925  03B8  0841               	movf	___fladd@a+3,w
  3926  03B9  1103               	clrz
  3927  03BA  1803               	skipnc
  3928  03BB  3E01               	addlw	1
  3929  03BC  1D03               	btfss	3,2
  3930  03BD  07BD               	addwf	___fladd@b+3,f
  3931  03BE  1C3D               	btfss	___fladd@b+3,0
  3932  03BF  2C7F               	goto	l1782
  3933  03C0  1C4D               	btfss	___fladd@grs,0
  3934  03C1  2BCB               	goto	l1738
  3935  03C2  084D               	movf	___fladd@grs,w
  3936  03C3  00C2               	movwf	??___fladd
  3937  03C4  1003               	clrc
  3938  03C5  0C42               	rrf	??___fladd,w
  3939  03C6  3801               	iorlw	1
  3940  03C7  00C3               	movwf	??___fladd+1
  3941  03C8  0843               	movf	??___fladd+1,w
  3942  03C9  00CD               	movwf	___fladd@grs
  3943  03CA  2BCD               	goto	l1740
  3944  03CB                     l1738:	
  3945  03CB  1003               	clrc
  3946  03CC  0CCD               	rrf	___fladd@grs,f
  3947  03CD                     l1740:	
  3948  03CD  183A               	btfsc	___fladd@b,0
  3949  03CE  17CD               	bsf	___fladd@grs,7
  3950  03CF  3001               	movlw	1
  3951  03D0  00C2               	movwf	??___fladd
  3952  03D1                     u1955:	
  3953  03D1  0D3D               	rlf	___fladd@b+3,w
  3954  03D2  0CBD               	rrf	___fladd@b+3,f
  3955  03D3  0CBC               	rrf	___fladd@b+2,f
  3956  03D4  0CBB               	rrf	___fladd@b+1,f
  3957  03D5  0CBA               	rrf	___fladd@b,f
  3958  03D6  0BC2               	decfsz	??___fladd& (0+127),f
  3959  03D7  2BD1               	goto	u1955
  3960  03D8  3001               	movlw	1
  3961  03D9  00C2               	movwf	??___fladd
  3962  03DA  0842               	movf	??___fladd,w
  3963  03DB  07CC               	addwf	___fladd@bexp,f
  3964  03DC  2C7F               	goto	l1782
  3965  03DD                     l1748:	
  3966  03DD  083D               	movf	___fladd@b+3,w
  3967  03DE  3A80               	xorlw	128
  3968  03DF  00FF               	movwf	127
  3969  03E0  0841               	movf	___fladd@a+3,w
  3970  03E1  3A80               	xorlw	128
  3971  03E2  027F               	subwf	127,w
  3972  03E3  1D03               	skipz
  3973  03E4  2BEF               	goto	u1963
  3974  03E5  0840               	movf	___fladd@a+2,w
  3975  03E6  023C               	subwf	___fladd@b+2,w
  3976  03E7  1D03               	skipz
  3977  03E8  2BEF               	goto	u1963
  3978  03E9  083F               	movf	___fladd@a+1,w
  3979  03EA  023B               	subwf	___fladd@b+1,w
  3980  03EB  1D03               	skipz
  3981  03EC  2BEF               	goto	u1963
  3982  03ED  083E               	movf	___fladd@a,w
  3983  03EE  023A               	subwf	___fladd@b,w
  3984  03EF                     u1963:	
  3985  03EF  1803               	skipnc
  3986  03F0  2C47               	goto	l1758
  3987  03F1  30FF               	movlw	255
  3988  03F2  00C2               	movwf	??___fladd
  3989  03F3  30FF               	movlw	255
  3990  03F4  00C3               	movwf	??___fladd+1
  3991  03F5  30FF               	movlw	255
  3992  03F6  00C4               	movwf	??___fladd+2
  3993  03F7  30FF               	movlw	255
  3994  03F8  00C5               	movwf	??___fladd+3
  3995  03F9  083E               	movf	___fladd@a,w
  3996  03FA  00C6               	movwf	??___fladd+4
  3997  03FB  083F               	movf	___fladd@a+1,w
  3998  03FC  00C7               	movwf	??___fladd+5
  3999  03FD  0840               	movf	___fladd@a+2,w
  4000  03FE  00C8               	movwf	??___fladd+6
  4001  03FF  0841               	movf	___fladd@a+3,w
  4002  0400  00C9               	movwf	??___fladd+7
  4003  0401  083A               	movf	___fladd@b,w
  4004  0402  02C6               	subwf	??___fladd+4,f
  4005  0403  083B               	movf	___fladd@b+1,w
  4006  0404  1C03               	skipc
  4007  0405  0F3B               	incfsz	___fladd@b+1,w
  4008  0406  2C08               	goto	u1971
  4009  0407  2C09               	goto	u1972
  4010  0408                     u1971:	
  4011  0408  02C7               	subwf	??___fladd+5,f
  4012  0409                     u1972:	
  4013  0409  083C               	movf	___fladd@b+2,w
  4014  040A  1C03               	skipc
  4015  040B  0F3C               	incfsz	___fladd@b+2,w
  4016  040C  2C0E               	goto	u1973
  4017  040D  2C0F               	goto	u1974
  4018  040E                     u1973:	
  4019  040E  02C8               	subwf	??___fladd+6,f
  4020  040F                     u1974:	
  4021  040F  083D               	movf	___fladd@b+3,w
  4022  0410  1C03               	skipc
  4023  0411  0F3D               	incfsz	___fladd@b+3,w
  4024  0412  2C14               	goto	u1975
  4025  0413  2C15               	goto	u1976
  4026  0414                     u1975:	
  4027  0414  02C9               	subwf	??___fladd+7,f
  4028  0415                     u1976:	
  4029  0415  0846               	movf	??___fladd+4,w
  4030  0416  07C2               	addwf	??___fladd,f
  4031  0417  0847               	movf	??___fladd+5,w
  4032  0418  1803               	skipnc
  4033  0419  0F47               	incfsz	??___fladd+5,w
  4034  041A  2C1C               	goto	u1980
  4035  041B  2C1D               	goto	u1981
  4036  041C                     u1980:	
  4037  041C  07C3               	addwf	??___fladd+1,f
  4038  041D                     u1981:	
  4039  041D  0848               	movf	??___fladd+6,w
  4040  041E  1803               	skipnc
  4041  041F  0F48               	incfsz	??___fladd+6,w
  4042  0420  2C22               	goto	u1982
  4043  0421  2C23               	goto	u1983
  4044  0422                     u1982:	
  4045  0422  07C4               	addwf	??___fladd+2,f
  4046  0423                     u1983:	
  4047  0423  0849               	movf	??___fladd+7,w
  4048  0424  1803               	skipnc
  4049  0425  0A49               	incf	??___fladd+7,w
  4050  0426  07C5               	addwf	??___fladd+3,f
  4051  0427  0845               	movf	??___fladd+3,w
  4052  0428  00BD               	movwf	___fladd@b+3
  4053  0429  0844               	movf	??___fladd+2,w
  4054  042A  00BC               	movwf	___fladd@b+2
  4055  042B  0843               	movf	??___fladd+1,w
  4056  042C  00BB               	movwf	___fladd@b+1
  4057  042D  0842               	movf	??___fladd,w
  4058  042E  00BA               	movwf	___fladd@b
  4059  042F  3080               	movlw	128
  4060  0430  00C2               	movwf	??___fladd
  4061  0431  0842               	movf	??___fladd,w
  4062  0432  06CA               	xorwf	___fladd@signs,f
  4063  0433  09CD               	comf	___fladd@grs,f
  4064  0434  0ACD               	incf	___fladd@grs,f
  4065  0435  084D               	movf	___fladd@grs,w
  4066  0436  1D03               	btfss	3,2
  4067  0437  2C55               	goto	l552
  4068  0438  3001               	movlw	1
  4069  0439  07BA               	addwf	___fladd@b,f
  4070  043A  3000               	movlw	0
  4071  043B  1803               	skipnc
  4072  043C  3001               	movlw	1
  4073  043D  07BB               	addwf	___fladd@b+1,f
  4074  043E  3000               	movlw	0
  4075  043F  1803               	skipnc
  4076  0440  3001               	movlw	1
  4077  0441  07BC               	addwf	___fladd@b+2,f
  4078  0442  3000               	movlw	0
  4079  0443  1803               	skipnc
  4080  0444  3001               	movlw	1
  4081  0445  07BD               	addwf	___fladd@b+3,f
  4082  0446  2C55               	goto	l552
  4083  0447                     l1758:	
  4084  0447  083E               	movf	___fladd@a,w
  4085  0448  02BA               	subwf	___fladd@b,f
  4086  0449  083F               	movf	___fladd@a+1,w
  4087  044A  1C03               	skipc
  4088  044B  0F3F               	incfsz	___fladd@a+1,w
  4089  044C  02BB               	subwf	___fladd@b+1,f
  4090  044D  0840               	movf	___fladd@a+2,w
  4091  044E  1C03               	skipc
  4092  044F  0F40               	incfsz	___fladd@a+2,w
  4093  0450  02BC               	subwf	___fladd@b+2,f
  4094  0451  0841               	movf	___fladd@a+3,w
  4095  0452  1C03               	skipc
  4096  0453  0F41               	incfsz	___fladd@a+3,w
  4097  0454  02BD               	subwf	___fladd@b+3,f
  4098  0455                     l552:	
  4099  0455  083D               	movf	___fladd@b+3,w
  4100  0456  043C               	iorwf	___fladd@b+2,w
  4101  0457  043B               	iorwf	___fladd@b+1,w
  4102  0458  043A               	iorwf	___fladd@b,w
  4103  0459  1D03               	skipz
  4104  045A  2C7D               	goto	l1780
  4105  045B  084D               	movf	___fladd@grs,w
  4106  045C  1D03               	btfss	3,2
  4107  045D  2C7D               	goto	l1780
  4108  045E  3000               	movlw	0
  4109  045F  00BD               	movwf	?___fladd+3
  4110  0460  3000               	movlw	0
  4111  0461  00BC               	movwf	?___fladd+2
  4112  0462  3000               	movlw	0
  4113  0463  00BB               	movwf	?___fladd+1
  4114  0464  3000               	movlw	0
  4115  0465  00BA               	movwf	?___fladd
  4116  0466  0008               	return
  4117  0467                     l1766:	
  4118  0467  3001               	movlw	1
  4119  0468  00C2               	movwf	??___fladd
  4120  0469                     u2025:	
  4121  0469  1003               	clrc
  4122  046A  0DBA               	rlf	___fladd@b,f
  4123  046B  0DBB               	rlf	___fladd@b+1,f
  4124  046C  0DBC               	rlf	___fladd@b+2,f
  4125  046D  0DBD               	rlf	___fladd@b+3,f
  4126  046E  0BC2               	decfsz	??___fladd,f
  4127  046F  2C69               	goto	u2025
  4128  0470  1BCD               	btfsc	___fladd@grs,7
  4129  0471  143A               	bsf	___fladd@b,0
  4130  0472  1C4D               	btfss	___fladd@grs,0
  4131  0473  2C76               	goto	l1774
  4132  0474  1403               	setc
  4133  0475  2C77               	goto	L3
  4134  0476                     l1774:	
  4135  0476  1003               	clrc
  4136  0477                     L3:	
  4137  0477  0DCD               	rlf	___fladd@grs,f
  4138  0478  084C               	movf	___fladd@bexp,w
  4139  0479  1903               	btfsc	3,2
  4140  047A  2C7D               	goto	l1780
  4141  047B  3001               	movlw	1
  4142  047C  02CC               	subwf	___fladd@bexp,f
  4143  047D                     l1780:	
  4144  047D  1FBC               	btfss	___fladd@b+2,7
  4145  047E  2C67               	goto	l1766
  4146  047F                     l1782:	
  4147  047F  01CB               	clrf	___fladd@aexp
  4148  0480  1FCD               	btfss	___fladd@grs,7
  4149  0481  2C8A               	goto	l1792
  4150  0482  084D               	movf	___fladd@grs,w
  4151  0483  397F               	andlw	127
  4152  0484  1903               	btfsc	3,2
  4153  0485  183A               	btfsc	___fladd@b,0
  4154  0486  2C88               	goto	l1788
  4155  0487  2C8A               	goto	l1792
  4156  0488                     l1788:	
  4157  0488  01CB               	clrf	___fladd@aexp
  4158  0489  0ACB               	incf	___fladd@aexp,f
  4159  048A                     l1792:	
  4160  048A  084B               	movf	___fladd@aexp,w
  4161  048B  1903               	btfsc	3,2
  4162  048C  2CBD               	goto	l565
  4163  048D  3001               	movlw	1
  4164  048E  07BA               	addwf	___fladd@b,f
  4165  048F  3000               	movlw	0
  4166  0490  1803               	skipnc
  4167  0491  3001               	movlw	1
  4168  0492  07BB               	addwf	___fladd@b+1,f
  4169  0493  3000               	movlw	0
  4170  0494  1803               	skipnc
  4171  0495  3001               	movlw	1
  4172  0496  07BC               	addwf	___fladd@b+2,f
  4173  0497  3000               	movlw	0
  4174  0498  1803               	skipnc
  4175  0499  3001               	movlw	1
  4176  049A  07BD               	addwf	___fladd@b+3,f
  4177  049B  1C3D               	btfss	___fladd@b+3,0
  4178  049C  2CBD               	goto	l565
  4179  049D  083A               	movf	___fladd@b,w
  4180  049E  00C2               	movwf	??___fladd
  4181  049F  083B               	movf	___fladd@b+1,w
  4182  04A0  00C3               	movwf	??___fladd+1
  4183  04A1  083C               	movf	___fladd@b+2,w
  4184  04A2  00C4               	movwf	??___fladd+2
  4185  04A3  083D               	movf	___fladd@b+3,w
  4186  04A4  00C5               	movwf	??___fladd+3
  4187  04A5  3001               	movlw	1
  4188  04A6  00C6               	movwf	??___fladd+4
  4189  04A7                     u2125:	
  4190  04A7  0D45               	rlf	??___fladd+3,w
  4191  04A8  0CC5               	rrf	??___fladd+3,f
  4192  04A9  0CC4               	rrf	??___fladd+2,f
  4193  04AA  0CC3               	rrf	??___fladd+1,f
  4194  04AB  0CC2               	rrf	??___fladd,f
  4195  04AC  0BC6               	decfsz	??___fladd+4,f
  4196  04AD  2CA7               	goto	u2125
  4197  04AE  0845               	movf	??___fladd+3,w
  4198  04AF  00BD               	movwf	___fladd@b+3
  4199  04B0  0844               	movf	??___fladd+2,w
  4200  04B1  00BC               	movwf	___fladd@b+2
  4201  04B2  0843               	movf	??___fladd+1,w
  4202  04B3  00BB               	movwf	___fladd@b+1
  4203  04B4  0842               	movf	??___fladd,w
  4204  04B5  00BA               	movwf	___fladd@b
  4205  04B6  0A4C               	incf	___fladd@bexp,w
  4206  04B7  1903               	btfsc	3,2
  4207  04B8  2CBD               	goto	l565
  4208  04B9  3001               	movlw	1
  4209  04BA  00C2               	movwf	??___fladd
  4210  04BB  0842               	movf	??___fladd,w
  4211  04BC  07CC               	addwf	___fladd@bexp,f
  4212  04BD                     l565:	
  4213  04BD  0A4C               	incf	___fladd@bexp,w
  4214  04BE  1D03               	btfss	3,2
  4215  04BF  084C               	movf	___fladd@bexp,w
  4216  04C0  1D03               	btfss	3,2
  4217  04C1  2CCD               	goto	l1810
  4218  04C2  3000               	movlw	0
  4219  04C3  00BD               	movwf	___fladd@b+3
  4220  04C4  3000               	movlw	0
  4221  04C5  00BC               	movwf	___fladd@b+2
  4222  04C6  3000               	movlw	0
  4223  04C7  00BB               	movwf	___fladd@b+1
  4224  04C8  3000               	movlw	0
  4225  04C9  00BA               	movwf	___fladd@b
  4226  04CA  084C               	movf	___fladd@bexp,w
  4227  04CB  1903               	btfsc	3,2
  4228  04CC  01CA               	clrf	___fladd@signs
  4229  04CD                     l1810:	
  4230  04CD  1C4C               	btfss	___fladd@bexp,0
  4231  04CE  2CD1               	goto	l1814
  4232  04CF  17BC               	bsf	___fladd@b+2,7
  4233  04D0  2CD5               	goto	l573
  4234  04D1                     l1814:	
  4235  04D1  307F               	movlw	127
  4236  04D2  00C2               	movwf	??___fladd
  4237  04D3  0842               	movf	??___fladd,w
  4238  04D4  05BC               	andwf	___fladd@b+2,f
  4239  04D5                     l573:	
  4240  04D5  084C               	movf	___fladd@bexp,w
  4241  04D6  00C2               	movwf	??___fladd
  4242  04D7  1003               	clrc
  4243  04D8  0C42               	rrf	??___fladd,w
  4244  04D9  00C3               	movwf	??___fladd+1
  4245  04DA  0843               	movf	??___fladd+1,w
  4246  04DB  00BD               	movwf	___fladd@b+3
  4247  04DC  1FCA               	btfss	___fladd@signs,7
  4248  04DD  0008               	return
  4249  04DE  17BD               	bsf	___fladd@b+3,7
  4250  04DF  0008               	return
  4251  04E0                     __end_of___fladd:	
  4252                           
  4253                           	psect	text16
  4254  0EF0                     __ptext16:	
  4255 ;; *************** function ___fltol *****************
  4256 ;; Defined at:
  4257 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;  f1              4   63[BANK0 ] unsigned char 
  4260 ;; Auto vars:     Size  Location     Type
  4261 ;;  exp1            1   73[BANK0 ] unsigned char 
  4262 ;;  sign1           1   72[BANK0 ] unsigned char 
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  4   63[BANK0 ] long 
  4265 ;; Registers used:
  4266 ;;		wreg, status,2, status,0
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4272 ;;      Params:         0       4       0       0       0
  4273 ;;      Locals:         0       2       0       0       0
  4274 ;;      Temps:          0       5       0       0       0
  4275 ;;      Totals:         0      11       0       0       0
  4276 ;;Total ram usage:       11 bytes
  4277 ;; Hardware stack levels used:    1
  4278 ;; This function calls:
  4279 ;;		Nothing
  4280 ;; This function is called by:
  4281 ;;		_position1
  4282 ;;		_position2
  4283 ;;		_main
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287                           
  4288                           ;psect for function ___fltol
  4289  0EF0                     ___fltol:	
  4290                           
  4291                           ;incstack = 0
  4292                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4293  0EF0  1003               	clrc
  4294  0EF1  1283               	bcf	3,5	;RP0=0, select bank0
  4295  0EF2  1303               	bcf	3,6	;RP1=0, select bank0
  4296  0EF3  0D61               	rlf	___fltol@f1+2,w
  4297  0EF4  0D62               	rlf	___fltol@f1+3,w
  4298  0EF5  00E3               	movwf	??___fltol
  4299  0EF6  0863               	movf	??___fltol,w
  4300  0EF7  00E9               	movwf	___fltol@exp1
  4301  0EF8  0869               	movf	___fltol@exp1,w
  4302  0EF9  1D03               	btfss	3,2
  4303  0EFA  2F04               	goto	l2114
  4304  0EFB                     l2110:	
  4305  0EFB  3000               	movlw	0
  4306  0EFC  00E2               	movwf	?___fltol+3
  4307  0EFD  3000               	movlw	0
  4308  0EFE  00E1               	movwf	?___fltol+2
  4309  0EFF  3000               	movlw	0
  4310  0F00  00E0               	movwf	?___fltol+1
  4311  0F01  3000               	movlw	0
  4312  0F02  00DF               	movwf	?___fltol
  4313  0F03  0008               	return
  4314  0F04                     l2114:	
  4315  0F04  085F               	movf	___fltol@f1,w
  4316  0F05  00E3               	movwf	??___fltol
  4317  0F06  0860               	movf	___fltol@f1+1,w
  4318  0F07  00E4               	movwf	??___fltol+1
  4319  0F08  0861               	movf	___fltol@f1+2,w
  4320  0F09  00E5               	movwf	??___fltol+2
  4321  0F0A  0862               	movf	___fltol@f1+3,w
  4322  0F0B  00E6               	movwf	??___fltol+3
  4323  0F0C  301F               	movlw	31
  4324  0F0D                     u2855:	
  4325  0F0D  1003               	clrc
  4326  0F0E  0CE6               	rrf	??___fltol+3,f
  4327  0F0F  0CE5               	rrf	??___fltol+2,f
  4328  0F10  0CE4               	rrf	??___fltol+1,f
  4329  0F11  0CE3               	rrf	??___fltol,f
  4330  0F12  3EFF               	addlw	-1
  4331  0F13  1D03               	skipz
  4332  0F14  2F0D               	goto	u2855
  4333  0F15  0863               	movf	??___fltol,w
  4334  0F16  00E7               	movwf	??___fltol+4
  4335  0F17  0867               	movf	??___fltol+4,w
  4336  0F18  00E8               	movwf	___fltol@sign1
  4337  0F19  17E1               	bsf	___fltol@f1+2,7
  4338  0F1A  30FF               	movlw	255
  4339  0F1B  05DF               	andwf	___fltol@f1,f
  4340  0F1C  30FF               	movlw	255
  4341  0F1D  05E0               	andwf	___fltol@f1+1,f
  4342  0F1E  30FF               	movlw	255
  4343  0F1F  05E1               	andwf	___fltol@f1+2,f
  4344  0F20  3000               	movlw	0
  4345  0F21  05E2               	andwf	___fltol@f1+3,f
  4346  0F22  3096               	movlw	150
  4347  0F23  02E9               	subwf	___fltol@exp1,f
  4348  0F24  1FE9               	btfss	___fltol@exp1,7
  4349  0F25  2F3B               	goto	l2132
  4350  0F26  0869               	movf	___fltol@exp1,w
  4351  0F27  3A80               	xorlw	128
  4352  0F28  3E97               	addlw	151
  4353  0F29  1C03               	btfss	3,0
  4354  0F2A  2EFB               	goto	l2110
  4355  0F2B                     l2130:	
  4356  0F2B  3001               	movlw	1
  4357  0F2C                     u2885:	
  4358  0F2C  1003               	clrc
  4359  0F2D  0CE2               	rrf	___fltol@f1+3,f
  4360  0F2E  0CE1               	rrf	___fltol@f1+2,f
  4361  0F2F  0CE0               	rrf	___fltol@f1+1,f
  4362  0F30  0CDF               	rrf	___fltol@f1,f
  4363  0F31  3EFF               	addlw	-1
  4364  0F32  1D03               	skipz
  4365  0F33  2F2C               	goto	u2885
  4366  0F34  3001               	movlw	1
  4367  0F35  00E3               	movwf	??___fltol
  4368  0F36  0863               	movf	??___fltol,w
  4369  0F37  07E9               	addwf	___fltol@exp1,f
  4370  0F38  1903               	btfsc	3,2
  4371  0F39  2F4E               	goto	l2140
  4372  0F3A  2F2B               	goto	l2130
  4373  0F3B                     l2132:	
  4374  0F3B  3020               	movlw	32
  4375  0F3C  0269               	subwf	___fltol@exp1,w
  4376  0F3D  1803               	btfsc	3,0
  4377  0F3E  2EFB               	goto	l2110
  4378  0F3F                     l431:	
  4379  0F3F  0869               	movf	___fltol@exp1,w
  4380  0F40  1903               	btfsc	3,2
  4381  0F41  2F4E               	goto	l2140
  4382  0F42  3001               	movlw	1
  4383  0F43  00E3               	movwf	??___fltol
  4384  0F44                     u2915:	
  4385  0F44  1003               	clrc
  4386  0F45  0DDF               	rlf	___fltol@f1,f
  4387  0F46  0DE0               	rlf	___fltol@f1+1,f
  4388  0F47  0DE1               	rlf	___fltol@f1+2,f
  4389  0F48  0DE2               	rlf	___fltol@f1+3,f
  4390  0F49  0BE3               	decfsz	??___fltol,f
  4391  0F4A  2F44               	goto	u2915
  4392  0F4B  3001               	movlw	1
  4393  0F4C  02E9               	subwf	___fltol@exp1,f
  4394  0F4D  2F3F               	goto	l431
  4395  0F4E                     l2140:	
  4396  0F4E  0868               	movf	___fltol@sign1,w
  4397  0F4F  1903               	btfsc	3,2
  4398  0F50  0008               	return
  4399  0F51  09DF               	comf	___fltol@f1,f
  4400  0F52  09E0               	comf	___fltol@f1+1,f
  4401  0F53  09E1               	comf	___fltol@f1+2,f
  4402  0F54  09E2               	comf	___fltol@f1+3,f
  4403  0F55  0ADF               	incf	___fltol@f1,f
  4404  0F56  1903               	skipnz
  4405  0F57  0AE0               	incf	___fltol@f1+1,f
  4406  0F58  1903               	skipnz
  4407  0F59  0AE1               	incf	___fltol@f1+2,f
  4408  0F5A  1903               	skipnz
  4409  0F5B  0AE2               	incf	___fltol@f1+3,f
  4410  0F5C  0008               	return
  4411  0F5D                     __end_of___fltol:	
  4412                           
  4413                           	psect	text17
  4414  0E8F                     __ptext17:	
  4415 ;; *************** function _lcdInit *****************
  4416 ;; Defined at:
  4417 ;;		line 66 in file "./lcd.h"
  4418 ;; Parameters:    Size  Location     Type
  4419 ;;		None
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;		None
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      void 
  4424 ;; Registers used:
  4425 ;;		wreg, status,2, status,0, pclath, cstack
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4431 ;;      Params:         0       0       0       0       0
  4432 ;;      Locals:         0       0       0       0       0
  4433 ;;      Temps:          2       0       0       0       0
  4434 ;;      Totals:         2       0       0       0       0
  4435 ;;Total ram usage:        2 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    2
  4438 ;; This function calls:
  4439 ;;		_lcdCmd
  4440 ;;		_lcdPort
  4441 ;; This function is called by:
  4442 ;;		_main
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           
  4447                           ;psect for function _lcdInit
  4448  0E8F                     _lcdInit:	
  4449                           
  4450                           ;./lcd.h: 67:     TRISD = 0;
  4451                           
  4452                           ;incstack = 0
  4453                           ; Regs used in _lcdInit: [wreg+status,2+status,0+pclath+cstack]
  4454  0E8F  1683               	bsf	3,5	;RP0=1, select bank1
  4455  0E90  1303               	bcf	3,6	;RP1=0, select bank1
  4456  0E91  0188               	clrf	8	;volatile
  4457                           
  4458                           ;./lcd.h: 68:     PORTD = 0;
  4459  0E92  1283               	bcf	3,5	;RP0=0, select bank0
  4460  0E93  1303               	bcf	3,6	;RP1=0, select bank0
  4461  0E94  0188               	clrf	8	;volatile
  4462                           
  4463                           ;./lcd.h: 69:     lcdPort(0x00);
  4464  0E95  3000               	movlw	0
  4465  0E96  120A  158A  2464  120A  158A  	fcall	_lcdPort
  4466                           
  4467                           ;./lcd.h: 70:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4468  0E9B  301A               	movlw	26
  4469  0E9C  00F5               	movwf	??_lcdInit+1
  4470  0E9D  30F8               	movlw	248
  4471  0E9E  00F4               	movwf	??_lcdInit
  4472  0E9F                     u3127:	
  4473  0E9F  0BF4               	decfsz	??_lcdInit,f
  4474  0EA0  2E9F               	goto	u3127
  4475  0EA1  0BF5               	decfsz	??_lcdInit+1,f
  4476  0EA2  2E9F               	goto	u3127
  4477  0EA3  0000               	nop
  4478                           
  4479                           ;./lcd.h: 71:     lcdCmd(0x03);
  4480  0EA4  3003               	movlw	3
  4481  0EA5  120A  118A  2005  120A  158A  	fcall	_lcdCmd
  4482                           
  4483                           ;./lcd.h: 72:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4484  0EAA  3007               	movlw	7
  4485  0EAB  00F5               	movwf	??_lcdInit+1
  4486  0EAC  307D               	movlw	125
  4487  0EAD  00F4               	movwf	??_lcdInit
  4488  0EAE                     u3137:	
  4489  0EAE  0BF4               	decfsz	??_lcdInit,f
  4490  0EAF  2EAE               	goto	u3137
  4491  0EB0  0BF5               	decfsz	??_lcdInit+1,f
  4492  0EB1  2EAE               	goto	u3137
  4493                           
  4494                           ;./lcd.h: 73:     lcdCmd(0x03);
  4495  0EB2  3003               	movlw	3
  4496  0EB3  120A  118A  2005  120A  158A  	fcall	_lcdCmd
  4497                           
  4498                           ;./lcd.h: 74:     _delay((unsigned long)((11)*(4000000/4000.0)));
  4499  0EB8  300F               	movlw	15
  4500  0EB9  00F5               	movwf	??_lcdInit+1
  4501  0EBA  3047               	movlw	71
  4502  0EBB  00F4               	movwf	??_lcdInit
  4503  0EBC                     u3147:	
  4504  0EBC  0BF4               	decfsz	??_lcdInit,f
  4505  0EBD  2EBC               	goto	u3147
  4506  0EBE  0BF5               	decfsz	??_lcdInit+1,f
  4507  0EBF  2EBC               	goto	u3147
  4508  0EC0  2EC1               	nop2
  4509                           
  4510                           ;./lcd.h: 75:     lcdCmd(0x03);
  4511  0EC1  3003               	movlw	3
  4512  0EC2  120A  118A  2005  120A  158A  	fcall	_lcdCmd
  4513                           
  4514                           ;./lcd.h: 77:     lcdCmd(0x02);
  4515  0EC7  3002               	movlw	2
  4516  0EC8  120A  118A  2005  120A  158A  	fcall	_lcdCmd
  4517                           
  4518                           ;./lcd.h: 78:     lcdCmd(0x02);
  4519  0ECD  3002               	movlw	2
  4520  0ECE  120A  118A  2005  120A  158A  	fcall	_lcdCmd
  4521                           
  4522                           ;./lcd.h: 79:     lcdCmd(0x08);
  4523  0ED3  3008               	movlw	8
  4524  0ED4  120A  118A  2005  120A  158A  	fcall	_lcdCmd
  4525                           
  4526                           ;./lcd.h: 80:     lcdCmd(0x00);
  4527  0ED9  3000               	movlw	0
  4528  0EDA  120A  118A  2005  120A  158A  	fcall	_lcdCmd
  4529                           
  4530                           ;./lcd.h: 81:     lcdCmd(0x0C);
  4531  0EDF  300C               	movlw	12
  4532  0EE0  120A  118A  2005  120A  158A  	fcall	_lcdCmd
  4533                           
  4534                           ;./lcd.h: 82:     lcdCmd(0x00);
  4535  0EE5  3000               	movlw	0
  4536  0EE6  120A  118A  2005  120A  158A  	fcall	_lcdCmd
  4537                           
  4538                           ;./lcd.h: 83:     lcdCmd(0x06);
  4539  0EEB  3006               	movlw	6
  4540  0EEC  120A  118A  2005   	fcall	_lcdCmd
  4541  0EEF  0008               	return
  4542  0EF0                     __end_of_lcdInit:	
  4543                           
  4544                           	psect	text18
  4545  0005                     __ptext18:	
  4546 ;; *************** function _lcdCmd *****************
  4547 ;; Defined at:
  4548 ;;		line 36 in file "./lcd.h"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;  a               1    wreg     unsigned char 
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;  a               1    3[COMMON] unsigned char 
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  1    wreg      void 
  4555 ;; Registers used:
  4556 ;;		wreg, status,2, status,0, pclath, cstack
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4562 ;;      Params:         0       0       0       0       0
  4563 ;;      Locals:         1       0       0       0       0
  4564 ;;      Temps:          2       0       0       0       0
  4565 ;;      Totals:         3       0       0       0       0
  4566 ;;Total ram usage:        3 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; Hardware stack levels required when called:    1
  4569 ;; This function calls:
  4570 ;;		_lcdPort
  4571 ;; This function is called by:
  4572 ;;		_lcdClear
  4573 ;;		_lcdSetCursor
  4574 ;;		_lcdInit
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578                           
  4579                           ;psect for function _lcdCmd
  4580  0005                     _lcdCmd:	
  4581                           
  4582                           ;incstack = 0
  4583                           ; Regs used in _lcdCmd: [wreg+status,2+status,0+pclath+cstack]
  4584                           ;lcdCmd@a stored from wreg
  4585  0005  00F3               	movwf	lcdCmd@a
  4586                           
  4587                           ;./lcd.h: 37:     RD2 = 0;
  4588  0006  1283               	bcf	3,5	;RP0=0, select bank0
  4589  0007  1303               	bcf	3,6	;RP1=0, select bank0
  4590  0008  1108               	bcf	8,2	;volatile
  4591                           
  4592                           ;./lcd.h: 38:     lcdPort(a);
  4593  0009  0873               	movf	lcdCmd@a,w
  4594  000A  120A  158A  2464  120A  118A  	fcall	_lcdPort
  4595                           
  4596                           ;./lcd.h: 39:     RD3 = 1;
  4597  000F  1283               	bcf	3,5	;RP0=0, select bank0
  4598  0010  1303               	bcf	3,6	;RP1=0, select bank0
  4599  0011  1588               	bsf	8,3	;volatile
  4600                           
  4601                           ;./lcd.h: 40:     _delay((unsigned long)((4)*(4000000/4000.0)));
  4602  0012  3006               	movlw	6
  4603  0013  00F2               	movwf	??_lcdCmd+1
  4604  0014  3030               	movlw	48
  4605  0015  00F1               	movwf	??_lcdCmd
  4606  0016                     u3157:	
  4607  0016  0BF1               	decfsz	??_lcdCmd,f
  4608  0017  2816               	goto	u3157
  4609  0018  0BF2               	decfsz	??_lcdCmd+1,f
  4610  0019  2816               	goto	u3157
  4611  001A  0000               	nop
  4612                           
  4613                           ;./lcd.h: 41:     RD3 = 0;
  4614  001B  1283               	bcf	3,5	;RP0=0, select bank0
  4615  001C  1303               	bcf	3,6	;RP1=0, select bank0
  4616  001D  1188               	bcf	8,3	;volatile
  4617  001E  0008               	return
  4618  001F                     __end_of_lcdCmd:	
  4619                           
  4620                           	psect	text19
  4621  0C64                     __ptext19:	
  4622 ;; *************** function _lcdPort *****************
  4623 ;; Defined at:
  4624 ;;		line 14 in file "./lcd.h"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;  a               1    wreg     unsigned char 
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;  a               1    0[COMMON] unsigned char 
  4629 ;; Return value:  Size  Location     Type
  4630 ;;                  1    wreg      void 
  4631 ;; Registers used:
  4632 ;;		wreg
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4638 ;;      Params:         0       0       0       0       0
  4639 ;;      Locals:         1       0       0       0       0
  4640 ;;      Temps:          0       0       0       0       0
  4641 ;;      Totals:         1       0       0       0       0
  4642 ;;Total ram usage:        1 bytes
  4643 ;; Hardware stack levels used:    1
  4644 ;; This function calls:
  4645 ;;		Nothing
  4646 ;; This function is called by:
  4647 ;;		_lcdCmd
  4648 ;;		_lcdInit
  4649 ;;		_lcdWriteChar
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           
  4653                           
  4654                           ;psect for function _lcdPort
  4655  0C64                     _lcdPort:	
  4656                           
  4657                           ;incstack = 0
  4658                           ; Regs used in _lcdPort: [wreg]
  4659                           ;lcdPort@a stored from wreg
  4660  0C64  00F0               	movwf	lcdPort@a
  4661                           
  4662                           ;./lcd.h: 15:     if (a & 1)
  4663  0C65  1C70               	btfss	lcdPort@a,0
  4664  0C66  2C6B               	goto	l43
  4665                           
  4666                           ;./lcd.h: 16:         RD4 = 1;
  4667  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4668  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4669  0C69  1608               	bsf	8,4	;volatile
  4670  0C6A  2C6E               	goto	l44
  4671  0C6B                     l43:	
  4672                           ;./lcd.h: 17:     else
  4673                           
  4674                           
  4675                           ;./lcd.h: 18:         RD4 = 0;
  4676  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  4677  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  4678  0C6D  1208               	bcf	8,4	;volatile
  4679  0C6E                     l44:	
  4680                           
  4681                           ;./lcd.h: 20:     if (a & 2)
  4682  0C6E  1CF0               	btfss	lcdPort@a,1
  4683  0C6F  2C72               	goto	l45
  4684                           
  4685                           ;./lcd.h: 21:         RD5 = 1;
  4686  0C70  1688               	bsf	8,5	;volatile
  4687  0C71  2C73               	goto	l46
  4688  0C72                     l45:	
  4689                           ;./lcd.h: 22:     else
  4690                           
  4691                           
  4692                           ;./lcd.h: 23:         RD5 = 0;
  4693  0C72  1288               	bcf	8,5	;volatile
  4694  0C73                     l46:	
  4695                           
  4696                           ;./lcd.h: 25:     if (a & 4)
  4697  0C73  1D70               	btfss	lcdPort@a,2
  4698  0C74  2C77               	goto	l47
  4699                           
  4700                           ;./lcd.h: 26:         RD6 = 1;
  4701  0C75  1708               	bsf	8,6	;volatile
  4702  0C76  2C78               	goto	l48
  4703  0C77                     l47:	
  4704                           ;./lcd.h: 27:     else
  4705                           
  4706                           
  4707                           ;./lcd.h: 28:         RD6 = 0;
  4708  0C77  1308               	bcf	8,6	;volatile
  4709  0C78                     l48:	
  4710                           
  4711                           ;./lcd.h: 30:     if (a & 8)
  4712  0C78  1DF0               	btfss	lcdPort@a,3
  4713  0C79  2C7C               	goto	l49
  4714                           
  4715                           ;./lcd.h: 31:         RD7 = 1;
  4716  0C7A  1788               	bsf	8,7	;volatile
  4717  0C7B  0008               	return
  4718  0C7C                     l49:	
  4719                           ;./lcd.h: 32:     else
  4720                           
  4721                           
  4722                           ;./lcd.h: 33:         RD7 = 0;
  4723  0C7C  1388               	bcf	8,7	;volatile
  4724  0C7D  0008               	return
  4725  0C7E                     __end_of_lcdPort:	
  4726                           
  4727                           	psect	text20
  4728  0C9C                     __ptext20:	
  4729 ;; *************** function _adcRead *****************
  4730 ;; Defined at:
  4731 ;;		line 35 in file "./adc.h"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;  adcChannel      1    wreg     const unsigned char 
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;  adcChannel      1    4[COMMON] const unsigned char 
  4736 ;; Return value:  Size  Location     Type
  4737 ;;                  2    0[COMMON] int 
  4738 ;; Registers used:
  4739 ;;		wreg, status,2, status,0
  4740 ;; Tracked objects:
  4741 ;;		On entry : 0/0
  4742 ;;		On exit  : 0/0
  4743 ;;		Unchanged: 0/0
  4744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4745 ;;      Params:         2       0       0       0       0
  4746 ;;      Locals:         1       0       0       0       0
  4747 ;;      Temps:          2       0       0       0       0
  4748 ;;      Totals:         5       0       0       0       0
  4749 ;;Total ram usage:        5 bytes
  4750 ;; Hardware stack levels used:    1
  4751 ;; This function calls:
  4752 ;;		Nothing
  4753 ;; This function is called by:
  4754 ;;		_main
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           
  4759                           ;psect for function _adcRead
  4760  0C9C                     _adcRead:	
  4761                           
  4762                           ;incstack = 0
  4763                           ; Regs used in _adcRead: [wreg+status,2+status,0]
  4764                           ;adcRead@adcChannel stored from wreg
  4765  0C9C  00F4               	movwf	adcRead@adcChannel
  4766                           
  4767                           ;./adc.h: 36:     ADCON0bits.ADON = 1;
  4768  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  4769  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  4770  0C9F  141F               	bsf	31,0	;volatile
  4771                           
  4772                           ;./adc.h: 37:     ADCON0bits.CHS = adcChannel;
  4773  0CA0  0874               	movf	adcRead@adcChannel,w
  4774  0CA1  00F2               	movwf	??_adcRead
  4775  0CA2  0DF2               	rlf	??_adcRead,f
  4776  0CA3  0DF2               	rlf	??_adcRead,f
  4777  0CA4  0DF2               	rlf	??_adcRead,f
  4778  0CA5  081F               	movf	31,w	;volatile
  4779  0CA6  0672               	xorwf	??_adcRead,w
  4780  0CA7  39C7               	andlw	-57
  4781  0CA8  0672               	xorwf	??_adcRead,w
  4782  0CA9  009F               	movwf	31	;volatile
  4783                           
  4784                           ;./adc.h: 38:     _delay((unsigned long)((10)*(4000000/4000.0)));
  4785  0CAA  300D               	movlw	13
  4786  0CAB  00F3               	movwf	??_adcRead+1
  4787  0CAC  30FB               	movlw	251
  4788  0CAD  00F2               	movwf	??_adcRead
  4789  0CAE                     u3167:	
  4790  0CAE  0BF2               	decfsz	??_adcRead,f
  4791  0CAF  2CAE               	goto	u3167
  4792  0CB0  0BF3               	decfsz	??_adcRead+1,f
  4793  0CB1  2CAE               	goto	u3167
  4794  0CB2  2CB3               	nop2
  4795                           
  4796                           ;./adc.h: 39:     ADCON0bits.GO = 1;
  4797  0CB3  1283               	bcf	3,5	;RP0=0, select bank0
  4798  0CB4  1303               	bcf	3,6	;RP1=0, select bank0
  4799  0CB5  151F               	bsf	31,2	;volatile
  4800  0CB6                     l81:	
  4801                           ;./adc.h: 40:     while (ADCON0bits.GO_DONE);
  4802                           
  4803  0CB6  191F               	btfsc	31,2	;volatile
  4804  0CB7  2CB6               	goto	l81
  4805                           
  4806                           ;./adc.h: 42:     return (ADRESH << 8) + (ADRESL);
  4807  0CB8  081E               	movf	30,w	;volatile
  4808  0CB9  00F1               	movwf	?_adcRead+1
  4809  0CBA  1683               	bsf	3,5	;RP0=1, select bank1
  4810  0CBB  1303               	bcf	3,6	;RP1=0, select bank1
  4811  0CBC  081E               	movf	30,w	;volatile
  4812  0CBD  00F0               	movwf	?_adcRead
  4813  0CBE  0008               	return
  4814  0CBF                     __end_of_adcRead:	
  4815                           
  4816                           	psect	text21
  4817  0C54                     __ptext21:	
  4818 ;; *************** function _adcInit *****************
  4819 ;; Defined at:
  4820 ;;		line 1 in file "./adc.h"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;		None
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;		None
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  1    wreg      void 
  4827 ;; Registers used:
  4828 ;;		wreg, status,2, status,0
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4834 ;;      Params:         0       0       0       0       0
  4835 ;;      Locals:         0       0       0       0       0
  4836 ;;      Temps:          0       0       0       0       0
  4837 ;;      Totals:         0       0       0       0       0
  4838 ;;Total ram usage:        0 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; This function calls:
  4841 ;;		Nothing
  4842 ;; This function is called by:
  4843 ;;		_main
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847                           
  4848                           ;psect for function _adcInit
  4849  0C54                     _adcInit:	
  4850                           
  4851                           ;./adc.h: 11:     ADCON0bits.ADCS = 0b01;
  4852                           
  4853                           ;incstack = 0
  4854                           ; Regs used in _adcInit: [wreg+status,2+status,0]
  4855  0C54  1283               	bcf	3,5	;RP0=0, select bank0
  4856  0C55  1303               	bcf	3,6	;RP1=0, select bank0
  4857  0C56  081F               	movf	31,w	;volatile
  4858  0C57  393F               	andlw	-193
  4859  0C58  3840               	iorlw	64
  4860  0C59  009F               	movwf	31	;volatile
  4861                           
  4862                           ;./adc.h: 12:     ADCON0bits.CHS = 0b000;
  4863  0C5A  30C7               	movlw	-57
  4864  0C5B  059F               	andwf	31,f	;volatile
  4865                           
  4866                           ;./adc.h: 13:     ADCON0bits.ADON = 0;
  4867  0C5C  101F               	bcf	31,0	;volatile
  4868                           
  4869                           ;./adc.h: 24:     ADCON1bits.ADFM = 1;
  4870  0C5D  1683               	bsf	3,5	;RP0=1, select bank1
  4871  0C5E  1303               	bcf	3,6	;RP1=0, select bank1
  4872  0C5F  179F               	bsf	31,7	;volatile
  4873                           
  4874                           ;./adc.h: 25:     ADCON1bits.ADCS2 = 1;
  4875  0C60  171F               	bsf	31,6	;volatile
  4876                           
  4877                           ;./adc.h: 26:     ADCON1bits.PCFG = 0b0000;
  4878  0C61  30F0               	movlw	-16
  4879  0C62  059F               	andwf	31,f	;volatile
  4880  0C63  0008               	return
  4881  0C64                     __end_of_adcInit:	
  4882  007E                     btemp	set	126	;btemp
  4883  007E                     wtemp0	set	126


Data Sizes:
    Strings     26
    Constant    10
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80      9      25
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> mensaje(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcdPrint@a	PTR unsigned char  size(1) Largest target is 16
		 -> mensaje(BANK1[16]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcdSetCursor->_lcdCmd
    _lcdPrint->_lcdWriteChar
    _lcdWriteChar->_lcdPort
    _lcdClear->_lcdCmd
    _convertion->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___xxtofl
    ___fltol->___xxtofl
    _lcdInit->_lcdCmd
    _lcdCmd->_lcdPort

Critical Paths under _main in BANK0

    _main->_position1
    _main->_position2
    _print->_sprintf
    _position2->___fltol
    _position1->___fltol
    _convertion->___fladd
    ___fladd->___flmul
    ___fltol->_convertion

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   18941
                                             78 BANK0      2     2      0
                                              0 BANK1      9     9      0
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _adcInit
                            _adcRead
                            _lcdInit
                          _position1
                          _position2
                              _print
 ---------------------------------------------------------------------------------
 (1) _print                                                6     2      4    2948
                                             13 BANK0      6     2      4
                           _lcdClear
                           _lcdPrint
                       _lcdSetCursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1320
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _lcdSetCursor                                         7     6      1     532
                                              4 COMMON     7     6      1
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (2) _lcdPrint                                             4     4      0     334
                                              5 COMMON     4     4      0
                       _lcdWriteChar
 ---------------------------------------------------------------------------------
 (3) _lcdWriteChar                                         4     4      0     178
                                              1 COMMON     4     4      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (2) _lcdClear                                             0     0      0     110
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (1) _position2                                            4     4      0    5944
                                             74 BANK0      4     4      0
                            ___fltol
                         _convertion
 ---------------------------------------------------------------------------------
 (1) _position1                                            4     4      0    5944
                                             74 BANK0      4     4      0
                            ___fltol
                         _convertion
 ---------------------------------------------------------------------------------
 (2) _convertion                                          17    13      4    5419
                                             46 BANK0     17    13      4
                            ___fladd
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    2569
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2262
                                             26 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             63 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                         _convertion (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              2     2      0     198
                                              4 COMMON     2     2      0
                             _lcdCmd
                            _lcdPort
 ---------------------------------------------------------------------------------
 (3) _lcdCmd                                               3     3      0     110
                                              1 COMMON     3     3      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (4) _lcdPort                                              1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adcRead                                              5     3      2      22
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
     _convertion (ARG)
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl
   ___xxtofl
   _adcInit
   _adcRead
   _lcdInit
     _lcdCmd
       _lcdPort
     _lcdPort
   _position1
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _convertion (ARG)
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
     _convertion
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl
   _position2
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
       _convertion (ARG)
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
     _convertion
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl
   _print
     _lcdClear
       _lcdCmd
         _lcdPort
     _lcdPrint
       _lcdWriteChar
         _lcdPort
     _lcdSetCursor
       _lcdCmd
         _lcdPort
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      77       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      9      19       7       31.3%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      77      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed May 15 17:19:48 2019

                      pc 0002              __CFG_CP$OFF 0000                       l43 0C6B  
                     l44 0C6E                       l45 0C72                       l46 0C73  
                     l47 0C77                       l48 0C78                       l81 0CB6  
                     l49 0C7C                       fsr 0004      __Umul8_16@word_mpld 0076  
                    l100 0D78                      l106 0DB1                      l118 01C3  
                    l119 01DD                      l431 0F3F                      l531 0303  
                    l535 039C                      l552 0455                      l537 037A  
                    l573 04D5                      l565 04BD                      l639 07E8  
                    l671 0FBA                      l665 0F7A                      l684 0CD1  
                    l678 0FD0                      l679 0FDA                      _RD2 0042  
                    _RD3 0043                      _RD4 0044                      _RD5 0045  
                    _RD6 0046                      _RD7 0047             __CFG_CPD$OFF 0000  
                    fsr0 0004                      indf 0000             __CFG_FOSC$XT 0000  
           ___flmul@aexp 0032             ___flmul@bexp 0033             ___flmul@sign 002D  
           ___flmul@temp 0038             ___flmul@prod 0034           ??_lcdWriteChar 0071  
          lcdWriteChar@a 0074            lcdWriteChar@y 0073              main@angule2 00B6  
            main@angulo1 00B7             __CFG_LVP$OFF 0000             ___fltol@exp1 0069  
                   l2000 0FF7                     l2100 0168                     l2110 0EFB  
                   l2040 0074                     l2200 0D6B                     l2032 0C81  
                   l2016 0E1E                     l2130 0F2B                     l2114 0F04  
                   l2042 0084                     l2210 0DA4                     l2140 0F4E  
                   l2132 0F3B                     l2060 00DA                     l2070 00F1  
                   l2054 00BC                     l1600 0DF4                     l2304 00CF  
                   l2082 0114                     l1612 0CE8                     l2076 00F3  
                   l2252 01A4                     l1614 0CF6                     l1622 0D0F  
                   l2270 0224                     l1712 0385                     l1704 0349  
                   l1640 02CE                     l2096 0127                     l2088 0123  
                   l1810 04CD                     l1730 03AA                     l1714 0387  
                   l1722 0396                     l1538 0CC9                     l1618 0D04  
                   l2098 009C                     l2282 02A5                     l1740 03CD  
                   l1644 02D1                     l1814 04D1                     l1646 02D9  
                   l1590 0DD3                     l1664 02F8                     l1738 03CB  
                   l1674 030D                     l1834 04FD                     l1780 047D  
                   l1748 03DD                     l1668 02FB                     l1924 076E  
                   l1916 073A                     l1852 0522                     l1836 04FF  
                   l1596 0DE9                     l1588 0DC5                     l1774 0476  
                   l1766 0467                     l1758 0447                     l1782 047F  
                   l1942 07B8                     l1918 0757                     l1854 0524  
                   l1838 0507                     l1792 048A                     l1928 0770  
                   l1864 053A                     l1856 052C                     l1938 07A2  
                   l1788 0488                     l1948 07D1                     l1972 0F89  
                   l1966 0F72                     l1976 0F8D                     l1986 0FCE  
                   l1978 0F9F                     l1988 0FBF                     STR_1 0810  
                   STR_2 081D                     u2025 0469                     u2125 04A7  
                   u3015 01E5                     u3025 0236                     u2315 05EA  
                   u3107 0DB8                     u2405 0708                     u3117 0D7F  
                   u3037 01A0                     u3127 0E9F                     u1615 0DC8  
                   u3047 01BD                     u3137 0EAE                     u2425 0726  
                   u2345 0647                     u1705 0CFC                     u3057 01D8  
                   u3147 0EBC                     u2435 073E                     u1635 0DD4  
                   u1715 0D05                     u3067 02AB                     u3157 0016  
                   u2525 078D                     u1645 0DE0                     u3077 0E8A  
                   u1830 0369                     u3167 0CAE                     u1575 0CD2  
                   u2535 07AB                     u2455 0749                     u2615 0FB2  
                   u3087 0D35                     u1655 0DEA                     u1840 036A  
                   u1825 035D                     u2545 07C3                     u2385 06E3  
                   u3097 0D45                     u2635 0FC7                     u1595 0D25  
                   u2715 0E05                     u1685 0CEB                     u2735 0E2A  
                   u2915 0F44                     u1971 0408                     u1963 03EF  
                   u1955 03D1                     u1875 038B                     u2675 0FE2  
                   u2595 0F96                     u1980 041C                     u1972 0409  
                   u1981 041D                     u1973 040E                     u1982 0422  
                   u1974 040F                     u2855 0F0D                     u1983 0423  
                   u1975 0414                     u1976 0415                     u2795 010A  
                   u2885 0F2C             __CFG_WRT$OFF 0000                     _main 016D  
                   btemp 007E                     start 0000            ___fltol@sign1 0068  
        __end_of___fladd 04E0                    ?_main 0070          __end_of_adcInit 0C64  
        __end_of_adcRead 0CBF            __CFG_WDTE$OFF 0000          __end_of___flmul 07F5  
        __end_of___fltol 0F5D          __end_of___lwdiv 0DF9          __end_of___lwmod 0D14  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
        __end_of_lcdInit 0EF0          __end_of_lcdPort 0C7E          __end_of_dpowers 0810  
                  _print 0E43           __CFG_BOREN$OFF 0000                    pclath 000A  
                  status 0003                    wtemp0 007E          __end_of_sprintf 016D  
        __initialization 07F5             __end_of_main 02B1                   ??_main 006E  
   __end_of_lcdSetCursor 0E43           _convertion$205 0056           _convertion$206 005A  
                 _ADRESH 001E                   _ADRESL 009E                   ?_print 002D  
       __end_of___xxtofl 1000         __end_of_lcdClear 0C54           __CFG_PWRTE$OFF 0000  
       __end_of_lcdPrint 0C9C            position1@time 006C            position2@time 006C  
              ??___fladd 0042                ??_adcInit 0070                ??_adcRead 0072  
   __end_of_lcdWriteChar 0D4B                ??___flmul 0028                ??___fltol 0063  
                 _lcdCmd 0005                ??___lwdiv 0074                ??___lwmod 007C  
              ??_lcdInit 0074                ??_lcdPort 0070       __size_of__Umul8_16 0023  
              ??_sprintf 0023             ___xxtofl@arg 007A             ___xxtofl@exp 0079  
           ___xxtofl@val 0070  __end_of__initialization 07FC               ___fltol@f1 005F  
         __pcstackCOMMON 0070            __end_of_print 0E8F         lcdWriteChar@temp 0072  
         main@angulo1Old 00B0                  ??_print 0031               __pbssBANK1 00A0  
      __end_of__Umul8_16 0CE2               __pmaintext 016D                  ?_lcdCmd 0070  
  __size_of_lcdSetCursor 004A                ?___xxtofl 0070                ?_lcdClear 0070  
     __size_of_position1 0039       __size_of_position2 0039                ?_lcdPrint 0070  
             __stringtab 0800               _convertion 001F    __size_of_lcdWriteChar 0037  
           _lcdSetCursor 0DF9                  ___fladd 02B1                  _adcInit 0C54  
                _adcRead 0C9C                  ___flmul 04E0                  ___fltol 0EF0  
                ___lwdiv 0DBD                  ___lwmod 0CE2          __size_of_lcdCmd 001A  
                _lcdInit 0E8F                  __ptext1 0E43                  __ptext2 0095  
                __ptext3 0CE2                  __ptext4 0DBD                  __ptext5 0DF9  
                __ptext6 0C7E                  __ptext7 0D14                  __ptext8 0C49  
                __ptext9 0D84                  _lcdPort 0C64                  _dpowers 0806  
                _mensaje 00A0               ??___xxtofl 0074                  lcdCmd@a 0073  
             ??_lcdClear 0074               ??_lcdPrint 0075                  main@adc 00B4  
                _sprintf 0095                  clrloop0 0C42             _lcdWriteChar 0D14  
   end_of_initialization 07FC        __end_of_position1 0D84        __end_of_position2 0DBD  
              _PORTBbits 0006                _PORTCbits 0007              ___fladd@grs 004D  
          ___xxtofl@sign 0078              print@valor1 002D              print@valor2 002F  
             main@adcOld 00B2              ___flmul@grs 002E              ?_convertion 004E  
         __end_of_lcdCmd 001F      start_initialization 07F5         convertion@angule 005E  
               ??_lcdCmd 0071                __Umul8_16 0CBF                ___fladd@a 003E  
              ___fladd@b 003A      __size_of_convertion 0076                ___flmul@a 0024  
              ___flmul@b 0020                ___latbits 0002            __pcstackBANK0 0020  
          __pcstackBANK1 00B0        __size_of___xxtofl 00A3        __size_of_lcdClear 000B  
      __size_of_lcdPrint 001E              sprintf@flag 0027              sprintf@prec 0028  
       ___lwdiv@dividend 0072                 ?___fladd 003A                 ?_adcInit 0070  
               ?_adcRead 0070                 ?___flmul 0020                 ?___fltol 005F  
             ?__Umul8_16 0070                 ?___lwdiv 0070                 ?___lwmod 0078  
              __pstrings 0800                 ?_lcdInit 0070                 ?_lcdPort 0070  
      adcRead@adcChannel 0074         ___lwdiv@quotient 0075                 ?_sprintf 0020  
         __size_of_print 004C                clear_ram0 0C41                lcdPrint@a 0078  
              lcdPrint@i 0076                _position1 0D4B                _position2 0D84  
             _ADCON0bits 001F              __stringbase 0805               _ADCON1bits 009F  
           ??_convertion 0052         lcdSetCursor@temp 007A          position1@angule 006D  
        position2@angule 006D              ??__Umul8_16 0072         __size_of___fladd 022F  
       __size_of_adcInit 0010         __size_of_adcRead 0023         __size_of___flmul 0315  
       __size_of___fltol 006D         __size_of___lwdiv 003C               ?_position1 0070  
             ?_position2 0070         __size_of___lwmod 0032       __end_of__stringtab 0806  
       __size_of_lcdInit 0061         __size_of_lcdPort 001A               sprintf@val 0029  
     __end_of_convertion 0095                 ___xxtofl 0F5D                 _lcdClear 0C49  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077                 __ptext10 0D4B  
               __ptext11 001F                 __ptext20 0C9C                 __ptext12 0F5D  
               __ptext21 0C54                 __ptext13 04E0                 __ptext14 0CBF  
               __ptext15 02B1                 __ptext16 0EF0                 __ptext17 0E8F  
               __ptext18 0005                 __ptext19 0C64                 _lcdPrint 0C7E  
       __size_of_sprintf 00D8            lcdSetCursor@a 0077            lcdSetCursor@b 0074  
          lcdSetCursor@y 0079            lcdSetCursor@z 0078            __size_of_main 0144  
               lcdPort@a 0070                sprintf@ap 0026                sprintf@sp 002B  
       ___lwmod@dividend 007A            ?_lcdSetCursor 0074                stringcode 0800  
            ??_position1 006A              ??_position2 006A   __Umul8_16@multiplicand 0070  
               sprintf@c 002C                 sprintf@f 0020          ___lwmod@divisor 0078  
        ___lwmod@counter 007D                 stringdir 0800                 stringtab 0800  
          ?_lcdWriteChar 0070            ___fladd@signs 004A             ___fladd@aexp 004B  
           ___fladd@bexp 004C     __Umul8_16@multiplier 0078           ??_lcdSetCursor 0075  
      __Umul8_16@product 0074  
