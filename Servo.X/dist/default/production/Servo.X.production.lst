

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Apr 26 22:12:08 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.05
    16                           ; Generated 20/12/2018 GMT
    17                           ; 
    18                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169                           
   170                           	psect	nvBANK0
   171  0028                     __pnvBANK0:	
   172  0028                     _FREQ1:	
   173  0028                     	ds	2
   174  0006                     _PORTB	set	6
   175  001B                     _CCPR2L	set	27
   176  0015                     _CCPR1L	set	21
   177  001E                     _ADRESH	set	30
   178  001F                     _ADCON0bits	set	31
   179  00EC                     _CCP2Y	set	236
   180  00ED                     _CCP2X	set	237
   181  00BC                     _CCP1Y	set	188
   182  00BD                     _CCP1X	set	189
   183  00EA                     _CCP2M2	set	234
   184  00EB                     _CCP2M3	set	235
   185  0092                     _TMR2ON	set	146
   186  0091                     _T2CKPS1	set	145
   187  0090                     _T2CKPS0	set	144
   188  00BA                     _CCP1M2	set	186
   189  00BB                     _CCP1M3	set	187
   190  0086                     _TRISB	set	134
   191  0092                     _PR2	set	146
   192  009E                     _ADRESL	set	158
   193  009F                     _ADCON1bits	set	159
   194  0439                     _TRISC1	set	1081
   195  043A                     _TRISC2	set	1082
   196                           
   197                           ; #config settings
   198  0000                     
   199                           	psect	cinit
   200  07FA                     start_initialization:	
   201  07FA                     __initialization:	
   202                           
   203                           ; Clear objects allocated to COMMON
   204  07FA  01FB               	clrf	__pbssCOMMON& (0+127)
   205  07FB  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   206  07FC                     end_of_initialization:	
   207                           ;End of C runtime variable initialization code
   208                           
   209  07FC                     __end_of__initialization:	
   210  07FC  0183               	clrf	3
   211  07FD  120A  118A  2F19   	ljmp	_main	;jump to C main() function
   212                           
   213                           	psect	bssCOMMON
   214  007B                     __pbssCOMMON:	
   215  007B                     _FREQ2:	
   216  007B                     	ds	2
   217                           
   218                           	psect	cstackCOMMON
   219  0070                     __pcstackCOMMON:	
   220  0070                     ?_adcInit:	
   221  0070                     ??_adcInit:	
   222                           ; 1 bytes @ 0x0
   223                           
   224  0070                     ?_main:	
   225                           ; 1 bytes @ 0x0
   226                           
   227  0070                     ?___aldiv:	
   228                           ; 1 bytes @ 0x0
   229                           
   230  0070                     ___aldiv@divisor:	
   231                           ; 4 bytes @ 0x0
   232                           
   233                           
   234                           ; 4 bytes @ 0x0
   235  0070                     	ds	4
   236  0074                     ___aldiv@dividend:	
   237                           
   238                           ; 4 bytes @ 0x4
   239  0074                     	ds	4
   240  0078                     ??___aldiv:	
   241                           
   242                           ; 1 bytes @ 0x8
   243  0078                     	ds	1
   244  0079                     ??_pwmInit1:	
   245                           
   246                           ; 1 bytes @ 0x9
   247  0079                     	ds	2
   248  007B                     ??_main:	
   249                           
   250                           	psect	cstackBANK0
   251  0020                     __pcstackBANK0:	
   252                           ; 1 bytes @ 0xB
   253                           
   254  0020                     ___aldiv@counter:	
   255                           
   256                           ; 1 bytes @ 0x0
   257  0020                     	ds	1
   258  0021                     ___aldiv@sign:	
   259                           
   260                           ; 1 bytes @ 0x1
   261  0021                     	ds	1
   262  0022                     ___aldiv@quotient:	
   263                           
   264                           ; 4 bytes @ 0x2
   265  0022                     	ds	4
   266  0026                     ?_pwmInit1:	
   267  0026                     pwmInit1@freq:	
   268                           ; 1 bytes @ 0x6
   269                           
   270                           
   271                           ; 2 bytes @ 0x6
   272  0026                     	ds	2
   273                           
   274                           	psect	maintext
   275  0719                     __pmaintext:	
   276 ;;
   277 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   278 ;;
   279 ;; *************** function _main *****************
   280 ;; Defined at:
   281 ;;		line 5 in file "main.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;		None
   284 ;; Auto vars:     Size  Location     Type
   285 ;;		None
   286 ;; Return value:  Size  Location     Type
   287 ;;                  1    wreg      void 
   288 ;; Registers used:
   289 ;;		wreg, status,2, status,0, pclath, cstack
   290 ;; Tracked objects:
   291 ;;		On entry : B00/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   295 ;;      Params:         0       0       0       0       0
   296 ;;      Locals:         0       0       0       0       0
   297 ;;      Temps:          0       0       0       0       0
   298 ;;      Totals:         0       0       0       0       0
   299 ;;Total ram usage:        0 bytes
   300 ;; Hardware stack levels required when called:    2
   301 ;; This function calls:
   302 ;;		_adcInit
   303 ;;		_pwmInit1
   304 ;; This function is called by:
   305 ;;		Startup code after reset
   306 ;; This function uses a non-reentrant model
   307 ;;
   308                           
   309                           
   310                           ;psect for function _main
   311  0719                     _main:	
   312                           
   313                           ;main.c: 6:     TRISB = 255;
   314                           
   315                           ;incstack = 0
   316                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   317  0719  30FF               	movlw	255
   318  071A  1683               	bsf	3,5	;RP0=1, select bank1
   319  071B  1303               	bcf	3,6	;RP1=0, select bank1
   320  071C  0086               	movwf	6	;volatile
   321                           
   322                           ;main.c: 7:     PORTB = 0;
   323  071D  1283               	bcf	3,5	;RP0=0, select bank0
   324  071E  1303               	bcf	3,6	;RP1=0, select bank0
   325  071F  0186               	clrf	6	;volatile
   326                           
   327                           ;main.c: 9:     adcInit();
   328  0720  120A  118A  2709  120A  118A  	fcall	_adcInit
   329                           
   330                           ;main.c: 10:     pwmInit1(2000);
   331  0725  30D0               	movlw	208
   332  0726  1283               	bcf	3,5	;RP0=0, select bank0
   333  0727  1303               	bcf	3,6	;RP1=0, select bank0
   334  0728  00A6               	movwf	pwmInit1@freq
   335  0729  3007               	movlw	7
   336  072A  00A7               	movwf	pwmInit1@freq+1
   337  072B  120A  118A  2731  120A  118A  	fcall	_pwmInit1
   338  0730                     l76:	
   339                           ;main.c: 12:     for(;;){
   340                           
   341                           
   342                           ;main.c: 14:     }
   343  0730  2F30               	goto	l76
   344  0731                     __end_of_main:	
   345                           
   346                           	psect	text1
   347  0731                     __ptext1:	
   348 ;; *************** function _pwmInit1 *****************
   349 ;; Defined at:
   350 ;;		line 6 in file "./pwm.h"
   351 ;; Parameters:    Size  Location     Type
   352 ;;  freq            2    6[BANK0 ] const unsigned int 
   353 ;; Auto vars:     Size  Location     Type
   354 ;;		None
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      void 
   357 ;; Registers used:
   358 ;;		wreg, status,2, status,0, pclath, cstack
   359 ;; Tracked objects:
   360 ;;		On entry : 0/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   364 ;;      Params:         0       2       0       0       0
   365 ;;      Locals:         0       0       0       0       0
   366 ;;      Temps:          2       0       0       0       0
   367 ;;      Totals:         2       2       0       0       0
   368 ;;Total ram usage:        4 bytes
   369 ;; Hardware stack levels used:    1
   370 ;; Hardware stack levels required when called:    1
   371 ;; This function calls:
   372 ;;		___aldiv
   373 ;; This function is called by:
   374 ;;		_main
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           
   379                           ;psect for function _pwmInit1
   380  0731                     _pwmInit1:	
   381                           
   382                           ;./pwm.h: 7:     FREQ1 = freq;
   383                           
   384                           ;incstack = 0
   385                           ; Regs used in _pwmInit1: [wreg+status,2+status,0+pclath+cstack]
   386  0731  1283               	bcf	3,5	;RP0=0, select bank0
   387  0732  1303               	bcf	3,6	;RP1=0, select bank0
   388  0733  0827               	movf	pwmInit1@freq+1,w
   389  0734  00A9               	movwf	_FREQ1+1
   390  0735  0826               	movf	pwmInit1@freq,w
   391  0736  00A8               	movwf	_FREQ1
   392                           
   393                           ;./pwm.h: 8:     PR2 = (4000000 / (FREQ1 * 4 * 4)) - 1;
   394  0737  0829               	movf	_FREQ1+1,w
   395  0738  00FA               	movwf	??_pwmInit1+1
   396  0739  0828               	movf	_FREQ1,w
   397  073A  00F9               	movwf	??_pwmInit1
   398  073B  1003               	clrc
   399  073C  0DF9               	rlf	??_pwmInit1,f
   400  073D  0DFA               	rlf	??_pwmInit1+1,f
   401  073E  1003               	clrc
   402  073F  0DF9               	rlf	??_pwmInit1,f
   403  0740  0DFA               	rlf	??_pwmInit1+1,f
   404  0741  1003               	clrc
   405  0742  0DF9               	rlf	??_pwmInit1,f
   406  0743  0DFA               	rlf	??_pwmInit1+1,f
   407  0744  1003               	clrc
   408  0745  0DF9               	rlf	??_pwmInit1,f
   409  0746  0DFA               	rlf	??_pwmInit1+1,f
   410  0747  0879               	movf	??_pwmInit1,w
   411  0748  00F0               	movwf	___aldiv@divisor
   412  0749  087A               	movf	??_pwmInit1+1,w
   413  074A  00F1               	movwf	___aldiv@divisor+1
   414  074B  3000               	movlw	0
   415  074C  1BF1               	btfsc	___aldiv@divisor+1,7
   416  074D  30FF               	movlw	255
   417  074E  00F2               	movwf	___aldiv@divisor+2
   418  074F  00F3               	movwf	___aldiv@divisor+3
   419  0750  3000               	movlw	0
   420  0751  00F7               	movwf	___aldiv@dividend+3
   421  0752  303D               	movlw	61
   422  0753  00F6               	movwf	___aldiv@dividend+2
   423  0754  3009               	movlw	9
   424  0755  00F5               	movwf	___aldiv@dividend+1
   425  0756  3000               	movlw	0
   426  0757  00F4               	movwf	___aldiv@dividend
   427  0758  120A  118A  276B   	fcall	___aldiv
   428  075B  0870               	movf	?___aldiv,w
   429  075C  3EFF               	addlw	255
   430  075D  1683               	bsf	3,5	;RP0=1, select bank1
   431  075E  1303               	bcf	3,6	;RP1=0, select bank1
   432  075F  0092               	movwf	18	;volatile
   433                           
   434                           ;./pwm.h: 9:     CCP1M3 = 1;
   435  0760  1283               	bcf	3,5	;RP0=0, select bank0
   436  0761  1303               	bcf	3,6	;RP1=0, select bank0
   437  0762  1597               	bsf	23,3	;volatile
   438                           
   439                           ;./pwm.h: 10:     CCP1M2 = 1;
   440  0763  1517               	bsf	23,2	;volatile
   441                           
   442                           ;./pwm.h: 11:     T2CKPS0 = 1;
   443  0764  1412               	bsf	18,0	;volatile
   444                           
   445                           ;./pwm.h: 12:     T2CKPS1 = 0;
   446  0765  1092               	bcf	18,1	;volatile
   447                           
   448                           ;./pwm.h: 13:     TMR2ON = 1;
   449  0766  1512               	bsf	18,2	;volatile
   450                           
   451                           ;./pwm.h: 14:     TRISC2 = 0;
   452  0767  1683               	bsf	3,5	;RP0=1, select bank1
   453  0768  1303               	bcf	3,6	;RP1=0, select bank1
   454  0769  1107               	bcf	7,2	;volatile
   455  076A  0008               	return
   456  076B                     __end_of_pwmInit1:	
   457                           
   458                           	psect	text2
   459  076B                     __ptext2:	
   460 ;; *************** function ___aldiv *****************
   461 ;; Defined at:
   462 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\aldiv.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;  divisor         4    0[COMMON] long 
   465 ;;  dividend        4    4[COMMON] long 
   466 ;; Auto vars:     Size  Location     Type
   467 ;;  quotient        4    2[BANK0 ] long 
   468 ;;  sign            1    1[BANK0 ] unsigned char 
   469 ;;  counter         1    0[BANK0 ] unsigned char 
   470 ;; Return value:  Size  Location     Type
   471 ;;                  4    0[COMMON] long 
   472 ;; Registers used:
   473 ;;		wreg, status,2, status,0
   474 ;; Tracked objects:
   475 ;;		On entry : 0/0
   476 ;;		On exit  : 0/0
   477 ;;		Unchanged: 0/0
   478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   479 ;;      Params:         8       0       0       0       0
   480 ;;      Locals:         0       6       0       0       0
   481 ;;      Temps:          1       0       0       0       0
   482 ;;      Totals:         9       6       0       0       0
   483 ;;Total ram usage:       15 bytes
   484 ;; Hardware stack levels used:    1
   485 ;; This function calls:
   486 ;;		Nothing
   487 ;; This function is called by:
   488 ;;		_pwmInit1
   489 ;;		_pwmInit2
   490 ;;		_pwmSetDutyCycle1
   491 ;;		_pwmSetDutyCycle2
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495                           
   496                           ;psect for function ___aldiv
   497  076B                     ___aldiv:	
   498                           
   499                           ;incstack = 0
   500                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   501  076B  1283               	bcf	3,5	;RP0=0, select bank0
   502  076C  1303               	bcf	3,6	;RP1=0, select bank0
   503  076D  01A1               	clrf	___aldiv@sign
   504  076E  1FF3               	btfss	___aldiv@divisor+3,7
   505  076F  2F7D               	goto	l229
   506  0770  09F0               	comf	___aldiv@divisor,f
   507  0771  09F1               	comf	___aldiv@divisor+1,f
   508  0772  09F2               	comf	___aldiv@divisor+2,f
   509  0773  09F3               	comf	___aldiv@divisor+3,f
   510  0774  0AF0               	incf	___aldiv@divisor,f
   511  0775  1903               	skipnz
   512  0776  0AF1               	incf	___aldiv@divisor+1,f
   513  0777  1903               	skipnz
   514  0778  0AF2               	incf	___aldiv@divisor+2,f
   515  0779  1903               	skipnz
   516  077A  0AF3               	incf	___aldiv@divisor+3,f
   517  077B  01A1               	clrf	___aldiv@sign
   518  077C  0AA1               	incf	___aldiv@sign,f
   519  077D                     l229:	
   520  077D  1FF7               	btfss	___aldiv@dividend+3,7
   521  077E  2F8E               	goto	l796
   522  077F  09F4               	comf	___aldiv@dividend,f
   523  0780  09F5               	comf	___aldiv@dividend+1,f
   524  0781  09F6               	comf	___aldiv@dividend+2,f
   525  0782  09F7               	comf	___aldiv@dividend+3,f
   526  0783  0AF4               	incf	___aldiv@dividend,f
   527  0784  1903               	skipnz
   528  0785  0AF5               	incf	___aldiv@dividend+1,f
   529  0786  1903               	skipnz
   530  0787  0AF6               	incf	___aldiv@dividend+2,f
   531  0788  1903               	skipnz
   532  0789  0AF7               	incf	___aldiv@dividend+3,f
   533  078A  3001               	movlw	1
   534  078B  00F8               	movwf	??___aldiv
   535  078C  0878               	movf	??___aldiv,w
   536  078D  06A1               	xorwf	___aldiv@sign,f
   537  078E                     l796:	
   538  078E  3000               	movlw	0
   539  078F  00A5               	movwf	___aldiv@quotient+3
   540  0790  3000               	movlw	0
   541  0791  00A4               	movwf	___aldiv@quotient+2
   542  0792  3000               	movlw	0
   543  0793  00A3               	movwf	___aldiv@quotient+1
   544  0794  3000               	movlw	0
   545  0795  00A2               	movwf	___aldiv@quotient
   546  0796  0873               	movf	___aldiv@divisor+3,w
   547  0797  0472               	iorwf	___aldiv@divisor+2,w
   548  0798  0471               	iorwf	___aldiv@divisor+1,w
   549  0799  0470               	iorwf	___aldiv@divisor,w
   550  079A  1903               	skipnz
   551  079B  2FE3               	goto	l818
   552  079C  01A0               	clrf	___aldiv@counter
   553  079D  0AA0               	incf	___aldiv@counter,f
   554  079E                     l804:	
   555  079E  1BF3               	btfsc	___aldiv@divisor+3,7
   556  079F  2FAE               	goto	l806
   557  07A0  3001               	movlw	1
   558  07A1  00F8               	movwf	??___aldiv
   559  07A2                     u195:	
   560  07A2  1003               	clrc
   561  07A3  0DF0               	rlf	___aldiv@divisor,f
   562  07A4  0DF1               	rlf	___aldiv@divisor+1,f
   563  07A5  0DF2               	rlf	___aldiv@divisor+2,f
   564  07A6  0DF3               	rlf	___aldiv@divisor+3,f
   565  07A7  0BF8               	decfsz	??___aldiv,f
   566  07A8  2FA2               	goto	u195
   567  07A9  3001               	movlw	1
   568  07AA  00F8               	movwf	??___aldiv
   569  07AB  0878               	movf	??___aldiv,w
   570  07AC  07A0               	addwf	___aldiv@counter,f
   571  07AD  2F9E               	goto	l804
   572  07AE                     l806:	
   573  07AE  3001               	movlw	1
   574  07AF  00F8               	movwf	??___aldiv
   575  07B0                     u215:	
   576  07B0  1003               	clrc
   577  07B1  0DA2               	rlf	___aldiv@quotient,f
   578  07B2  0DA3               	rlf	___aldiv@quotient+1,f
   579  07B3  0DA4               	rlf	___aldiv@quotient+2,f
   580  07B4  0DA5               	rlf	___aldiv@quotient+3,f
   581  07B5  0BF8               	decfsz	??___aldiv,f
   582  07B6  2FB0               	goto	u215
   583  07B7  0873               	movf	___aldiv@divisor+3,w
   584  07B8  0277               	subwf	___aldiv@dividend+3,w
   585  07B9  1D03               	skipz
   586  07BA  2FC5               	goto	u225
   587  07BB  0872               	movf	___aldiv@divisor+2,w
   588  07BC  0276               	subwf	___aldiv@dividend+2,w
   589  07BD  1D03               	skipz
   590  07BE  2FC5               	goto	u225
   591  07BF  0871               	movf	___aldiv@divisor+1,w
   592  07C0  0275               	subwf	___aldiv@dividend+1,w
   593  07C1  1D03               	skipz
   594  07C2  2FC5               	goto	u225
   595  07C3  0870               	movf	___aldiv@divisor,w
   596  07C4  0274               	subwf	___aldiv@dividend,w
   597  07C5                     u225:	
   598  07C5  1C03               	skipc
   599  07C6  2FD6               	goto	l814
   600  07C7  0870               	movf	___aldiv@divisor,w
   601  07C8  02F4               	subwf	___aldiv@dividend,f
   602  07C9  0871               	movf	___aldiv@divisor+1,w
   603  07CA  1C03               	skipc
   604  07CB  0F71               	incfsz	___aldiv@divisor+1,w
   605  07CC  02F5               	subwf	___aldiv@dividend+1,f
   606  07CD  0872               	movf	___aldiv@divisor+2,w
   607  07CE  1C03               	skipc
   608  07CF  0F72               	incfsz	___aldiv@divisor+2,w
   609  07D0  02F6               	subwf	___aldiv@dividend+2,f
   610  07D1  0873               	movf	___aldiv@divisor+3,w
   611  07D2  1C03               	skipc
   612  07D3  0F73               	incfsz	___aldiv@divisor+3,w
   613  07D4  02F7               	subwf	___aldiv@dividend+3,f
   614  07D5  1422               	bsf	___aldiv@quotient,0
   615  07D6                     l814:	
   616  07D6  3001               	movlw	1
   617  07D7                     u235:	
   618  07D7  1003               	clrc
   619  07D8  0CF3               	rrf	___aldiv@divisor+3,f
   620  07D9  0CF2               	rrf	___aldiv@divisor+2,f
   621  07DA  0CF1               	rrf	___aldiv@divisor+1,f
   622  07DB  0CF0               	rrf	___aldiv@divisor,f
   623  07DC  3EFF               	addlw	-1
   624  07DD  1D03               	skipz
   625  07DE  2FD7               	goto	u235
   626  07DF  3001               	movlw	1
   627  07E0  02A0               	subwf	___aldiv@counter,f
   628  07E1  1D03               	btfss	3,2
   629  07E2  2FAE               	goto	l806
   630  07E3                     l818:	
   631  07E3  0821               	movf	___aldiv@sign,w
   632  07E4  1903               	btfsc	3,2
   633  07E5  2FF1               	goto	l822
   634  07E6  09A2               	comf	___aldiv@quotient,f
   635  07E7  09A3               	comf	___aldiv@quotient+1,f
   636  07E8  09A4               	comf	___aldiv@quotient+2,f
   637  07E9  09A5               	comf	___aldiv@quotient+3,f
   638  07EA  0AA2               	incf	___aldiv@quotient,f
   639  07EB  1903               	skipnz
   640  07EC  0AA3               	incf	___aldiv@quotient+1,f
   641  07ED  1903               	skipnz
   642  07EE  0AA4               	incf	___aldiv@quotient+2,f
   643  07EF  1903               	skipnz
   644  07F0  0AA5               	incf	___aldiv@quotient+3,f
   645  07F1                     l822:	
   646  07F1  0825               	movf	___aldiv@quotient+3,w
   647  07F2  00F3               	movwf	?___aldiv+3
   648  07F3  0824               	movf	___aldiv@quotient+2,w
   649  07F4  00F2               	movwf	?___aldiv+2
   650  07F5  0823               	movf	___aldiv@quotient+1,w
   651  07F6  00F1               	movwf	?___aldiv+1
   652  07F7  0822               	movf	___aldiv@quotient,w
   653  07F8  00F0               	movwf	?___aldiv
   654  07F9  0008               	return
   655  07FA                     __end_of___aldiv:	
   656                           
   657                           	psect	text3
   658  0709                     __ptext3:	
   659 ;; *************** function _adcInit *****************
   660 ;; Defined at:
   661 ;;		line 1 in file "./adc.h"
   662 ;; Parameters:    Size  Location     Type
   663 ;;		None
   664 ;; Auto vars:     Size  Location     Type
   665 ;;		None
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		wreg, status,2, status,0
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   675 ;;      Params:         0       0       0       0       0
   676 ;;      Locals:         0       0       0       0       0
   677 ;;      Temps:          0       0       0       0       0
   678 ;;      Totals:         0       0       0       0       0
   679 ;;Total ram usage:        0 bytes
   680 ;; Hardware stack levels used:    1
   681 ;; This function calls:
   682 ;;		Nothing
   683 ;; This function is called by:
   684 ;;		_main
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           
   689                           ;psect for function _adcInit
   690  0709                     _adcInit:	
   691                           
   692                           ;./adc.h: 11:     ADCON0bits.ADCS = 0b01;
   693                           
   694                           ;incstack = 0
   695                           ; Regs used in _adcInit: [wreg+status,2+status,0]
   696  0709  1283               	bcf	3,5	;RP0=0, select bank0
   697  070A  1303               	bcf	3,6	;RP1=0, select bank0
   698  070B  081F               	movf	31,w	;volatile
   699  070C  393F               	andlw	-193
   700  070D  3840               	iorlw	64
   701  070E  009F               	movwf	31	;volatile
   702                           
   703                           ;./adc.h: 12:     ADCON0bits.CHS = 0b000;
   704  070F  30C7               	movlw	-57
   705  0710  059F               	andwf	31,f	;volatile
   706                           
   707                           ;./adc.h: 13:     ADCON0bits.ADON = 0;
   708  0711  101F               	bcf	31,0	;volatile
   709                           
   710                           ;./adc.h: 24:     ADCON1bits.ADFM = 1;
   711  0712  1683               	bsf	3,5	;RP0=1, select bank1
   712  0713  1303               	bcf	3,6	;RP1=0, select bank1
   713  0714  179F               	bsf	31,7	;volatile
   714                           
   715                           ;./adc.h: 25:     ADCON1bits.ADCS2 = 1;
   716  0715  171F               	bsf	31,6	;volatile
   717                           
   718                           ;./adc.h: 26:     ADCON1bits.PCFG = 0b0000;
   719  0716  30F0               	movlw	-16
   720  0717  059F               	andwf	31,f	;volatile
   721  0718  0008               	return
   722  0719                     __end_of_adcInit:	
   723  007E                     btemp	set	126	;btemp
   724  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      13
    BANK0            80      8      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_pwmInit1
    _pwmInit1->___aldiv

Critical Paths under _main in BANK0

    _main->_pwmInit1
    _pwmInit1->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1006
                            _adcInit
                           _pwmInit1
 ---------------------------------------------------------------------------------
 (1) _pwmInit1                                             4     2      2    1006
                                              9 COMMON     2     2      0
                                              6 BANK0      2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     908
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcInit
   _pwmInit1
     ___aldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      17       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      17      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Apr 26 22:12:08 2019

            __CFG_CP$OFF 0000                       l76 0730                      l229 077D  
                    l804 079E                      l822 07F1                      l814 07D6  
                    l806 07AE                      l818 07E3                      l796 078E  
                    u215 07B0                      u225 07C5                      u235 07D7  
                    _PR2 0092             __CFG_CPD$OFF 0000                      u195 07A2  
           __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000             __CFG_WRT$OFF 0000  
                   _main 0719                     btemp 007E                     start 0000  
        __end_of___aldiv 07FA                    ?_main 0070          __end_of_adcInit 0719  
                  _CCP1X 00BD                    _CCP1Y 00BC                    _CCP2X 00ED  
                  _CCP2Y 00EC            __CFG_WDTE$OFF 0000                    _FREQ1 0028  
                  _FREQ2 007B                    _PORTB 0006                    _TRISB 0086  
         __CFG_BOREN$OFF 0000                    status 0003                    wtemp0 007E  
        __initialization 07FA             __end_of_main 0731                   ??_main 007B  
                 _CCP1M2 00BA                   _CCP1M3 00BB                   _CCP2M2 00EA  
                 _CCP2M3 00EB                   _ADRESH 001E                   _ADRESL 009E  
                 _CCPR1L 0015                   _CCPR2L 001B                   _TMR2ON 0092  
                 _TRISC1 0439                   _TRISC2 043A           __CFG_PWRTE$OFF 0000  
              ??___aldiv 0078                ??_adcInit 0070         __end_of_pwmInit1 076B  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 0719  
                _T2CKPS0 0090                  _T2CKPS1 0091                ?_pwmInit1 0026  
                ___aldiv 076B                  _adcInit 0709                  __ptext1 0731  
                __ptext2 076B                  __ptext3 0709         ___aldiv@dividend 0074  
   end_of_initialization 07FC               ??_pwmInit1 0079         ___aldiv@quotient 0022  
    start_initialization 07FA              __pbssCOMMON 007B                ___latbits 0002  
          __pcstackBANK0 0020                __pnvBANK0 0028                 ?___aldiv 0070  
               ?_adcInit 0070        __size_of_pwmInit1 003A          ___aldiv@divisor 0070  
        ___aldiv@counter 0020               _ADCON0bits 001F               _ADCON1bits 009F  
       __size_of___aldiv 008F         __size_of_adcInit 0010            __size_of_main 0018  
               _pwmInit1 0731             pwmInit1@freq 0026             ___aldiv@sign 0021  
