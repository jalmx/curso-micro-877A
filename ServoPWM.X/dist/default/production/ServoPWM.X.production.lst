

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon May 13 16:15:20 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.05
    35                           ; Generated 20/12/2018 GMT
    36                           ; 
    37                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F877A Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  000D                     	;# 
    82  000E                     	;# 
    83  000E                     	;# 
    84  000F                     	;# 
    85  0010                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0014                     	;# 
    90  0015                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001D                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  0081                     	;# 
   104  0085                     	;# 
   105  0086                     	;# 
   106  0087                     	;# 
   107  0088                     	;# 
   108  0089                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0094                     	;# 
   176  0098                     	;# 
   177  0099                     	;# 
   178  009C                     	;# 
   179  009D                     	;# 
   180  009E                     	;# 
   181  009F                     	;# 
   182  010C                     	;# 
   183  010D                     	;# 
   184  010E                     	;# 
   185  010F                     	;# 
   186  018C                     	;# 
   187  018D                     	;# 
   188                           
   189                           	psect	strings
   190  0800                     __pstrings:	
   191  0800                     stringtab:	
   192  0800                     __stringtab:	
   193                           
   194                           ;	String table - string pointers are 1 byte each
   195  0800  1BFF               	btfsc	btemp+1,7
   196  0801  280A               	ljmp	stringcode
   197  0802  1383               	bcf	3,7
   198  0803  187F               	btfsc	btemp+1,0
   199  0804  1783               	bsf	3,7
   200  0805  0800               	movf	0,w
   201  0806  0A84               	incf	4,f
   202  0807  1903               	skipnz
   203  0808  0AFF               	incf	btemp+1,f
   204  0809  0008               	return
   205  080A                     stringcode:	
   206  080A                     stringdir:	
   207  080A  3008               	movlw	high stringdir
   208  080B  008A               	movwf	10
   209  080C  0804               	movf	4,w
   210  080D  0A84               	incf	4,f
   211  080E  0782               	addwf	2,f
   212  080F                     __stringbase:	
   213  080F  3400               	retlw	0
   214  0810                     __end_of__stringtab:	
   215  0810                     _dpowers:	
   216  0810  3401               	retlw	1
   217  0811  3400               	retlw	0
   218  0812  340A               	retlw	10
   219  0813  3400               	retlw	0
   220  0814  3464               	retlw	100
   221  0815  3400               	retlw	0
   222  0816  34E8               	retlw	232
   223  0817  3403               	retlw	3
   224  0818  3410               	retlw	16
   225  0819  3427               	retlw	39
   226  081A                     __end_of_dpowers:	
   227  001B                     _CCPR2L	set	27
   228  0015                     _CCPR1L	set	21
   229  001E                     _ADRESH	set	30
   230  001F                     _ADCON0bits	set	31
   231  0008                     _PORTD	set	8
   232  0092                     _TMR2ON	set	146
   233  0091                     _T2CKPS1	set	145
   234  0090                     _T2CKPS0	set	144
   235  00BA                     _CCP1M2	set	186
   236  00BB                     _CCP1M3	set	187
   237  00EA                     _CCP2M2	set	234
   238  00EB                     _CCP2M3	set	235
   239  00EC                     _CCP2Y	set	236
   240  00ED                     _CCP2X	set	237
   241  00BC                     _CCP1Y	set	188
   242  00BD                     _CCP1X	set	189
   243  0043                     _RD3	set	67
   244  0042                     _RD2	set	66
   245  0047                     _RD7	set	71
   246  0046                     _RD6	set	70
   247  0045                     _RD5	set	69
   248  0044                     _RD4	set	68
   249  0092                     _PR2	set	146
   250  009E                     _ADRESL	set	158
   251  009F                     _ADCON1bits	set	159
   252  0088                     _TRISD	set	136
   253  0439                     _TRISC1	set	1081
   254  043A                     _TRISC2	set	1082
   255  081A                     STR_1:	
   256  081A  3443               	retlw	67	;'C'
   257  081B  346F               	retlw	111	;'o'
   258  081C  346E               	retlw	110	;'n'
   259  081D  3466               	retlw	102	;'f'
   260  081E  3469               	retlw	105	;'i'
   261  081F  3467               	retlw	103	;'g'
   262  0820  3475               	retlw	117	;'u'
   263  0821  3472               	retlw	114	;'r'
   264  0822  3461               	retlw	97	;'a'
   265  0823  346E               	retlw	110	;'n'
   266  0824  3464               	retlw	100	;'d'
   267  0825  346F               	retlw	111	;'o'
   268  0826  3400               	retlw	0
   269  0827                     STR_3:	
   270  0827  3450               	retlw	80	;'P'
   271  0828  3457               	retlw	87	;'W'
   272  0829  344D               	retlw	77	;'M'
   273  082A  3431               	retlw	49	;'1'
   274  082B  343A               	retlw	58	;':'
   275  082C  3425               	retlw	37	;'%'
   276  082D  3464               	retlw	100	;'d'
   277  082E  3400               	retlw	0
   278  082F                     STR_2:	
   279  082F  3453               	retlw	83	;'S'
   280  0830  3465               	retlw	101	;'e'
   281  0831  3472               	retlw	114	;'r'
   282  0832  3476               	retlw	118	;'v'
   283  0833  346F               	retlw	111	;'o'
   284  0834  3473               	retlw	115	;'s'
   285  0835  3400               	retlw	0
   286                           
   287                           ; #config settings
   288  0000                     
   289                           	psect	cinit
   290  07F5                     start_initialization:	
   291  07F5                     __initialization:	
   292                           
   293                           ; Clear objects allocated to BANK1
   294  07F5  1383               	bcf	3,7	;select IRP bank0
   295  07F6  30A0               	movlw	low __pbssBANK1
   296  07F7  0084               	movwf	4
   297  07F8  30B0               	movlw	low (__pbssBANK1+16)
   298  07F9  120A  158A  25F4   	fcall	clear_ram0
   299  07FC                     end_of_initialization:	
   300                           ;End of C runtime variable initialization code
   301                           
   302  07FC                     __end_of__initialization:	
   303  07FC  0183               	clrf	3
   304  07FD  120A  118A  292B   	ljmp	_main	;jump to C main() function
   305                           
   306                           	psect	bssBANK1
   307  00A0                     __pbssBANK1:	
   308  00A0                     _mensaje:	
   309  00A0                     	ds	16
   310                           
   311                           	psect	clrtext
   312  0DF4                     clear_ram0:	
   313                           ;	Called with FSR containing the base address, and
   314                           ;	W with the last address+1
   315                           
   316  0DF4  0064               	clrwdt	;clear the watchdog before getting into this loop
   317  0DF5                     clrloop0:	
   318  0DF5  0180               	clrf	0	;clear RAM location pointed to by FSR
   319  0DF6  0A84               	incf	4,f	;increment pointer
   320  0DF7  0604               	xorwf	4,w	;XOR with final address
   321  0DF8  1903               	btfsc	3,2	;have we reached the end yet?
   322  0DF9  3400               	retlw	0	;all done for this memory range, return
   323  0DFA  0604               	xorwf	4,w	;XOR again to restore value
   324  0DFB  2DF5               	goto	clrloop0	;do the next byte
   325                           
   326                           	psect	cstackCOMMON
   327  0070                     __pcstackCOMMON:	
   328  0070                     ?_setTMR2:	
   329  0070                     ??_setTMR2:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_lcdPort:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ??_lcdPort:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_lcdCmd:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_lcdClear:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_lcdInit:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_lcdWriteChar:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ?_adcInit:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ??_adcInit:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_setPR2:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ??_setPR2:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_initServos:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ?_main:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?__Umul8_16:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?_adcRead:	
   372                           ; 2 bytes @ 0x0
   373                           
   374  0070                     ?___lwdiv:	
   375                           ; 2 bytes @ 0x0
   376                           
   377  0070                     ?___xxtofl:	
   378                           ; 2 bytes @ 0x0
   379                           
   380  0070                     lcdPort@a:	
   381                           ; 4 bytes @ 0x0
   382                           
   383  0070                     setTMR2@pwm:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     __Umul8_16@multiplicand:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     adcRead@adcChannel:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ___lwdiv@divisor:	
   393                           ; 2 bytes @ 0x0
   394                           
   395  0070                     ___xxtofl@val:	
   396                           ; 2 bytes @ 0x0
   397                           
   398                           
   399                           ; 4 bytes @ 0x0
   400  0070                     	ds	1
   401  0071                     ??_lcdCmd:	
   402  0071                     ??_lcdWriteChar:	
   403                           ; 1 bytes @ 0x1
   404                           
   405  0071                     ??_initServos:	
   406                           ; 1 bytes @ 0x1
   407                           
   408                           
   409                           ; 1 bytes @ 0x1
   410  0071                     	ds	1
   411  0072                     ??__Umul8_16:	
   412  0072                     ??_adcRead:	
   413                           ; 1 bytes @ 0x2
   414                           
   415  0072                     lcdWriteChar@temp:	
   416                           ; 1 bytes @ 0x2
   417                           
   418  0072                     ___lwdiv@dividend:	
   419                           ; 1 bytes @ 0x2
   420                           
   421                           
   422                           ; 2 bytes @ 0x2
   423  0072                     	ds	1
   424  0073                     lcdCmd@a:	
   425  0073                     lcdWriteChar@y:	
   426                           ; 1 bytes @ 0x3
   427                           
   428                           
   429                           ; 1 bytes @ 0x3
   430  0073                     	ds	1
   431  0074                     ??_lcdClear:	
   432  0074                     ?_lcdSetCursor:	
   433                           ; 1 bytes @ 0x4
   434                           
   435  0074                     ??_lcdInit:	
   436                           ; 1 bytes @ 0x4
   437                           
   438  0074                     ??___lwdiv:	
   439                           ; 1 bytes @ 0x4
   440                           
   441  0074                     ??___xxtofl:	
   442                           ; 1 bytes @ 0x4
   443                           
   444  0074                     lcdSetCursor@b:	
   445                           ; 1 bytes @ 0x4
   446                           
   447  0074                     lcdWriteChar@a:	
   448                           ; 1 bytes @ 0x4
   449                           
   450  0074                     __Umul8_16@product:	
   451                           ; 1 bytes @ 0x4
   452                           
   453                           
   454                           ; 2 bytes @ 0x4
   455  0074                     	ds	1
   456  0075                     ??_lcdSetCursor:	
   457  0075                     ?_lcdPrint:	
   458                           ; 1 bytes @ 0x5
   459                           
   460  0075                     lcdPrint@a:	
   461                           ; 1 bytes @ 0x5
   462                           
   463  0075                     ___lwdiv@quotient:	
   464                           ; 2 bytes @ 0x5
   465                           
   466                           
   467                           ; 2 bytes @ 0x5
   468  0075                     	ds	1
   469  0076                     __Umul8_16@word_mpld:	
   470                           
   471                           ; 2 bytes @ 0x6
   472  0076                     	ds	1
   473  0077                     ??_lcdPrint:	
   474  0077                     lcdSetCursor@a:	
   475                           ; 1 bytes @ 0x7
   476                           
   477  0077                     ___lwdiv@counter:	
   478                           ; 1 bytes @ 0x7
   479                           
   480                           
   481                           ; 1 bytes @ 0x7
   482  0077                     	ds	1
   483  0078                     ?___lwmod:	
   484  0078                     lcdSetCursor@z:	
   485                           ; 2 bytes @ 0x8
   486                           
   487  0078                     ___xxtofl@sign:	
   488                           ; 1 bytes @ 0x8
   489                           
   490  0078                     __Umul8_16@multiplier:	
   491                           ; 1 bytes @ 0x8
   492                           
   493  0078                     ___lwmod@divisor:	
   494                           ; 1 bytes @ 0x8
   495                           
   496                           
   497                           ; 2 bytes @ 0x8
   498  0078                     	ds	1
   499  0079                     lcdSetCursor@y:	
   500  0079                     ___xxtofl@exp:	
   501                           ; 1 bytes @ 0x9
   502                           
   503                           
   504                           ; 1 bytes @ 0x9
   505  0079                     	ds	1
   506  007A                     lcdSetCursor@temp:	
   507  007A                     lcdPrint@i:	
   508                           ; 1 bytes @ 0xA
   509                           
   510  007A                     ___lwmod@dividend:	
   511                           ; 2 bytes @ 0xA
   512                           
   513  007A                     ___xxtofl@arg:	
   514                           ; 2 bytes @ 0xA
   515                           
   516                           
   517                           ; 4 bytes @ 0xA
   518  007A                     	ds	2
   519  007C                     ??___lwmod:	
   520                           
   521                           ; 1 bytes @ 0xC
   522  007C                     	ds	1
   523  007D                     ___lwmod@counter:	
   524                           
   525                           ; 1 bytes @ 0xD
   526  007D                     	ds	1
   527                           
   528                           	psect	cstackBANK0
   529  0020                     __pcstackBANK0:	
   530  0020                     ?_sprintf:	
   531  0020                     ?___fldiv:	
   532                           ; 2 bytes @ 0x0
   533                           
   534  0020                     sprintf@f:	
   535                           ; 4 bytes @ 0x0
   536                           
   537  0020                     ___fldiv@a:	
   538                           ; 1 bytes @ 0x0
   539                           
   540                           
   541                           ; 4 bytes @ 0x0
   542  0020                     	ds	3
   543  0023                     ??_sprintf:	
   544                           
   545                           ; 1 bytes @ 0x3
   546  0023                     	ds	1
   547  0024                     ___fldiv@b:	
   548                           
   549                           ; 4 bytes @ 0x4
   550  0024                     	ds	2
   551  0026                     sprintf@ap:	
   552                           
   553                           ; 1 bytes @ 0x6
   554  0026                     	ds	1
   555  0027                     sprintf@flag:	
   556                           
   557                           ; 1 bytes @ 0x7
   558  0027                     	ds	1
   559  0028                     ??___fldiv:	
   560  0028                     sprintf@prec:	
   561                           ; 1 bytes @ 0x8
   562                           
   563                           
   564                           ; 1 bytes @ 0x8
   565  0028                     	ds	1
   566  0029                     sprintf@val:	
   567                           
   568                           ; 2 bytes @ 0x9
   569  0029                     	ds	2
   570  002B                     sprintf@sp:	
   571                           
   572                           ; 1 bytes @ 0xB
   573  002B                     	ds	1
   574  002C                     sprintf@c:	
   575                           
   576                           ; 1 bytes @ 0xC
   577  002C                     	ds	1
   578  002D                     ___fldiv@rem:	
   579                           
   580                           ; 4 bytes @ 0xD
   581  002D                     	ds	4
   582  0031                     ___fldiv@sign:	
   583                           
   584                           ; 1 bytes @ 0x11
   585  0031                     	ds	1
   586  0032                     ___fldiv@new_exp:	
   587                           
   588                           ; 2 bytes @ 0x12
   589  0032                     	ds	2
   590  0034                     ___fldiv@grs:	
   591                           
   592                           ; 4 bytes @ 0x14
   593  0034                     	ds	4
   594  0038                     ___fldiv@bexp:	
   595                           
   596                           ; 1 bytes @ 0x18
   597  0038                     	ds	1
   598  0039                     ___fldiv@aexp:	
   599                           
   600                           ; 1 bytes @ 0x19
   601  0039                     	ds	1
   602  003A                     ?___flmul:	
   603  003A                     ___flmul@b:	
   604                           ; 4 bytes @ 0x1A
   605                           
   606                           
   607                           ; 4 bytes @ 0x1A
   608  003A                     	ds	4
   609  003E                     ___flmul@a:	
   610                           
   611                           ; 4 bytes @ 0x1E
   612  003E                     	ds	4
   613  0042                     ??___flmul:	
   614                           
   615                           ; 1 bytes @ 0x22
   616  0042                     	ds	5
   617  0047                     ___flmul@sign:	
   618                           
   619                           ; 1 bytes @ 0x27
   620  0047                     	ds	1
   621  0048                     ___flmul@grs:	
   622                           
   623                           ; 4 bytes @ 0x28
   624  0048                     	ds	4
   625  004C                     ___flmul@aexp:	
   626                           
   627                           ; 1 bytes @ 0x2C
   628  004C                     	ds	1
   629  004D                     ___flmul@bexp:	
   630                           
   631                           ; 1 bytes @ 0x2D
   632  004D                     	ds	1
   633  004E                     ___flmul@prod:	
   634                           
   635                           ; 4 bytes @ 0x2E
   636  004E                     	ds	4
   637  0052                     ___flmul@temp:	
   638                           
   639                           ; 2 bytes @ 0x32
   640  0052                     	ds	2
   641  0054                     ?___fltol:	
   642  0054                     ___fltol@f1:	
   643                           ; 4 bytes @ 0x34
   644                           
   645                           
   646                           ; 4 bytes @ 0x34
   647  0054                     	ds	4
   648  0058                     ??___fltol:	
   649                           
   650                           ; 1 bytes @ 0x38
   651  0058                     	ds	5
   652  005D                     ___fltol@sign1:	
   653                           
   654                           ; 1 bytes @ 0x3D
   655  005D                     	ds	1
   656  005E                     ___fltol@exp1:	
   657                           
   658                           ; 1 bytes @ 0x3E
   659  005E                     	ds	1
   660  005F                     ?_pwmSetDuty1:	
   661  005F                     pwmSetDuty1@duty:	
   662                           ; 1 bytes @ 0x3F
   663                           
   664                           
   665                           ; 2 bytes @ 0x3F
   666  005F                     	ds	2
   667  0061                     ??_pwmSetDuty1:	
   668                           
   669                           ; 1 bytes @ 0x41
   670  0061                     	ds	2
   671  0063                     ??_main:	
   672                           
   673                           ; 1 bytes @ 0x43
   674  0063                     	ds	3
   675  0066                     main@servo1:	
   676                           
   677                           ; 2 bytes @ 0x46
   678  0066                     	ds	2
   679                           
   680                           	psect	maintext
   681  012B                     __pmaintext:	
   682 ;;
   683 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   684 ;;
   685 ;; *************** function _main *****************
   686 ;; Defined at:
   687 ;;		line 8 in file "main.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;  servo1          2   70[BANK0 ] unsigned int 
   692 ;; Return value:  Size  Location     Type
   693 ;;                  1    wreg      void 
   694 ;; Registers used:
   695 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : B00/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   701 ;;      Params:         0       0       0       0       0
   702 ;;      Locals:         0       2       0       0       0
   703 ;;      Temps:          0       3       0       0       0
   704 ;;      Totals:         0       5       0       0       0
   705 ;;Total ram usage:        5 bytes
   706 ;; Hardware stack levels required when called:    3
   707 ;; This function calls:
   708 ;;		_adcInit
   709 ;;		_adcRead
   710 ;;		_initServos
   711 ;;		_lcdClear
   712 ;;		_lcdInit
   713 ;;		_lcdPrint
   714 ;;		_lcdSetCursor
   715 ;;		_pwmSetDuty1
   716 ;;		_sprintf
   717 ;; This function is called by:
   718 ;;		Startup code after reset
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           
   723                           ;psect for function _main
   724  012B                     _main:	
   725                           
   726                           ;main.c: 9:     lcdInit();
   727                           
   728                           ;incstack = 0
   729                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   730  012B  120A  158A  279F  120A  118A  	fcall	_lcdInit
   731                           
   732                           ;main.c: 10:     adcInit();
   733  0130  120A  158A  2607  120A  118A  	fcall	_adcInit
   734                           
   735                           ;main.c: 11:     lcdClear();
   736  0135  120A  158A  25FC  120A  118A  	fcall	_lcdClear
   737                           
   738                           ;main.c: 12:     lcdSetCursor(1, 1);
   739  013A  01F4               	clrf	lcdSetCursor@b
   740  013B  0AF4               	incf	lcdSetCursor@b,f
   741  013C  3001               	movlw	1
   742  013D  120A  118A  2005  120A  118A  	fcall	_lcdSetCursor
   743                           
   744                           ;main.c: 13:     lcdPrint("Configurando");
   745  0142  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   746  0143  00F5               	movwf	lcdPrint@a
   747  0144  3080               	movlw	128
   748  0145  00F6               	movwf	lcdPrint@a+1
   749  0146  120A  158A  2762  120A  118A  	fcall	_lcdPrint
   750                           
   751                           ;main.c: 14:     lcdSetCursor(2, 1);
   752  014B  01F4               	clrf	lcdSetCursor@b
   753  014C  0AF4               	incf	lcdSetCursor@b,f
   754  014D  3002               	movlw	2
   755  014E  120A  118A  2005  120A  118A  	fcall	_lcdSetCursor
   756                           
   757                           ;main.c: 15:     lcdPrint("Servos");
   758  0153  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   759  0154  00F5               	movwf	lcdPrint@a
   760  0155  3080               	movlw	128
   761  0156  00F6               	movwf	lcdPrint@a+1
   762  0157  120A  158A  2762  120A  118A  	fcall	_lcdPrint
   763                           
   764                           ;main.c: 16:     _delay((unsigned long)((500)*(4000000/4000.0)));
   765  015C  3003               	movlw	3
   766  015D  1283               	bcf	3,5	;RP0=0, select bank0
   767  015E  1303               	bcf	3,6	;RP1=0, select bank0
   768  015F  00E5               	movwf	??_main+2
   769  0160  308A               	movlw	138
   770  0161  00E4               	movwf	??_main+1
   771  0162  3055               	movlw	85
   772  0163  00E3               	movwf	??_main
   773  0164                     u2697:	
   774  0164  0BE3               	decfsz	??_main,f
   775  0165  2964               	goto	u2697
   776  0166  0BE4               	decfsz	??_main+1,f
   777  0167  2964               	goto	u2697
   778  0168  0BE5               	decfsz	??_main+2,f
   779  0169  2964               	goto	u2697
   780                           
   781                           ;main.c: 18:     initServos();
   782  016A  120A  158A  2617  120A  118A  	fcall	_initServos
   783                           
   784                           ;main.c: 19:     pwmSetDuty1(0);
   785  016F  3000               	movlw	0
   786  0170  1283               	bcf	3,5	;RP0=0, select bank0
   787  0171  1303               	bcf	3,6	;RP1=0, select bank0
   788  0172  00DF               	movwf	pwmSetDuty1@duty
   789  0173  00E0               	movwf	pwmSetDuty1@duty+1
   790  0174  120A  118A  20BC  120A  118A  	fcall	_pwmSetDuty1
   791  0179                     l2111:	
   792                           
   793                           ;main.c: 22:         lcdClear();
   794  0179  120A  158A  25FC  120A  118A  	fcall	_lcdClear
   795                           
   796                           ;main.c: 23:         unsigned int servo1 = adcRead(0);
   797  017E  3000               	movlw	0
   798  017F  00F0               	movwf	adcRead@adcChannel
   799  0180  00F1               	movwf	adcRead@adcChannel+1
   800  0181  120A  158A  2678  120A  118A  	fcall	_adcRead
   801  0186  0871               	movf	?_adcRead+1,w
   802  0187  1283               	bcf	3,5	;RP0=0, select bank0
   803  0188  1303               	bcf	3,6	;RP1=0, select bank0
   804  0189  00E7               	movwf	main@servo1+1
   805  018A  0870               	movf	?_adcRead,w
   806  018B  00E6               	movwf	main@servo1
   807                           
   808                           ;main.c: 24:         pwmSetDuty1(servo1);
   809  018C  0867               	movf	main@servo1+1,w
   810  018D  00E0               	movwf	pwmSetDuty1@duty+1
   811  018E  0866               	movf	main@servo1,w
   812  018F  00DF               	movwf	pwmSetDuty1@duty
   813  0190  120A  118A  20BC  120A  118A  	fcall	_pwmSetDuty1
   814                           
   815                           ;main.c: 26:         sprintf(mensaje, "PWM1:%d", servo1);
   816  0195  3018               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   817  0196  1283               	bcf	3,5	;RP0=0, select bank0
   818  0197  1303               	bcf	3,6	;RP1=0, select bank0
   819  0198  00E3               	movwf	??_main
   820  0199  0863               	movf	??_main,w
   821  019A  00A0               	movwf	sprintf@f
   822  019B  0867               	movf	main@servo1+1,w
   823  019C  00A2               	movwf	?_sprintf+2
   824  019D  0866               	movf	main@servo1,w
   825  019E  00A1               	movwf	?_sprintf+1
   826  019F  30A0               	movlw	(low (_mensaje| 0))& (0+255)
   827  01A0  120A  118A  2265  120A  118A  	fcall	_sprintf
   828                           
   829                           ;main.c: 27:         lcdSetCursor(1, 1);
   830  01A5  01F4               	clrf	lcdSetCursor@b
   831  01A6  0AF4               	incf	lcdSetCursor@b,f
   832  01A7  3001               	movlw	1
   833  01A8  120A  118A  2005  120A  118A  	fcall	_lcdSetCursor
   834                           
   835                           ;main.c: 28:         lcdPrint(mensaje);
   836  01AD  30A0               	movlw	(low (_mensaje| 0))& (0+255)
   837  01AE  00F5               	movwf	lcdPrint@a
   838  01AF  3000               	movlw	0
   839  01B0  00F6               	movwf	lcdPrint@a+1
   840  01B1  120A  158A  2762  120A  118A  	fcall	_lcdPrint
   841                           
   842                           ;main.c: 29:         _delay((unsigned long)((50)*(4000000/4000.0)));
   843  01B6  3041               	movlw	65
   844  01B7  1283               	bcf	3,5	;RP0=0, select bank0
   845  01B8  1303               	bcf	3,6	;RP1=0, select bank0
   846  01B9  00E4               	movwf	??_main+1
   847  01BA  30ED               	movlw	237
   848  01BB  00E3               	movwf	??_main
   849  01BC                     u2707:	
   850  01BC  0BE3               	decfsz	??_main,f
   851  01BD  29BC               	goto	u2707
   852  01BE  0BE4               	decfsz	??_main+1,f
   853  01BF  29BC               	goto	u2707
   854  01C0  29C1               	nop2
   855  01C1  2979               	goto	l2111
   856  01C2                     __end_of_main:	
   857                           
   858                           	psect	text1
   859  0265                     __ptext1:	
   860 ;; *************** function _sprintf *****************
   861 ;; Defined at:
   862 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  sp              1    wreg     PTR unsigned char 
   865 ;;		 -> mensaje(16), 
   866 ;;  f               1    0[BANK0 ] PTR const unsigned char 
   867 ;;		 -> STR_3(8), 
   868 ;; Auto vars:     Size  Location     Type
   869 ;;  sp              1   11[BANK0 ] PTR unsigned char 
   870 ;;		 -> mensaje(16), 
   871 ;;  tmpval          4    0        struct .
   872 ;;  val             2    9[BANK0 ] unsigned int 
   873 ;;  cp              2    0        PTR const unsigned char 
   874 ;;  len             2    0        unsigned int 
   875 ;;  c               1   12[BANK0 ] unsigned char 
   876 ;;  prec            1    8[BANK0 ] char 
   877 ;;  flag            1    7[BANK0 ] unsigned char 
   878 ;;  ap              1    6[BANK0 ] PTR void [1]
   879 ;;		 -> ?_sprintf(2), 
   880 ;; Return value:  Size  Location     Type
   881 ;;                  2    0[BANK0 ] int 
   882 ;; Registers used:
   883 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   889 ;;      Params:         0       3       0       0       0
   890 ;;      Locals:         0       7       0       0       0
   891 ;;      Temps:          0       3       0       0       0
   892 ;;      Totals:         0      13       0       0       0
   893 ;;Total ram usage:       13 bytes
   894 ;; Hardware stack levels used:    1
   895 ;; Hardware stack levels required when called:    1
   896 ;; This function calls:
   897 ;;		___lwdiv
   898 ;;		___lwmod
   899 ;; This function is called by:
   900 ;;		_main
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           
   905                           ;psect for function _sprintf
   906  0265                     _sprintf:	
   907                           
   908                           ;incstack = 0
   909                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   910                           ;sprintf@sp stored from wreg
   911  0265  1283               	bcf	3,5	;RP0=0, select bank0
   912  0266  1303               	bcf	3,6	;RP1=0, select bank0
   913  0267  00AB               	movwf	sprintf@sp
   914                           
   915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
   916  0268  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   917  0269  00A3               	movwf	??_sprintf
   918  026A  0823               	movf	??_sprintf,w
   919  026B  00A6               	movwf	sprintf@ap
   920  026C                     l2077:	
   921                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
   922                           
   923                           
   924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
   925  026C  3001               	movlw	1
   926  026D  07A0               	addwf	sprintf@f,f
   927  026E  30FF               	movlw	-1
   928  026F  0720               	addwf	sprintf@f,w
   929  0270  0084               	movwf	4
   930  0271  120A  158A  200A  120A  118A  	fcall	stringdir
   931  0276  00A3               	movwf	??_sprintf
   932  0277  0823               	movf	??_sprintf,w
   933  0278  00AC               	movwf	sprintf@c
   934  0279  082C               	movf	sprintf@c,w
   935  027A  1903               	btfsc	3,2
   936  027B  2B38               	goto	l2079
   937                           
   938                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
   939  027C  3025               	movlw	37
   940  027D  062C               	xorwf	sprintf@c,w
   941  027E  1903               	btfsc	3,2
   942  027F  2A8C               	goto	l2033
   943                           
   944                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
   945  0280  082C               	movf	sprintf@c,w
   946  0281  00A3               	movwf	??_sprintf
   947  0282  082B               	movf	sprintf@sp,w
   948  0283  0084               	movwf	4
   949  0284  0823               	movf	??_sprintf,w
   950  0285  1383               	bcf	3,7	;select IRP bank0
   951  0286  0080               	movwf	0
   952  0287  3001               	movlw	1
   953  0288  00A3               	movwf	??_sprintf
   954  0289  0823               	movf	??_sprintf,w
   955  028A  07AB               	addwf	sprintf@sp,f
   956                           
   957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
   958  028B  2A6C               	goto	l2077
   959  028C                     l2033:	
   960                           
   961                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
   962  028C  01A7               	clrf	sprintf@flag
   963                           
   964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
   965  028D  3001               	movlw	1
   966  028E  07A0               	addwf	sprintf@f,f
   967  028F  30FF               	movlw	-1
   968  0290  0720               	addwf	sprintf@f,w
   969  0291  0084               	movwf	4
   970  0292  120A  158A  200A  120A  118A  	fcall	stringdir
   971  0297  00AC               	movwf	sprintf@c
   972  0298  00A3               	movwf	??_sprintf
   973  0299  01A4               	clrf	??_sprintf+1
   974                           
   975                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   976                           ; Switch size 1, requested type "simple"
   977                           ; Number of cases is 1, Range of values is 0 to 0
   978                           ; switch strategies available:
   979                           ; Name         Instructions Cycles
   980                           ; simple_byte            4     3 (average)
   981                           ; direct_byte           11     8 (fixed)
   982                           ; jumptable            260     6 (fixed)
   983                           ;	Chosen strategy is simple_byte
   984  029A  0824               	movf	??_sprintf+1,w
   985  029B  3A00               	xorlw	0	; case 0
   986  029C  1903               	skipnz
   987  029D  2A9F               	goto	l2145
   988  029E  2A6C               	goto	l2077
   989  029F                     l2145:	
   990                           
   991                           ; Switch size 1, requested type "simple"
   992                           ; Number of cases is 3, Range of values is 0 to 105
   993                           ; switch strategies available:
   994                           ; Name         Instructions Cycles
   995                           ; simple_byte           10     6 (average)
   996                           ; jumptable            260     6 (fixed)
   997                           ;	Chosen strategy is simple_byte
   998  029F  0823               	movf	??_sprintf,w
   999  02A0  3A00               	xorlw	0	; case 0
  1000  02A1  1903               	skipnz
  1001  02A2  2B38               	goto	l2079
  1002  02A3  3A64               	xorlw	100	; case 100
  1003  02A4  1903               	skipnz
  1004  02A5  2AAA               	goto	l2039
  1005  02A6  3A0D               	xorlw	13	; case 105
  1006  02A7  1903               	skipnz
  1007  02A8  2AAA               	goto	l2039
  1008  02A9  2A6C               	goto	l2077
  1009  02AA                     l2039:	
  1010                           
  1011                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1012  02AA  0826               	movf	sprintf@ap,w
  1013  02AB  0084               	movwf	4
  1014  02AC  1383               	bcf	3,7	;select IRP bank0
  1015  02AD  0800               	movf	0,w
  1016  02AE  00A9               	movwf	sprintf@val
  1017  02AF  0A84               	incf	4,f
  1018  02B0  0800               	movf	0,w
  1019  02B1  00AA               	movwf	sprintf@val+1
  1020  02B2  3002               	movlw	2
  1021  02B3  00A3               	movwf	??_sprintf
  1022  02B4  0823               	movf	??_sprintf,w
  1023  02B5  07A6               	addwf	sprintf@ap,f
  1024                           
  1025                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((int)val < 0) {
  1026  02B6  1FAA               	btfss	sprintf@val+1,7
  1027  02B7  2AC1               	goto	l2049
  1028                           
  1029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  1030  02B8  3003               	movlw	3
  1031  02B9  00A3               	movwf	??_sprintf
  1032  02BA  0823               	movf	??_sprintf,w
  1033  02BB  04A7               	iorwf	sprintf@flag,f
  1034                           
  1035                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  1036  02BC  09A9               	comf	sprintf@val,f
  1037  02BD  09AA               	comf	sprintf@val+1,f
  1038  02BE  0AA9               	incf	sprintf@val,f
  1039  02BF  1903               	skipnz
  1040  02C0  0AAA               	incf	sprintf@val+1,f
  1041  02C1                     l2049:	
  1042                           
  1043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1044  02C1  01AC               	clrf	sprintf@c
  1045  02C2  0AAC               	incf	sprintf@c,f
  1046  02C3                     l2055:	
  1047                           
  1048                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  1049  02C3  082C               	movf	sprintf@c,w
  1050  02C4  00A3               	movwf	??_sprintf
  1051  02C5  0723               	addwf	??_sprintf,w
  1052  02C6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1053  02C7  0084               	movwf	4
  1054  02C8  120A  158A  200A  120A  118A  	fcall	stringdir
  1055  02CD  00A4               	movwf	??_sprintf+1
  1056  02CE  120A  158A  200A  120A  118A  	fcall	stringdir
  1057  02D3  00A5               	movwf	??_sprintf+2
  1058  02D4  0825               	movf	??_sprintf+2,w
  1059  02D5  022A               	subwf	sprintf@val+1,w
  1060  02D6  1D03               	skipz
  1061  02D7  2ADA               	goto	u2615
  1062  02D8  0824               	movf	??_sprintf+1,w
  1063  02D9  0229               	subwf	sprintf@val,w
  1064  02DA                     u2615:	
  1065  02DA  1C03               	btfss	3,0
  1066  02DB  2AE4               	goto	l2061
  1067  02DC  3001               	movlw	1
  1068  02DD  00A3               	movwf	??_sprintf
  1069  02DE  0823               	movf	??_sprintf,w
  1070  02DF  07AC               	addwf	sprintf@c,f
  1071  02E0  3005               	movlw	5
  1072  02E1  062C               	xorwf	sprintf@c,w
  1073  02E2  1D03               	btfss	3,2
  1074  02E3  2AC3               	goto	l2055
  1075  02E4                     l2061:	
  1076                           
  1077                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  1078  02E4  0827               	movf	sprintf@flag,w
  1079  02E5  3903               	andlw	3
  1080  02E6  1903               	btfsc	3,2
  1081  02E7  2AF3               	goto	l2067
  1082                           
  1083                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  1084  02E8  302D               	movlw	45
  1085  02E9  00A3               	movwf	??_sprintf
  1086  02EA  082B               	movf	sprintf@sp,w
  1087  02EB  0084               	movwf	4
  1088  02EC  0823               	movf	??_sprintf,w
  1089  02ED  1383               	bcf	3,7	;select IRP bank0
  1090  02EE  0080               	movwf	0
  1091  02EF  3001               	movlw	1
  1092  02F0  00A3               	movwf	??_sprintf
  1093  02F1  0823               	movf	??_sprintf,w
  1094  02F2  07AB               	addwf	sprintf@sp,f
  1095  02F3                     l2067:	
  1096                           
  1097                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1488:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  1098  02F3  082C               	movf	sprintf@c,w
  1099  02F4  00A3               	movwf	??_sprintf
  1100  02F5  0823               	movf	??_sprintf,w
  1101  02F6  00A8               	movwf	sprintf@prec
  1102  02F7                     l2075:	
  1103                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  1104                           
  1105                           
  1106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  1107  02F7  30FF               	movlw	255
  1108  02F8  00A3               	movwf	??_sprintf
  1109  02F9  0823               	movf	??_sprintf,w
  1110  02FA  07A8               	addwf	sprintf@prec,f
  1111  02FB  0A28               	incf	sprintf@prec,w
  1112  02FC  1903               	btfsc	3,2
  1113  02FD  2A6C               	goto	l2077
  1114                           
  1115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  1116  02FE  300A               	movlw	10
  1117  02FF  00F8               	movwf	___lwmod@divisor
  1118  0300  3000               	movlw	0
  1119  0301  00F9               	movwf	___lwmod@divisor+1
  1120  0302  0828               	movf	sprintf@prec,w
  1121  0303  00A3               	movwf	??_sprintf
  1122  0304  0723               	addwf	??_sprintf,w
  1123  0305  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1124  0306  0084               	movwf	4
  1125  0307  120A  158A  200A  120A  118A  	fcall	stringdir
  1126  030C  00F0               	movwf	___lwdiv@divisor
  1127  030D  120A  158A  200A  120A  118A  	fcall	stringdir
  1128  0312  00F1               	movwf	___lwdiv@divisor+1
  1129  0313  082A               	movf	sprintf@val+1,w
  1130  0314  00F3               	movwf	___lwdiv@dividend+1
  1131  0315  0829               	movf	sprintf@val,w
  1132  0316  00F2               	movwf	___lwdiv@dividend
  1133  0317  120A  158A  2726  120A  118A  	fcall	___lwdiv
  1134  031C  0871               	movf	?___lwdiv+1,w
  1135  031D  00FB               	movwf	___lwmod@dividend+1
  1136  031E  0870               	movf	?___lwdiv,w
  1137  031F  00FA               	movwf	___lwmod@dividend
  1138  0320  120A  158A  26BD  120A  118A  	fcall	___lwmod
  1139  0325  0878               	movf	?___lwmod,w
  1140  0326  3E30               	addlw	48
  1141  0327  1283               	bcf	3,5	;RP0=0, select bank0
  1142  0328  1303               	bcf	3,6	;RP1=0, select bank0
  1143  0329  00A4               	movwf	??_sprintf+1
  1144  032A  0824               	movf	??_sprintf+1,w
  1145  032B  00AC               	movwf	sprintf@c
  1146                           
  1147                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  1148  032C  082C               	movf	sprintf@c,w
  1149  032D  00A3               	movwf	??_sprintf
  1150  032E  082B               	movf	sprintf@sp,w
  1151  032F  0084               	movwf	4
  1152  0330  0823               	movf	??_sprintf,w
  1153  0331  1383               	bcf	3,7	;select IRP bank0
  1154  0332  0080               	movwf	0
  1155  0333  3001               	movlw	1
  1156  0334  00A3               	movwf	??_sprintf
  1157  0335  0823               	movf	??_sprintf,w
  1158  0336  07AB               	addwf	sprintf@sp,f
  1159  0337  2AF7               	goto	l2075
  1160  0338                     l2079:	
  1161                           
  1162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  1163  0338  082B               	movf	sprintf@sp,w
  1164  0339  0084               	movwf	4
  1165  033A  1383               	bcf	3,7	;select IRP bank0
  1166  033B  0180               	clrf	0
  1167  033C  0008               	return
  1168  033D                     __end_of_sprintf:	
  1169                           
  1170                           	psect	text2
  1171  0EBD                     __ptext2:	
  1172 ;; *************** function ___lwmod *****************
  1173 ;; Defined at:
  1174 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;  divisor         2    8[COMMON] unsigned int 
  1177 ;;  dividend        2   10[COMMON] unsigned int 
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;  counter         1   13[COMMON] unsigned char 
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  2    8[COMMON] unsigned int 
  1182 ;; Registers used:
  1183 ;;		wreg, status,2, status,0
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1189 ;;      Params:         4       0       0       0       0
  1190 ;;      Locals:         1       0       0       0       0
  1191 ;;      Temps:          1       0       0       0       0
  1192 ;;      Totals:         6       0       0       0       0
  1193 ;;Total ram usage:        6 bytes
  1194 ;; Hardware stack levels used:    1
  1195 ;; This function calls:
  1196 ;;		Nothing
  1197 ;; This function is called by:
  1198 ;;		_sprintf
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           
  1203                           ;psect for function ___lwmod
  1204  0EBD                     ___lwmod:	
  1205                           
  1206                           ;incstack = 0
  1207                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1208  0EBD  0878               	movf	___lwmod@divisor,w
  1209  0EBE  0479               	iorwf	___lwmod@divisor+1,w
  1210  0EBF  1903               	btfsc	3,2
  1211  0EC0  2EEA               	goto	l1601
  1212  0EC1  01FD               	clrf	___lwmod@counter
  1213  0EC2  0AFD               	incf	___lwmod@counter,f
  1214  0EC3                     l1591:	
  1215  0EC3  1BF9               	btfsc	___lwmod@divisor+1,7
  1216  0EC4  2ED1               	goto	l1593
  1217  0EC5  3001               	movlw	1
  1218  0EC6                     u1635:	
  1219  0EC6  1003               	clrc
  1220  0EC7  0DF8               	rlf	___lwmod@divisor,f
  1221  0EC8  0DF9               	rlf	___lwmod@divisor+1,f
  1222  0EC9  3EFF               	addlw	-1
  1223  0ECA  1D03               	skipz
  1224  0ECB  2EC6               	goto	u1635
  1225  0ECC  3001               	movlw	1
  1226  0ECD  00FC               	movwf	??___lwmod
  1227  0ECE  087C               	movf	??___lwmod,w
  1228  0ECF  07FD               	addwf	___lwmod@counter,f
  1229  0ED0  2EC3               	goto	l1591
  1230  0ED1                     l1593:	
  1231  0ED1  0879               	movf	___lwmod@divisor+1,w
  1232  0ED2  027B               	subwf	___lwmod@dividend+1,w
  1233  0ED3  1D03               	skipz
  1234  0ED4  2ED7               	goto	u1655
  1235  0ED5  0878               	movf	___lwmod@divisor,w
  1236  0ED6  027A               	subwf	___lwmod@dividend,w
  1237  0ED7                     u1655:	
  1238  0ED7  1C03               	skipc
  1239  0ED8  2EDF               	goto	l1597
  1240  0ED9  0878               	movf	___lwmod@divisor,w
  1241  0EDA  02FA               	subwf	___lwmod@dividend,f
  1242  0EDB  0879               	movf	___lwmod@divisor+1,w
  1243  0EDC  1C03               	skipc
  1244  0EDD  03FB               	decf	___lwmod@dividend+1,f
  1245  0EDE  02FB               	subwf	___lwmod@dividend+1,f
  1246  0EDF                     l1597:	
  1247  0EDF  3001               	movlw	1
  1248  0EE0                     u1665:	
  1249  0EE0  1003               	clrc
  1250  0EE1  0CF9               	rrf	___lwmod@divisor+1,f
  1251  0EE2  0CF8               	rrf	___lwmod@divisor,f
  1252  0EE3  3EFF               	addlw	-1
  1253  0EE4  1D03               	skipz
  1254  0EE5  2EE0               	goto	u1665
  1255  0EE6  3001               	movlw	1
  1256  0EE7  02FD               	subwf	___lwmod@counter,f
  1257  0EE8  1D03               	btfss	3,2
  1258  0EE9  2ED1               	goto	l1593
  1259  0EEA                     l1601:	
  1260  0EEA  087B               	movf	___lwmod@dividend+1,w
  1261  0EEB  00F9               	movwf	?___lwmod+1
  1262  0EEC  087A               	movf	___lwmod@dividend,w
  1263  0EED  00F8               	movwf	?___lwmod
  1264  0EEE  0008               	return
  1265  0EEF                     __end_of___lwmod:	
  1266                           
  1267                           	psect	text3
  1268  0F26                     __ptext3:	
  1269 ;; *************** function ___lwdiv *****************
  1270 ;; Defined at:
  1271 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;  divisor         2    0[COMMON] unsigned int 
  1274 ;;  dividend        2    2[COMMON] unsigned int 
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;  quotient        2    5[COMMON] unsigned int 
  1277 ;;  counter         1    7[COMMON] unsigned char 
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  2    0[COMMON] unsigned int 
  1280 ;; Registers used:
  1281 ;;		wreg, status,2, status,0
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1287 ;;      Params:         4       0       0       0       0
  1288 ;;      Locals:         3       0       0       0       0
  1289 ;;      Temps:          1       0       0       0       0
  1290 ;;      Totals:         8       0       0       0       0
  1291 ;;Total ram usage:        8 bytes
  1292 ;; Hardware stack levels used:    1
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_sprintf
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           
  1301                           ;psect for function ___lwdiv
  1302  0F26                     ___lwdiv:	
  1303                           
  1304                           ;incstack = 0
  1305                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1306  0F26  01F5               	clrf	___lwdiv@quotient
  1307  0F27  01F6               	clrf	___lwdiv@quotient+1
  1308  0F28  0870               	movf	___lwdiv@divisor,w
  1309  0F29  0471               	iorwf	___lwdiv@divisor+1,w
  1310  0F2A  1903               	btfsc	3,2
  1311  0F2B  2F5D               	goto	l1579
  1312  0F2C  01F7               	clrf	___lwdiv@counter
  1313  0F2D  0AF7               	incf	___lwdiv@counter,f
  1314  0F2E                     l1567:	
  1315  0F2E  1BF1               	btfsc	___lwdiv@divisor+1,7
  1316  0F2F  2F3C               	goto	l1569
  1317  0F30  3001               	movlw	1
  1318  0F31                     u1565:	
  1319  0F31  1003               	clrc
  1320  0F32  0DF0               	rlf	___lwdiv@divisor,f
  1321  0F33  0DF1               	rlf	___lwdiv@divisor+1,f
  1322  0F34  3EFF               	addlw	-1
  1323  0F35  1D03               	skipz
  1324  0F36  2F31               	goto	u1565
  1325  0F37  3001               	movlw	1
  1326  0F38  00F4               	movwf	??___lwdiv
  1327  0F39  0874               	movf	??___lwdiv,w
  1328  0F3A  07F7               	addwf	___lwdiv@counter,f
  1329  0F3B  2F2E               	goto	l1567
  1330  0F3C                     l1569:	
  1331  0F3C  3001               	movlw	1
  1332  0F3D                     u1585:	
  1333  0F3D  1003               	clrc
  1334  0F3E  0DF5               	rlf	___lwdiv@quotient,f
  1335  0F3F  0DF6               	rlf	___lwdiv@quotient+1,f
  1336  0F40  3EFF               	addlw	-1
  1337  0F41  1D03               	skipz
  1338  0F42  2F3D               	goto	u1585
  1339  0F43  0871               	movf	___lwdiv@divisor+1,w
  1340  0F44  0273               	subwf	___lwdiv@dividend+1,w
  1341  0F45  1D03               	skipz
  1342  0F46  2F49               	goto	u1595
  1343  0F47  0870               	movf	___lwdiv@divisor,w
  1344  0F48  0272               	subwf	___lwdiv@dividend,w
  1345  0F49                     u1595:	
  1346  0F49  1C03               	skipc
  1347  0F4A  2F52               	goto	l1575
  1348  0F4B  0870               	movf	___lwdiv@divisor,w
  1349  0F4C  02F2               	subwf	___lwdiv@dividend,f
  1350  0F4D  0871               	movf	___lwdiv@divisor+1,w
  1351  0F4E  1C03               	skipc
  1352  0F4F  03F3               	decf	___lwdiv@dividend+1,f
  1353  0F50  02F3               	subwf	___lwdiv@dividend+1,f
  1354  0F51  1475               	bsf	___lwdiv@quotient,0
  1355  0F52                     l1575:	
  1356  0F52  3001               	movlw	1
  1357  0F53                     u1605:	
  1358  0F53  1003               	clrc
  1359  0F54  0CF1               	rrf	___lwdiv@divisor+1,f
  1360  0F55  0CF0               	rrf	___lwdiv@divisor,f
  1361  0F56  3EFF               	addlw	-1
  1362  0F57  1D03               	skipz
  1363  0F58  2F53               	goto	u1605
  1364  0F59  3001               	movlw	1
  1365  0F5A  02F7               	subwf	___lwdiv@counter,f
  1366  0F5B  1D03               	btfss	3,2
  1367  0F5C  2F3C               	goto	l1569
  1368  0F5D                     l1579:	
  1369  0F5D  0876               	movf	___lwdiv@quotient+1,w
  1370  0F5E  00F1               	movwf	?___lwdiv+1
  1371  0F5F  0875               	movf	___lwdiv@quotient,w
  1372  0F60  00F0               	movwf	?___lwdiv
  1373  0F61  0008               	return
  1374  0F62                     __end_of___lwdiv:	
  1375                           
  1376                           	psect	text4
  1377  00BC                     __ptext4:	
  1378 ;; *************** function _pwmSetDuty1 *****************
  1379 ;; Defined at:
  1380 ;;		line 31 in file "./servo_pwm.h"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;  duty            2   63[BANK0 ] unsigned int 
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;		None
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1394 ;;      Params:         0       2       0       0       0
  1395 ;;      Locals:         0       0       0       0       0
  1396 ;;      Temps:          0       2       0       0       0
  1397 ;;      Totals:         0       4       0       0       0
  1398 ;;Total ram usage:        4 bytes
  1399 ;; Hardware stack levels used:    1
  1400 ;; Hardware stack levels required when called:    2
  1401 ;; This function calls:
  1402 ;;		___fldiv
  1403 ;;		___flmul
  1404 ;;		___fltol
  1405 ;;		___xxtofl
  1406 ;; This function is called by:
  1407 ;;		_main
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           
  1412                           ;psect for function _pwmSetDuty1
  1413  00BC                     _pwmSetDuty1:	
  1414                           
  1415                           ;./servo_pwm.h: 32:     if (duty > 1023) return;
  1416                           
  1417                           ;incstack = 0
  1418                           ; Regs used in _pwmSetDuty1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1419  00BC  3004               	movlw	4
  1420  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  1421  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  1422  00BF  0260               	subwf	pwmSetDuty1@duty+1,w
  1423  00C0  3000               	movlw	0
  1424  00C1  1903               	skipnz
  1425  00C2  025F               	subwf	pwmSetDuty1@duty,w
  1426  00C3  1803               	btfsc	3,0
  1427  00C4  0008               	return
  1428                           
  1429                           ;./servo_pwm.h: 33:     duty = ((float) duty / 1023)*(4000000 / (245 * 16));
  1430  00C5  085F               	movf	pwmSetDuty1@duty,w
  1431  00C6  00F0               	movwf	___xxtofl@val
  1432  00C7  0860               	movf	pwmSetDuty1@duty+1,w
  1433  00C8  00F1               	movwf	___xxtofl@val+1
  1434  00C9  01F2               	clrf	___xxtofl@val+2
  1435  00CA  01F3               	clrf	___xxtofl@val+3
  1436  00CB  3000               	movlw	0
  1437  00CC  120A  118A  21C2  120A  118A  	fcall	___xxtofl
  1438  00D1  0873               	movf	?___xxtofl+3,w
  1439  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1440  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  1441  00D4  00A7               	movwf	___fldiv@b+3
  1442  00D5  0872               	movf	?___xxtofl+2,w
  1443  00D6  00A6               	movwf	___fldiv@b+2
  1444  00D7  0871               	movf	?___xxtofl+1,w
  1445  00D8  00A5               	movwf	___fldiv@b+1
  1446  00D9  0870               	movf	?___xxtofl,w
  1447  00DA  00A4               	movwf	___fldiv@b
  1448  00DB  3044               	movlw	68
  1449  00DC  00A3               	movwf	___fldiv@a+3
  1450  00DD  307F               	movlw	127
  1451  00DE  00A2               	movwf	___fldiv@a+2
  1452  00DF  30C0               	movlw	192
  1453  00E0  00A1               	movwf	___fldiv@a+1
  1454  00E1  3000               	movlw	0
  1455  00E2  00A0               	movwf	___fldiv@a
  1456  00E3  120A  118A  233D  120A  118A  	fcall	___fldiv
  1457  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1458  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1459  00EA  0823               	movf	?___fldiv+3,w
  1460  00EB  00C1               	movwf	___flmul@a+3
  1461  00EC  0822               	movf	?___fldiv+2,w
  1462  00ED  00C0               	movwf	___flmul@a+2
  1463  00EE  0821               	movf	?___fldiv+1,w
  1464  00EF  00BF               	movwf	___flmul@a+1
  1465  00F0  0820               	movf	?___fldiv,w
  1466  00F1  00BE               	movwf	___flmul@a
  1467  00F2  3044               	movlw	68
  1468  00F3  00BD               	movwf	___flmul@b+3
  1469  00F4  307F               	movlw	127
  1470  00F5  00BC               	movwf	___flmul@b+2
  1471  00F6  3000               	movlw	0
  1472  00F7  00BB               	movwf	___flmul@b+1
  1473  00F8  3000               	movlw	0
  1474  00F9  00BA               	movwf	___flmul@b
  1475  00FA  120A  118A  24E0  120A  118A  	fcall	___flmul
  1476  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1477  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1478  0101  083D               	movf	?___flmul+3,w
  1479  0102  00D7               	movwf	___fltol@f1+3
  1480  0103  083C               	movf	?___flmul+2,w
  1481  0104  00D6               	movwf	___fltol@f1+2
  1482  0105  083B               	movf	?___flmul+1,w
  1483  0106  00D5               	movwf	___fltol@f1+1
  1484  0107  083A               	movf	?___flmul,w
  1485  0108  00D4               	movwf	___fltol@f1
  1486  0109  120A  118A  204F  120A  118A  	fcall	___fltol
  1487  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1488  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1489  0110  0855               	movf	?___fltol+1,w
  1490  0111  00E0               	movwf	pwmSetDuty1@duty+1
  1491  0112  0854               	movf	?___fltol,w
  1492  0113  00DF               	movwf	pwmSetDuty1@duty
  1493                           
  1494                           ;./servo_pwm.h: 34:     CCP1X = duty & 0x01;
  1495  0114  1C5F               	btfss	pwmSetDuty1@duty,0
  1496  0115  291A               	goto	u2570
  1497  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1498  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1499  0118  1697               	bsf	23,5	;volatile
  1500  0119  291D               	goto	l2021
  1501  011A                     u2570:	
  1502  011A  1283               	bcf	3,5	;RP0=0, select bank0
  1503  011B  1303               	bcf	3,6	;RP1=0, select bank0
  1504  011C  1297               	bcf	23,5	;volatile
  1505  011D                     l2021:	
  1506                           
  1507                           ;./servo_pwm.h: 35:     CCP1Y = duty & 0x02;
  1508  011D  1217               	bcf	23,4	;volatile
  1509                           
  1510                           ;./servo_pwm.h: 36:     CCPR1L = duty >> 2;
  1511  011E  0860               	movf	pwmSetDuty1@duty+1,w
  1512  011F  00E2               	movwf	??_pwmSetDuty1+1
  1513  0120  085F               	movf	pwmSetDuty1@duty,w
  1514  0121  00E1               	movwf	??_pwmSetDuty1
  1515  0122  1003               	clrc
  1516  0123  0CE2               	rrf	??_pwmSetDuty1+1,f
  1517  0124  0CE1               	rrf	??_pwmSetDuty1,f
  1518  0125  1003               	clrc
  1519  0126  0CE2               	rrf	??_pwmSetDuty1+1,f
  1520  0127  0CE1               	rrf	??_pwmSetDuty1,f
  1521  0128  0861               	movf	??_pwmSetDuty1,w
  1522  0129  0095               	movwf	21	;volatile
  1523  012A  0008               	return
  1524  012B                     __end_of_pwmSetDuty1:	
  1525                           
  1526                           	psect	text5
  1527  01C2                     __ptext5:	
  1528 ;; *************** function ___xxtofl *****************
  1529 ;; Defined at:
  1530 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;  sign            1    wreg     unsigned char 
  1533 ;;  val             4    0[COMMON] long 
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;  sign            1    8[COMMON] unsigned char 
  1536 ;;  arg             4   10[COMMON] unsigned long 
  1537 ;;  exp             1    9[COMMON] unsigned char 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  4    0[COMMON] unsigned char 
  1540 ;; Registers used:
  1541 ;;		wreg, status,2, status,0
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1547 ;;      Params:         4       0       0       0       0
  1548 ;;      Locals:         6       0       0       0       0
  1549 ;;      Temps:          4       0       0       0       0
  1550 ;;      Totals:        14       0       0       0       0
  1551 ;;Total ram usage:       14 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; This function calls:
  1554 ;;		Nothing
  1555 ;; This function is called by:
  1556 ;;		_pwmSetDuty1
  1557 ;;		_pwmSetDuty2
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           
  1562                           ;psect for function ___xxtofl
  1563  01C2                     ___xxtofl:	
  1564                           
  1565                           ;incstack = 0
  1566                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1567                           ;___xxtofl@sign stored from wreg
  1568  01C2  00F8               	movwf	___xxtofl@sign
  1569  01C3  0878               	movf	___xxtofl@sign,w
  1570  01C4  1D03               	btfss	3,2
  1571  01C5  1FF3               	btfss	___xxtofl@val+3,7
  1572  01C6  29D7               	goto	l1893
  1573  01C7  0970               	comf	___xxtofl@val,w
  1574  01C8  00FA               	movwf	___xxtofl@arg
  1575  01C9  0971               	comf	___xxtofl@val+1,w
  1576  01CA  00FB               	movwf	___xxtofl@arg+1
  1577  01CB  0972               	comf	___xxtofl@val+2,w
  1578  01CC  00FC               	movwf	___xxtofl@arg+2
  1579  01CD  0973               	comf	___xxtofl@val+3,w
  1580  01CE  00FD               	movwf	___xxtofl@arg+3
  1581  01CF  0AFA               	incf	___xxtofl@arg,f
  1582  01D0  1903               	skipnz
  1583  01D1  0AFB               	incf	___xxtofl@arg+1,f
  1584  01D2  1903               	skipnz
  1585  01D3  0AFC               	incf	___xxtofl@arg+2,f
  1586  01D4  1903               	skipnz
  1587  01D5  0AFD               	incf	___xxtofl@arg+3,f
  1588  01D6  29DF               	goto	l682
  1589  01D7                     l1893:	
  1590  01D7  0873               	movf	___xxtofl@val+3,w
  1591  01D8  00FD               	movwf	___xxtofl@arg+3
  1592  01D9  0872               	movf	___xxtofl@val+2,w
  1593  01DA  00FC               	movwf	___xxtofl@arg+2
  1594  01DB  0871               	movf	___xxtofl@val+1,w
  1595  01DC  00FB               	movwf	___xxtofl@arg+1
  1596  01DD  0870               	movf	___xxtofl@val,w
  1597  01DE  00FA               	movwf	___xxtofl@arg
  1598  01DF                     l682:	
  1599  01DF  0873               	movf	___xxtofl@val+3,w
  1600  01E0  0472               	iorwf	___xxtofl@val+2,w
  1601  01E1  0471               	iorwf	___xxtofl@val+1,w
  1602  01E2  0470               	iorwf	___xxtofl@val,w
  1603  01E3  1D03               	skipz
  1604  01E4  29EE               	goto	l1899
  1605  01E5  3000               	movlw	0
  1606  01E6  00F3               	movwf	?___xxtofl+3
  1607  01E7  3000               	movlw	0
  1608  01E8  00F2               	movwf	?___xxtofl+2
  1609  01E9  3000               	movlw	0
  1610  01EA  00F1               	movwf	?___xxtofl+1
  1611  01EB  3000               	movlw	0
  1612  01EC  00F0               	movwf	?___xxtofl
  1613  01ED  0008               	return
  1614  01EE                     l1899:	
  1615  01EE  3096               	movlw	150
  1616  01EF  00F4               	movwf	??___xxtofl
  1617  01F0  0874               	movf	??___xxtofl,w
  1618  01F1  00F9               	movwf	___xxtofl@exp
  1619  01F2                     l1903:	
  1620  01F2  30FE               	movlw	254
  1621  01F3  057D               	andwf	___xxtofl@arg+3,w
  1622  01F4  1903               	btfsc	3,2
  1623  01F5  2A1F               	goto	l688
  1624  01F6  3001               	movlw	1
  1625  01F7  00F4               	movwf	??___xxtofl
  1626  01F8  0874               	movf	??___xxtofl,w
  1627  01F9  07F9               	addwf	___xxtofl@exp,f
  1628  01FA  3001               	movlw	1
  1629  01FB                     u2375:	
  1630  01FB  1003               	clrc
  1631  01FC  0CFD               	rrf	___xxtofl@arg+3,f
  1632  01FD  0CFC               	rrf	___xxtofl@arg+2,f
  1633  01FE  0CFB               	rrf	___xxtofl@arg+1,f
  1634  01FF  0CFA               	rrf	___xxtofl@arg,f
  1635  0200  3EFF               	addlw	-1
  1636  0201  1D03               	skipz
  1637  0202  29FB               	goto	u2375
  1638  0203  29F2               	goto	l1903
  1639  0204                     l1905:	
  1640  0204  3001               	movlw	1
  1641  0205  00F4               	movwf	??___xxtofl
  1642  0206  0874               	movf	??___xxtofl,w
  1643  0207  07F9               	addwf	___xxtofl@exp,f
  1644  0208  3001               	movlw	1
  1645  0209  07FA               	addwf	___xxtofl@arg,f
  1646  020A  3000               	movlw	0
  1647  020B  1803               	skipnc
  1648  020C  3001               	movlw	1
  1649  020D  07FB               	addwf	___xxtofl@arg+1,f
  1650  020E  3000               	movlw	0
  1651  020F  1803               	skipnc
  1652  0210  3001               	movlw	1
  1653  0211  07FC               	addwf	___xxtofl@arg+2,f
  1654  0212  3000               	movlw	0
  1655  0213  1803               	skipnc
  1656  0214  3001               	movlw	1
  1657  0215  07FD               	addwf	___xxtofl@arg+3,f
  1658  0216  3001               	movlw	1
  1659  0217                     u2395:	
  1660  0217  1003               	clrc
  1661  0218  0CFD               	rrf	___xxtofl@arg+3,f
  1662  0219  0CFC               	rrf	___xxtofl@arg+2,f
  1663  021A  0CFB               	rrf	___xxtofl@arg+1,f
  1664  021B  0CFA               	rrf	___xxtofl@arg,f
  1665  021C  3EFF               	addlw	-1
  1666  021D  1D03               	skipz
  1667  021E  2A17               	goto	u2395
  1668  021F                     l688:	
  1669  021F  30FF               	movlw	255
  1670  0220  057D               	andwf	___xxtofl@arg+3,w
  1671  0221  1903               	btfsc	3,2
  1672  0222  2A33               	goto	l1913
  1673  0223  2A04               	goto	l1905
  1674  0224                     l1915:	
  1675  0224  3002               	movlw	2
  1676  0225  0279               	subwf	___xxtofl@exp,w
  1677  0226  1C03               	btfss	3,0
  1678  0227  2A35               	goto	l695
  1679  0228  3001               	movlw	1
  1680  0229  02F9               	subwf	___xxtofl@exp,f
  1681  022A  3001               	movlw	1
  1682  022B  00F4               	movwf	??___xxtofl
  1683  022C                     u2415:	
  1684  022C  1003               	clrc
  1685  022D  0DFA               	rlf	___xxtofl@arg,f
  1686  022E  0DFB               	rlf	___xxtofl@arg+1,f
  1687  022F  0DFC               	rlf	___xxtofl@arg+2,f
  1688  0230  0DFD               	rlf	___xxtofl@arg+3,f
  1689  0231  0BF4               	decfsz	??___xxtofl,f
  1690  0232  2A2C               	goto	u2415
  1691  0233                     l1913:	
  1692  0233  1FFC               	btfss	___xxtofl@arg+2,7
  1693  0234  2A24               	goto	l1915
  1694  0235                     l695:	
  1695  0235  1879               	btfsc	___xxtofl@exp,0
  1696  0236  2A3F               	goto	l696
  1697  0237  30FF               	movlw	255
  1698  0238  05FA               	andwf	___xxtofl@arg,f
  1699  0239  30FF               	movlw	255
  1700  023A  05FB               	andwf	___xxtofl@arg+1,f
  1701  023B  307F               	movlw	127
  1702  023C  05FC               	andwf	___xxtofl@arg+2,f
  1703  023D  30FF               	movlw	255
  1704  023E  05FD               	andwf	___xxtofl@arg+3,f
  1705  023F                     l696:	
  1706  023F  1003               	clrc
  1707  0240  0CF9               	rrf	___xxtofl@exp,f
  1708  0241  0879               	movf	___xxtofl@exp,w
  1709  0242  00F4               	movwf	??___xxtofl
  1710  0243  01F5               	clrf	??___xxtofl+1
  1711  0244  01F6               	clrf	??___xxtofl+2
  1712  0245  01F7               	clrf	??___xxtofl+3
  1713  0246  3018               	movlw	24
  1714  0247                     u2455:	
  1715  0247  1003               	clrc
  1716  0248  0DF4               	rlf	??___xxtofl,f
  1717  0249  0DF5               	rlf	??___xxtofl+1,f
  1718  024A  0DF6               	rlf	??___xxtofl+2,f
  1719  024B  0DF7               	rlf	??___xxtofl+3,f
  1720  024C  3EFF               	addlw	-1
  1721  024D  1D03               	skipz
  1722  024E  2A47               	goto	u2455
  1723  024F  0874               	movf	??___xxtofl,w
  1724  0250  04FA               	iorwf	___xxtofl@arg,f
  1725  0251  0875               	movf	??___xxtofl+1,w
  1726  0252  04FB               	iorwf	___xxtofl@arg+1,f
  1727  0253  0876               	movf	??___xxtofl+2,w
  1728  0254  04FC               	iorwf	___xxtofl@arg+2,f
  1729  0255  0877               	movf	??___xxtofl+3,w
  1730  0256  04FD               	iorwf	___xxtofl@arg+3,f
  1731  0257  0878               	movf	___xxtofl@sign,w
  1732  0258  1D03               	btfss	3,2
  1733  0259  1FF3               	btfss	___xxtofl@val+3,7
  1734  025A  2A5C               	goto	l1927
  1735  025B  17FD               	bsf	___xxtofl@arg+3,7
  1736  025C                     l1927:	
  1737  025C  087D               	movf	___xxtofl@arg+3,w
  1738  025D  00F3               	movwf	?___xxtofl+3
  1739  025E  087C               	movf	___xxtofl@arg+2,w
  1740  025F  00F2               	movwf	?___xxtofl+2
  1741  0260  087B               	movf	___xxtofl@arg+1,w
  1742  0261  00F1               	movwf	?___xxtofl+1
  1743  0262  087A               	movf	___xxtofl@arg,w
  1744  0263  00F0               	movwf	?___xxtofl
  1745  0264  0008               	return
  1746  0265                     __end_of___xxtofl:	
  1747                           
  1748                           	psect	text6
  1749  004F                     __ptext6:	
  1750 ;; *************** function ___fltol *****************
  1751 ;; Defined at:
  1752 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;  f1              4   52[BANK0 ] unsigned char 
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;  exp1            1   62[BANK0 ] unsigned char 
  1757 ;;  sign1           1   61[BANK0 ] unsigned char 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  4   52[BANK0 ] long 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2, status,0
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1767 ;;      Params:         0       4       0       0       0
  1768 ;;      Locals:         0       2       0       0       0
  1769 ;;      Temps:          0       5       0       0       0
  1770 ;;      Totals:         0      11       0       0       0
  1771 ;;Total ram usage:       11 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; This function calls:
  1774 ;;		Nothing
  1775 ;; This function is called by:
  1776 ;;		_pwmSetDuty1
  1777 ;;		_pwmSetDuty2
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           
  1782                           ;psect for function ___fltol
  1783  004F                     ___fltol:	
  1784                           
  1785                           ;incstack = 0
  1786                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  1787  004F  1003               	clrc
  1788  0050  1283               	bcf	3,5	;RP0=0, select bank0
  1789  0051  1303               	bcf	3,6	;RP1=0, select bank0
  1790  0052  0D56               	rlf	___fltol@f1+2,w
  1791  0053  0D57               	rlf	___fltol@f1+3,w
  1792  0054  00D8               	movwf	??___fltol
  1793  0055  0858               	movf	??___fltol,w
  1794  0056  00DE               	movwf	___fltol@exp1
  1795  0057  085E               	movf	___fltol@exp1,w
  1796  0058  1D03               	btfss	3,2
  1797  0059  2863               	goto	l1527
  1798  005A                     l1523:	
  1799  005A  3000               	movlw	0
  1800  005B  00D7               	movwf	?___fltol+3
  1801  005C  3000               	movlw	0
  1802  005D  00D6               	movwf	?___fltol+2
  1803  005E  3000               	movlw	0
  1804  005F  00D5               	movwf	?___fltol+1
  1805  0060  3000               	movlw	0
  1806  0061  00D4               	movwf	?___fltol
  1807  0062  0008               	return
  1808  0063                     l1527:	
  1809  0063  0854               	movf	___fltol@f1,w
  1810  0064  00D8               	movwf	??___fltol
  1811  0065  0855               	movf	___fltol@f1+1,w
  1812  0066  00D9               	movwf	??___fltol+1
  1813  0067  0856               	movf	___fltol@f1+2,w
  1814  0068  00DA               	movwf	??___fltol+2
  1815  0069  0857               	movf	___fltol@f1+3,w
  1816  006A  00DB               	movwf	??___fltol+3
  1817  006B  301F               	movlw	31
  1818  006C                     u1465:	
  1819  006C  1003               	clrc
  1820  006D  0CDB               	rrf	??___fltol+3,f
  1821  006E  0CDA               	rrf	??___fltol+2,f
  1822  006F  0CD9               	rrf	??___fltol+1,f
  1823  0070  0CD8               	rrf	??___fltol,f
  1824  0071  3EFF               	addlw	-1
  1825  0072  1D03               	skipz
  1826  0073  286C               	goto	u1465
  1827  0074  0858               	movf	??___fltol,w
  1828  0075  00DC               	movwf	??___fltol+4
  1829  0076  085C               	movf	??___fltol+4,w
  1830  0077  00DD               	movwf	___fltol@sign1
  1831  0078  17D6               	bsf	___fltol@f1+2,7
  1832  0079  30FF               	movlw	255
  1833  007A  05D4               	andwf	___fltol@f1,f
  1834  007B  30FF               	movlw	255
  1835  007C  05D5               	andwf	___fltol@f1+1,f
  1836  007D  30FF               	movlw	255
  1837  007E  05D6               	andwf	___fltol@f1+2,f
  1838  007F  3000               	movlw	0
  1839  0080  05D7               	andwf	___fltol@f1+3,f
  1840  0081  3096               	movlw	150
  1841  0082  02DE               	subwf	___fltol@exp1,f
  1842  0083  1FDE               	btfss	___fltol@exp1,7
  1843  0084  289A               	goto	l1545
  1844  0085  085E               	movf	___fltol@exp1,w
  1845  0086  3A80               	xorlw	128
  1846  0087  3E97               	addlw	151
  1847  0088  1C03               	btfss	3,0
  1848  0089  285A               	goto	l1523
  1849  008A                     l1543:	
  1850  008A  3001               	movlw	1
  1851  008B                     u1495:	
  1852  008B  1003               	clrc
  1853  008C  0CD7               	rrf	___fltol@f1+3,f
  1854  008D  0CD6               	rrf	___fltol@f1+2,f
  1855  008E  0CD5               	rrf	___fltol@f1+1,f
  1856  008F  0CD4               	rrf	___fltol@f1,f
  1857  0090  3EFF               	addlw	-1
  1858  0091  1D03               	skipz
  1859  0092  288B               	goto	u1495
  1860  0093  3001               	movlw	1
  1861  0094  00D8               	movwf	??___fltol
  1862  0095  0858               	movf	??___fltol,w
  1863  0096  07DE               	addwf	___fltol@exp1,f
  1864  0097  1903               	btfsc	3,2
  1865  0098  28AD               	goto	l1553
  1866  0099  288A               	goto	l1543
  1867  009A                     l1545:	
  1868  009A  3020               	movlw	32
  1869  009B  025E               	subwf	___fltol@exp1,w
  1870  009C  1803               	btfsc	3,0
  1871  009D  285A               	goto	l1523
  1872  009E                     l448:	
  1873  009E  085E               	movf	___fltol@exp1,w
  1874  009F  1903               	btfsc	3,2
  1875  00A0  28AD               	goto	l1553
  1876  00A1  3001               	movlw	1
  1877  00A2  00D8               	movwf	??___fltol
  1878  00A3                     u1525:	
  1879  00A3  1003               	clrc
  1880  00A4  0DD4               	rlf	___fltol@f1,f
  1881  00A5  0DD5               	rlf	___fltol@f1+1,f
  1882  00A6  0DD6               	rlf	___fltol@f1+2,f
  1883  00A7  0DD7               	rlf	___fltol@f1+3,f
  1884  00A8  0BD8               	decfsz	??___fltol,f
  1885  00A9  28A3               	goto	u1525
  1886  00AA  3001               	movlw	1
  1887  00AB  02DE               	subwf	___fltol@exp1,f
  1888  00AC  289E               	goto	l448
  1889  00AD                     l1553:	
  1890  00AD  085D               	movf	___fltol@sign1,w
  1891  00AE  1903               	btfsc	3,2
  1892  00AF  0008               	return
  1893  00B0  09D4               	comf	___fltol@f1,f
  1894  00B1  09D5               	comf	___fltol@f1+1,f
  1895  00B2  09D6               	comf	___fltol@f1+2,f
  1896  00B3  09D7               	comf	___fltol@f1+3,f
  1897  00B4  0AD4               	incf	___fltol@f1,f
  1898  00B5  1903               	skipnz
  1899  00B6  0AD5               	incf	___fltol@f1+1,f
  1900  00B7  1903               	skipnz
  1901  00B8  0AD6               	incf	___fltol@f1+2,f
  1902  00B9  1903               	skipnz
  1903  00BA  0AD7               	incf	___fltol@f1+3,f
  1904  00BB  0008               	return
  1905  00BC                     __end_of___fltol:	
  1906                           
  1907                           	psect	text7
  1908  04E0                     __ptext7:	
  1909 ;; *************** function ___flmul *****************
  1910 ;; Defined at:
  1911 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;  b               4   26[BANK0 ] long 
  1914 ;;  a               4   30[BANK0 ] long 
  1915 ;; Auto vars:     Size  Location     Type
  1916 ;;  prod            4   46[BANK0 ] struct .
  1917 ;;  grs             4   40[BANK0 ] unsigned long 
  1918 ;;  temp            2   50[BANK0 ] struct .
  1919 ;;  bexp            1   45[BANK0 ] unsigned char 
  1920 ;;  aexp            1   44[BANK0 ] unsigned char 
  1921 ;;  sign            1   39[BANK0 ] unsigned char 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  4   26[BANK0 ] unsigned char 
  1924 ;; Registers used:
  1925 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1931 ;;      Params:         0       8       0       0       0
  1932 ;;      Locals:         0      13       0       0       0
  1933 ;;      Temps:          0       5       0       0       0
  1934 ;;      Totals:         0      26       0       0       0
  1935 ;;Total ram usage:       26 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:    1
  1938 ;; This function calls:
  1939 ;;		__Umul8_16
  1940 ;; This function is called by:
  1941 ;;		_pwmSetDuty1
  1942 ;;		_pwmSetDuty2
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           
  1947                           ;psect for function ___flmul
  1948  04E0                     ___flmul:	
  1949                           
  1950                           ;incstack = 0
  1951                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1952  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  1953  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  1954  04E2  083D               	movf	___flmul@b+3,w
  1955  04E3  3980               	andlw	128
  1956  04E4  00C2               	movwf	??___flmul
  1957  04E5  0842               	movf	??___flmul,w
  1958  04E6  00C7               	movwf	___flmul@sign
  1959  04E7  083D               	movf	___flmul@b+3,w
  1960  04E8  00C2               	movwf	??___flmul
  1961  04E9  0742               	addwf	??___flmul,w
  1962  04EA  00C3               	movwf	??___flmul+1
  1963  04EB  0843               	movf	??___flmul+1,w
  1964  04EC  00CD               	movwf	___flmul@bexp
  1965  04ED  1BBC               	btfsc	___flmul@b+2,7
  1966  04EE  144D               	bsf	___flmul@bexp,0
  1967  04EF  084D               	movf	___flmul@bexp,w
  1968  04F0  1903               	btfsc	3,2
  1969  04F1  2CFF               	goto	l1763
  1970  04F2  0A4D               	incf	___flmul@bexp,w
  1971  04F3  1D03               	btfss	3,2
  1972  04F4  2CFD               	goto	l1761
  1973  04F5  3000               	movlw	0
  1974  04F6  00BD               	movwf	___flmul@b+3
  1975  04F7  3000               	movlw	0
  1976  04F8  00BC               	movwf	___flmul@b+2
  1977  04F9  3000               	movlw	0
  1978  04FA  00BB               	movwf	___flmul@b+1
  1979  04FB  3000               	movlw	0
  1980  04FC  00BA               	movwf	___flmul@b
  1981  04FD                     l1761:	
  1982  04FD  17BC               	bsf	___flmul@b+2,7
  1983  04FE  2D07               	goto	l1765
  1984  04FF                     l1763:	
  1985  04FF  3000               	movlw	0
  1986  0500  00BD               	movwf	___flmul@b+3
  1987  0501  3000               	movlw	0
  1988  0502  00BC               	movwf	___flmul@b+2
  1989  0503  3000               	movlw	0
  1990  0504  00BB               	movwf	___flmul@b+1
  1991  0505  3000               	movlw	0
  1992  0506  00BA               	movwf	___flmul@b
  1993  0507                     l1765:	
  1994  0507  0841               	movf	___flmul@a+3,w
  1995  0508  3980               	andlw	128
  1996  0509  00C2               	movwf	??___flmul
  1997  050A  0842               	movf	??___flmul,w
  1998  050B  06C7               	xorwf	___flmul@sign,f
  1999  050C  0841               	movf	___flmul@a+3,w
  2000  050D  00C2               	movwf	??___flmul
  2001  050E  0742               	addwf	??___flmul,w
  2002  050F  00C3               	movwf	??___flmul+1
  2003  0510  0843               	movf	??___flmul+1,w
  2004  0511  00CC               	movwf	___flmul@aexp
  2005  0512  1BC0               	btfsc	___flmul@a+2,7
  2006  0513  144C               	bsf	___flmul@aexp,0
  2007  0514  084C               	movf	___flmul@aexp,w
  2008  0515  1903               	btfsc	3,2
  2009  0516  2D24               	goto	l1781
  2010  0517  0A4C               	incf	___flmul@aexp,w
  2011  0518  1D03               	btfss	3,2
  2012  0519  2D22               	goto	l1779
  2013  051A  3000               	movlw	0
  2014  051B  00C1               	movwf	___flmul@a+3
  2015  051C  3000               	movlw	0
  2016  051D  00C0               	movwf	___flmul@a+2
  2017  051E  3000               	movlw	0
  2018  051F  00BF               	movwf	___flmul@a+1
  2019  0520  3000               	movlw	0
  2020  0521  00BE               	movwf	___flmul@a
  2021  0522                     l1779:	
  2022  0522  17C0               	bsf	___flmul@a+2,7
  2023  0523  2D2C               	goto	l1783
  2024  0524                     l1781:	
  2025  0524  3000               	movlw	0
  2026  0525  00C1               	movwf	___flmul@a+3
  2027  0526  3000               	movlw	0
  2028  0527  00C0               	movwf	___flmul@a+2
  2029  0528  3000               	movlw	0
  2030  0529  00BF               	movwf	___flmul@a+1
  2031  052A  3000               	movlw	0
  2032  052B  00BE               	movwf	___flmul@a
  2033  052C                     l1783:	
  2034  052C  084C               	movf	___flmul@aexp,w
  2035  052D  1D03               	btfss	3,2
  2036  052E  084D               	movf	___flmul@bexp,w
  2037  052F  1D03               	btfss	3,2
  2038  0530  2D3A               	goto	l1791
  2039  0531  3000               	movlw	0
  2040  0532  00BD               	movwf	?___flmul+3
  2041  0533  3000               	movlw	0
  2042  0534  00BC               	movwf	?___flmul+2
  2043  0535  3000               	movlw	0
  2044  0536  00BB               	movwf	?___flmul+1
  2045  0537  3000               	movlw	0
  2046  0538  00BA               	movwf	?___flmul
  2047  0539  0008               	return
  2048  053A                     l1791:	
  2049  053A  083A               	movf	___flmul@b,w
  2050  053B  00C2               	movwf	??___flmul
  2051  053C  0842               	movf	??___flmul,w
  2052  053D  00F0               	movwf	__Umul8_16@multiplicand
  2053  053E  0840               	movf	___flmul@a+2,w
  2054  053F  120A  158A  269A  120A  118A  	fcall	__Umul8_16
  2055  0544  0871               	movf	?__Umul8_16+1,w
  2056  0545  1283               	bcf	3,5	;RP0=0, select bank0
  2057  0546  1303               	bcf	3,6	;RP1=0, select bank0
  2058  0547  00D3               	movwf	___flmul@temp+1
  2059  0548  0870               	movf	?__Umul8_16,w
  2060  0549  00D2               	movwf	___flmul@temp
  2061  054A  0852               	movf	___flmul@temp,w
  2062  054B  00C2               	movwf	??___flmul
  2063  054C  01C3               	clrf	??___flmul+1
  2064  054D  01C4               	clrf	??___flmul+2
  2065  054E  01C5               	clrf	??___flmul+3
  2066  054F  0845               	movf	??___flmul+3,w
  2067  0550  00CB               	movwf	___flmul@grs+3
  2068  0551  0844               	movf	??___flmul+2,w
  2069  0552  00CA               	movwf	___flmul@grs+2
  2070  0553  0843               	movf	??___flmul+1,w
  2071  0554  00C9               	movwf	___flmul@grs+1
  2072  0555  0842               	movf	??___flmul,w
  2073  0556  00C8               	movwf	___flmul@grs
  2074  0557  0853               	movf	___flmul@temp+1,w
  2075  0558  00C2               	movwf	??___flmul
  2076  0559  01C3               	clrf	??___flmul+1
  2077  055A  01C4               	clrf	??___flmul+2
  2078  055B  01C5               	clrf	??___flmul+3
  2079  055C  0845               	movf	??___flmul+3,w
  2080  055D  00D1               	movwf	___flmul@prod+3
  2081  055E  0844               	movf	??___flmul+2,w
  2082  055F  00D0               	movwf	___flmul@prod+2
  2083  0560  0843               	movf	??___flmul+1,w
  2084  0561  00CF               	movwf	___flmul@prod+1
  2085  0562  0842               	movf	??___flmul,w
  2086  0563  00CE               	movwf	___flmul@prod
  2087  0564  083B               	movf	___flmul@b+1,w
  2088  0565  00C2               	movwf	??___flmul
  2089  0566  0842               	movf	??___flmul,w
  2090  0567  00F0               	movwf	__Umul8_16@multiplicand
  2091  0568  083F               	movf	___flmul@a+1,w
  2092  0569  120A  158A  269A  120A  118A  	fcall	__Umul8_16
  2093  056E  0871               	movf	?__Umul8_16+1,w
  2094  056F  1283               	bcf	3,5	;RP0=0, select bank0
  2095  0570  1303               	bcf	3,6	;RP1=0, select bank0
  2096  0571  00D3               	movwf	___flmul@temp+1
  2097  0572  0870               	movf	?__Umul8_16,w
  2098  0573  00D2               	movwf	___flmul@temp
  2099  0574  0852               	movf	___flmul@temp,w
  2100  0575  00C2               	movwf	??___flmul
  2101  0576  01C3               	clrf	??___flmul+1
  2102  0577  01C4               	clrf	??___flmul+2
  2103  0578  01C5               	clrf	??___flmul+3
  2104  0579  0842               	movf	??___flmul,w
  2105  057A  07C8               	addwf	___flmul@grs,f
  2106  057B  0843               	movf	??___flmul+1,w
  2107  057C  1103               	clrz
  2108  057D  1803               	skipnc
  2109  057E  3E01               	addlw	1
  2110  057F  1D03               	btfss	3,2
  2111  0580  07C9               	addwf	___flmul@grs+1,f
  2112  0581  0844               	movf	??___flmul+2,w
  2113  0582  1103               	clrz
  2114  0583  1803               	skipnc
  2115  0584  3E01               	addlw	1
  2116  0585  1D03               	btfss	3,2
  2117  0586  07CA               	addwf	___flmul@grs+2,f
  2118  0587  0845               	movf	??___flmul+3,w
  2119  0588  1103               	clrz
  2120  0589  1803               	skipnc
  2121  058A  3E01               	addlw	1
  2122  058B  1D03               	btfss	3,2
  2123  058C  07CB               	addwf	___flmul@grs+3,f
  2124  058D  0853               	movf	___flmul@temp+1,w
  2125  058E  00C2               	movwf	??___flmul
  2126  058F  01C3               	clrf	??___flmul+1
  2127  0590  01C4               	clrf	??___flmul+2
  2128  0591  01C5               	clrf	??___flmul+3
  2129  0592  0842               	movf	??___flmul,w
  2130  0593  07CE               	addwf	___flmul@prod,f
  2131  0594  0843               	movf	??___flmul+1,w
  2132  0595  1103               	clrz
  2133  0596  1803               	skipnc
  2134  0597  3E01               	addlw	1
  2135  0598  1D03               	btfss	3,2
  2136  0599  07CF               	addwf	___flmul@prod+1,f
  2137  059A  0844               	movf	??___flmul+2,w
  2138  059B  1103               	clrz
  2139  059C  1803               	skipnc
  2140  059D  3E01               	addlw	1
  2141  059E  1D03               	btfss	3,2
  2142  059F  07D0               	addwf	___flmul@prod+2,f
  2143  05A0  0845               	movf	??___flmul+3,w
  2144  05A1  1103               	clrz
  2145  05A2  1803               	skipnc
  2146  05A3  3E01               	addlw	1
  2147  05A4  1D03               	btfss	3,2
  2148  05A5  07D1               	addwf	___flmul@prod+3,f
  2149  05A6  083C               	movf	___flmul@b+2,w
  2150  05A7  00C2               	movwf	??___flmul
  2151  05A8  0842               	movf	??___flmul,w
  2152  05A9  00F0               	movwf	__Umul8_16@multiplicand
  2153  05AA  083E               	movf	___flmul@a,w
  2154  05AB  120A  158A  269A  120A  118A  	fcall	__Umul8_16
  2155  05B0  0871               	movf	?__Umul8_16+1,w
  2156  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2157  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2158  05B3  00D3               	movwf	___flmul@temp+1
  2159  05B4  0870               	movf	?__Umul8_16,w
  2160  05B5  00D2               	movwf	___flmul@temp
  2161  05B6  0852               	movf	___flmul@temp,w
  2162  05B7  00C2               	movwf	??___flmul
  2163  05B8  01C3               	clrf	??___flmul+1
  2164  05B9  01C4               	clrf	??___flmul+2
  2165  05BA  01C5               	clrf	??___flmul+3
  2166  05BB  0842               	movf	??___flmul,w
  2167  05BC  07C8               	addwf	___flmul@grs,f
  2168  05BD  0843               	movf	??___flmul+1,w
  2169  05BE  1103               	clrz
  2170  05BF  1803               	skipnc
  2171  05C0  3E01               	addlw	1
  2172  05C1  1D03               	btfss	3,2
  2173  05C2  07C9               	addwf	___flmul@grs+1,f
  2174  05C3  0844               	movf	??___flmul+2,w
  2175  05C4  1103               	clrz
  2176  05C5  1803               	skipnc
  2177  05C6  3E01               	addlw	1
  2178  05C7  1D03               	btfss	3,2
  2179  05C8  07CA               	addwf	___flmul@grs+2,f
  2180  05C9  0845               	movf	??___flmul+3,w
  2181  05CA  1103               	clrz
  2182  05CB  1803               	skipnc
  2183  05CC  3E01               	addlw	1
  2184  05CD  1D03               	btfss	3,2
  2185  05CE  07CB               	addwf	___flmul@grs+3,f
  2186  05CF  0853               	movf	___flmul@temp+1,w
  2187  05D0  00C2               	movwf	??___flmul
  2188  05D1  01C3               	clrf	??___flmul+1
  2189  05D2  01C4               	clrf	??___flmul+2
  2190  05D3  01C5               	clrf	??___flmul+3
  2191  05D4  0842               	movf	??___flmul,w
  2192  05D5  07CE               	addwf	___flmul@prod,f
  2193  05D6  0843               	movf	??___flmul+1,w
  2194  05D7  1103               	clrz
  2195  05D8  1803               	skipnc
  2196  05D9  3E01               	addlw	1
  2197  05DA  1D03               	btfss	3,2
  2198  05DB  07CF               	addwf	___flmul@prod+1,f
  2199  05DC  0844               	movf	??___flmul+2,w
  2200  05DD  1103               	clrz
  2201  05DE  1803               	skipnc
  2202  05DF  3E01               	addlw	1
  2203  05E0  1D03               	btfss	3,2
  2204  05E1  07D0               	addwf	___flmul@prod+2,f
  2205  05E2  0845               	movf	??___flmul+3,w
  2206  05E3  1103               	clrz
  2207  05E4  1803               	skipnc
  2208  05E5  3E01               	addlw	1
  2209  05E6  1D03               	btfss	3,2
  2210  05E7  07D1               	addwf	___flmul@prod+3,f
  2211  05E8  3008               	movlw	8
  2212  05E9  00C2               	movwf	??___flmul
  2213  05EA                     u2095:	
  2214  05EA  1003               	clrc
  2215  05EB  0DC8               	rlf	___flmul@grs,f
  2216  05EC  0DC9               	rlf	___flmul@grs+1,f
  2217  05ED  0DCA               	rlf	___flmul@grs+2,f
  2218  05EE  0DCB               	rlf	___flmul@grs+3,f
  2219  05EF  0BC2               	decfsz	??___flmul,f
  2220  05F0  2DEA               	goto	u2095
  2221  05F1  083B               	movf	___flmul@b+1,w
  2222  05F2  00C2               	movwf	??___flmul
  2223  05F3  0842               	movf	??___flmul,w
  2224  05F4  00F0               	movwf	__Umul8_16@multiplicand
  2225  05F5  083E               	movf	___flmul@a,w
  2226  05F6  120A  158A  269A  120A  118A  	fcall	__Umul8_16
  2227  05FB  0871               	movf	?__Umul8_16+1,w
  2228  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  2229  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  2230  05FE  00D3               	movwf	___flmul@temp+1
  2231  05FF  0870               	movf	?__Umul8_16,w
  2232  0600  00D2               	movwf	___flmul@temp
  2233  0601  0852               	movf	___flmul@temp,w
  2234  0602  00C2               	movwf	??___flmul
  2235  0603  0853               	movf	___flmul@temp+1,w
  2236  0604  00C3               	movwf	??___flmul+1
  2237  0605  01C4               	clrf	??___flmul+2
  2238  0606  01C5               	clrf	??___flmul+3
  2239  0607  0842               	movf	??___flmul,w
  2240  0608  07C8               	addwf	___flmul@grs,f
  2241  0609  0843               	movf	??___flmul+1,w
  2242  060A  1103               	clrz
  2243  060B  1803               	skipnc
  2244  060C  3E01               	addlw	1
  2245  060D  1D03               	btfss	3,2
  2246  060E  07C9               	addwf	___flmul@grs+1,f
  2247  060F  0844               	movf	??___flmul+2,w
  2248  0610  1103               	clrz
  2249  0611  1803               	skipnc
  2250  0612  3E01               	addlw	1
  2251  0613  1D03               	btfss	3,2
  2252  0614  07CA               	addwf	___flmul@grs+2,f
  2253  0615  0845               	movf	??___flmul+3,w
  2254  0616  1103               	clrz
  2255  0617  1803               	skipnc
  2256  0618  3E01               	addlw	1
  2257  0619  1D03               	btfss	3,2
  2258  061A  07CB               	addwf	___flmul@grs+3,f
  2259  061B  083A               	movf	___flmul@b,w
  2260  061C  00C2               	movwf	??___flmul
  2261  061D  0842               	movf	??___flmul,w
  2262  061E  00F0               	movwf	__Umul8_16@multiplicand
  2263  061F  083F               	movf	___flmul@a+1,w
  2264  0620  120A  158A  269A  120A  118A  	fcall	__Umul8_16
  2265  0625  0871               	movf	?__Umul8_16+1,w
  2266  0626  1283               	bcf	3,5	;RP0=0, select bank0
  2267  0627  1303               	bcf	3,6	;RP1=0, select bank0
  2268  0628  00D3               	movwf	___flmul@temp+1
  2269  0629  0870               	movf	?__Umul8_16,w
  2270  062A  00D2               	movwf	___flmul@temp
  2271  062B  0852               	movf	___flmul@temp,w
  2272  062C  00C2               	movwf	??___flmul
  2273  062D  0853               	movf	___flmul@temp+1,w
  2274  062E  00C3               	movwf	??___flmul+1
  2275  062F  01C4               	clrf	??___flmul+2
  2276  0630  01C5               	clrf	??___flmul+3
  2277  0631  0842               	movf	??___flmul,w
  2278  0632  07C8               	addwf	___flmul@grs,f
  2279  0633  0843               	movf	??___flmul+1,w
  2280  0634  1103               	clrz
  2281  0635  1803               	skipnc
  2282  0636  3E01               	addlw	1
  2283  0637  1D03               	btfss	3,2
  2284  0638  07C9               	addwf	___flmul@grs+1,f
  2285  0639  0844               	movf	??___flmul+2,w
  2286  063A  1103               	clrz
  2287  063B  1803               	skipnc
  2288  063C  3E01               	addlw	1
  2289  063D  1D03               	btfss	3,2
  2290  063E  07CA               	addwf	___flmul@grs+2,f
  2291  063F  0845               	movf	??___flmul+3,w
  2292  0640  1103               	clrz
  2293  0641  1803               	skipnc
  2294  0642  3E01               	addlw	1
  2295  0643  1D03               	btfss	3,2
  2296  0644  07CB               	addwf	___flmul@grs+3,f
  2297  0645  3008               	movlw	8
  2298  0646  00C2               	movwf	??___flmul
  2299  0647                     u2125:	
  2300  0647  1003               	clrc
  2301  0648  0DC8               	rlf	___flmul@grs,f
  2302  0649  0DC9               	rlf	___flmul@grs+1,f
  2303  064A  0DCA               	rlf	___flmul@grs+2,f
  2304  064B  0DCB               	rlf	___flmul@grs+3,f
  2305  064C  0BC2               	decfsz	??___flmul,f
  2306  064D  2E47               	goto	u2125
  2307  064E  083A               	movf	___flmul@b,w
  2308  064F  00C2               	movwf	??___flmul
  2309  0650  0842               	movf	??___flmul,w
  2310  0651  00F0               	movwf	__Umul8_16@multiplicand
  2311  0652  083E               	movf	___flmul@a,w
  2312  0653  120A  158A  269A  120A  118A  	fcall	__Umul8_16
  2313  0658  0871               	movf	?__Umul8_16+1,w
  2314  0659  1283               	bcf	3,5	;RP0=0, select bank0
  2315  065A  1303               	bcf	3,6	;RP1=0, select bank0
  2316  065B  00D3               	movwf	___flmul@temp+1
  2317  065C  0870               	movf	?__Umul8_16,w
  2318  065D  00D2               	movwf	___flmul@temp
  2319  065E  0852               	movf	___flmul@temp,w
  2320  065F  00C2               	movwf	??___flmul
  2321  0660  0853               	movf	___flmul@temp+1,w
  2322  0661  00C3               	movwf	??___flmul+1
  2323  0662  01C4               	clrf	??___flmul+2
  2324  0663  01C5               	clrf	??___flmul+3
  2325  0664  0842               	movf	??___flmul,w
  2326  0665  07C8               	addwf	___flmul@grs,f
  2327  0666  0843               	movf	??___flmul+1,w
  2328  0667  1103               	clrz
  2329  0668  1803               	skipnc
  2330  0669  3E01               	addlw	1
  2331  066A  1D03               	btfss	3,2
  2332  066B  07C9               	addwf	___flmul@grs+1,f
  2333  066C  0844               	movf	??___flmul+2,w
  2334  066D  1103               	clrz
  2335  066E  1803               	skipnc
  2336  066F  3E01               	addlw	1
  2337  0670  1D03               	btfss	3,2
  2338  0671  07CA               	addwf	___flmul@grs+2,f
  2339  0672  0845               	movf	??___flmul+3,w
  2340  0673  1103               	clrz
  2341  0674  1803               	skipnc
  2342  0675  3E01               	addlw	1
  2343  0676  1D03               	btfss	3,2
  2344  0677  07CB               	addwf	___flmul@grs+3,f
  2345  0678  083B               	movf	___flmul@b+1,w
  2346  0679  00C2               	movwf	??___flmul
  2347  067A  0842               	movf	??___flmul,w
  2348  067B  00F0               	movwf	__Umul8_16@multiplicand
  2349  067C  0840               	movf	___flmul@a+2,w
  2350  067D  120A  158A  269A  120A  118A  	fcall	__Umul8_16
  2351  0682  0871               	movf	?__Umul8_16+1,w
  2352  0683  1283               	bcf	3,5	;RP0=0, select bank0
  2353  0684  1303               	bcf	3,6	;RP1=0, select bank0
  2354  0685  00D3               	movwf	___flmul@temp+1
  2355  0686  0870               	movf	?__Umul8_16,w
  2356  0687  00D2               	movwf	___flmul@temp
  2357  0688  0852               	movf	___flmul@temp,w
  2358  0689  00C2               	movwf	??___flmul
  2359  068A  0853               	movf	___flmul@temp+1,w
  2360  068B  00C3               	movwf	??___flmul+1
  2361  068C  01C4               	clrf	??___flmul+2
  2362  068D  01C5               	clrf	??___flmul+3
  2363  068E  0842               	movf	??___flmul,w
  2364  068F  07CE               	addwf	___flmul@prod,f
  2365  0690  0843               	movf	??___flmul+1,w
  2366  0691  1103               	clrz
  2367  0692  1803               	skipnc
  2368  0693  3E01               	addlw	1
  2369  0694  1D03               	btfss	3,2
  2370  0695  07CF               	addwf	___flmul@prod+1,f
  2371  0696  0844               	movf	??___flmul+2,w
  2372  0697  1103               	clrz
  2373  0698  1803               	skipnc
  2374  0699  3E01               	addlw	1
  2375  069A  1D03               	btfss	3,2
  2376  069B  07D0               	addwf	___flmul@prod+2,f
  2377  069C  0845               	movf	??___flmul+3,w
  2378  069D  1103               	clrz
  2379  069E  1803               	skipnc
  2380  069F  3E01               	addlw	1
  2381  06A0  1D03               	btfss	3,2
  2382  06A1  07D1               	addwf	___flmul@prod+3,f
  2383  06A2  083C               	movf	___flmul@b+2,w
  2384  06A3  00C2               	movwf	??___flmul
  2385  06A4  0842               	movf	??___flmul,w
  2386  06A5  00F0               	movwf	__Umul8_16@multiplicand
  2387  06A6  083F               	movf	___flmul@a+1,w
  2388  06A7  120A  158A  269A  120A  118A  	fcall	__Umul8_16
  2389  06AC  0871               	movf	?__Umul8_16+1,w
  2390  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  2391  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  2392  06AF  00D3               	movwf	___flmul@temp+1
  2393  06B0  0870               	movf	?__Umul8_16,w
  2394  06B1  00D2               	movwf	___flmul@temp
  2395  06B2  0852               	movf	___flmul@temp,w
  2396  06B3  00C2               	movwf	??___flmul
  2397  06B4  0853               	movf	___flmul@temp+1,w
  2398  06B5  00C3               	movwf	??___flmul+1
  2399  06B6  01C4               	clrf	??___flmul+2
  2400  06B7  01C5               	clrf	??___flmul+3
  2401  06B8  0842               	movf	??___flmul,w
  2402  06B9  07CE               	addwf	___flmul@prod,f
  2403  06BA  0843               	movf	??___flmul+1,w
  2404  06BB  1103               	clrz
  2405  06BC  1803               	skipnc
  2406  06BD  3E01               	addlw	1
  2407  06BE  1D03               	btfss	3,2
  2408  06BF  07CF               	addwf	___flmul@prod+1,f
  2409  06C0  0844               	movf	??___flmul+2,w
  2410  06C1  1103               	clrz
  2411  06C2  1803               	skipnc
  2412  06C3  3E01               	addlw	1
  2413  06C4  1D03               	btfss	3,2
  2414  06C5  07D0               	addwf	___flmul@prod+2,f
  2415  06C6  0845               	movf	??___flmul+3,w
  2416  06C7  1103               	clrz
  2417  06C8  1803               	skipnc
  2418  06C9  3E01               	addlw	1
  2419  06CA  1D03               	btfss	3,2
  2420  06CB  07D1               	addwf	___flmul@prod+3,f
  2421  06CC  083C               	movf	___flmul@b+2,w
  2422  06CD  00C2               	movwf	??___flmul
  2423  06CE  0842               	movf	??___flmul,w
  2424  06CF  00F0               	movwf	__Umul8_16@multiplicand
  2425  06D0  0840               	movf	___flmul@a+2,w
  2426  06D1  120A  158A  269A  120A  118A  	fcall	__Umul8_16
  2427  06D6  0871               	movf	?__Umul8_16+1,w
  2428  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  2429  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  2430  06D9  00D3               	movwf	___flmul@temp+1
  2431  06DA  0870               	movf	?__Umul8_16,w
  2432  06DB  00D2               	movwf	___flmul@temp
  2433  06DC  0852               	movf	___flmul@temp,w
  2434  06DD  00C2               	movwf	??___flmul
  2435  06DE  0853               	movf	___flmul@temp+1,w
  2436  06DF  00C3               	movwf	??___flmul+1
  2437  06E0  01C4               	clrf	??___flmul+2
  2438  06E1  01C5               	clrf	??___flmul+3
  2439  06E2  3008               	movlw	8
  2440  06E3                     u2165:	
  2441  06E3  1003               	clrc
  2442  06E4  0DC2               	rlf	??___flmul,f
  2443  06E5  0DC3               	rlf	??___flmul+1,f
  2444  06E6  0DC4               	rlf	??___flmul+2,f
  2445  06E7  0DC5               	rlf	??___flmul+3,f
  2446  06E8  3EFF               	addlw	-1
  2447  06E9  1D03               	skipz
  2448  06EA  2EE3               	goto	u2165
  2449  06EB  0842               	movf	??___flmul,w
  2450  06EC  07CE               	addwf	___flmul@prod,f
  2451  06ED  0843               	movf	??___flmul+1,w
  2452  06EE  1103               	clrz
  2453  06EF  1803               	skipnc
  2454  06F0  3E01               	addlw	1
  2455  06F1  1D03               	btfss	3,2
  2456  06F2  07CF               	addwf	___flmul@prod+1,f
  2457  06F3  0844               	movf	??___flmul+2,w
  2458  06F4  1103               	clrz
  2459  06F5  1803               	skipnc
  2460  06F6  3E01               	addlw	1
  2461  06F7  1D03               	btfss	3,2
  2462  06F8  07D0               	addwf	___flmul@prod+2,f
  2463  06F9  0845               	movf	??___flmul+3,w
  2464  06FA  1103               	clrz
  2465  06FB  1803               	skipnc
  2466  06FC  3E01               	addlw	1
  2467  06FD  1D03               	btfss	3,2
  2468  06FE  07D1               	addwf	___flmul@prod+3,f
  2469  06FF  0848               	movf	___flmul@grs,w
  2470  0700  00C2               	movwf	??___flmul
  2471  0701  0849               	movf	___flmul@grs+1,w
  2472  0702  00C3               	movwf	??___flmul+1
  2473  0703  084A               	movf	___flmul@grs+2,w
  2474  0704  00C4               	movwf	??___flmul+2
  2475  0705  084B               	movf	___flmul@grs+3,w
  2476  0706  00C5               	movwf	??___flmul+3
  2477  0707  3018               	movlw	24
  2478  0708                     u2185:	
  2479  0708  1003               	clrc
  2480  0709  0CC5               	rrf	??___flmul+3,f
  2481  070A  0CC4               	rrf	??___flmul+2,f
  2482  070B  0CC3               	rrf	??___flmul+1,f
  2483  070C  0CC2               	rrf	??___flmul,f
  2484  070D  3EFF               	addlw	-1
  2485  070E  1D03               	skipz
  2486  070F  2F08               	goto	u2185
  2487  0710  0842               	movf	??___flmul,w
  2488  0711  07CE               	addwf	___flmul@prod,f
  2489  0712  0843               	movf	??___flmul+1,w
  2490  0713  1103               	clrz
  2491  0714  1803               	skipnc
  2492  0715  3E01               	addlw	1
  2493  0716  1D03               	btfss	3,2
  2494  0717  07CF               	addwf	___flmul@prod+1,f
  2495  0718  0844               	movf	??___flmul+2,w
  2496  0719  1103               	clrz
  2497  071A  1803               	skipnc
  2498  071B  3E01               	addlw	1
  2499  071C  1D03               	btfss	3,2
  2500  071D  07D0               	addwf	___flmul@prod+2,f
  2501  071E  0845               	movf	??___flmul+3,w
  2502  071F  1103               	clrz
  2503  0720  1803               	skipnc
  2504  0721  3E01               	addlw	1
  2505  0722  1D03               	btfss	3,2
  2506  0723  07D1               	addwf	___flmul@prod+3,f
  2507  0724  3008               	movlw	8
  2508  0725  00C2               	movwf	??___flmul
  2509  0726                     u2205:	
  2510  0726  1003               	clrc
  2511  0727  0DC8               	rlf	___flmul@grs,f
  2512  0728  0DC9               	rlf	___flmul@grs+1,f
  2513  0729  0DCA               	rlf	___flmul@grs+2,f
  2514  072A  0DCB               	rlf	___flmul@grs+3,f
  2515  072B  0BC2               	decfsz	??___flmul,f
  2516  072C  2F26               	goto	u2205
  2517  072D  084D               	movf	___flmul@bexp,w
  2518  072E  074C               	addwf	___flmul@aexp,w
  2519  072F  00C2               	movwf	??___flmul
  2520  0730  01C3               	clrf	??___flmul+1
  2521  0731  0DC3               	rlf	??___flmul+1,f
  2522  0732  0842               	movf	??___flmul,w
  2523  0733  3E82               	addlw	130
  2524  0734  00D2               	movwf	___flmul@temp
  2525  0735  0843               	movf	??___flmul+1,w
  2526  0736  1803               	skipnc
  2527  0737  3E01               	addlw	1
  2528  0738  3EFF               	addlw	255
  2529  0739  00D3               	movwf	___flmul@temp+1
  2530  073A                     l1843:	
  2531  073A  1BD0               	btfsc	___flmul@prod+2,7
  2532  073B  2F57               	goto	l1845
  2533  073C  3001               	movlw	1
  2534  073D  00C2               	movwf	??___flmul
  2535  073E                     u2215:	
  2536  073E  1003               	clrc
  2537  073F  0DCE               	rlf	___flmul@prod,f
  2538  0740  0DCF               	rlf	___flmul@prod+1,f
  2539  0741  0DD0               	rlf	___flmul@prod+2,f
  2540  0742  0DD1               	rlf	___flmul@prod+3,f
  2541  0743  0BC2               	decfsz	??___flmul,f
  2542  0744  2F3E               	goto	u2215
  2543  0745  1BCB               	btfsc	___flmul@grs+3,7
  2544  0746  144E               	bsf	___flmul@prod,0
  2545  0747  3001               	movlw	1
  2546  0748  00C2               	movwf	??___flmul
  2547  0749                     u2235:	
  2548  0749  1003               	clrc
  2549  074A  0DC8               	rlf	___flmul@grs,f
  2550  074B  0DC9               	rlf	___flmul@grs+1,f
  2551  074C  0DCA               	rlf	___flmul@grs+2,f
  2552  074D  0DCB               	rlf	___flmul@grs+3,f
  2553  074E  0BC2               	decfsz	??___flmul,f
  2554  074F  2F49               	goto	u2235
  2555  0750  30FF               	movlw	255
  2556  0751  07D2               	addwf	___flmul@temp,f
  2557  0752  1803               	skipnc
  2558  0753  0AD3               	incf	___flmul@temp+1,f
  2559  0754  30FF               	movlw	255
  2560  0755  07D3               	addwf	___flmul@temp+1,f
  2561  0756  2F3A               	goto	l1843
  2562  0757                     l1845:	
  2563  0757  01CC               	clrf	___flmul@aexp
  2564  0758  1FCB               	btfss	___flmul@grs+3,7
  2565  0759  2F70               	goto	l1855
  2566  075A  30FF               	movlw	255
  2567  075B  0548               	andwf	___flmul@grs,w
  2568  075C  00C2               	movwf	??___flmul
  2569  075D  30FF               	movlw	255
  2570  075E  0549               	andwf	___flmul@grs+1,w
  2571  075F  00C3               	movwf	??___flmul+1
  2572  0760  30FF               	movlw	255
  2573  0761  054A               	andwf	___flmul@grs+2,w
  2574  0762  00C4               	movwf	??___flmul+2
  2575  0763  307F               	movlw	127
  2576  0764  054B               	andwf	___flmul@grs+3,w
  2577  0765  00C5               	movwf	??___flmul+3
  2578  0766  0845               	movf	??___flmul+3,w
  2579  0767  0444               	iorwf	??___flmul+2,w
  2580  0768  0443               	iorwf	??___flmul+1,w
  2581  0769  0442               	iorwf	??___flmul,w
  2582  076A  1903               	skipnz
  2583  076B  184E               	btfsc	___flmul@prod,0
  2584  076C  2F6E               	goto	l1851
  2585  076D  2F70               	goto	l1855
  2586  076E                     l1851:	
  2587  076E  01CC               	clrf	___flmul@aexp
  2588  076F  0ACC               	incf	___flmul@aexp,f
  2589  0770                     l1855:	
  2590  0770  084C               	movf	___flmul@aexp,w
  2591  0771  1903               	btfsc	3,2
  2592  0772  2FA2               	goto	l1865
  2593  0773  3001               	movlw	1
  2594  0774  07CE               	addwf	___flmul@prod,f
  2595  0775  3000               	movlw	0
  2596  0776  1803               	skipnc
  2597  0777  3001               	movlw	1
  2598  0778  07CF               	addwf	___flmul@prod+1,f
  2599  0779  3000               	movlw	0
  2600  077A  1803               	skipnc
  2601  077B  3001               	movlw	1
  2602  077C  07D0               	addwf	___flmul@prod+2,f
  2603  077D  3000               	movlw	0
  2604  077E  1803               	skipnc
  2605  077F  3001               	movlw	1
  2606  0780  07D1               	addwf	___flmul@prod+3,f
  2607  0781  1C51               	btfss	___flmul@prod+3,0
  2608  0782  2FA2               	goto	l1865
  2609  0783  084E               	movf	___flmul@prod,w
  2610  0784  00C2               	movwf	??___flmul
  2611  0785  084F               	movf	___flmul@prod+1,w
  2612  0786  00C3               	movwf	??___flmul+1
  2613  0787  0850               	movf	___flmul@prod+2,w
  2614  0788  00C4               	movwf	??___flmul+2
  2615  0789  0851               	movf	___flmul@prod+3,w
  2616  078A  00C5               	movwf	??___flmul+3
  2617  078B  3001               	movlw	1
  2618  078C  00C6               	movwf	??___flmul+4
  2619  078D                     u2305:	
  2620  078D  0D45               	rlf	??___flmul+3,w
  2621  078E  0CC5               	rrf	??___flmul+3,f
  2622  078F  0CC4               	rrf	??___flmul+2,f
  2623  0790  0CC3               	rrf	??___flmul+1,f
  2624  0791  0CC2               	rrf	??___flmul,f
  2625  0792  0BC6               	decfsz	??___flmul+4,f
  2626  0793  2F8D               	goto	u2305
  2627  0794  0845               	movf	??___flmul+3,w
  2628  0795  00D1               	movwf	___flmul@prod+3
  2629  0796  0844               	movf	??___flmul+2,w
  2630  0797  00D0               	movwf	___flmul@prod+2
  2631  0798  0843               	movf	??___flmul+1,w
  2632  0799  00CF               	movwf	___flmul@prod+1
  2633  079A  0842               	movf	??___flmul,w
  2634  079B  00CE               	movwf	___flmul@prod
  2635  079C  3001               	movlw	1
  2636  079D  07D2               	addwf	___flmul@temp,f
  2637  079E  1803               	skipnc
  2638  079F  0AD3               	incf	___flmul@temp+1,f
  2639  07A0  3000               	movlw	0
  2640  07A1  07D3               	addwf	___flmul@temp+1,f
  2641  07A2                     l1865:	
  2642  07A2  0853               	movf	___flmul@temp+1,w
  2643  07A3  3A80               	xorlw	128
  2644  07A4  00FF               	movwf	127
  2645  07A5  3080               	movlw	128
  2646  07A6  027F               	subwf	127,w
  2647  07A7  1D03               	skipz
  2648  07A8  2FAB               	goto	u2315
  2649  07A9  30FF               	movlw	255
  2650  07AA  0252               	subwf	___flmul@temp,w
  2651  07AB                     u2315:	
  2652  07AB  1C03               	skipc
  2653  07AC  2FB8               	goto	l1869
  2654  07AD  307F               	movlw	127
  2655  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  2656  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  2657  07B0  00D1               	movwf	___flmul@prod+3
  2658  07B1  3080               	movlw	128
  2659  07B2  00D0               	movwf	___flmul@prod+2
  2660  07B3  3000               	movlw	0
  2661  07B4  00CF               	movwf	___flmul@prod+1
  2662  07B5  3000               	movlw	0
  2663  07B6  00CE               	movwf	___flmul@prod
  2664  07B7  2FE8               	goto	l656
  2665  07B8                     l1869:	
  2666  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  2667  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  2668  07BA  0853               	movf	___flmul@temp+1,w
  2669  07BB  3A80               	xorlw	128
  2670  07BC  00FF               	movwf	127
  2671  07BD  3080               	movlw	128
  2672  07BE  027F               	subwf	127,w
  2673  07BF  1D03               	skipz
  2674  07C0  2FC3               	goto	u2325
  2675  07C1  3001               	movlw	1
  2676  07C2  0252               	subwf	___flmul@temp,w
  2677  07C3                     u2325:	
  2678  07C3  1803               	skipnc
  2679  07C4  2FD1               	goto	l1875
  2680  07C5  3000               	movlw	0
  2681  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  2682  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  2683  07C8  00D1               	movwf	___flmul@prod+3
  2684  07C9  3000               	movlw	0
  2685  07CA  00D0               	movwf	___flmul@prod+2
  2686  07CB  3000               	movlw	0
  2687  07CC  00CF               	movwf	___flmul@prod+1
  2688  07CD  3000               	movlw	0
  2689  07CE  00CE               	movwf	___flmul@prod
  2690  07CF  01C7               	clrf	___flmul@sign
  2691  07D0  2FE8               	goto	l656
  2692  07D1                     l1875:	
  2693  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  2694  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  2695  07D3  0852               	movf	___flmul@temp,w
  2696  07D4  00C2               	movwf	??___flmul
  2697  07D5  0842               	movf	??___flmul,w
  2698  07D6  00CD               	movwf	___flmul@bexp
  2699  07D7  30FF               	movlw	255
  2700  07D8  05CE               	andwf	___flmul@prod,f
  2701  07D9  30FF               	movlw	255
  2702  07DA  05CF               	andwf	___flmul@prod+1,f
  2703  07DB  307F               	movlw	127
  2704  07DC  05D0               	andwf	___flmul@prod+2,f
  2705  07DD  3000               	movlw	0
  2706  07DE  05D1               	andwf	___flmul@prod+3,f
  2707  07DF  184D               	btfsc	___flmul@bexp,0
  2708  07E0  17D0               	bsf	___flmul@prod+2,7
  2709  07E1  084D               	movf	___flmul@bexp,w
  2710  07E2  00C2               	movwf	??___flmul
  2711  07E3  1003               	clrc
  2712  07E4  0C42               	rrf	??___flmul,w
  2713  07E5  00C3               	movwf	??___flmul+1
  2714  07E6  0843               	movf	??___flmul+1,w
  2715  07E7  00D1               	movwf	___flmul@prod+3
  2716  07E8                     l656:	
  2717  07E8  0847               	movf	___flmul@sign,w
  2718  07E9  00C2               	movwf	??___flmul
  2719  07EA  0842               	movf	??___flmul,w
  2720  07EB  04D1               	iorwf	___flmul@prod+3,f
  2721  07EC  0851               	movf	___flmul@prod+3,w
  2722  07ED  00BD               	movwf	?___flmul+3
  2723  07EE  0850               	movf	___flmul@prod+2,w
  2724  07EF  00BC               	movwf	?___flmul+2
  2725  07F0  084F               	movf	___flmul@prod+1,w
  2726  07F1  00BB               	movwf	?___flmul+1
  2727  07F2  084E               	movf	___flmul@prod,w
  2728  07F3  00BA               	movwf	?___flmul
  2729  07F4  0008               	return
  2730  07F5                     __end_of___flmul:	
  2731                           
  2732                           	psect	text8
  2733  0E9A                     __ptext8:	
  2734 ;; *************** function __Umul8_16 *****************
  2735 ;; Defined at:
  2736 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;  multiplier      1    wreg     unsigned char 
  2739 ;;  multiplicand    1    0[COMMON] unsigned char 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  multiplier      1    8[COMMON] unsigned char 
  2742 ;;  word_mpld       2    6[COMMON] unsigned int 
  2743 ;;  product         2    4[COMMON] unsigned int 
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  2    0[COMMON] unsigned int 
  2746 ;; Registers used:
  2747 ;;		wreg, status,2, status,0
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2753 ;;      Params:         2       0       0       0       0
  2754 ;;      Locals:         5       0       0       0       0
  2755 ;;      Temps:          2       0       0       0       0
  2756 ;;      Totals:         9       0       0       0       0
  2757 ;;Total ram usage:        9 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; This function calls:
  2760 ;;		Nothing
  2761 ;; This function is called by:
  2762 ;;		___flmul
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           
  2767                           ;psect for function __Umul8_16
  2768  0E9A                     __Umul8_16:	
  2769                           
  2770                           ;incstack = 0
  2771                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  2772                           ;__Umul8_16@multiplier stored from wreg
  2773  0E9A  00F8               	movwf	__Umul8_16@multiplier
  2774  0E9B  01F4               	clrf	__Umul8_16@product
  2775  0E9C  01F5               	clrf	__Umul8_16@product+1
  2776  0E9D  0870               	movf	__Umul8_16@multiplicand,w
  2777  0E9E  00F2               	movwf	??__Umul8_16
  2778  0E9F  01F3               	clrf	??__Umul8_16+1
  2779  0EA0  0872               	movf	??__Umul8_16,w
  2780  0EA1  00F6               	movwf	__Umul8_16@word_mpld
  2781  0EA2  0873               	movf	??__Umul8_16+1,w
  2782  0EA3  00F7               	movwf	__Umul8_16@word_mpld+1
  2783  0EA4                     l1467:	
  2784  0EA4  1C78               	btfss	__Umul8_16@multiplier,0
  2785  0EA5  2EAC               	goto	l701
  2786  0EA6  0876               	movf	__Umul8_16@word_mpld,w
  2787  0EA7  07F4               	addwf	__Umul8_16@product,f
  2788  0EA8  1803               	skipnc
  2789  0EA9  0AF5               	incf	__Umul8_16@product+1,f
  2790  0EAA  0877               	movf	__Umul8_16@word_mpld+1,w
  2791  0EAB  07F5               	addwf	__Umul8_16@product+1,f
  2792  0EAC                     l701:	
  2793  0EAC  3001               	movlw	1
  2794  0EAD                     u1405:	
  2795  0EAD  1003               	clrc
  2796  0EAE  0DF6               	rlf	__Umul8_16@word_mpld,f
  2797  0EAF  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  2798  0EB0  3EFF               	addlw	-1
  2799  0EB1  1D03               	skipz
  2800  0EB2  2EAD               	goto	u1405
  2801  0EB3  1003               	clrc
  2802  0EB4  0CF8               	rrf	__Umul8_16@multiplier,f
  2803  0EB5  0878               	movf	__Umul8_16@multiplier,w
  2804  0EB6  1D03               	btfss	3,2
  2805  0EB7  2EA4               	goto	l1467
  2806  0EB8  0875               	movf	__Umul8_16@product+1,w
  2807  0EB9  00F1               	movwf	?__Umul8_16+1
  2808  0EBA  0874               	movf	__Umul8_16@product,w
  2809  0EBB  00F0               	movwf	?__Umul8_16
  2810  0EBC  0008               	return
  2811  0EBD                     __end_of__Umul8_16:	
  2812                           
  2813                           	psect	text9
  2814  033D                     __ptext9:	
  2815 ;; *************** function ___fldiv *****************
  2816 ;; Defined at:
  2817 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;  a               4    0[BANK0 ] unsigned int 
  2820 ;;  b               4    4[BANK0 ] unsigned int 
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;  grs             4   20[BANK0 ] unsigned long 
  2823 ;;  rem             4   13[BANK0 ] unsigned long 
  2824 ;;  new_exp         2   18[BANK0 ] int 
  2825 ;;  aexp            1   25[BANK0 ] unsigned char 
  2826 ;;  bexp            1   24[BANK0 ] unsigned char 
  2827 ;;  sign            1   17[BANK0 ] unsigned char 
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  4    0[BANK0 ] unsigned char 
  2830 ;; Registers used:
  2831 ;;		wreg, status,2, status,0, btemp+1
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2837 ;;      Params:         0       8       0       0       0
  2838 ;;      Locals:         0      13       0       0       0
  2839 ;;      Temps:          0       5       0       0       0
  2840 ;;      Totals:         0      26       0       0       0
  2841 ;;Total ram usage:       26 bytes
  2842 ;; Hardware stack levels used:    1
  2843 ;; This function calls:
  2844 ;;		Nothing
  2845 ;; This function is called by:
  2846 ;;		_pwmSetDuty1
  2847 ;;		_pwmSetDuty2
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851                           
  2852                           ;psect for function ___fldiv
  2853  033D                     ___fldiv:	
  2854                           
  2855                           ;incstack = 0
  2856                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  2857  033D  1283               	bcf	3,5	;RP0=0, select bank0
  2858  033E  1303               	bcf	3,6	;RP1=0, select bank0
  2859  033F  0827               	movf	___fldiv@b+3,w
  2860  0340  3980               	andlw	128
  2861  0341  00A8               	movwf	??___fldiv
  2862  0342  0828               	movf	??___fldiv,w
  2863  0343  00B1               	movwf	___fldiv@sign
  2864  0344  0827               	movf	___fldiv@b+3,w
  2865  0345  00A8               	movwf	??___fldiv
  2866  0346  0728               	addwf	??___fldiv,w
  2867  0347  00A9               	movwf	??___fldiv+1
  2868  0348  0829               	movf	??___fldiv+1,w
  2869  0349  00B8               	movwf	___fldiv@bexp
  2870  034A  1BA6               	btfsc	___fldiv@b+2,7
  2871  034B  1438               	bsf	___fldiv@bexp,0
  2872  034C  0838               	movf	___fldiv@bexp,w
  2873  034D  1903               	btfsc	3,2
  2874  034E  2B5D               	goto	l1623
  2875  034F  0A38               	incf	___fldiv@bexp,w
  2876  0350  1D03               	btfss	3,2
  2877  0351  2B5A               	goto	l1619
  2878  0352  3000               	movlw	0
  2879  0353  00A7               	movwf	___fldiv@b+3
  2880  0354  3000               	movlw	0
  2881  0355  00A6               	movwf	___fldiv@b+2
  2882  0356  3000               	movlw	0
  2883  0357  00A5               	movwf	___fldiv@b+1
  2884  0358  3000               	movlw	0
  2885  0359  00A4               	movwf	___fldiv@b
  2886  035A                     l1619:	
  2887  035A  17A6               	bsf	___fldiv@b+2,7
  2888  035B  01A7               	clrf	___fldiv@b+3
  2889  035C  2B65               	goto	l1625
  2890  035D                     l1623:	
  2891  035D  3000               	movlw	0
  2892  035E  00A7               	movwf	___fldiv@b+3
  2893  035F  3000               	movlw	0
  2894  0360  00A6               	movwf	___fldiv@b+2
  2895  0361  3000               	movlw	0
  2896  0362  00A5               	movwf	___fldiv@b+1
  2897  0363  3000               	movlw	0
  2898  0364  00A4               	movwf	___fldiv@b
  2899  0365                     l1625:	
  2900  0365  0823               	movf	___fldiv@a+3,w
  2901  0366  3980               	andlw	128
  2902  0367  00A8               	movwf	??___fldiv
  2903  0368  0828               	movf	??___fldiv,w
  2904  0369  06B1               	xorwf	___fldiv@sign,f
  2905  036A  0823               	movf	___fldiv@a+3,w
  2906  036B  00A8               	movwf	??___fldiv
  2907  036C  0728               	addwf	??___fldiv,w
  2908  036D  00A9               	movwf	??___fldiv+1
  2909  036E  0829               	movf	??___fldiv+1,w
  2910  036F  00B9               	movwf	___fldiv@aexp
  2911  0370  1BA2               	btfsc	___fldiv@a+2,7
  2912  0371  1439               	bsf	___fldiv@aexp,0
  2913  0372  0839               	movf	___fldiv@aexp,w
  2914  0373  1903               	btfsc	3,2
  2915  0374  2B83               	goto	l1643
  2916  0375  0A39               	incf	___fldiv@aexp,w
  2917  0376  1D03               	btfss	3,2
  2918  0377  2B80               	goto	l1639
  2919  0378  3000               	movlw	0
  2920  0379  00A3               	movwf	___fldiv@a+3
  2921  037A  3000               	movlw	0
  2922  037B  00A2               	movwf	___fldiv@a+2
  2923  037C  3000               	movlw	0
  2924  037D  00A1               	movwf	___fldiv@a+1
  2925  037E  3000               	movlw	0
  2926  037F  00A0               	movwf	___fldiv@a
  2927  0380                     l1639:	
  2928  0380  17A2               	bsf	___fldiv@a+2,7
  2929  0381  01A3               	clrf	___fldiv@a+3
  2930  0382  2B8B               	goto	l604
  2931  0383                     l1643:	
  2932  0383  3000               	movlw	0
  2933  0384  00A3               	movwf	___fldiv@a+3
  2934  0385  3000               	movlw	0
  2935  0386  00A2               	movwf	___fldiv@a+2
  2936  0387  3000               	movlw	0
  2937  0388  00A1               	movwf	___fldiv@a+1
  2938  0389  3000               	movlw	0
  2939  038A  00A0               	movwf	___fldiv@a
  2940  038B                     l604:	
  2941  038B  0823               	movf	___fldiv@a+3,w
  2942  038C  0422               	iorwf	___fldiv@a+2,w
  2943  038D  0421               	iorwf	___fldiv@a+1,w
  2944  038E  0420               	iorwf	___fldiv@a,w
  2945  038F  1D03               	skipz
  2946  0390  2BAA               	goto	l1653
  2947  0391  3000               	movlw	0
  2948  0392  00A7               	movwf	___fldiv@b+3
  2949  0393  3000               	movlw	0
  2950  0394  00A6               	movwf	___fldiv@b+2
  2951  0395  3000               	movlw	0
  2952  0396  00A5               	movwf	___fldiv@b+1
  2953  0397  3000               	movlw	0
  2954  0398  00A4               	movwf	___fldiv@b
  2955  0399  3080               	movlw	128
  2956  039A  04A6               	iorwf	___fldiv@b+2,f
  2957  039B  307F               	movlw	127
  2958  039C  04A7               	iorwf	___fldiv@b+3,f
  2959  039D                     L1:	
  2960  039D  0831               	movf	___fldiv@sign,w
  2961  039E  00A8               	movwf	??___fldiv
  2962  039F  0828               	movf	??___fldiv,w
  2963  03A0  04A7               	iorwf	___fldiv@b+3,f
  2964  03A1  0827               	movf	___fldiv@b+3,w
  2965  03A2  00A3               	movwf	?___fldiv+3
  2966  03A3  0826               	movf	___fldiv@b+2,w
  2967  03A4  00A2               	movwf	?___fldiv+2
  2968  03A5  0825               	movf	___fldiv@b+1,w
  2969  03A6  00A1               	movwf	?___fldiv+1
  2970  03A7  0824               	movf	___fldiv@b,w
  2971  03A8  00A0               	movwf	?___fldiv
  2972  03A9  0008               	return
  2973  03AA                     l1653:	
  2974  03AA  0838               	movf	___fldiv@bexp,w
  2975  03AB  1D03               	btfss	3,2
  2976  03AC  2BB6               	goto	l1659
  2977  03AD  3000               	movlw	0
  2978  03AE  00A3               	movwf	?___fldiv+3
  2979  03AF  3000               	movlw	0
  2980  03B0  00A2               	movwf	?___fldiv+2
  2981  03B1  3000               	movlw	0
  2982  03B2  00A1               	movwf	?___fldiv+1
  2983  03B3  3000               	movlw	0
  2984  03B4  00A0               	movwf	?___fldiv
  2985  03B5  0008               	return
  2986  03B6                     l1659:	
  2987  03B6  0838               	movf	___fldiv@bexp,w
  2988  03B7  00A8               	movwf	??___fldiv
  2989  03B8  01A9               	clrf	??___fldiv+1
  2990  03B9  0829               	movf	??___fldiv+1,w
  2991  03BA  00AB               	movwf	??___fldiv+3
  2992  03BB  0839               	movf	___fldiv@aexp,w
  2993  03BC  0228               	subwf	??___fldiv,w
  2994  03BD  00AA               	movwf	??___fldiv+2
  2995  03BE  1C03               	skipc
  2996  03BF  03AB               	decf	??___fldiv+3,f
  2997  03C0  082A               	movf	??___fldiv+2,w
  2998  03C1  3E7F               	addlw	127
  2999  03C2  00B2               	movwf	___fldiv@new_exp
  3000  03C3  082B               	movf	??___fldiv+3,w
  3001  03C4  1803               	skipnc
  3002  03C5  3E01               	addlw	1
  3003  03C6  3E00               	addlw	0
  3004  03C7  00B3               	movwf	___fldiv@new_exp+1
  3005  03C8  0827               	movf	___fldiv@b+3,w
  3006  03C9  00B0               	movwf	___fldiv@rem+3
  3007  03CA  0826               	movf	___fldiv@b+2,w
  3008  03CB  00AF               	movwf	___fldiv@rem+2
  3009  03CC  0825               	movf	___fldiv@b+1,w
  3010  03CD  00AE               	movwf	___fldiv@rem+1
  3011  03CE  0824               	movf	___fldiv@b,w
  3012  03CF  00AD               	movwf	___fldiv@rem
  3013  03D0  3000               	movlw	0
  3014  03D1  00A7               	movwf	___fldiv@b+3
  3015  03D2  3000               	movlw	0
  3016  03D3  00A6               	movwf	___fldiv@b+2
  3017  03D4  3000               	movlw	0
  3018  03D5  00A5               	movwf	___fldiv@b+1
  3019  03D6  3000               	movlw	0
  3020  03D7  00A4               	movwf	___fldiv@b
  3021  03D8  3000               	movlw	0
  3022  03D9  00B7               	movwf	___fldiv@grs+3
  3023  03DA  3000               	movlw	0
  3024  03DB  00B6               	movwf	___fldiv@grs+2
  3025  03DC  3000               	movlw	0
  3026  03DD  00B5               	movwf	___fldiv@grs+1
  3027  03DE  3000               	movlw	0
  3028  03DF  00B4               	movwf	___fldiv@grs
  3029  03E0  01B9               	clrf	___fldiv@aexp
  3030  03E1                     l1687:	
  3031  03E1  301A               	movlw	26
  3032  03E2  0239               	subwf	___fldiv@aexp,w
  3033  03E3  1803               	btfsc	3,0
  3034  03E4  2C29               	goto	l1689
  3035  03E5  0839               	movf	___fldiv@aexp,w
  3036  03E6  1903               	btfsc	3,2
  3037  03E7  2C05               	goto	l1679
  3038  03E8  3001               	movlw	1
  3039  03E9  00A8               	movwf	??___fldiv
  3040  03EA                     u1775:	
  3041  03EA  1003               	clrc
  3042  03EB  0DAD               	rlf	___fldiv@rem,f
  3043  03EC  0DAE               	rlf	___fldiv@rem+1,f
  3044  03ED  0DAF               	rlf	___fldiv@rem+2,f
  3045  03EE  0DB0               	rlf	___fldiv@rem+3,f
  3046  03EF  0BA8               	decfsz	??___fldiv,f
  3047  03F0  2BEA               	goto	u1775
  3048  03F1  3001               	movlw	1
  3049  03F2  00A8               	movwf	??___fldiv
  3050  03F3                     u1785:	
  3051  03F3  1003               	clrc
  3052  03F4  0DA4               	rlf	___fldiv@b,f
  3053  03F5  0DA5               	rlf	___fldiv@b+1,f
  3054  03F6  0DA6               	rlf	___fldiv@b+2,f
  3055  03F7  0DA7               	rlf	___fldiv@b+3,f
  3056  03F8  0BA8               	decfsz	??___fldiv,f
  3057  03F9  2BF3               	goto	u1785
  3058  03FA  1BB7               	btfsc	___fldiv@grs+3,7
  3059  03FB  1424               	bsf	___fldiv@b,0
  3060  03FC  3001               	movlw	1
  3061  03FD  00A8               	movwf	??___fldiv
  3062  03FE                     u1805:	
  3063  03FE  1003               	clrc
  3064  03FF  0DB4               	rlf	___fldiv@grs,f
  3065  0400  0DB5               	rlf	___fldiv@grs+1,f
  3066  0401  0DB6               	rlf	___fldiv@grs+2,f
  3067  0402  0DB7               	rlf	___fldiv@grs+3,f
  3068  0403  0BA8               	decfsz	??___fldiv,f
  3069  0404  2BFE               	goto	u1805
  3070  0405                     l1679:	
  3071  0405  0823               	movf	___fldiv@a+3,w
  3072  0406  0230               	subwf	___fldiv@rem+3,w
  3073  0407  1D03               	skipz
  3074  0408  2C13               	goto	u1815
  3075  0409  0822               	movf	___fldiv@a+2,w
  3076  040A  022F               	subwf	___fldiv@rem+2,w
  3077  040B  1D03               	skipz
  3078  040C  2C13               	goto	u1815
  3079  040D  0821               	movf	___fldiv@a+1,w
  3080  040E  022E               	subwf	___fldiv@rem+1,w
  3081  040F  1D03               	skipz
  3082  0410  2C13               	goto	u1815
  3083  0411  0820               	movf	___fldiv@a,w
  3084  0412  022D               	subwf	___fldiv@rem,w
  3085  0413                     u1815:	
  3086  0413  1C03               	skipc
  3087  0414  2C24               	goto	l1685
  3088  0415  1737               	bsf	___fldiv@grs+3,6
  3089  0416  0820               	movf	___fldiv@a,w
  3090  0417  02AD               	subwf	___fldiv@rem,f
  3091  0418  0821               	movf	___fldiv@a+1,w
  3092  0419  1C03               	skipc
  3093  041A  0F21               	incfsz	___fldiv@a+1,w
  3094  041B  02AE               	subwf	___fldiv@rem+1,f
  3095  041C  0822               	movf	___fldiv@a+2,w
  3096  041D  1C03               	skipc
  3097  041E  0F22               	incfsz	___fldiv@a+2,w
  3098  041F  02AF               	subwf	___fldiv@rem+2,f
  3099  0420  0823               	movf	___fldiv@a+3,w
  3100  0421  1C03               	skipc
  3101  0422  0F23               	incfsz	___fldiv@a+3,w
  3102  0423  02B0               	subwf	___fldiv@rem+3,f
  3103  0424                     l1685:	
  3104  0424  3001               	movlw	1
  3105  0425  00A8               	movwf	??___fldiv
  3106  0426  0828               	movf	??___fldiv,w
  3107  0427  07B9               	addwf	___fldiv@aexp,f
  3108  0428  2BE1               	goto	l1687
  3109  0429                     l1689:	
  3110  0429  0830               	movf	___fldiv@rem+3,w
  3111  042A  042F               	iorwf	___fldiv@rem+2,w
  3112  042B  042E               	iorwf	___fldiv@rem+1,w
  3113  042C  042D               	iorwf	___fldiv@rem,w
  3114  042D  1D03               	btfss	3,2
  3115  042E  1434               	bsf	___fldiv@grs,0
  3116  042F                     l1703:	
  3117  042F  1BA6               	btfsc	___fldiv@b+2,7
  3118  0430  2C4C               	goto	l1705
  3119  0431  3001               	movlw	1
  3120  0432  00A8               	movwf	??___fldiv
  3121  0433                     u1845:	
  3122  0433  1003               	clrc
  3123  0434  0DA4               	rlf	___fldiv@b,f
  3124  0435  0DA5               	rlf	___fldiv@b+1,f
  3125  0436  0DA6               	rlf	___fldiv@b+2,f
  3126  0437  0DA7               	rlf	___fldiv@b+3,f
  3127  0438  0BA8               	decfsz	??___fldiv,f
  3128  0439  2C33               	goto	u1845
  3129  043A  1BB7               	btfsc	___fldiv@grs+3,7
  3130  043B  1424               	bsf	___fldiv@b,0
  3131  043C  3001               	movlw	1
  3132  043D  00A8               	movwf	??___fldiv
  3133  043E                     u1865:	
  3134  043E  1003               	clrc
  3135  043F  0DB4               	rlf	___fldiv@grs,f
  3136  0440  0DB5               	rlf	___fldiv@grs+1,f
  3137  0441  0DB6               	rlf	___fldiv@grs+2,f
  3138  0442  0DB7               	rlf	___fldiv@grs+3,f
  3139  0443  0BA8               	decfsz	??___fldiv,f
  3140  0444  2C3E               	goto	u1865
  3141  0445  30FF               	movlw	255
  3142  0446  07B2               	addwf	___fldiv@new_exp,f
  3143  0447  1803               	skipnc
  3144  0448  0AB3               	incf	___fldiv@new_exp+1,f
  3145  0449  30FF               	movlw	255
  3146  044A  07B3               	addwf	___fldiv@new_exp+1,f
  3147  044B  2C2F               	goto	l1703
  3148  044C                     l1705:	
  3149  044C  01B9               	clrf	___fldiv@aexp
  3150  044D  1FB7               	btfss	___fldiv@grs+3,7
  3151  044E  2C65               	goto	l1715
  3152  044F  30FF               	movlw	255
  3153  0450  0534               	andwf	___fldiv@grs,w
  3154  0451  00A8               	movwf	??___fldiv
  3155  0452  30FF               	movlw	255
  3156  0453  0535               	andwf	___fldiv@grs+1,w
  3157  0454  00A9               	movwf	??___fldiv+1
  3158  0455  30FF               	movlw	255
  3159  0456  0536               	andwf	___fldiv@grs+2,w
  3160  0457  00AA               	movwf	??___fldiv+2
  3161  0458  307F               	movlw	127
  3162  0459  0537               	andwf	___fldiv@grs+3,w
  3163  045A  00AB               	movwf	??___fldiv+3
  3164  045B  082B               	movf	??___fldiv+3,w
  3165  045C  042A               	iorwf	??___fldiv+2,w
  3166  045D  0429               	iorwf	??___fldiv+1,w
  3167  045E  0428               	iorwf	??___fldiv,w
  3168  045F  1903               	skipnz
  3169  0460  1824               	btfsc	___fldiv@b,0
  3170  0461  2C63               	goto	l1711
  3171  0462  2C65               	goto	l1715
  3172  0463                     l1711:	
  3173  0463  01B9               	clrf	___fldiv@aexp
  3174  0464  0AB9               	incf	___fldiv@aexp,f
  3175  0465                     l1715:	
  3176  0465  0839               	movf	___fldiv@aexp,w
  3177  0466  1903               	btfsc	3,2
  3178  0467  2C97               	goto	l1725
  3179  0468  3001               	movlw	1
  3180  0469  07A4               	addwf	___fldiv@b,f
  3181  046A  3000               	movlw	0
  3182  046B  1803               	skipnc
  3183  046C  3001               	movlw	1
  3184  046D  07A5               	addwf	___fldiv@b+1,f
  3185  046E  3000               	movlw	0
  3186  046F  1803               	skipnc
  3187  0470  3001               	movlw	1
  3188  0471  07A6               	addwf	___fldiv@b+2,f
  3189  0472  3000               	movlw	0
  3190  0473  1803               	skipnc
  3191  0474  3001               	movlw	1
  3192  0475  07A7               	addwf	___fldiv@b+3,f
  3193  0476  1C27               	btfss	___fldiv@b+3,0
  3194  0477  2C97               	goto	l1725
  3195  0478  0824               	movf	___fldiv@b,w
  3196  0479  00A8               	movwf	??___fldiv
  3197  047A  0825               	movf	___fldiv@b+1,w
  3198  047B  00A9               	movwf	??___fldiv+1
  3199  047C  0826               	movf	___fldiv@b+2,w
  3200  047D  00AA               	movwf	??___fldiv+2
  3201  047E  0827               	movf	___fldiv@b+3,w
  3202  047F  00AB               	movwf	??___fldiv+3
  3203  0480  3001               	movlw	1
  3204  0481  00AC               	movwf	??___fldiv+4
  3205  0482                     u1935:	
  3206  0482  0D2B               	rlf	??___fldiv+3,w
  3207  0483  0CAB               	rrf	??___fldiv+3,f
  3208  0484  0CAA               	rrf	??___fldiv+2,f
  3209  0485  0CA9               	rrf	??___fldiv+1,f
  3210  0486  0CA8               	rrf	??___fldiv,f
  3211  0487  0BAC               	decfsz	??___fldiv+4,f
  3212  0488  2C82               	goto	u1935
  3213  0489  082B               	movf	??___fldiv+3,w
  3214  048A  00A7               	movwf	___fldiv@b+3
  3215  048B  082A               	movf	??___fldiv+2,w
  3216  048C  00A6               	movwf	___fldiv@b+2
  3217  048D  0829               	movf	??___fldiv+1,w
  3218  048E  00A5               	movwf	___fldiv@b+1
  3219  048F  0828               	movf	??___fldiv,w
  3220  0490  00A4               	movwf	___fldiv@b
  3221  0491  3001               	movlw	1
  3222  0492  07B2               	addwf	___fldiv@new_exp,f
  3223  0493  1803               	skipnc
  3224  0494  0AB3               	incf	___fldiv@new_exp+1,f
  3225  0495  3000               	movlw	0
  3226  0496  07B3               	addwf	___fldiv@new_exp+1,f
  3227  0497                     l1725:	
  3228  0497  0833               	movf	___fldiv@new_exp+1,w
  3229  0498  3A80               	xorlw	128
  3230  0499  00FF               	movwf	127
  3231  049A  3080               	movlw	128
  3232  049B  027F               	subwf	127,w
  3233  049C  1D03               	skipz
  3234  049D  2CA0               	goto	u1945
  3235  049E  30FF               	movlw	255
  3236  049F  0232               	subwf	___fldiv@new_exp,w
  3237  04A0                     u1945:	
  3238  04A0  1C03               	skipc
  3239  04A1  2CB0               	goto	l1729
  3240  04A2  30FF               	movlw	255
  3241  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  3242  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  3243  04A5  00B2               	movwf	___fldiv@new_exp
  3244  04A6  3000               	movlw	0
  3245  04A7  00B3               	movwf	___fldiv@new_exp+1
  3246  04A8  3000               	movlw	0
  3247  04A9  00A7               	movwf	___fldiv@b+3
  3248  04AA  3000               	movlw	0
  3249  04AB  00A6               	movwf	___fldiv@b+2
  3250  04AC  3000               	movlw	0
  3251  04AD  00A5               	movwf	___fldiv@b+1
  3252  04AE  3000               	movlw	0
  3253  04AF  00A4               	movwf	___fldiv@b
  3254  04B0                     l1729:	
  3255  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  3256  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  3257  04B2  0833               	movf	___fldiv@new_exp+1,w
  3258  04B3  3A80               	xorlw	128
  3259  04B4  00FF               	movwf	127
  3260  04B5  3080               	movlw	128
  3261  04B6  027F               	subwf	127,w
  3262  04B7  1D03               	skipz
  3263  04B8  2CBB               	goto	u1955
  3264  04B9  3001               	movlw	1
  3265  04BA  0232               	subwf	___fldiv@new_exp,w
  3266  04BB                     u1955:	
  3267  04BB  1803               	skipnc
  3268  04BC  2CCA               	goto	l626
  3269  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  3270  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  3271  04BF  01B2               	clrf	___fldiv@new_exp
  3272  04C0  01B3               	clrf	___fldiv@new_exp+1
  3273  04C1  3000               	movlw	0
  3274  04C2  00A7               	movwf	___fldiv@b+3
  3275  04C3  3000               	movlw	0
  3276  04C4  00A6               	movwf	___fldiv@b+2
  3277  04C5  3000               	movlw	0
  3278  04C6  00A5               	movwf	___fldiv@b+1
  3279  04C7  3000               	movlw	0
  3280  04C8  00A4               	movwf	___fldiv@b
  3281  04C9  01B1               	clrf	___fldiv@sign
  3282  04CA                     l626:	
  3283  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  3284  04CB  1303               	bcf	3,6	;RP1=0, select bank0
  3285  04CC  0832               	movf	___fldiv@new_exp,w
  3286  04CD  00A8               	movwf	??___fldiv
  3287  04CE  0828               	movf	??___fldiv,w
  3288  04CF  00B8               	movwf	___fldiv@bexp
  3289  04D0  1C38               	btfss	___fldiv@bexp,0
  3290  04D1  2CD4               	goto	l1741
  3291  04D2  17A6               	bsf	___fldiv@b+2,7
  3292  04D3  2CD8               	goto	l628
  3293  04D4                     l1741:	
  3294  04D4  307F               	movlw	127
  3295  04D5  00A8               	movwf	??___fldiv
  3296  04D6  0828               	movf	??___fldiv,w
  3297  04D7  05A6               	andwf	___fldiv@b+2,f
  3298  04D8                     l628:	
  3299  04D8  0838               	movf	___fldiv@bexp,w
  3300  04D9  00A8               	movwf	??___fldiv
  3301  04DA  1003               	clrc
  3302  04DB  0C28               	rrf	??___fldiv,w
  3303  04DC  00A9               	movwf	??___fldiv+1
  3304  04DD  0829               	movf	??___fldiv+1,w
  3305  04DE  00A7               	movwf	___fldiv@b+3
  3306  04DF  2B9D               	goto	L1
  3307  04E0                     __end_of___fldiv:	
  3308                           
  3309                           	psect	text10
  3310  0005                     __ptext10:	
  3311 ;; *************** function _lcdSetCursor *****************
  3312 ;; Defined at:
  3313 ;;		line 56 in file "./lcd.h"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;  a               1    wreg     unsigned char 
  3316 ;;  b               1    4[COMMON] unsigned char 
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;  a               1    7[COMMON] unsigned char 
  3319 ;;  temp            1   10[COMMON] unsigned char 
  3320 ;;  y               1    9[COMMON] unsigned char 
  3321 ;;  z               1    8[COMMON] unsigned char 
  3322 ;; Return value:  Size  Location     Type
  3323 ;;                  1    wreg      void 
  3324 ;; Registers used:
  3325 ;;		wreg, status,2, status,0, pclath, cstack
  3326 ;; Tracked objects:
  3327 ;;		On entry : 0/0
  3328 ;;		On exit  : 0/0
  3329 ;;		Unchanged: 0/0
  3330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3331 ;;      Params:         1       0       0       0       0
  3332 ;;      Locals:         4       0       0       0       0
  3333 ;;      Temps:          2       0       0       0       0
  3334 ;;      Totals:         7       0       0       0       0
  3335 ;;Total ram usage:        7 bytes
  3336 ;; Hardware stack levels used:    1
  3337 ;; Hardware stack levels required when called:    2
  3338 ;; This function calls:
  3339 ;;		_lcdCmd
  3340 ;; This function is called by:
  3341 ;;		_main
  3342 ;; This function uses a non-reentrant model
  3343 ;;
  3344                           
  3345                           
  3346                           ;psect for function _lcdSetCursor
  3347  0005                     _lcdSetCursor:	
  3348                           
  3349                           ;incstack = 0
  3350                           ; Regs used in _lcdSetCursor: [wreg+status,2+status,0+pclath+cstack]
  3351                           ;lcdSetCursor@a stored from wreg
  3352  0005  00F7               	movwf	lcdSetCursor@a
  3353                           
  3354                           ;./lcd.h: 57:     char temp, z, y;;./lcd.h: 58:     if (a == 1) {
  3355  0006  0377               	decf	lcdSetCursor@a,w
  3356  0007  1D03               	btfss	3,2
  3357  0008  282A               	goto	l1943
  3358                           
  3359                           ;./lcd.h: 59:         temp = 0x80 + b - 1;
  3360  0009  0874               	movf	lcdSetCursor@b,w
  3361  000A  3E7F               	addlw	127
  3362  000B  00F5               	movwf	??_lcdSetCursor
  3363  000C  0875               	movf	??_lcdSetCursor,w
  3364  000D  00FA               	movwf	lcdSetCursor@temp
  3365                           
  3366                           ;./lcd.h: 60:         z = temp >> 4;
  3367  000E  087A               	movf	lcdSetCursor@temp,w
  3368  000F  00F5               	movwf	??_lcdSetCursor
  3369  0010  3004               	movlw	4
  3370  0011                     u2495:	
  3371  0011  1003               	clrc
  3372  0012  0CF5               	rrf	??_lcdSetCursor,f
  3373  0013  3EFF               	addlw	-1
  3374  0014  1D03               	skipz
  3375  0015  2811               	goto	u2495
  3376  0016  0875               	movf	??_lcdSetCursor,w
  3377  0017  00F6               	movwf	??_lcdSetCursor+1
  3378  0018  0876               	movf	??_lcdSetCursor+1,w
  3379  0019  00F8               	movwf	lcdSetCursor@z
  3380                           
  3381                           ;./lcd.h: 61:         y = temp & 0x0F;
  3382  001A  087A               	movf	lcdSetCursor@temp,w
  3383  001B  390F               	andlw	15
  3384  001C  00F5               	movwf	??_lcdSetCursor
  3385  001D  0875               	movf	??_lcdSetCursor,w
  3386  001E  00F9               	movwf	lcdSetCursor@y
  3387                           
  3388                           ;./lcd.h: 62:         lcdCmd(z);
  3389  001F  0878               	movf	lcdSetCursor@z,w
  3390  0020  120A  158A  2641  120A  118A  	fcall	_lcdCmd
  3391                           
  3392                           ;./lcd.h: 63:         lcdCmd(y);
  3393  0025  0879               	movf	lcdSetCursor@y,w
  3394  0026  120A  158A  2641   	fcall	_lcdCmd
  3395                           
  3396                           ;./lcd.h: 64:     } else if (a == 2) {
  3397  0029  0008               	return
  3398  002A                     l1943:	
  3399  002A  3002               	movlw	2
  3400  002B  0677               	xorwf	lcdSetCursor@a,w
  3401  002C  1D03               	btfss	3,2
  3402  002D  0008               	return
  3403                           
  3404                           ;./lcd.h: 65:         temp = 0xC0 + b - 1;
  3405  002E  0874               	movf	lcdSetCursor@b,w
  3406  002F  3EBF               	addlw	191
  3407  0030  00F5               	movwf	??_lcdSetCursor
  3408  0031  0875               	movf	??_lcdSetCursor,w
  3409  0032  00FA               	movwf	lcdSetCursor@temp
  3410                           
  3411                           ;./lcd.h: 66:         z = temp >> 4;
  3412  0033  087A               	movf	lcdSetCursor@temp,w
  3413  0034  00F5               	movwf	??_lcdSetCursor
  3414  0035  3004               	movlw	4
  3415  0036                     u2515:	
  3416  0036  1003               	clrc
  3417  0037  0CF5               	rrf	??_lcdSetCursor,f
  3418  0038  3EFF               	addlw	-1
  3419  0039  1D03               	skipz
  3420  003A  2836               	goto	u2515
  3421  003B  0875               	movf	??_lcdSetCursor,w
  3422  003C  00F6               	movwf	??_lcdSetCursor+1
  3423  003D  0876               	movf	??_lcdSetCursor+1,w
  3424  003E  00F8               	movwf	lcdSetCursor@z
  3425                           
  3426                           ;./lcd.h: 67:         y = temp & 0x0F;
  3427  003F  087A               	movf	lcdSetCursor@temp,w
  3428  0040  390F               	andlw	15
  3429  0041  00F5               	movwf	??_lcdSetCursor
  3430  0042  0875               	movf	??_lcdSetCursor,w
  3431  0043  00F9               	movwf	lcdSetCursor@y
  3432                           
  3433                           ;./lcd.h: 68:         lcdCmd(z);
  3434  0044  0878               	movf	lcdSetCursor@z,w
  3435  0045  120A  158A  2641  120A  118A  	fcall	_lcdCmd
  3436                           
  3437                           ;./lcd.h: 69:         lcdCmd(y);
  3438  004A  0879               	movf	lcdSetCursor@y,w
  3439  004B  120A  158A  2641   	fcall	_lcdCmd
  3440  004E  0008               	return
  3441  004F                     __end_of_lcdSetCursor:	
  3442                           
  3443                           	psect	text11
  3444  0F62                     __ptext11:	
  3445 ;; *************** function _lcdPrint *****************
  3446 ;; Defined at:
  3447 ;;		line 108 in file "./lcd.h"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;  a               2    5[COMMON] PTR unsigned char 
  3450 ;;		 -> mensaje(16), STR_2(7), STR_1(13), 
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;  i               2   10[COMMON] int 
  3453 ;; Return value:  Size  Location     Type
  3454 ;;                  1    wreg      void 
  3455 ;; Registers used:
  3456 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3457 ;; Tracked objects:
  3458 ;;		On entry : 0/0
  3459 ;;		On exit  : 0/0
  3460 ;;		Unchanged: 0/0
  3461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3462 ;;      Params:         2       0       0       0       0
  3463 ;;      Locals:         2       0       0       0       0
  3464 ;;      Temps:          3       0       0       0       0
  3465 ;;      Totals:         7       0       0       0       0
  3466 ;;Total ram usage:        7 bytes
  3467 ;; Hardware stack levels used:    1
  3468 ;; Hardware stack levels required when called:    2
  3469 ;; This function calls:
  3470 ;;		_lcdWriteChar
  3471 ;; This function is called by:
  3472 ;;		_main
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           
  3477                           ;psect for function _lcdPrint
  3478  0F62                     _lcdPrint:	
  3479                           
  3480                           ;./lcd.h: 109:     int i;;./lcd.h: 110:     for (i = 0; a[i] != '\0'; i++)
  3481                           
  3482                           ;incstack = 0
  3483                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3484  0F62  01FA               	clrf	lcdPrint@i
  3485  0F63  01FB               	clrf	lcdPrint@i+1
  3486  0F64                     l1989:	
  3487  0F64  087A               	movf	lcdPrint@i,w
  3488  0F65  0775               	addwf	lcdPrint@a,w
  3489  0F66  00F8               	movwf	??_lcdPrint+1
  3490  0F67  0876               	movf	lcdPrint@a+1,w
  3491  0F68  00F7               	movwf	??_lcdPrint
  3492  0F69  1803               	skipnc
  3493  0F6A  0AF7               	incf	??_lcdPrint,f
  3494  0F6B  1BFA               	btfsc	lcdPrint@i,7
  3495  0F6C  03F7               	decf	??_lcdPrint,f
  3496  0F6D  0877               	movf	??_lcdPrint,w
  3497  0F6E  00F9               	movwf	??_lcdPrint+2
  3498  0F6F  0879               	movf	??_lcdPrint+2,w
  3499  0F70  1283               	bcf	3,5	;RP0=0, select bank0
  3500  0F71  1303               	bcf	3,6	;RP1=0, select bank0
  3501  0F72  00FF               	movwf	127
  3502  0F73  0878               	movf	??_lcdPrint+1,w
  3503  0F74  0084               	movwf	4
  3504  0F75  120A  158A  2000  120A  158A  	fcall	stringtab
  3505  0F7A  3A00               	xorlw	0
  3506  0F7B  1903               	btfsc	3,2
  3507  0F7C  0008               	return
  3508                           
  3509                           ;./lcd.h: 111:         lcdWriteChar(a[i]);
  3510  0F7D  087A               	movf	lcdPrint@i,w
  3511  0F7E  0775               	addwf	lcdPrint@a,w
  3512  0F7F  00F8               	movwf	??_lcdPrint+1
  3513  0F80  0876               	movf	lcdPrint@a+1,w
  3514  0F81  00F7               	movwf	??_lcdPrint
  3515  0F82  1803               	skipnc
  3516  0F83  0AF7               	incf	??_lcdPrint,f
  3517  0F84  1BFA               	btfsc	lcdPrint@i,7
  3518  0F85  03F7               	decf	??_lcdPrint,f
  3519  0F86  0877               	movf	??_lcdPrint,w
  3520  0F87  00F9               	movwf	??_lcdPrint+2
  3521  0F88  0879               	movf	??_lcdPrint+2,w
  3522  0F89  1283               	bcf	3,5	;RP0=0, select bank0
  3523  0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  3524  0F8B  00FF               	movwf	127
  3525  0F8C  0878               	movf	??_lcdPrint+1,w
  3526  0F8D  0084               	movwf	4
  3527  0F8E  120A  158A  2000  120A  158A  	fcall	stringtab
  3528  0F93  120A  158A  26EF  120A  158A  	fcall	_lcdWriteChar
  3529  0F98  3001               	movlw	1
  3530  0F99  07FA               	addwf	lcdPrint@i,f
  3531  0F9A  1803               	skipnc
  3532  0F9B  0AFB               	incf	lcdPrint@i+1,f
  3533  0F9C  3000               	movlw	0
  3534  0F9D  07FB               	addwf	lcdPrint@i+1,f
  3535  0F9E  2F64               	goto	l1989
  3536  0F9F                     __end_of_lcdPrint:	
  3537                           
  3538                           	psect	text12
  3539  0EEF                     __ptext12:	
  3540 ;; *************** function _lcdWriteChar *****************
  3541 ;; Defined at:
  3542 ;;		line 93 in file "./lcd.h"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;  a               1    wreg     unsigned char 
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;  a               1    4[COMMON] unsigned char 
  3547 ;;  y               1    3[COMMON] unsigned char 
  3548 ;;  temp            1    2[COMMON] unsigned char 
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  1    wreg      void 
  3551 ;; Registers used:
  3552 ;;		wreg, status,2, status,0, pclath, cstack
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3558 ;;      Params:         0       0       0       0       0
  3559 ;;      Locals:         3       0       0       0       0
  3560 ;;      Temps:          1       0       0       0       0
  3561 ;;      Totals:         4       0       0       0       0
  3562 ;;Total ram usage:        4 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; Hardware stack levels required when called:    1
  3565 ;; This function calls:
  3566 ;;		_lcdPort
  3567 ;; This function is called by:
  3568 ;;		_lcdPrint
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           
  3573                           ;psect for function _lcdWriteChar
  3574  0EEF                     _lcdWriteChar:	
  3575                           
  3576                           ;incstack = 0
  3577                           ; Regs used in _lcdWriteChar: [wreg+status,2+status,0+pclath+cstack]
  3578                           ;lcdWriteChar@a stored from wreg
  3579  0EEF  00F4               	movwf	lcdWriteChar@a
  3580                           
  3581                           ;./lcd.h: 94:     char temp, y;;./lcd.h: 95:     temp = a & 0x0F;
  3582  0EF0  0874               	movf	lcdWriteChar@a,w
  3583  0EF1  390F               	andlw	15
  3584  0EF2  00F1               	movwf	??_lcdWriteChar
  3585  0EF3  0871               	movf	??_lcdWriteChar,w
  3586  0EF4  00F2               	movwf	lcdWriteChar@temp
  3587                           
  3588                           ;./lcd.h: 96:     y = a & 0xF0;
  3589  0EF5  0874               	movf	lcdWriteChar@a,w
  3590  0EF6  39F0               	andlw	240
  3591  0EF7  00F1               	movwf	??_lcdWriteChar
  3592  0EF8  0871               	movf	??_lcdWriteChar,w
  3593  0EF9  00F3               	movwf	lcdWriteChar@y
  3594                           
  3595                           ;./lcd.h: 97:     RD2 = 1;
  3596  0EFA  1283               	bcf	3,5	;RP0=0, select bank0
  3597  0EFB  1303               	bcf	3,6	;RP1=0, select bank0
  3598  0EFC  1508               	bsf	8,2	;volatile
  3599                           
  3600                           ;./lcd.h: 98:     lcdPort(y >> 4);
  3601  0EFD  0873               	movf	lcdWriteChar@y,w
  3602  0EFE  00F1               	movwf	??_lcdWriteChar
  3603  0EFF  3004               	movlw	4
  3604  0F00                     u1425:	
  3605  0F00  1003               	clrc
  3606  0F01  0CF1               	rrf	??_lcdWriteChar,f
  3607  0F02  3EFF               	addlw	-1
  3608  0F03  1D03               	skipz
  3609  0F04  2F00               	goto	u1425
  3610  0F05  0871               	movf	??_lcdWriteChar,w
  3611  0F06  120A  158A  2627  120A  158A  	fcall	_lcdPort
  3612                           
  3613                           ;./lcd.h: 99:     RD3 = 1;
  3614  0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  3615  0F0C  1303               	bcf	3,6	;RP1=0, select bank0
  3616  0F0D  1588               	bsf	8,3	;volatile
  3617                           
  3618                           ;./lcd.h: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3619  0F0E  300D               	movlw	13
  3620  0F0F  00F1               	movwf	??_lcdWriteChar
  3621  0F10                     u2717:	
  3622  0F10  0BF1               	decfsz	??_lcdWriteChar,f
  3623  0F11  2F10               	goto	u2717
  3624                           
  3625                           ;./lcd.h: 101:     RD3 = 0;
  3626  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  3627  0F13  1303               	bcf	3,6	;RP1=0, select bank0
  3628  0F14  1188               	bcf	8,3	;volatile
  3629                           
  3630                           ;./lcd.h: 102:     lcdPort(temp);
  3631  0F15  0872               	movf	lcdWriteChar@temp,w
  3632  0F16  120A  158A  2627  120A  158A  	fcall	_lcdPort
  3633                           
  3634                           ;./lcd.h: 103:     RD3 = 1;
  3635  0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  3636  0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  3637  0F1D  1588               	bsf	8,3	;volatile
  3638                           
  3639                           ;./lcd.h: 104:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3640  0F1E  300D               	movlw	13
  3641  0F1F  00F1               	movwf	??_lcdWriteChar
  3642  0F20                     u2727:	
  3643  0F20  0BF1               	decfsz	??_lcdWriteChar,f
  3644  0F21  2F20               	goto	u2727
  3645                           
  3646                           ;./lcd.h: 105:     RD3 = 0;
  3647  0F22  1283               	bcf	3,5	;RP0=0, select bank0
  3648  0F23  1303               	bcf	3,6	;RP1=0, select bank0
  3649  0F24  1188               	bcf	8,3	;volatile
  3650  0F25  0008               	return
  3651  0F26                     __end_of_lcdWriteChar:	
  3652                           
  3653                           	psect	text13
  3654  0F9F                     __ptext13:	
  3655 ;; *************** function _lcdInit *****************
  3656 ;; Defined at:
  3657 ;;		line 73 in file "./lcd.h"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;		None
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;		None
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  1    wreg      void 
  3664 ;; Registers used:
  3665 ;;		wreg, status,2, status,0, pclath, cstack
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3671 ;;      Params:         0       0       0       0       0
  3672 ;;      Locals:         0       0       0       0       0
  3673 ;;      Temps:          2       0       0       0       0
  3674 ;;      Totals:         2       0       0       0       0
  3675 ;;Total ram usage:        2 bytes
  3676 ;; Hardware stack levels used:    1
  3677 ;; Hardware stack levels required when called:    2
  3678 ;; This function calls:
  3679 ;;		_lcdCmd
  3680 ;;		_lcdPort
  3681 ;; This function is called by:
  3682 ;;		_main
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           
  3687                           ;psect for function _lcdInit
  3688  0F9F                     _lcdInit:	
  3689                           
  3690                           ;./lcd.h: 74:     TRISD = 0;
  3691                           
  3692                           ;incstack = 0
  3693                           ; Regs used in _lcdInit: [wreg+status,2+status,0+pclath+cstack]
  3694  0F9F  1683               	bsf	3,5	;RP0=1, select bank1
  3695  0FA0  1303               	bcf	3,6	;RP1=0, select bank1
  3696  0FA1  0188               	clrf	8	;volatile
  3697                           
  3698                           ;./lcd.h: 75:     PORTD = 0;
  3699  0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  3700  0FA3  1303               	bcf	3,6	;RP1=0, select bank0
  3701  0FA4  0188               	clrf	8	;volatile
  3702                           
  3703                           ;./lcd.h: 76:     lcdPort(0x00);
  3704  0FA5  3000               	movlw	0
  3705  0FA6  120A  158A  2627  120A  158A  	fcall	_lcdPort
  3706                           
  3707                           ;./lcd.h: 77:     _delay((unsigned long)((20)*(4000000/4000.0)));
  3708  0FAB  301A               	movlw	26
  3709  0FAC  00F5               	movwf	??_lcdInit+1
  3710  0FAD  30F8               	movlw	248
  3711  0FAE  00F4               	movwf	??_lcdInit
  3712  0FAF                     u2737:	
  3713  0FAF  0BF4               	decfsz	??_lcdInit,f
  3714  0FB0  2FAF               	goto	u2737
  3715  0FB1  0BF5               	decfsz	??_lcdInit+1,f
  3716  0FB2  2FAF               	goto	u2737
  3717  0FB3  0000               	nop
  3718                           
  3719                           ;./lcd.h: 78:     lcdCmd(0x03);
  3720  0FB4  3003               	movlw	3
  3721  0FB5  120A  158A  2641  120A  158A  	fcall	_lcdCmd
  3722                           
  3723                           ;./lcd.h: 79:     _delay((unsigned long)((5)*(4000000/4000.0)));
  3724  0FBA  3007               	movlw	7
  3725  0FBB  00F5               	movwf	??_lcdInit+1
  3726  0FBC  307D               	movlw	125
  3727  0FBD  00F4               	movwf	??_lcdInit
  3728  0FBE                     u2747:	
  3729  0FBE  0BF4               	decfsz	??_lcdInit,f
  3730  0FBF  2FBE               	goto	u2747
  3731  0FC0  0BF5               	decfsz	??_lcdInit+1,f
  3732  0FC1  2FBE               	goto	u2747
  3733                           
  3734                           ;./lcd.h: 80:     lcdCmd(0x03);
  3735  0FC2  3003               	movlw	3
  3736  0FC3  120A  158A  2641  120A  158A  	fcall	_lcdCmd
  3737                           
  3738                           ;./lcd.h: 81:     _delay((unsigned long)((11)*(4000000/4000.0)));
  3739  0FC8  300F               	movlw	15
  3740  0FC9  00F5               	movwf	??_lcdInit+1
  3741  0FCA  3047               	movlw	71
  3742  0FCB  00F4               	movwf	??_lcdInit
  3743  0FCC                     u2757:	
  3744  0FCC  0BF4               	decfsz	??_lcdInit,f
  3745  0FCD  2FCC               	goto	u2757
  3746  0FCE  0BF5               	decfsz	??_lcdInit+1,f
  3747  0FCF  2FCC               	goto	u2757
  3748  0FD0  2FD1               	nop2
  3749                           
  3750                           ;./lcd.h: 82:     lcdCmd(0x03);
  3751  0FD1  3003               	movlw	3
  3752  0FD2  120A  158A  2641  120A  158A  	fcall	_lcdCmd
  3753                           
  3754                           ;./lcd.h: 84:     lcdCmd(0x02);
  3755  0FD7  3002               	movlw	2
  3756  0FD8  120A  158A  2641  120A  158A  	fcall	_lcdCmd
  3757                           
  3758                           ;./lcd.h: 85:     lcdCmd(0x02);
  3759  0FDD  3002               	movlw	2
  3760  0FDE  120A  158A  2641  120A  158A  	fcall	_lcdCmd
  3761                           
  3762                           ;./lcd.h: 86:     lcdCmd(0x08);
  3763  0FE3  3008               	movlw	8
  3764  0FE4  120A  158A  2641  120A  158A  	fcall	_lcdCmd
  3765                           
  3766                           ;./lcd.h: 87:     lcdCmd(0x00);
  3767  0FE9  3000               	movlw	0
  3768  0FEA  120A  158A  2641  120A  158A  	fcall	_lcdCmd
  3769                           
  3770                           ;./lcd.h: 88:     lcdCmd(0x0C);
  3771  0FEF  300C               	movlw	12
  3772  0FF0  120A  158A  2641  120A  158A  	fcall	_lcdCmd
  3773                           
  3774                           ;./lcd.h: 89:     lcdCmd(0x00);
  3775  0FF5  3000               	movlw	0
  3776  0FF6  120A  158A  2641  120A  158A  	fcall	_lcdCmd
  3777                           
  3778                           ;./lcd.h: 90:     lcdCmd(0x06);
  3779  0FFB  3006               	movlw	6
  3780  0FFC  120A  158A  2641   	fcall	_lcdCmd
  3781  0FFF  0008               	return
  3782  1000                     __end_of_lcdInit:	
  3783                           
  3784                           	psect	text14
  3785  0DFC                     __ptext14:	
  3786 ;; *************** function _lcdClear *****************
  3787 ;; Defined at:
  3788 ;;		line 51 in file "./lcd.h"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;		None
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;		None
  3793 ;; Return value:  Size  Location     Type
  3794 ;;                  1    wreg      void 
  3795 ;; Registers used:
  3796 ;;		wreg, status,2, status,0, pclath, cstack
  3797 ;; Tracked objects:
  3798 ;;		On entry : 0/0
  3799 ;;		On exit  : 0/0
  3800 ;;		Unchanged: 0/0
  3801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3802 ;;      Params:         0       0       0       0       0
  3803 ;;      Locals:         0       0       0       0       0
  3804 ;;      Temps:          0       0       0       0       0
  3805 ;;      Totals:         0       0       0       0       0
  3806 ;;Total ram usage:        0 bytes
  3807 ;; Hardware stack levels used:    1
  3808 ;; Hardware stack levels required when called:    2
  3809 ;; This function calls:
  3810 ;;		_lcdCmd
  3811 ;; This function is called by:
  3812 ;;		_main
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           
  3817                           ;psect for function _lcdClear
  3818  0DFC                     _lcdClear:	
  3819                           
  3820                           ;./lcd.h: 52:     lcdCmd(0);
  3821                           
  3822                           ;incstack = 0
  3823                           ; Regs used in _lcdClear: [wreg+status,2+status,0+pclath+cstack]
  3824  0DFC  3000               	movlw	0
  3825  0DFD  120A  158A  2641  120A  158A  	fcall	_lcdCmd
  3826                           
  3827                           ;./lcd.h: 53:     lcdCmd(1);
  3828  0E02  3001               	movlw	1
  3829  0E03  120A  158A  2641   	fcall	_lcdCmd
  3830  0E06  0008               	return
  3831  0E07                     __end_of_lcdClear:	
  3832                           
  3833                           	psect	text15
  3834  0E41                     __ptext15:	
  3835 ;; *************** function _lcdCmd *****************
  3836 ;; Defined at:
  3837 ;;		line 43 in file "./lcd.h"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;  a               1    wreg     unsigned char 
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;  a               1    3[COMMON] unsigned char 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      void 
  3844 ;; Registers used:
  3845 ;;		wreg, status,2, status,0, pclath, cstack
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3851 ;;      Params:         0       0       0       0       0
  3852 ;;      Locals:         1       0       0       0       0
  3853 ;;      Temps:          2       0       0       0       0
  3854 ;;      Totals:         3       0       0       0       0
  3855 ;;Total ram usage:        3 bytes
  3856 ;; Hardware stack levels used:    1
  3857 ;; Hardware stack levels required when called:    1
  3858 ;; This function calls:
  3859 ;;		_lcdPort
  3860 ;; This function is called by:
  3861 ;;		_lcdClear
  3862 ;;		_lcdSetCursor
  3863 ;;		_lcdInit
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           
  3867                           
  3868                           ;psect for function _lcdCmd
  3869  0E41                     _lcdCmd:	
  3870                           
  3871                           ;incstack = 0
  3872                           ; Regs used in _lcdCmd: [wreg+status,2+status,0+pclath+cstack]
  3873                           ;lcdCmd@a stored from wreg
  3874  0E41  00F3               	movwf	lcdCmd@a
  3875                           
  3876                           ;./lcd.h: 44:     RD2 = 0;
  3877  0E42  1283               	bcf	3,5	;RP0=0, select bank0
  3878  0E43  1303               	bcf	3,6	;RP1=0, select bank0
  3879  0E44  1108               	bcf	8,2	;volatile
  3880                           
  3881                           ;./lcd.h: 45:     lcdPort(a);
  3882  0E45  0873               	movf	lcdCmd@a,w
  3883  0E46  120A  158A  2627  120A  158A  	fcall	_lcdPort
  3884                           
  3885                           ;./lcd.h: 46:     RD3 = 1;
  3886  0E4B  1283               	bcf	3,5	;RP0=0, select bank0
  3887  0E4C  1303               	bcf	3,6	;RP1=0, select bank0
  3888  0E4D  1588               	bsf	8,3	;volatile
  3889                           
  3890                           ;./lcd.h: 47:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3891  0E4E  3006               	movlw	6
  3892  0E4F  00F2               	movwf	??_lcdCmd+1
  3893  0E50  3030               	movlw	48
  3894  0E51  00F1               	movwf	??_lcdCmd
  3895  0E52                     u2767:	
  3896  0E52  0BF1               	decfsz	??_lcdCmd,f
  3897  0E53  2E52               	goto	u2767
  3898  0E54  0BF2               	decfsz	??_lcdCmd+1,f
  3899  0E55  2E52               	goto	u2767
  3900  0E56  0000               	nop
  3901                           
  3902                           ;./lcd.h: 48:     RD3 = 0;
  3903  0E57  1283               	bcf	3,5	;RP0=0, select bank0
  3904  0E58  1303               	bcf	3,6	;RP1=0, select bank0
  3905  0E59  1188               	bcf	8,3	;volatile
  3906  0E5A  0008               	return
  3907  0E5B                     __end_of_lcdCmd:	
  3908                           
  3909                           	psect	text16
  3910  0E27                     __ptext16:	
  3911 ;; *************** function _lcdPort *****************
  3912 ;; Defined at:
  3913 ;;		line 21 in file "./lcd.h"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  a               1    wreg     unsigned char 
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;  a               1    0[COMMON] unsigned char 
  3918 ;; Return value:  Size  Location     Type
  3919 ;;                  1    wreg      void 
  3920 ;; Registers used:
  3921 ;;		wreg
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3927 ;;      Params:         0       0       0       0       0
  3928 ;;      Locals:         1       0       0       0       0
  3929 ;;      Temps:          0       0       0       0       0
  3930 ;;      Totals:         1       0       0       0       0
  3931 ;;Total ram usage:        1 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; This function calls:
  3934 ;;		Nothing
  3935 ;; This function is called by:
  3936 ;;		_lcdCmd
  3937 ;;		_lcdInit
  3938 ;;		_lcdWriteChar
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           
  3943                           ;psect for function _lcdPort
  3944  0E27                     _lcdPort:	
  3945                           
  3946                           ;incstack = 0
  3947                           ; Regs used in _lcdPort: [wreg]
  3948                           ;lcdPort@a stored from wreg
  3949  0E27  00F0               	movwf	lcdPort@a
  3950                           
  3951                           ;./lcd.h: 22:     if (a & 1)
  3952  0E28  1C70               	btfss	lcdPort@a,0
  3953  0E29  2E2E               	goto	l65
  3954                           
  3955                           ;./lcd.h: 23:         RD4 = 1;
  3956  0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  3957  0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  3958  0E2C  1608               	bsf	8,4	;volatile
  3959  0E2D  2E31               	goto	l66
  3960  0E2E                     l65:	
  3961                           ;./lcd.h: 24:     else
  3962                           
  3963                           
  3964                           ;./lcd.h: 25:         RD4 = 0;
  3965  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  3966  0E2F  1303               	bcf	3,6	;RP1=0, select bank0
  3967  0E30  1208               	bcf	8,4	;volatile
  3968  0E31                     l66:	
  3969                           
  3970                           ;./lcd.h: 27:     if (a & 2)
  3971  0E31  1CF0               	btfss	lcdPort@a,1
  3972  0E32  2E35               	goto	l67
  3973                           
  3974                           ;./lcd.h: 28:         RD5 = 1;
  3975  0E33  1688               	bsf	8,5	;volatile
  3976  0E34  2E36               	goto	l68
  3977  0E35                     l67:	
  3978                           ;./lcd.h: 29:     else
  3979                           
  3980                           
  3981                           ;./lcd.h: 30:         RD5 = 0;
  3982  0E35  1288               	bcf	8,5	;volatile
  3983  0E36                     l68:	
  3984                           
  3985                           ;./lcd.h: 32:     if (a & 4)
  3986  0E36  1D70               	btfss	lcdPort@a,2
  3987  0E37  2E3A               	goto	l69
  3988                           
  3989                           ;./lcd.h: 33:         RD6 = 1;
  3990  0E38  1708               	bsf	8,6	;volatile
  3991  0E39  2E3B               	goto	l70
  3992  0E3A                     l69:	
  3993                           ;./lcd.h: 34:     else
  3994                           
  3995                           
  3996                           ;./lcd.h: 35:         RD6 = 0;
  3997  0E3A  1308               	bcf	8,6	;volatile
  3998  0E3B                     l70:	
  3999                           
  4000                           ;./lcd.h: 37:     if (a & 8)
  4001  0E3B  1DF0               	btfss	lcdPort@a,3
  4002  0E3C  2E3F               	goto	l71
  4003                           
  4004                           ;./lcd.h: 38:         RD7 = 1;
  4005  0E3D  1788               	bsf	8,7	;volatile
  4006  0E3E  0008               	return
  4007  0E3F                     l71:	
  4008                           ;./lcd.h: 39:     else
  4009                           
  4010                           
  4011                           ;./lcd.h: 40:         RD7 = 0;
  4012  0E3F  1388               	bcf	8,7	;volatile
  4013  0E40  0008               	return
  4014  0E41                     __end_of_lcdPort:	
  4015                           
  4016                           	psect	text17
  4017  0E17                     __ptext17:	
  4018 ;; *************** function _initServos *****************
  4019 ;; Defined at:
  4020 ;;		line 25 in file "./servo_pwm.h"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;		None
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;		None
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1    wreg      void 
  4027 ;; Registers used:
  4028 ;;		wreg, status,2, status,0, pclath, cstack
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4034 ;;      Params:         0       0       0       0       0
  4035 ;;      Locals:         0       0       0       0       0
  4036 ;;      Temps:          0       0       0       0       0
  4037 ;;      Totals:         0       0       0       0       0
  4038 ;;Total ram usage:        0 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; Hardware stack levels required when called:    1
  4041 ;; This function calls:
  4042 ;;		_setPR2
  4043 ;;		_setTMR2
  4044 ;; This function is called by:
  4045 ;;		_main
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           
  4050                           ;psect for function _initServos
  4051  0E17                     _initServos:	
  4052                           
  4053                           ;./servo_pwm.h: 26:     setPR2();
  4054                           
  4055                           ;incstack = 0
  4056                           ; Regs used in _initServos: [wreg+status,2+status,0+pclath+cstack]
  4057  0E17  120A  158A  25EF  120A  158A  	fcall	_setPR2
  4058                           
  4059                           ;./servo_pwm.h: 27:     setTMR2(1);
  4060  0E1C  3001               	movlw	1
  4061  0E1D  120A  158A  265B  120A  158A  	fcall	_setTMR2
  4062                           
  4063                           ;./servo_pwm.h: 28:     setTMR2(2);
  4064  0E22  3002               	movlw	2
  4065  0E23  120A  158A  265B   	fcall	_setTMR2
  4066  0E26  0008               	return
  4067  0E27                     __end_of_initServos:	
  4068                           
  4069                           	psect	text18
  4070  0E5B                     __ptext18:	
  4071 ;; *************** function _setTMR2 *****************
  4072 ;; Defined at:
  4073 ;;		line 48 in file "./servo_pwm.h"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;  pwm             1    wreg     const unsigned char 
  4076 ;; Auto vars:     Size  Location     Type
  4077 ;;  pwm             1    0[COMMON] const unsigned char 
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  1    wreg      void 
  4080 ;; Registers used:
  4081 ;;		wreg, status,2, status,0
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4087 ;;      Params:         0       0       0       0       0
  4088 ;;      Locals:         1       0       0       0       0
  4089 ;;      Temps:          0       0       0       0       0
  4090 ;;      Totals:         1       0       0       0       0
  4091 ;;Total ram usage:        1 bytes
  4092 ;; Hardware stack levels used:    1
  4093 ;; This function calls:
  4094 ;;		Nothing
  4095 ;; This function is called by:
  4096 ;;		_initServos
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100                           
  4101                           ;psect for function _setTMR2
  4102  0E5B                     _setTMR2:	
  4103                           
  4104                           ;incstack = 0
  4105                           ; Regs used in _setTMR2: [wreg+status,2+status,0]
  4106                           ;setTMR2@pwm stored from wreg
  4107  0E5B  00F0               	movwf	setTMR2@pwm
  4108                           
  4109                           ;./servo_pwm.h: 49:     if (pwm == 2) {
  4110  0E5C  3002               	movlw	2
  4111  0E5D  0670               	xorwf	setTMR2@pwm,w
  4112  0E5E  1D03               	btfss	3,2
  4113  0E5F  2E65               	goto	l123
  4114                           
  4115                           ;./servo_pwm.h: 50:         CCP2M3 = 1;
  4116  0E60  1283               	bcf	3,5	;RP0=0, select bank0
  4117  0E61  1303               	bcf	3,6	;RP1=0, select bank0
  4118  0E62  159D               	bsf	29,3	;volatile
  4119                           
  4120                           ;./servo_pwm.h: 51:         CCP2M2 = 1;
  4121  0E63  151D               	bsf	29,2	;volatile
  4122                           
  4123                           ;./servo_pwm.h: 52:     } else {
  4124  0E64  2E69               	goto	l127
  4125  0E65                     l123:	
  4126                           
  4127                           ;./servo_pwm.h: 53:         CCP1M3 = 1;
  4128  0E65  1283               	bcf	3,5	;RP0=0, select bank0
  4129  0E66  1303               	bcf	3,6	;RP1=0, select bank0
  4130  0E67  1597               	bsf	23,3	;volatile
  4131                           
  4132                           ;./servo_pwm.h: 54:         CCP1M2 = 1;
  4133  0E68  1517               	bsf	23,2	;volatile
  4134  0E69                     l127:	
  4135                           
  4136                           ;./servo_pwm.h: 63:         T2CKPS0 = 1;
  4137  0E69  1412               	bsf	18,0	;volatile
  4138                           
  4139                           ;./servo_pwm.h: 64:         T2CKPS1 = 1;
  4140  0E6A  1492               	bsf	18,1	;volatile
  4141                           
  4142                           ;./servo_pwm.h: 66:     TMR2ON = 1;
  4143  0E6B  1512               	bsf	18,2	;volatile
  4144                           
  4145                           ;./servo_pwm.h: 67:     if (pwm == 2)
  4146  0E6C  3002               	movlw	2
  4147  0E6D  0670               	xorwf	setTMR2@pwm,w
  4148  0E6E  1D03               	btfss	3,2
  4149  0E6F  2E74               	goto	l129
  4150                           
  4151                           ;./servo_pwm.h: 68:         TRISC2 = 0;
  4152  0E70  1683               	bsf	3,5	;RP0=1, select bank1
  4153  0E71  1303               	bcf	3,6	;RP1=0, select bank1
  4154  0E72  1107               	bcf	7,2	;volatile
  4155  0E73  0008               	return
  4156  0E74                     l129:	
  4157                           ;./servo_pwm.h: 69:     else
  4158                           
  4159                           
  4160                           ;./servo_pwm.h: 70:         TRISC1 = 0;
  4161  0E74  1683               	bsf	3,5	;RP0=1, select bank1
  4162  0E75  1303               	bcf	3,6	;RP1=0, select bank1
  4163  0E76  1087               	bcf	7,1	;volatile
  4164  0E77  0008               	return
  4165  0E78                     __end_of_setTMR2:	
  4166                           
  4167                           	psect	text19
  4168  0DEF                     __ptext19:	
  4169 ;; *************** function _setPR2 *****************
  4170 ;; Defined at:
  4171 ;;		line 21 in file "./servo_pwm.h"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;		None
  4174 ;; Auto vars:     Size  Location     Type
  4175 ;;		None
  4176 ;; Return value:  Size  Location     Type
  4177 ;;                  1    wreg      void 
  4178 ;; Registers used:
  4179 ;;		wreg
  4180 ;; Tracked objects:
  4181 ;;		On entry : 0/0
  4182 ;;		On exit  : 0/0
  4183 ;;		Unchanged: 0/0
  4184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4185 ;;      Params:         0       0       0       0       0
  4186 ;;      Locals:         0       0       0       0       0
  4187 ;;      Temps:          0       0       0       0       0
  4188 ;;      Totals:         0       0       0       0       0
  4189 ;;Total ram usage:        0 bytes
  4190 ;; Hardware stack levels used:    1
  4191 ;; This function calls:
  4192 ;;		Nothing
  4193 ;; This function is called by:
  4194 ;;		_initServos
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           
  4199                           ;psect for function _setPR2
  4200  0DEF                     _setPR2:	
  4201                           
  4202                           ;./servo_pwm.h: 22:     PR2 = (4000000 / (245 * 4 * 16)) - 1;
  4203                           
  4204                           ;incstack = 0
  4205                           ; Regs used in _setPR2: [wreg]
  4206  0DEF  30FE               	movlw	254
  4207  0DF0  1683               	bsf	3,5	;RP0=1, select bank1
  4208  0DF1  1303               	bcf	3,6	;RP1=0, select bank1
  4209  0DF2  0092               	movwf	18	;volatile
  4210  0DF3  0008               	return
  4211  0DF4                     __end_of_setPR2:	
  4212                           
  4213                           	psect	text20
  4214  0E78                     __ptext20:	
  4215 ;; *************** function _adcRead *****************
  4216 ;; Defined at:
  4217 ;;		line 35 in file "./adc.h"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;  adcChannel      2    0[COMMON] const int 
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;		None
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  2    0[COMMON] int 
  4224 ;; Registers used:
  4225 ;;		wreg, status,2, status,0
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4231 ;;      Params:         2       0       0       0       0
  4232 ;;      Locals:         0       0       0       0       0
  4233 ;;      Temps:          2       0       0       0       0
  4234 ;;      Totals:         4       0       0       0       0
  4235 ;;Total ram usage:        4 bytes
  4236 ;; Hardware stack levels used:    1
  4237 ;; This function calls:
  4238 ;;		Nothing
  4239 ;; This function is called by:
  4240 ;;		_main
  4241 ;; This function uses a non-reentrant model
  4242 ;;
  4243                           
  4244                           
  4245                           ;psect for function _adcRead
  4246  0E78                     _adcRead:	
  4247                           
  4248                           ;./adc.h: 36:     ADCON0bits.ADON = 1;
  4249                           
  4250                           ;incstack = 0
  4251                           ; Regs used in _adcRead: [wreg+status,2+status,0]
  4252  0E78  1283               	bcf	3,5	;RP0=0, select bank0
  4253  0E79  1303               	bcf	3,6	;RP1=0, select bank0
  4254  0E7A  141F               	bsf	31,0	;volatile
  4255                           
  4256                           ;./adc.h: 37:     ADCON0bits.CHS = adcChannel;
  4257  0E7B  0870               	movf	adcRead@adcChannel,w
  4258  0E7C  00F2               	movwf	??_adcRead
  4259  0E7D  0DF2               	rlf	??_adcRead,f
  4260  0E7E  0DF2               	rlf	??_adcRead,f
  4261  0E7F  0DF2               	rlf	??_adcRead,f
  4262  0E80  081F               	movf	31,w	;volatile
  4263  0E81  0672               	xorwf	??_adcRead,w
  4264  0E82  39C7               	andlw	-57
  4265  0E83  0672               	xorwf	??_adcRead,w
  4266  0E84  009F               	movwf	31	;volatile
  4267                           
  4268                           ;./adc.h: 38:     _delay((unsigned long)((10)*(4000000/4000.0)));
  4269  0E85  300D               	movlw	13
  4270  0E86  00F3               	movwf	??_adcRead+1
  4271  0E87  30FB               	movlw	251
  4272  0E88  00F2               	movwf	??_adcRead
  4273  0E89                     u2777:	
  4274  0E89  0BF2               	decfsz	??_adcRead,f
  4275  0E8A  2E89               	goto	u2777
  4276  0E8B  0BF3               	decfsz	??_adcRead+1,f
  4277  0E8C  2E89               	goto	u2777
  4278  0E8D  2E8E               	nop2
  4279                           
  4280                           ;./adc.h: 39:     ADCON0bits.GO = 1;
  4281  0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  4282  0E8F  1303               	bcf	3,6	;RP1=0, select bank0
  4283  0E90  151F               	bsf	31,2	;volatile
  4284  0E91                     l103:	
  4285                           ;./adc.h: 40:     while (ADCON0bits.GO_DONE);
  4286                           
  4287  0E91  191F               	btfsc	31,2	;volatile
  4288  0E92  2E91               	goto	l103
  4289                           
  4290                           ;./adc.h: 42:     return (ADRESH << 8) + (ADRESL);
  4291  0E93  081E               	movf	30,w	;volatile
  4292  0E94  00F1               	movwf	?_adcRead+1
  4293  0E95  1683               	bsf	3,5	;RP0=1, select bank1
  4294  0E96  1303               	bcf	3,6	;RP1=0, select bank1
  4295  0E97  081E               	movf	30,w	;volatile
  4296  0E98  00F0               	movwf	?_adcRead
  4297  0E99  0008               	return
  4298  0E9A                     __end_of_adcRead:	
  4299                           
  4300                           	psect	text21
  4301  0E07                     __ptext21:	
  4302 ;; *************** function _adcInit *****************
  4303 ;; Defined at:
  4304 ;;		line 1 in file "./adc.h"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;		None
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;		None
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  1    wreg      void 
  4311 ;; Registers used:
  4312 ;;		wreg, status,2, status,0
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4318 ;;      Params:         0       0       0       0       0
  4319 ;;      Locals:         0       0       0       0       0
  4320 ;;      Temps:          0       0       0       0       0
  4321 ;;      Totals:         0       0       0       0       0
  4322 ;;Total ram usage:        0 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; This function calls:
  4325 ;;		Nothing
  4326 ;; This function is called by:
  4327 ;;		_main
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           
  4332                           ;psect for function _adcInit
  4333  0E07                     _adcInit:	
  4334                           
  4335                           ;./adc.h: 11:     ADCON0bits.ADCS = 0b01;
  4336                           
  4337                           ;incstack = 0
  4338                           ; Regs used in _adcInit: [wreg+status,2+status,0]
  4339  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  4340  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  4341  0E09  081F               	movf	31,w	;volatile
  4342  0E0A  393F               	andlw	-193
  4343  0E0B  3840               	iorlw	64
  4344  0E0C  009F               	movwf	31	;volatile
  4345                           
  4346                           ;./adc.h: 12:     ADCON0bits.CHS = 0b000;
  4347  0E0D  30C7               	movlw	-57
  4348  0E0E  059F               	andwf	31,f	;volatile
  4349                           
  4350                           ;./adc.h: 13:     ADCON0bits.ADON = 0;
  4351  0E0F  101F               	bcf	31,0	;volatile
  4352                           
  4353                           ;./adc.h: 24:     ADCON1bits.ADFM = 1;
  4354  0E10  1683               	bsf	3,5	;RP0=1, select bank1
  4355  0E11  1303               	bcf	3,6	;RP1=0, select bank1
  4356  0E12  179F               	bsf	31,7	;volatile
  4357                           
  4358                           ;./adc.h: 25:     ADCON1bits.ADCS2 = 1;
  4359  0E13  171F               	bsf	31,6	;volatile
  4360                           
  4361                           ;./adc.h: 26:     ADCON1bits.PCFG = 0b0000;
  4362  0E14  30F0               	movlw	-16
  4363  0E15  059F               	andwf	31,f	;volatile
  4364  0E16  0008               	return
  4365  0E17                     __end_of_adcInit:	
  4366  007E                     btemp	set	126	;btemp
  4367  007E                     wtemp0	set	126


Data Sizes:
    Strings     28
    Constant    10
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     72      72
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_3(CODE[8]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> mensaje(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcdPrint@a	PTR unsigned char  size(2) Largest target is 16
		 -> mensaje(BANK1[16]), STR_2(CODE[7]), STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _pwmSetDuty1->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _lcdSetCursor->_lcdCmd
    _lcdPrint->_lcdWriteChar
    _lcdWriteChar->_lcdPort
    _lcdInit->_lcdCmd
    _lcdClear->_lcdCmd
    _lcdCmd->_lcdPort
    _initServos->_setTMR2

Critical Paths under _main in BANK0

    _main->_pwmSetDuty1
    _pwmSetDuty1->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    7900
                                             67 BANK0      5     5      0
                            _adcInit
                            _adcRead
                         _initServos
                           _lcdClear
                            _lcdInit
                           _lcdPrint
                       _lcdSetCursor
                        _pwmSetDuty1
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _pwmSetDuty1                                          4     2      2    5090
                                             63 BANK0      4     2      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     381
                                             52 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2569
                                             26 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1425
                                              0 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcdSetCursor                                         7     6      1     608
                                              4 COMMON     7     6      1
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             7     5      2     496
                                              5 COMMON     7     5      2
                       _lcdWriteChar
 ---------------------------------------------------------------------------------
 (2) _lcdWriteChar                                         4     4      0     178
                                              1 COMMON     4     4      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              2     2      0     198
                                              4 COMMON     2     2      0
                             _lcdCmd
                            _lcdPort
 ---------------------------------------------------------------------------------
 (1) _lcdClear                                             0     0      0     110
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (2) _lcdCmd                                               3     3      0     110
                                              1 COMMON     3     3      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (3) _lcdPort                                              1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initServos                                           0     0      0      44
                             _setPR2
                            _setTMR2
 ---------------------------------------------------------------------------------
 (2) _setTMR2                                              1     1      0      44
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setPR2                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcRead                                              4     2      2      98
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcInit
   _adcRead
   _initServos
     _setPR2
     _setTMR2
   _lcdClear
     _lcdCmd
       _lcdPort
   _lcdInit
     _lcdCmd
       _lcdPort
     _lcdPort
   _lcdPrint
     _lcdWriteChar
       _lcdPort
   _lcdSetCursor
     _lcdCmd
       _lcdPort
   _pwmSetDuty1
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      66       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      48       5       90.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      10       7       20.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      66      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon May 13 16:15:20 2019

           ___fldiv@aexp 0039             ___fldiv@bexp 0038                        pc 0002  
           ___fldiv@sign 0031              __CFG_CP$OFF 0000                       l70 0E3B  
                     l71 0E3F                       l65 0E2E                       l66 0E31  
                     l67 0E35                       l68 0E36                       l69 0E3A  
                     fsr 0004      __Umul8_16@word_mpld 0076                      l103 0E91  
                    l123 0E65                      l127 0E69                      l129 0E74  
                    l604 038B                      l701 0EAC                      l448 009E  
                    l626 04CA                      l628 04D8                      l656 07E8  
                    l682 01DF                      l695 0235                      l696 023F  
                    l688 021F                      _RD2 0042                      _RD3 0043  
                    _RD4 0044                      _RD5 0045                      _RD6 0046  
                    _RD7 0047                      _PR2 0092             __CFG_CPD$OFF 0000  
                    fsr0 0004                      indf 0000             __CFG_FOSC$XT 0000  
           ___flmul@aexp 004C             ___flmul@bexp 004D             ___flmul@sign 0047  
           ___flmul@temp 0052             ___flmul@prod 004E           ??_lcdWriteChar 0071  
          lcdWriteChar@a 0074            lcdWriteChar@y 0073             __CFG_LVP$OFF 0000  
           ___fltol@exp1 005E                     l2021 011D                     l2111 0179  
                   l2033 028C                     l2061 02E4                     l2055 02C3  
                   l2039 02AA                     l1601 0EEA                     l2049 02C1  
                   l2145 029F                     l1523 005A                     l2075 02F7  
                   l2067 02F3                     l2077 026C                     l1711 0463  
                   l1703 042F                     l1623 035D                     l1543 008A  
                   l1527 0063                     l2079 0338                     l1705 044C  
                   l1625 0365                     l1553 00AD                     l1545 009A  
                   l1715 0465                     l1643 0383                     l1619 035A  
                   l1467 0EA4                     l1741 04D4                     l1725 0497  
                   l1653 03AA                     l1639 0380                     l1903 01F2  
                   l1575 0F52                     l1567 0F2E                     l1591 0EC3  
                   l1729 04B0                     l1761 04FD                     l1913 0233  
                   l1905 0204                     l1569 0F3C                     l1593 0ED1  
                   l1659 03B6                     l1851 076E                     l1843 073A  
                   l1763 04FF                     l1915 0224                     l1579 0F5D  
                   l1685 0424                     l1845 0757                     l1781 0524  
                   l1765 0507                     l1597 0EDF                     l1943 002A  
                   l1679 0405                     l1687 03E1                     l1855 0770  
                   l1791 053A                     l1783 052C                     l1927 025C  
                   l1689 0429                     l1865 07A2                     l1875 07D1  
                   l1779 0522                     l1869 07B8                     l1893 01D7  
                   l1899 01EE                     l1989 0F64                     STR_1 081A  
                   STR_2 082F                     STR_3 0827                     u1405 0EAD  
                   u2205 0726                     u2125 0647                     u2215 073E  
                   u1425 0F00                     u2305 078D                     u2315 07AB  
                   u2235 0749                     u2325 07C3                     u2165 06E3  
                   u1525 00A3                     u1605 0F53                     u2095 05EA  
                   u2415 022C                     u2185 0708                     u1465 006C  
                   u2515 0036                     u1635 0EC6                     u1805 03FE  
                   u1565 0F31                     u1815 0413                     u1495 008B  
                   u2455 0247                     u2375 01FB                     u1655 0ED7  
                   u2615 02DA                     u1585 0F3D                     u1665 0EE0  
                   u2570 011A                     u2395 0217                     u1595 0F49  
                   u2707 01BC                     u2717 0F10                     u1845 0433  
                   u2727 0F20                     u2495 0011                     u1935 0482  
                   u1775 03EA                     u2737 0FAF                     u1945 04A0  
                   u1865 043E                     u1785 03F3                     u2747 0FBE  
                   u1955 04BB                     u2757 0FCC                     u2767 0E52  
                   u2777 0E89                     u2697 0164             __CFG_WRT$OFF 0000  
                   _main 012B                     btemp 007E                     start 0000  
        ___fldiv@new_exp 0032            ___fltol@sign1 005D                    ?_main 0070  
        __end_of_adcInit 0E17                    _CCP1X 00BD          __end_of___fldiv 04E0  
                  _CCP1Y 00BC                    _CCP2X 00ED          __end_of_adcRead 0E9A  
                  _CCP2Y 00EC            __CFG_WDTE$OFF 0000          __end_of___flmul 07F5  
        __end_of___fltol 00BC          __end_of___lwdiv 0F62          __end_of___lwmod 0EEF  
                  _PORTD 0008                    _TRISD 0088          __end_of_lcdInit 1000  
        __end_of_lcdPort 0E41          __end_of_dpowers 081A          __end_of_setTMR2 0E78  
         __CFG_BOREN$OFF 0000                    pclath 000A                    status 0003  
                  wtemp0 007E          __end_of_sprintf 033D          __initialization 07F5  
           __end_of_main 01C2                   ??_main 0063     __end_of_lcdSetCursor 004F  
                 _CCP1M2 00BA                   _CCP1M3 00BB                   _CCP2M2 00EA  
                 _CCP2M3 00EB                   _ADRESH 001E                   _ADRESL 009E  
                 _CCPR1L 0015                   _CCPR2L 001B          pwmSetDuty1@duty 005F  
                 _TMR2ON 0092                   _TRISC1 0439                   _TRISC2 043A  
       __end_of___xxtofl 0265         __end_of_lcdClear 0E07           __CFG_PWRTE$OFF 0000  
       __end_of_lcdPrint 0F9F                ??_adcInit 0070                ??___fldiv 0028  
              ??_adcRead 0072     __end_of_lcdWriteChar 0F26                ??___flmul 0042  
              ??___fltol 0058                   _lcdCmd 0E41                ??___lwdiv 0074  
              ??___lwmod 007C                   _setPR2 0DEF                ??_lcdInit 0074  
              ??_lcdPort 0070                ??_setTMR2 0070       __size_of__Umul8_16 0023  
           ?_pwmSetDuty1 005F                ??_sprintf 0023             ___xxtofl@arg 007A  
           ___xxtofl@exp 0079             ___xxtofl@val 0070  __end_of__initialization 07FC  
             ___fltol@f1 0054           __pcstackCOMMON 0070         lcdWriteChar@temp 0072  
             __pbssBANK1 00A0        __end_of__Umul8_16 0EBD               __pmaintext 012B  
                ?_lcdCmd 0070    __size_of_lcdSetCursor 004A                  ?_setPR2 0070  
                _T2CKPS0 0090                  _T2CKPS1 0091                ?___xxtofl 0070  
              ?_lcdClear 0070                ?_lcdPrint 0075               __stringtab 0800  
  __size_of_lcdWriteChar 0037             _lcdSetCursor 0005                  _adcInit 0E07  
                ___fldiv 033D                  _adcRead 0E78                  ___flmul 04E0  
                ___fltol 004F               _initServos 0E17                  ___lwdiv 0F26  
                ___lwmod 0EBD          __size_of_lcdCmd 001A          __size_of_setPR2 0005  
                _lcdInit 0F9F                  __ptext1 0265                  __ptext2 0EBD  
                __ptext3 0F26                  __ptext4 00BC                  __ptext5 01C2  
                __ptext6 004F                  __ptext7 04E0                  __ptext8 0E9A  
                __ptext9 033D                  _lcdPort 0E27                  _dpowers 0810  
                _mensaje 00A0               ??___xxtofl 0074                  _setTMR2 0E5B  
                lcdCmd@a 0073               ??_lcdClear 0074               ??_lcdPrint 0077  
                _sprintf 0265                  clrloop0 0DF5             _lcdWriteChar 0EEF  
   end_of_initialization 07FC     __size_of_pwmSetDuty1 006F            ___xxtofl@sign 0078  
            ___fldiv@grs 0034              ___fldiv@rem 002D              ___flmul@grs 0048  
             main@servo1 0066              ?_initServos 0070           __end_of_lcdCmd 0E5B  
         __end_of_setPR2 0DF4      start_initialization 07F5                 ??_lcdCmd 0071  
              __Umul8_16 0E9A                 ??_setPR2 0070                ___fldiv@a 0020  
              ___fldiv@b 0024                ___flmul@a 003E                ___flmul@b 003A  
              ___latbits 0002               setTMR2@pwm 0070            __pcstackBANK0 0020  
      __size_of___xxtofl 00A3        __size_of_lcdClear 000B      __size_of_initServos 0010  
      __size_of_lcdPrint 003D              sprintf@flag 0027              sprintf@prec 0028  
       ___lwdiv@dividend 0072                 ?_adcInit 0070                 ?___fldiv 0020  
               ?_adcRead 0070                 ?___flmul 003A                 ?___fltol 0054  
             ?__Umul8_16 0070                 ?___lwdiv 0070                 ?___lwmod 0078  
              __pstrings 0800                 ?_lcdInit 0070                 ?_lcdPort 0070  
      adcRead@adcChannel 0070                 ?_setTMR2 0070         ___lwdiv@quotient 0075  
               ?_sprintf 0020                clear_ram0 0DF4                lcdPrint@a 0075  
              lcdPrint@i 007A               _ADCON0bits 001F              __stringbase 080F  
             _ADCON1bits 009F            ??_pwmSetDuty1 0061         lcdSetCursor@temp 007A  
           ??_initServos 0071              ??__Umul8_16 0072         __size_of_adcInit 0010  
       __size_of___fldiv 01A3         __size_of_adcRead 0022         __size_of___flmul 0315  
       __size_of___fltol 006D         __size_of___lwdiv 003C         __size_of___lwmod 0032  
     __end_of__stringtab 0810         __size_of_lcdInit 0061         __size_of_lcdPort 001A  
             sprintf@val 0029                 ___xxtofl 01C2         __size_of_setTMR2 001D  
               _lcdClear 0DFC          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
               __ptext10 0005                 __ptext11 0F62                 __ptext20 0E78  
               __ptext12 0EEF                 __ptext21 0E07                 __ptext13 0F9F  
               __ptext14 0DFC                 __ptext15 0E41                 __ptext16 0E27  
               __ptext17 0E17                 __ptext18 0E5B                 __ptext19 0DEF  
               _lcdPrint 0F62         __size_of_sprintf 00D8            lcdSetCursor@a 0077  
          lcdSetCursor@b 0074       __end_of_initServos 0E27            lcdSetCursor@y 0079  
          lcdSetCursor@z 0078            __size_of_main 0097      __end_of_pwmSetDuty1 012B  
               lcdPort@a 0070                sprintf@ap 0026                sprintf@sp 002B  
       ___lwmod@dividend 007A            ?_lcdSetCursor 0074                stringcode 080A  
 __Umul8_16@multiplicand 0070                 sprintf@c 002C                 sprintf@f 0020  
        ___lwmod@divisor 0078          ___lwmod@counter 007D                 stringdir 080A  
               stringtab 0800              _pwmSetDuty1 00BC            ?_lcdWriteChar 0070  
   __Umul8_16@multiplier 0078           ??_lcdSetCursor 0075        __Umul8_16@product 0074  
