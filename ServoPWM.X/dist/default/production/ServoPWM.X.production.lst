

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed May 15 18:41:59 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.05
    38                           ; Generated 20/12/2018 GMT
    39                           ; 
    40                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F877A Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0098                     	;# 
   180  0099                     	;# 
   181  009C                     	;# 
   182  009D                     	;# 
   183  009E                     	;# 
   184  009F                     	;# 
   185  010C                     	;# 
   186  010D                     	;# 
   187  010E                     	;# 
   188  010F                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191                           
   192                           	psect	strings
   193  0800                     __pstrings:	
   194  0800                     stringtab:	
   195  0800                     __stringtab:	
   196                           
   197                           ;	String table - string pointers are 1 byte each
   198  0800  1BFF               	btfsc	btemp+1,7
   199  0801  280A               	ljmp	stringcode
   200  0802  1383               	bcf	3,7
   201  0803  187F               	btfsc	btemp+1,0
   202  0804  1783               	bsf	3,7
   203  0805  0800               	movf	0,w
   204  0806  0A84               	incf	4,f
   205  0807  1903               	skipnz
   206  0808  0AFF               	incf	btemp+1,f
   207  0809  0008               	return
   208  080A                     stringcode:	
   209  080A                     stringdir:	
   210  080A  3008               	movlw	high stringdir
   211  080B  008A               	movwf	10
   212  080C  0804               	movf	4,w
   213  080D  0A84               	incf	4,f
   214  080E  0782               	addwf	2,f
   215  080F                     __stringbase:	
   216  080F  3400               	retlw	0
   217  0810                     __end_of__stringtab:	
   218  0810                     _dpowers:	
   219  0810  3401               	retlw	1
   220  0811  3400               	retlw	0
   221  0812  340A               	retlw	10
   222  0813  3400               	retlw	0
   223  0814  3464               	retlw	100
   224  0815  3400               	retlw	0
   225  0816  34E8               	retlw	232
   226  0817  3403               	retlw	3
   227  0818  3410               	retlw	16
   228  0819  3427               	retlw	39
   229  081A                     __end_of_dpowers:	
   230  001B                     _CCPR2L	set	27
   231  0015                     _CCPR1L	set	21
   232  001E                     _ADRESH	set	30
   233  001F                     _ADCON0bits	set	31
   234  0008                     _PORTD	set	8
   235  0031                     _RB1	set	49
   236  0030                     _RB0	set	48
   237  0092                     _TMR2ON	set	146
   238  0091                     _T2CKPS1	set	145
   239  0090                     _T2CKPS0	set	144
   240  00BA                     _CCP1M2	set	186
   241  00BB                     _CCP1M3	set	187
   242  00EA                     _CCP2M2	set	234
   243  00EB                     _CCP2M3	set	235
   244  00EC                     _CCP2Y	set	236
   245  00ED                     _CCP2X	set	237
   246  00BC                     _CCP1Y	set	188
   247  00BD                     _CCP1X	set	189
   248  0043                     _RD3	set	67
   249  0042                     _RD2	set	66
   250  0047                     _RD7	set	71
   251  0046                     _RD6	set	70
   252  0045                     _RD5	set	69
   253  0044                     _RD4	set	68
   254  0092                     _PR2	set	146
   255  009E                     _ADRESL	set	158
   256  009F                     _ADCON1bits	set	159
   257  0088                     _TRISD	set	136
   258  0439                     _TRISC1	set	1081
   259  043A                     _TRISC2	set	1082
   260  081A                     STR_3:	
   261  081A  3441               	retlw	65	;'A'
   262  081B  346E               	retlw	110	;'n'
   263  081C  3467               	retlw	103	;'g'
   264  081D  3475               	retlw	117	;'u'
   265  081E  346C               	retlw	108	;'l'
   266  081F  3465               	retlw	101	;'e'
   267  0820  3420               	retlw	32	;' '
   268  0821  3453               	retlw	83	;'S'
   269  0822  3431               	retlw	49	;'1'
   270  0823  343A               	retlw	58	;':'
   271  0824  3425               	retlw	37	;'%'
   272  0825  3464               	retlw	100	;'d'
   273  0826  3400               	retlw	0
   274  0827                     STR_4:	
   275  0827  3441               	retlw	65	;'A'
   276  0828  346E               	retlw	110	;'n'
   277  0829  3467               	retlw	103	;'g'
   278  082A  3475               	retlw	117	;'u'
   279  082B  346C               	retlw	108	;'l'
   280  082C  3465               	retlw	101	;'e'
   281  082D  3420               	retlw	32	;' '
   282  082E  3453               	retlw	83	;'S'
   283  082F  3432               	retlw	50	;'2'
   284  0830  343A               	retlw	58	;':'
   285  0831  3425               	retlw	37	;'%'
   286  0832  3464               	retlw	100	;'d'
   287  0833  3400               	retlw	0
   288  0834                     STR_1:	
   289  0834  3443               	retlw	67	;'C'
   290  0835  346F               	retlw	111	;'o'
   291  0836  346E               	retlw	110	;'n'
   292  0837  3466               	retlw	102	;'f'
   293  0838  3469               	retlw	105	;'i'
   294  0839  3467               	retlw	103	;'g'
   295  083A  3475               	retlw	117	;'u'
   296  083B  3472               	retlw	114	;'r'
   297  083C  3461               	retlw	97	;'a'
   298  083D  346E               	retlw	110	;'n'
   299  083E  3464               	retlw	100	;'d'
   300  083F  346F               	retlw	111	;'o'
   301  0840  3400               	retlw	0
   302  0841                     STR_2:	
   303  0841  3453               	retlw	83	;'S'
   304  0842  3465               	retlw	101	;'e'
   305  0843  3472               	retlw	114	;'r'
   306  0844  3476               	retlw	118	;'v'
   307  0845  346F               	retlw	111	;'o'
   308  0846  3473               	retlw	115	;'s'
   309  0847  3400               	retlw	0
   310                           
   311                           ; #config settings
   312  0000                     
   313                           	psect	cinit
   314  07F5                     start_initialization:	
   315  07F5                     __initialization:	
   316                           
   317                           ; Clear objects allocated to BANK1
   318  07F5  1383               	bcf	3,7	;select IRP bank0
   319  07F6  30B5               	movlw	low __pbssBANK1
   320  07F7  0084               	movwf	4
   321  07F8  30C5               	movlw	low (__pbssBANK1+16)
   322  07F9  120A  158A  218D   	fcall	clear_ram0
   323  07FC                     end_of_initialization:	
   324                           ;End of C runtime variable initialization code
   325                           
   326  07FC                     __end_of__initialization:	
   327  07FC  0183               	clrf	3
   328  07FD  120A  158A  2E8D   	ljmp	_main	;jump to C main() function
   329                           
   330                           	psect	bssBANK1
   331  00B5                     __pbssBANK1:	
   332  00B5                     _mensaje:	
   333  00B5                     	ds	16
   334                           
   335                           	psect	clrtext
   336  098D                     clear_ram0:	
   337                           ;	Called with FSR containing the base address, and
   338                           ;	W with the last address+1
   339                           
   340  098D  0064               	clrwdt	;clear the watchdog before getting into this loop
   341  098E                     clrloop0:	
   342  098E  0180               	clrf	0	;clear RAM location pointed to by FSR
   343  098F  0A84               	incf	4,f	;increment pointer
   344  0990  0604               	xorwf	4,w	;XOR with final address
   345  0991  1903               	btfsc	3,2	;have we reached the end yet?
   346  0992  3400               	retlw	0	;all done for this memory range, return
   347  0993  0604               	xorwf	4,w	;XOR again to restore value
   348  0994  298E               	goto	clrloop0	;do the next byte
   349                           
   350                           	psect	cstackBANK1
   351  00A0                     __pcstackBANK1:	
   352  00A0                     ??___fltol:	
   353                           
   354                           ; 1 bytes @ 0x0
   355  00A0                     	ds	5
   356  00A5                     ??_setAngule1:	
   357  00A5                     ??_setAngule2:	
   358                           ; 1 bytes @ 0x5
   359                           
   360                           
   361                           ; 1 bytes @ 0x5
   362  00A5                     	ds	4
   363  00A9                     setAngule1@angule:	
   364  00A9                     setAngule2@angule:	
   365                           ; 1 bytes @ 0x9
   366                           
   367                           
   368                           ; 1 bytes @ 0x9
   369  00A9                     	ds	1
   370  00AA                     setAngule1@duty:	
   371  00AA                     setAngule2@duty:	
   372                           ; 2 bytes @ 0xA
   373                           
   374                           
   375                           ; 2 bytes @ 0xA
   376  00AA                     	ds	2
   377  00AC                     ??_main:	
   378                           
   379                           ; 1 bytes @ 0xC
   380  00AC                     	ds	3
   381  00AF                     main@servo1:	
   382                           
   383                           ; 2 bytes @ 0xF
   384  00AF                     	ds	2
   385  00B1                     main@angule1:	
   386                           
   387                           ; 1 bytes @ 0x11
   388  00B1                     	ds	1
   389  00B2                     main@angule2:	
   390                           
   391                           ; 1 bytes @ 0x12
   392  00B2                     	ds	1
   393  00B3                     main@servo2:	
   394                           
   395                           ; 2 bytes @ 0x13
   396  00B3                     	ds	2
   397                           
   398                           	psect	cstackCOMMON
   399  0070                     __pcstackCOMMON:	
   400  0070                     ?_setTMR2:	
   401  0070                     ??_setTMR2:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ?_lcdPort:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0070                     ??_lcdPort:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0070                     ?_lcdCmd:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0070                     ?_lcdClear:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0070                     ?_lcdInit:	
   417                           ; 1 bytes @ 0x0
   418                           
   419  0070                     ?_lcdWriteChar:	
   420                           ; 1 bytes @ 0x0
   421                           
   422  0070                     ?_adcInit:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ??_adcInit:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ?_setPR2:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ??_setPR2:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_initServos:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ?_setAngule1:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_setAngule2:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?_main:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?__Umul8_16:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ?_adcRead:	
   450                           ; 2 bytes @ 0x0
   451                           
   452  0070                     ?___lwdiv:	
   453                           ; 2 bytes @ 0x0
   454                           
   455  0070                     ?___xxtofl:	
   456                           ; 2 bytes @ 0x0
   457                           
   458  0070                     lcdPort@a:	
   459                           ; 4 bytes @ 0x0
   460                           
   461  0070                     setTMR2@pwm:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     __Umul8_16@multiplicand:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     adcRead@adcChannel:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ___lwdiv@divisor:	
   471                           ; 2 bytes @ 0x0
   472                           
   473  0070                     ___xxtofl@val:	
   474                           ; 2 bytes @ 0x0
   475                           
   476                           
   477                           ; 4 bytes @ 0x0
   478  0070                     	ds	1
   479  0071                     ??_lcdCmd:	
   480  0071                     ??_lcdWriteChar:	
   481                           ; 1 bytes @ 0x1
   482                           
   483  0071                     ??_initServos:	
   484                           ; 1 bytes @ 0x1
   485                           
   486                           
   487                           ; 1 bytes @ 0x1
   488  0071                     	ds	1
   489  0072                     ??__Umul8_16:	
   490  0072                     ??_adcRead:	
   491                           ; 1 bytes @ 0x2
   492                           
   493  0072                     lcdWriteChar@temp:	
   494                           ; 1 bytes @ 0x2
   495                           
   496  0072                     ___lwdiv@dividend:	
   497                           ; 1 bytes @ 0x2
   498                           
   499                           
   500                           ; 2 bytes @ 0x2
   501  0072                     	ds	1
   502  0073                     lcdCmd@a:	
   503  0073                     lcdWriteChar@y:	
   504                           ; 1 bytes @ 0x3
   505                           
   506                           
   507                           ; 1 bytes @ 0x3
   508  0073                     	ds	1
   509  0074                     ??_lcdClear:	
   510  0074                     ?_lcdSetCursor:	
   511                           ; 1 bytes @ 0x4
   512                           
   513  0074                     ??_lcdInit:	
   514                           ; 1 bytes @ 0x4
   515                           
   516  0074                     ??___lwdiv:	
   517                           ; 1 bytes @ 0x4
   518                           
   519  0074                     ??___xxtofl:	
   520                           ; 1 bytes @ 0x4
   521                           
   522  0074                     lcdSetCursor@b:	
   523                           ; 1 bytes @ 0x4
   524                           
   525  0074                     lcdWriteChar@a:	
   526                           ; 1 bytes @ 0x4
   527                           
   528  0074                     __Umul8_16@product:	
   529                           ; 1 bytes @ 0x4
   530                           
   531                           
   532                           ; 2 bytes @ 0x4
   533  0074                     	ds	1
   534  0075                     ??_lcdSetCursor:	
   535  0075                     ?_lcdPrint:	
   536                           ; 1 bytes @ 0x5
   537                           
   538  0075                     lcdPrint@a:	
   539                           ; 1 bytes @ 0x5
   540                           
   541  0075                     ___lwdiv@quotient:	
   542                           ; 2 bytes @ 0x5
   543                           
   544                           
   545                           ; 2 bytes @ 0x5
   546  0075                     	ds	1
   547  0076                     __Umul8_16@word_mpld:	
   548                           
   549                           ; 2 bytes @ 0x6
   550  0076                     	ds	1
   551  0077                     ??_lcdPrint:	
   552  0077                     lcdSetCursor@a:	
   553                           ; 1 bytes @ 0x7
   554                           
   555  0077                     ___lwdiv@counter:	
   556                           ; 1 bytes @ 0x7
   557                           
   558                           
   559                           ; 1 bytes @ 0x7
   560  0077                     	ds	1
   561  0078                     ?___lwmod:	
   562  0078                     lcdSetCursor@z:	
   563                           ; 2 bytes @ 0x8
   564                           
   565  0078                     ___xxtofl@sign:	
   566                           ; 1 bytes @ 0x8
   567                           
   568  0078                     __Umul8_16@multiplier:	
   569                           ; 1 bytes @ 0x8
   570                           
   571  0078                     ___lwmod@divisor:	
   572                           ; 1 bytes @ 0x8
   573                           
   574                           
   575                           ; 2 bytes @ 0x8
   576  0078                     	ds	1
   577  0079                     lcdSetCursor@y:	
   578  0079                     ___xxtofl@exp:	
   579                           ; 1 bytes @ 0x9
   580                           
   581                           
   582                           ; 1 bytes @ 0x9
   583  0079                     	ds	1
   584  007A                     lcdSetCursor@temp:	
   585  007A                     lcdPrint@i:	
   586                           ; 1 bytes @ 0xA
   587                           
   588  007A                     ___lwmod@dividend:	
   589                           ; 2 bytes @ 0xA
   590                           
   591  007A                     ___xxtofl@arg:	
   592                           ; 2 bytes @ 0xA
   593                           
   594                           
   595                           ; 4 bytes @ 0xA
   596  007A                     	ds	2
   597  007C                     ??___lwmod:	
   598                           
   599                           ; 1 bytes @ 0xC
   600  007C                     	ds	1
   601  007D                     ___lwmod@counter:	
   602                           
   603                           ; 1 bytes @ 0xD
   604  007D                     	ds	1
   605                           
   606                           	psect	cstackBANK0
   607  0020                     __pcstackBANK0:	
   608  0020                     ?_sprintf:	
   609  0020                     ?___fldiv:	
   610                           ; 2 bytes @ 0x0
   611                           
   612  0020                     sprintf@f:	
   613                           ; 4 bytes @ 0x0
   614                           
   615  0020                     ___fldiv@a:	
   616                           ; 1 bytes @ 0x0
   617                           
   618                           
   619                           ; 4 bytes @ 0x0
   620  0020                     	ds	3
   621  0023                     ??_sprintf:	
   622                           
   623                           ; 1 bytes @ 0x3
   624  0023                     	ds	1
   625  0024                     ___fldiv@b:	
   626                           
   627                           ; 4 bytes @ 0x4
   628  0024                     	ds	2
   629  0026                     sprintf@ap:	
   630                           
   631                           ; 1 bytes @ 0x6
   632  0026                     	ds	1
   633  0027                     sprintf@flag:	
   634                           
   635                           ; 1 bytes @ 0x7
   636  0027                     	ds	1
   637  0028                     ??___fldiv:	
   638  0028                     sprintf@prec:	
   639                           ; 1 bytes @ 0x8
   640                           
   641                           
   642                           ; 1 bytes @ 0x8
   643  0028                     	ds	1
   644  0029                     sprintf@val:	
   645                           
   646                           ; 2 bytes @ 0x9
   647  0029                     	ds	2
   648  002B                     sprintf@sp:	
   649                           
   650                           ; 1 bytes @ 0xB
   651  002B                     	ds	1
   652  002C                     sprintf@c:	
   653                           
   654                           ; 1 bytes @ 0xC
   655  002C                     	ds	1
   656  002D                     ___fldiv@rem:	
   657                           
   658                           ; 4 bytes @ 0xD
   659  002D                     	ds	4
   660  0031                     ___fldiv@sign:	
   661                           
   662                           ; 1 bytes @ 0x11
   663  0031                     	ds	1
   664  0032                     ___fldiv@new_exp:	
   665                           
   666                           ; 2 bytes @ 0x12
   667  0032                     	ds	2
   668  0034                     ___fldiv@grs:	
   669                           
   670                           ; 4 bytes @ 0x14
   671  0034                     	ds	4
   672  0038                     ___fldiv@bexp:	
   673                           
   674                           ; 1 bytes @ 0x18
   675  0038                     	ds	1
   676  0039                     ___fldiv@aexp:	
   677                           
   678                           ; 1 bytes @ 0x19
   679  0039                     	ds	1
   680  003A                     ?___flmul:	
   681  003A                     ___flmul@b:	
   682                           ; 4 bytes @ 0x1A
   683                           
   684                           
   685                           ; 4 bytes @ 0x1A
   686  003A                     	ds	4
   687  003E                     ___flmul@a:	
   688                           
   689                           ; 4 bytes @ 0x1E
   690  003E                     	ds	4
   691  0042                     ??___flmul:	
   692                           
   693                           ; 1 bytes @ 0x22
   694  0042                     	ds	5
   695  0047                     ___flmul@sign:	
   696                           
   697                           ; 1 bytes @ 0x27
   698  0047                     	ds	1
   699  0048                     ___flmul@grs:	
   700                           
   701                           ; 4 bytes @ 0x28
   702  0048                     	ds	4
   703  004C                     ___flmul@aexp:	
   704                           
   705                           ; 1 bytes @ 0x2C
   706  004C                     	ds	1
   707  004D                     ___flmul@bexp:	
   708                           
   709                           ; 1 bytes @ 0x2D
   710  004D                     	ds	1
   711  004E                     ___flmul@prod:	
   712                           
   713                           ; 4 bytes @ 0x2E
   714  004E                     	ds	4
   715  0052                     ___flmul@temp:	
   716                           
   717                           ; 2 bytes @ 0x32
   718  0052                     	ds	2
   719  0054                     ?___fladd:	
   720  0054                     ___fladd@b:	
   721                           ; 4 bytes @ 0x34
   722                           
   723                           
   724                           ; 4 bytes @ 0x34
   725  0054                     	ds	4
   726  0058                     ___fladd@a:	
   727                           
   728                           ; 4 bytes @ 0x38
   729  0058                     	ds	4
   730  005C                     ??___fladd:	
   731                           
   732                           ; 1 bytes @ 0x3C
   733  005C                     	ds	8
   734  0064                     ___fladd@signs:	
   735                           
   736                           ; 1 bytes @ 0x44
   737  0064                     	ds	1
   738  0065                     ___fladd@aexp:	
   739                           
   740                           ; 1 bytes @ 0x45
   741  0065                     	ds	1
   742  0066                     ___fladd@bexp:	
   743                           
   744                           ; 1 bytes @ 0x46
   745  0066                     	ds	1
   746  0067                     ___fladd@grs:	
   747                           
   748                           ; 1 bytes @ 0x47
   749  0067                     	ds	1
   750  0068                     ?___fltol:	
   751  0068                     ___fltol@f1:	
   752                           ; 4 bytes @ 0x48
   753                           
   754                           
   755                           ; 4 bytes @ 0x48
   756  0068                     	ds	4
   757  006C                     ___fltol@sign1:	
   758                           
   759                           ; 1 bytes @ 0x4C
   760  006C                     	ds	1
   761  006D                     ___fltol@exp1:	
   762                           
   763                           ; 1 bytes @ 0x4D
   764  006D                     	ds	1
   765                           
   766                           	psect	maintext
   767  0E8D                     __pmaintext:	
   768 ;;
   769 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   770 ;;
   771 ;; *************** function _main *****************
   772 ;; Defined at:
   773 ;;		line 8 in file "main.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;		None
   776 ;; Auto vars:     Size  Location     Type
   777 ;;  angule2         1   18[BANK1 ] unsigned char 
   778 ;;  angule1         1   17[BANK1 ] unsigned char 
   779 ;;  servo2          2   19[BANK1 ] unsigned int 
   780 ;;  servo1          2   15[BANK1 ] unsigned int 
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   785 ;; Tracked objects:
   786 ;;		On entry : B00/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   790 ;;      Params:         0       0       0       0       0
   791 ;;      Locals:         0       0       6       0       0
   792 ;;      Temps:          0       0       3       0       0
   793 ;;      Totals:         0       0       9       0       0
   794 ;;Total ram usage:        9 bytes
   795 ;; Hardware stack levels required when called:    3
   796 ;; This function calls:
   797 ;;		___flmul
   798 ;;		___fltol
   799 ;;		___xxtofl
   800 ;;		_adcInit
   801 ;;		_adcRead
   802 ;;		_initServos
   803 ;;		_lcdClear
   804 ;;		_lcdInit
   805 ;;		_lcdPrint
   806 ;;		_lcdSetCursor
   807 ;;		_setAngule1
   808 ;;		_setAngule2
   809 ;;		_sprintf
   810 ;; This function is called by:
   811 ;;		Startup code after reset
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           
   816                           ;psect for function _main
   817  0E8D                     _main:	
   818                           
   819                           ;main.c: 9:     lcdInit();
   820                           
   821                           ;incstack = 0
   822                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   823  0E8D  120A  158A  2350  120A  158A  	fcall	_lcdInit
   824                           
   825                           ;main.c: 10:     adcInit();
   826  0E92  120A  158A  21A0  120A  158A  	fcall	_adcInit
   827                           
   828                           ;main.c: 11:     lcdClear();
   829  0E97  120A  158A  2195  120A  158A  	fcall	_lcdClear
   830                           
   831                           ;main.c: 12:     lcdSetCursor(1, 1);
   832  0E9C  01F4               	clrf	lcdSetCursor@b
   833  0E9D  0AF4               	incf	lcdSetCursor@b,f
   834  0E9E  3001               	movlw	1
   835  0E9F  120A  158A  2306  120A  158A  	fcall	_lcdSetCursor
   836                           
   837                           ;main.c: 13:     lcdPrint("Configurando");
   838  0EA4  3025               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   839  0EA5  00F5               	movwf	lcdPrint@a
   840  0EA6  3080               	movlw	128
   841  0EA7  00F6               	movwf	lcdPrint@a+1
   842  0EA8  120A  158A  22C9  120A  158A  	fcall	_lcdPrint
   843                           
   844                           ;main.c: 14:     lcdSetCursor(2, 1);
   845  0EAD  01F4               	clrf	lcdSetCursor@b
   846  0EAE  0AF4               	incf	lcdSetCursor@b,f
   847  0EAF  3002               	movlw	2
   848  0EB0  120A  158A  2306  120A  158A  	fcall	_lcdSetCursor
   849                           
   850                           ;main.c: 15:     lcdPrint("Servos");
   851  0EB5  3032               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   852  0EB6  00F5               	movwf	lcdPrint@a
   853  0EB7  3080               	movlw	128
   854  0EB8  00F6               	movwf	lcdPrint@a+1
   855  0EB9  120A  158A  22C9  120A  158A  	fcall	_lcdPrint
   856                           
   857                           ;main.c: 16:     _delay((unsigned long)((500)*(4000000/4000.0)));
   858  0EBE  3003               	movlw	3
   859  0EBF  1683               	bsf	3,5	;RP0=1, select bank1
   860  0EC0  1303               	bcf	3,6	;RP1=0, select bank1
   861  0EC1  00AE               	movwf	(??_main^(0+128)+2)
   862  0EC2  308A               	movlw	138
   863  0EC3  00AD               	movwf	(??_main^(0+128)+1)
   864  0EC4  3055               	movlw	85
   865  0EC5  00AC               	movwf	??_main^(0+128)
   866  0EC6                     u3697:	
   867  0EC6  0BAC               	decfsz	??_main^(0+128),f
   868  0EC7  2EC6               	goto	u3697
   869  0EC8  0BAD               	decfsz	(??_main^(0+128)+1),f
   870  0EC9  2EC6               	goto	u3697
   871  0ECA  0BAE               	decfsz	(??_main^(0+128)+2),f
   872  0ECB  2EC6               	goto	u3697
   873                           
   874                           ;main.c: 18:     initServos();
   875  0ECC  120A  158A  21B0  120A  158A  	fcall	_initServos
   876                           
   877                           ;main.c: 19:     setAngule1(0);
   878  0ED1  3000               	movlw	0
   879  0ED2  120A  158A  24E1  120A  158A  	fcall	_setAngule1
   880                           
   881                           ;main.c: 21:     unsigned int servo1, servo2 = 0;
   882  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
   883  0ED8  1303               	bcf	3,6	;RP1=0, select bank1
   884  0ED9  01B3               	clrf	main@servo2^(0+128)
   885  0EDA  01B4               	clrf	(main@servo2+1)^(0+128)
   886  0EDB                     l2538:	
   887                           
   888                           ;main.c: 23:         lcdClear();
   889  0EDB  120A  158A  2195  120A  158A  	fcall	_lcdClear
   890                           
   891                           ;main.c: 24:         servo1 = adcRead(0);
   892  0EE0  3000               	movlw	0
   893  0EE1  00F0               	movwf	adcRead@adcChannel
   894  0EE2  00F1               	movwf	adcRead@adcChannel+1
   895  0EE3  120A  158A  2211  120A  158A  	fcall	_adcRead
   896  0EE8  0871               	movf	?_adcRead+1,w
   897  0EE9  1683               	bsf	3,5	;RP0=1, select bank1
   898  0EEA  1303               	bcf	3,6	;RP1=0, select bank1
   899  0EEB  00B0               	movwf	(main@servo1+1)^(0+128)
   900  0EEC  0870               	movf	?_adcRead,w
   901  0EED  00AF               	movwf	main@servo1^(0+128)
   902                           
   903                           ;main.c: 25:         unsigned char angule1 = servo1 * 0.175953079;
   904  0EEE  082F               	movf	main@servo1^(0+128),w
   905  0EEF  00F0               	movwf	___xxtofl@val
   906  0EF0  0830               	movf	(main@servo1+1)^(0+128),w
   907  0EF1  00F1               	movwf	___xxtofl@val+1
   908  0EF2  01F2               	clrf	___xxtofl@val+2
   909  0EF3  01F3               	clrf	___xxtofl@val+3
   910  0EF4  3000               	movlw	0
   911  0EF5  120A  158A  243E  120A  158A  	fcall	___xxtofl
   912  0EFA  0873               	movf	?___xxtofl+3,w
   913  0EFB  1283               	bcf	3,5	;RP0=0, select bank0
   914  0EFC  1303               	bcf	3,6	;RP1=0, select bank0
   915  0EFD  00C1               	movwf	___flmul@a+3
   916  0EFE  0872               	movf	?___xxtofl+2,w
   917  0EFF  00C0               	movwf	___flmul@a+2
   918  0F00  0871               	movf	?___xxtofl+1,w
   919  0F01  00BF               	movwf	___flmul@a+1
   920  0F02  0870               	movf	?___xxtofl,w
   921  0F03  00BE               	movwf	___flmul@a
   922  0F04  303E               	movlw	62
   923  0F05  00BD               	movwf	___flmul@b+3
   924  0F06  3034               	movlw	52
   925  0F07  00BC               	movwf	___flmul@b+2
   926  0F08  302D               	movlw	45
   927  0F09  00BB               	movwf	___flmul@b+1
   928  0F0A  300B               	movlw	11
   929  0F0B  00BA               	movwf	___flmul@b
   930  0F0C  120A  118A  24E0  120A  158A  	fcall	___flmul
   931  0F11  1283               	bcf	3,5	;RP0=0, select bank0
   932  0F12  1303               	bcf	3,6	;RP1=0, select bank0
   933  0F13  083D               	movf	?___flmul+3,w
   934  0F14  00EB               	movwf	___fltol@f1+3
   935  0F15  083C               	movf	?___flmul+2,w
   936  0F16  00EA               	movwf	___fltol@f1+2
   937  0F17  083B               	movf	?___flmul+1,w
   938  0F18  00E9               	movwf	___fltol@f1+1
   939  0F19  083A               	movf	?___flmul,w
   940  0F1A  00E8               	movwf	___fltol@f1
   941  0F1B  120A  158A  23B1  120A  158A  	fcall	___fltol
   942  0F20  1283               	bcf	3,5	;RP0=0, select bank0
   943  0F21  1303               	bcf	3,6	;RP1=0, select bank0
   944  0F22  0868               	movf	?___fltol,w
   945  0F23  1683               	bsf	3,5	;RP0=1, select bank1
   946  0F24  1303               	bcf	3,6	;RP1=0, select bank1
   947  0F25  00AC               	movwf	??_main^(0+128)
   948  0F26  082C               	movf	??_main^(0+128),w
   949  0F27  00B1               	movwf	main@angule1^(0+128)
   950                           
   951                           ;main.c: 26:         setAngule1(angule1);
   952  0F28  0831               	movf	main@angule1^(0+128),w
   953  0F29  120A  158A  24E1  120A  158A  	fcall	_setAngule1
   954                           
   955                           ;main.c: 28:         sprintf(mensaje, "Angule S1:%d", angule1);
   956  0F2E  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   957  0F2F  1683               	bsf	3,5	;RP0=1, select bank1
   958  0F30  1303               	bcf	3,6	;RP1=0, select bank1
   959  0F31  00AC               	movwf	??_main^(0+128)
   960  0F32  082C               	movf	??_main^(0+128),w
   961  0F33  1283               	bcf	3,5	;RP0=0, select bank0
   962  0F34  1303               	bcf	3,6	;RP1=0, select bank0
   963  0F35  00A0               	movwf	sprintf@f
   964  0F36  1683               	bsf	3,5	;RP0=1, select bank1
   965  0F37  1303               	bcf	3,6	;RP1=0, select bank1
   966  0F38  0831               	movf	main@angule1^(0+128),w
   967  0F39  00AD               	movwf	(??_main+1)^(0+128)
   968  0F3A  01AE               	clrf	((??_main+1)^(0+128)+1)
   969  0F3B  082D               	movf	(??_main+1)^(0+128),w
   970  0F3C  1283               	bcf	3,5	;RP0=0, select bank0
   971  0F3D  1303               	bcf	3,6	;RP1=0, select bank0
   972  0F3E  00A1               	movwf	?_sprintf+1
   973  0F3F  1683               	bsf	3,5	;RP0=1, select bank1
   974  0F40  1303               	bcf	3,6	;RP1=0, select bank1
   975  0F41  082E               	movf	(??_main+2)^(0+128),w
   976  0F42  1283               	bcf	3,5	;RP0=0, select bank0
   977  0F43  1303               	bcf	3,6	;RP1=0, select bank0
   978  0F44  00A2               	movwf	?_sprintf+2
   979  0F45  30B5               	movlw	(low (_mensaje| 0))& (0+255)
   980  0F46  120A  118A  2036  120A  158A  	fcall	_sprintf
   981                           
   982                           ;main.c: 29:         lcdSetCursor(1, 1);
   983  0F4B  01F4               	clrf	lcdSetCursor@b
   984  0F4C  0AF4               	incf	lcdSetCursor@b,f
   985  0F4D  3001               	movlw	1
   986  0F4E  120A  158A  2306  120A  158A  	fcall	_lcdSetCursor
   987                           
   988                           ;main.c: 30:         lcdPrint(mensaje);
   989  0F53  30B5               	movlw	(low (_mensaje| 0))& (0+255)
   990  0F54  00F5               	movwf	lcdPrint@a
   991  0F55  3000               	movlw	0
   992  0F56  00F6               	movwf	lcdPrint@a+1
   993  0F57  120A  158A  22C9  120A  158A  	fcall	_lcdPrint
   994                           
   995                           ;main.c: 32:         if (RB0 == 1) {
   996  0F5C  1283               	bcf	3,5	;RP0=0, select bank0
   997  0F5D  1303               	bcf	3,6	;RP1=0, select bank0
   998  0F5E  1C06               	btfss	6,0	;volatile
   999  0F5F  2F70               	goto	l143
  1000                           
  1001                           ;main.c: 33:             if (servo2 < 1024)
  1002  0F60  3004               	movlw	4
  1003  0F61  1683               	bsf	3,5	;RP0=1, select bank1
  1004  0F62  1303               	bcf	3,6	;RP1=0, select bank1
  1005  0F63  0234               	subwf	(main@servo2+1)^(0+128),w
  1006  0F64  3000               	movlw	0
  1007  0F65  1903               	skipnz
  1008  0F66  0233               	subwf	main@servo2^(0+128),w
  1009  0F67  1803               	skipnc
  1010  0F68  2F84               	goto	l145
  1011                           
  1012                           ;main.c: 34:                 setAngule2(++servo2);
  1013  0F69  3001               	movlw	1
  1014  0F6A  07B3               	addwf	main@servo2^(0+128),f
  1015  0F6B  1803               	skipnc
  1016  0F6C  0AB4               	incf	(main@servo2+1)^(0+128),f
  1017  0F6D  3000               	movlw	0
  1018  0F6E  07B4               	addwf	(main@servo2+1)^(0+128),f
  1019  0F6F  2F7E               	goto	L1
  1020  0F70                     l143:	
  1021  0F70  1C86               	btfss	6,1	;volatile
  1022  0F71  2F84               	goto	l145
  1023                           
  1024                           ;main.c: 36:             if (servo2 > 0)
  1025  0F72  1683               	bsf	3,5	;RP0=1, select bank1
  1026  0F73  1303               	bcf	3,6	;RP1=0, select bank1
  1027  0F74  0833               	movf	main@servo2^(0+128),w
  1028  0F75  0434               	iorwf	(main@servo2+1)^(0+128),w
  1029  0F76  1903               	btfsc	3,2
  1030  0F77  2F84               	goto	l145
  1031                           
  1032                           ;main.c: 37:                 setAngule2(--servo2);
  1033  0F78  3001               	movlw	1
  1034  0F79  02B3               	subwf	main@servo2^(0+128),f
  1035  0F7A  3000               	movlw	0
  1036  0F7B  1C03               	skipc
  1037  0F7C  03B4               	decf	(main@servo2+1)^(0+128),f
  1038  0F7D  02B4               	subwf	(main@servo2+1)^(0+128),f
  1039  0F7E                     L1:	
  1040  0F7E  0833               	movf	main@servo2^(0+128),w
  1041  0F7F  120A  158A  25B7  120A  158A  	fcall	_setAngule2
  1042  0F84                     l145:	
  1043                           
  1044                           ;main.c: 39:         unsigned char angule2 = servo2 * 0.175953079;
  1045  0F84  1683               	bsf	3,5	;RP0=1, select bank1
  1046  0F85  1303               	bcf	3,6	;RP1=0, select bank1
  1047  0F86  0833               	movf	main@servo2^(0+128),w
  1048  0F87  00F0               	movwf	___xxtofl@val
  1049  0F88  0834               	movf	(main@servo2+1)^(0+128),w
  1050  0F89  00F1               	movwf	___xxtofl@val+1
  1051  0F8A  01F2               	clrf	___xxtofl@val+2
  1052  0F8B  01F3               	clrf	___xxtofl@val+3
  1053  0F8C  3000               	movlw	0
  1054  0F8D  120A  158A  243E  120A  158A  	fcall	___xxtofl
  1055  0F92  0873               	movf	?___xxtofl+3,w
  1056  0F93  1283               	bcf	3,5	;RP0=0, select bank0
  1057  0F94  1303               	bcf	3,6	;RP1=0, select bank0
  1058  0F95  00C1               	movwf	___flmul@a+3
  1059  0F96  0872               	movf	?___xxtofl+2,w
  1060  0F97  00C0               	movwf	___flmul@a+2
  1061  0F98  0871               	movf	?___xxtofl+1,w
  1062  0F99  00BF               	movwf	___flmul@a+1
  1063  0F9A  0870               	movf	?___xxtofl,w
  1064  0F9B  00BE               	movwf	___flmul@a
  1065  0F9C  303E               	movlw	62
  1066  0F9D  00BD               	movwf	___flmul@b+3
  1067  0F9E  3034               	movlw	52
  1068  0F9F  00BC               	movwf	___flmul@b+2
  1069  0FA0  302D               	movlw	45
  1070  0FA1  00BB               	movwf	___flmul@b+1
  1071  0FA2  300B               	movlw	11
  1072  0FA3  00BA               	movwf	___flmul@b
  1073  0FA4  120A  118A  24E0  120A  158A  	fcall	___flmul
  1074  0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  1075  0FAA  1303               	bcf	3,6	;RP1=0, select bank0
  1076  0FAB  083D               	movf	?___flmul+3,w
  1077  0FAC  00EB               	movwf	___fltol@f1+3
  1078  0FAD  083C               	movf	?___flmul+2,w
  1079  0FAE  00EA               	movwf	___fltol@f1+2
  1080  0FAF  083B               	movf	?___flmul+1,w
  1081  0FB0  00E9               	movwf	___fltol@f1+1
  1082  0FB1  083A               	movf	?___flmul,w
  1083  0FB2  00E8               	movwf	___fltol@f1
  1084  0FB3  120A  158A  23B1  120A  158A  	fcall	___fltol
  1085  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0FBA  0868               	movf	?___fltol,w
  1088  0FBB  1683               	bsf	3,5	;RP0=1, select bank1
  1089  0FBC  1303               	bcf	3,6	;RP1=0, select bank1
  1090  0FBD  00AC               	movwf	??_main^(0+128)
  1091  0FBE  082C               	movf	??_main^(0+128),w
  1092  0FBF  00B2               	movwf	main@angule2^(0+128)
  1093                           
  1094                           ;main.c: 40:         setAngule2(angule2);
  1095  0FC0  0832               	movf	main@angule2^(0+128),w
  1096  0FC1  120A  158A  25B7  120A  158A  	fcall	_setAngule2
  1097                           
  1098                           ;main.c: 41:         sprintf(mensaje, "Angule S2:%d", angule2);
  1099  0FC6  3018               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1100  0FC7  1683               	bsf	3,5	;RP0=1, select bank1
  1101  0FC8  1303               	bcf	3,6	;RP1=0, select bank1
  1102  0FC9  00AC               	movwf	??_main^(0+128)
  1103  0FCA  082C               	movf	??_main^(0+128),w
  1104  0FCB  1283               	bcf	3,5	;RP0=0, select bank0
  1105  0FCC  1303               	bcf	3,6	;RP1=0, select bank0
  1106  0FCD  00A0               	movwf	sprintf@f
  1107  0FCE  1683               	bsf	3,5	;RP0=1, select bank1
  1108  0FCF  1303               	bcf	3,6	;RP1=0, select bank1
  1109  0FD0  0832               	movf	main@angule2^(0+128),w
  1110  0FD1  00AD               	movwf	(??_main+1)^(0+128)
  1111  0FD2  01AE               	clrf	((??_main+1)^(0+128)+1)
  1112  0FD3  082D               	movf	(??_main+1)^(0+128),w
  1113  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  1114  0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  1115  0FD6  00A1               	movwf	?_sprintf+1
  1116  0FD7  1683               	bsf	3,5	;RP0=1, select bank1
  1117  0FD8  1303               	bcf	3,6	;RP1=0, select bank1
  1118  0FD9  082E               	movf	(??_main+2)^(0+128),w
  1119  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  1120  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  1121  0FDC  00A2               	movwf	?_sprintf+2
  1122  0FDD  30B5               	movlw	(low (_mensaje| 0))& (0+255)
  1123  0FDE  120A  118A  2036  120A  158A  	fcall	_sprintf
  1124                           
  1125                           ;main.c: 42:         lcdSetCursor(2, 1);
  1126  0FE3  01F4               	clrf	lcdSetCursor@b
  1127  0FE4  0AF4               	incf	lcdSetCursor@b,f
  1128  0FE5  3002               	movlw	2
  1129  0FE6  120A  158A  2306  120A  158A  	fcall	_lcdSetCursor
  1130                           
  1131                           ;main.c: 43:         lcdPrint(mensaje);
  1132  0FEB  30B5               	movlw	(low (_mensaje| 0))& (0+255)
  1133  0FEC  00F5               	movwf	lcdPrint@a
  1134  0FED  3000               	movlw	0
  1135  0FEE  00F6               	movwf	lcdPrint@a+1
  1136  0FEF  120A  158A  22C9  120A  158A  	fcall	_lcdPrint
  1137                           
  1138                           ;main.c: 45:         _delay((unsigned long)((50)*(4000000/4000.0)));
  1139  0FF4  3041               	movlw	65
  1140  0FF5  1683               	bsf	3,5	;RP0=1, select bank1
  1141  0FF6  1303               	bcf	3,6	;RP1=0, select bank1
  1142  0FF7  00AD               	movwf	(??_main^(0+128)+1)
  1143  0FF8  30ED               	movlw	237
  1144  0FF9  00AC               	movwf	??_main^(0+128)
  1145  0FFA                     u3707:	
  1146  0FFA  0BAC               	decfsz	??_main^(0+128),f
  1147  0FFB  2FFA               	goto	u3707
  1148  0FFC  0BAD               	decfsz	(??_main^(0+128)+1),f
  1149  0FFD  2FFA               	goto	u3707
  1150  0FFE  2FFF               	nop2
  1151  0FFF  2EDB               	goto	l2538
  1152  1000                     __end_of_main:	
  1153                           
  1154                           	psect	text1
  1155  0036                     __ptext1:	
  1156 ;; *************** function _sprintf *****************
  1157 ;; Defined at:
  1158 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;  sp              1    wreg     PTR unsigned char 
  1161 ;;		 -> mensaje(16), 
  1162 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1163 ;;		 -> STR_4(13), STR_3(13), 
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1166 ;;		 -> mensaje(16), 
  1167 ;;  tmpval          4    0        struct .
  1168 ;;  val             2    9[BANK0 ] unsigned int 
  1169 ;;  cp              2    0        PTR const unsigned char 
  1170 ;;  len             2    0        unsigned int 
  1171 ;;  c               1   12[BANK0 ] unsigned char 
  1172 ;;  prec            1    8[BANK0 ] char 
  1173 ;;  flag            1    7[BANK0 ] unsigned char 
  1174 ;;  ap              1    6[BANK0 ] PTR void [1]
  1175 ;;		 -> ?_sprintf(2), 
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  2    0[BANK0 ] int 
  1178 ;; Registers used:
  1179 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1185 ;;      Params:         0       3       0       0       0
  1186 ;;      Locals:         0       7       0       0       0
  1187 ;;      Temps:          0       3       0       0       0
  1188 ;;      Totals:         0      13       0       0       0
  1189 ;;Total ram usage:       13 bytes
  1190 ;; Hardware stack levels used:    1
  1191 ;; Hardware stack levels required when called:    1
  1192 ;; This function calls:
  1193 ;;		___lwdiv
  1194 ;;		___lwmod
  1195 ;; This function is called by:
  1196 ;;		_main
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           
  1201                           ;psect for function _sprintf
  1202  0036                     _sprintf:	
  1203                           
  1204                           ;incstack = 0
  1205                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1206                           ;sprintf@sp stored from wreg
  1207  0036  1283               	bcf	3,5	;RP0=0, select bank0
  1208  0037  1303               	bcf	3,6	;RP1=0, select bank0
  1209  0038  00AB               	movwf	sprintf@sp
  1210                           
  1211                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  1212  0039  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1213  003A  00A3               	movwf	??_sprintf
  1214  003B  0823               	movf	??_sprintf,w
  1215  003C  00A6               	movwf	sprintf@ap
  1216  003D                     l2514:	
  1217                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1218                           
  1219                           
  1220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1221  003D  3001               	movlw	1
  1222  003E  07A0               	addwf	sprintf@f,f
  1223  003F  30FF               	movlw	-1
  1224  0040  0720               	addwf	sprintf@f,w
  1225  0041  0084               	movwf	4
  1226  0042  120A  158A  200A  120A  118A  	fcall	stringdir
  1227  0047  00A3               	movwf	??_sprintf
  1228  0048  0823               	movf	??_sprintf,w
  1229  0049  00AC               	movwf	sprintf@c
  1230  004A  082C               	movf	sprintf@c,w
  1231  004B  1903               	btfsc	3,2
  1232  004C  2909               	goto	l2516
  1233                           
  1234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  1235  004D  3025               	movlw	37
  1236  004E  062C               	xorwf	sprintf@c,w
  1237  004F  1903               	btfsc	3,2
  1238  0050  285D               	goto	l2470
  1239                           
  1240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  1241  0051  082C               	movf	sprintf@c,w
  1242  0052  00A3               	movwf	??_sprintf
  1243  0053  082B               	movf	sprintf@sp,w
  1244  0054  0084               	movwf	4
  1245  0055  0823               	movf	??_sprintf,w
  1246  0056  1383               	bcf	3,7	;select IRP bank0
  1247  0057  0080               	movwf	0
  1248  0058  3001               	movlw	1
  1249  0059  00A3               	movwf	??_sprintf
  1250  005A  0823               	movf	??_sprintf,w
  1251  005B  07AB               	addwf	sprintf@sp,f
  1252                           
  1253                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  1254  005C  283D               	goto	l2514
  1255  005D                     l2470:	
  1256                           
  1257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  1258  005D  01A7               	clrf	sprintf@flag
  1259                           
  1260                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  1261  005E  3001               	movlw	1
  1262  005F  07A0               	addwf	sprintf@f,f
  1263  0060  30FF               	movlw	-1
  1264  0061  0720               	addwf	sprintf@f,w
  1265  0062  0084               	movwf	4
  1266  0063  120A  158A  200A  120A  118A  	fcall	stringdir
  1267  0068  00AC               	movwf	sprintf@c
  1268  0069  00A3               	movwf	??_sprintf
  1269  006A  01A4               	clrf	??_sprintf+1
  1270                           
  1271                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1272                           ; Switch size 1, requested type "simple"
  1273                           ; Number of cases is 1, Range of values is 0 to 0
  1274                           ; switch strategies available:
  1275                           ; Name         Instructions Cycles
  1276                           ; simple_byte            4     3 (average)
  1277                           ; direct_byte           11     8 (fixed)
  1278                           ; jumptable            260     6 (fixed)
  1279                           ;	Chosen strategy is simple_byte
  1280  006B  0824               	movf	??_sprintf+1,w
  1281  006C  3A00               	xorlw	0	; case 0
  1282  006D  1903               	skipnz
  1283  006E  2870               	goto	l2590
  1284  006F  283D               	goto	l2514
  1285  0070                     l2590:	
  1286                           
  1287                           ; Switch size 1, requested type "simple"
  1288                           ; Number of cases is 3, Range of values is 0 to 105
  1289                           ; switch strategies available:
  1290                           ; Name         Instructions Cycles
  1291                           ; simple_byte           10     6 (average)
  1292                           ; jumptable            260     6 (fixed)
  1293                           ;	Chosen strategy is simple_byte
  1294  0070  0823               	movf	??_sprintf,w
  1295  0071  3A00               	xorlw	0	; case 0
  1296  0072  1903               	skipnz
  1297  0073  2909               	goto	l2516
  1298  0074  3A64               	xorlw	100	; case 100
  1299  0075  1903               	skipnz
  1300  0076  287B               	goto	l2476
  1301  0077  3A0D               	xorlw	13	; case 105
  1302  0078  1903               	skipnz
  1303  0079  287B               	goto	l2476
  1304  007A  283D               	goto	l2514
  1305  007B                     l2476:	
  1306                           
  1307                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1308  007B  0826               	movf	sprintf@ap,w
  1309  007C  0084               	movwf	4
  1310  007D  1383               	bcf	3,7	;select IRP bank0
  1311  007E  0800               	movf	0,w
  1312  007F  00A9               	movwf	sprintf@val
  1313  0080  0A84               	incf	4,f
  1314  0081  0800               	movf	0,w
  1315  0082  00AA               	movwf	sprintf@val+1
  1316  0083  3002               	movlw	2
  1317  0084  00A3               	movwf	??_sprintf
  1318  0085  0823               	movf	??_sprintf,w
  1319  0086  07A6               	addwf	sprintf@ap,f
  1320                           
  1321                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((int)val < 0) {
  1322  0087  1FAA               	btfss	sprintf@val+1,7
  1323  0088  2892               	goto	l2486
  1324                           
  1325                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  1326  0089  3003               	movlw	3
  1327  008A  00A3               	movwf	??_sprintf
  1328  008B  0823               	movf	??_sprintf,w
  1329  008C  04A7               	iorwf	sprintf@flag,f
  1330                           
  1331                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  1332  008D  09A9               	comf	sprintf@val,f
  1333  008E  09AA               	comf	sprintf@val+1,f
  1334  008F  0AA9               	incf	sprintf@val,f
  1335  0090  1903               	skipnz
  1336  0091  0AAA               	incf	sprintf@val+1,f
  1337  0092                     l2486:	
  1338                           
  1339                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1340  0092  01AC               	clrf	sprintf@c
  1341  0093  0AAC               	incf	sprintf@c,f
  1342  0094                     l2492:	
  1343                           
  1344                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  1345  0094  082C               	movf	sprintf@c,w
  1346  0095  00A3               	movwf	??_sprintf
  1347  0096  0723               	addwf	??_sprintf,w
  1348  0097  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1349  0098  0084               	movwf	4
  1350  0099  120A  158A  200A  120A  118A  	fcall	stringdir
  1351  009E  00A4               	movwf	??_sprintf+1
  1352  009F  120A  158A  200A  120A  118A  	fcall	stringdir
  1353  00A4  00A5               	movwf	??_sprintf+2
  1354  00A5  0825               	movf	??_sprintf+2,w
  1355  00A6  022A               	subwf	sprintf@val+1,w
  1356  00A7  1D03               	skipz
  1357  00A8  28AB               	goto	u3605
  1358  00A9  0824               	movf	??_sprintf+1,w
  1359  00AA  0229               	subwf	sprintf@val,w
  1360  00AB                     u3605:	
  1361  00AB  1C03               	btfss	3,0
  1362  00AC  28B5               	goto	l2498
  1363  00AD  3001               	movlw	1
  1364  00AE  00A3               	movwf	??_sprintf
  1365  00AF  0823               	movf	??_sprintf,w
  1366  00B0  07AC               	addwf	sprintf@c,f
  1367  00B1  3005               	movlw	5
  1368  00B2  062C               	xorwf	sprintf@c,w
  1369  00B3  1D03               	btfss	3,2
  1370  00B4  2894               	goto	l2492
  1371  00B5                     l2498:	
  1372                           
  1373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  1374  00B5  0827               	movf	sprintf@flag,w
  1375  00B6  3903               	andlw	3
  1376  00B7  1903               	btfsc	3,2
  1377  00B8  28C4               	goto	l2504
  1378                           
  1379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  1380  00B9  302D               	movlw	45
  1381  00BA  00A3               	movwf	??_sprintf
  1382  00BB  082B               	movf	sprintf@sp,w
  1383  00BC  0084               	movwf	4
  1384  00BD  0823               	movf	??_sprintf,w
  1385  00BE  1383               	bcf	3,7	;select IRP bank0
  1386  00BF  0080               	movwf	0
  1387  00C0  3001               	movlw	1
  1388  00C1  00A3               	movwf	??_sprintf
  1389  00C2  0823               	movf	??_sprintf,w
  1390  00C3  07AB               	addwf	sprintf@sp,f
  1391  00C4                     l2504:	
  1392                           
  1393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1488:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  1394  00C4  082C               	movf	sprintf@c,w
  1395  00C5  00A3               	movwf	??_sprintf
  1396  00C6  0823               	movf	??_sprintf,w
  1397  00C7  00A8               	movwf	sprintf@prec
  1398  00C8                     l2512:	
  1399                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  1400                           
  1401                           
  1402                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  1403  00C8  30FF               	movlw	255
  1404  00C9  00A3               	movwf	??_sprintf
  1405  00CA  0823               	movf	??_sprintf,w
  1406  00CB  07A8               	addwf	sprintf@prec,f
  1407  00CC  0A28               	incf	sprintf@prec,w
  1408  00CD  1903               	btfsc	3,2
  1409  00CE  283D               	goto	l2514
  1410                           
  1411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  1412  00CF  300A               	movlw	10
  1413  00D0  00F8               	movwf	___lwmod@divisor
  1414  00D1  3000               	movlw	0
  1415  00D2  00F9               	movwf	___lwmod@divisor+1
  1416  00D3  0828               	movf	sprintf@prec,w
  1417  00D4  00A3               	movwf	??_sprintf
  1418  00D5  0723               	addwf	??_sprintf,w
  1419  00D6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1420  00D7  0084               	movwf	4
  1421  00D8  120A  158A  200A  120A  118A  	fcall	stringdir
  1422  00DD  00F0               	movwf	___lwdiv@divisor
  1423  00DE  120A  158A  200A  120A  118A  	fcall	stringdir
  1424  00E3  00F1               	movwf	___lwdiv@divisor+1
  1425  00E4  082A               	movf	sprintf@val+1,w
  1426  00E5  00F3               	movwf	___lwdiv@dividend+1
  1427  00E6  0829               	movf	sprintf@val,w
  1428  00E7  00F2               	movwf	___lwdiv@dividend
  1429  00E8  120A  158A  228D  120A  118A  	fcall	___lwdiv
  1430  00ED  0871               	movf	?___lwdiv+1,w
  1431  00EE  00FB               	movwf	___lwmod@dividend+1
  1432  00EF  0870               	movf	?___lwdiv,w
  1433  00F0  00FA               	movwf	___lwmod@dividend
  1434  00F1  120A  118A  2004  120A  118A  	fcall	___lwmod
  1435  00F6  0878               	movf	?___lwmod,w
  1436  00F7  3E30               	addlw	48
  1437  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1438  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1439  00FA  00A4               	movwf	??_sprintf+1
  1440  00FB  0824               	movf	??_sprintf+1,w
  1441  00FC  00AC               	movwf	sprintf@c
  1442                           
  1443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  1444  00FD  082C               	movf	sprintf@c,w
  1445  00FE  00A3               	movwf	??_sprintf
  1446  00FF  082B               	movf	sprintf@sp,w
  1447  0100  0084               	movwf	4
  1448  0101  0823               	movf	??_sprintf,w
  1449  0102  1383               	bcf	3,7	;select IRP bank0
  1450  0103  0080               	movwf	0
  1451  0104  3001               	movlw	1
  1452  0105  00A3               	movwf	??_sprintf
  1453  0106  0823               	movf	??_sprintf,w
  1454  0107  07AB               	addwf	sprintf@sp,f
  1455  0108  28C8               	goto	l2512
  1456  0109                     l2516:	
  1457                           
  1458                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  1459  0109  082B               	movf	sprintf@sp,w
  1460  010A  0084               	movwf	4
  1461  010B  1383               	bcf	3,7	;select IRP bank0
  1462  010C  0180               	clrf	0
  1463  010D  0008               	return
  1464  010E                     __end_of_sprintf:	
  1465                           
  1466                           	psect	text2
  1467  0004                     __ptext2:	
  1468 ;; *************** function ___lwmod *****************
  1469 ;; Defined at:
  1470 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  divisor         2    8[COMMON] unsigned int 
  1473 ;;  dividend        2   10[COMMON] unsigned int 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  counter         1   13[COMMON] unsigned char 
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  2    8[COMMON] unsigned int 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, status,0
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1485 ;;      Params:         4       0       0       0       0
  1486 ;;      Locals:         1       0       0       0       0
  1487 ;;      Temps:          1       0       0       0       0
  1488 ;;      Totals:         6       0       0       0       0
  1489 ;;Total ram usage:        6 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; This function calls:
  1492 ;;		Nothing
  1493 ;; This function is called by:
  1494 ;;		_sprintf
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           
  1499                           ;psect for function ___lwmod
  1500  0004                     ___lwmod:	
  1501                           
  1502                           ;incstack = 0
  1503                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1504  0004  0878               	movf	___lwmod@divisor,w
  1505  0005  0479               	iorwf	___lwmod@divisor+1,w
  1506  0006  1903               	btfsc	3,2
  1507  0007  2831               	goto	l1828
  1508  0008  01FD               	clrf	___lwmod@counter
  1509  0009  0AFD               	incf	___lwmod@counter,f
  1510  000A                     l1818:	
  1511  000A  1BF9               	btfsc	___lwmod@divisor+1,7
  1512  000B  2818               	goto	l1820
  1513  000C  3001               	movlw	1
  1514  000D                     u2135:	
  1515  000D  1003               	clrc
  1516  000E  0DF8               	rlf	___lwmod@divisor,f
  1517  000F  0DF9               	rlf	___lwmod@divisor+1,f
  1518  0010  3EFF               	addlw	-1
  1519  0011  1D03               	skipz
  1520  0012  280D               	goto	u2135
  1521  0013  3001               	movlw	1
  1522  0014  00FC               	movwf	??___lwmod
  1523  0015  087C               	movf	??___lwmod,w
  1524  0016  07FD               	addwf	___lwmod@counter,f
  1525  0017  280A               	goto	l1818
  1526  0018                     l1820:	
  1527  0018  0879               	movf	___lwmod@divisor+1,w
  1528  0019  027B               	subwf	___lwmod@dividend+1,w
  1529  001A  1D03               	skipz
  1530  001B  281E               	goto	u2155
  1531  001C  0878               	movf	___lwmod@divisor,w
  1532  001D  027A               	subwf	___lwmod@dividend,w
  1533  001E                     u2155:	
  1534  001E  1C03               	skipc
  1535  001F  2826               	goto	l1824
  1536  0020  0878               	movf	___lwmod@divisor,w
  1537  0021  02FA               	subwf	___lwmod@dividend,f
  1538  0022  0879               	movf	___lwmod@divisor+1,w
  1539  0023  1C03               	skipc
  1540  0024  03FB               	decf	___lwmod@dividend+1,f
  1541  0025  02FB               	subwf	___lwmod@dividend+1,f
  1542  0026                     l1824:	
  1543  0026  3001               	movlw	1
  1544  0027                     u2165:	
  1545  0027  1003               	clrc
  1546  0028  0CF9               	rrf	___lwmod@divisor+1,f
  1547  0029  0CF8               	rrf	___lwmod@divisor,f
  1548  002A  3EFF               	addlw	-1
  1549  002B  1D03               	skipz
  1550  002C  2827               	goto	u2165
  1551  002D  3001               	movlw	1
  1552  002E  02FD               	subwf	___lwmod@counter,f
  1553  002F  1D03               	btfss	3,2
  1554  0030  2818               	goto	l1820
  1555  0031                     l1828:	
  1556  0031  087B               	movf	___lwmod@dividend+1,w
  1557  0032  00F9               	movwf	?___lwmod+1
  1558  0033  087A               	movf	___lwmod@dividend,w
  1559  0034  00F8               	movwf	?___lwmod
  1560  0035  0008               	return
  1561  0036                     __end_of___lwmod:	
  1562                           
  1563                           	psect	text3
  1564  0A8D                     __ptext3:	
  1565 ;; *************** function ___lwdiv *****************
  1566 ;; Defined at:
  1567 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  divisor         2    0[COMMON] unsigned int 
  1570 ;;  dividend        2    2[COMMON] unsigned int 
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;  quotient        2    5[COMMON] unsigned int 
  1573 ;;  counter         1    7[COMMON] unsigned char 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  2    0[COMMON] unsigned int 
  1576 ;; Registers used:
  1577 ;;		wreg, status,2, status,0
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1583 ;;      Params:         4       0       0       0       0
  1584 ;;      Locals:         3       0       0       0       0
  1585 ;;      Temps:          1       0       0       0       0
  1586 ;;      Totals:         8       0       0       0       0
  1587 ;;Total ram usage:        8 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; This function calls:
  1590 ;;		Nothing
  1591 ;; This function is called by:
  1592 ;;		_sprintf
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           
  1597                           ;psect for function ___lwdiv
  1598  0A8D                     ___lwdiv:	
  1599                           
  1600                           ;incstack = 0
  1601                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1602  0A8D  01F5               	clrf	___lwdiv@quotient
  1603  0A8E  01F6               	clrf	___lwdiv@quotient+1
  1604  0A8F  0870               	movf	___lwdiv@divisor,w
  1605  0A90  0471               	iorwf	___lwdiv@divisor+1,w
  1606  0A91  1903               	btfsc	3,2
  1607  0A92  2AC4               	goto	l1806
  1608  0A93  01F7               	clrf	___lwdiv@counter
  1609  0A94  0AF7               	incf	___lwdiv@counter,f
  1610  0A95                     l1794:	
  1611  0A95  1BF1               	btfsc	___lwdiv@divisor+1,7
  1612  0A96  2AA3               	goto	l1796
  1613  0A97  3001               	movlw	1
  1614  0A98                     u2065:	
  1615  0A98  1003               	clrc
  1616  0A99  0DF0               	rlf	___lwdiv@divisor,f
  1617  0A9A  0DF1               	rlf	___lwdiv@divisor+1,f
  1618  0A9B  3EFF               	addlw	-1
  1619  0A9C  1D03               	skipz
  1620  0A9D  2A98               	goto	u2065
  1621  0A9E  3001               	movlw	1
  1622  0A9F  00F4               	movwf	??___lwdiv
  1623  0AA0  0874               	movf	??___lwdiv,w
  1624  0AA1  07F7               	addwf	___lwdiv@counter,f
  1625  0AA2  2A95               	goto	l1794
  1626  0AA3                     l1796:	
  1627  0AA3  3001               	movlw	1
  1628  0AA4                     u2085:	
  1629  0AA4  1003               	clrc
  1630  0AA5  0DF5               	rlf	___lwdiv@quotient,f
  1631  0AA6  0DF6               	rlf	___lwdiv@quotient+1,f
  1632  0AA7  3EFF               	addlw	-1
  1633  0AA8  1D03               	skipz
  1634  0AA9  2AA4               	goto	u2085
  1635  0AAA  0871               	movf	___lwdiv@divisor+1,w
  1636  0AAB  0273               	subwf	___lwdiv@dividend+1,w
  1637  0AAC  1D03               	skipz
  1638  0AAD  2AB0               	goto	u2095
  1639  0AAE  0870               	movf	___lwdiv@divisor,w
  1640  0AAF  0272               	subwf	___lwdiv@dividend,w
  1641  0AB0                     u2095:	
  1642  0AB0  1C03               	skipc
  1643  0AB1  2AB9               	goto	l1802
  1644  0AB2  0870               	movf	___lwdiv@divisor,w
  1645  0AB3  02F2               	subwf	___lwdiv@dividend,f
  1646  0AB4  0871               	movf	___lwdiv@divisor+1,w
  1647  0AB5  1C03               	skipc
  1648  0AB6  03F3               	decf	___lwdiv@dividend+1,f
  1649  0AB7  02F3               	subwf	___lwdiv@dividend+1,f
  1650  0AB8  1475               	bsf	___lwdiv@quotient,0
  1651  0AB9                     l1802:	
  1652  0AB9  3001               	movlw	1
  1653  0ABA                     u2105:	
  1654  0ABA  1003               	clrc
  1655  0ABB  0CF1               	rrf	___lwdiv@divisor+1,f
  1656  0ABC  0CF0               	rrf	___lwdiv@divisor,f
  1657  0ABD  3EFF               	addlw	-1
  1658  0ABE  1D03               	skipz
  1659  0ABF  2ABA               	goto	u2105
  1660  0AC0  3001               	movlw	1
  1661  0AC1  02F7               	subwf	___lwdiv@counter,f
  1662  0AC2  1D03               	btfss	3,2
  1663  0AC3  2AA3               	goto	l1796
  1664  0AC4                     l1806:	
  1665  0AC4  0876               	movf	___lwdiv@quotient+1,w
  1666  0AC5  00F1               	movwf	?___lwdiv+1
  1667  0AC6  0875               	movf	___lwdiv@quotient,w
  1668  0AC7  00F0               	movwf	?___lwdiv
  1669  0AC8  0008               	return
  1670  0AC9                     __end_of___lwdiv:	
  1671                           
  1672                           	psect	text4
  1673  0DB7                     __ptext4:	
  1674 ;; *************** function _setAngule2 *****************
  1675 ;; Defined at:
  1676 ;;		line 40 in file "./servo_pwm.h"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;  angule          1    wreg     unsigned char 
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;  angule          1    9[BANK1 ] unsigned char 
  1681 ;;  duty            2   10[BANK1 ] unsigned int 
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      void 
  1684 ;; Registers used:
  1685 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1691 ;;      Params:         0       0       0       0       0
  1692 ;;      Locals:         0       0       3       0       0
  1693 ;;      Temps:          0       0       4       0       0
  1694 ;;      Totals:         0       0       7       0       0
  1695 ;;Total ram usage:        7 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:    2
  1698 ;; This function calls:
  1699 ;;		___fladd
  1700 ;;		___fldiv
  1701 ;;		___flmul
  1702 ;;		___fltol
  1703 ;;		___xxtofl
  1704 ;; This function is called by:
  1705 ;;		_main
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           
  1710                           ;psect for function _setAngule2
  1711  0DB7                     _setAngule2:	
  1712                           
  1713                           ;incstack = 0
  1714                           ; Regs used in _setAngule2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1715                           ;setAngule2@angule stored from wreg
  1716  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  1717  0DB8  1303               	bcf	3,6	;RP1=0, select bank1
  1718  0DB9  00A9               	movwf	setAngule2@angule^(0+128)
  1719                           
  1720                           ;./servo_pwm.h: 41:     unsigned int duty = (angule*1.3944444)+251;
  1721  0DBA  0829               	movf	setAngule2@angule^(0+128),w
  1722  0DBB  00A5               	movwf	??_setAngule2^(0+128)
  1723  0DBC  01A6               	clrf	(??_setAngule2^(0+128)+1)
  1724  0DBD  01A7               	clrf	(??_setAngule2^(0+128)+2)
  1725  0DBE  01A8               	clrf	(??_setAngule2^(0+128)+3)
  1726  0DBF  0828               	movf	(??_setAngule2+3)^(0+128),w
  1727  0DC0  00F3               	movwf	___xxtofl@val+3
  1728  0DC1  0827               	movf	(??_setAngule2+2)^(0+128),w
  1729  0DC2  00F2               	movwf	___xxtofl@val+2
  1730  0DC3  0826               	movf	(??_setAngule2+1)^(0+128),w
  1731  0DC4  00F1               	movwf	___xxtofl@val+1
  1732  0DC5  0825               	movf	??_setAngule2^(0+128),w
  1733  0DC6  00F0               	movwf	___xxtofl@val
  1734  0DC7  3001               	movlw	1
  1735  0DC8  120A  158A  243E  120A  158A  	fcall	___xxtofl
  1736  0DCD  0873               	movf	?___xxtofl+3,w
  1737  0DCE  1283               	bcf	3,5	;RP0=0, select bank0
  1738  0DCF  1303               	bcf	3,6	;RP1=0, select bank0
  1739  0DD0  00C1               	movwf	___flmul@a+3
  1740  0DD1  0872               	movf	?___xxtofl+2,w
  1741  0DD2  00C0               	movwf	___flmul@a+2
  1742  0DD3  0871               	movf	?___xxtofl+1,w
  1743  0DD4  00BF               	movwf	___flmul@a+1
  1744  0DD5  0870               	movf	?___xxtofl,w
  1745  0DD6  00BE               	movwf	___flmul@a
  1746  0DD7  303F               	movlw	63
  1747  0DD8  00BD               	movwf	___flmul@b+3
  1748  0DD9  30B2               	movlw	178
  1749  0DDA  00BC               	movwf	___flmul@b+2
  1750  0DDB  307D               	movlw	125
  1751  0DDC  00BB               	movwf	___flmul@b+1
  1752  0DDD  3027               	movlw	39
  1753  0DDE  00BA               	movwf	___flmul@b
  1754  0DDF  120A  118A  24E0  120A  158A  	fcall	___flmul
  1755  0DE4  1283               	bcf	3,5	;RP0=0, select bank0
  1756  0DE5  1303               	bcf	3,6	;RP1=0, select bank0
  1757  0DE6  083D               	movf	?___flmul+3,w
  1758  0DE7  00DB               	movwf	___fladd@a+3
  1759  0DE8  083C               	movf	?___flmul+2,w
  1760  0DE9  00DA               	movwf	___fladd@a+2
  1761  0DEA  083B               	movf	?___flmul+1,w
  1762  0DEB  00D9               	movwf	___fladd@a+1
  1763  0DEC  083A               	movf	?___flmul,w
  1764  0DED  00D8               	movwf	___fladd@a
  1765  0DEE  3043               	movlw	67
  1766  0DEF  00D7               	movwf	___fladd@b+3
  1767  0DF0  307B               	movlw	123
  1768  0DF1  00D6               	movwf	___fladd@b+2
  1769  0DF2  3000               	movlw	0
  1770  0DF3  00D5               	movwf	___fladd@b+1
  1771  0DF4  3000               	movlw	0
  1772  0DF5  00D4               	movwf	___fladd@b
  1773  0DF6  120A  118A  22B1  120A  158A  	fcall	___fladd
  1774  0DFB  1283               	bcf	3,5	;RP0=0, select bank0
  1775  0DFC  1303               	bcf	3,6	;RP1=0, select bank0
  1776  0DFD  0857               	movf	?___fladd+3,w
  1777  0DFE  00EB               	movwf	___fltol@f1+3
  1778  0DFF  0856               	movf	?___fladd+2,w
  1779  0E00  00EA               	movwf	___fltol@f1+2
  1780  0E01  0855               	movf	?___fladd+1,w
  1781  0E02  00E9               	movwf	___fltol@f1+1
  1782  0E03  0854               	movf	?___fladd,w
  1783  0E04  00E8               	movwf	___fltol@f1
  1784  0E05  120A  158A  23B1  120A  158A  	fcall	___fltol
  1785  0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  1786  0E0B  1303               	bcf	3,6	;RP1=0, select bank0
  1787  0E0C  0869               	movf	?___fltol+1,w
  1788  0E0D  1683               	bsf	3,5	;RP0=1, select bank1
  1789  0E0E  1303               	bcf	3,6	;RP1=0, select bank1
  1790  0E0F  00AB               	movwf	(setAngule2@duty+1)^(0+128)
  1791  0E10  1283               	bcf	3,5	;RP0=0, select bank0
  1792  0E11  1303               	bcf	3,6	;RP1=0, select bank0
  1793  0E12  0868               	movf	?___fltol,w
  1794  0E13  1683               	bsf	3,5	;RP0=1, select bank1
  1795  0E14  1303               	bcf	3,6	;RP1=0, select bank1
  1796  0E15  00AA               	movwf	setAngule2@duty^(0+128)
  1797                           
  1798                           ;./servo_pwm.h: 42:     if (duty > 1023) return;
  1799  0E16  3004               	movlw	4
  1800  0E17  022B               	subwf	(setAngule2@duty+1)^(0+128),w
  1801  0E18  3000               	movlw	0
  1802  0E19  1903               	skipnz
  1803  0E1A  022A               	subwf	setAngule2@duty^(0+128),w
  1804  0E1B  1803               	btfsc	3,0
  1805  0E1C  0008               	return
  1806                           
  1807                           ;./servo_pwm.h: 44:     duty = ((float) duty / 1023)*(4000000 / (245 * 16));
  1808  0E1D  082A               	movf	setAngule2@duty^(0+128),w
  1809  0E1E  00F0               	movwf	___xxtofl@val
  1810  0E1F  082B               	movf	(setAngule2@duty+1)^(0+128),w
  1811  0E20  00F1               	movwf	___xxtofl@val+1
  1812  0E21  01F2               	clrf	___xxtofl@val+2
  1813  0E22  01F3               	clrf	___xxtofl@val+3
  1814  0E23  3000               	movlw	0
  1815  0E24  120A  158A  243E  120A  158A  	fcall	___xxtofl
  1816  0E29  0873               	movf	?___xxtofl+3,w
  1817  0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  1818  0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  1819  0E2C  00A7               	movwf	___fldiv@b+3
  1820  0E2D  0872               	movf	?___xxtofl+2,w
  1821  0E2E  00A6               	movwf	___fldiv@b+2
  1822  0E2F  0871               	movf	?___xxtofl+1,w
  1823  0E30  00A5               	movwf	___fldiv@b+1
  1824  0E31  0870               	movf	?___xxtofl,w
  1825  0E32  00A4               	movwf	___fldiv@b
  1826  0E33  3044               	movlw	68
  1827  0E34  00A3               	movwf	___fldiv@a+3
  1828  0E35  307F               	movlw	127
  1829  0E36  00A2               	movwf	___fldiv@a+2
  1830  0E37  30C0               	movlw	192
  1831  0E38  00A1               	movwf	___fldiv@a+1
  1832  0E39  3000               	movlw	0
  1833  0E3A  00A0               	movwf	___fldiv@a
  1834  0E3B  120A  118A  210E  120A  158A  	fcall	___fldiv
  1835  0E40  1283               	bcf	3,5	;RP0=0, select bank0
  1836  0E41  1303               	bcf	3,6	;RP1=0, select bank0
  1837  0E42  0823               	movf	?___fldiv+3,w
  1838  0E43  00C1               	movwf	___flmul@a+3
  1839  0E44  0822               	movf	?___fldiv+2,w
  1840  0E45  00C0               	movwf	___flmul@a+2
  1841  0E46  0821               	movf	?___fldiv+1,w
  1842  0E47  00BF               	movwf	___flmul@a+1
  1843  0E48  0820               	movf	?___fldiv,w
  1844  0E49  00BE               	movwf	___flmul@a
  1845  0E4A  3044               	movlw	68
  1846  0E4B  00BD               	movwf	___flmul@b+3
  1847  0E4C  307F               	movlw	127
  1848  0E4D  00BC               	movwf	___flmul@b+2
  1849  0E4E  3000               	movlw	0
  1850  0E4F  00BB               	movwf	___flmul@b+1
  1851  0E50  3000               	movlw	0
  1852  0E51  00BA               	movwf	___flmul@b
  1853  0E52  120A  118A  24E0  120A  158A  	fcall	___flmul
  1854  0E57  1283               	bcf	3,5	;RP0=0, select bank0
  1855  0E58  1303               	bcf	3,6	;RP1=0, select bank0
  1856  0E59  083D               	movf	?___flmul+3,w
  1857  0E5A  00EB               	movwf	___fltol@f1+3
  1858  0E5B  083C               	movf	?___flmul+2,w
  1859  0E5C  00EA               	movwf	___fltol@f1+2
  1860  0E5D  083B               	movf	?___flmul+1,w
  1861  0E5E  00E9               	movwf	___fltol@f1+1
  1862  0E5F  083A               	movf	?___flmul,w
  1863  0E60  00E8               	movwf	___fltol@f1
  1864  0E61  120A  158A  23B1  120A  158A  	fcall	___fltol
  1865  0E66  1283               	bcf	3,5	;RP0=0, select bank0
  1866  0E67  1303               	bcf	3,6	;RP1=0, select bank0
  1867  0E68  0869               	movf	?___fltol+1,w
  1868  0E69  1683               	bsf	3,5	;RP0=1, select bank1
  1869  0E6A  1303               	bcf	3,6	;RP1=0, select bank1
  1870  0E6B  00AB               	movwf	(setAngule2@duty+1)^(0+128)
  1871  0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  1872  0E6D  1303               	bcf	3,6	;RP1=0, select bank0
  1873  0E6E  0868               	movf	?___fltol,w
  1874  0E6F  1683               	bsf	3,5	;RP0=1, select bank1
  1875  0E70  1303               	bcf	3,6	;RP1=0, select bank1
  1876  0E71  00AA               	movwf	setAngule2@duty^(0+128)
  1877                           
  1878                           ;./servo_pwm.h: 45:     CCP2X = duty & 0x01;
  1879  0E72  1C2A               	btfss	setAngule2@duty^(0+128),0
  1880  0E73  2E78               	goto	u3560
  1881  0E74  1283               	bcf	3,5	;RP0=0, select bank0
  1882  0E75  1303               	bcf	3,6	;RP1=0, select bank0
  1883  0E76  169D               	bsf	29,5	;volatile
  1884  0E77  2E7B               	goto	l2458
  1885  0E78                     u3560:	
  1886  0E78  1283               	bcf	3,5	;RP0=0, select bank0
  1887  0E79  1303               	bcf	3,6	;RP1=0, select bank0
  1888  0E7A  129D               	bcf	29,5	;volatile
  1889  0E7B                     l2458:	
  1890                           
  1891                           ;./servo_pwm.h: 46:     CCP2Y = duty & 0x02;
  1892  0E7B  121D               	bcf	29,4	;volatile
  1893                           
  1894                           ;./servo_pwm.h: 47:     CCPR2L = duty >> 2;
  1895  0E7C  1683               	bsf	3,5	;RP0=1, select bank1
  1896  0E7D  1303               	bcf	3,6	;RP1=0, select bank1
  1897  0E7E  082B               	movf	(setAngule2@duty+1)^(0+128),w
  1898  0E7F  00A6               	movwf	(??_setAngule2^(0+128)+1)
  1899  0E80  082A               	movf	setAngule2@duty^(0+128),w
  1900  0E81  00A5               	movwf	??_setAngule2^(0+128)
  1901  0E82  1003               	clrc
  1902  0E83  0CA6               	rrf	(??_setAngule2^(0+128)+1),f
  1903  0E84  0CA5               	rrf	??_setAngule2^(0+128),f
  1904  0E85  1003               	clrc
  1905  0E86  0CA6               	rrf	(??_setAngule2^(0+128)+1),f
  1906  0E87  0CA5               	rrf	??_setAngule2^(0+128),f
  1907  0E88  0825               	movf	??_setAngule2^(0+128),w
  1908  0E89  1283               	bcf	3,5	;RP0=0, select bank0
  1909  0E8A  1303               	bcf	3,6	;RP1=0, select bank0
  1910  0E8B  009B               	movwf	27	;volatile
  1911  0E8C  0008               	return
  1912  0E8D                     __end_of_setAngule2:	
  1913                           
  1914                           	psect	text5
  1915  0CE1                     __ptext5:	
  1916 ;; *************** function _setAngule1 *****************
  1917 ;; Defined at:
  1918 ;;		line 31 in file "./servo_pwm.h"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;  angule          1    wreg     unsigned char 
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;  angule          1    9[BANK1 ] unsigned char 
  1923 ;;  duty            2   10[BANK1 ] unsigned int 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      void 
  1926 ;; Registers used:
  1927 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1933 ;;      Params:         0       0       0       0       0
  1934 ;;      Locals:         0       0       3       0       0
  1935 ;;      Temps:          0       0       4       0       0
  1936 ;;      Totals:         0       0       7       0       0
  1937 ;;Total ram usage:        7 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; Hardware stack levels required when called:    2
  1940 ;; This function calls:
  1941 ;;		___fladd
  1942 ;;		___fldiv
  1943 ;;		___flmul
  1944 ;;		___fltol
  1945 ;;		___xxtofl
  1946 ;; This function is called by:
  1947 ;;		_main
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           
  1952                           ;psect for function _setAngule1
  1953  0CE1                     _setAngule1:	
  1954                           
  1955                           ;incstack = 0
  1956                           ; Regs used in _setAngule1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1957                           ;setAngule1@angule stored from wreg
  1958  0CE1  1683               	bsf	3,5	;RP0=1, select bank1
  1959  0CE2  1303               	bcf	3,6	;RP1=0, select bank1
  1960  0CE3  00A9               	movwf	setAngule1@angule^(0+128)
  1961                           
  1962                           ;./servo_pwm.h: 32:     unsigned int duty = (angule*1.3944444)+251;
  1963  0CE4  0829               	movf	setAngule1@angule^(0+128),w
  1964  0CE5  00A5               	movwf	??_setAngule1^(0+128)
  1965  0CE6  01A6               	clrf	(??_setAngule1^(0+128)+1)
  1966  0CE7  01A7               	clrf	(??_setAngule1^(0+128)+2)
  1967  0CE8  01A8               	clrf	(??_setAngule1^(0+128)+3)
  1968  0CE9  0828               	movf	(??_setAngule1+3)^(0+128),w
  1969  0CEA  00F3               	movwf	___xxtofl@val+3
  1970  0CEB  0827               	movf	(??_setAngule1+2)^(0+128),w
  1971  0CEC  00F2               	movwf	___xxtofl@val+2
  1972  0CED  0826               	movf	(??_setAngule1+1)^(0+128),w
  1973  0CEE  00F1               	movwf	___xxtofl@val+1
  1974  0CEF  0825               	movf	??_setAngule1^(0+128),w
  1975  0CF0  00F0               	movwf	___xxtofl@val
  1976  0CF1  3001               	movlw	1
  1977  0CF2  120A  158A  243E  120A  158A  	fcall	___xxtofl
  1978  0CF7  0873               	movf	?___xxtofl+3,w
  1979  0CF8  1283               	bcf	3,5	;RP0=0, select bank0
  1980  0CF9  1303               	bcf	3,6	;RP1=0, select bank0
  1981  0CFA  00C1               	movwf	___flmul@a+3
  1982  0CFB  0872               	movf	?___xxtofl+2,w
  1983  0CFC  00C0               	movwf	___flmul@a+2
  1984  0CFD  0871               	movf	?___xxtofl+1,w
  1985  0CFE  00BF               	movwf	___flmul@a+1
  1986  0CFF  0870               	movf	?___xxtofl,w
  1987  0D00  00BE               	movwf	___flmul@a
  1988  0D01  303F               	movlw	63
  1989  0D02  00BD               	movwf	___flmul@b+3
  1990  0D03  30B2               	movlw	178
  1991  0D04  00BC               	movwf	___flmul@b+2
  1992  0D05  307D               	movlw	125
  1993  0D06  00BB               	movwf	___flmul@b+1
  1994  0D07  3027               	movlw	39
  1995  0D08  00BA               	movwf	___flmul@b
  1996  0D09  120A  118A  24E0  120A  158A  	fcall	___flmul
  1997  0D0E  1283               	bcf	3,5	;RP0=0, select bank0
  1998  0D0F  1303               	bcf	3,6	;RP1=0, select bank0
  1999  0D10  083D               	movf	?___flmul+3,w
  2000  0D11  00DB               	movwf	___fladd@a+3
  2001  0D12  083C               	movf	?___flmul+2,w
  2002  0D13  00DA               	movwf	___fladd@a+2
  2003  0D14  083B               	movf	?___flmul+1,w
  2004  0D15  00D9               	movwf	___fladd@a+1
  2005  0D16  083A               	movf	?___flmul,w
  2006  0D17  00D8               	movwf	___fladd@a
  2007  0D18  3043               	movlw	67
  2008  0D19  00D7               	movwf	___fladd@b+3
  2009  0D1A  307B               	movlw	123
  2010  0D1B  00D6               	movwf	___fladd@b+2
  2011  0D1C  3000               	movlw	0
  2012  0D1D  00D5               	movwf	___fladd@b+1
  2013  0D1E  3000               	movlw	0
  2014  0D1F  00D4               	movwf	___fladd@b
  2015  0D20  120A  118A  22B1  120A  158A  	fcall	___fladd
  2016  0D25  1283               	bcf	3,5	;RP0=0, select bank0
  2017  0D26  1303               	bcf	3,6	;RP1=0, select bank0
  2018  0D27  0857               	movf	?___fladd+3,w
  2019  0D28  00EB               	movwf	___fltol@f1+3
  2020  0D29  0856               	movf	?___fladd+2,w
  2021  0D2A  00EA               	movwf	___fltol@f1+2
  2022  0D2B  0855               	movf	?___fladd+1,w
  2023  0D2C  00E9               	movwf	___fltol@f1+1
  2024  0D2D  0854               	movf	?___fladd,w
  2025  0D2E  00E8               	movwf	___fltol@f1
  2026  0D2F  120A  158A  23B1  120A  158A  	fcall	___fltol
  2027  0D34  1283               	bcf	3,5	;RP0=0, select bank0
  2028  0D35  1303               	bcf	3,6	;RP1=0, select bank0
  2029  0D36  0869               	movf	?___fltol+1,w
  2030  0D37  1683               	bsf	3,5	;RP0=1, select bank1
  2031  0D38  1303               	bcf	3,6	;RP1=0, select bank1
  2032  0D39  00AB               	movwf	(setAngule1@duty+1)^(0+128)
  2033  0D3A  1283               	bcf	3,5	;RP0=0, select bank0
  2034  0D3B  1303               	bcf	3,6	;RP1=0, select bank0
  2035  0D3C  0868               	movf	?___fltol,w
  2036  0D3D  1683               	bsf	3,5	;RP0=1, select bank1
  2037  0D3E  1303               	bcf	3,6	;RP1=0, select bank1
  2038  0D3F  00AA               	movwf	setAngule1@duty^(0+128)
  2039                           
  2040                           ;./servo_pwm.h: 33:     if (duty > 1023) return;
  2041  0D40  3004               	movlw	4
  2042  0D41  022B               	subwf	(setAngule1@duty+1)^(0+128),w
  2043  0D42  3000               	movlw	0
  2044  0D43  1903               	skipnz
  2045  0D44  022A               	subwf	setAngule1@duty^(0+128),w
  2046  0D45  1803               	btfsc	3,0
  2047  0D46  0008               	return
  2048                           
  2049                           ;./servo_pwm.h: 34:     duty = ((float) duty / 1023)*(4000000 / (245 * 16));
  2050  0D47  082A               	movf	setAngule1@duty^(0+128),w
  2051  0D48  00F0               	movwf	___xxtofl@val
  2052  0D49  082B               	movf	(setAngule1@duty+1)^(0+128),w
  2053  0D4A  00F1               	movwf	___xxtofl@val+1
  2054  0D4B  01F2               	clrf	___xxtofl@val+2
  2055  0D4C  01F3               	clrf	___xxtofl@val+3
  2056  0D4D  3000               	movlw	0
  2057  0D4E  120A  158A  243E  120A  158A  	fcall	___xxtofl
  2058  0D53  0873               	movf	?___xxtofl+3,w
  2059  0D54  1283               	bcf	3,5	;RP0=0, select bank0
  2060  0D55  1303               	bcf	3,6	;RP1=0, select bank0
  2061  0D56  00A7               	movwf	___fldiv@b+3
  2062  0D57  0872               	movf	?___xxtofl+2,w
  2063  0D58  00A6               	movwf	___fldiv@b+2
  2064  0D59  0871               	movf	?___xxtofl+1,w
  2065  0D5A  00A5               	movwf	___fldiv@b+1
  2066  0D5B  0870               	movf	?___xxtofl,w
  2067  0D5C  00A4               	movwf	___fldiv@b
  2068  0D5D  3044               	movlw	68
  2069  0D5E  00A3               	movwf	___fldiv@a+3
  2070  0D5F  307F               	movlw	127
  2071  0D60  00A2               	movwf	___fldiv@a+2
  2072  0D61  30C0               	movlw	192
  2073  0D62  00A1               	movwf	___fldiv@a+1
  2074  0D63  3000               	movlw	0
  2075  0D64  00A0               	movwf	___fldiv@a
  2076  0D65  120A  118A  210E  120A  158A  	fcall	___fldiv
  2077  0D6A  1283               	bcf	3,5	;RP0=0, select bank0
  2078  0D6B  1303               	bcf	3,6	;RP1=0, select bank0
  2079  0D6C  0823               	movf	?___fldiv+3,w
  2080  0D6D  00C1               	movwf	___flmul@a+3
  2081  0D6E  0822               	movf	?___fldiv+2,w
  2082  0D6F  00C0               	movwf	___flmul@a+2
  2083  0D70  0821               	movf	?___fldiv+1,w
  2084  0D71  00BF               	movwf	___flmul@a+1
  2085  0D72  0820               	movf	?___fldiv,w
  2086  0D73  00BE               	movwf	___flmul@a
  2087  0D74  3044               	movlw	68
  2088  0D75  00BD               	movwf	___flmul@b+3
  2089  0D76  307F               	movlw	127
  2090  0D77  00BC               	movwf	___flmul@b+2
  2091  0D78  3000               	movlw	0
  2092  0D79  00BB               	movwf	___flmul@b+1
  2093  0D7A  3000               	movlw	0
  2094  0D7B  00BA               	movwf	___flmul@b
  2095  0D7C  120A  118A  24E0  120A  158A  	fcall	___flmul
  2096  0D81  1283               	bcf	3,5	;RP0=0, select bank0
  2097  0D82  1303               	bcf	3,6	;RP1=0, select bank0
  2098  0D83  083D               	movf	?___flmul+3,w
  2099  0D84  00EB               	movwf	___fltol@f1+3
  2100  0D85  083C               	movf	?___flmul+2,w
  2101  0D86  00EA               	movwf	___fltol@f1+2
  2102  0D87  083B               	movf	?___flmul+1,w
  2103  0D88  00E9               	movwf	___fltol@f1+1
  2104  0D89  083A               	movf	?___flmul,w
  2105  0D8A  00E8               	movwf	___fltol@f1
  2106  0D8B  120A  158A  23B1  120A  158A  	fcall	___fltol
  2107  0D90  1283               	bcf	3,5	;RP0=0, select bank0
  2108  0D91  1303               	bcf	3,6	;RP1=0, select bank0
  2109  0D92  0869               	movf	?___fltol+1,w
  2110  0D93  1683               	bsf	3,5	;RP0=1, select bank1
  2111  0D94  1303               	bcf	3,6	;RP1=0, select bank1
  2112  0D95  00AB               	movwf	(setAngule1@duty+1)^(0+128)
  2113  0D96  1283               	bcf	3,5	;RP0=0, select bank0
  2114  0D97  1303               	bcf	3,6	;RP1=0, select bank0
  2115  0D98  0868               	movf	?___fltol,w
  2116  0D99  1683               	bsf	3,5	;RP0=1, select bank1
  2117  0D9A  1303               	bcf	3,6	;RP1=0, select bank1
  2118  0D9B  00AA               	movwf	setAngule1@duty^(0+128)
  2119                           
  2120                           ;./servo_pwm.h: 35:     CCP1X = duty & 0x01;
  2121  0D9C  1C2A               	btfss	setAngule1@duty^(0+128),0
  2122  0D9D  2DA2               	goto	u3530
  2123  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  2124  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  2125  0DA0  1697               	bsf	23,5	;volatile
  2126  0DA1  2DA5               	goto	l2444
  2127  0DA2                     u3530:	
  2128  0DA2  1283               	bcf	3,5	;RP0=0, select bank0
  2129  0DA3  1303               	bcf	3,6	;RP1=0, select bank0
  2130  0DA4  1297               	bcf	23,5	;volatile
  2131  0DA5                     l2444:	
  2132                           
  2133                           ;./servo_pwm.h: 36:     CCP1Y = duty & 0x02;
  2134  0DA5  1217               	bcf	23,4	;volatile
  2135                           
  2136                           ;./servo_pwm.h: 37:     CCPR1L = duty >> 2;
  2137  0DA6  1683               	bsf	3,5	;RP0=1, select bank1
  2138  0DA7  1303               	bcf	3,6	;RP1=0, select bank1
  2139  0DA8  082B               	movf	(setAngule1@duty+1)^(0+128),w
  2140  0DA9  00A6               	movwf	(??_setAngule1^(0+128)+1)
  2141  0DAA  082A               	movf	setAngule1@duty^(0+128),w
  2142  0DAB  00A5               	movwf	??_setAngule1^(0+128)
  2143  0DAC  1003               	clrc
  2144  0DAD  0CA6               	rrf	(??_setAngule1^(0+128)+1),f
  2145  0DAE  0CA5               	rrf	??_setAngule1^(0+128),f
  2146  0DAF  1003               	clrc
  2147  0DB0  0CA6               	rrf	(??_setAngule1^(0+128)+1),f
  2148  0DB1  0CA5               	rrf	??_setAngule1^(0+128),f
  2149  0DB2  0825               	movf	??_setAngule1^(0+128),w
  2150  0DB3  1283               	bcf	3,5	;RP0=0, select bank0
  2151  0DB4  1303               	bcf	3,6	;RP1=0, select bank0
  2152  0DB5  0095               	movwf	21	;volatile
  2153  0DB6  0008               	return
  2154  0DB7                     __end_of_setAngule1:	
  2155                           
  2156                           	psect	text6
  2157  0C3E                     __ptext6:	
  2158 ;; *************** function ___xxtofl *****************
  2159 ;; Defined at:
  2160 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  sign            1    wreg     unsigned char 
  2163 ;;  val             4    0[COMMON] long 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  sign            1    8[COMMON] unsigned char 
  2166 ;;  arg             4   10[COMMON] unsigned long 
  2167 ;;  exp             1    9[COMMON] unsigned char 
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  4    0[COMMON] unsigned char 
  2170 ;; Registers used:
  2171 ;;		wreg, status,2, status,0
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2177 ;;      Params:         4       0       0       0       0
  2178 ;;      Locals:         6       0       0       0       0
  2179 ;;      Temps:          4       0       0       0       0
  2180 ;;      Totals:        14       0       0       0       0
  2181 ;;Total ram usage:       14 bytes
  2182 ;; Hardware stack levels used:    1
  2183 ;; This function calls:
  2184 ;;		Nothing
  2185 ;; This function is called by:
  2186 ;;		_setAngule1
  2187 ;;		_setAngule2
  2188 ;;		_main
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           
  2193                           ;psect for function ___xxtofl
  2194  0C3E                     ___xxtofl:	
  2195                           
  2196                           ;incstack = 0
  2197                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2198                           ;___xxtofl@sign stored from wreg
  2199  0C3E  00F8               	movwf	___xxtofl@sign
  2200  0C3F  0878               	movf	___xxtofl@sign,w
  2201  0C40  1D03               	btfss	3,2
  2202  0C41  1FF3               	btfss	___xxtofl@val+3,7
  2203  0C42  2C53               	goto	l2314
  2204  0C43  0970               	comf	___xxtofl@val,w
  2205  0C44  00FA               	movwf	___xxtofl@arg
  2206  0C45  0971               	comf	___xxtofl@val+1,w
  2207  0C46  00FB               	movwf	___xxtofl@arg+1
  2208  0C47  0972               	comf	___xxtofl@val+2,w
  2209  0C48  00FC               	movwf	___xxtofl@arg+2
  2210  0C49  0973               	comf	___xxtofl@val+3,w
  2211  0C4A  00FD               	movwf	___xxtofl@arg+3
  2212  0C4B  0AFA               	incf	___xxtofl@arg,f
  2213  0C4C  1903               	skipnz
  2214  0C4D  0AFB               	incf	___xxtofl@arg+1,f
  2215  0C4E  1903               	skipnz
  2216  0C4F  0AFC               	incf	___xxtofl@arg+2,f
  2217  0C50  1903               	skipnz
  2218  0C51  0AFD               	incf	___xxtofl@arg+3,f
  2219  0C52  2C5B               	goto	l691
  2220  0C53                     l2314:	
  2221  0C53  0873               	movf	___xxtofl@val+3,w
  2222  0C54  00FD               	movwf	___xxtofl@arg+3
  2223  0C55  0872               	movf	___xxtofl@val+2,w
  2224  0C56  00FC               	movwf	___xxtofl@arg+2
  2225  0C57  0871               	movf	___xxtofl@val+1,w
  2226  0C58  00FB               	movwf	___xxtofl@arg+1
  2227  0C59  0870               	movf	___xxtofl@val,w
  2228  0C5A  00FA               	movwf	___xxtofl@arg
  2229  0C5B                     l691:	
  2230  0C5B  0873               	movf	___xxtofl@val+3,w
  2231  0C5C  0472               	iorwf	___xxtofl@val+2,w
  2232  0C5D  0471               	iorwf	___xxtofl@val+1,w
  2233  0C5E  0470               	iorwf	___xxtofl@val,w
  2234  0C5F  1D03               	skipz
  2235  0C60  2C6A               	goto	l2320
  2236  0C61  3000               	movlw	0
  2237  0C62  00F3               	movwf	?___xxtofl+3
  2238  0C63  3000               	movlw	0
  2239  0C64  00F2               	movwf	?___xxtofl+2
  2240  0C65  3000               	movlw	0
  2241  0C66  00F1               	movwf	?___xxtofl+1
  2242  0C67  3000               	movlw	0
  2243  0C68  00F0               	movwf	?___xxtofl
  2244  0C69  0008               	return
  2245  0C6A                     l2320:	
  2246  0C6A  3096               	movlw	150
  2247  0C6B  00F4               	movwf	??___xxtofl
  2248  0C6C  0874               	movf	??___xxtofl,w
  2249  0C6D  00F9               	movwf	___xxtofl@exp
  2250  0C6E                     l2324:	
  2251  0C6E  30FE               	movlw	254
  2252  0C6F  057D               	andwf	___xxtofl@arg+3,w
  2253  0C70  1903               	btfsc	3,2
  2254  0C71  2C9B               	goto	l697
  2255  0C72  3001               	movlw	1
  2256  0C73  00F4               	movwf	??___xxtofl
  2257  0C74  0874               	movf	??___xxtofl,w
  2258  0C75  07F9               	addwf	___xxtofl@exp,f
  2259  0C76  3001               	movlw	1
  2260  0C77                     u3335:	
  2261  0C77  1003               	clrc
  2262  0C78  0CFD               	rrf	___xxtofl@arg+3,f
  2263  0C79  0CFC               	rrf	___xxtofl@arg+2,f
  2264  0C7A  0CFB               	rrf	___xxtofl@arg+1,f
  2265  0C7B  0CFA               	rrf	___xxtofl@arg,f
  2266  0C7C  3EFF               	addlw	-1
  2267  0C7D  1D03               	skipz
  2268  0C7E  2C77               	goto	u3335
  2269  0C7F  2C6E               	goto	l2324
  2270  0C80                     l2326:	
  2271  0C80  3001               	movlw	1
  2272  0C81  00F4               	movwf	??___xxtofl
  2273  0C82  0874               	movf	??___xxtofl,w
  2274  0C83  07F9               	addwf	___xxtofl@exp,f
  2275  0C84  3001               	movlw	1
  2276  0C85  07FA               	addwf	___xxtofl@arg,f
  2277  0C86  3000               	movlw	0
  2278  0C87  1803               	skipnc
  2279  0C88  3001               	movlw	1
  2280  0C89  07FB               	addwf	___xxtofl@arg+1,f
  2281  0C8A  3000               	movlw	0
  2282  0C8B  1803               	skipnc
  2283  0C8C  3001               	movlw	1
  2284  0C8D  07FC               	addwf	___xxtofl@arg+2,f
  2285  0C8E  3000               	movlw	0
  2286  0C8F  1803               	skipnc
  2287  0C90  3001               	movlw	1
  2288  0C91  07FD               	addwf	___xxtofl@arg+3,f
  2289  0C92  3001               	movlw	1
  2290  0C93                     u3355:	
  2291  0C93  1003               	clrc
  2292  0C94  0CFD               	rrf	___xxtofl@arg+3,f
  2293  0C95  0CFC               	rrf	___xxtofl@arg+2,f
  2294  0C96  0CFB               	rrf	___xxtofl@arg+1,f
  2295  0C97  0CFA               	rrf	___xxtofl@arg,f
  2296  0C98  3EFF               	addlw	-1
  2297  0C99  1D03               	skipz
  2298  0C9A  2C93               	goto	u3355
  2299  0C9B                     l697:	
  2300  0C9B  30FF               	movlw	255
  2301  0C9C  057D               	andwf	___xxtofl@arg+3,w
  2302  0C9D  1903               	btfsc	3,2
  2303  0C9E  2CAF               	goto	l2334
  2304  0C9F  2C80               	goto	l2326
  2305  0CA0                     l2336:	
  2306  0CA0  3002               	movlw	2
  2307  0CA1  0279               	subwf	___xxtofl@exp,w
  2308  0CA2  1C03               	btfss	3,0
  2309  0CA3  2CB1               	goto	l704
  2310  0CA4  3001               	movlw	1
  2311  0CA5  02F9               	subwf	___xxtofl@exp,f
  2312  0CA6  3001               	movlw	1
  2313  0CA7  00F4               	movwf	??___xxtofl
  2314  0CA8                     u3375:	
  2315  0CA8  1003               	clrc
  2316  0CA9  0DFA               	rlf	___xxtofl@arg,f
  2317  0CAA  0DFB               	rlf	___xxtofl@arg+1,f
  2318  0CAB  0DFC               	rlf	___xxtofl@arg+2,f
  2319  0CAC  0DFD               	rlf	___xxtofl@arg+3,f
  2320  0CAD  0BF4               	decfsz	??___xxtofl,f
  2321  0CAE  2CA8               	goto	u3375
  2322  0CAF                     l2334:	
  2323  0CAF  1FFC               	btfss	___xxtofl@arg+2,7
  2324  0CB0  2CA0               	goto	l2336
  2325  0CB1                     l704:	
  2326  0CB1  1879               	btfsc	___xxtofl@exp,0
  2327  0CB2  2CBB               	goto	l705
  2328  0CB3  30FF               	movlw	255
  2329  0CB4  05FA               	andwf	___xxtofl@arg,f
  2330  0CB5  30FF               	movlw	255
  2331  0CB6  05FB               	andwf	___xxtofl@arg+1,f
  2332  0CB7  307F               	movlw	127
  2333  0CB8  05FC               	andwf	___xxtofl@arg+2,f
  2334  0CB9  30FF               	movlw	255
  2335  0CBA  05FD               	andwf	___xxtofl@arg+3,f
  2336  0CBB                     l705:	
  2337  0CBB  1003               	clrc
  2338  0CBC  0CF9               	rrf	___xxtofl@exp,f
  2339  0CBD  0879               	movf	___xxtofl@exp,w
  2340  0CBE  00F4               	movwf	??___xxtofl
  2341  0CBF  01F5               	clrf	??___xxtofl+1
  2342  0CC0  01F6               	clrf	??___xxtofl+2
  2343  0CC1  01F7               	clrf	??___xxtofl+3
  2344  0CC2  3018               	movlw	24
  2345  0CC3                     u3415:	
  2346  0CC3  1003               	clrc
  2347  0CC4  0DF4               	rlf	??___xxtofl,f
  2348  0CC5  0DF5               	rlf	??___xxtofl+1,f
  2349  0CC6  0DF6               	rlf	??___xxtofl+2,f
  2350  0CC7  0DF7               	rlf	??___xxtofl+3,f
  2351  0CC8  3EFF               	addlw	-1
  2352  0CC9  1D03               	skipz
  2353  0CCA  2CC3               	goto	u3415
  2354  0CCB  0874               	movf	??___xxtofl,w
  2355  0CCC  04FA               	iorwf	___xxtofl@arg,f
  2356  0CCD  0875               	movf	??___xxtofl+1,w
  2357  0CCE  04FB               	iorwf	___xxtofl@arg+1,f
  2358  0CCF  0876               	movf	??___xxtofl+2,w
  2359  0CD0  04FC               	iorwf	___xxtofl@arg+2,f
  2360  0CD1  0877               	movf	??___xxtofl+3,w
  2361  0CD2  04FD               	iorwf	___xxtofl@arg+3,f
  2362  0CD3  0878               	movf	___xxtofl@sign,w
  2363  0CD4  1D03               	btfss	3,2
  2364  0CD5  1FF3               	btfss	___xxtofl@val+3,7
  2365  0CD6  2CD8               	goto	l2348
  2366  0CD7  17FD               	bsf	___xxtofl@arg+3,7
  2367  0CD8                     l2348:	
  2368  0CD8  087D               	movf	___xxtofl@arg+3,w
  2369  0CD9  00F3               	movwf	?___xxtofl+3
  2370  0CDA  087C               	movf	___xxtofl@arg+2,w
  2371  0CDB  00F2               	movwf	?___xxtofl+2
  2372  0CDC  087B               	movf	___xxtofl@arg+1,w
  2373  0CDD  00F1               	movwf	?___xxtofl+1
  2374  0CDE  087A               	movf	___xxtofl@arg,w
  2375  0CDF  00F0               	movwf	?___xxtofl
  2376  0CE0  0008               	return
  2377  0CE1                     __end_of___xxtofl:	
  2378                           
  2379                           	psect	text7
  2380  0BB1                     __ptext7:	
  2381 ;; *************** function ___fltol *****************
  2382 ;; Defined at:
  2383 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;  f1              4   72[BANK0 ] unsigned char 
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;  exp1            1   77[BANK0 ] unsigned char 
  2388 ;;  sign1           1   76[BANK0 ] unsigned char 
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  4   72[BANK0 ] long 
  2391 ;; Registers used:
  2392 ;;		wreg, status,2, status,0
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2398 ;;      Params:         0       4       0       0       0
  2399 ;;      Locals:         0       2       0       0       0
  2400 ;;      Temps:          0       0       5       0       0
  2401 ;;      Totals:         0       6       5       0       0
  2402 ;;Total ram usage:       11 bytes
  2403 ;; Hardware stack levels used:    1
  2404 ;; This function calls:
  2405 ;;		Nothing
  2406 ;; This function is called by:
  2407 ;;		_setAngule1
  2408 ;;		_setAngule2
  2409 ;;		_main
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           
  2414                           ;psect for function ___fltol
  2415  0BB1                     ___fltol:	
  2416                           
  2417                           ;incstack = 0
  2418                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2419  0BB1  1003               	clrc
  2420  0BB2  1283               	bcf	3,5	;RP0=0, select bank0
  2421  0BB3  1303               	bcf	3,6	;RP1=0, select bank0
  2422  0BB4  0D6A               	rlf	___fltol@f1+2,w
  2423  0BB5  0D6B               	rlf	___fltol@f1+3,w
  2424  0BB6  1683               	bsf	3,5	;RP0=1, select bank1
  2425  0BB7  1303               	bcf	3,6	;RP1=0, select bank1
  2426  0BB8  00A0               	movwf	??___fltol^(0+128)
  2427  0BB9  0820               	movf	??___fltol^(0+128),w
  2428  0BBA  1283               	bcf	3,5	;RP0=0, select bank0
  2429  0BBB  1303               	bcf	3,6	;RP1=0, select bank0
  2430  0BBC  00ED               	movwf	___fltol@exp1
  2431  0BBD  086D               	movf	___fltol@exp1,w
  2432  0BBE  1D03               	btfss	3,2
  2433  0BBF  2BC9               	goto	l1754
  2434  0BC0                     l1750:	
  2435  0BC0  3000               	movlw	0
  2436  0BC1  00EB               	movwf	?___fltol+3
  2437  0BC2  3000               	movlw	0
  2438  0BC3  00EA               	movwf	?___fltol+2
  2439  0BC4  3000               	movlw	0
  2440  0BC5  00E9               	movwf	?___fltol+1
  2441  0BC6  3000               	movlw	0
  2442  0BC7  00E8               	movwf	?___fltol
  2443  0BC8  0008               	return
  2444  0BC9                     l1754:	
  2445  0BC9  0868               	movf	___fltol@f1,w
  2446  0BCA  1683               	bsf	3,5	;RP0=1, select bank1
  2447  0BCB  1303               	bcf	3,6	;RP1=0, select bank1
  2448  0BCC  00A0               	movwf	??___fltol^(0+128)
  2449  0BCD  1283               	bcf	3,5	;RP0=0, select bank0
  2450  0BCE  1303               	bcf	3,6	;RP1=0, select bank0
  2451  0BCF  0869               	movf	___fltol@f1+1,w
  2452  0BD0  1683               	bsf	3,5	;RP0=1, select bank1
  2453  0BD1  1303               	bcf	3,6	;RP1=0, select bank1
  2454  0BD2  00A1               	movwf	(??___fltol^(0+128)+1)
  2455  0BD3  1283               	bcf	3,5	;RP0=0, select bank0
  2456  0BD4  1303               	bcf	3,6	;RP1=0, select bank0
  2457  0BD5  086A               	movf	___fltol@f1+2,w
  2458  0BD6  1683               	bsf	3,5	;RP0=1, select bank1
  2459  0BD7  1303               	bcf	3,6	;RP1=0, select bank1
  2460  0BD8  00A2               	movwf	(??___fltol^(0+128)+2)
  2461  0BD9  1283               	bcf	3,5	;RP0=0, select bank0
  2462  0BDA  1303               	bcf	3,6	;RP1=0, select bank0
  2463  0BDB  086B               	movf	___fltol@f1+3,w
  2464  0BDC  1683               	bsf	3,5	;RP0=1, select bank1
  2465  0BDD  1303               	bcf	3,6	;RP1=0, select bank1
  2466  0BDE  00A3               	movwf	(??___fltol^(0+128)+3)
  2467  0BDF  301F               	movlw	31
  2468  0BE0                     u1965:	
  2469  0BE0  1003               	clrc
  2470  0BE1  0CA3               	rrf	(??___fltol^(0+128)+3),f
  2471  0BE2  0CA2               	rrf	(??___fltol^(0+128)+2),f
  2472  0BE3  0CA1               	rrf	(??___fltol^(0+128)+1),f
  2473  0BE4  0CA0               	rrf	??___fltol^(0+128),f
  2474  0BE5  3EFF               	addlw	-1
  2475  0BE6  1D03               	skipz
  2476  0BE7  2BE0               	goto	u1965
  2477  0BE8  0820               	movf	??___fltol^(0+128),w
  2478  0BE9  00A4               	movwf	(??___fltol+4)^(0+128)
  2479  0BEA  0824               	movf	(??___fltol+4)^(0+128),w
  2480  0BEB  1283               	bcf	3,5	;RP0=0, select bank0
  2481  0BEC  1303               	bcf	3,6	;RP1=0, select bank0
  2482  0BED  00EC               	movwf	___fltol@sign1
  2483  0BEE  17EA               	bsf	___fltol@f1+2,7
  2484  0BEF  30FF               	movlw	255
  2485  0BF0  05E8               	andwf	___fltol@f1,f
  2486  0BF1  30FF               	movlw	255
  2487  0BF2  05E9               	andwf	___fltol@f1+1,f
  2488  0BF3  30FF               	movlw	255
  2489  0BF4  05EA               	andwf	___fltol@f1+2,f
  2490  0BF5  3000               	movlw	0
  2491  0BF6  05EB               	andwf	___fltol@f1+3,f
  2492  0BF7  3096               	movlw	150
  2493  0BF8  02ED               	subwf	___fltol@exp1,f
  2494  0BF9  1FED               	btfss	___fltol@exp1,7
  2495  0BFA  2C14               	goto	l1772
  2496  0BFB  086D               	movf	___fltol@exp1,w
  2497  0BFC  3A80               	xorlw	128
  2498  0BFD  3E97               	addlw	151
  2499  0BFE  1C03               	btfss	3,0
  2500  0BFF  2BC0               	goto	l1750
  2501  0C00                     l1770:	
  2502  0C00  3001               	movlw	1
  2503  0C01                     u1995:	
  2504  0C01  1003               	clrc
  2505  0C02  0CEB               	rrf	___fltol@f1+3,f
  2506  0C03  0CEA               	rrf	___fltol@f1+2,f
  2507  0C04  0CE9               	rrf	___fltol@f1+1,f
  2508  0C05  0CE8               	rrf	___fltol@f1,f
  2509  0C06  3EFF               	addlw	-1
  2510  0C07  1D03               	skipz
  2511  0C08  2C01               	goto	u1995
  2512  0C09  3001               	movlw	1
  2513  0C0A  1683               	bsf	3,5	;RP0=1, select bank1
  2514  0C0B  1303               	bcf	3,6	;RP1=0, select bank1
  2515  0C0C  00A0               	movwf	??___fltol^(0+128)
  2516  0C0D  0820               	movf	??___fltol^(0+128),w
  2517  0C0E  1283               	bcf	3,5	;RP0=0, select bank0
  2518  0C0F  1303               	bcf	3,6	;RP1=0, select bank0
  2519  0C10  07ED               	addwf	___fltol@exp1,f
  2520  0C11  1903               	btfsc	3,2
  2521  0C12  2C2F               	goto	l1780
  2522  0C13  2C00               	goto	l1770
  2523  0C14                     l1772:	
  2524  0C14  3020               	movlw	32
  2525  0C15  026D               	subwf	___fltol@exp1,w
  2526  0C16  1803               	btfsc	3,0
  2527  0C17  2BC0               	goto	l1750
  2528  0C18                     l457:	
  2529  0C18  086D               	movf	___fltol@exp1,w
  2530  0C19  1903               	btfsc	3,2
  2531  0C1A  2C2F               	goto	l1780
  2532  0C1B  3001               	movlw	1
  2533  0C1C  1683               	bsf	3,5	;RP0=1, select bank1
  2534  0C1D  1303               	bcf	3,6	;RP1=0, select bank1
  2535  0C1E  00A0               	movwf	??___fltol^(0+128)
  2536  0C1F                     u2025:	
  2537  0C1F  1003               	clrc
  2538  0C20  1283               	bcf	3,5	;RP0=0, select bank0
  2539  0C21  1303               	bcf	3,6	;RP1=0, select bank0
  2540  0C22  0DE8               	rlf	___fltol@f1,f
  2541  0C23  0DE9               	rlf	___fltol@f1+1,f
  2542  0C24  0DEA               	rlf	___fltol@f1+2,f
  2543  0C25  0DEB               	rlf	___fltol@f1+3,f
  2544  0C26  1683               	bsf	3,5	;RP0=1, select bank1
  2545  0C27  1303               	bcf	3,6	;RP1=0, select bank1
  2546  0C28  0BA0               	decfsz	??___fltol^(0+128),f
  2547  0C29  2C1F               	goto	u2025
  2548  0C2A  3001               	movlw	1
  2549  0C2B  1283               	bcf	3,5	;RP0=0, select bank0
  2550  0C2C  1303               	bcf	3,6	;RP1=0, select bank0
  2551  0C2D  02ED               	subwf	___fltol@exp1,f
  2552  0C2E  2C18               	goto	l457
  2553  0C2F                     l1780:	
  2554  0C2F  086C               	movf	___fltol@sign1,w
  2555  0C30  1903               	btfsc	3,2
  2556  0C31  0008               	return
  2557  0C32  09E8               	comf	___fltol@f1,f
  2558  0C33  09E9               	comf	___fltol@f1+1,f
  2559  0C34  09EA               	comf	___fltol@f1+2,f
  2560  0C35  09EB               	comf	___fltol@f1+3,f
  2561  0C36  0AE8               	incf	___fltol@f1,f
  2562  0C37  1903               	skipnz
  2563  0C38  0AE9               	incf	___fltol@f1+1,f
  2564  0C39  1903               	skipnz
  2565  0C3A  0AEA               	incf	___fltol@f1+2,f
  2566  0C3B  1903               	skipnz
  2567  0C3C  0AEB               	incf	___fltol@f1+3,f
  2568  0C3D  0008               	return
  2569  0C3E                     __end_of___fltol:	
  2570                           
  2571                           	psect	text8
  2572  04E0                     __ptext8:	
  2573 ;; *************** function ___flmul *****************
  2574 ;; Defined at:
  2575 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  b               4   26[BANK0 ] long 
  2578 ;;  a               4   30[BANK0 ] long 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  prod            4   46[BANK0 ] struct .
  2581 ;;  grs             4   40[BANK0 ] unsigned long 
  2582 ;;  temp            2   50[BANK0 ] struct .
  2583 ;;  bexp            1   45[BANK0 ] unsigned char 
  2584 ;;  aexp            1   44[BANK0 ] unsigned char 
  2585 ;;  sign            1   39[BANK0 ] unsigned char 
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  4   26[BANK0 ] unsigned char 
  2588 ;; Registers used:
  2589 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2595 ;;      Params:         0       8       0       0       0
  2596 ;;      Locals:         0      13       0       0       0
  2597 ;;      Temps:          0       5       0       0       0
  2598 ;;      Totals:         0      26       0       0       0
  2599 ;;Total ram usage:       26 bytes
  2600 ;; Hardware stack levels used:    1
  2601 ;; Hardware stack levels required when called:    1
  2602 ;; This function calls:
  2603 ;;		__Umul8_16
  2604 ;; This function is called by:
  2605 ;;		_setAngule1
  2606 ;;		_setAngule2
  2607 ;;		_main
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           
  2612                           ;psect for function ___flmul
  2613  04E0                     ___flmul:	
  2614                           
  2615                           ;incstack = 0
  2616                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2617  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  2618  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  2619  04E2  083D               	movf	___flmul@b+3,w
  2620  04E3  3980               	andlw	128
  2621  04E4  00C2               	movwf	??___flmul
  2622  04E5  0842               	movf	??___flmul,w
  2623  04E6  00C7               	movwf	___flmul@sign
  2624  04E7  083D               	movf	___flmul@b+3,w
  2625  04E8  00C2               	movwf	??___flmul
  2626  04E9  0742               	addwf	??___flmul,w
  2627  04EA  00C3               	movwf	??___flmul+1
  2628  04EB  0843               	movf	??___flmul+1,w
  2629  04EC  00CD               	movwf	___flmul@bexp
  2630  04ED  1BBC               	btfsc	___flmul@b+2,7
  2631  04EE  144D               	bsf	___flmul@bexp,0
  2632  04EF  084D               	movf	___flmul@bexp,w
  2633  04F0  1903               	btfsc	3,2
  2634  04F1  2CFF               	goto	l2184
  2635  04F2  0A4D               	incf	___flmul@bexp,w
  2636  04F3  1D03               	btfss	3,2
  2637  04F4  2CFD               	goto	l2182
  2638  04F5  3000               	movlw	0
  2639  04F6  00BD               	movwf	___flmul@b+3
  2640  04F7  3000               	movlw	0
  2641  04F8  00BC               	movwf	___flmul@b+2
  2642  04F9  3000               	movlw	0
  2643  04FA  00BB               	movwf	___flmul@b+1
  2644  04FB  3000               	movlw	0
  2645  04FC  00BA               	movwf	___flmul@b
  2646  04FD                     l2182:	
  2647  04FD  17BC               	bsf	___flmul@b+2,7
  2648  04FE  2D07               	goto	l2186
  2649  04FF                     l2184:	
  2650  04FF  3000               	movlw	0
  2651  0500  00BD               	movwf	___flmul@b+3
  2652  0501  3000               	movlw	0
  2653  0502  00BC               	movwf	___flmul@b+2
  2654  0503  3000               	movlw	0
  2655  0504  00BB               	movwf	___flmul@b+1
  2656  0505  3000               	movlw	0
  2657  0506  00BA               	movwf	___flmul@b
  2658  0507                     l2186:	
  2659  0507  0841               	movf	___flmul@a+3,w
  2660  0508  3980               	andlw	128
  2661  0509  00C2               	movwf	??___flmul
  2662  050A  0842               	movf	??___flmul,w
  2663  050B  06C7               	xorwf	___flmul@sign,f
  2664  050C  0841               	movf	___flmul@a+3,w
  2665  050D  00C2               	movwf	??___flmul
  2666  050E  0742               	addwf	??___flmul,w
  2667  050F  00C3               	movwf	??___flmul+1
  2668  0510  0843               	movf	??___flmul+1,w
  2669  0511  00CC               	movwf	___flmul@aexp
  2670  0512  1BC0               	btfsc	___flmul@a+2,7
  2671  0513  144C               	bsf	___flmul@aexp,0
  2672  0514  084C               	movf	___flmul@aexp,w
  2673  0515  1903               	btfsc	3,2
  2674  0516  2D24               	goto	l2202
  2675  0517  0A4C               	incf	___flmul@aexp,w
  2676  0518  1D03               	btfss	3,2
  2677  0519  2D22               	goto	l2200
  2678  051A  3000               	movlw	0
  2679  051B  00C1               	movwf	___flmul@a+3
  2680  051C  3000               	movlw	0
  2681  051D  00C0               	movwf	___flmul@a+2
  2682  051E  3000               	movlw	0
  2683  051F  00BF               	movwf	___flmul@a+1
  2684  0520  3000               	movlw	0
  2685  0521  00BE               	movwf	___flmul@a
  2686  0522                     l2200:	
  2687  0522  17C0               	bsf	___flmul@a+2,7
  2688  0523  2D2C               	goto	l2204
  2689  0524                     l2202:	
  2690  0524  3000               	movlw	0
  2691  0525  00C1               	movwf	___flmul@a+3
  2692  0526  3000               	movlw	0
  2693  0527  00C0               	movwf	___flmul@a+2
  2694  0528  3000               	movlw	0
  2695  0529  00BF               	movwf	___flmul@a+1
  2696  052A  3000               	movlw	0
  2697  052B  00BE               	movwf	___flmul@a
  2698  052C                     l2204:	
  2699  052C  084C               	movf	___flmul@aexp,w
  2700  052D  1D03               	btfss	3,2
  2701  052E  084D               	movf	___flmul@bexp,w
  2702  052F  1D03               	btfss	3,2
  2703  0530  2D3A               	goto	l2212
  2704  0531  3000               	movlw	0
  2705  0532  00BD               	movwf	?___flmul+3
  2706  0533  3000               	movlw	0
  2707  0534  00BC               	movwf	?___flmul+2
  2708  0535  3000               	movlw	0
  2709  0536  00BB               	movwf	?___flmul+1
  2710  0537  3000               	movlw	0
  2711  0538  00BA               	movwf	?___flmul
  2712  0539  0008               	return
  2713  053A                     l2212:	
  2714  053A  083A               	movf	___flmul@b,w
  2715  053B  00C2               	movwf	??___flmul
  2716  053C  0842               	movf	??___flmul,w
  2717  053D  00F0               	movwf	__Umul8_16@multiplicand
  2718  053E  0840               	movf	___flmul@a+2,w
  2719  053F  120A  158A  2233  120A  118A  	fcall	__Umul8_16
  2720  0544  0871               	movf	?__Umul8_16+1,w
  2721  0545  1283               	bcf	3,5	;RP0=0, select bank0
  2722  0546  1303               	bcf	3,6	;RP1=0, select bank0
  2723  0547  00D3               	movwf	___flmul@temp+1
  2724  0548  0870               	movf	?__Umul8_16,w
  2725  0549  00D2               	movwf	___flmul@temp
  2726  054A  0852               	movf	___flmul@temp,w
  2727  054B  00C2               	movwf	??___flmul
  2728  054C  01C3               	clrf	??___flmul+1
  2729  054D  01C4               	clrf	??___flmul+2
  2730  054E  01C5               	clrf	??___flmul+3
  2731  054F  0845               	movf	??___flmul+3,w
  2732  0550  00CB               	movwf	___flmul@grs+3
  2733  0551  0844               	movf	??___flmul+2,w
  2734  0552  00CA               	movwf	___flmul@grs+2
  2735  0553  0843               	movf	??___flmul+1,w
  2736  0554  00C9               	movwf	___flmul@grs+1
  2737  0555  0842               	movf	??___flmul,w
  2738  0556  00C8               	movwf	___flmul@grs
  2739  0557  0853               	movf	___flmul@temp+1,w
  2740  0558  00C2               	movwf	??___flmul
  2741  0559  01C3               	clrf	??___flmul+1
  2742  055A  01C4               	clrf	??___flmul+2
  2743  055B  01C5               	clrf	??___flmul+3
  2744  055C  0845               	movf	??___flmul+3,w
  2745  055D  00D1               	movwf	___flmul@prod+3
  2746  055E  0844               	movf	??___flmul+2,w
  2747  055F  00D0               	movwf	___flmul@prod+2
  2748  0560  0843               	movf	??___flmul+1,w
  2749  0561  00CF               	movwf	___flmul@prod+1
  2750  0562  0842               	movf	??___flmul,w
  2751  0563  00CE               	movwf	___flmul@prod
  2752  0564  083B               	movf	___flmul@b+1,w
  2753  0565  00C2               	movwf	??___flmul
  2754  0566  0842               	movf	??___flmul,w
  2755  0567  00F0               	movwf	__Umul8_16@multiplicand
  2756  0568  083F               	movf	___flmul@a+1,w
  2757  0569  120A  158A  2233  120A  118A  	fcall	__Umul8_16
  2758  056E  0871               	movf	?__Umul8_16+1,w
  2759  056F  1283               	bcf	3,5	;RP0=0, select bank0
  2760  0570  1303               	bcf	3,6	;RP1=0, select bank0
  2761  0571  00D3               	movwf	___flmul@temp+1
  2762  0572  0870               	movf	?__Umul8_16,w
  2763  0573  00D2               	movwf	___flmul@temp
  2764  0574  0852               	movf	___flmul@temp,w
  2765  0575  00C2               	movwf	??___flmul
  2766  0576  01C3               	clrf	??___flmul+1
  2767  0577  01C4               	clrf	??___flmul+2
  2768  0578  01C5               	clrf	??___flmul+3
  2769  0579  0842               	movf	??___flmul,w
  2770  057A  07C8               	addwf	___flmul@grs,f
  2771  057B  0843               	movf	??___flmul+1,w
  2772  057C  1103               	clrz
  2773  057D  1803               	skipnc
  2774  057E  3E01               	addlw	1
  2775  057F  1D03               	btfss	3,2
  2776  0580  07C9               	addwf	___flmul@grs+1,f
  2777  0581  0844               	movf	??___flmul+2,w
  2778  0582  1103               	clrz
  2779  0583  1803               	skipnc
  2780  0584  3E01               	addlw	1
  2781  0585  1D03               	btfss	3,2
  2782  0586  07CA               	addwf	___flmul@grs+2,f
  2783  0587  0845               	movf	??___flmul+3,w
  2784  0588  1103               	clrz
  2785  0589  1803               	skipnc
  2786  058A  3E01               	addlw	1
  2787  058B  1D03               	btfss	3,2
  2788  058C  07CB               	addwf	___flmul@grs+3,f
  2789  058D  0853               	movf	___flmul@temp+1,w
  2790  058E  00C2               	movwf	??___flmul
  2791  058F  01C3               	clrf	??___flmul+1
  2792  0590  01C4               	clrf	??___flmul+2
  2793  0591  01C5               	clrf	??___flmul+3
  2794  0592  0842               	movf	??___flmul,w
  2795  0593  07CE               	addwf	___flmul@prod,f
  2796  0594  0843               	movf	??___flmul+1,w
  2797  0595  1103               	clrz
  2798  0596  1803               	skipnc
  2799  0597  3E01               	addlw	1
  2800  0598  1D03               	btfss	3,2
  2801  0599  07CF               	addwf	___flmul@prod+1,f
  2802  059A  0844               	movf	??___flmul+2,w
  2803  059B  1103               	clrz
  2804  059C  1803               	skipnc
  2805  059D  3E01               	addlw	1
  2806  059E  1D03               	btfss	3,2
  2807  059F  07D0               	addwf	___flmul@prod+2,f
  2808  05A0  0845               	movf	??___flmul+3,w
  2809  05A1  1103               	clrz
  2810  05A2  1803               	skipnc
  2811  05A3  3E01               	addlw	1
  2812  05A4  1D03               	btfss	3,2
  2813  05A5  07D1               	addwf	___flmul@prod+3,f
  2814  05A6  083C               	movf	___flmul@b+2,w
  2815  05A7  00C2               	movwf	??___flmul
  2816  05A8  0842               	movf	??___flmul,w
  2817  05A9  00F0               	movwf	__Umul8_16@multiplicand
  2818  05AA  083E               	movf	___flmul@a,w
  2819  05AB  120A  158A  2233  120A  118A  	fcall	__Umul8_16
  2820  05B0  0871               	movf	?__Umul8_16+1,w
  2821  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2822  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2823  05B3  00D3               	movwf	___flmul@temp+1
  2824  05B4  0870               	movf	?__Umul8_16,w
  2825  05B5  00D2               	movwf	___flmul@temp
  2826  05B6  0852               	movf	___flmul@temp,w
  2827  05B7  00C2               	movwf	??___flmul
  2828  05B8  01C3               	clrf	??___flmul+1
  2829  05B9  01C4               	clrf	??___flmul+2
  2830  05BA  01C5               	clrf	??___flmul+3
  2831  05BB  0842               	movf	??___flmul,w
  2832  05BC  07C8               	addwf	___flmul@grs,f
  2833  05BD  0843               	movf	??___flmul+1,w
  2834  05BE  1103               	clrz
  2835  05BF  1803               	skipnc
  2836  05C0  3E01               	addlw	1
  2837  05C1  1D03               	btfss	3,2
  2838  05C2  07C9               	addwf	___flmul@grs+1,f
  2839  05C3  0844               	movf	??___flmul+2,w
  2840  05C4  1103               	clrz
  2841  05C5  1803               	skipnc
  2842  05C6  3E01               	addlw	1
  2843  05C7  1D03               	btfss	3,2
  2844  05C8  07CA               	addwf	___flmul@grs+2,f
  2845  05C9  0845               	movf	??___flmul+3,w
  2846  05CA  1103               	clrz
  2847  05CB  1803               	skipnc
  2848  05CC  3E01               	addlw	1
  2849  05CD  1D03               	btfss	3,2
  2850  05CE  07CB               	addwf	___flmul@grs+3,f
  2851  05CF  0853               	movf	___flmul@temp+1,w
  2852  05D0  00C2               	movwf	??___flmul
  2853  05D1  01C3               	clrf	??___flmul+1
  2854  05D2  01C4               	clrf	??___flmul+2
  2855  05D3  01C5               	clrf	??___flmul+3
  2856  05D4  0842               	movf	??___flmul,w
  2857  05D5  07CE               	addwf	___flmul@prod,f
  2858  05D6  0843               	movf	??___flmul+1,w
  2859  05D7  1103               	clrz
  2860  05D8  1803               	skipnc
  2861  05D9  3E01               	addlw	1
  2862  05DA  1D03               	btfss	3,2
  2863  05DB  07CF               	addwf	___flmul@prod+1,f
  2864  05DC  0844               	movf	??___flmul+2,w
  2865  05DD  1103               	clrz
  2866  05DE  1803               	skipnc
  2867  05DF  3E01               	addlw	1
  2868  05E0  1D03               	btfss	3,2
  2869  05E1  07D0               	addwf	___flmul@prod+2,f
  2870  05E2  0845               	movf	??___flmul+3,w
  2871  05E3  1103               	clrz
  2872  05E4  1803               	skipnc
  2873  05E5  3E01               	addlw	1
  2874  05E6  1D03               	btfss	3,2
  2875  05E7  07D1               	addwf	___flmul@prod+3,f
  2876  05E8  3008               	movlw	8
  2877  05E9  00C2               	movwf	??___flmul
  2878  05EA                     u3055:	
  2879  05EA  1003               	clrc
  2880  05EB  0DC8               	rlf	___flmul@grs,f
  2881  05EC  0DC9               	rlf	___flmul@grs+1,f
  2882  05ED  0DCA               	rlf	___flmul@grs+2,f
  2883  05EE  0DCB               	rlf	___flmul@grs+3,f
  2884  05EF  0BC2               	decfsz	??___flmul,f
  2885  05F0  2DEA               	goto	u3055
  2886  05F1  083B               	movf	___flmul@b+1,w
  2887  05F2  00C2               	movwf	??___flmul
  2888  05F3  0842               	movf	??___flmul,w
  2889  05F4  00F0               	movwf	__Umul8_16@multiplicand
  2890  05F5  083E               	movf	___flmul@a,w
  2891  05F6  120A  158A  2233  120A  118A  	fcall	__Umul8_16
  2892  05FB  0871               	movf	?__Umul8_16+1,w
  2893  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  2894  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  2895  05FE  00D3               	movwf	___flmul@temp+1
  2896  05FF  0870               	movf	?__Umul8_16,w
  2897  0600  00D2               	movwf	___flmul@temp
  2898  0601  0852               	movf	___flmul@temp,w
  2899  0602  00C2               	movwf	??___flmul
  2900  0603  0853               	movf	___flmul@temp+1,w
  2901  0604  00C3               	movwf	??___flmul+1
  2902  0605  01C4               	clrf	??___flmul+2
  2903  0606  01C5               	clrf	??___flmul+3
  2904  0607  0842               	movf	??___flmul,w
  2905  0608  07C8               	addwf	___flmul@grs,f
  2906  0609  0843               	movf	??___flmul+1,w
  2907  060A  1103               	clrz
  2908  060B  1803               	skipnc
  2909  060C  3E01               	addlw	1
  2910  060D  1D03               	btfss	3,2
  2911  060E  07C9               	addwf	___flmul@grs+1,f
  2912  060F  0844               	movf	??___flmul+2,w
  2913  0610  1103               	clrz
  2914  0611  1803               	skipnc
  2915  0612  3E01               	addlw	1
  2916  0613  1D03               	btfss	3,2
  2917  0614  07CA               	addwf	___flmul@grs+2,f
  2918  0615  0845               	movf	??___flmul+3,w
  2919  0616  1103               	clrz
  2920  0617  1803               	skipnc
  2921  0618  3E01               	addlw	1
  2922  0619  1D03               	btfss	3,2
  2923  061A  07CB               	addwf	___flmul@grs+3,f
  2924  061B  083A               	movf	___flmul@b,w
  2925  061C  00C2               	movwf	??___flmul
  2926  061D  0842               	movf	??___flmul,w
  2927  061E  00F0               	movwf	__Umul8_16@multiplicand
  2928  061F  083F               	movf	___flmul@a+1,w
  2929  0620  120A  158A  2233  120A  118A  	fcall	__Umul8_16
  2930  0625  0871               	movf	?__Umul8_16+1,w
  2931  0626  1283               	bcf	3,5	;RP0=0, select bank0
  2932  0627  1303               	bcf	3,6	;RP1=0, select bank0
  2933  0628  00D3               	movwf	___flmul@temp+1
  2934  0629  0870               	movf	?__Umul8_16,w
  2935  062A  00D2               	movwf	___flmul@temp
  2936  062B  0852               	movf	___flmul@temp,w
  2937  062C  00C2               	movwf	??___flmul
  2938  062D  0853               	movf	___flmul@temp+1,w
  2939  062E  00C3               	movwf	??___flmul+1
  2940  062F  01C4               	clrf	??___flmul+2
  2941  0630  01C5               	clrf	??___flmul+3
  2942  0631  0842               	movf	??___flmul,w
  2943  0632  07C8               	addwf	___flmul@grs,f
  2944  0633  0843               	movf	??___flmul+1,w
  2945  0634  1103               	clrz
  2946  0635  1803               	skipnc
  2947  0636  3E01               	addlw	1
  2948  0637  1D03               	btfss	3,2
  2949  0638  07C9               	addwf	___flmul@grs+1,f
  2950  0639  0844               	movf	??___flmul+2,w
  2951  063A  1103               	clrz
  2952  063B  1803               	skipnc
  2953  063C  3E01               	addlw	1
  2954  063D  1D03               	btfss	3,2
  2955  063E  07CA               	addwf	___flmul@grs+2,f
  2956  063F  0845               	movf	??___flmul+3,w
  2957  0640  1103               	clrz
  2958  0641  1803               	skipnc
  2959  0642  3E01               	addlw	1
  2960  0643  1D03               	btfss	3,2
  2961  0644  07CB               	addwf	___flmul@grs+3,f
  2962  0645  3008               	movlw	8
  2963  0646  00C2               	movwf	??___flmul
  2964  0647                     u3085:	
  2965  0647  1003               	clrc
  2966  0648  0DC8               	rlf	___flmul@grs,f
  2967  0649  0DC9               	rlf	___flmul@grs+1,f
  2968  064A  0DCA               	rlf	___flmul@grs+2,f
  2969  064B  0DCB               	rlf	___flmul@grs+3,f
  2970  064C  0BC2               	decfsz	??___flmul,f
  2971  064D  2E47               	goto	u3085
  2972  064E  083A               	movf	___flmul@b,w
  2973  064F  00C2               	movwf	??___flmul
  2974  0650  0842               	movf	??___flmul,w
  2975  0651  00F0               	movwf	__Umul8_16@multiplicand
  2976  0652  083E               	movf	___flmul@a,w
  2977  0653  120A  158A  2233  120A  118A  	fcall	__Umul8_16
  2978  0658  0871               	movf	?__Umul8_16+1,w
  2979  0659  1283               	bcf	3,5	;RP0=0, select bank0
  2980  065A  1303               	bcf	3,6	;RP1=0, select bank0
  2981  065B  00D3               	movwf	___flmul@temp+1
  2982  065C  0870               	movf	?__Umul8_16,w
  2983  065D  00D2               	movwf	___flmul@temp
  2984  065E  0852               	movf	___flmul@temp,w
  2985  065F  00C2               	movwf	??___flmul
  2986  0660  0853               	movf	___flmul@temp+1,w
  2987  0661  00C3               	movwf	??___flmul+1
  2988  0662  01C4               	clrf	??___flmul+2
  2989  0663  01C5               	clrf	??___flmul+3
  2990  0664  0842               	movf	??___flmul,w
  2991  0665  07C8               	addwf	___flmul@grs,f
  2992  0666  0843               	movf	??___flmul+1,w
  2993  0667  1103               	clrz
  2994  0668  1803               	skipnc
  2995  0669  3E01               	addlw	1
  2996  066A  1D03               	btfss	3,2
  2997  066B  07C9               	addwf	___flmul@grs+1,f
  2998  066C  0844               	movf	??___flmul+2,w
  2999  066D  1103               	clrz
  3000  066E  1803               	skipnc
  3001  066F  3E01               	addlw	1
  3002  0670  1D03               	btfss	3,2
  3003  0671  07CA               	addwf	___flmul@grs+2,f
  3004  0672  0845               	movf	??___flmul+3,w
  3005  0673  1103               	clrz
  3006  0674  1803               	skipnc
  3007  0675  3E01               	addlw	1
  3008  0676  1D03               	btfss	3,2
  3009  0677  07CB               	addwf	___flmul@grs+3,f
  3010  0678  083B               	movf	___flmul@b+1,w
  3011  0679  00C2               	movwf	??___flmul
  3012  067A  0842               	movf	??___flmul,w
  3013  067B  00F0               	movwf	__Umul8_16@multiplicand
  3014  067C  0840               	movf	___flmul@a+2,w
  3015  067D  120A  158A  2233  120A  118A  	fcall	__Umul8_16
  3016  0682  0871               	movf	?__Umul8_16+1,w
  3017  0683  1283               	bcf	3,5	;RP0=0, select bank0
  3018  0684  1303               	bcf	3,6	;RP1=0, select bank0
  3019  0685  00D3               	movwf	___flmul@temp+1
  3020  0686  0870               	movf	?__Umul8_16,w
  3021  0687  00D2               	movwf	___flmul@temp
  3022  0688  0852               	movf	___flmul@temp,w
  3023  0689  00C2               	movwf	??___flmul
  3024  068A  0853               	movf	___flmul@temp+1,w
  3025  068B  00C3               	movwf	??___flmul+1
  3026  068C  01C4               	clrf	??___flmul+2
  3027  068D  01C5               	clrf	??___flmul+3
  3028  068E  0842               	movf	??___flmul,w
  3029  068F  07CE               	addwf	___flmul@prod,f
  3030  0690  0843               	movf	??___flmul+1,w
  3031  0691  1103               	clrz
  3032  0692  1803               	skipnc
  3033  0693  3E01               	addlw	1
  3034  0694  1D03               	btfss	3,2
  3035  0695  07CF               	addwf	___flmul@prod+1,f
  3036  0696  0844               	movf	??___flmul+2,w
  3037  0697  1103               	clrz
  3038  0698  1803               	skipnc
  3039  0699  3E01               	addlw	1
  3040  069A  1D03               	btfss	3,2
  3041  069B  07D0               	addwf	___flmul@prod+2,f
  3042  069C  0845               	movf	??___flmul+3,w
  3043  069D  1103               	clrz
  3044  069E  1803               	skipnc
  3045  069F  3E01               	addlw	1
  3046  06A0  1D03               	btfss	3,2
  3047  06A1  07D1               	addwf	___flmul@prod+3,f
  3048  06A2  083C               	movf	___flmul@b+2,w
  3049  06A3  00C2               	movwf	??___flmul
  3050  06A4  0842               	movf	??___flmul,w
  3051  06A5  00F0               	movwf	__Umul8_16@multiplicand
  3052  06A6  083F               	movf	___flmul@a+1,w
  3053  06A7  120A  158A  2233  120A  118A  	fcall	__Umul8_16
  3054  06AC  0871               	movf	?__Umul8_16+1,w
  3055  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  3056  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  3057  06AF  00D3               	movwf	___flmul@temp+1
  3058  06B0  0870               	movf	?__Umul8_16,w
  3059  06B1  00D2               	movwf	___flmul@temp
  3060  06B2  0852               	movf	___flmul@temp,w
  3061  06B3  00C2               	movwf	??___flmul
  3062  06B4  0853               	movf	___flmul@temp+1,w
  3063  06B5  00C3               	movwf	??___flmul+1
  3064  06B6  01C4               	clrf	??___flmul+2
  3065  06B7  01C5               	clrf	??___flmul+3
  3066  06B8  0842               	movf	??___flmul,w
  3067  06B9  07CE               	addwf	___flmul@prod,f
  3068  06BA  0843               	movf	??___flmul+1,w
  3069  06BB  1103               	clrz
  3070  06BC  1803               	skipnc
  3071  06BD  3E01               	addlw	1
  3072  06BE  1D03               	btfss	3,2
  3073  06BF  07CF               	addwf	___flmul@prod+1,f
  3074  06C0  0844               	movf	??___flmul+2,w
  3075  06C1  1103               	clrz
  3076  06C2  1803               	skipnc
  3077  06C3  3E01               	addlw	1
  3078  06C4  1D03               	btfss	3,2
  3079  06C5  07D0               	addwf	___flmul@prod+2,f
  3080  06C6  0845               	movf	??___flmul+3,w
  3081  06C7  1103               	clrz
  3082  06C8  1803               	skipnc
  3083  06C9  3E01               	addlw	1
  3084  06CA  1D03               	btfss	3,2
  3085  06CB  07D1               	addwf	___flmul@prod+3,f
  3086  06CC  083C               	movf	___flmul@b+2,w
  3087  06CD  00C2               	movwf	??___flmul
  3088  06CE  0842               	movf	??___flmul,w
  3089  06CF  00F0               	movwf	__Umul8_16@multiplicand
  3090  06D0  0840               	movf	___flmul@a+2,w
  3091  06D1  120A  158A  2233  120A  118A  	fcall	__Umul8_16
  3092  06D6  0871               	movf	?__Umul8_16+1,w
  3093  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  3094  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  3095  06D9  00D3               	movwf	___flmul@temp+1
  3096  06DA  0870               	movf	?__Umul8_16,w
  3097  06DB  00D2               	movwf	___flmul@temp
  3098  06DC  0852               	movf	___flmul@temp,w
  3099  06DD  00C2               	movwf	??___flmul
  3100  06DE  0853               	movf	___flmul@temp+1,w
  3101  06DF  00C3               	movwf	??___flmul+1
  3102  06E0  01C4               	clrf	??___flmul+2
  3103  06E1  01C5               	clrf	??___flmul+3
  3104  06E2  3008               	movlw	8
  3105  06E3                     u3125:	
  3106  06E3  1003               	clrc
  3107  06E4  0DC2               	rlf	??___flmul,f
  3108  06E5  0DC3               	rlf	??___flmul+1,f
  3109  06E6  0DC4               	rlf	??___flmul+2,f
  3110  06E7  0DC5               	rlf	??___flmul+3,f
  3111  06E8  3EFF               	addlw	-1
  3112  06E9  1D03               	skipz
  3113  06EA  2EE3               	goto	u3125
  3114  06EB  0842               	movf	??___flmul,w
  3115  06EC  07CE               	addwf	___flmul@prod,f
  3116  06ED  0843               	movf	??___flmul+1,w
  3117  06EE  1103               	clrz
  3118  06EF  1803               	skipnc
  3119  06F0  3E01               	addlw	1
  3120  06F1  1D03               	btfss	3,2
  3121  06F2  07CF               	addwf	___flmul@prod+1,f
  3122  06F3  0844               	movf	??___flmul+2,w
  3123  06F4  1103               	clrz
  3124  06F5  1803               	skipnc
  3125  06F6  3E01               	addlw	1
  3126  06F7  1D03               	btfss	3,2
  3127  06F8  07D0               	addwf	___flmul@prod+2,f
  3128  06F9  0845               	movf	??___flmul+3,w
  3129  06FA  1103               	clrz
  3130  06FB  1803               	skipnc
  3131  06FC  3E01               	addlw	1
  3132  06FD  1D03               	btfss	3,2
  3133  06FE  07D1               	addwf	___flmul@prod+3,f
  3134  06FF  0848               	movf	___flmul@grs,w
  3135  0700  00C2               	movwf	??___flmul
  3136  0701  0849               	movf	___flmul@grs+1,w
  3137  0702  00C3               	movwf	??___flmul+1
  3138  0703  084A               	movf	___flmul@grs+2,w
  3139  0704  00C4               	movwf	??___flmul+2
  3140  0705  084B               	movf	___flmul@grs+3,w
  3141  0706  00C5               	movwf	??___flmul+3
  3142  0707  3018               	movlw	24
  3143  0708                     u3145:	
  3144  0708  1003               	clrc
  3145  0709  0CC5               	rrf	??___flmul+3,f
  3146  070A  0CC4               	rrf	??___flmul+2,f
  3147  070B  0CC3               	rrf	??___flmul+1,f
  3148  070C  0CC2               	rrf	??___flmul,f
  3149  070D  3EFF               	addlw	-1
  3150  070E  1D03               	skipz
  3151  070F  2F08               	goto	u3145
  3152  0710  0842               	movf	??___flmul,w
  3153  0711  07CE               	addwf	___flmul@prod,f
  3154  0712  0843               	movf	??___flmul+1,w
  3155  0713  1103               	clrz
  3156  0714  1803               	skipnc
  3157  0715  3E01               	addlw	1
  3158  0716  1D03               	btfss	3,2
  3159  0717  07CF               	addwf	___flmul@prod+1,f
  3160  0718  0844               	movf	??___flmul+2,w
  3161  0719  1103               	clrz
  3162  071A  1803               	skipnc
  3163  071B  3E01               	addlw	1
  3164  071C  1D03               	btfss	3,2
  3165  071D  07D0               	addwf	___flmul@prod+2,f
  3166  071E  0845               	movf	??___flmul+3,w
  3167  071F  1103               	clrz
  3168  0720  1803               	skipnc
  3169  0721  3E01               	addlw	1
  3170  0722  1D03               	btfss	3,2
  3171  0723  07D1               	addwf	___flmul@prod+3,f
  3172  0724  3008               	movlw	8
  3173  0725  00C2               	movwf	??___flmul
  3174  0726                     u3165:	
  3175  0726  1003               	clrc
  3176  0727  0DC8               	rlf	___flmul@grs,f
  3177  0728  0DC9               	rlf	___flmul@grs+1,f
  3178  0729  0DCA               	rlf	___flmul@grs+2,f
  3179  072A  0DCB               	rlf	___flmul@grs+3,f
  3180  072B  0BC2               	decfsz	??___flmul,f
  3181  072C  2F26               	goto	u3165
  3182  072D  084D               	movf	___flmul@bexp,w
  3183  072E  074C               	addwf	___flmul@aexp,w
  3184  072F  00C2               	movwf	??___flmul
  3185  0730  01C3               	clrf	??___flmul+1
  3186  0731  0DC3               	rlf	??___flmul+1,f
  3187  0732  0842               	movf	??___flmul,w
  3188  0733  3E82               	addlw	130
  3189  0734  00D2               	movwf	___flmul@temp
  3190  0735  0843               	movf	??___flmul+1,w
  3191  0736  1803               	skipnc
  3192  0737  3E01               	addlw	1
  3193  0738  3EFF               	addlw	255
  3194  0739  00D3               	movwf	___flmul@temp+1
  3195  073A                     l2264:	
  3196  073A  1BD0               	btfsc	___flmul@prod+2,7
  3197  073B  2F57               	goto	l2266
  3198  073C  3001               	movlw	1
  3199  073D  00C2               	movwf	??___flmul
  3200  073E                     u3175:	
  3201  073E  1003               	clrc
  3202  073F  0DCE               	rlf	___flmul@prod,f
  3203  0740  0DCF               	rlf	___flmul@prod+1,f
  3204  0741  0DD0               	rlf	___flmul@prod+2,f
  3205  0742  0DD1               	rlf	___flmul@prod+3,f
  3206  0743  0BC2               	decfsz	??___flmul,f
  3207  0744  2F3E               	goto	u3175
  3208  0745  1BCB               	btfsc	___flmul@grs+3,7
  3209  0746  144E               	bsf	___flmul@prod,0
  3210  0747  3001               	movlw	1
  3211  0748  00C2               	movwf	??___flmul
  3212  0749                     u3195:	
  3213  0749  1003               	clrc
  3214  074A  0DC8               	rlf	___flmul@grs,f
  3215  074B  0DC9               	rlf	___flmul@grs+1,f
  3216  074C  0DCA               	rlf	___flmul@grs+2,f
  3217  074D  0DCB               	rlf	___flmul@grs+3,f
  3218  074E  0BC2               	decfsz	??___flmul,f
  3219  074F  2F49               	goto	u3195
  3220  0750  30FF               	movlw	255
  3221  0751  07D2               	addwf	___flmul@temp,f
  3222  0752  1803               	skipnc
  3223  0753  0AD3               	incf	___flmul@temp+1,f
  3224  0754  30FF               	movlw	255
  3225  0755  07D3               	addwf	___flmul@temp+1,f
  3226  0756  2F3A               	goto	l2264
  3227  0757                     l2266:	
  3228  0757  01CC               	clrf	___flmul@aexp
  3229  0758  1FCB               	btfss	___flmul@grs+3,7
  3230  0759  2F70               	goto	l2276
  3231  075A  30FF               	movlw	255
  3232  075B  0548               	andwf	___flmul@grs,w
  3233  075C  00C2               	movwf	??___flmul
  3234  075D  30FF               	movlw	255
  3235  075E  0549               	andwf	___flmul@grs+1,w
  3236  075F  00C3               	movwf	??___flmul+1
  3237  0760  30FF               	movlw	255
  3238  0761  054A               	andwf	___flmul@grs+2,w
  3239  0762  00C4               	movwf	??___flmul+2
  3240  0763  307F               	movlw	127
  3241  0764  054B               	andwf	___flmul@grs+3,w
  3242  0765  00C5               	movwf	??___flmul+3
  3243  0766  0845               	movf	??___flmul+3,w
  3244  0767  0444               	iorwf	??___flmul+2,w
  3245  0768  0443               	iorwf	??___flmul+1,w
  3246  0769  0442               	iorwf	??___flmul,w
  3247  076A  1903               	skipnz
  3248  076B  184E               	btfsc	___flmul@prod,0
  3249  076C  2F6E               	goto	l2272
  3250  076D  2F70               	goto	l2276
  3251  076E                     l2272:	
  3252  076E  01CC               	clrf	___flmul@aexp
  3253  076F  0ACC               	incf	___flmul@aexp,f
  3254  0770                     l2276:	
  3255  0770  084C               	movf	___flmul@aexp,w
  3256  0771  1903               	btfsc	3,2
  3257  0772  2FA2               	goto	l2286
  3258  0773  3001               	movlw	1
  3259  0774  07CE               	addwf	___flmul@prod,f
  3260  0775  3000               	movlw	0
  3261  0776  1803               	skipnc
  3262  0777  3001               	movlw	1
  3263  0778  07CF               	addwf	___flmul@prod+1,f
  3264  0779  3000               	movlw	0
  3265  077A  1803               	skipnc
  3266  077B  3001               	movlw	1
  3267  077C  07D0               	addwf	___flmul@prod+2,f
  3268  077D  3000               	movlw	0
  3269  077E  1803               	skipnc
  3270  077F  3001               	movlw	1
  3271  0780  07D1               	addwf	___flmul@prod+3,f
  3272  0781  1C51               	btfss	___flmul@prod+3,0
  3273  0782  2FA2               	goto	l2286
  3274  0783  084E               	movf	___flmul@prod,w
  3275  0784  00C2               	movwf	??___flmul
  3276  0785  084F               	movf	___flmul@prod+1,w
  3277  0786  00C3               	movwf	??___flmul+1
  3278  0787  0850               	movf	___flmul@prod+2,w
  3279  0788  00C4               	movwf	??___flmul+2
  3280  0789  0851               	movf	___flmul@prod+3,w
  3281  078A  00C5               	movwf	??___flmul+3
  3282  078B  3001               	movlw	1
  3283  078C  00C6               	movwf	??___flmul+4
  3284  078D                     u3265:	
  3285  078D  0D45               	rlf	??___flmul+3,w
  3286  078E  0CC5               	rrf	??___flmul+3,f
  3287  078F  0CC4               	rrf	??___flmul+2,f
  3288  0790  0CC3               	rrf	??___flmul+1,f
  3289  0791  0CC2               	rrf	??___flmul,f
  3290  0792  0BC6               	decfsz	??___flmul+4,f
  3291  0793  2F8D               	goto	u3265
  3292  0794  0845               	movf	??___flmul+3,w
  3293  0795  00D1               	movwf	___flmul@prod+3
  3294  0796  0844               	movf	??___flmul+2,w
  3295  0797  00D0               	movwf	___flmul@prod+2
  3296  0798  0843               	movf	??___flmul+1,w
  3297  0799  00CF               	movwf	___flmul@prod+1
  3298  079A  0842               	movf	??___flmul,w
  3299  079B  00CE               	movwf	___flmul@prod
  3300  079C  3001               	movlw	1
  3301  079D  07D2               	addwf	___flmul@temp,f
  3302  079E  1803               	skipnc
  3303  079F  0AD3               	incf	___flmul@temp+1,f
  3304  07A0  3000               	movlw	0
  3305  07A1  07D3               	addwf	___flmul@temp+1,f
  3306  07A2                     l2286:	
  3307  07A2  0853               	movf	___flmul@temp+1,w
  3308  07A3  3A80               	xorlw	128
  3309  07A4  00FF               	movwf	127
  3310  07A5  3080               	movlw	128
  3311  07A6  027F               	subwf	127,w
  3312  07A7  1D03               	skipz
  3313  07A8  2FAB               	goto	u3275
  3314  07A9  30FF               	movlw	255
  3315  07AA  0252               	subwf	___flmul@temp,w
  3316  07AB                     u3275:	
  3317  07AB  1C03               	skipc
  3318  07AC  2FB8               	goto	l2290
  3319  07AD  307F               	movlw	127
  3320  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  3321  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  3322  07B0  00D1               	movwf	___flmul@prod+3
  3323  07B1  3080               	movlw	128
  3324  07B2  00D0               	movwf	___flmul@prod+2
  3325  07B3  3000               	movlw	0
  3326  07B4  00CF               	movwf	___flmul@prod+1
  3327  07B5  3000               	movlw	0
  3328  07B6  00CE               	movwf	___flmul@prod
  3329  07B7  2FE8               	goto	l665
  3330  07B8                     l2290:	
  3331  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  3332  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  3333  07BA  0853               	movf	___flmul@temp+1,w
  3334  07BB  3A80               	xorlw	128
  3335  07BC  00FF               	movwf	127
  3336  07BD  3080               	movlw	128
  3337  07BE  027F               	subwf	127,w
  3338  07BF  1D03               	skipz
  3339  07C0  2FC3               	goto	u3285
  3340  07C1  3001               	movlw	1
  3341  07C2  0252               	subwf	___flmul@temp,w
  3342  07C3                     u3285:	
  3343  07C3  1803               	skipnc
  3344  07C4  2FD1               	goto	l2296
  3345  07C5  3000               	movlw	0
  3346  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  3347  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  3348  07C8  00D1               	movwf	___flmul@prod+3
  3349  07C9  3000               	movlw	0
  3350  07CA  00D0               	movwf	___flmul@prod+2
  3351  07CB  3000               	movlw	0
  3352  07CC  00CF               	movwf	___flmul@prod+1
  3353  07CD  3000               	movlw	0
  3354  07CE  00CE               	movwf	___flmul@prod
  3355  07CF  01C7               	clrf	___flmul@sign
  3356  07D0  2FE8               	goto	l665
  3357  07D1                     l2296:	
  3358  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  3359  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  3360  07D3  0852               	movf	___flmul@temp,w
  3361  07D4  00C2               	movwf	??___flmul
  3362  07D5  0842               	movf	??___flmul,w
  3363  07D6  00CD               	movwf	___flmul@bexp
  3364  07D7  30FF               	movlw	255
  3365  07D8  05CE               	andwf	___flmul@prod,f
  3366  07D9  30FF               	movlw	255
  3367  07DA  05CF               	andwf	___flmul@prod+1,f
  3368  07DB  307F               	movlw	127
  3369  07DC  05D0               	andwf	___flmul@prod+2,f
  3370  07DD  3000               	movlw	0
  3371  07DE  05D1               	andwf	___flmul@prod+3,f
  3372  07DF  184D               	btfsc	___flmul@bexp,0
  3373  07E0  17D0               	bsf	___flmul@prod+2,7
  3374  07E1  084D               	movf	___flmul@bexp,w
  3375  07E2  00C2               	movwf	??___flmul
  3376  07E3  1003               	clrc
  3377  07E4  0C42               	rrf	??___flmul,w
  3378  07E5  00C3               	movwf	??___flmul+1
  3379  07E6  0843               	movf	??___flmul+1,w
  3380  07E7  00D1               	movwf	___flmul@prod+3
  3381  07E8                     l665:	
  3382  07E8  0847               	movf	___flmul@sign,w
  3383  07E9  00C2               	movwf	??___flmul
  3384  07EA  0842               	movf	??___flmul,w
  3385  07EB  04D1               	iorwf	___flmul@prod+3,f
  3386  07EC  0851               	movf	___flmul@prod+3,w
  3387  07ED  00BD               	movwf	?___flmul+3
  3388  07EE  0850               	movf	___flmul@prod+2,w
  3389  07EF  00BC               	movwf	?___flmul+2
  3390  07F0  084F               	movf	___flmul@prod+1,w
  3391  07F1  00BB               	movwf	?___flmul+1
  3392  07F2  084E               	movf	___flmul@prod,w
  3393  07F3  00BA               	movwf	?___flmul
  3394  07F4  0008               	return
  3395  07F5                     __end_of___flmul:	
  3396                           
  3397                           	psect	text9
  3398  0A33                     __ptext9:	
  3399 ;; *************** function __Umul8_16 *****************
  3400 ;; Defined at:
  3401 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;  multiplier      1    wreg     unsigned char 
  3404 ;;  multiplicand    1    0[COMMON] unsigned char 
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;  multiplier      1    8[COMMON] unsigned char 
  3407 ;;  word_mpld       2    6[COMMON] unsigned int 
  3408 ;;  product         2    4[COMMON] unsigned int 
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  2    0[COMMON] unsigned int 
  3411 ;; Registers used:
  3412 ;;		wreg, status,2, status,0
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3418 ;;      Params:         2       0       0       0       0
  3419 ;;      Locals:         5       0       0       0       0
  3420 ;;      Temps:          2       0       0       0       0
  3421 ;;      Totals:         9       0       0       0       0
  3422 ;;Total ram usage:        9 bytes
  3423 ;; Hardware stack levels used:    1
  3424 ;; This function calls:
  3425 ;;		Nothing
  3426 ;; This function is called by:
  3427 ;;		___flmul
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431                           
  3432                           ;psect for function __Umul8_16
  3433  0A33                     __Umul8_16:	
  3434                           
  3435                           ;incstack = 0
  3436                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3437                           ;__Umul8_16@multiplier stored from wreg
  3438  0A33  00F8               	movwf	__Umul8_16@multiplier
  3439  0A34  01F4               	clrf	__Umul8_16@product
  3440  0A35  01F5               	clrf	__Umul8_16@product+1
  3441  0A36  0870               	movf	__Umul8_16@multiplicand,w
  3442  0A37  00F2               	movwf	??__Umul8_16
  3443  0A38  01F3               	clrf	??__Umul8_16+1
  3444  0A39  0872               	movf	??__Umul8_16,w
  3445  0A3A  00F6               	movwf	__Umul8_16@word_mpld
  3446  0A3B  0873               	movf	??__Umul8_16+1,w
  3447  0A3C  00F7               	movwf	__Umul8_16@word_mpld+1
  3448  0A3D                     l1694:	
  3449  0A3D  1C78               	btfss	__Umul8_16@multiplier,0
  3450  0A3E  2A45               	goto	l710
  3451  0A3F  0876               	movf	__Umul8_16@word_mpld,w
  3452  0A40  07F4               	addwf	__Umul8_16@product,f
  3453  0A41  1803               	skipnc
  3454  0A42  0AF5               	incf	__Umul8_16@product+1,f
  3455  0A43  0877               	movf	__Umul8_16@word_mpld+1,w
  3456  0A44  07F5               	addwf	__Umul8_16@product+1,f
  3457  0A45                     l710:	
  3458  0A45  3001               	movlw	1
  3459  0A46                     u1905:	
  3460  0A46  1003               	clrc
  3461  0A47  0DF6               	rlf	__Umul8_16@word_mpld,f
  3462  0A48  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  3463  0A49  3EFF               	addlw	-1
  3464  0A4A  1D03               	skipz
  3465  0A4B  2A46               	goto	u1905
  3466  0A4C  1003               	clrc
  3467  0A4D  0CF8               	rrf	__Umul8_16@multiplier,f
  3468  0A4E  0878               	movf	__Umul8_16@multiplier,w
  3469  0A4F  1D03               	btfss	3,2
  3470  0A50  2A3D               	goto	l1694
  3471  0A51  0875               	movf	__Umul8_16@product+1,w
  3472  0A52  00F1               	movwf	?__Umul8_16+1
  3473  0A53  0874               	movf	__Umul8_16@product,w
  3474  0A54  00F0               	movwf	?__Umul8_16
  3475  0A55  0008               	return
  3476  0A56                     __end_of__Umul8_16:	
  3477                           
  3478                           	psect	text10
  3479  010E                     __ptext10:	
  3480 ;; *************** function ___fldiv *****************
  3481 ;; Defined at:
  3482 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;  a               4    0[BANK0 ] unsigned int 
  3485 ;;  b               4    4[BANK0 ] unsigned int 
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;  grs             4   20[BANK0 ] unsigned long 
  3488 ;;  rem             4   13[BANK0 ] unsigned long 
  3489 ;;  new_exp         2   18[BANK0 ] int 
  3490 ;;  aexp            1   25[BANK0 ] unsigned char 
  3491 ;;  bexp            1   24[BANK0 ] unsigned char 
  3492 ;;  sign            1   17[BANK0 ] unsigned char 
  3493 ;; Return value:  Size  Location     Type
  3494 ;;                  4    0[BANK0 ] unsigned char 
  3495 ;; Registers used:
  3496 ;;		wreg, status,2, status,0, btemp+1
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3502 ;;      Params:         0       8       0       0       0
  3503 ;;      Locals:         0      13       0       0       0
  3504 ;;      Temps:          0       5       0       0       0
  3505 ;;      Totals:         0      26       0       0       0
  3506 ;;Total ram usage:       26 bytes
  3507 ;; Hardware stack levels used:    1
  3508 ;; This function calls:
  3509 ;;		Nothing
  3510 ;; This function is called by:
  3511 ;;		_setAngule1
  3512 ;;		_setAngule2
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           
  3517                           ;psect for function ___fldiv
  3518  010E                     ___fldiv:	
  3519                           
  3520                           ;incstack = 0
  3521                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  3522  010E  1283               	bcf	3,5	;RP0=0, select bank0
  3523  010F  1303               	bcf	3,6	;RP1=0, select bank0
  3524  0110  0827               	movf	___fldiv@b+3,w
  3525  0111  3980               	andlw	128
  3526  0112  00A8               	movwf	??___fldiv
  3527  0113  0828               	movf	??___fldiv,w
  3528  0114  00B1               	movwf	___fldiv@sign
  3529  0115  0827               	movf	___fldiv@b+3,w
  3530  0116  00A8               	movwf	??___fldiv
  3531  0117  0728               	addwf	??___fldiv,w
  3532  0118  00A9               	movwf	??___fldiv+1
  3533  0119  0829               	movf	??___fldiv+1,w
  3534  011A  00B8               	movwf	___fldiv@bexp
  3535  011B  1BA6               	btfsc	___fldiv@b+2,7
  3536  011C  1438               	bsf	___fldiv@bexp,0
  3537  011D  0838               	movf	___fldiv@bexp,w
  3538  011E  1903               	btfsc	3,2
  3539  011F  292E               	goto	l2044
  3540  0120  0A38               	incf	___fldiv@bexp,w
  3541  0121  1D03               	btfss	3,2
  3542  0122  292B               	goto	l2040
  3543  0123  3000               	movlw	0
  3544  0124  00A7               	movwf	___fldiv@b+3
  3545  0125  3000               	movlw	0
  3546  0126  00A6               	movwf	___fldiv@b+2
  3547  0127  3000               	movlw	0
  3548  0128  00A5               	movwf	___fldiv@b+1
  3549  0129  3000               	movlw	0
  3550  012A  00A4               	movwf	___fldiv@b
  3551  012B                     l2040:	
  3552  012B  17A6               	bsf	___fldiv@b+2,7
  3553  012C  01A7               	clrf	___fldiv@b+3
  3554  012D  2936               	goto	l2046
  3555  012E                     l2044:	
  3556  012E  3000               	movlw	0
  3557  012F  00A7               	movwf	___fldiv@b+3
  3558  0130  3000               	movlw	0
  3559  0131  00A6               	movwf	___fldiv@b+2
  3560  0132  3000               	movlw	0
  3561  0133  00A5               	movwf	___fldiv@b+1
  3562  0134  3000               	movlw	0
  3563  0135  00A4               	movwf	___fldiv@b
  3564  0136                     l2046:	
  3565  0136  0823               	movf	___fldiv@a+3,w
  3566  0137  3980               	andlw	128
  3567  0138  00A8               	movwf	??___fldiv
  3568  0139  0828               	movf	??___fldiv,w
  3569  013A  06B1               	xorwf	___fldiv@sign,f
  3570  013B  0823               	movf	___fldiv@a+3,w
  3571  013C  00A8               	movwf	??___fldiv
  3572  013D  0728               	addwf	??___fldiv,w
  3573  013E  00A9               	movwf	??___fldiv+1
  3574  013F  0829               	movf	??___fldiv+1,w
  3575  0140  00B9               	movwf	___fldiv@aexp
  3576  0141  1BA2               	btfsc	___fldiv@a+2,7
  3577  0142  1439               	bsf	___fldiv@aexp,0
  3578  0143  0839               	movf	___fldiv@aexp,w
  3579  0144  1903               	btfsc	3,2
  3580  0145  2954               	goto	l2064
  3581  0146  0A39               	incf	___fldiv@aexp,w
  3582  0147  1D03               	btfss	3,2
  3583  0148  2951               	goto	l2060
  3584  0149  3000               	movlw	0
  3585  014A  00A3               	movwf	___fldiv@a+3
  3586  014B  3000               	movlw	0
  3587  014C  00A2               	movwf	___fldiv@a+2
  3588  014D  3000               	movlw	0
  3589  014E  00A1               	movwf	___fldiv@a+1
  3590  014F  3000               	movlw	0
  3591  0150  00A0               	movwf	___fldiv@a
  3592  0151                     l2060:	
  3593  0151  17A2               	bsf	___fldiv@a+2,7
  3594  0152  01A3               	clrf	___fldiv@a+3
  3595  0153  295C               	goto	l613
  3596  0154                     l2064:	
  3597  0154  3000               	movlw	0
  3598  0155  00A3               	movwf	___fldiv@a+3
  3599  0156  3000               	movlw	0
  3600  0157  00A2               	movwf	___fldiv@a+2
  3601  0158  3000               	movlw	0
  3602  0159  00A1               	movwf	___fldiv@a+1
  3603  015A  3000               	movlw	0
  3604  015B  00A0               	movwf	___fldiv@a
  3605  015C                     l613:	
  3606  015C  0823               	movf	___fldiv@a+3,w
  3607  015D  0422               	iorwf	___fldiv@a+2,w
  3608  015E  0421               	iorwf	___fldiv@a+1,w
  3609  015F  0420               	iorwf	___fldiv@a,w
  3610  0160  1D03               	skipz
  3611  0161  297B               	goto	l2074
  3612  0162  3000               	movlw	0
  3613  0163  00A7               	movwf	___fldiv@b+3
  3614  0164  3000               	movlw	0
  3615  0165  00A6               	movwf	___fldiv@b+2
  3616  0166  3000               	movlw	0
  3617  0167  00A5               	movwf	___fldiv@b+1
  3618  0168  3000               	movlw	0
  3619  0169  00A4               	movwf	___fldiv@b
  3620  016A  3080               	movlw	128
  3621  016B  04A6               	iorwf	___fldiv@b+2,f
  3622  016C  307F               	movlw	127
  3623  016D  04A7               	iorwf	___fldiv@b+3,f
  3624  016E                     L2:	
  3625  016E  0831               	movf	___fldiv@sign,w
  3626  016F  00A8               	movwf	??___fldiv
  3627  0170  0828               	movf	??___fldiv,w
  3628  0171  04A7               	iorwf	___fldiv@b+3,f
  3629  0172  0827               	movf	___fldiv@b+3,w
  3630  0173  00A3               	movwf	?___fldiv+3
  3631  0174  0826               	movf	___fldiv@b+2,w
  3632  0175  00A2               	movwf	?___fldiv+2
  3633  0176  0825               	movf	___fldiv@b+1,w
  3634  0177  00A1               	movwf	?___fldiv+1
  3635  0178  0824               	movf	___fldiv@b,w
  3636  0179  00A0               	movwf	?___fldiv
  3637  017A  0008               	return
  3638  017B                     l2074:	
  3639  017B  0838               	movf	___fldiv@bexp,w
  3640  017C  1D03               	btfss	3,2
  3641  017D  2987               	goto	l2080
  3642  017E  3000               	movlw	0
  3643  017F  00A3               	movwf	?___fldiv+3
  3644  0180  3000               	movlw	0
  3645  0181  00A2               	movwf	?___fldiv+2
  3646  0182  3000               	movlw	0
  3647  0183  00A1               	movwf	?___fldiv+1
  3648  0184  3000               	movlw	0
  3649  0185  00A0               	movwf	?___fldiv
  3650  0186  0008               	return
  3651  0187                     l2080:	
  3652  0187  0838               	movf	___fldiv@bexp,w
  3653  0188  00A8               	movwf	??___fldiv
  3654  0189  01A9               	clrf	??___fldiv+1
  3655  018A  0829               	movf	??___fldiv+1,w
  3656  018B  00AB               	movwf	??___fldiv+3
  3657  018C  0839               	movf	___fldiv@aexp,w
  3658  018D  0228               	subwf	??___fldiv,w
  3659  018E  00AA               	movwf	??___fldiv+2
  3660  018F  1C03               	skipc
  3661  0190  03AB               	decf	??___fldiv+3,f
  3662  0191  082A               	movf	??___fldiv+2,w
  3663  0192  3E7F               	addlw	127
  3664  0193  00B2               	movwf	___fldiv@new_exp
  3665  0194  082B               	movf	??___fldiv+3,w
  3666  0195  1803               	skipnc
  3667  0196  3E01               	addlw	1
  3668  0197  3E00               	addlw	0
  3669  0198  00B3               	movwf	___fldiv@new_exp+1
  3670  0199  0827               	movf	___fldiv@b+3,w
  3671  019A  00B0               	movwf	___fldiv@rem+3
  3672  019B  0826               	movf	___fldiv@b+2,w
  3673  019C  00AF               	movwf	___fldiv@rem+2
  3674  019D  0825               	movf	___fldiv@b+1,w
  3675  019E  00AE               	movwf	___fldiv@rem+1
  3676  019F  0824               	movf	___fldiv@b,w
  3677  01A0  00AD               	movwf	___fldiv@rem
  3678  01A1  3000               	movlw	0
  3679  01A2  00A7               	movwf	___fldiv@b+3
  3680  01A3  3000               	movlw	0
  3681  01A4  00A6               	movwf	___fldiv@b+2
  3682  01A5  3000               	movlw	0
  3683  01A6  00A5               	movwf	___fldiv@b+1
  3684  01A7  3000               	movlw	0
  3685  01A8  00A4               	movwf	___fldiv@b
  3686  01A9  3000               	movlw	0
  3687  01AA  00B7               	movwf	___fldiv@grs+3
  3688  01AB  3000               	movlw	0
  3689  01AC  00B6               	movwf	___fldiv@grs+2
  3690  01AD  3000               	movlw	0
  3691  01AE  00B5               	movwf	___fldiv@grs+1
  3692  01AF  3000               	movlw	0
  3693  01B0  00B4               	movwf	___fldiv@grs
  3694  01B1  01B9               	clrf	___fldiv@aexp
  3695  01B2                     l2108:	
  3696  01B2  301A               	movlw	26
  3697  01B3  0239               	subwf	___fldiv@aexp,w
  3698  01B4  1803               	btfsc	3,0
  3699  01B5  29FA               	goto	l2110
  3700  01B6  0839               	movf	___fldiv@aexp,w
  3701  01B7  1903               	btfsc	3,2
  3702  01B8  29D6               	goto	l2100
  3703  01B9  3001               	movlw	1
  3704  01BA  00A8               	movwf	??___fldiv
  3705  01BB                     u2735:	
  3706  01BB  1003               	clrc
  3707  01BC  0DAD               	rlf	___fldiv@rem,f
  3708  01BD  0DAE               	rlf	___fldiv@rem+1,f
  3709  01BE  0DAF               	rlf	___fldiv@rem+2,f
  3710  01BF  0DB0               	rlf	___fldiv@rem+3,f
  3711  01C0  0BA8               	decfsz	??___fldiv,f
  3712  01C1  29BB               	goto	u2735
  3713  01C2  3001               	movlw	1
  3714  01C3  00A8               	movwf	??___fldiv
  3715  01C4                     u2745:	
  3716  01C4  1003               	clrc
  3717  01C5  0DA4               	rlf	___fldiv@b,f
  3718  01C6  0DA5               	rlf	___fldiv@b+1,f
  3719  01C7  0DA6               	rlf	___fldiv@b+2,f
  3720  01C8  0DA7               	rlf	___fldiv@b+3,f
  3721  01C9  0BA8               	decfsz	??___fldiv,f
  3722  01CA  29C4               	goto	u2745
  3723  01CB  1BB7               	btfsc	___fldiv@grs+3,7
  3724  01CC  1424               	bsf	___fldiv@b,0
  3725  01CD  3001               	movlw	1
  3726  01CE  00A8               	movwf	??___fldiv
  3727  01CF                     u2765:	
  3728  01CF  1003               	clrc
  3729  01D0  0DB4               	rlf	___fldiv@grs,f
  3730  01D1  0DB5               	rlf	___fldiv@grs+1,f
  3731  01D2  0DB6               	rlf	___fldiv@grs+2,f
  3732  01D3  0DB7               	rlf	___fldiv@grs+3,f
  3733  01D4  0BA8               	decfsz	??___fldiv,f
  3734  01D5  29CF               	goto	u2765
  3735  01D6                     l2100:	
  3736  01D6  0823               	movf	___fldiv@a+3,w
  3737  01D7  0230               	subwf	___fldiv@rem+3,w
  3738  01D8  1D03               	skipz
  3739  01D9  29E4               	goto	u2775
  3740  01DA  0822               	movf	___fldiv@a+2,w
  3741  01DB  022F               	subwf	___fldiv@rem+2,w
  3742  01DC  1D03               	skipz
  3743  01DD  29E4               	goto	u2775
  3744  01DE  0821               	movf	___fldiv@a+1,w
  3745  01DF  022E               	subwf	___fldiv@rem+1,w
  3746  01E0  1D03               	skipz
  3747  01E1  29E4               	goto	u2775
  3748  01E2  0820               	movf	___fldiv@a,w
  3749  01E3  022D               	subwf	___fldiv@rem,w
  3750  01E4                     u2775:	
  3751  01E4  1C03               	skipc
  3752  01E5  29F5               	goto	l2106
  3753  01E6  1737               	bsf	___fldiv@grs+3,6
  3754  01E7  0820               	movf	___fldiv@a,w
  3755  01E8  02AD               	subwf	___fldiv@rem,f
  3756  01E9  0821               	movf	___fldiv@a+1,w
  3757  01EA  1C03               	skipc
  3758  01EB  0F21               	incfsz	___fldiv@a+1,w
  3759  01EC  02AE               	subwf	___fldiv@rem+1,f
  3760  01ED  0822               	movf	___fldiv@a+2,w
  3761  01EE  1C03               	skipc
  3762  01EF  0F22               	incfsz	___fldiv@a+2,w
  3763  01F0  02AF               	subwf	___fldiv@rem+2,f
  3764  01F1  0823               	movf	___fldiv@a+3,w
  3765  01F2  1C03               	skipc
  3766  01F3  0F23               	incfsz	___fldiv@a+3,w
  3767  01F4  02B0               	subwf	___fldiv@rem+3,f
  3768  01F5                     l2106:	
  3769  01F5  3001               	movlw	1
  3770  01F6  00A8               	movwf	??___fldiv
  3771  01F7  0828               	movf	??___fldiv,w
  3772  01F8  07B9               	addwf	___fldiv@aexp,f
  3773  01F9  29B2               	goto	l2108
  3774  01FA                     l2110:	
  3775  01FA  0830               	movf	___fldiv@rem+3,w
  3776  01FB  042F               	iorwf	___fldiv@rem+2,w
  3777  01FC  042E               	iorwf	___fldiv@rem+1,w
  3778  01FD  042D               	iorwf	___fldiv@rem,w
  3779  01FE  1D03               	btfss	3,2
  3780  01FF  1434               	bsf	___fldiv@grs,0
  3781  0200                     l2124:	
  3782  0200  1BA6               	btfsc	___fldiv@b+2,7
  3783  0201  2A1D               	goto	l2126
  3784  0202  3001               	movlw	1
  3785  0203  00A8               	movwf	??___fldiv
  3786  0204                     u2805:	
  3787  0204  1003               	clrc
  3788  0205  0DA4               	rlf	___fldiv@b,f
  3789  0206  0DA5               	rlf	___fldiv@b+1,f
  3790  0207  0DA6               	rlf	___fldiv@b+2,f
  3791  0208  0DA7               	rlf	___fldiv@b+3,f
  3792  0209  0BA8               	decfsz	??___fldiv,f
  3793  020A  2A04               	goto	u2805
  3794  020B  1BB7               	btfsc	___fldiv@grs+3,7
  3795  020C  1424               	bsf	___fldiv@b,0
  3796  020D  3001               	movlw	1
  3797  020E  00A8               	movwf	??___fldiv
  3798  020F                     u2825:	
  3799  020F  1003               	clrc
  3800  0210  0DB4               	rlf	___fldiv@grs,f
  3801  0211  0DB5               	rlf	___fldiv@grs+1,f
  3802  0212  0DB6               	rlf	___fldiv@grs+2,f
  3803  0213  0DB7               	rlf	___fldiv@grs+3,f
  3804  0214  0BA8               	decfsz	??___fldiv,f
  3805  0215  2A0F               	goto	u2825
  3806  0216  30FF               	movlw	255
  3807  0217  07B2               	addwf	___fldiv@new_exp,f
  3808  0218  1803               	skipnc
  3809  0219  0AB3               	incf	___fldiv@new_exp+1,f
  3810  021A  30FF               	movlw	255
  3811  021B  07B3               	addwf	___fldiv@new_exp+1,f
  3812  021C  2A00               	goto	l2124
  3813  021D                     l2126:	
  3814  021D  01B9               	clrf	___fldiv@aexp
  3815  021E  1FB7               	btfss	___fldiv@grs+3,7
  3816  021F  2A36               	goto	l2136
  3817  0220  30FF               	movlw	255
  3818  0221  0534               	andwf	___fldiv@grs,w
  3819  0222  00A8               	movwf	??___fldiv
  3820  0223  30FF               	movlw	255
  3821  0224  0535               	andwf	___fldiv@grs+1,w
  3822  0225  00A9               	movwf	??___fldiv+1
  3823  0226  30FF               	movlw	255
  3824  0227  0536               	andwf	___fldiv@grs+2,w
  3825  0228  00AA               	movwf	??___fldiv+2
  3826  0229  307F               	movlw	127
  3827  022A  0537               	andwf	___fldiv@grs+3,w
  3828  022B  00AB               	movwf	??___fldiv+3
  3829  022C  082B               	movf	??___fldiv+3,w
  3830  022D  042A               	iorwf	??___fldiv+2,w
  3831  022E  0429               	iorwf	??___fldiv+1,w
  3832  022F  0428               	iorwf	??___fldiv,w
  3833  0230  1903               	skipnz
  3834  0231  1824               	btfsc	___fldiv@b,0
  3835  0232  2A34               	goto	l2132
  3836  0233  2A36               	goto	l2136
  3837  0234                     l2132:	
  3838  0234  01B9               	clrf	___fldiv@aexp
  3839  0235  0AB9               	incf	___fldiv@aexp,f
  3840  0236                     l2136:	
  3841  0236  0839               	movf	___fldiv@aexp,w
  3842  0237  1903               	btfsc	3,2
  3843  0238  2A68               	goto	l2146
  3844  0239  3001               	movlw	1
  3845  023A  07A4               	addwf	___fldiv@b,f
  3846  023B  3000               	movlw	0
  3847  023C  1803               	skipnc
  3848  023D  3001               	movlw	1
  3849  023E  07A5               	addwf	___fldiv@b+1,f
  3850  023F  3000               	movlw	0
  3851  0240  1803               	skipnc
  3852  0241  3001               	movlw	1
  3853  0242  07A6               	addwf	___fldiv@b+2,f
  3854  0243  3000               	movlw	0
  3855  0244  1803               	skipnc
  3856  0245  3001               	movlw	1
  3857  0246  07A7               	addwf	___fldiv@b+3,f
  3858  0247  1C27               	btfss	___fldiv@b+3,0
  3859  0248  2A68               	goto	l2146
  3860  0249  0824               	movf	___fldiv@b,w
  3861  024A  00A8               	movwf	??___fldiv
  3862  024B  0825               	movf	___fldiv@b+1,w
  3863  024C  00A9               	movwf	??___fldiv+1
  3864  024D  0826               	movf	___fldiv@b+2,w
  3865  024E  00AA               	movwf	??___fldiv+2
  3866  024F  0827               	movf	___fldiv@b+3,w
  3867  0250  00AB               	movwf	??___fldiv+3
  3868  0251  3001               	movlw	1
  3869  0252  00AC               	movwf	??___fldiv+4
  3870  0253                     u2895:	
  3871  0253  0D2B               	rlf	??___fldiv+3,w
  3872  0254  0CAB               	rrf	??___fldiv+3,f
  3873  0255  0CAA               	rrf	??___fldiv+2,f
  3874  0256  0CA9               	rrf	??___fldiv+1,f
  3875  0257  0CA8               	rrf	??___fldiv,f
  3876  0258  0BAC               	decfsz	??___fldiv+4,f
  3877  0259  2A53               	goto	u2895
  3878  025A  082B               	movf	??___fldiv+3,w
  3879  025B  00A7               	movwf	___fldiv@b+3
  3880  025C  082A               	movf	??___fldiv+2,w
  3881  025D  00A6               	movwf	___fldiv@b+2
  3882  025E  0829               	movf	??___fldiv+1,w
  3883  025F  00A5               	movwf	___fldiv@b+1
  3884  0260  0828               	movf	??___fldiv,w
  3885  0261  00A4               	movwf	___fldiv@b
  3886  0262  3001               	movlw	1
  3887  0263  07B2               	addwf	___fldiv@new_exp,f
  3888  0264  1803               	skipnc
  3889  0265  0AB3               	incf	___fldiv@new_exp+1,f
  3890  0266  3000               	movlw	0
  3891  0267  07B3               	addwf	___fldiv@new_exp+1,f
  3892  0268                     l2146:	
  3893  0268  0833               	movf	___fldiv@new_exp+1,w
  3894  0269  3A80               	xorlw	128
  3895  026A  00FF               	movwf	127
  3896  026B  3080               	movlw	128
  3897  026C  027F               	subwf	127,w
  3898  026D  1D03               	skipz
  3899  026E  2A71               	goto	u2905
  3900  026F  30FF               	movlw	255
  3901  0270  0232               	subwf	___fldiv@new_exp,w
  3902  0271                     u2905:	
  3903  0271  1C03               	skipc
  3904  0272  2A81               	goto	l2150
  3905  0273  30FF               	movlw	255
  3906  0274  1283               	bcf	3,5	;RP0=0, select bank0
  3907  0275  1303               	bcf	3,6	;RP1=0, select bank0
  3908  0276  00B2               	movwf	___fldiv@new_exp
  3909  0277  3000               	movlw	0
  3910  0278  00B3               	movwf	___fldiv@new_exp+1
  3911  0279  3000               	movlw	0
  3912  027A  00A7               	movwf	___fldiv@b+3
  3913  027B  3000               	movlw	0
  3914  027C  00A6               	movwf	___fldiv@b+2
  3915  027D  3000               	movlw	0
  3916  027E  00A5               	movwf	___fldiv@b+1
  3917  027F  3000               	movlw	0
  3918  0280  00A4               	movwf	___fldiv@b
  3919  0281                     l2150:	
  3920  0281  1283               	bcf	3,5	;RP0=0, select bank0
  3921  0282  1303               	bcf	3,6	;RP1=0, select bank0
  3922  0283  0833               	movf	___fldiv@new_exp+1,w
  3923  0284  3A80               	xorlw	128
  3924  0285  00FF               	movwf	127
  3925  0286  3080               	movlw	128
  3926  0287  027F               	subwf	127,w
  3927  0288  1D03               	skipz
  3928  0289  2A8C               	goto	u2915
  3929  028A  3001               	movlw	1
  3930  028B  0232               	subwf	___fldiv@new_exp,w
  3931  028C                     u2915:	
  3932  028C  1803               	skipnc
  3933  028D  2A9B               	goto	l635
  3934  028E  1283               	bcf	3,5	;RP0=0, select bank0
  3935  028F  1303               	bcf	3,6	;RP1=0, select bank0
  3936  0290  01B2               	clrf	___fldiv@new_exp
  3937  0291  01B3               	clrf	___fldiv@new_exp+1
  3938  0292  3000               	movlw	0
  3939  0293  00A7               	movwf	___fldiv@b+3
  3940  0294  3000               	movlw	0
  3941  0295  00A6               	movwf	___fldiv@b+2
  3942  0296  3000               	movlw	0
  3943  0297  00A5               	movwf	___fldiv@b+1
  3944  0298  3000               	movlw	0
  3945  0299  00A4               	movwf	___fldiv@b
  3946  029A  01B1               	clrf	___fldiv@sign
  3947  029B                     l635:	
  3948  029B  1283               	bcf	3,5	;RP0=0, select bank0
  3949  029C  1303               	bcf	3,6	;RP1=0, select bank0
  3950  029D  0832               	movf	___fldiv@new_exp,w
  3951  029E  00A8               	movwf	??___fldiv
  3952  029F  0828               	movf	??___fldiv,w
  3953  02A0  00B8               	movwf	___fldiv@bexp
  3954  02A1  1C38               	btfss	___fldiv@bexp,0
  3955  02A2  2AA5               	goto	l2162
  3956  02A3  17A6               	bsf	___fldiv@b+2,7
  3957  02A4  2AA9               	goto	l637
  3958  02A5                     l2162:	
  3959  02A5  307F               	movlw	127
  3960  02A6  00A8               	movwf	??___fldiv
  3961  02A7  0828               	movf	??___fldiv,w
  3962  02A8  05A6               	andwf	___fldiv@b+2,f
  3963  02A9                     l637:	
  3964  02A9  0838               	movf	___fldiv@bexp,w
  3965  02AA  00A8               	movwf	??___fldiv
  3966  02AB  1003               	clrc
  3967  02AC  0C28               	rrf	??___fldiv,w
  3968  02AD  00A9               	movwf	??___fldiv+1
  3969  02AE  0829               	movf	??___fldiv+1,w
  3970  02AF  00A7               	movwf	___fldiv@b+3
  3971  02B0  296E               	goto	L2
  3972  02B1                     __end_of___fldiv:	
  3973                           
  3974                           	psect	text11
  3975  02B1                     __ptext11:	
  3976 ;; *************** function ___fladd *****************
  3977 ;; Defined at:
  3978 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;  b               4   52[BANK0 ] unsigned char 
  3981 ;;  a               4   56[BANK0 ] unsigned char 
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;  grs             1   71[BANK0 ] unsigned char 
  3984 ;;  bexp            1   70[BANK0 ] unsigned char 
  3985 ;;  aexp            1   69[BANK0 ] unsigned char 
  3986 ;;  signs           1   68[BANK0 ] unsigned char 
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  4   52[BANK0 ] unsigned char 
  3989 ;; Registers used:
  3990 ;;		wreg, status,2, status,0, btemp+1
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3996 ;;      Params:         0       8       0       0       0
  3997 ;;      Locals:         0       4       0       0       0
  3998 ;;      Temps:          0       8       0       0       0
  3999 ;;      Totals:         0      20       0       0       0
  4000 ;;Total ram usage:       20 bytes
  4001 ;; Hardware stack levels used:    1
  4002 ;; This function calls:
  4003 ;;		Nothing
  4004 ;; This function is called by:
  4005 ;;		_setAngule1
  4006 ;;		_setAngule2
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           
  4011                           ;psect for function ___fladd
  4012  02B1                     ___fladd:	
  4013                           
  4014                           ;incstack = 0
  4015                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  4016  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  4017  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  4018  02B3  0857               	movf	___fladd@b+3,w
  4019  02B4  3980               	andlw	128
  4020  02B5  00DC               	movwf	??___fladd
  4021  02B6  085C               	movf	??___fladd,w
  4022  02B7  00E4               	movwf	___fladd@signs
  4023  02B8  0857               	movf	___fladd@b+3,w
  4024  02B9  00DC               	movwf	??___fladd
  4025  02BA  075C               	addwf	??___fladd,w
  4026  02BB  00DD               	movwf	??___fladd+1
  4027  02BC  085D               	movf	??___fladd+1,w
  4028  02BD  00E6               	movwf	___fladd@bexp
  4029  02BE  1BD6               	btfsc	___fladd@b+2,7
  4030  02BF  1466               	bsf	___fladd@bexp,0
  4031  02C0  0866               	movf	___fladd@bexp,w
  4032  02C1  1903               	btfsc	3,2
  4033  02C2  2AD1               	goto	l1850
  4034  02C3  0A66               	incf	___fladd@bexp,w
  4035  02C4  1D03               	btfss	3,2
  4036  02C5  2ACE               	goto	l1846
  4037  02C6  3000               	movlw	0
  4038  02C7  00D7               	movwf	___fladd@b+3
  4039  02C8  3000               	movlw	0
  4040  02C9  00D6               	movwf	___fladd@b+2
  4041  02CA  3000               	movlw	0
  4042  02CB  00D5               	movwf	___fladd@b+1
  4043  02CC  3000               	movlw	0
  4044  02CD  00D4               	movwf	___fladd@b
  4045  02CE                     l1846:	
  4046  02CE  17D6               	bsf	___fladd@b+2,7
  4047  02CF  01D7               	clrf	___fladd@b+3
  4048  02D0  2AD9               	goto	l1852
  4049  02D1                     l1850:	
  4050  02D1  3000               	movlw	0
  4051  02D2  00D7               	movwf	___fladd@b+3
  4052  02D3  3000               	movlw	0
  4053  02D4  00D6               	movwf	___fladd@b+2
  4054  02D5  3000               	movlw	0
  4055  02D6  00D5               	movwf	___fladd@b+1
  4056  02D7  3000               	movlw	0
  4057  02D8  00D4               	movwf	___fladd@b
  4058  02D9                     l1852:	
  4059  02D9  085B               	movf	___fladd@a+3,w
  4060  02DA  3980               	andlw	128
  4061  02DB  00DC               	movwf	??___fladd
  4062  02DC  085C               	movf	??___fladd,w
  4063  02DD  00E5               	movwf	___fladd@aexp
  4064  02DE  0865               	movf	___fladd@aexp,w
  4065  02DF  0664               	xorwf	___fladd@signs,w
  4066  02E0  1D03               	btfss	3,2
  4067  02E1  1764               	bsf	___fladd@signs,6
  4068  02E2  085B               	movf	___fladd@a+3,w
  4069  02E3  00DC               	movwf	??___fladd
  4070  02E4  075C               	addwf	??___fladd,w
  4071  02E5  00DD               	movwf	??___fladd+1
  4072  02E6  085D               	movf	??___fladd+1,w
  4073  02E7  00E5               	movwf	___fladd@aexp
  4074  02E8  1BDA               	btfsc	___fladd@a+2,7
  4075  02E9  1465               	bsf	___fladd@aexp,0
  4076  02EA  0865               	movf	___fladd@aexp,w
  4077  02EB  1903               	btfsc	3,2
  4078  02EC  2AFB               	goto	l1874
  4079  02ED  0A65               	incf	___fladd@aexp,w
  4080  02EE  1D03               	btfss	3,2
  4081  02EF  2AF8               	goto	l1870
  4082  02F0  3000               	movlw	0
  4083  02F1  00DB               	movwf	___fladd@a+3
  4084  02F2  3000               	movlw	0
  4085  02F3  00DA               	movwf	___fladd@a+2
  4086  02F4  3000               	movlw	0
  4087  02F5  00D9               	movwf	___fladd@a+1
  4088  02F6  3000               	movlw	0
  4089  02F7  00D8               	movwf	___fladd@a
  4090  02F8                     l1870:	
  4091  02F8  17DA               	bsf	___fladd@a+2,7
  4092  02F9  01DB               	clrf	___fladd@a+3
  4093  02FA  2B03               	goto	l557
  4094  02FB                     l1874:	
  4095  02FB  3000               	movlw	0
  4096  02FC  00DB               	movwf	___fladd@a+3
  4097  02FD  3000               	movlw	0
  4098  02FE  00DA               	movwf	___fladd@a+2
  4099  02FF  3000               	movlw	0
  4100  0300  00D9               	movwf	___fladd@a+1
  4101  0301  3000               	movlw	0
  4102  0302  00D8               	movwf	___fladd@a
  4103  0303                     l557:	
  4104  0303  0866               	movf	___fladd@bexp,w
  4105  0304  0265               	subwf	___fladd@aexp,w
  4106  0305  1803               	skipnc
  4107  0306  2B49               	goto	l1910
  4108  0307  1F64               	btfss	___fladd@signs,6
  4109  0308  2B0D               	goto	l1880
  4110  0309  3080               	movlw	128
  4111  030A  00DC               	movwf	??___fladd
  4112  030B  085C               	movf	??___fladd,w
  4113  030C  06E4               	xorwf	___fladd@signs,f
  4114  030D                     l1880:	
  4115  030D  0866               	movf	___fladd@bexp,w
  4116  030E  00DC               	movwf	??___fladd
  4117  030F  085C               	movf	??___fladd,w
  4118  0310  00E7               	movwf	___fladd@grs
  4119  0311  0865               	movf	___fladd@aexp,w
  4120  0312  00DC               	movwf	??___fladd
  4121  0313  085C               	movf	??___fladd,w
  4122  0314  00E6               	movwf	___fladd@bexp
  4123  0315  0867               	movf	___fladd@grs,w
  4124  0316  00DC               	movwf	??___fladd
  4125  0317  085C               	movf	??___fladd,w
  4126  0318  00E5               	movwf	___fladd@aexp
  4127  0319  0854               	movf	___fladd@b,w
  4128  031A  00DC               	movwf	??___fladd
  4129  031B  085C               	movf	??___fladd,w
  4130  031C  00E7               	movwf	___fladd@grs
  4131  031D  0858               	movf	___fladd@a,w
  4132  031E  00DC               	movwf	??___fladd
  4133  031F  085C               	movf	??___fladd,w
  4134  0320  00D4               	movwf	___fladd@b
  4135  0321  0867               	movf	___fladd@grs,w
  4136  0322  00DC               	movwf	??___fladd
  4137  0323  085C               	movf	??___fladd,w
  4138  0324  00D8               	movwf	___fladd@a
  4139  0325  0855               	movf	___fladd@b+1,w
  4140  0326  00DC               	movwf	??___fladd
  4141  0327  085C               	movf	??___fladd,w
  4142  0328  00E7               	movwf	___fladd@grs
  4143  0329  0859               	movf	___fladd@a+1,w
  4144  032A  00DC               	movwf	??___fladd
  4145  032B  085C               	movf	??___fladd,w
  4146  032C  00D5               	movwf	___fladd@b+1
  4147  032D  0867               	movf	___fladd@grs,w
  4148  032E  00DC               	movwf	??___fladd
  4149  032F  085C               	movf	??___fladd,w
  4150  0330  00D9               	movwf	___fladd@a+1
  4151  0331  0856               	movf	___fladd@b+2,w
  4152  0332  00DC               	movwf	??___fladd
  4153  0333  085C               	movf	??___fladd,w
  4154  0334  00E7               	movwf	___fladd@grs
  4155  0335  085A               	movf	___fladd@a+2,w
  4156  0336  00DC               	movwf	??___fladd
  4157  0337  085C               	movf	??___fladd,w
  4158  0338  00D6               	movwf	___fladd@b+2
  4159  0339  0867               	movf	___fladd@grs,w
  4160  033A  00DC               	movwf	??___fladd
  4161  033B  085C               	movf	??___fladd,w
  4162  033C  00DA               	movwf	___fladd@a+2
  4163  033D  0857               	movf	___fladd@b+3,w
  4164  033E  00DC               	movwf	??___fladd
  4165  033F  085C               	movf	??___fladd,w
  4166  0340  00E7               	movwf	___fladd@grs
  4167  0341  085B               	movf	___fladd@a+3,w
  4168  0342  00DC               	movwf	??___fladd
  4169  0343  085C               	movf	??___fladd,w
  4170  0344  00D7               	movwf	___fladd@b+3
  4171  0345  0867               	movf	___fladd@grs,w
  4172  0346  00DC               	movwf	??___fladd
  4173  0347  085C               	movf	??___fladd,w
  4174  0348  00DB               	movwf	___fladd@a+3
  4175  0349                     l1910:	
  4176  0349  01E7               	clrf	___fladd@grs
  4177  034A  0865               	movf	___fladd@aexp,w
  4178  034B  00DC               	movwf	??___fladd
  4179  034C  01DD               	clrf	??___fladd+1
  4180  034D  085D               	movf	??___fladd+1,w
  4181  034E  00DF               	movwf	??___fladd+3
  4182  034F  0866               	movf	___fladd@bexp,w
  4183  0350  025C               	subwf	??___fladd,w
  4184  0351  00DE               	movwf	??___fladd+2
  4185  0352  1C03               	skipc
  4186  0353  03DF               	decf	??___fladd+3,f
  4187  0354  085F               	movf	??___fladd+3,w
  4188  0355  3A80               	xorlw	128
  4189  0356  00FF               	movwf	127
  4190  0357  3080               	movlw	128
  4191  0358  027F               	subwf	127,w
  4192  0359  1D03               	skipz
  4193  035A  2B5D               	goto	u2275
  4194  035B  301A               	movlw	26
  4195  035C  025E               	subwf	??___fladd+2,w
  4196  035D                     u2275:	
  4197  035D  1C03               	skipc
  4198  035E  2B96               	goto	l1928
  4199  035F  1283               	bcf	3,5	;RP0=0, select bank0
  4200  0360  1303               	bcf	3,6	;RP1=0, select bank0
  4201  0361  0857               	movf	___fladd@b+3,w
  4202  0362  0456               	iorwf	___fladd@b+2,w
  4203  0363  0455               	iorwf	___fladd@b+1,w
  4204  0364  0454               	iorwf	___fladd@b,w
  4205  0365  1903               	btfsc	3,2
  4206  0366  2B69               	goto	u2280
  4207  0367  3001               	movlw	1
  4208  0368  2B6A               	goto	u2290
  4209  0369                     u2280:	
  4210  0369  3000               	movlw	0
  4211  036A                     u2290:	
  4212  036A  00DC               	movwf	??___fladd
  4213  036B  085C               	movf	??___fladd,w
  4214  036C  00E7               	movwf	___fladd@grs
  4215  036D  3000               	movlw	0
  4216  036E  00D7               	movwf	___fladd@b+3
  4217  036F  3000               	movlw	0
  4218  0370  00D6               	movwf	___fladd@b+2
  4219  0371  3000               	movlw	0
  4220  0372  00D5               	movwf	___fladd@b+1
  4221  0373  3000               	movlw	0
  4222  0374  00D4               	movwf	___fladd@b
  4223  0375  0865               	movf	___fladd@aexp,w
  4224  0376  00DC               	movwf	??___fladd
  4225  0377  085C               	movf	??___fladd,w
  4226  0378  00E6               	movwf	___fladd@bexp
  4227  0379  2B9C               	goto	l561
  4228  037A                     l563:	
  4229  037A  1C67               	btfss	___fladd@grs,0
  4230  037B  2B85               	goto	l1918
  4231  037C  0867               	movf	___fladd@grs,w
  4232  037D  00DC               	movwf	??___fladd
  4233  037E  1003               	clrc
  4234  037F  0C5C               	rrf	??___fladd,w
  4235  0380  3801               	iorlw	1
  4236  0381  00DD               	movwf	??___fladd+1
  4237  0382  085D               	movf	??___fladd+1,w
  4238  0383  00E7               	movwf	___fladd@grs
  4239  0384  2B87               	goto	l1920
  4240  0385                     l1918:	
  4241  0385  1003               	clrc
  4242  0386  0CE7               	rrf	___fladd@grs,f
  4243  0387                     l1920:	
  4244  0387  1854               	btfsc	___fladd@b,0
  4245  0388  17E7               	bsf	___fladd@grs,7
  4246  0389  3001               	movlw	1
  4247  038A  00DC               	movwf	??___fladd
  4248  038B                     u2325:	
  4249  038B  0D57               	rlf	___fladd@b+3,w
  4250  038C  0CD7               	rrf	___fladd@b+3,f
  4251  038D  0CD6               	rrf	___fladd@b+2,f
  4252  038E  0CD5               	rrf	___fladd@b+1,f
  4253  038F  0CD4               	rrf	___fladd@b,f
  4254  0390  0BDC               	decfsz	??___fladd& (0+127),f
  4255  0391  2B8B               	goto	u2325
  4256  0392  3001               	movlw	1
  4257  0393  00DC               	movwf	??___fladd
  4258  0394  085C               	movf	??___fladd,w
  4259  0395  07E6               	addwf	___fladd@bexp,f
  4260  0396                     l1928:	
  4261  0396  1283               	bcf	3,5	;RP0=0, select bank0
  4262  0397  1303               	bcf	3,6	;RP1=0, select bank0
  4263  0398  0865               	movf	___fladd@aexp,w
  4264  0399  0266               	subwf	___fladd@bexp,w
  4265  039A  1C03               	skipc
  4266  039B  2B7A               	goto	l563
  4267  039C                     l561:	
  4268  039C  1B64               	btfsc	___fladd@signs,6
  4269  039D  2BDD               	goto	l1954
  4270  039E  0866               	movf	___fladd@bexp,w
  4271  039F  1D03               	btfss	3,2
  4272  03A0  2BAA               	goto	l1936
  4273  03A1  3000               	movlw	0
  4274  03A2  00D7               	movwf	?___fladd+3
  4275  03A3  3000               	movlw	0
  4276  03A4  00D6               	movwf	?___fladd+2
  4277  03A5  3000               	movlw	0
  4278  03A6  00D5               	movwf	?___fladd+1
  4279  03A7  3000               	movlw	0
  4280  03A8  00D4               	movwf	?___fladd
  4281  03A9  0008               	return
  4282  03AA                     l1936:	
  4283  03AA  0858               	movf	___fladd@a,w
  4284  03AB  07D4               	addwf	___fladd@b,f
  4285  03AC  0859               	movf	___fladd@a+1,w
  4286  03AD  1103               	clrz
  4287  03AE  1803               	skipnc
  4288  03AF  3E01               	addlw	1
  4289  03B0  1D03               	btfss	3,2
  4290  03B1  07D5               	addwf	___fladd@b+1,f
  4291  03B2  085A               	movf	___fladd@a+2,w
  4292  03B3  1103               	clrz
  4293  03B4  1803               	skipnc
  4294  03B5  3E01               	addlw	1
  4295  03B6  1D03               	btfss	3,2
  4296  03B7  07D6               	addwf	___fladd@b+2,f
  4297  03B8  085B               	movf	___fladd@a+3,w
  4298  03B9  1103               	clrz
  4299  03BA  1803               	skipnc
  4300  03BB  3E01               	addlw	1
  4301  03BC  1D03               	btfss	3,2
  4302  03BD  07D7               	addwf	___fladd@b+3,f
  4303  03BE  1C57               	btfss	___fladd@b+3,0
  4304  03BF  2C7F               	goto	l1988
  4305  03C0  1C67               	btfss	___fladd@grs,0
  4306  03C1  2BCB               	goto	l1944
  4307  03C2  0867               	movf	___fladd@grs,w
  4308  03C3  00DC               	movwf	??___fladd
  4309  03C4  1003               	clrc
  4310  03C5  0C5C               	rrf	??___fladd,w
  4311  03C6  3801               	iorlw	1
  4312  03C7  00DD               	movwf	??___fladd+1
  4313  03C8  085D               	movf	??___fladd+1,w
  4314  03C9  00E7               	movwf	___fladd@grs
  4315  03CA  2BCD               	goto	l1946
  4316  03CB                     l1944:	
  4317  03CB  1003               	clrc
  4318  03CC  0CE7               	rrf	___fladd@grs,f
  4319  03CD                     l1946:	
  4320  03CD  1854               	btfsc	___fladd@b,0
  4321  03CE  17E7               	bsf	___fladd@grs,7
  4322  03CF  3001               	movlw	1
  4323  03D0  00DC               	movwf	??___fladd
  4324  03D1                     u2405:	
  4325  03D1  0D57               	rlf	___fladd@b+3,w
  4326  03D2  0CD7               	rrf	___fladd@b+3,f
  4327  03D3  0CD6               	rrf	___fladd@b+2,f
  4328  03D4  0CD5               	rrf	___fladd@b+1,f
  4329  03D5  0CD4               	rrf	___fladd@b,f
  4330  03D6  0BDC               	decfsz	??___fladd& (0+127),f
  4331  03D7  2BD1               	goto	u2405
  4332  03D8  3001               	movlw	1
  4333  03D9  00DC               	movwf	??___fladd
  4334  03DA  085C               	movf	??___fladd,w
  4335  03DB  07E6               	addwf	___fladd@bexp,f
  4336  03DC  2C7F               	goto	l1988
  4337  03DD                     l1954:	
  4338  03DD  0857               	movf	___fladd@b+3,w
  4339  03DE  3A80               	xorlw	128
  4340  03DF  00FF               	movwf	127
  4341  03E0  085B               	movf	___fladd@a+3,w
  4342  03E1  3A80               	xorlw	128
  4343  03E2  027F               	subwf	127,w
  4344  03E3  1D03               	skipz
  4345  03E4  2BEF               	goto	u2413
  4346  03E5  085A               	movf	___fladd@a+2,w
  4347  03E6  0256               	subwf	___fladd@b+2,w
  4348  03E7  1D03               	skipz
  4349  03E8  2BEF               	goto	u2413
  4350  03E9  0859               	movf	___fladd@a+1,w
  4351  03EA  0255               	subwf	___fladd@b+1,w
  4352  03EB  1D03               	skipz
  4353  03EC  2BEF               	goto	u2413
  4354  03ED  0858               	movf	___fladd@a,w
  4355  03EE  0254               	subwf	___fladd@b,w
  4356  03EF                     u2413:	
  4357  03EF  1803               	skipnc
  4358  03F0  2C47               	goto	l1964
  4359  03F1  30FF               	movlw	255
  4360  03F2  00DC               	movwf	??___fladd
  4361  03F3  30FF               	movlw	255
  4362  03F4  00DD               	movwf	??___fladd+1
  4363  03F5  30FF               	movlw	255
  4364  03F6  00DE               	movwf	??___fladd+2
  4365  03F7  30FF               	movlw	255
  4366  03F8  00DF               	movwf	??___fladd+3
  4367  03F9  0858               	movf	___fladd@a,w
  4368  03FA  00E0               	movwf	??___fladd+4
  4369  03FB  0859               	movf	___fladd@a+1,w
  4370  03FC  00E1               	movwf	??___fladd+5
  4371  03FD  085A               	movf	___fladd@a+2,w
  4372  03FE  00E2               	movwf	??___fladd+6
  4373  03FF  085B               	movf	___fladd@a+3,w
  4374  0400  00E3               	movwf	??___fladd+7
  4375  0401  0854               	movf	___fladd@b,w
  4376  0402  02E0               	subwf	??___fladd+4,f
  4377  0403  0855               	movf	___fladd@b+1,w
  4378  0404  1C03               	skipc
  4379  0405  0F55               	incfsz	___fladd@b+1,w
  4380  0406  2C08               	goto	u2421
  4381  0407  2C09               	goto	u2422
  4382  0408                     u2421:	
  4383  0408  02E1               	subwf	??___fladd+5,f
  4384  0409                     u2422:	
  4385  0409  0856               	movf	___fladd@b+2,w
  4386  040A  1C03               	skipc
  4387  040B  0F56               	incfsz	___fladd@b+2,w
  4388  040C  2C0E               	goto	u2423
  4389  040D  2C0F               	goto	u2424
  4390  040E                     u2423:	
  4391  040E  02E2               	subwf	??___fladd+6,f
  4392  040F                     u2424:	
  4393  040F  0857               	movf	___fladd@b+3,w
  4394  0410  1C03               	skipc
  4395  0411  0F57               	incfsz	___fladd@b+3,w
  4396  0412  2C14               	goto	u2425
  4397  0413  2C15               	goto	u2426
  4398  0414                     u2425:	
  4399  0414  02E3               	subwf	??___fladd+7,f
  4400  0415                     u2426:	
  4401  0415  0860               	movf	??___fladd+4,w
  4402  0416  07DC               	addwf	??___fladd,f
  4403  0417  0861               	movf	??___fladd+5,w
  4404  0418  1803               	skipnc
  4405  0419  0F61               	incfsz	??___fladd+5,w
  4406  041A  2C1C               	goto	u2430
  4407  041B  2C1D               	goto	u2431
  4408  041C                     u2430:	
  4409  041C  07DD               	addwf	??___fladd+1,f
  4410  041D                     u2431:	
  4411  041D  0862               	movf	??___fladd+6,w
  4412  041E  1803               	skipnc
  4413  041F  0F62               	incfsz	??___fladd+6,w
  4414  0420  2C22               	goto	u2432
  4415  0421  2C23               	goto	u2433
  4416  0422                     u2432:	
  4417  0422  07DE               	addwf	??___fladd+2,f
  4418  0423                     u2433:	
  4419  0423  0863               	movf	??___fladd+7,w
  4420  0424  1803               	skipnc
  4421  0425  0A63               	incf	??___fladd+7,w
  4422  0426  07DF               	addwf	??___fladd+3,f
  4423  0427  085F               	movf	??___fladd+3,w
  4424  0428  00D7               	movwf	___fladd@b+3
  4425  0429  085E               	movf	??___fladd+2,w
  4426  042A  00D6               	movwf	___fladd@b+2
  4427  042B  085D               	movf	??___fladd+1,w
  4428  042C  00D5               	movwf	___fladd@b+1
  4429  042D  085C               	movf	??___fladd,w
  4430  042E  00D4               	movwf	___fladd@b
  4431  042F  3080               	movlw	128
  4432  0430  00DC               	movwf	??___fladd
  4433  0431  085C               	movf	??___fladd,w
  4434  0432  06E4               	xorwf	___fladd@signs,f
  4435  0433  09E7               	comf	___fladd@grs,f
  4436  0434  0AE7               	incf	___fladd@grs,f
  4437  0435  0867               	movf	___fladd@grs,w
  4438  0436  1D03               	btfss	3,2
  4439  0437  2C55               	goto	l578
  4440  0438  3001               	movlw	1
  4441  0439  07D4               	addwf	___fladd@b,f
  4442  043A  3000               	movlw	0
  4443  043B  1803               	skipnc
  4444  043C  3001               	movlw	1
  4445  043D  07D5               	addwf	___fladd@b+1,f
  4446  043E  3000               	movlw	0
  4447  043F  1803               	skipnc
  4448  0440  3001               	movlw	1
  4449  0441  07D6               	addwf	___fladd@b+2,f
  4450  0442  3000               	movlw	0
  4451  0443  1803               	skipnc
  4452  0444  3001               	movlw	1
  4453  0445  07D7               	addwf	___fladd@b+3,f
  4454  0446  2C55               	goto	l578
  4455  0447                     l1964:	
  4456  0447  0858               	movf	___fladd@a,w
  4457  0448  02D4               	subwf	___fladd@b,f
  4458  0449  0859               	movf	___fladd@a+1,w
  4459  044A  1C03               	skipc
  4460  044B  0F59               	incfsz	___fladd@a+1,w
  4461  044C  02D5               	subwf	___fladd@b+1,f
  4462  044D  085A               	movf	___fladd@a+2,w
  4463  044E  1C03               	skipc
  4464  044F  0F5A               	incfsz	___fladd@a+2,w
  4465  0450  02D6               	subwf	___fladd@b+2,f
  4466  0451  085B               	movf	___fladd@a+3,w
  4467  0452  1C03               	skipc
  4468  0453  0F5B               	incfsz	___fladd@a+3,w
  4469  0454  02D7               	subwf	___fladd@b+3,f
  4470  0455                     l578:	
  4471  0455  0857               	movf	___fladd@b+3,w
  4472  0456  0456               	iorwf	___fladd@b+2,w
  4473  0457  0455               	iorwf	___fladd@b+1,w
  4474  0458  0454               	iorwf	___fladd@b,w
  4475  0459  1D03               	skipz
  4476  045A  2C7D               	goto	l1986
  4477  045B  0867               	movf	___fladd@grs,w
  4478  045C  1D03               	btfss	3,2
  4479  045D  2C7D               	goto	l1986
  4480  045E  3000               	movlw	0
  4481  045F  00D7               	movwf	?___fladd+3
  4482  0460  3000               	movlw	0
  4483  0461  00D6               	movwf	?___fladd+2
  4484  0462  3000               	movlw	0
  4485  0463  00D5               	movwf	?___fladd+1
  4486  0464  3000               	movlw	0
  4487  0465  00D4               	movwf	?___fladd
  4488  0466  0008               	return
  4489  0467                     l1972:	
  4490  0467  3001               	movlw	1
  4491  0468  00DC               	movwf	??___fladd
  4492  0469                     u2475:	
  4493  0469  1003               	clrc
  4494  046A  0DD4               	rlf	___fladd@b,f
  4495  046B  0DD5               	rlf	___fladd@b+1,f
  4496  046C  0DD6               	rlf	___fladd@b+2,f
  4497  046D  0DD7               	rlf	___fladd@b+3,f
  4498  046E  0BDC               	decfsz	??___fladd,f
  4499  046F  2C69               	goto	u2475
  4500  0470  1BE7               	btfsc	___fladd@grs,7
  4501  0471  1454               	bsf	___fladd@b,0
  4502  0472  1C67               	btfss	___fladd@grs,0
  4503  0473  2C76               	goto	l1980
  4504  0474  1403               	setc
  4505  0475  2C77               	goto	L3
  4506  0476                     l1980:	
  4507  0476  1003               	clrc
  4508  0477                     L3:	
  4509  0477  0DE7               	rlf	___fladd@grs,f
  4510  0478  0866               	movf	___fladd@bexp,w
  4511  0479  1903               	btfsc	3,2
  4512  047A  2C7D               	goto	l1986
  4513  047B  3001               	movlw	1
  4514  047C  02E6               	subwf	___fladd@bexp,f
  4515  047D                     l1986:	
  4516  047D  1FD6               	btfss	___fladd@b+2,7
  4517  047E  2C67               	goto	l1972
  4518  047F                     l1988:	
  4519  047F  01E5               	clrf	___fladd@aexp
  4520  0480  1FE7               	btfss	___fladd@grs,7
  4521  0481  2C8A               	goto	l1998
  4522  0482  0867               	movf	___fladd@grs,w
  4523  0483  397F               	andlw	127
  4524  0484  1903               	btfsc	3,2
  4525  0485  1854               	btfsc	___fladd@b,0
  4526  0486  2C88               	goto	l1994
  4527  0487  2C8A               	goto	l1998
  4528  0488                     l1994:	
  4529  0488  01E5               	clrf	___fladd@aexp
  4530  0489  0AE5               	incf	___fladd@aexp,f
  4531  048A                     l1998:	
  4532  048A  0865               	movf	___fladd@aexp,w
  4533  048B  1903               	btfsc	3,2
  4534  048C  2CBD               	goto	l591
  4535  048D  3001               	movlw	1
  4536  048E  07D4               	addwf	___fladd@b,f
  4537  048F  3000               	movlw	0
  4538  0490  1803               	skipnc
  4539  0491  3001               	movlw	1
  4540  0492  07D5               	addwf	___fladd@b+1,f
  4541  0493  3000               	movlw	0
  4542  0494  1803               	skipnc
  4543  0495  3001               	movlw	1
  4544  0496  07D6               	addwf	___fladd@b+2,f
  4545  0497  3000               	movlw	0
  4546  0498  1803               	skipnc
  4547  0499  3001               	movlw	1
  4548  049A  07D7               	addwf	___fladd@b+3,f
  4549  049B  1C57               	btfss	___fladd@b+3,0
  4550  049C  2CBD               	goto	l591
  4551  049D  0854               	movf	___fladd@b,w
  4552  049E  00DC               	movwf	??___fladd
  4553  049F  0855               	movf	___fladd@b+1,w
  4554  04A0  00DD               	movwf	??___fladd+1
  4555  04A1  0856               	movf	___fladd@b+2,w
  4556  04A2  00DE               	movwf	??___fladd+2
  4557  04A3  0857               	movf	___fladd@b+3,w
  4558  04A4  00DF               	movwf	??___fladd+3
  4559  04A5  3001               	movlw	1
  4560  04A6  00E0               	movwf	??___fladd+4
  4561  04A7                     u2575:	
  4562  04A7  0D5F               	rlf	??___fladd+3,w
  4563  04A8  0CDF               	rrf	??___fladd+3,f
  4564  04A9  0CDE               	rrf	??___fladd+2,f
  4565  04AA  0CDD               	rrf	??___fladd+1,f
  4566  04AB  0CDC               	rrf	??___fladd,f
  4567  04AC  0BE0               	decfsz	??___fladd+4,f
  4568  04AD  2CA7               	goto	u2575
  4569  04AE  085F               	movf	??___fladd+3,w
  4570  04AF  00D7               	movwf	___fladd@b+3
  4571  04B0  085E               	movf	??___fladd+2,w
  4572  04B1  00D6               	movwf	___fladd@b+2
  4573  04B2  085D               	movf	??___fladd+1,w
  4574  04B3  00D5               	movwf	___fladd@b+1
  4575  04B4  085C               	movf	??___fladd,w
  4576  04B5  00D4               	movwf	___fladd@b
  4577  04B6  0A66               	incf	___fladd@bexp,w
  4578  04B7  1903               	btfsc	3,2
  4579  04B8  2CBD               	goto	l591
  4580  04B9  3001               	movlw	1
  4581  04BA  00DC               	movwf	??___fladd
  4582  04BB  085C               	movf	??___fladd,w
  4583  04BC  07E6               	addwf	___fladd@bexp,f
  4584  04BD                     l591:	
  4585  04BD  0A66               	incf	___fladd@bexp,w
  4586  04BE  1D03               	btfss	3,2
  4587  04BF  0866               	movf	___fladd@bexp,w
  4588  04C0  1D03               	btfss	3,2
  4589  04C1  2CCD               	goto	l2016
  4590  04C2  3000               	movlw	0
  4591  04C3  00D7               	movwf	___fladd@b+3
  4592  04C4  3000               	movlw	0
  4593  04C5  00D6               	movwf	___fladd@b+2
  4594  04C6  3000               	movlw	0
  4595  04C7  00D5               	movwf	___fladd@b+1
  4596  04C8  3000               	movlw	0
  4597  04C9  00D4               	movwf	___fladd@b
  4598  04CA  0866               	movf	___fladd@bexp,w
  4599  04CB  1903               	btfsc	3,2
  4600  04CC  01E4               	clrf	___fladd@signs
  4601  04CD                     l2016:	
  4602  04CD  1C66               	btfss	___fladd@bexp,0
  4603  04CE  2CD1               	goto	l2020
  4604  04CF  17D6               	bsf	___fladd@b+2,7
  4605  04D0  2CD5               	goto	l599
  4606  04D1                     l2020:	
  4607  04D1  307F               	movlw	127
  4608  04D2  00DC               	movwf	??___fladd
  4609  04D3  085C               	movf	??___fladd,w
  4610  04D4  05D6               	andwf	___fladd@b+2,f
  4611  04D5                     l599:	
  4612  04D5  0866               	movf	___fladd@bexp,w
  4613  04D6  00DC               	movwf	??___fladd
  4614  04D7  1003               	clrc
  4615  04D8  0C5C               	rrf	??___fladd,w
  4616  04D9  00DD               	movwf	??___fladd+1
  4617  04DA  085D               	movf	??___fladd+1,w
  4618  04DB  00D7               	movwf	___fladd@b+3
  4619  04DC  1FE4               	btfss	___fladd@signs,7
  4620  04DD  0008               	return
  4621  04DE  17D7               	bsf	___fladd@b+3,7
  4622  04DF  0008               	return
  4623  04E0                     __end_of___fladd:	
  4624                           
  4625                           	psect	text12
  4626  0B06                     __ptext12:	
  4627 ;; *************** function _lcdSetCursor *****************
  4628 ;; Defined at:
  4629 ;;		line 56 in file "./lcd.h"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;  a               1    wreg     unsigned char 
  4632 ;;  b               1    4[COMMON] unsigned char 
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;  a               1    7[COMMON] unsigned char 
  4635 ;;  temp            1   10[COMMON] unsigned char 
  4636 ;;  y               1    9[COMMON] unsigned char 
  4637 ;;  z               1    8[COMMON] unsigned char 
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  1    wreg      void 
  4640 ;; Registers used:
  4641 ;;		wreg, status,2, status,0, pclath, cstack
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4647 ;;      Params:         1       0       0       0       0
  4648 ;;      Locals:         4       0       0       0       0
  4649 ;;      Temps:          2       0       0       0       0
  4650 ;;      Totals:         7       0       0       0       0
  4651 ;;Total ram usage:        7 bytes
  4652 ;; Hardware stack levels used:    1
  4653 ;; Hardware stack levels required when called:    2
  4654 ;; This function calls:
  4655 ;;		_lcdCmd
  4656 ;; This function is called by:
  4657 ;;		_main
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           
  4662                           ;psect for function _lcdSetCursor
  4663  0B06                     _lcdSetCursor:	
  4664                           
  4665                           ;incstack = 0
  4666                           ; Regs used in _lcdSetCursor: [wreg+status,2+status,0+pclath+cstack]
  4667                           ;lcdSetCursor@a stored from wreg
  4668  0B06  00F7               	movwf	lcdSetCursor@a
  4669                           
  4670                           ;./lcd.h: 57:     char temp, z, y;;./lcd.h: 58:     if (a == 1) {
  4671  0B07  0377               	decf	lcdSetCursor@a,w
  4672  0B08  1D03               	btfss	3,2
  4673  0B09  2B2B               	goto	l2364
  4674                           
  4675                           ;./lcd.h: 59:         temp = 0x80 + b - 1;
  4676  0B0A  0874               	movf	lcdSetCursor@b,w
  4677  0B0B  3E7F               	addlw	127
  4678  0B0C  00F5               	movwf	??_lcdSetCursor
  4679  0B0D  0875               	movf	??_lcdSetCursor,w
  4680  0B0E  00FA               	movwf	lcdSetCursor@temp
  4681                           
  4682                           ;./lcd.h: 60:         z = temp >> 4;
  4683  0B0F  087A               	movf	lcdSetCursor@temp,w
  4684  0B10  00F5               	movwf	??_lcdSetCursor
  4685  0B11  3004               	movlw	4
  4686  0B12                     u3455:	
  4687  0B12  1003               	clrc
  4688  0B13  0CF5               	rrf	??_lcdSetCursor,f
  4689  0B14  3EFF               	addlw	-1
  4690  0B15  1D03               	skipz
  4691  0B16  2B12               	goto	u3455
  4692  0B17  0875               	movf	??_lcdSetCursor,w
  4693  0B18  00F6               	movwf	??_lcdSetCursor+1
  4694  0B19  0876               	movf	??_lcdSetCursor+1,w
  4695  0B1A  00F8               	movwf	lcdSetCursor@z
  4696                           
  4697                           ;./lcd.h: 61:         y = temp & 0x0F;
  4698  0B1B  087A               	movf	lcdSetCursor@temp,w
  4699  0B1C  390F               	andlw	15
  4700  0B1D  00F5               	movwf	??_lcdSetCursor
  4701  0B1E  0875               	movf	??_lcdSetCursor,w
  4702  0B1F  00F9               	movwf	lcdSetCursor@y
  4703                           
  4704                           ;./lcd.h: 62:         lcdCmd(z);
  4705  0B20  0878               	movf	lcdSetCursor@z,w
  4706  0B21  120A  158A  21DA  120A  158A  	fcall	_lcdCmd
  4707                           
  4708                           ;./lcd.h: 63:         lcdCmd(y);
  4709  0B26  0879               	movf	lcdSetCursor@y,w
  4710  0B27  120A  158A  21DA   	fcall	_lcdCmd
  4711                           
  4712                           ;./lcd.h: 64:     } else if (a == 2) {
  4713  0B2A  0008               	return
  4714  0B2B                     l2364:	
  4715  0B2B  3002               	movlw	2
  4716  0B2C  0677               	xorwf	lcdSetCursor@a,w
  4717  0B2D  1D03               	btfss	3,2
  4718  0B2E  0008               	return
  4719                           
  4720                           ;./lcd.h: 65:         temp = 0xC0 + b - 1;
  4721  0B2F  0874               	movf	lcdSetCursor@b,w
  4722  0B30  3EBF               	addlw	191
  4723  0B31  00F5               	movwf	??_lcdSetCursor
  4724  0B32  0875               	movf	??_lcdSetCursor,w
  4725  0B33  00FA               	movwf	lcdSetCursor@temp
  4726                           
  4727                           ;./lcd.h: 66:         z = temp >> 4;
  4728  0B34  087A               	movf	lcdSetCursor@temp,w
  4729  0B35  00F5               	movwf	??_lcdSetCursor
  4730  0B36  3004               	movlw	4
  4731  0B37                     u3475:	
  4732  0B37  1003               	clrc
  4733  0B38  0CF5               	rrf	??_lcdSetCursor,f
  4734  0B39  3EFF               	addlw	-1
  4735  0B3A  1D03               	skipz
  4736  0B3B  2B37               	goto	u3475
  4737  0B3C  0875               	movf	??_lcdSetCursor,w
  4738  0B3D  00F6               	movwf	??_lcdSetCursor+1
  4739  0B3E  0876               	movf	??_lcdSetCursor+1,w
  4740  0B3F  00F8               	movwf	lcdSetCursor@z
  4741                           
  4742                           ;./lcd.h: 67:         y = temp & 0x0F;
  4743  0B40  087A               	movf	lcdSetCursor@temp,w
  4744  0B41  390F               	andlw	15
  4745  0B42  00F5               	movwf	??_lcdSetCursor
  4746  0B43  0875               	movf	??_lcdSetCursor,w
  4747  0B44  00F9               	movwf	lcdSetCursor@y
  4748                           
  4749                           ;./lcd.h: 68:         lcdCmd(z);
  4750  0B45  0878               	movf	lcdSetCursor@z,w
  4751  0B46  120A  158A  21DA  120A  158A  	fcall	_lcdCmd
  4752                           
  4753                           ;./lcd.h: 69:         lcdCmd(y);
  4754  0B4B  0879               	movf	lcdSetCursor@y,w
  4755  0B4C  120A  158A  21DA   	fcall	_lcdCmd
  4756  0B4F  0008               	return
  4757  0B50                     __end_of_lcdSetCursor:	
  4758                           
  4759                           	psect	text13
  4760  0AC9                     __ptext13:	
  4761 ;; *************** function _lcdPrint *****************
  4762 ;; Defined at:
  4763 ;;		line 108 in file "./lcd.h"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;  a               2    5[COMMON] PTR unsigned char 
  4766 ;;		 -> mensaje(16), STR_2(7), STR_1(13), 
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;  i               2   10[COMMON] int 
  4769 ;; Return value:  Size  Location     Type
  4770 ;;                  1    wreg      void 
  4771 ;; Registers used:
  4772 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4778 ;;      Params:         2       0       0       0       0
  4779 ;;      Locals:         2       0       0       0       0
  4780 ;;      Temps:          3       0       0       0       0
  4781 ;;      Totals:         7       0       0       0       0
  4782 ;;Total ram usage:        7 bytes
  4783 ;; Hardware stack levels used:    1
  4784 ;; Hardware stack levels required when called:    2
  4785 ;; This function calls:
  4786 ;;		_lcdWriteChar
  4787 ;; This function is called by:
  4788 ;;		_main
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           
  4793                           ;psect for function _lcdPrint
  4794  0AC9                     _lcdPrint:	
  4795                           
  4796                           ;./lcd.h: 109:     int i;;./lcd.h: 110:     for (i = 0; a[i] != '\0'; i++)
  4797                           
  4798                           ;incstack = 0
  4799                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4800  0AC9  01FA               	clrf	lcdPrint@i
  4801  0ACA  01FB               	clrf	lcdPrint@i+1
  4802  0ACB                     l2410:	
  4803  0ACB  087A               	movf	lcdPrint@i,w
  4804  0ACC  0775               	addwf	lcdPrint@a,w
  4805  0ACD  00F8               	movwf	??_lcdPrint+1
  4806  0ACE  0876               	movf	lcdPrint@a+1,w
  4807  0ACF  00F7               	movwf	??_lcdPrint
  4808  0AD0  1803               	skipnc
  4809  0AD1  0AF7               	incf	??_lcdPrint,f
  4810  0AD2  1BFA               	btfsc	lcdPrint@i,7
  4811  0AD3  03F7               	decf	??_lcdPrint,f
  4812  0AD4  0877               	movf	??_lcdPrint,w
  4813  0AD5  00F9               	movwf	??_lcdPrint+2
  4814  0AD6  0879               	movf	??_lcdPrint+2,w
  4815  0AD7  1283               	bcf	3,5	;RP0=0, select bank0
  4816  0AD8  1303               	bcf	3,6	;RP1=0, select bank0
  4817  0AD9  00FF               	movwf	127
  4818  0ADA  0878               	movf	??_lcdPrint+1,w
  4819  0ADB  0084               	movwf	4
  4820  0ADC  120A  158A  2000  120A  158A  	fcall	stringtab
  4821  0AE1  3A00               	xorlw	0
  4822  0AE2  1903               	btfsc	3,2
  4823  0AE3  0008               	return
  4824                           
  4825                           ;./lcd.h: 111:         lcdWriteChar(a[i]);
  4826  0AE4  087A               	movf	lcdPrint@i,w
  4827  0AE5  0775               	addwf	lcdPrint@a,w
  4828  0AE6  00F8               	movwf	??_lcdPrint+1
  4829  0AE7  0876               	movf	lcdPrint@a+1,w
  4830  0AE8  00F7               	movwf	??_lcdPrint
  4831  0AE9  1803               	skipnc
  4832  0AEA  0AF7               	incf	??_lcdPrint,f
  4833  0AEB  1BFA               	btfsc	lcdPrint@i,7
  4834  0AEC  03F7               	decf	??_lcdPrint,f
  4835  0AED  0877               	movf	??_lcdPrint,w
  4836  0AEE  00F9               	movwf	??_lcdPrint+2
  4837  0AEF  0879               	movf	??_lcdPrint+2,w
  4838  0AF0  1283               	bcf	3,5	;RP0=0, select bank0
  4839  0AF1  1303               	bcf	3,6	;RP1=0, select bank0
  4840  0AF2  00FF               	movwf	127
  4841  0AF3  0878               	movf	??_lcdPrint+1,w
  4842  0AF4  0084               	movwf	4
  4843  0AF5  120A  158A  2000  120A  158A  	fcall	stringtab
  4844  0AFA  120A  158A  2256  120A  158A  	fcall	_lcdWriteChar
  4845  0AFF  3001               	movlw	1
  4846  0B00  07FA               	addwf	lcdPrint@i,f
  4847  0B01  1803               	skipnc
  4848  0B02  0AFB               	incf	lcdPrint@i+1,f
  4849  0B03  3000               	movlw	0
  4850  0B04  07FB               	addwf	lcdPrint@i+1,f
  4851  0B05  2ACB               	goto	l2410
  4852  0B06                     __end_of_lcdPrint:	
  4853                           
  4854                           	psect	text14
  4855  0A56                     __ptext14:	
  4856 ;; *************** function _lcdWriteChar *****************
  4857 ;; Defined at:
  4858 ;;		line 93 in file "./lcd.h"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;  a               1    wreg     unsigned char 
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;  a               1    4[COMMON] unsigned char 
  4863 ;;  y               1    3[COMMON] unsigned char 
  4864 ;;  temp            1    2[COMMON] unsigned char 
  4865 ;; Return value:  Size  Location     Type
  4866 ;;                  1    wreg      void 
  4867 ;; Registers used:
  4868 ;;		wreg, status,2, status,0, pclath, cstack
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4874 ;;      Params:         0       0       0       0       0
  4875 ;;      Locals:         3       0       0       0       0
  4876 ;;      Temps:          1       0       0       0       0
  4877 ;;      Totals:         4       0       0       0       0
  4878 ;;Total ram usage:        4 bytes
  4879 ;; Hardware stack levels used:    1
  4880 ;; Hardware stack levels required when called:    1
  4881 ;; This function calls:
  4882 ;;		_lcdPort
  4883 ;; This function is called by:
  4884 ;;		_lcdPrint
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           
  4889                           ;psect for function _lcdWriteChar
  4890  0A56                     _lcdWriteChar:	
  4891                           
  4892                           ;incstack = 0
  4893                           ; Regs used in _lcdWriteChar: [wreg+status,2+status,0+pclath+cstack]
  4894                           ;lcdWriteChar@a stored from wreg
  4895  0A56  00F4               	movwf	lcdWriteChar@a
  4896                           
  4897                           ;./lcd.h: 94:     char temp, y;;./lcd.h: 95:     temp = a & 0x0F;
  4898  0A57  0874               	movf	lcdWriteChar@a,w
  4899  0A58  390F               	andlw	15
  4900  0A59  00F1               	movwf	??_lcdWriteChar
  4901  0A5A  0871               	movf	??_lcdWriteChar,w
  4902  0A5B  00F2               	movwf	lcdWriteChar@temp
  4903                           
  4904                           ;./lcd.h: 96:     y = a & 0xF0;
  4905  0A5C  0874               	movf	lcdWriteChar@a,w
  4906  0A5D  39F0               	andlw	240
  4907  0A5E  00F1               	movwf	??_lcdWriteChar
  4908  0A5F  0871               	movf	??_lcdWriteChar,w
  4909  0A60  00F3               	movwf	lcdWriteChar@y
  4910                           
  4911                           ;./lcd.h: 97:     RD2 = 1;
  4912  0A61  1283               	bcf	3,5	;RP0=0, select bank0
  4913  0A62  1303               	bcf	3,6	;RP1=0, select bank0
  4914  0A63  1508               	bsf	8,2	;volatile
  4915                           
  4916                           ;./lcd.h: 98:     lcdPort(y >> 4);
  4917  0A64  0873               	movf	lcdWriteChar@y,w
  4918  0A65  00F1               	movwf	??_lcdWriteChar
  4919  0A66  3004               	movlw	4
  4920  0A67                     u1925:	
  4921  0A67  1003               	clrc
  4922  0A68  0CF1               	rrf	??_lcdWriteChar,f
  4923  0A69  3EFF               	addlw	-1
  4924  0A6A  1D03               	skipz
  4925  0A6B  2A67               	goto	u1925
  4926  0A6C  0871               	movf	??_lcdWriteChar,w
  4927  0A6D  120A  158A  21C0  120A  158A  	fcall	_lcdPort
  4928                           
  4929                           ;./lcd.h: 99:     RD3 = 1;
  4930  0A72  1283               	bcf	3,5	;RP0=0, select bank0
  4931  0A73  1303               	bcf	3,6	;RP1=0, select bank0
  4932  0A74  1588               	bsf	8,3	;volatile
  4933                           
  4934                           ;./lcd.h: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4935  0A75  300D               	movlw	13
  4936  0A76  00F1               	movwf	??_lcdWriteChar
  4937  0A77                     u3717:	
  4938  0A77  0BF1               	decfsz	??_lcdWriteChar,f
  4939  0A78  2A77               	goto	u3717
  4940                           
  4941                           ;./lcd.h: 101:     RD3 = 0;
  4942  0A79  1283               	bcf	3,5	;RP0=0, select bank0
  4943  0A7A  1303               	bcf	3,6	;RP1=0, select bank0
  4944  0A7B  1188               	bcf	8,3	;volatile
  4945                           
  4946                           ;./lcd.h: 102:     lcdPort(temp);
  4947  0A7C  0872               	movf	lcdWriteChar@temp,w
  4948  0A7D  120A  158A  21C0  120A  158A  	fcall	_lcdPort
  4949                           
  4950                           ;./lcd.h: 103:     RD3 = 1;
  4951  0A82  1283               	bcf	3,5	;RP0=0, select bank0
  4952  0A83  1303               	bcf	3,6	;RP1=0, select bank0
  4953  0A84  1588               	bsf	8,3	;volatile
  4954                           
  4955                           ;./lcd.h: 104:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4956  0A85  300D               	movlw	13
  4957  0A86  00F1               	movwf	??_lcdWriteChar
  4958  0A87                     u3727:	
  4959  0A87  0BF1               	decfsz	??_lcdWriteChar,f
  4960  0A88  2A87               	goto	u3727
  4961                           
  4962                           ;./lcd.h: 105:     RD3 = 0;
  4963  0A89  1283               	bcf	3,5	;RP0=0, select bank0
  4964  0A8A  1303               	bcf	3,6	;RP1=0, select bank0
  4965  0A8B  1188               	bcf	8,3	;volatile
  4966  0A8C  0008               	return
  4967  0A8D                     __end_of_lcdWriteChar:	
  4968                           
  4969                           	psect	text15
  4970  0B50                     __ptext15:	
  4971 ;; *************** function _lcdInit *****************
  4972 ;; Defined at:
  4973 ;;		line 73 in file "./lcd.h"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;		None
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;		None
  4978 ;; Return value:  Size  Location     Type
  4979 ;;                  1    wreg      void 
  4980 ;; Registers used:
  4981 ;;		wreg, status,2, status,0, pclath, cstack
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 0/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4987 ;;      Params:         0       0       0       0       0
  4988 ;;      Locals:         0       0       0       0       0
  4989 ;;      Temps:          2       0       0       0       0
  4990 ;;      Totals:         2       0       0       0       0
  4991 ;;Total ram usage:        2 bytes
  4992 ;; Hardware stack levels used:    1
  4993 ;; Hardware stack levels required when called:    2
  4994 ;; This function calls:
  4995 ;;		_lcdCmd
  4996 ;;		_lcdPort
  4997 ;; This function is called by:
  4998 ;;		_main
  4999 ;; This function uses a non-reentrant model
  5000 ;;
  5001                           
  5002                           
  5003                           ;psect for function _lcdInit
  5004  0B50                     _lcdInit:	
  5005                           
  5006                           ;./lcd.h: 74:     TRISD = 0;
  5007                           
  5008                           ;incstack = 0
  5009                           ; Regs used in _lcdInit: [wreg+status,2+status,0+pclath+cstack]
  5010  0B50  1683               	bsf	3,5	;RP0=1, select bank1
  5011  0B51  1303               	bcf	3,6	;RP1=0, select bank1
  5012  0B52  0188               	clrf	8	;volatile
  5013                           
  5014                           ;./lcd.h: 75:     PORTD = 0;
  5015  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  5016  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  5017  0B55  0188               	clrf	8	;volatile
  5018                           
  5019                           ;./lcd.h: 76:     lcdPort(0x00);
  5020  0B56  3000               	movlw	0
  5021  0B57  120A  158A  21C0  120A  158A  	fcall	_lcdPort
  5022                           
  5023                           ;./lcd.h: 77:     _delay((unsigned long)((20)*(4000000/4000.0)));
  5024  0B5C  301A               	movlw	26
  5025  0B5D  00F5               	movwf	??_lcdInit+1
  5026  0B5E  30F8               	movlw	248
  5027  0B5F  00F4               	movwf	??_lcdInit
  5028  0B60                     u3737:	
  5029  0B60  0BF4               	decfsz	??_lcdInit,f
  5030  0B61  2B60               	goto	u3737
  5031  0B62  0BF5               	decfsz	??_lcdInit+1,f
  5032  0B63  2B60               	goto	u3737
  5033  0B64  0000               	nop
  5034                           
  5035                           ;./lcd.h: 78:     lcdCmd(0x03);
  5036  0B65  3003               	movlw	3
  5037  0B66  120A  158A  21DA  120A  158A  	fcall	_lcdCmd
  5038                           
  5039                           ;./lcd.h: 79:     _delay((unsigned long)((5)*(4000000/4000.0)));
  5040  0B6B  3007               	movlw	7
  5041  0B6C  00F5               	movwf	??_lcdInit+1
  5042  0B6D  307D               	movlw	125
  5043  0B6E  00F4               	movwf	??_lcdInit
  5044  0B6F                     u3747:	
  5045  0B6F  0BF4               	decfsz	??_lcdInit,f
  5046  0B70  2B6F               	goto	u3747
  5047  0B71  0BF5               	decfsz	??_lcdInit+1,f
  5048  0B72  2B6F               	goto	u3747
  5049                           
  5050                           ;./lcd.h: 80:     lcdCmd(0x03);
  5051  0B73  3003               	movlw	3
  5052  0B74  120A  158A  21DA  120A  158A  	fcall	_lcdCmd
  5053                           
  5054                           ;./lcd.h: 81:     _delay((unsigned long)((11)*(4000000/4000.0)));
  5055  0B79  300F               	movlw	15
  5056  0B7A  00F5               	movwf	??_lcdInit+1
  5057  0B7B  3047               	movlw	71
  5058  0B7C  00F4               	movwf	??_lcdInit
  5059  0B7D                     u3757:	
  5060  0B7D  0BF4               	decfsz	??_lcdInit,f
  5061  0B7E  2B7D               	goto	u3757
  5062  0B7F  0BF5               	decfsz	??_lcdInit+1,f
  5063  0B80  2B7D               	goto	u3757
  5064  0B81  2B82               	nop2
  5065                           
  5066                           ;./lcd.h: 82:     lcdCmd(0x03);
  5067  0B82  3003               	movlw	3
  5068  0B83  120A  158A  21DA  120A  158A  	fcall	_lcdCmd
  5069                           
  5070                           ;./lcd.h: 84:     lcdCmd(0x02);
  5071  0B88  3002               	movlw	2
  5072  0B89  120A  158A  21DA  120A  158A  	fcall	_lcdCmd
  5073                           
  5074                           ;./lcd.h: 85:     lcdCmd(0x02);
  5075  0B8E  3002               	movlw	2
  5076  0B8F  120A  158A  21DA  120A  158A  	fcall	_lcdCmd
  5077                           
  5078                           ;./lcd.h: 86:     lcdCmd(0x08);
  5079  0B94  3008               	movlw	8
  5080  0B95  120A  158A  21DA  120A  158A  	fcall	_lcdCmd
  5081                           
  5082                           ;./lcd.h: 87:     lcdCmd(0x00);
  5083  0B9A  3000               	movlw	0
  5084  0B9B  120A  158A  21DA  120A  158A  	fcall	_lcdCmd
  5085                           
  5086                           ;./lcd.h: 88:     lcdCmd(0x0C);
  5087  0BA0  300C               	movlw	12
  5088  0BA1  120A  158A  21DA  120A  158A  	fcall	_lcdCmd
  5089                           
  5090                           ;./lcd.h: 89:     lcdCmd(0x00);
  5091  0BA6  3000               	movlw	0
  5092  0BA7  120A  158A  21DA  120A  158A  	fcall	_lcdCmd
  5093                           
  5094                           ;./lcd.h: 90:     lcdCmd(0x06);
  5095  0BAC  3006               	movlw	6
  5096  0BAD  120A  158A  21DA   	fcall	_lcdCmd
  5097  0BB0  0008               	return
  5098  0BB1                     __end_of_lcdInit:	
  5099                           
  5100                           	psect	text16
  5101  0995                     __ptext16:	
  5102 ;; *************** function _lcdClear *****************
  5103 ;; Defined at:
  5104 ;;		line 51 in file "./lcd.h"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;		None
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;		None
  5109 ;; Return value:  Size  Location     Type
  5110 ;;                  1    wreg      void 
  5111 ;; Registers used:
  5112 ;;		wreg, status,2, status,0, pclath, cstack
  5113 ;; Tracked objects:
  5114 ;;		On entry : 0/0
  5115 ;;		On exit  : 0/0
  5116 ;;		Unchanged: 0/0
  5117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5118 ;;      Params:         0       0       0       0       0
  5119 ;;      Locals:         0       0       0       0       0
  5120 ;;      Temps:          0       0       0       0       0
  5121 ;;      Totals:         0       0       0       0       0
  5122 ;;Total ram usage:        0 bytes
  5123 ;; Hardware stack levels used:    1
  5124 ;; Hardware stack levels required when called:    2
  5125 ;; This function calls:
  5126 ;;		_lcdCmd
  5127 ;; This function is called by:
  5128 ;;		_main
  5129 ;; This function uses a non-reentrant model
  5130 ;;
  5131                           
  5132                           
  5133                           ;psect for function _lcdClear
  5134  0995                     _lcdClear:	
  5135                           
  5136                           ;./lcd.h: 52:     lcdCmd(0);
  5137                           
  5138                           ;incstack = 0
  5139                           ; Regs used in _lcdClear: [wreg+status,2+status,0+pclath+cstack]
  5140  0995  3000               	movlw	0
  5141  0996  120A  158A  21DA  120A  158A  	fcall	_lcdCmd
  5142                           
  5143                           ;./lcd.h: 53:     lcdCmd(1);
  5144  099B  3001               	movlw	1
  5145  099C  120A  158A  21DA   	fcall	_lcdCmd
  5146  099F  0008               	return
  5147  09A0                     __end_of_lcdClear:	
  5148                           
  5149                           	psect	text17
  5150  09DA                     __ptext17:	
  5151 ;; *************** function _lcdCmd *****************
  5152 ;; Defined at:
  5153 ;;		line 43 in file "./lcd.h"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;  a               1    wreg     unsigned char 
  5156 ;; Auto vars:     Size  Location     Type
  5157 ;;  a               1    3[COMMON] unsigned char 
  5158 ;; Return value:  Size  Location     Type
  5159 ;;                  1    wreg      void 
  5160 ;; Registers used:
  5161 ;;		wreg, status,2, status,0, pclath, cstack
  5162 ;; Tracked objects:
  5163 ;;		On entry : 0/0
  5164 ;;		On exit  : 0/0
  5165 ;;		Unchanged: 0/0
  5166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5167 ;;      Params:         0       0       0       0       0
  5168 ;;      Locals:         1       0       0       0       0
  5169 ;;      Temps:          2       0       0       0       0
  5170 ;;      Totals:         3       0       0       0       0
  5171 ;;Total ram usage:        3 bytes
  5172 ;; Hardware stack levels used:    1
  5173 ;; Hardware stack levels required when called:    1
  5174 ;; This function calls:
  5175 ;;		_lcdPort
  5176 ;; This function is called by:
  5177 ;;		_lcdClear
  5178 ;;		_lcdSetCursor
  5179 ;;		_lcdInit
  5180 ;; This function uses a non-reentrant model
  5181 ;;
  5182                           
  5183                           
  5184                           ;psect for function _lcdCmd
  5185  09DA                     _lcdCmd:	
  5186                           
  5187                           ;incstack = 0
  5188                           ; Regs used in _lcdCmd: [wreg+status,2+status,0+pclath+cstack]
  5189                           ;lcdCmd@a stored from wreg
  5190  09DA  00F3               	movwf	lcdCmd@a
  5191                           
  5192                           ;./lcd.h: 44:     RD2 = 0;
  5193  09DB  1283               	bcf	3,5	;RP0=0, select bank0
  5194  09DC  1303               	bcf	3,6	;RP1=0, select bank0
  5195  09DD  1108               	bcf	8,2	;volatile
  5196                           
  5197                           ;./lcd.h: 45:     lcdPort(a);
  5198  09DE  0873               	movf	lcdCmd@a,w
  5199  09DF  120A  158A  21C0  120A  158A  	fcall	_lcdPort
  5200                           
  5201                           ;./lcd.h: 46:     RD3 = 1;
  5202  09E4  1283               	bcf	3,5	;RP0=0, select bank0
  5203  09E5  1303               	bcf	3,6	;RP1=0, select bank0
  5204  09E6  1588               	bsf	8,3	;volatile
  5205                           
  5206                           ;./lcd.h: 47:     _delay((unsigned long)((4)*(4000000/4000.0)));
  5207  09E7  3006               	movlw	6
  5208  09E8  00F2               	movwf	??_lcdCmd+1
  5209  09E9  3030               	movlw	48
  5210  09EA  00F1               	movwf	??_lcdCmd
  5211  09EB                     u3767:	
  5212  09EB  0BF1               	decfsz	??_lcdCmd,f
  5213  09EC  29EB               	goto	u3767
  5214  09ED  0BF2               	decfsz	??_lcdCmd+1,f
  5215  09EE  29EB               	goto	u3767
  5216  09EF  0000               	nop
  5217                           
  5218                           ;./lcd.h: 48:     RD3 = 0;
  5219  09F0  1283               	bcf	3,5	;RP0=0, select bank0
  5220  09F1  1303               	bcf	3,6	;RP1=0, select bank0
  5221  09F2  1188               	bcf	8,3	;volatile
  5222  09F3  0008               	return
  5223  09F4                     __end_of_lcdCmd:	
  5224                           
  5225                           	psect	text18
  5226  09C0                     __ptext18:	
  5227 ;; *************** function _lcdPort *****************
  5228 ;; Defined at:
  5229 ;;		line 21 in file "./lcd.h"
  5230 ;; Parameters:    Size  Location     Type
  5231 ;;  a               1    wreg     unsigned char 
  5232 ;; Auto vars:     Size  Location     Type
  5233 ;;  a               1    0[COMMON] unsigned char 
  5234 ;; Return value:  Size  Location     Type
  5235 ;;                  1    wreg      void 
  5236 ;; Registers used:
  5237 ;;		wreg
  5238 ;; Tracked objects:
  5239 ;;		On entry : 0/0
  5240 ;;		On exit  : 0/0
  5241 ;;		Unchanged: 0/0
  5242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5243 ;;      Params:         0       0       0       0       0
  5244 ;;      Locals:         1       0       0       0       0
  5245 ;;      Temps:          0       0       0       0       0
  5246 ;;      Totals:         1       0       0       0       0
  5247 ;;Total ram usage:        1 bytes
  5248 ;; Hardware stack levels used:    1
  5249 ;; This function calls:
  5250 ;;		Nothing
  5251 ;; This function is called by:
  5252 ;;		_lcdCmd
  5253 ;;		_lcdInit
  5254 ;;		_lcdWriteChar
  5255 ;; This function uses a non-reentrant model
  5256 ;;
  5257                           
  5258                           
  5259                           ;psect for function _lcdPort
  5260  09C0                     _lcdPort:	
  5261                           
  5262                           ;incstack = 0
  5263                           ; Regs used in _lcdPort: [wreg]
  5264                           ;lcdPort@a stored from wreg
  5265  09C0  00F0               	movwf	lcdPort@a
  5266                           
  5267                           ;./lcd.h: 22:     if (a & 1)
  5268  09C1  1C70               	btfss	lcdPort@a,0
  5269  09C2  29C7               	goto	l69
  5270                           
  5271                           ;./lcd.h: 23:         RD4 = 1;
  5272  09C3  1283               	bcf	3,5	;RP0=0, select bank0
  5273  09C4  1303               	bcf	3,6	;RP1=0, select bank0
  5274  09C5  1608               	bsf	8,4	;volatile
  5275  09C6  29CA               	goto	l70
  5276  09C7                     l69:	
  5277                           ;./lcd.h: 24:     else
  5278                           
  5279                           
  5280                           ;./lcd.h: 25:         RD4 = 0;
  5281  09C7  1283               	bcf	3,5	;RP0=0, select bank0
  5282  09C8  1303               	bcf	3,6	;RP1=0, select bank0
  5283  09C9  1208               	bcf	8,4	;volatile
  5284  09CA                     l70:	
  5285                           
  5286                           ;./lcd.h: 27:     if (a & 2)
  5287  09CA  1CF0               	btfss	lcdPort@a,1
  5288  09CB  29CE               	goto	l71
  5289                           
  5290                           ;./lcd.h: 28:         RD5 = 1;
  5291  09CC  1688               	bsf	8,5	;volatile
  5292  09CD  29CF               	goto	l72
  5293  09CE                     l71:	
  5294                           ;./lcd.h: 29:     else
  5295                           
  5296                           
  5297                           ;./lcd.h: 30:         RD5 = 0;
  5298  09CE  1288               	bcf	8,5	;volatile
  5299  09CF                     l72:	
  5300                           
  5301                           ;./lcd.h: 32:     if (a & 4)
  5302  09CF  1D70               	btfss	lcdPort@a,2
  5303  09D0  29D3               	goto	l73
  5304                           
  5305                           ;./lcd.h: 33:         RD6 = 1;
  5306  09D1  1708               	bsf	8,6	;volatile
  5307  09D2  29D4               	goto	l74
  5308  09D3                     l73:	
  5309                           ;./lcd.h: 34:     else
  5310                           
  5311                           
  5312                           ;./lcd.h: 35:         RD6 = 0;
  5313  09D3  1308               	bcf	8,6	;volatile
  5314  09D4                     l74:	
  5315                           
  5316                           ;./lcd.h: 37:     if (a & 8)
  5317  09D4  1DF0               	btfss	lcdPort@a,3
  5318  09D5  29D8               	goto	l75
  5319                           
  5320                           ;./lcd.h: 38:         RD7 = 1;
  5321  09D6  1788               	bsf	8,7	;volatile
  5322  09D7  0008               	return
  5323  09D8                     l75:	
  5324                           ;./lcd.h: 39:     else
  5325                           
  5326                           
  5327                           ;./lcd.h: 40:         RD7 = 0;
  5328  09D8  1388               	bcf	8,7	;volatile
  5329  09D9  0008               	return
  5330  09DA                     __end_of_lcdPort:	
  5331                           
  5332                           	psect	text19
  5333  09B0                     __ptext19:	
  5334 ;; *************** function _initServos *****************
  5335 ;; Defined at:
  5336 ;;		line 25 in file "./servo_pwm.h"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;		None
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;		None
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  1    wreg      void 
  5343 ;; Registers used:
  5344 ;;		wreg, status,2, status,0, pclath, cstack
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5350 ;;      Params:         0       0       0       0       0
  5351 ;;      Locals:         0       0       0       0       0
  5352 ;;      Temps:          0       0       0       0       0
  5353 ;;      Totals:         0       0       0       0       0
  5354 ;;Total ram usage:        0 bytes
  5355 ;; Hardware stack levels used:    1
  5356 ;; Hardware stack levels required when called:    1
  5357 ;; This function calls:
  5358 ;;		_setPR2
  5359 ;;		_setTMR2
  5360 ;; This function is called by:
  5361 ;;		_main
  5362 ;; This function uses a non-reentrant model
  5363 ;;
  5364                           
  5365                           
  5366                           ;psect for function _initServos
  5367  09B0                     _initServos:	
  5368                           
  5369                           ;./servo_pwm.h: 26:     setPR2();
  5370                           
  5371                           ;incstack = 0
  5372                           ; Regs used in _initServos: [wreg+status,2+status,0+pclath+cstack]
  5373  09B0  120A  158A  2188  120A  158A  	fcall	_setPR2
  5374                           
  5375                           ;./servo_pwm.h: 27:     setTMR2(1);
  5376  09B5  3001               	movlw	1
  5377  09B6  120A  158A  21F4  120A  158A  	fcall	_setTMR2
  5378                           
  5379                           ;./servo_pwm.h: 28:     setTMR2(2);
  5380  09BB  3002               	movlw	2
  5381  09BC  120A  158A  21F4   	fcall	_setTMR2
  5382  09BF  0008               	return
  5383  09C0                     __end_of_initServos:	
  5384                           
  5385                           	psect	text20
  5386  09F4                     __ptext20:	
  5387 ;; *************** function _setTMR2 *****************
  5388 ;; Defined at:
  5389 ;;		line 50 in file "./servo_pwm.h"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;  pwm             1    wreg     const unsigned char 
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;  pwm             1    0[COMMON] const unsigned char 
  5394 ;; Return value:  Size  Location     Type
  5395 ;;                  1    wreg      void 
  5396 ;; Registers used:
  5397 ;;		wreg, status,2, status,0
  5398 ;; Tracked objects:
  5399 ;;		On entry : 0/0
  5400 ;;		On exit  : 0/0
  5401 ;;		Unchanged: 0/0
  5402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5403 ;;      Params:         0       0       0       0       0
  5404 ;;      Locals:         1       0       0       0       0
  5405 ;;      Temps:          0       0       0       0       0
  5406 ;;      Totals:         1       0       0       0       0
  5407 ;;Total ram usage:        1 bytes
  5408 ;; Hardware stack levels used:    1
  5409 ;; This function calls:
  5410 ;;		Nothing
  5411 ;; This function is called by:
  5412 ;;		_initServos
  5413 ;; This function uses a non-reentrant model
  5414 ;;
  5415                           
  5416                           
  5417                           ;psect for function _setTMR2
  5418  09F4                     _setTMR2:	
  5419                           
  5420                           ;incstack = 0
  5421                           ; Regs used in _setTMR2: [wreg+status,2+status,0]
  5422                           ;setTMR2@pwm stored from wreg
  5423  09F4  00F0               	movwf	setTMR2@pwm
  5424                           
  5425                           ;./servo_pwm.h: 51:     if (pwm == 2) {
  5426  09F5  3002               	movlw	2
  5427  09F6  0670               	xorwf	setTMR2@pwm,w
  5428  09F7  1D03               	btfss	3,2
  5429  09F8  29FE               	goto	l127
  5430                           
  5431                           ;./servo_pwm.h: 52:         CCP2M3 = 1;
  5432  09F9  1283               	bcf	3,5	;RP0=0, select bank0
  5433  09FA  1303               	bcf	3,6	;RP1=0, select bank0
  5434  09FB  159D               	bsf	29,3	;volatile
  5435                           
  5436                           ;./servo_pwm.h: 53:         CCP2M2 = 1;
  5437  09FC  151D               	bsf	29,2	;volatile
  5438                           
  5439                           ;./servo_pwm.h: 54:     } else {
  5440  09FD  2A02               	goto	l131
  5441  09FE                     l127:	
  5442                           
  5443                           ;./servo_pwm.h: 55:         CCP1M3 = 1;
  5444  09FE  1283               	bcf	3,5	;RP0=0, select bank0
  5445  09FF  1303               	bcf	3,6	;RP1=0, select bank0
  5446  0A00  1597               	bsf	23,3	;volatile
  5447                           
  5448                           ;./servo_pwm.h: 56:         CCP1M2 = 1;
  5449  0A01  1517               	bsf	23,2	;volatile
  5450  0A02                     l131:	
  5451                           
  5452                           ;./servo_pwm.h: 65:         T2CKPS0 = 1;
  5453  0A02  1412               	bsf	18,0	;volatile
  5454                           
  5455                           ;./servo_pwm.h: 66:         T2CKPS1 = 1;
  5456  0A03  1492               	bsf	18,1	;volatile
  5457                           
  5458                           ;./servo_pwm.h: 68:     TMR2ON = 1;
  5459  0A04  1512               	bsf	18,2	;volatile
  5460                           
  5461                           ;./servo_pwm.h: 69:     if (pwm == 2)
  5462  0A05  3002               	movlw	2
  5463  0A06  0670               	xorwf	setTMR2@pwm,w
  5464  0A07  1D03               	btfss	3,2
  5465  0A08  2A0D               	goto	l133
  5466                           
  5467                           ;./servo_pwm.h: 70:         TRISC2 = 0;
  5468  0A09  1683               	bsf	3,5	;RP0=1, select bank1
  5469  0A0A  1303               	bcf	3,6	;RP1=0, select bank1
  5470  0A0B  1107               	bcf	7,2	;volatile
  5471  0A0C  0008               	return
  5472  0A0D                     l133:	
  5473                           ;./servo_pwm.h: 71:     else
  5474                           
  5475                           
  5476                           ;./servo_pwm.h: 72:         TRISC1 = 0;
  5477  0A0D  1683               	bsf	3,5	;RP0=1, select bank1
  5478  0A0E  1303               	bcf	3,6	;RP1=0, select bank1
  5479  0A0F  1087               	bcf	7,1	;volatile
  5480  0A10  0008               	return
  5481  0A11                     __end_of_setTMR2:	
  5482                           
  5483                           	psect	text21
  5484  0988                     __ptext21:	
  5485 ;; *************** function _setPR2 *****************
  5486 ;; Defined at:
  5487 ;;		line 21 in file "./servo_pwm.h"
  5488 ;; Parameters:    Size  Location     Type
  5489 ;;		None
  5490 ;; Auto vars:     Size  Location     Type
  5491 ;;		None
  5492 ;; Return value:  Size  Location     Type
  5493 ;;                  1    wreg      void 
  5494 ;; Registers used:
  5495 ;;		wreg
  5496 ;; Tracked objects:
  5497 ;;		On entry : 0/0
  5498 ;;		On exit  : 0/0
  5499 ;;		Unchanged: 0/0
  5500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5501 ;;      Params:         0       0       0       0       0
  5502 ;;      Locals:         0       0       0       0       0
  5503 ;;      Temps:          0       0       0       0       0
  5504 ;;      Totals:         0       0       0       0       0
  5505 ;;Total ram usage:        0 bytes
  5506 ;; Hardware stack levels used:    1
  5507 ;; This function calls:
  5508 ;;		Nothing
  5509 ;; This function is called by:
  5510 ;;		_initServos
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           
  5515                           ;psect for function _setPR2
  5516  0988                     _setPR2:	
  5517                           
  5518                           ;./servo_pwm.h: 22:     PR2 = (4000000 / (245 * 4 * 16)) - 1;
  5519                           
  5520                           ;incstack = 0
  5521                           ; Regs used in _setPR2: [wreg]
  5522  0988  30FE               	movlw	254
  5523  0989  1683               	bsf	3,5	;RP0=1, select bank1
  5524  098A  1303               	bcf	3,6	;RP1=0, select bank1
  5525  098B  0092               	movwf	18	;volatile
  5526  098C  0008               	return
  5527  098D                     __end_of_setPR2:	
  5528                           
  5529                           	psect	text22
  5530  0A11                     __ptext22:	
  5531 ;; *************** function _adcRead *****************
  5532 ;; Defined at:
  5533 ;;		line 35 in file "./adc.h"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;  adcChannel      2    0[COMMON] const int 
  5536 ;; Auto vars:     Size  Location     Type
  5537 ;;		None
  5538 ;; Return value:  Size  Location     Type
  5539 ;;                  2    0[COMMON] int 
  5540 ;; Registers used:
  5541 ;;		wreg, status,2, status,0
  5542 ;; Tracked objects:
  5543 ;;		On entry : 0/0
  5544 ;;		On exit  : 0/0
  5545 ;;		Unchanged: 0/0
  5546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5547 ;;      Params:         2       0       0       0       0
  5548 ;;      Locals:         0       0       0       0       0
  5549 ;;      Temps:          2       0       0       0       0
  5550 ;;      Totals:         4       0       0       0       0
  5551 ;;Total ram usage:        4 bytes
  5552 ;; Hardware stack levels used:    1
  5553 ;; This function calls:
  5554 ;;		Nothing
  5555 ;; This function is called by:
  5556 ;;		_main
  5557 ;; This function uses a non-reentrant model
  5558 ;;
  5559                           
  5560                           
  5561                           ;psect for function _adcRead
  5562  0A11                     _adcRead:	
  5563                           
  5564                           ;./adc.h: 36:     ADCON0bits.ADON = 1;
  5565                           
  5566                           ;incstack = 0
  5567                           ; Regs used in _adcRead: [wreg+status,2+status,0]
  5568  0A11  1283               	bcf	3,5	;RP0=0, select bank0
  5569  0A12  1303               	bcf	3,6	;RP1=0, select bank0
  5570  0A13  141F               	bsf	31,0	;volatile
  5571                           
  5572                           ;./adc.h: 37:     ADCON0bits.CHS = adcChannel;
  5573  0A14  0870               	movf	adcRead@adcChannel,w
  5574  0A15  00F2               	movwf	??_adcRead
  5575  0A16  0DF2               	rlf	??_adcRead,f
  5576  0A17  0DF2               	rlf	??_adcRead,f
  5577  0A18  0DF2               	rlf	??_adcRead,f
  5578  0A19  081F               	movf	31,w	;volatile
  5579  0A1A  0672               	xorwf	??_adcRead,w
  5580  0A1B  39C7               	andlw	-57
  5581  0A1C  0672               	xorwf	??_adcRead,w
  5582  0A1D  009F               	movwf	31	;volatile
  5583                           
  5584                           ;./adc.h: 38:     _delay((unsigned long)((10)*(4000000/4000.0)));
  5585  0A1E  300D               	movlw	13
  5586  0A1F  00F3               	movwf	??_adcRead+1
  5587  0A20  30FB               	movlw	251
  5588  0A21  00F2               	movwf	??_adcRead
  5589  0A22                     u3777:	
  5590  0A22  0BF2               	decfsz	??_adcRead,f
  5591  0A23  2A22               	goto	u3777
  5592  0A24  0BF3               	decfsz	??_adcRead+1,f
  5593  0A25  2A22               	goto	u3777
  5594  0A26  2A27               	nop2
  5595                           
  5596                           ;./adc.h: 39:     ADCON0bits.GO = 1;
  5597  0A27  1283               	bcf	3,5	;RP0=0, select bank0
  5598  0A28  1303               	bcf	3,6	;RP1=0, select bank0
  5599  0A29  151F               	bsf	31,2	;volatile
  5600  0A2A                     l107:	
  5601                           ;./adc.h: 40:     while (ADCON0bits.GO_DONE);
  5602                           
  5603  0A2A  191F               	btfsc	31,2	;volatile
  5604  0A2B  2A2A               	goto	l107
  5605                           
  5606                           ;./adc.h: 42:     return (ADRESH << 8) + (ADRESL);
  5607  0A2C  081E               	movf	30,w	;volatile
  5608  0A2D  00F1               	movwf	?_adcRead+1
  5609  0A2E  1683               	bsf	3,5	;RP0=1, select bank1
  5610  0A2F  1303               	bcf	3,6	;RP1=0, select bank1
  5611  0A30  081E               	movf	30,w	;volatile
  5612  0A31  00F0               	movwf	?_adcRead
  5613  0A32  0008               	return
  5614  0A33                     __end_of_adcRead:	
  5615                           
  5616                           	psect	text23
  5617  09A0                     __ptext23:	
  5618 ;; *************** function _adcInit *****************
  5619 ;; Defined at:
  5620 ;;		line 1 in file "./adc.h"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;		None
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;		None
  5625 ;; Return value:  Size  Location     Type
  5626 ;;                  1    wreg      void 
  5627 ;; Registers used:
  5628 ;;		wreg, status,2, status,0
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5634 ;;      Params:         0       0       0       0       0
  5635 ;;      Locals:         0       0       0       0       0
  5636 ;;      Temps:          0       0       0       0       0
  5637 ;;      Totals:         0       0       0       0       0
  5638 ;;Total ram usage:        0 bytes
  5639 ;; Hardware stack levels used:    1
  5640 ;; This function calls:
  5641 ;;		Nothing
  5642 ;; This function is called by:
  5643 ;;		_main
  5644 ;; This function uses a non-reentrant model
  5645 ;;
  5646                           
  5647                           
  5648                           ;psect for function _adcInit
  5649  09A0                     _adcInit:	
  5650                           
  5651                           ;./adc.h: 11:     ADCON0bits.ADCS = 0b01;
  5652                           
  5653                           ;incstack = 0
  5654                           ; Regs used in _adcInit: [wreg+status,2+status,0]
  5655  09A0  1283               	bcf	3,5	;RP0=0, select bank0
  5656  09A1  1303               	bcf	3,6	;RP1=0, select bank0
  5657  09A2  081F               	movf	31,w	;volatile
  5658  09A3  393F               	andlw	-193
  5659  09A4  3840               	iorlw	64
  5660  09A5  009F               	movwf	31	;volatile
  5661                           
  5662                           ;./adc.h: 12:     ADCON0bits.CHS = 0b000;
  5663  09A6  30C7               	movlw	-57
  5664  09A7  059F               	andwf	31,f	;volatile
  5665                           
  5666                           ;./adc.h: 13:     ADCON0bits.ADON = 0;
  5667  09A8  101F               	bcf	31,0	;volatile
  5668                           
  5669                           ;./adc.h: 24:     ADCON1bits.ADFM = 1;
  5670  09A9  1683               	bsf	3,5	;RP0=1, select bank1
  5671  09AA  1303               	bcf	3,6	;RP1=0, select bank1
  5672  09AB  179F               	bsf	31,7	;volatile
  5673                           
  5674                           ;./adc.h: 25:     ADCON1bits.ADCS2 = 1;
  5675  09AC  171F               	bsf	31,6	;volatile
  5676                           
  5677                           ;./adc.h: 26:     ADCON1bits.PCFG = 0b0000;
  5678  09AD  30F0               	movlw	-16
  5679  09AE  059F               	andwf	31,f	;volatile
  5680  09AF  0008               	return
  5681  09B0                     __end_of_adcInit:	
  5682  007E                     btemp	set	126	;btemp
  5683  007E                     wtemp0	set	126


Data Sizes:
    Strings     46
    Constant    10
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     21      37
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[13]), STR_3(CODE[13]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> mensaje(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcdPrint@a	PTR unsigned char  size(2) Largest target is 16
		 -> mensaje(BANK1[16]), STR_2(CODE[7]), STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setAngule2->___xxtofl
    _setAngule1->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    ___fladd->___xxtofl
    _lcdSetCursor->_lcdCmd
    _lcdPrint->_lcdWriteChar
    _lcdWriteChar->_lcdPort
    _lcdInit->_lcdCmd
    _lcdClear->_lcdCmd
    _lcdCmd->_lcdPort
    _initServos->_setTMR2

Critical Paths under _main in BANK0

    _main->___fltol
    _setAngule2->___fltol
    _setAngule1->___fltol
    ___fltol->___fladd
    ___flmul->___fldiv
    ___fladd->___flmul

Critical Paths under _main in BANK1

    _main->_setAngule1
    _main->_setAngule2
    _setAngule2->___fltol
    _setAngule1->___fltol

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   25072
                                             12 BANK1      9     9      0
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _adcInit
                            _adcRead
                         _initServos
                           _lcdClear
                            _lcdInit
                           _lcdPrint
                       _lcdSetCursor
                         _setAngule1
                         _setAngule2
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1320
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setAngule2                                           7     7      0    8591
                                              5 BANK1      7     7      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _setAngule1                                           7     7      0    8591
                                              5 BANK1      7     7      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     778
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     685
                                             72 BANK0      6     2      4
                                              0 BANK1      5     5      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    3177
                                             26 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1425
                                              0 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2414
                                             52 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcdSetCursor                                         7     6      1     684
                                              4 COMMON     7     6      1
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             7     5      2     572
                                              5 COMMON     7     5      2
                       _lcdWriteChar
 ---------------------------------------------------------------------------------
 (2) _lcdWriteChar                                         4     4      0     178
                                              1 COMMON     4     4      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              2     2      0     198
                                              4 COMMON     2     2      0
                             _lcdCmd
                            _lcdPort
 ---------------------------------------------------------------------------------
 (1) _lcdClear                                             0     0      0     110
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (2) _lcdCmd                                               3     3      0     110
                                              1 COMMON     3     3      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (3) _lcdPort                                              1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initServos                                           0     0      0      44
                             _setPR2
                            _setTMR2
 ---------------------------------------------------------------------------------
 (2) _setTMR2                                              1     1      0      44
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setPR2                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcRead                                              4     2      2      98
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flmul
     __Umul8_16
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _adcInit
   _adcRead
   _initServos
     _setPR2
     _setTMR2
   _lcdClear
     _lcdCmd
       _lcdPort
   _lcdInit
     _lcdCmd
       _lcdPort
     _lcdPort
   _lcdPrint
     _lcdWriteChar
       _lcdPort
   _lcdSetCursor
     _lcdCmd
       _lcdPort
   _setAngule1
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _setAngule2
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      81       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     15      25       7       46.3%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      81      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed May 15 18:41:59 2019

           ___fldiv@aexp 0039             ___fldiv@bexp 0038                        pc 0002  
           ___fldiv@sign 0031              __CFG_CP$OFF 0000                       l70 09CA  
                     l71 09CE                       l72 09CF                       l73 09D3  
                     l74 09D4                       l75 09D8                       l69 09C7  
                     fsr 0004      __Umul8_16@word_mpld 0076                      l107 0A2A  
                    l131 0A02                      l133 0A0D                      l127 09FE  
                    l143 0F70                      l145 0F84                      l613 015C  
                    l710 0A45                      l704 0CB1                      l561 039C  
                    l457 0C18                      l705 0CBB                      l563 037A  
                    l635 029B                      l557 0303                      l637 02A9  
                    l591 04BD                      l665 07E8                      l578 0455  
                    l691 0C5B                      l599 04D5                      l697 0C9B  
                    _RB0 0030                      _RB1 0031                      _RD2 0042  
                    _RD3 0043                      _RD4 0044                      _RD5 0045  
                    _RD6 0046                      _RD7 0047                      _PR2 0092  
           __CFG_CPD$OFF 0000                      fsr0 0004                      indf 0000  
           __CFG_FOSC$XT 0000             ___flmul@aexp 004C             ___flmul@bexp 004D  
           ___flmul@sign 0047             ___flmul@temp 0052             ___flmul@prod 004E  
         ??_lcdWriteChar 0071            lcdWriteChar@a 0074            lcdWriteChar@y 0073  
            main@angule1 00B1              main@angule2 00B2             __CFG_LVP$OFF 0000  
           ___fltol@exp1 006D                     l2020 04D1                     l2100 01D6  
                   l2110 01FA                     l2016 04CD                     l2040 012B  
                   l2200 0522                     l2106 01F5                     l2202 0524  
                   l2132 0234                     l2124 0200                     l2108 01B2  
                   l2060 0151                     l2044 012E                     l2212 053A  
                   l2204 052C                     l2150 0281                     l2126 021D  
                   l2046 0136                     l2136 0236                     l2080 0187  
                   l2064 0154                     l2320 0C6A                     l2410 0ACB  
                   l2162 02A5                     l2146 0268                     l2074 017B  
                   l2314 0C53                     l2324 0C6E                     l2182 04FD  
                   l2334 0CAF                     l2326 0C80                     l2272 076E  
                   l2264 073A                     l2184 04FF                     l2336 0CA0  
                   l2512 00C8                     l2504 00C4                     l2290 07B8  
                   l2266 0757                     l2186 0507                     l1802 0AB9  
                   l2514 003D                     l2364 0B2B                     l2276 0770  
                   l2348 0CD8                     l2444 0DA5                     l1820 0018  
                   l2516 0109                     l1910 0349                     l2286 07A2  
                   l1750 0BC0                     l1806 0AC4                     l2470 005D  
                   l1920 0387                     l2296 07D1                     l1824 0026  
                   l1850 02D1                     l1770 0C00                     l1754 0BC9  
                   l2458 0E7B                     l1818 000A                     l2538 0EDB  
                   l1852 02D9                     l1780 0C2F                     l1772 0C14  
                   l1828 0031                     l2492 0094                     l2476 007B  
                   l1918 0385                     l1870 02F8                     l1846 02CE  
                   l1694 0A3D                     l2486 0092                     l2590 0070  
                   l1944 03CB                     l1936 03AA                     l1928 0396  
                   l1880 030D                     l1946 03CD                     l1954 03DD  
                   l1874 02FB                     l1794 0A95                     l2498 00B5  
                   l1980 0476                     l1972 0467                     l1964 0447  
                   l1796 0AA3                     l1994 0488                     l1986 047D  
                   l1988 047F                     l1998 048A                     STR_1 0834  
                   STR_2 0841                     STR_3 081A                     STR_4 0827  
                   u2025 0C1F                     u2105 0ABA                     u2135 000D  
                   u2065 0A98                     u2155 001E                     u2421 0408  
                   u2413 03EF                     u2405 03D1                     u2325 038B  
                   u3125 06E3                     u2085 0AA4                     u2165 0027  
                   u2430 041C                     u2422 0409                     u2431 041D  
                   u2423 040E                     u3055 05EA                     u2095 0AB0  
                   u2432 0422                     u2424 040F                     u2280 0369  
                   u2433 0423                     u2425 0414                     u3145 0708  
                   u2426 0415                     u2290 036A                     u2275 035D  
                   u3165 0726                     u3085 0647                     u3175 073E  
                   u3415 0CC3                     u3335 0C77                     u1905 0A46  
                   u3265 078D                     u3530 0DA2                     u2475 0469  
                   u3275 07AB                     u3195 0749                     u3355 0C93  
                   u1925 0A67                     u2805 0204                     u3285 07C3  
                   u3605 00AB                     u3455 0B12                     u2575 04A7  
                   u2735 01BB                     u3375 0CA8                     u3560 0E78  
                   u2905 0271                     u2825 020F                     u2745 01C4  
                   u3475 0B37                     u2915 028C                     u3707 0FFA  
                   u3717 0A77                     u2765 01CF                     u1965 0BE0  
                   u3727 0A87                     u2775 01E4                     u3737 0B60  
                   u3747 0B6F                     u1995 0C01                     u3757 0B7D  
                   u3767 09EB                     u2895 0253                     u3777 0A22  
                   u3697 0EC6             __CFG_WRT$OFF 0000                     _main 0E8D  
       setAngule1@angule 00A9                     btemp 007E         setAngule2@angule 00A9  
                   start 0000          ___fldiv@new_exp 0032            ___fltol@sign1 006C  
        __end_of___fladd 04E0                    ?_main 0070          __end_of_adcInit 09B0  
                  _CCP1X 00BD          __end_of___fldiv 02B1                    _CCP1Y 00BC  
                  _CCP2X 00ED          __end_of_adcRead 0A33                    _CCP2Y 00EC  
          __CFG_WDTE$OFF 0000          __end_of___flmul 07F5          __end_of___fltol 0C3E  
        __end_of___lwdiv 0AC9          __end_of___lwmod 0036                    _PORTD 0008  
                  _TRISD 0088          __end_of_lcdInit 0BB1          __end_of_lcdPort 09DA  
        __end_of_dpowers 081A          __end_of_setTMR2 0A11           __CFG_BOREN$OFF 0000  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __end_of_sprintf 010E          __initialization 07F5             __end_of_main 1000  
                 ??_main 00AC     __end_of_lcdSetCursor 0B50                   _CCP1M2 00BA  
                 _CCP1M3 00BB                   _CCP2M2 00EA                   _CCP2M3 00EB  
                 _ADRESH 001E                   _ADRESL 009E                   _CCPR1L 0015  
                 _CCPR2L 001B                   _TMR2ON 0092                   _TRISC1 0439  
                 _TRISC2 043A         __end_of___xxtofl 0CE1         __end_of_lcdClear 09A0  
         __CFG_PWRTE$OFF 0000         __end_of_lcdPrint 0B06                ??___fladd 005C  
              ??_adcInit 0070                ??___fldiv 0028                ??_adcRead 0072  
   __end_of_lcdWriteChar 0A8D                ??___flmul 0042                ??___fltol 00A0  
                 _lcdCmd 09DA                ??___lwdiv 0074                ??___lwmod 007C  
                 _setPR2 0988                ??_lcdInit 0074                ??_lcdPort 0070  
              ??_setTMR2 0070       __size_of__Umul8_16 0023                ??_sprintf 0023  
           ___xxtofl@arg 007A             ___xxtofl@exp 0079             ___xxtofl@val 0070  
__end_of__initialization 07FC               ___fltol@f1 0068           __pcstackCOMMON 0070  
       lcdWriteChar@temp 0072               __pbssBANK1 00B5        __end_of__Umul8_16 0A56  
             __pmaintext 0E8D                  ?_lcdCmd 0070    __size_of_lcdSetCursor 004A  
                ?_setPR2 0070                  _T2CKPS0 0090                  _T2CKPS1 0091  
              ?___xxtofl 0070                ?_lcdClear 0070                ?_lcdPrint 0075  
             __stringtab 0800    __size_of_lcdWriteChar 0037             _lcdSetCursor 0B06  
                ___fladd 02B1                  _adcInit 09A0                  ___fldiv 010E  
                _adcRead 0A11                  ___flmul 04E0                  ___fltol 0BB1  
             _initServos 09B0                  ___lwdiv 0A8D                  ___lwmod 0004  
        __size_of_lcdCmd 001A          __size_of_setPR2 0005                  _lcdInit 0B50  
                __ptext1 0036                  __ptext2 0004                  __ptext3 0A8D  
                __ptext4 0DB7                  __ptext5 0CE1                  __ptext6 0C3E  
                __ptext7 0BB1                  __ptext8 04E0                  __ptext9 0A33  
                _lcdPort 09C0                  _dpowers 0810                  _mensaje 00B5  
             ??___xxtofl 0074                  _setTMR2 09F4                  lcdCmd@a 0073  
             ??_lcdClear 0074               _setAngule1 0CE1               _setAngule2 0DB7  
             ??_lcdPrint 0077                  _sprintf 0036                  clrloop0 098E  
           _lcdWriteChar 0A56     end_of_initialization 07FC              ___fladd@grs 0067  
          ___xxtofl@sign 0078              ___fldiv@grs 0034              ___fldiv@rem 002D  
         setAngule1@duty 00AA           setAngule2@duty 00AA              ___flmul@grs 0048  
             main@servo1 00AF               main@servo2 00B3              ?_initServos 0070  
         __end_of_lcdCmd 09F4           __end_of_setPR2 098D      start_initialization 07F5  
            ?_setAngule1 0070              ?_setAngule2 0070                 ??_lcdCmd 0071  
              __Umul8_16 0A33                 ??_setPR2 0070                ___fladd@a 0058  
              ___fladd@b 0054                ___fldiv@a 0020                ___fldiv@b 0024  
              ___flmul@a 003E                ___flmul@b 003A                ___latbits 0002  
             setTMR2@pwm 0070            __pcstackBANK0 0020            __pcstackBANK1 00A0  
      __size_of___xxtofl 00A3        __size_of_lcdClear 000B      __size_of_initServos 0010  
      __size_of_lcdPrint 003D              sprintf@flag 0027              sprintf@prec 0028  
       ___lwdiv@dividend 0072                 ?___fladd 0054                 ?_adcInit 0070  
               ?___fldiv 0020                 ?_adcRead 0070                 ?___flmul 003A  
               ?___fltol 0068      __size_of_setAngule1 00D6      __size_of_setAngule2 00D6  
             ?__Umul8_16 0070                 ?___lwdiv 0070                 ?___lwmod 0078  
              __pstrings 0800                 ?_lcdInit 0070                 ?_lcdPort 0070  
      adcRead@adcChannel 0070                 ?_setTMR2 0070         ___lwdiv@quotient 0075  
               ?_sprintf 0020                clear_ram0 098D                lcdPrint@a 0075  
              lcdPrint@i 007A               _ADCON0bits 001F              __stringbase 080F  
             _ADCON1bits 009F         lcdSetCursor@temp 007A             ??_initServos 0071  
            ??__Umul8_16 0072         __size_of___fladd 022F         __size_of_adcInit 0010  
       __size_of___fldiv 01A3         __size_of_adcRead 0022         __size_of___flmul 0315  
       __size_of___fltol 008D         __size_of___lwdiv 003C         __size_of___lwmod 0032  
     __end_of__stringtab 0810         __size_of_lcdInit 0061         __size_of_lcdPort 001A  
             sprintf@val 0029                 ___xxtofl 0C3E         __size_of_setTMR2 001D  
               _lcdClear 0995          ___lwdiv@divisor 0070             ??_setAngule1 00A5  
           ??_setAngule2 00A5          ___lwdiv@counter 0077                 __ptext10 010E  
               __ptext11 02B1                 __ptext20 09F4                 __ptext12 0B06  
               __ptext21 0988                 __ptext13 0AC9                 __ptext22 0A11  
               __ptext14 0A56                 __ptext23 09A0                 __ptext15 0B50  
               __ptext16 0995                 __ptext17 09DA                 __ptext18 09C0  
               __ptext19 09B0                 _lcdPrint 0AC9         __size_of_sprintf 00D8  
          lcdSetCursor@a 0077            lcdSetCursor@b 0074       __end_of_initServos 09C0  
          lcdSetCursor@y 0079            lcdSetCursor@z 0078            __size_of_main 0173  
               lcdPort@a 0070       __end_of_setAngule1 0DB7       __end_of_setAngule2 0E8D  
              sprintf@ap 0026                sprintf@sp 002B         ___lwmod@dividend 007A  
          ?_lcdSetCursor 0074                stringcode 080A   __Umul8_16@multiplicand 0070  
               sprintf@c 002C                 sprintf@f 0020          ___lwmod@divisor 0078  
        ___lwmod@counter 007D                 stringdir 080A                 stringtab 0800  
          ?_lcdWriteChar 0070            ___fladd@signs 0064             ___fladd@aexp 0065  
           ___fladd@bexp 0066     __Umul8_16@multiplier 0078           ??_lcdSetCursor 0075  
      __Umul8_16@product 0074  
