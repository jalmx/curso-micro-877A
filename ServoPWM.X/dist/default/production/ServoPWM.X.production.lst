

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu May 16 17:35:58 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.05
    39                           ; Generated 20/12/2018 GMT
    40                           ; 
    41                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F877A Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  010C                     	;# 
   187  010D                     	;# 
   188  010E                     	;# 
   189  010F                     	;# 
   190  018C                     	;# 
   191  018D                     	;# 
   192                           
   193                           	psect	strings
   194  0800                     __pstrings:	
   195  0800                     stringtab:	
   196  0800                     __stringtab:	
   197                           
   198                           ;	String table - string pointers are 1 byte each
   199  0800  1BFF               	btfsc	btemp+1,7
   200  0801  280A               	ljmp	stringcode
   201  0802  1383               	bcf	3,7
   202  0803  187F               	btfsc	btemp+1,0
   203  0804  1783               	bsf	3,7
   204  0805  0800               	movf	0,w
   205  0806  0A84               	incf	4,f
   206  0807  1903               	skipnz
   207  0808  0AFF               	incf	btemp+1,f
   208  0809  0008               	return
   209  080A                     stringcode:	
   210  080A                     stringdir:	
   211  080A  3008               	movlw	high stringdir
   212  080B  008A               	movwf	10
   213  080C  0804               	movf	4,w
   214  080D  0A84               	incf	4,f
   215  080E  0782               	addwf	2,f
   216  080F                     __stringbase:	
   217  080F  3400               	retlw	0
   218  0810                     __end_of__stringtab:	
   219  0810                     _dpowers:	
   220  0810  3401               	retlw	1
   221  0811  3400               	retlw	0
   222  0812  340A               	retlw	10
   223  0813  3400               	retlw	0
   224  0814  3464               	retlw	100
   225  0815  3400               	retlw	0
   226  0816  34E8               	retlw	232
   227  0817  3403               	retlw	3
   228  0818  3410               	retlw	16
   229  0819  3427               	retlw	39
   230  081A                     __end_of_dpowers:	
   231  001B                     _CCPR2L	set	27
   232  0015                     _CCPR1L	set	21
   233  001E                     _ADRESH	set	30
   234  001F                     _ADCON0bits	set	31
   235  0008                     _PORTD	set	8
   236  0031                     _RB1	set	49
   237  0030                     _RB0	set	48
   238  0092                     _TMR2ON	set	146
   239  0091                     _T2CKPS1	set	145
   240  0090                     _T2CKPS0	set	144
   241  00BA                     _CCP1M2	set	186
   242  00BB                     _CCP1M3	set	187
   243  00EA                     _CCP2M2	set	234
   244  00EB                     _CCP2M3	set	235
   245  00EC                     _CCP2Y	set	236
   246  00ED                     _CCP2X	set	237
   247  00BC                     _CCP1Y	set	188
   248  00BD                     _CCP1X	set	189
   249  0043                     _RD3	set	67
   250  0042                     _RD2	set	66
   251  0047                     _RD7	set	71
   252  0046                     _RD6	set	70
   253  0045                     _RD5	set	69
   254  0044                     _RD4	set	68
   255  0092                     _PR2	set	146
   256  009E                     _ADRESL	set	158
   257  009F                     _ADCON1bits	set	159
   258  0088                     _TRISD	set	136
   259  0439                     _TRISC1	set	1081
   260  043A                     _TRISC2	set	1082
   261  081A                     STR_3:	
   262  081A  3441               	retlw	65	;'A'
   263  081B  346E               	retlw	110	;'n'
   264  081C  3467               	retlw	103	;'g'
   265  081D  3475               	retlw	117	;'u'
   266  081E  346C               	retlw	108	;'l'
   267  081F  3465               	retlw	101	;'e'
   268  0820  3420               	retlw	32	;' '
   269  0821  3453               	retlw	83	;'S'
   270  0822  3431               	retlw	49	;'1'
   271  0823  343A               	retlw	58	;':'
   272  0824  3425               	retlw	37	;'%'
   273  0825  3464               	retlw	100	;'d'
   274  0826  3400               	retlw	0
   275  0827                     STR_4:	
   276  0827  3441               	retlw	65	;'A'
   277  0828  346E               	retlw	110	;'n'
   278  0829  3467               	retlw	103	;'g'
   279  082A  3475               	retlw	117	;'u'
   280  082B  346C               	retlw	108	;'l'
   281  082C  3465               	retlw	101	;'e'
   282  082D  3420               	retlw	32	;' '
   283  082E  3453               	retlw	83	;'S'
   284  082F  3432               	retlw	50	;'2'
   285  0830  343A               	retlw	58	;':'
   286  0831  3425               	retlw	37	;'%'
   287  0832  3464               	retlw	100	;'d'
   288  0833  3400               	retlw	0
   289  0834                     STR_1:	
   290  0834  3443               	retlw	67	;'C'
   291  0835  346F               	retlw	111	;'o'
   292  0836  346E               	retlw	110	;'n'
   293  0837  3466               	retlw	102	;'f'
   294  0838  3469               	retlw	105	;'i'
   295  0839  3467               	retlw	103	;'g'
   296  083A  3475               	retlw	117	;'u'
   297  083B  3472               	retlw	114	;'r'
   298  083C  3461               	retlw	97	;'a'
   299  083D  346E               	retlw	110	;'n'
   300  083E  3464               	retlw	100	;'d'
   301  083F  346F               	retlw	111	;'o'
   302  0840  3400               	retlw	0
   303  0841                     STR_2:	
   304  0841  3453               	retlw	83	;'S'
   305  0842  3465               	retlw	101	;'e'
   306  0843  3472               	retlw	114	;'r'
   307  0844  3476               	retlw	118	;'v'
   308  0845  346F               	retlw	111	;'o'
   309  0846  3473               	retlw	115	;'s'
   310  0847  3400               	retlw	0
   311                           
   312                           ; #config settings
   313  0000                     
   314                           	psect	cinit
   315  07F5                     start_initialization:	
   316  07F5                     __initialization:	
   317                           
   318                           ; Clear objects allocated to BANK1
   319  07F5  1383               	bcf	3,7	;select IRP bank0
   320  07F6  30B5               	movlw	low __pbssBANK1
   321  07F7  0084               	movwf	4
   322  07F8  30C5               	movlw	low (__pbssBANK1+16)
   323  07F9  120A  158A  21B1   	fcall	clear_ram0
   324  07FC                     end_of_initialization:	
   325                           ;End of C runtime variable initialization code
   326                           
   327  07FC                     __end_of__initialization:	
   328  07FC  0183               	clrf	3
   329  07FD  120A  158A  2E8D   	ljmp	_main	;jump to C main() function
   330                           
   331                           	psect	bssBANK1
   332  00B5                     __pbssBANK1:	
   333  00B5                     _mensaje:	
   334  00B5                     	ds	16
   335                           
   336                           	psect	clrtext
   337  09B1                     clear_ram0:	
   338                           ;	Called with FSR containing the base address, and
   339                           ;	W with the last address+1
   340                           
   341  09B1  0064               	clrwdt	;clear the watchdog before getting into this loop
   342  09B2                     clrloop0:	
   343  09B2  0180               	clrf	0	;clear RAM location pointed to by FSR
   344  09B3  0A84               	incf	4,f	;increment pointer
   345  09B4  0604               	xorwf	4,w	;XOR with final address
   346  09B5  1903               	btfsc	3,2	;have we reached the end yet?
   347  09B6  3400               	retlw	0	;all done for this memory range, return
   348  09B7  0604               	xorwf	4,w	;XOR again to restore value
   349  09B8  29B2               	goto	clrloop0	;do the next byte
   350                           
   351                           	psect	cstackBANK1
   352  00A0                     __pcstackBANK1:	
   353  00A0                     ??___fltol:	
   354                           
   355                           ; 1 bytes @ 0x0
   356  00A0                     	ds	5
   357  00A5                     ??_setAngule1:	
   358  00A5                     ??_setAngule2:	
   359                           ; 1 bytes @ 0x5
   360                           
   361                           
   362                           ; 1 bytes @ 0x5
   363  00A5                     	ds	4
   364  00A9                     setAngule1@angule:	
   365  00A9                     setAngule2@angule:	
   366                           ; 1 bytes @ 0x9
   367                           
   368                           
   369                           ; 1 bytes @ 0x9
   370  00A9                     	ds	1
   371  00AA                     setAngule1@duty:	
   372  00AA                     setAngule2@duty:	
   373                           ; 2 bytes @ 0xA
   374                           
   375                           
   376                           ; 2 bytes @ 0xA
   377  00AA                     	ds	2
   378  00AC                     ??_main:	
   379                           
   380                           ; 1 bytes @ 0xC
   381  00AC                     	ds	3
   382  00AF                     main@servo1:	
   383                           
   384                           ; 2 bytes @ 0xF
   385  00AF                     	ds	2
   386  00B1                     main@angule1:	
   387                           
   388                           ; 1 bytes @ 0x11
   389  00B1                     	ds	1
   390  00B2                     main@angule2:	
   391                           
   392                           ; 1 bytes @ 0x12
   393  00B2                     	ds	1
   394  00B3                     main@servo2:	
   395                           
   396                           ; 2 bytes @ 0x13
   397  00B3                     	ds	2
   398                           
   399                           	psect	cstackCOMMON
   400  0070                     __pcstackCOMMON:	
   401  0070                     ?_setTMR2:	
   402  0070                     ??_setTMR2:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_lcdPort:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ??_lcdPort:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?_lcdCmd:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ?_lcdClear:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_lcdInit:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_lcdWriteChar:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_adcInit:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ??_adcInit:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_setPR2:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ??_setPR2:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_initServos:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_setAngule1:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ?_setAngule2:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     ?_main:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     ?__Umul8_16:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_adcRead:	
   451                           ; 2 bytes @ 0x0
   452                           
   453  0070                     ?___lwdiv:	
   454                           ; 2 bytes @ 0x0
   455                           
   456  0070                     ?___xxtofl:	
   457                           ; 2 bytes @ 0x0
   458                           
   459  0070                     lcdPort@a:	
   460                           ; 4 bytes @ 0x0
   461                           
   462  0070                     setTMR2@pwm:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     __Umul8_16@multiplicand:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0070                     adcRead@adcChannel:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0070                     ___lwdiv@divisor:	
   472                           ; 2 bytes @ 0x0
   473                           
   474  0070                     ___xxtofl@val:	
   475                           ; 2 bytes @ 0x0
   476                           
   477                           
   478                           ; 4 bytes @ 0x0
   479  0070                     	ds	1
   480  0071                     ??_lcdCmd:	
   481  0071                     ??_lcdWriteChar:	
   482                           ; 1 bytes @ 0x1
   483                           
   484  0071                     ??_initServos:	
   485                           ; 1 bytes @ 0x1
   486                           
   487                           
   488                           ; 1 bytes @ 0x1
   489  0071                     	ds	1
   490  0072                     ??__Umul8_16:	
   491  0072                     ??_adcRead:	
   492                           ; 1 bytes @ 0x2
   493                           
   494  0072                     lcdWriteChar@temp:	
   495                           ; 1 bytes @ 0x2
   496                           
   497  0072                     ___lwdiv@dividend:	
   498                           ; 1 bytes @ 0x2
   499                           
   500                           
   501                           ; 2 bytes @ 0x2
   502  0072                     	ds	1
   503  0073                     lcdCmd@a:	
   504  0073                     lcdWriteChar@y:	
   505                           ; 1 bytes @ 0x3
   506                           
   507                           
   508                           ; 1 bytes @ 0x3
   509  0073                     	ds	1
   510  0074                     ??_lcdClear:	
   511  0074                     ?_lcdSetCursor:	
   512                           ; 1 bytes @ 0x4
   513                           
   514  0074                     ??_lcdInit:	
   515                           ; 1 bytes @ 0x4
   516                           
   517  0074                     ??___lwdiv:	
   518                           ; 1 bytes @ 0x4
   519                           
   520  0074                     ??___xxtofl:	
   521                           ; 1 bytes @ 0x4
   522                           
   523  0074                     lcdSetCursor@b:	
   524                           ; 1 bytes @ 0x4
   525                           
   526  0074                     lcdWriteChar@a:	
   527                           ; 1 bytes @ 0x4
   528                           
   529  0074                     __Umul8_16@product:	
   530                           ; 1 bytes @ 0x4
   531                           
   532                           
   533                           ; 2 bytes @ 0x4
   534  0074                     	ds	1
   535  0075                     ??_lcdSetCursor:	
   536  0075                     ?_lcdPrint:	
   537                           ; 1 bytes @ 0x5
   538                           
   539  0075                     lcdPrint@a:	
   540                           ; 1 bytes @ 0x5
   541                           
   542  0075                     ___lwdiv@quotient:	
   543                           ; 2 bytes @ 0x5
   544                           
   545                           
   546                           ; 2 bytes @ 0x5
   547  0075                     	ds	1
   548  0076                     __Umul8_16@word_mpld:	
   549                           
   550                           ; 2 bytes @ 0x6
   551  0076                     	ds	1
   552  0077                     ??_lcdPrint:	
   553  0077                     lcdSetCursor@a:	
   554                           ; 1 bytes @ 0x7
   555                           
   556  0077                     ___lwdiv@counter:	
   557                           ; 1 bytes @ 0x7
   558                           
   559                           
   560                           ; 1 bytes @ 0x7
   561  0077                     	ds	1
   562  0078                     ?___lwmod:	
   563  0078                     lcdSetCursor@z:	
   564                           ; 2 bytes @ 0x8
   565                           
   566  0078                     ___xxtofl@sign:	
   567                           ; 1 bytes @ 0x8
   568                           
   569  0078                     __Umul8_16@multiplier:	
   570                           ; 1 bytes @ 0x8
   571                           
   572  0078                     ___lwmod@divisor:	
   573                           ; 1 bytes @ 0x8
   574                           
   575                           
   576                           ; 2 bytes @ 0x8
   577  0078                     	ds	1
   578  0079                     lcdSetCursor@y:	
   579  0079                     ___xxtofl@exp:	
   580                           ; 1 bytes @ 0x9
   581                           
   582                           
   583                           ; 1 bytes @ 0x9
   584  0079                     	ds	1
   585  007A                     lcdSetCursor@temp:	
   586  007A                     lcdPrint@i:	
   587                           ; 1 bytes @ 0xA
   588                           
   589  007A                     ___lwmod@dividend:	
   590                           ; 2 bytes @ 0xA
   591                           
   592  007A                     ___xxtofl@arg:	
   593                           ; 2 bytes @ 0xA
   594                           
   595                           
   596                           ; 4 bytes @ 0xA
   597  007A                     	ds	2
   598  007C                     ??___lwmod:	
   599                           
   600                           ; 1 bytes @ 0xC
   601  007C                     	ds	1
   602  007D                     ___lwmod@counter:	
   603                           
   604                           ; 1 bytes @ 0xD
   605  007D                     	ds	1
   606  007E                     ??_setDuty:	
   607                           
   608                           	psect	cstackBANK0
   609  0020                     __pcstackBANK0:	
   610                           ; 1 bytes @ 0xE
   611                           
   612  0020                     ?_sprintf:	
   613  0020                     ?___fldiv:	
   614                           ; 2 bytes @ 0x0
   615                           
   616  0020                     sprintf@f:	
   617                           ; 4 bytes @ 0x0
   618                           
   619  0020                     ___fldiv@a:	
   620                           ; 1 bytes @ 0x0
   621                           
   622                           
   623                           ; 4 bytes @ 0x0
   624  0020                     	ds	3
   625  0023                     ??_sprintf:	
   626                           
   627                           ; 1 bytes @ 0x3
   628  0023                     	ds	1
   629  0024                     ___fldiv@b:	
   630                           
   631                           ; 4 bytes @ 0x4
   632  0024                     	ds	2
   633  0026                     sprintf@ap:	
   634                           
   635                           ; 1 bytes @ 0x6
   636  0026                     	ds	1
   637  0027                     sprintf@flag:	
   638                           
   639                           ; 1 bytes @ 0x7
   640  0027                     	ds	1
   641  0028                     ??___fldiv:	
   642  0028                     sprintf@prec:	
   643                           ; 1 bytes @ 0x8
   644                           
   645                           
   646                           ; 1 bytes @ 0x8
   647  0028                     	ds	1
   648  0029                     sprintf@val:	
   649                           
   650                           ; 2 bytes @ 0x9
   651  0029                     	ds	2
   652  002B                     sprintf@sp:	
   653                           
   654                           ; 1 bytes @ 0xB
   655  002B                     	ds	1
   656  002C                     sprintf@c:	
   657                           
   658                           ; 1 bytes @ 0xC
   659  002C                     	ds	1
   660  002D                     ___fldiv@rem:	
   661                           
   662                           ; 4 bytes @ 0xD
   663  002D                     	ds	4
   664  0031                     ___fldiv@sign:	
   665                           
   666                           ; 1 bytes @ 0x11
   667  0031                     	ds	1
   668  0032                     ___fldiv@new_exp:	
   669                           
   670                           ; 2 bytes @ 0x12
   671  0032                     	ds	2
   672  0034                     ___fldiv@grs:	
   673                           
   674                           ; 4 bytes @ 0x14
   675  0034                     	ds	4
   676  0038                     ___fldiv@bexp:	
   677                           
   678                           ; 1 bytes @ 0x18
   679  0038                     	ds	1
   680  0039                     ___fldiv@aexp:	
   681                           
   682                           ; 1 bytes @ 0x19
   683  0039                     	ds	1
   684  003A                     ?___flmul:	
   685  003A                     ___flmul@b:	
   686                           ; 4 bytes @ 0x1A
   687                           
   688                           
   689                           ; 4 bytes @ 0x1A
   690  003A                     	ds	4
   691  003E                     ___flmul@a:	
   692                           
   693                           ; 4 bytes @ 0x1E
   694  003E                     	ds	4
   695  0042                     ??___flmul:	
   696                           
   697                           ; 1 bytes @ 0x22
   698  0042                     	ds	5
   699  0047                     ___flmul@sign:	
   700                           
   701                           ; 1 bytes @ 0x27
   702  0047                     	ds	1
   703  0048                     ___flmul@grs:	
   704                           
   705                           ; 4 bytes @ 0x28
   706  0048                     	ds	4
   707  004C                     ___flmul@aexp:	
   708                           
   709                           ; 1 bytes @ 0x2C
   710  004C                     	ds	1
   711  004D                     ___flmul@bexp:	
   712                           
   713                           ; 1 bytes @ 0x2D
   714  004D                     	ds	1
   715  004E                     ___flmul@prod:	
   716                           
   717                           ; 4 bytes @ 0x2E
   718  004E                     	ds	4
   719  0052                     ___flmul@temp:	
   720                           
   721                           ; 2 bytes @ 0x32
   722  0052                     	ds	2
   723  0054                     ?___fladd:	
   724  0054                     ___fladd@b:	
   725                           ; 4 bytes @ 0x34
   726                           
   727                           
   728                           ; 4 bytes @ 0x34
   729  0054                     	ds	4
   730  0058                     ___fladd@a:	
   731                           
   732                           ; 4 bytes @ 0x38
   733  0058                     	ds	4
   734  005C                     ??___fladd:	
   735                           
   736                           ; 1 bytes @ 0x3C
   737  005C                     	ds	8
   738  0064                     ___fladd@signs:	
   739                           
   740                           ; 1 bytes @ 0x44
   741  0064                     	ds	1
   742  0065                     ___fladd@aexp:	
   743                           
   744                           ; 1 bytes @ 0x45
   745  0065                     	ds	1
   746  0066                     ___fladd@bexp:	
   747                           
   748                           ; 1 bytes @ 0x46
   749  0066                     	ds	1
   750  0067                     ___fladd@grs:	
   751                           
   752                           ; 1 bytes @ 0x47
   753  0067                     	ds	1
   754  0068                     ?___fltol:	
   755  0068                     ___fltol@f1:	
   756                           ; 4 bytes @ 0x48
   757                           
   758                           
   759                           ; 4 bytes @ 0x48
   760  0068                     	ds	4
   761  006C                     ___fltol@sign1:	
   762                           
   763                           ; 1 bytes @ 0x4C
   764  006C                     	ds	1
   765  006D                     ___fltol@exp1:	
   766                           
   767                           ; 1 bytes @ 0x4D
   768  006D                     	ds	1
   769  006E                     ?_setDuty:	
   770  006E                     setDuty@duty:	
   771                           ; 2 bytes @ 0x4E
   772                           
   773                           
   774                           ; 2 bytes @ 0x4E
   775  006E                     	ds	2
   776                           
   777                           	psect	maintext
   778  0E8D                     __pmaintext:	
   779 ;;
   780 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   781 ;;
   782 ;; *************** function _main *****************
   783 ;; Defined at:
   784 ;;		line 8 in file "main.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;  angule2         1   18[BANK1 ] unsigned char 
   789 ;;  angule1         1   17[BANK1 ] unsigned char 
   790 ;;  servo2          2   19[BANK1 ] unsigned int 
   791 ;;  servo1          2   15[BANK1 ] unsigned int 
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      void 
   794 ;; Registers used:
   795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   796 ;; Tracked objects:
   797 ;;		On entry : B00/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   801 ;;      Params:         0       0       0       0       0
   802 ;;      Locals:         0       0       6       0       0
   803 ;;      Temps:          0       0       3       0       0
   804 ;;      Totals:         0       0       9       0       0
   805 ;;Total ram usage:        9 bytes
   806 ;; Hardware stack levels required when called:    4
   807 ;; This function calls:
   808 ;;		___flmul
   809 ;;		___fltol
   810 ;;		___xxtofl
   811 ;;		_adcInit
   812 ;;		_adcRead
   813 ;;		_initServos
   814 ;;		_lcdClear
   815 ;;		_lcdInit
   816 ;;		_lcdPrint
   817 ;;		_lcdSetCursor
   818 ;;		_setAngule1
   819 ;;		_setAngule2
   820 ;;		_sprintf
   821 ;; This function is called by:
   822 ;;		Startup code after reset
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           
   827                           ;psect for function _main
   828  0E8D                     _main:	
   829                           
   830                           ;main.c: 9:     lcdInit();
   831                           
   832                           ;incstack = 0
   833                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   834  0E8D  120A  158A  23C4  120A  158A  	fcall	_lcdInit
   835                           
   836                           ;main.c: 10:     adcInit();
   837  0E92  120A  158A  21C4  120A  158A  	fcall	_adcInit
   838                           
   839                           ;main.c: 11:     lcdClear();
   840  0E97  120A  158A  21B9  120A  158A  	fcall	_lcdClear
   841                           
   842                           ;main.c: 12:     lcdSetCursor(1, 1);
   843  0E9C  01F4               	clrf	lcdSetCursor@b
   844  0E9D  0AF4               	incf	lcdSetCursor@b,f
   845  0E9E  3001               	movlw	1
   846  0E9F  120A  158A  232A  120A  158A  	fcall	_lcdSetCursor
   847                           
   848                           ;main.c: 13:     lcdPrint("Configurando");
   849  0EA4  3025               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   850  0EA5  00F5               	movwf	lcdPrint@a
   851  0EA6  3080               	movlw	128
   852  0EA7  00F6               	movwf	lcdPrint@a+1
   853  0EA8  120A  158A  22ED  120A  158A  	fcall	_lcdPrint
   854                           
   855                           ;main.c: 14:     lcdSetCursor(2, 1);
   856  0EAD  01F4               	clrf	lcdSetCursor@b
   857  0EAE  0AF4               	incf	lcdSetCursor@b,f
   858  0EAF  3002               	movlw	2
   859  0EB0  120A  158A  232A  120A  158A  	fcall	_lcdSetCursor
   860                           
   861                           ;main.c: 15:     lcdPrint("Servos");
   862  0EB5  3032               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   863  0EB6  00F5               	movwf	lcdPrint@a
   864  0EB7  3080               	movlw	128
   865  0EB8  00F6               	movwf	lcdPrint@a+1
   866  0EB9  120A  158A  22ED  120A  158A  	fcall	_lcdPrint
   867                           
   868                           ;main.c: 16:     _delay((unsigned long)((500)*(4000000/4000.0)));
   869  0EBE  3003               	movlw	3
   870  0EBF  1683               	bsf	3,5	;RP0=1, select bank1
   871  0EC0  1303               	bcf	3,6	;RP1=0, select bank1
   872  0EC1  00AE               	movwf	(??_main^(0+128)+2)
   873  0EC2  308A               	movlw	138
   874  0EC3  00AD               	movwf	(??_main^(0+128)+1)
   875  0EC4  3055               	movlw	85
   876  0EC5  00AC               	movwf	??_main^(0+128)
   877  0EC6                     u3697:	
   878  0EC6  0BAC               	decfsz	??_main^(0+128),f
   879  0EC7  2EC6               	goto	u3697
   880  0EC8  0BAD               	decfsz	(??_main^(0+128)+1),f
   881  0EC9  2EC6               	goto	u3697
   882  0ECA  0BAE               	decfsz	(??_main^(0+128)+2),f
   883  0ECB  2EC6               	goto	u3697
   884                           
   885                           ;main.c: 18:     initServos();
   886  0ECC  120A  158A  21D4  120A  158A  	fcall	_initServos
   887                           
   888                           ;main.c: 19:     setAngule1(0);
   889  0ED1  3000               	movlw	0
   890  0ED2  120A  158A  24B2  120A  158A  	fcall	_setAngule1
   891                           
   892                           ;main.c: 21:     unsigned int servo1, servo2 = 0;
   893  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
   894  0ED8  1303               	bcf	3,6	;RP1=0, select bank1
   895  0ED9  01B3               	clrf	main@servo2^(0+128)
   896  0EDA  01B4               	clrf	(main@servo2+1)^(0+128)
   897  0EDB                     l2537:	
   898                           
   899                           ;main.c: 23:         lcdClear();
   900  0EDB  120A  158A  21B9  120A  158A  	fcall	_lcdClear
   901                           
   902                           ;main.c: 24:         servo1 = adcRead(0);
   903  0EE0  3000               	movlw	0
   904  0EE1  00F0               	movwf	adcRead@adcChannel
   905  0EE2  00F1               	movwf	adcRead@adcChannel+1
   906  0EE3  120A  158A  2235  120A  158A  	fcall	_adcRead
   907  0EE8  0871               	movf	?_adcRead+1,w
   908  0EE9  1683               	bsf	3,5	;RP0=1, select bank1
   909  0EEA  1303               	bcf	3,6	;RP1=0, select bank1
   910  0EEB  00B0               	movwf	(main@servo1+1)^(0+128)
   911  0EEC  0870               	movf	?_adcRead,w
   912  0EED  00AF               	movwf	main@servo1^(0+128)
   913                           
   914                           ;main.c: 25:         unsigned char angule1 = servo1 * 0.175953079;
   915  0EEE  082F               	movf	main@servo1^(0+128),w
   916  0EEF  00F0               	movwf	___xxtofl@val
   917  0EF0  0830               	movf	(main@servo1+1)^(0+128),w
   918  0EF1  00F1               	movwf	___xxtofl@val+1
   919  0EF2  01F2               	clrf	___xxtofl@val+2
   920  0EF3  01F3               	clrf	___xxtofl@val+3
   921  0EF4  3000               	movlw	0
   922  0EF5  120A  158A  25EA  120A  158A  	fcall	___xxtofl
   923  0EFA  0873               	movf	?___xxtofl+3,w
   924  0EFB  1283               	bcf	3,5	;RP0=0, select bank0
   925  0EFC  1303               	bcf	3,6	;RP1=0, select bank0
   926  0EFD  00C1               	movwf	___flmul@a+3
   927  0EFE  0872               	movf	?___xxtofl+2,w
   928  0EFF  00C0               	movwf	___flmul@a+2
   929  0F00  0871               	movf	?___xxtofl+1,w
   930  0F01  00BF               	movwf	___flmul@a+1
   931  0F02  0870               	movf	?___xxtofl,w
   932  0F03  00BE               	movwf	___flmul@a
   933  0F04  303E               	movlw	62
   934  0F05  00BD               	movwf	___flmul@b+3
   935  0F06  3034               	movlw	52
   936  0F07  00BC               	movwf	___flmul@b+2
   937  0F08  302D               	movlw	45
   938  0F09  00BB               	movwf	___flmul@b+1
   939  0F0A  300B               	movlw	11
   940  0F0B  00BA               	movwf	___flmul@b
   941  0F0C  120A  118A  24E0  120A  158A  	fcall	___flmul
   942  0F11  1283               	bcf	3,5	;RP0=0, select bank0
   943  0F12  1303               	bcf	3,6	;RP1=0, select bank0
   944  0F13  083D               	movf	?___flmul+3,w
   945  0F14  00EB               	movwf	___fltol@f1+3
   946  0F15  083C               	movf	?___flmul+2,w
   947  0F16  00EA               	movwf	___fltol@f1+2
   948  0F17  083B               	movf	?___flmul+1,w
   949  0F18  00E9               	movwf	___fltol@f1+1
   950  0F19  083A               	movf	?___flmul,w
   951  0F1A  00E8               	movwf	___fltol@f1
   952  0F1B  120A  158A  2425  120A  158A  	fcall	___fltol
   953  0F20  1283               	bcf	3,5	;RP0=0, select bank0
   954  0F21  1303               	bcf	3,6	;RP1=0, select bank0
   955  0F22  0868               	movf	?___fltol,w
   956  0F23  1683               	bsf	3,5	;RP0=1, select bank1
   957  0F24  1303               	bcf	3,6	;RP1=0, select bank1
   958  0F25  00AC               	movwf	??_main^(0+128)
   959  0F26  082C               	movf	??_main^(0+128),w
   960  0F27  00B1               	movwf	main@angule1^(0+128)
   961                           
   962                           ;main.c: 26:         setAngule1(angule1);
   963  0F28  0831               	movf	main@angule1^(0+128),w
   964  0F29  120A  158A  24B2  120A  158A  	fcall	_setAngule1
   965                           
   966                           ;main.c: 28:         sprintf(mensaje, "Angule S1:%d", angule1);
   967  0F2E  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   968  0F2F  1683               	bsf	3,5	;RP0=1, select bank1
   969  0F30  1303               	bcf	3,6	;RP1=0, select bank1
   970  0F31  00AC               	movwf	??_main^(0+128)
   971  0F32  082C               	movf	??_main^(0+128),w
   972  0F33  1283               	bcf	3,5	;RP0=0, select bank0
   973  0F34  1303               	bcf	3,6	;RP1=0, select bank0
   974  0F35  00A0               	movwf	sprintf@f
   975  0F36  1683               	bsf	3,5	;RP0=1, select bank1
   976  0F37  1303               	bcf	3,6	;RP1=0, select bank1
   977  0F38  0831               	movf	main@angule1^(0+128),w
   978  0F39  00AD               	movwf	(??_main+1)^(0+128)
   979  0F3A  01AE               	clrf	((??_main+1)^(0+128)+1)
   980  0F3B  082D               	movf	(??_main+1)^(0+128),w
   981  0F3C  1283               	bcf	3,5	;RP0=0, select bank0
   982  0F3D  1303               	bcf	3,6	;RP1=0, select bank0
   983  0F3E  00A1               	movwf	?_sprintf+1
   984  0F3F  1683               	bsf	3,5	;RP0=1, select bank1
   985  0F40  1303               	bcf	3,6	;RP1=0, select bank1
   986  0F41  082E               	movf	(??_main+2)^(0+128),w
   987  0F42  1283               	bcf	3,5	;RP0=0, select bank0
   988  0F43  1303               	bcf	3,6	;RP1=0, select bank0
   989  0F44  00A2               	movwf	?_sprintf+2
   990  0F45  30B5               	movlw	(low (_mensaje| 0))& (0+255)
   991  0F46  120A  118A  2036  120A  158A  	fcall	_sprintf
   992                           
   993                           ;main.c: 29:         lcdSetCursor(1, 1);
   994  0F4B  01F4               	clrf	lcdSetCursor@b
   995  0F4C  0AF4               	incf	lcdSetCursor@b,f
   996  0F4D  3001               	movlw	1
   997  0F4E  120A  158A  232A  120A  158A  	fcall	_lcdSetCursor
   998                           
   999                           ;main.c: 30:         lcdPrint(mensaje);
  1000  0F53  30B5               	movlw	(low (_mensaje| 0))& (0+255)
  1001  0F54  00F5               	movwf	lcdPrint@a
  1002  0F55  3000               	movlw	0
  1003  0F56  00F6               	movwf	lcdPrint@a+1
  1004  0F57  120A  158A  22ED  120A  158A  	fcall	_lcdPrint
  1005                           
  1006                           ;main.c: 32:         if (RB0 == 1) {
  1007  0F5C  1283               	bcf	3,5	;RP0=0, select bank0
  1008  0F5D  1303               	bcf	3,6	;RP1=0, select bank0
  1009  0F5E  1C06               	btfss	6,0	;volatile
  1010  0F5F  2F70               	goto	l142
  1011                           
  1012                           ;main.c: 33:             if (servo2 < 1024)
  1013  0F60  3004               	movlw	4
  1014  0F61  1683               	bsf	3,5	;RP0=1, select bank1
  1015  0F62  1303               	bcf	3,6	;RP1=0, select bank1
  1016  0F63  0234               	subwf	(main@servo2+1)^(0+128),w
  1017  0F64  3000               	movlw	0
  1018  0F65  1903               	skipnz
  1019  0F66  0233               	subwf	main@servo2^(0+128),w
  1020  0F67  1803               	skipnc
  1021  0F68  2F84               	goto	l144
  1022                           
  1023                           ;main.c: 34:                 setAngule2(++servo2);
  1024  0F69  3001               	movlw	1
  1025  0F6A  07B3               	addwf	main@servo2^(0+128),f
  1026  0F6B  1803               	skipnc
  1027  0F6C  0AB4               	incf	(main@servo2+1)^(0+128),f
  1028  0F6D  3000               	movlw	0
  1029  0F6E  07B4               	addwf	(main@servo2+1)^(0+128),f
  1030  0F6F  2F7E               	goto	L1
  1031  0F70                     l142:	
  1032  0F70  1C86               	btfss	6,1	;volatile
  1033  0F71  2F84               	goto	l144
  1034                           
  1035                           ;main.c: 36:             if (servo2 > 0)
  1036  0F72  1683               	bsf	3,5	;RP0=1, select bank1
  1037  0F73  1303               	bcf	3,6	;RP1=0, select bank1
  1038  0F74  0833               	movf	main@servo2^(0+128),w
  1039  0F75  0434               	iorwf	(main@servo2+1)^(0+128),w
  1040  0F76  1903               	btfsc	3,2
  1041  0F77  2F84               	goto	l144
  1042                           
  1043                           ;main.c: 37:                 setAngule2(--servo2);
  1044  0F78  3001               	movlw	1
  1045  0F79  02B3               	subwf	main@servo2^(0+128),f
  1046  0F7A  3000               	movlw	0
  1047  0F7B  1C03               	skipc
  1048  0F7C  03B4               	decf	(main@servo2+1)^(0+128),f
  1049  0F7D  02B4               	subwf	(main@servo2+1)^(0+128),f
  1050  0F7E                     L1:	
  1051  0F7E  0833               	movf	main@servo2^(0+128),w
  1052  0F7F  120A  158A  254E  120A  158A  	fcall	_setAngule2
  1053  0F84                     l144:	
  1054                           
  1055                           ;main.c: 39:         unsigned char angule2 = servo2 * 0.175953079;
  1056  0F84  1683               	bsf	3,5	;RP0=1, select bank1
  1057  0F85  1303               	bcf	3,6	;RP1=0, select bank1
  1058  0F86  0833               	movf	main@servo2^(0+128),w
  1059  0F87  00F0               	movwf	___xxtofl@val
  1060  0F88  0834               	movf	(main@servo2+1)^(0+128),w
  1061  0F89  00F1               	movwf	___xxtofl@val+1
  1062  0F8A  01F2               	clrf	___xxtofl@val+2
  1063  0F8B  01F3               	clrf	___xxtofl@val+3
  1064  0F8C  3000               	movlw	0
  1065  0F8D  120A  158A  25EA  120A  158A  	fcall	___xxtofl
  1066  0F92  0873               	movf	?___xxtofl+3,w
  1067  0F93  1283               	bcf	3,5	;RP0=0, select bank0
  1068  0F94  1303               	bcf	3,6	;RP1=0, select bank0
  1069  0F95  00C1               	movwf	___flmul@a+3
  1070  0F96  0872               	movf	?___xxtofl+2,w
  1071  0F97  00C0               	movwf	___flmul@a+2
  1072  0F98  0871               	movf	?___xxtofl+1,w
  1073  0F99  00BF               	movwf	___flmul@a+1
  1074  0F9A  0870               	movf	?___xxtofl,w
  1075  0F9B  00BE               	movwf	___flmul@a
  1076  0F9C  303E               	movlw	62
  1077  0F9D  00BD               	movwf	___flmul@b+3
  1078  0F9E  3034               	movlw	52
  1079  0F9F  00BC               	movwf	___flmul@b+2
  1080  0FA0  302D               	movlw	45
  1081  0FA1  00BB               	movwf	___flmul@b+1
  1082  0FA2  300B               	movlw	11
  1083  0FA3  00BA               	movwf	___flmul@b
  1084  0FA4  120A  118A  24E0  120A  158A  	fcall	___flmul
  1085  0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0FAA  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0FAB  083D               	movf	?___flmul+3,w
  1088  0FAC  00EB               	movwf	___fltol@f1+3
  1089  0FAD  083C               	movf	?___flmul+2,w
  1090  0FAE  00EA               	movwf	___fltol@f1+2
  1091  0FAF  083B               	movf	?___flmul+1,w
  1092  0FB0  00E9               	movwf	___fltol@f1+1
  1093  0FB1  083A               	movf	?___flmul,w
  1094  0FB2  00E8               	movwf	___fltol@f1
  1095  0FB3  120A  158A  2425  120A  158A  	fcall	___fltol
  1096  0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  1097  0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  1098  0FBA  0868               	movf	?___fltol,w
  1099  0FBB  1683               	bsf	3,5	;RP0=1, select bank1
  1100  0FBC  1303               	bcf	3,6	;RP1=0, select bank1
  1101  0FBD  00AC               	movwf	??_main^(0+128)
  1102  0FBE  082C               	movf	??_main^(0+128),w
  1103  0FBF  00B2               	movwf	main@angule2^(0+128)
  1104                           
  1105                           ;main.c: 40:         setAngule2(angule2);
  1106  0FC0  0832               	movf	main@angule2^(0+128),w
  1107  0FC1  120A  158A  254E  120A  158A  	fcall	_setAngule2
  1108                           
  1109                           ;main.c: 41:         sprintf(mensaje, "Angule S2:%d", angule2);
  1110  0FC6  3018               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1111  0FC7  1683               	bsf	3,5	;RP0=1, select bank1
  1112  0FC8  1303               	bcf	3,6	;RP1=0, select bank1
  1113  0FC9  00AC               	movwf	??_main^(0+128)
  1114  0FCA  082C               	movf	??_main^(0+128),w
  1115  0FCB  1283               	bcf	3,5	;RP0=0, select bank0
  1116  0FCC  1303               	bcf	3,6	;RP1=0, select bank0
  1117  0FCD  00A0               	movwf	sprintf@f
  1118  0FCE  1683               	bsf	3,5	;RP0=1, select bank1
  1119  0FCF  1303               	bcf	3,6	;RP1=0, select bank1
  1120  0FD0  0832               	movf	main@angule2^(0+128),w
  1121  0FD1  00AD               	movwf	(??_main+1)^(0+128)
  1122  0FD2  01AE               	clrf	((??_main+1)^(0+128)+1)
  1123  0FD3  082D               	movf	(??_main+1)^(0+128),w
  1124  0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  1125  0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  1126  0FD6  00A1               	movwf	?_sprintf+1
  1127  0FD7  1683               	bsf	3,5	;RP0=1, select bank1
  1128  0FD8  1303               	bcf	3,6	;RP1=0, select bank1
  1129  0FD9  082E               	movf	(??_main+2)^(0+128),w
  1130  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  1131  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  1132  0FDC  00A2               	movwf	?_sprintf+2
  1133  0FDD  30B5               	movlw	(low (_mensaje| 0))& (0+255)
  1134  0FDE  120A  118A  2036  120A  158A  	fcall	_sprintf
  1135                           
  1136                           ;main.c: 42:         lcdSetCursor(2, 1);
  1137  0FE3  01F4               	clrf	lcdSetCursor@b
  1138  0FE4  0AF4               	incf	lcdSetCursor@b,f
  1139  0FE5  3002               	movlw	2
  1140  0FE6  120A  158A  232A  120A  158A  	fcall	_lcdSetCursor
  1141                           
  1142                           ;main.c: 43:         lcdPrint(mensaje);
  1143  0FEB  30B5               	movlw	(low (_mensaje| 0))& (0+255)
  1144  0FEC  00F5               	movwf	lcdPrint@a
  1145  0FED  3000               	movlw	0
  1146  0FEE  00F6               	movwf	lcdPrint@a+1
  1147  0FEF  120A  158A  22ED  120A  158A  	fcall	_lcdPrint
  1148                           
  1149                           ;main.c: 45:         _delay((unsigned long)((50)*(4000000/4000.0)));
  1150  0FF4  3041               	movlw	65
  1151  0FF5  1683               	bsf	3,5	;RP0=1, select bank1
  1152  0FF6  1303               	bcf	3,6	;RP1=0, select bank1
  1153  0FF7  00AD               	movwf	(??_main^(0+128)+1)
  1154  0FF8  30ED               	movlw	237
  1155  0FF9  00AC               	movwf	??_main^(0+128)
  1156  0FFA                     u3707:	
  1157  0FFA  0BAC               	decfsz	??_main^(0+128),f
  1158  0FFB  2FFA               	goto	u3707
  1159  0FFC  0BAD               	decfsz	(??_main^(0+128)+1),f
  1160  0FFD  2FFA               	goto	u3707
  1161  0FFE  2FFF               	nop2
  1162  0FFF  2EDB               	goto	l2537
  1163  1000                     __end_of_main:	
  1164                           
  1165                           	psect	text1
  1166  0036                     __ptext1:	
  1167 ;; *************** function _sprintf *****************
  1168 ;; Defined at:
  1169 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;  sp              1    wreg     PTR unsigned char 
  1172 ;;		 -> mensaje(16), 
  1173 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1174 ;;		 -> STR_4(13), STR_3(13), 
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1177 ;;		 -> mensaje(16), 
  1178 ;;  tmpval          4    0        struct .
  1179 ;;  val             2    9[BANK0 ] unsigned int 
  1180 ;;  cp              2    0        PTR const unsigned char 
  1181 ;;  len             2    0        unsigned int 
  1182 ;;  c               1   12[BANK0 ] unsigned char 
  1183 ;;  prec            1    8[BANK0 ] char 
  1184 ;;  flag            1    7[BANK0 ] unsigned char 
  1185 ;;  ap              1    6[BANK0 ] PTR void [1]
  1186 ;;		 -> ?_sprintf(2), 
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  2    0[BANK0 ] int 
  1189 ;; Registers used:
  1190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1196 ;;      Params:         0       3       0       0       0
  1197 ;;      Locals:         0       7       0       0       0
  1198 ;;      Temps:          0       3       0       0       0
  1199 ;;      Totals:         0      13       0       0       0
  1200 ;;Total ram usage:       13 bytes
  1201 ;; Hardware stack levels used:    1
  1202 ;; Hardware stack levels required when called:    1
  1203 ;; This function calls:
  1204 ;;		___lwdiv
  1205 ;;		___lwmod
  1206 ;; This function is called by:
  1207 ;;		_main
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           
  1212                           ;psect for function _sprintf
  1213  0036                     _sprintf:	
  1214                           
  1215                           ;incstack = 0
  1216                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1217                           ;sprintf@sp stored from wreg
  1218  0036  1283               	bcf	3,5	;RP0=0, select bank0
  1219  0037  1303               	bcf	3,6	;RP1=0, select bank0
  1220  0038  00AB               	movwf	sprintf@sp
  1221                           
  1222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .05\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  1223  0039  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1224  003A  00A3               	movwf	??_sprintf
  1225  003B  0823               	movf	??_sprintf,w
  1226  003C  00A6               	movwf	sprintf@ap
  1227  003D                     l2513:	
  1228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1229                           
  1230                           
  1231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1232  003D  3001               	movlw	1
  1233  003E  07A0               	addwf	sprintf@f,f
  1234  003F  30FF               	movlw	-1
  1235  0040  0720               	addwf	sprintf@f,w
  1236  0041  0084               	movwf	4
  1237  0042  120A  158A  200A  120A  118A  	fcall	stringdir
  1238  0047  00A3               	movwf	??_sprintf
  1239  0048  0823               	movf	??_sprintf,w
  1240  0049  00AC               	movwf	sprintf@c
  1241  004A  082C               	movf	sprintf@c,w
  1242  004B  1903               	btfsc	3,2
  1243  004C  2909               	goto	l2515
  1244                           
  1245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  1246  004D  3025               	movlw	37
  1247  004E  062C               	xorwf	sprintf@c,w
  1248  004F  1903               	btfsc	3,2
  1249  0050  285D               	goto	l2469
  1250                           
  1251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  1252  0051  082C               	movf	sprintf@c,w
  1253  0052  00A3               	movwf	??_sprintf
  1254  0053  082B               	movf	sprintf@sp,w
  1255  0054  0084               	movwf	4
  1256  0055  0823               	movf	??_sprintf,w
  1257  0056  1383               	bcf	3,7	;select IRP bank0
  1258  0057  0080               	movwf	0
  1259  0058  3001               	movlw	1
  1260  0059  00A3               	movwf	??_sprintf
  1261  005A  0823               	movf	??_sprintf,w
  1262  005B  07AB               	addwf	sprintf@sp,f
  1263                           
  1264                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  1265  005C  283D               	goto	l2513
  1266  005D                     l2469:	
  1267                           
  1268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  1269  005D  01A7               	clrf	sprintf@flag
  1270                           
  1271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 654:   swit
      +                          ch(c = *f++) {
  1272  005E  3001               	movlw	1
  1273  005F  07A0               	addwf	sprintf@f,f
  1274  0060  30FF               	movlw	-1
  1275  0061  0720               	addwf	sprintf@f,w
  1276  0062  0084               	movwf	4
  1277  0063  120A  158A  200A  120A  118A  	fcall	stringdir
  1278  0068  00AC               	movwf	sprintf@c
  1279  0069  00A3               	movwf	??_sprintf
  1280  006A  01A4               	clrf	??_sprintf+1
  1281                           
  1282                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1283                           ; Switch size 1, requested type "simple"
  1284                           ; Number of cases is 1, Range of values is 0 to 0
  1285                           ; switch strategies available:
  1286                           ; Name         Instructions Cycles
  1287                           ; simple_byte            4     3 (average)
  1288                           ; direct_byte           11     8 (fixed)
  1289                           ; jumptable            260     6 (fixed)
  1290                           ;	Chosen strategy is simple_byte
  1291  006B  0824               	movf	??_sprintf+1,w
  1292  006C  3A00               	xorlw	0	; case 0
  1293  006D  1903               	skipnz
  1294  006E  2870               	goto	l2589
  1295  006F  283D               	goto	l2513
  1296  0070                     l2589:	
  1297                           
  1298                           ; Switch size 1, requested type "simple"
  1299                           ; Number of cases is 3, Range of values is 0 to 105
  1300                           ; switch strategies available:
  1301                           ; Name         Instructions Cycles
  1302                           ; simple_byte           10     6 (average)
  1303                           ; jumptable            260     6 (fixed)
  1304                           ;	Chosen strategy is simple_byte
  1305  0070  0823               	movf	??_sprintf,w
  1306  0071  3A00               	xorlw	0	; case 0
  1307  0072  1903               	skipnz
  1308  0073  2909               	goto	l2515
  1309  0074  3A64               	xorlw	100	; case 100
  1310  0075  1903               	skipnz
  1311  0076  287B               	goto	l2475
  1312  0077  3A0D               	xorlw	13	; case 105
  1313  0078  1903               	skipnz
  1314  0079  287B               	goto	l2475
  1315  007A  283D               	goto	l2513
  1316  007B                     l2475:	
  1317                           
  1318                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1319  007B  0826               	movf	sprintf@ap,w
  1320  007C  0084               	movwf	4
  1321  007D  1383               	bcf	3,7	;select IRP bank0
  1322  007E  0800               	movf	0,w
  1323  007F  00A9               	movwf	sprintf@val
  1324  0080  0A84               	incf	4,f
  1325  0081  0800               	movf	0,w
  1326  0082  00AA               	movwf	sprintf@val+1
  1327  0083  3002               	movlw	2
  1328  0084  00A3               	movwf	??_sprintf
  1329  0085  0823               	movf	??_sprintf,w
  1330  0086  07A6               	addwf	sprintf@ap,f
  1331                           
  1332                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((int)val < 0) {
  1333  0087  1FAA               	btfss	sprintf@val+1,7
  1334  0088  2892               	goto	l2485
  1335                           
  1336                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  1337  0089  3003               	movlw	3
  1338  008A  00A3               	movwf	??_sprintf
  1339  008B  0823               	movf	??_sprintf,w
  1340  008C  04A7               	iorwf	sprintf@flag,f
  1341                           
  1342                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  1343  008D  09A9               	comf	sprintf@val,f
  1344  008E  09AA               	comf	sprintf@val+1,f
  1345  008F  0AA9               	incf	sprintf@val,f
  1346  0090  1903               	skipnz
  1347  0091  0AAA               	incf	sprintf@val+1,f
  1348  0092                     l2485:	
  1349                           
  1350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1351  0092  01AC               	clrf	sprintf@c
  1352  0093  0AAC               	incf	sprintf@c,f
  1353  0094                     l2491:	
  1354                           
  1355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  1356  0094  082C               	movf	sprintf@c,w
  1357  0095  00A3               	movwf	??_sprintf
  1358  0096  0723               	addwf	??_sprintf,w
  1359  0097  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1360  0098  0084               	movwf	4
  1361  0099  120A  158A  200A  120A  118A  	fcall	stringdir
  1362  009E  00A4               	movwf	??_sprintf+1
  1363  009F  120A  158A  200A  120A  118A  	fcall	stringdir
  1364  00A4  00A5               	movwf	??_sprintf+2
  1365  00A5  0825               	movf	??_sprintf+2,w
  1366  00A6  022A               	subwf	sprintf@val+1,w
  1367  00A7  1D03               	skipz
  1368  00A8  28AB               	goto	u3605
  1369  00A9  0824               	movf	??_sprintf+1,w
  1370  00AA  0229               	subwf	sprintf@val,w
  1371  00AB                     u3605:	
  1372  00AB  1C03               	btfss	3,0
  1373  00AC  28B5               	goto	l2497
  1374  00AD  3001               	movlw	1
  1375  00AE  00A3               	movwf	??_sprintf
  1376  00AF  0823               	movf	??_sprintf,w
  1377  00B0  07AC               	addwf	sprintf@c,f
  1378  00B1  3005               	movlw	5
  1379  00B2  062C               	xorwf	sprintf@c,w
  1380  00B3  1D03               	btfss	3,2
  1381  00B4  2894               	goto	l2491
  1382  00B5                     l2497:	
  1383                           
  1384                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  1385  00B5  0827               	movf	sprintf@flag,w
  1386  00B6  3903               	andlw	3
  1387  00B7  1903               	btfsc	3,2
  1388  00B8  28C4               	goto	l2503
  1389                           
  1390                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  1391  00B9  302D               	movlw	45
  1392  00BA  00A3               	movwf	??_sprintf
  1393  00BB  082B               	movf	sprintf@sp,w
  1394  00BC  0084               	movwf	4
  1395  00BD  0823               	movf	??_sprintf,w
  1396  00BE  1383               	bcf	3,7	;select IRP bank0
  1397  00BF  0080               	movwf	0
  1398  00C0  3001               	movlw	1
  1399  00C1  00A3               	movwf	??_sprintf
  1400  00C2  0823               	movf	??_sprintf,w
  1401  00C3  07AB               	addwf	sprintf@sp,f
  1402  00C4                     l2503:	
  1403                           
  1404                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1488:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1491:   prec 
      +                          = c;
  1405  00C4  082C               	movf	sprintf@c,w
  1406  00C5  00A3               	movwf	??_sprintf
  1407  00C6  0823               	movf	??_sprintf,w
  1408  00C7  00A8               	movwf	sprintf@prec
  1409  00C8                     l2511:	
  1410                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  1411                           
  1412                           
  1413                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  1414  00C8  30FF               	movlw	255
  1415  00C9  00A3               	movwf	??_sprintf
  1416  00CA  0823               	movf	??_sprintf,w
  1417  00CB  07A8               	addwf	sprintf@prec,f
  1418  00CC  0A28               	incf	sprintf@prec,w
  1419  00CD  1903               	btfsc	3,2
  1420  00CE  283D               	goto	l2513
  1421                           
  1422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  1423  00CF  300A               	movlw	10
  1424  00D0  00F8               	movwf	___lwmod@divisor
  1425  00D1  3000               	movlw	0
  1426  00D2  00F9               	movwf	___lwmod@divisor+1
  1427  00D3  0828               	movf	sprintf@prec,w
  1428  00D4  00A3               	movwf	??_sprintf
  1429  00D5  0723               	addwf	??_sprintf,w
  1430  00D6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1431  00D7  0084               	movwf	4
  1432  00D8  120A  158A  200A  120A  118A  	fcall	stringdir
  1433  00DD  00F0               	movwf	___lwdiv@divisor
  1434  00DE  120A  158A  200A  120A  118A  	fcall	stringdir
  1435  00E3  00F1               	movwf	___lwdiv@divisor+1
  1436  00E4  082A               	movf	sprintf@val+1,w
  1437  00E5  00F3               	movwf	___lwdiv@dividend+1
  1438  00E6  0829               	movf	sprintf@val,w
  1439  00E7  00F2               	movwf	___lwdiv@dividend
  1440  00E8  120A  158A  22B1  120A  118A  	fcall	___lwdiv
  1441  00ED  0871               	movf	?___lwdiv+1,w
  1442  00EE  00FB               	movwf	___lwmod@dividend+1
  1443  00EF  0870               	movf	?___lwdiv,w
  1444  00F0  00FA               	movwf	___lwmod@dividend
  1445  00F1  120A  118A  2004  120A  118A  	fcall	___lwmod
  1446  00F6  0878               	movf	?___lwmod,w
  1447  00F7  3E30               	addlw	48
  1448  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1449  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1450  00FA  00A4               	movwf	??_sprintf+1
  1451  00FB  0824               	movf	??_sprintf+1,w
  1452  00FC  00AC               	movwf	sprintf@c
  1453                           
  1454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  1455  00FD  082C               	movf	sprintf@c,w
  1456  00FE  00A3               	movwf	??_sprintf
  1457  00FF  082B               	movf	sprintf@sp,w
  1458  0100  0084               	movwf	4
  1459  0101  0823               	movf	??_sprintf,w
  1460  0102  1383               	bcf	3,7	;select IRP bank0
  1461  0103  0080               	movwf	0
  1462  0104  3001               	movlw	1
  1463  0105  00A3               	movwf	??_sprintf
  1464  0106  0823               	movf	??_sprintf,w
  1465  0107  07AB               	addwf	sprintf@sp,f
  1466  0108  28C8               	goto	l2511
  1467  0109                     l2515:	
  1468                           
  1469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  1470  0109  082B               	movf	sprintf@sp,w
  1471  010A  0084               	movwf	4
  1472  010B  1383               	bcf	3,7	;select IRP bank0
  1473  010C  0180               	clrf	0
  1474  010D  0008               	return
  1475  010E                     __end_of_sprintf:	
  1476                           
  1477                           	psect	text2
  1478  0004                     __ptext2:	
  1479 ;; *************** function ___lwmod *****************
  1480 ;; Defined at:
  1481 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;  divisor         2    8[COMMON] unsigned int 
  1484 ;;  dividend        2   10[COMMON] unsigned int 
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;  counter         1   13[COMMON] unsigned char 
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  2    8[COMMON] unsigned int 
  1489 ;; Registers used:
  1490 ;;		wreg, status,2, status,0
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1496 ;;      Params:         4       0       0       0       0
  1497 ;;      Locals:         1       0       0       0       0
  1498 ;;      Temps:          1       0       0       0       0
  1499 ;;      Totals:         6       0       0       0       0
  1500 ;;Total ram usage:        6 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; This function calls:
  1503 ;;		Nothing
  1504 ;; This function is called by:
  1505 ;;		_sprintf
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           
  1510                           ;psect for function ___lwmod
  1511  0004                     ___lwmod:	
  1512                           
  1513                           ;incstack = 0
  1514                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1515  0004  0878               	movf	___lwmod@divisor,w
  1516  0005  0479               	iorwf	___lwmod@divisor+1,w
  1517  0006  1903               	btfsc	3,2
  1518  0007  2831               	goto	l2153
  1519  0008  01FD               	clrf	___lwmod@counter
  1520  0009  0AFD               	incf	___lwmod@counter,f
  1521  000A                     l2143:	
  1522  000A  1BF9               	btfsc	___lwmod@divisor+1,7
  1523  000B  2818               	goto	l2145
  1524  000C  3001               	movlw	1
  1525  000D                     u2935:	
  1526  000D  1003               	clrc
  1527  000E  0DF8               	rlf	___lwmod@divisor,f
  1528  000F  0DF9               	rlf	___lwmod@divisor+1,f
  1529  0010  3EFF               	addlw	-1
  1530  0011  1D03               	skipz
  1531  0012  280D               	goto	u2935
  1532  0013  3001               	movlw	1
  1533  0014  00FC               	movwf	??___lwmod
  1534  0015  087C               	movf	??___lwmod,w
  1535  0016  07FD               	addwf	___lwmod@counter,f
  1536  0017  280A               	goto	l2143
  1537  0018                     l2145:	
  1538  0018  0879               	movf	___lwmod@divisor+1,w
  1539  0019  027B               	subwf	___lwmod@dividend+1,w
  1540  001A  1D03               	skipz
  1541  001B  281E               	goto	u2955
  1542  001C  0878               	movf	___lwmod@divisor,w
  1543  001D  027A               	subwf	___lwmod@dividend,w
  1544  001E                     u2955:	
  1545  001E  1C03               	skipc
  1546  001F  2826               	goto	l2149
  1547  0020  0878               	movf	___lwmod@divisor,w
  1548  0021  02FA               	subwf	___lwmod@dividend,f
  1549  0022  0879               	movf	___lwmod@divisor+1,w
  1550  0023  1C03               	skipc
  1551  0024  03FB               	decf	___lwmod@dividend+1,f
  1552  0025  02FB               	subwf	___lwmod@dividend+1,f
  1553  0026                     l2149:	
  1554  0026  3001               	movlw	1
  1555  0027                     u2965:	
  1556  0027  1003               	clrc
  1557  0028  0CF9               	rrf	___lwmod@divisor+1,f
  1558  0029  0CF8               	rrf	___lwmod@divisor,f
  1559  002A  3EFF               	addlw	-1
  1560  002B  1D03               	skipz
  1561  002C  2827               	goto	u2965
  1562  002D  3001               	movlw	1
  1563  002E  02FD               	subwf	___lwmod@counter,f
  1564  002F  1D03               	btfss	3,2
  1565  0030  2818               	goto	l2145
  1566  0031                     l2153:	
  1567  0031  087B               	movf	___lwmod@dividend+1,w
  1568  0032  00F9               	movwf	?___lwmod+1
  1569  0033  087A               	movf	___lwmod@dividend,w
  1570  0034  00F8               	movwf	?___lwmod
  1571  0035  0008               	return
  1572  0036                     __end_of___lwmod:	
  1573                           
  1574                           	psect	text3
  1575  0AB1                     __ptext3:	
  1576 ;; *************** function ___lwdiv *****************
  1577 ;; Defined at:
  1578 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;  divisor         2    0[COMMON] unsigned int 
  1581 ;;  dividend        2    2[COMMON] unsigned int 
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;  quotient        2    5[COMMON] unsigned int 
  1584 ;;  counter         1    7[COMMON] unsigned char 
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  2    0[COMMON] unsigned int 
  1587 ;; Registers used:
  1588 ;;		wreg, status,2, status,0
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1594 ;;      Params:         4       0       0       0       0
  1595 ;;      Locals:         3       0       0       0       0
  1596 ;;      Temps:          1       0       0       0       0
  1597 ;;      Totals:         8       0       0       0       0
  1598 ;;Total ram usage:        8 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; This function calls:
  1601 ;;		Nothing
  1602 ;; This function is called by:
  1603 ;;		_sprintf
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           
  1608                           ;psect for function ___lwdiv
  1609  0AB1                     ___lwdiv:	
  1610                           
  1611                           ;incstack = 0
  1612                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1613  0AB1  01F5               	clrf	___lwdiv@quotient
  1614  0AB2  01F6               	clrf	___lwdiv@quotient+1
  1615  0AB3  0870               	movf	___lwdiv@divisor,w
  1616  0AB4  0471               	iorwf	___lwdiv@divisor+1,w
  1617  0AB5  1903               	btfsc	3,2
  1618  0AB6  2AE8               	goto	l2131
  1619  0AB7  01F7               	clrf	___lwdiv@counter
  1620  0AB8  0AF7               	incf	___lwdiv@counter,f
  1621  0AB9                     l2119:	
  1622  0AB9  1BF1               	btfsc	___lwdiv@divisor+1,7
  1623  0ABA  2AC7               	goto	l2121
  1624  0ABB  3001               	movlw	1
  1625  0ABC                     u2865:	
  1626  0ABC  1003               	clrc
  1627  0ABD  0DF0               	rlf	___lwdiv@divisor,f
  1628  0ABE  0DF1               	rlf	___lwdiv@divisor+1,f
  1629  0ABF  3EFF               	addlw	-1
  1630  0AC0  1D03               	skipz
  1631  0AC1  2ABC               	goto	u2865
  1632  0AC2  3001               	movlw	1
  1633  0AC3  00F4               	movwf	??___lwdiv
  1634  0AC4  0874               	movf	??___lwdiv,w
  1635  0AC5  07F7               	addwf	___lwdiv@counter,f
  1636  0AC6  2AB9               	goto	l2119
  1637  0AC7                     l2121:	
  1638  0AC7  3001               	movlw	1
  1639  0AC8                     u2885:	
  1640  0AC8  1003               	clrc
  1641  0AC9  0DF5               	rlf	___lwdiv@quotient,f
  1642  0ACA  0DF6               	rlf	___lwdiv@quotient+1,f
  1643  0ACB  3EFF               	addlw	-1
  1644  0ACC  1D03               	skipz
  1645  0ACD  2AC8               	goto	u2885
  1646  0ACE  0871               	movf	___lwdiv@divisor+1,w
  1647  0ACF  0273               	subwf	___lwdiv@dividend+1,w
  1648  0AD0  1D03               	skipz
  1649  0AD1  2AD4               	goto	u2895
  1650  0AD2  0870               	movf	___lwdiv@divisor,w
  1651  0AD3  0272               	subwf	___lwdiv@dividend,w
  1652  0AD4                     u2895:	
  1653  0AD4  1C03               	skipc
  1654  0AD5  2ADD               	goto	l2127
  1655  0AD6  0870               	movf	___lwdiv@divisor,w
  1656  0AD7  02F2               	subwf	___lwdiv@dividend,f
  1657  0AD8  0871               	movf	___lwdiv@divisor+1,w
  1658  0AD9  1C03               	skipc
  1659  0ADA  03F3               	decf	___lwdiv@dividend+1,f
  1660  0ADB  02F3               	subwf	___lwdiv@dividend+1,f
  1661  0ADC  1475               	bsf	___lwdiv@quotient,0
  1662  0ADD                     l2127:	
  1663  0ADD  3001               	movlw	1
  1664  0ADE                     u2905:	
  1665  0ADE  1003               	clrc
  1666  0ADF  0CF1               	rrf	___lwdiv@divisor+1,f
  1667  0AE0  0CF0               	rrf	___lwdiv@divisor,f
  1668  0AE1  3EFF               	addlw	-1
  1669  0AE2  1D03               	skipz
  1670  0AE3  2ADE               	goto	u2905
  1671  0AE4  3001               	movlw	1
  1672  0AE5  02F7               	subwf	___lwdiv@counter,f
  1673  0AE6  1D03               	btfss	3,2
  1674  0AE7  2AC7               	goto	l2121
  1675  0AE8                     l2131:	
  1676  0AE8  0876               	movf	___lwdiv@quotient+1,w
  1677  0AE9  00F1               	movwf	?___lwdiv+1
  1678  0AEA  0875               	movf	___lwdiv@quotient,w
  1679  0AEB  00F0               	movwf	?___lwdiv
  1680  0AEC  0008               	return
  1681  0AED                     __end_of___lwdiv:	
  1682                           
  1683                           	psect	text4
  1684  0D4E                     __ptext4:	
  1685 ;; *************** function _setAngule2 *****************
  1686 ;; Defined at:
  1687 ;;		line 41 in file "./servo_pwm.h"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;  angule          1    wreg     unsigned char 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  angule          1    9[BANK1 ] unsigned char 
  1692 ;;  duty            2   10[BANK1 ] unsigned int 
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  1    wreg      void 
  1695 ;; Registers used:
  1696 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1702 ;;      Params:         0       0       0       0       0
  1703 ;;      Locals:         0       0       3       0       0
  1704 ;;      Temps:          0       0       4       0       0
  1705 ;;      Totals:         0       0       7       0       0
  1706 ;;Total ram usage:        7 bytes
  1707 ;; Hardware stack levels used:    1
  1708 ;; Hardware stack levels required when called:    3
  1709 ;; This function calls:
  1710 ;;		___fladd
  1711 ;;		___flmul
  1712 ;;		___fltol
  1713 ;;		___xxtofl
  1714 ;;		_setDuty
  1715 ;; This function is called by:
  1716 ;;		_main
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           
  1721                           ;psect for function _setAngule2
  1722  0D4E                     _setAngule2:	
  1723                           
  1724                           ;incstack = 0
  1725                           ; Regs used in _setAngule2: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1726                           ;setAngule2@angule stored from wreg
  1727  0D4E  1683               	bsf	3,5	;RP0=1, select bank1
  1728  0D4F  1303               	bcf	3,6	;RP1=0, select bank1
  1729  0D50  00A9               	movwf	setAngule2@angule^(0+128)
  1730                           
  1731                           ;./servo_pwm.h: 42:     unsigned int duty = (angule * 1.3944444) + 251;
  1732  0D51  0829               	movf	setAngule2@angule^(0+128),w
  1733  0D52  00A5               	movwf	??_setAngule2^(0+128)
  1734  0D53  01A6               	clrf	(??_setAngule2^(0+128)+1)
  1735  0D54  01A7               	clrf	(??_setAngule2^(0+128)+2)
  1736  0D55  01A8               	clrf	(??_setAngule2^(0+128)+3)
  1737  0D56  0828               	movf	(??_setAngule2+3)^(0+128),w
  1738  0D57  00F3               	movwf	___xxtofl@val+3
  1739  0D58  0827               	movf	(??_setAngule2+2)^(0+128),w
  1740  0D59  00F2               	movwf	___xxtofl@val+2
  1741  0D5A  0826               	movf	(??_setAngule2+1)^(0+128),w
  1742  0D5B  00F1               	movwf	___xxtofl@val+1
  1743  0D5C  0825               	movf	??_setAngule2^(0+128),w
  1744  0D5D  00F0               	movwf	___xxtofl@val
  1745  0D5E  3001               	movlw	1
  1746  0D5F  120A  158A  25EA  120A  158A  	fcall	___xxtofl
  1747  0D64  0873               	movf	?___xxtofl+3,w
  1748  0D65  1283               	bcf	3,5	;RP0=0, select bank0
  1749  0D66  1303               	bcf	3,6	;RP1=0, select bank0
  1750  0D67  00C1               	movwf	___flmul@a+3
  1751  0D68  0872               	movf	?___xxtofl+2,w
  1752  0D69  00C0               	movwf	___flmul@a+2
  1753  0D6A  0871               	movf	?___xxtofl+1,w
  1754  0D6B  00BF               	movwf	___flmul@a+1
  1755  0D6C  0870               	movf	?___xxtofl,w
  1756  0D6D  00BE               	movwf	___flmul@a
  1757  0D6E  303F               	movlw	63
  1758  0D6F  00BD               	movwf	___flmul@b+3
  1759  0D70  30B2               	movlw	178
  1760  0D71  00BC               	movwf	___flmul@b+2
  1761  0D72  307D               	movlw	125
  1762  0D73  00BB               	movwf	___flmul@b+1
  1763  0D74  3027               	movlw	39
  1764  0D75  00BA               	movwf	___flmul@b
  1765  0D76  120A  118A  24E0  120A  158A  	fcall	___flmul
  1766  0D7B  1283               	bcf	3,5	;RP0=0, select bank0
  1767  0D7C  1303               	bcf	3,6	;RP1=0, select bank0
  1768  0D7D  083D               	movf	?___flmul+3,w
  1769  0D7E  00DB               	movwf	___fladd@a+3
  1770  0D7F  083C               	movf	?___flmul+2,w
  1771  0D80  00DA               	movwf	___fladd@a+2
  1772  0D81  083B               	movf	?___flmul+1,w
  1773  0D82  00D9               	movwf	___fladd@a+1
  1774  0D83  083A               	movf	?___flmul,w
  1775  0D84  00D8               	movwf	___fladd@a
  1776  0D85  3043               	movlw	67
  1777  0D86  00D7               	movwf	___fladd@b+3
  1778  0D87  307B               	movlw	123
  1779  0D88  00D6               	movwf	___fladd@b+2
  1780  0D89  3000               	movlw	0
  1781  0D8A  00D5               	movwf	___fladd@b+1
  1782  0D8B  3000               	movlw	0
  1783  0D8C  00D4               	movwf	___fladd@b
  1784  0D8D  120A  118A  22B1  120A  158A  	fcall	___fladd
  1785  0D92  1283               	bcf	3,5	;RP0=0, select bank0
  1786  0D93  1303               	bcf	3,6	;RP1=0, select bank0
  1787  0D94  0857               	movf	?___fladd+3,w
  1788  0D95  00EB               	movwf	___fltol@f1+3
  1789  0D96  0856               	movf	?___fladd+2,w
  1790  0D97  00EA               	movwf	___fltol@f1+2
  1791  0D98  0855               	movf	?___fladd+1,w
  1792  0D99  00E9               	movwf	___fltol@f1+1
  1793  0D9A  0854               	movf	?___fladd,w
  1794  0D9B  00E8               	movwf	___fltol@f1
  1795  0D9C  120A  158A  2425  120A  158A  	fcall	___fltol
  1796  0DA1  1283               	bcf	3,5	;RP0=0, select bank0
  1797  0DA2  1303               	bcf	3,6	;RP1=0, select bank0
  1798  0DA3  0869               	movf	?___fltol+1,w
  1799  0DA4  1683               	bsf	3,5	;RP0=1, select bank1
  1800  0DA5  1303               	bcf	3,6	;RP1=0, select bank1
  1801  0DA6  00AB               	movwf	(setAngule2@duty+1)^(0+128)
  1802  0DA7  1283               	bcf	3,5	;RP0=0, select bank0
  1803  0DA8  1303               	bcf	3,6	;RP1=0, select bank0
  1804  0DA9  0868               	movf	?___fltol,w
  1805  0DAA  1683               	bsf	3,5	;RP0=1, select bank1
  1806  0DAB  1303               	bcf	3,6	;RP1=0, select bank1
  1807  0DAC  00AA               	movwf	setAngule2@duty^(0+128)
  1808                           
  1809                           ;./servo_pwm.h: 43:     if (duty > 1023) return;
  1810  0DAD  3004               	movlw	4
  1811  0DAE  022B               	subwf	(setAngule2@duty+1)^(0+128),w
  1812  0DAF  3000               	movlw	0
  1813  0DB0  1903               	skipnz
  1814  0DB1  022A               	subwf	setAngule2@duty^(0+128),w
  1815  0DB2  1803               	btfsc	3,0
  1816  0DB3  0008               	return
  1817                           
  1818                           ;./servo_pwm.h: 45:     duty = setDuty(duty);
  1819  0DB4  082B               	movf	(setAngule2@duty+1)^(0+128),w
  1820  0DB5  1283               	bcf	3,5	;RP0=0, select bank0
  1821  0DB6  1303               	bcf	3,6	;RP1=0, select bank0
  1822  0DB7  00EF               	movwf	setDuty@duty+1
  1823  0DB8  1683               	bsf	3,5	;RP0=1, select bank1
  1824  0DB9  1303               	bcf	3,6	;RP1=0, select bank1
  1825  0DBA  082A               	movf	setAngule2@duty^(0+128),w
  1826  0DBB  1283               	bcf	3,5	;RP0=0, select bank0
  1827  0DBC  1303               	bcf	3,6	;RP1=0, select bank0
  1828  0DBD  00EE               	movwf	setDuty@duty
  1829  0DBE  120A  158A  2374  120A  158A  	fcall	_setDuty
  1830  0DC3  1283               	bcf	3,5	;RP0=0, select bank0
  1831  0DC4  1303               	bcf	3,6	;RP1=0, select bank0
  1832  0DC5  086F               	movf	?_setDuty+1,w
  1833  0DC6  1683               	bsf	3,5	;RP0=1, select bank1
  1834  0DC7  1303               	bcf	3,6	;RP1=0, select bank1
  1835  0DC8  00AB               	movwf	(setAngule2@duty+1)^(0+128)
  1836  0DC9  1283               	bcf	3,5	;RP0=0, select bank0
  1837  0DCA  1303               	bcf	3,6	;RP1=0, select bank0
  1838  0DCB  086E               	movf	?_setDuty,w
  1839  0DCC  1683               	bsf	3,5	;RP0=1, select bank1
  1840  0DCD  1303               	bcf	3,6	;RP1=0, select bank1
  1841  0DCE  00AA               	movwf	setAngule2@duty^(0+128)
  1842                           
  1843                           ;./servo_pwm.h: 46:     CCP2X = duty & 0x01;
  1844  0DCF  1C2A               	btfss	setAngule2@duty^(0+128),0
  1845  0DD0  2DD5               	goto	u3560
  1846  0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  1847  0DD2  1303               	bcf	3,6	;RP1=0, select bank0
  1848  0DD3  169D               	bsf	29,5	;volatile
  1849  0DD4  2DD8               	goto	l2457
  1850  0DD5                     u3560:	
  1851  0DD5  1283               	bcf	3,5	;RP0=0, select bank0
  1852  0DD6  1303               	bcf	3,6	;RP1=0, select bank0
  1853  0DD7  129D               	bcf	29,5	;volatile
  1854  0DD8                     l2457:	
  1855                           
  1856                           ;./servo_pwm.h: 47:     CCP2Y = duty & 0x02;
  1857  0DD8  121D               	bcf	29,4	;volatile
  1858                           
  1859                           ;./servo_pwm.h: 48:     CCPR2L = duty >> 2;
  1860  0DD9  1683               	bsf	3,5	;RP0=1, select bank1
  1861  0DDA  1303               	bcf	3,6	;RP1=0, select bank1
  1862  0DDB  082B               	movf	(setAngule2@duty+1)^(0+128),w
  1863  0DDC  00A6               	movwf	(??_setAngule2^(0+128)+1)
  1864  0DDD  082A               	movf	setAngule2@duty^(0+128),w
  1865  0DDE  00A5               	movwf	??_setAngule2^(0+128)
  1866  0DDF  1003               	clrc
  1867  0DE0  0CA6               	rrf	(??_setAngule2^(0+128)+1),f
  1868  0DE1  0CA5               	rrf	??_setAngule2^(0+128),f
  1869  0DE2  1003               	clrc
  1870  0DE3  0CA6               	rrf	(??_setAngule2^(0+128)+1),f
  1871  0DE4  0CA5               	rrf	??_setAngule2^(0+128),f
  1872  0DE5  0825               	movf	??_setAngule2^(0+128),w
  1873  0DE6  1283               	bcf	3,5	;RP0=0, select bank0
  1874  0DE7  1303               	bcf	3,6	;RP1=0, select bank0
  1875  0DE8  009B               	movwf	27	;volatile
  1876  0DE9  0008               	return
  1877  0DEA                     __end_of_setAngule2:	
  1878                           
  1879                           	psect	text5
  1880  0CB2                     __ptext5:	
  1881 ;; *************** function _setAngule1 *****************
  1882 ;; Defined at:
  1883 ;;		line 32 in file "./servo_pwm.h"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;  angule          1    wreg     unsigned char 
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;  angule          1    9[BANK1 ] unsigned char 
  1888 ;;  duty            2   10[BANK1 ] unsigned int 
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  1    wreg      void 
  1891 ;; Registers used:
  1892 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1898 ;;      Params:         0       0       0       0       0
  1899 ;;      Locals:         0       0       3       0       0
  1900 ;;      Temps:          0       0       4       0       0
  1901 ;;      Totals:         0       0       7       0       0
  1902 ;;Total ram usage:        7 bytes
  1903 ;; Hardware stack levels used:    1
  1904 ;; Hardware stack levels required when called:    3
  1905 ;; This function calls:
  1906 ;;		___fladd
  1907 ;;		___flmul
  1908 ;;		___fltol
  1909 ;;		___xxtofl
  1910 ;;		_setDuty
  1911 ;; This function is called by:
  1912 ;;		_main
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           
  1917                           ;psect for function _setAngule1
  1918  0CB2                     _setAngule1:	
  1919                           
  1920                           ;incstack = 0
  1921                           ; Regs used in _setAngule1: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1922                           ;setAngule1@angule stored from wreg
  1923  0CB2  1683               	bsf	3,5	;RP0=1, select bank1
  1924  0CB3  1303               	bcf	3,6	;RP1=0, select bank1
  1925  0CB4  00A9               	movwf	setAngule1@angule^(0+128)
  1926                           
  1927                           ;./servo_pwm.h: 33:     unsigned int duty = (angule * 1.3944444) + 251;
  1928  0CB5  0829               	movf	setAngule1@angule^(0+128),w
  1929  0CB6  00A5               	movwf	??_setAngule1^(0+128)
  1930  0CB7  01A6               	clrf	(??_setAngule1^(0+128)+1)
  1931  0CB8  01A7               	clrf	(??_setAngule1^(0+128)+2)
  1932  0CB9  01A8               	clrf	(??_setAngule1^(0+128)+3)
  1933  0CBA  0828               	movf	(??_setAngule1+3)^(0+128),w
  1934  0CBB  00F3               	movwf	___xxtofl@val+3
  1935  0CBC  0827               	movf	(??_setAngule1+2)^(0+128),w
  1936  0CBD  00F2               	movwf	___xxtofl@val+2
  1937  0CBE  0826               	movf	(??_setAngule1+1)^(0+128),w
  1938  0CBF  00F1               	movwf	___xxtofl@val+1
  1939  0CC0  0825               	movf	??_setAngule1^(0+128),w
  1940  0CC1  00F0               	movwf	___xxtofl@val
  1941  0CC2  3001               	movlw	1
  1942  0CC3  120A  158A  25EA  120A  158A  	fcall	___xxtofl
  1943  0CC8  0873               	movf	?___xxtofl+3,w
  1944  0CC9  1283               	bcf	3,5	;RP0=0, select bank0
  1945  0CCA  1303               	bcf	3,6	;RP1=0, select bank0
  1946  0CCB  00C1               	movwf	___flmul@a+3
  1947  0CCC  0872               	movf	?___xxtofl+2,w
  1948  0CCD  00C0               	movwf	___flmul@a+2
  1949  0CCE  0871               	movf	?___xxtofl+1,w
  1950  0CCF  00BF               	movwf	___flmul@a+1
  1951  0CD0  0870               	movf	?___xxtofl,w
  1952  0CD1  00BE               	movwf	___flmul@a
  1953  0CD2  303F               	movlw	63
  1954  0CD3  00BD               	movwf	___flmul@b+3
  1955  0CD4  30B2               	movlw	178
  1956  0CD5  00BC               	movwf	___flmul@b+2
  1957  0CD6  307D               	movlw	125
  1958  0CD7  00BB               	movwf	___flmul@b+1
  1959  0CD8  3027               	movlw	39
  1960  0CD9  00BA               	movwf	___flmul@b
  1961  0CDA  120A  118A  24E0  120A  158A  	fcall	___flmul
  1962  0CDF  1283               	bcf	3,5	;RP0=0, select bank0
  1963  0CE0  1303               	bcf	3,6	;RP1=0, select bank0
  1964  0CE1  083D               	movf	?___flmul+3,w
  1965  0CE2  00DB               	movwf	___fladd@a+3
  1966  0CE3  083C               	movf	?___flmul+2,w
  1967  0CE4  00DA               	movwf	___fladd@a+2
  1968  0CE5  083B               	movf	?___flmul+1,w
  1969  0CE6  00D9               	movwf	___fladd@a+1
  1970  0CE7  083A               	movf	?___flmul,w
  1971  0CE8  00D8               	movwf	___fladd@a
  1972  0CE9  3043               	movlw	67
  1973  0CEA  00D7               	movwf	___fladd@b+3
  1974  0CEB  307B               	movlw	123
  1975  0CEC  00D6               	movwf	___fladd@b+2
  1976  0CED  3000               	movlw	0
  1977  0CEE  00D5               	movwf	___fladd@b+1
  1978  0CEF  3000               	movlw	0
  1979  0CF0  00D4               	movwf	___fladd@b
  1980  0CF1  120A  118A  22B1  120A  158A  	fcall	___fladd
  1981  0CF6  1283               	bcf	3,5	;RP0=0, select bank0
  1982  0CF7  1303               	bcf	3,6	;RP1=0, select bank0
  1983  0CF8  0857               	movf	?___fladd+3,w
  1984  0CF9  00EB               	movwf	___fltol@f1+3
  1985  0CFA  0856               	movf	?___fladd+2,w
  1986  0CFB  00EA               	movwf	___fltol@f1+2
  1987  0CFC  0855               	movf	?___fladd+1,w
  1988  0CFD  00E9               	movwf	___fltol@f1+1
  1989  0CFE  0854               	movf	?___fladd,w
  1990  0CFF  00E8               	movwf	___fltol@f1
  1991  0D00  120A  158A  2425  120A  158A  	fcall	___fltol
  1992  0D05  1283               	bcf	3,5	;RP0=0, select bank0
  1993  0D06  1303               	bcf	3,6	;RP1=0, select bank0
  1994  0D07  0869               	movf	?___fltol+1,w
  1995  0D08  1683               	bsf	3,5	;RP0=1, select bank1
  1996  0D09  1303               	bcf	3,6	;RP1=0, select bank1
  1997  0D0A  00AB               	movwf	(setAngule1@duty+1)^(0+128)
  1998  0D0B  1283               	bcf	3,5	;RP0=0, select bank0
  1999  0D0C  1303               	bcf	3,6	;RP1=0, select bank0
  2000  0D0D  0868               	movf	?___fltol,w
  2001  0D0E  1683               	bsf	3,5	;RP0=1, select bank1
  2002  0D0F  1303               	bcf	3,6	;RP1=0, select bank1
  2003  0D10  00AA               	movwf	setAngule1@duty^(0+128)
  2004                           
  2005                           ;./servo_pwm.h: 34:     if (duty > 1023) return;
  2006  0D11  3004               	movlw	4
  2007  0D12  022B               	subwf	(setAngule1@duty+1)^(0+128),w
  2008  0D13  3000               	movlw	0
  2009  0D14  1903               	skipnz
  2010  0D15  022A               	subwf	setAngule1@duty^(0+128),w
  2011  0D16  1803               	btfsc	3,0
  2012  0D17  0008               	return
  2013                           
  2014                           ;./servo_pwm.h: 35:     duty = setDuty(duty);
  2015  0D18  082B               	movf	(setAngule1@duty+1)^(0+128),w
  2016  0D19  1283               	bcf	3,5	;RP0=0, select bank0
  2017  0D1A  1303               	bcf	3,6	;RP1=0, select bank0
  2018  0D1B  00EF               	movwf	setDuty@duty+1
  2019  0D1C  1683               	bsf	3,5	;RP0=1, select bank1
  2020  0D1D  1303               	bcf	3,6	;RP1=0, select bank1
  2021  0D1E  082A               	movf	setAngule1@duty^(0+128),w
  2022  0D1F  1283               	bcf	3,5	;RP0=0, select bank0
  2023  0D20  1303               	bcf	3,6	;RP1=0, select bank0
  2024  0D21  00EE               	movwf	setDuty@duty
  2025  0D22  120A  158A  2374  120A  158A  	fcall	_setDuty
  2026  0D27  1283               	bcf	3,5	;RP0=0, select bank0
  2027  0D28  1303               	bcf	3,6	;RP1=0, select bank0
  2028  0D29  086F               	movf	?_setDuty+1,w
  2029  0D2A  1683               	bsf	3,5	;RP0=1, select bank1
  2030  0D2B  1303               	bcf	3,6	;RP1=0, select bank1
  2031  0D2C  00AB               	movwf	(setAngule1@duty+1)^(0+128)
  2032  0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  2033  0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  2034  0D2F  086E               	movf	?_setDuty,w
  2035  0D30  1683               	bsf	3,5	;RP0=1, select bank1
  2036  0D31  1303               	bcf	3,6	;RP1=0, select bank1
  2037  0D32  00AA               	movwf	setAngule1@duty^(0+128)
  2038                           
  2039                           ;./servo_pwm.h: 36:     CCP1X = duty & 0x01;
  2040  0D33  1C2A               	btfss	setAngule1@duty^(0+128),0
  2041  0D34  2D39               	goto	u3530
  2042  0D35  1283               	bcf	3,5	;RP0=0, select bank0
  2043  0D36  1303               	bcf	3,6	;RP1=0, select bank0
  2044  0D37  1697               	bsf	23,5	;volatile
  2045  0D38  2D3C               	goto	l2443
  2046  0D39                     u3530:	
  2047  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2048  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2049  0D3B  1297               	bcf	23,5	;volatile
  2050  0D3C                     l2443:	
  2051                           
  2052                           ;./servo_pwm.h: 37:     CCP1Y = duty & 0x02;
  2053  0D3C  1217               	bcf	23,4	;volatile
  2054                           
  2055                           ;./servo_pwm.h: 38:     CCPR1L = duty >> 2;
  2056  0D3D  1683               	bsf	3,5	;RP0=1, select bank1
  2057  0D3E  1303               	bcf	3,6	;RP1=0, select bank1
  2058  0D3F  082B               	movf	(setAngule1@duty+1)^(0+128),w
  2059  0D40  00A6               	movwf	(??_setAngule1^(0+128)+1)
  2060  0D41  082A               	movf	setAngule1@duty^(0+128),w
  2061  0D42  00A5               	movwf	??_setAngule1^(0+128)
  2062  0D43  1003               	clrc
  2063  0D44  0CA6               	rrf	(??_setAngule1^(0+128)+1),f
  2064  0D45  0CA5               	rrf	??_setAngule1^(0+128),f
  2065  0D46  1003               	clrc
  2066  0D47  0CA6               	rrf	(??_setAngule1^(0+128)+1),f
  2067  0D48  0CA5               	rrf	??_setAngule1^(0+128),f
  2068  0D49  0825               	movf	??_setAngule1^(0+128),w
  2069  0D4A  1283               	bcf	3,5	;RP0=0, select bank0
  2070  0D4B  1303               	bcf	3,6	;RP1=0, select bank0
  2071  0D4C  0095               	movwf	21	;volatile
  2072  0D4D  0008               	return
  2073  0D4E                     __end_of_setAngule1:	
  2074                           
  2075                           	psect	text6
  2076  0B74                     __ptext6:	
  2077 ;; *************** function _setDuty *****************
  2078 ;; Defined at:
  2079 ;;		line 22 in file "./servo_pwm.h"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;  duty            2   78[BANK0 ] unsigned int 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;		None
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  2   78[BANK0 ] unsigned int 
  2086 ;; Registers used:
  2087 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2093 ;;      Params:         0       2       0       0       0
  2094 ;;      Locals:         0       0       0       0       0
  2095 ;;      Temps:          0       0       0       0       0
  2096 ;;      Totals:         0       2       0       0       0
  2097 ;;Total ram usage:        2 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:    2
  2100 ;; This function calls:
  2101 ;;		___fldiv
  2102 ;;		___flmul
  2103 ;;		___fltol
  2104 ;;		___xxtofl
  2105 ;; This function is called by:
  2106 ;;		_setAngule1
  2107 ;;		_setAngule2
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           
  2112                           ;psect for function _setDuty
  2113  0B74                     _setDuty:	
  2114                           
  2115                           ;./servo_pwm.h: 23:     return ((float) duty / 1023)*(4000000 / (245 * 16));
  2116                           
  2117                           ;incstack = 0
  2118                           ; Regs used in _setDuty: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2119  0B74  1283               	bcf	3,5	;RP0=0, select bank0
  2120  0B75  1303               	bcf	3,6	;RP1=0, select bank0
  2121  0B76  086E               	movf	setDuty@duty,w
  2122  0B77  00F0               	movwf	___xxtofl@val
  2123  0B78  086F               	movf	setDuty@duty+1,w
  2124  0B79  00F1               	movwf	___xxtofl@val+1
  2125  0B7A  01F2               	clrf	___xxtofl@val+2
  2126  0B7B  01F3               	clrf	___xxtofl@val+3
  2127  0B7C  3000               	movlw	0
  2128  0B7D  120A  158A  25EA  120A  158A  	fcall	___xxtofl
  2129  0B82  0873               	movf	?___xxtofl+3,w
  2130  0B83  1283               	bcf	3,5	;RP0=0, select bank0
  2131  0B84  1303               	bcf	3,6	;RP1=0, select bank0
  2132  0B85  00A7               	movwf	___fldiv@b+3
  2133  0B86  0872               	movf	?___xxtofl+2,w
  2134  0B87  00A6               	movwf	___fldiv@b+2
  2135  0B88  0871               	movf	?___xxtofl+1,w
  2136  0B89  00A5               	movwf	___fldiv@b+1
  2137  0B8A  0870               	movf	?___xxtofl,w
  2138  0B8B  00A4               	movwf	___fldiv@b
  2139  0B8C  3044               	movlw	68
  2140  0B8D  00A3               	movwf	___fldiv@a+3
  2141  0B8E  307F               	movlw	127
  2142  0B8F  00A2               	movwf	___fldiv@a+2
  2143  0B90  30C0               	movlw	192
  2144  0B91  00A1               	movwf	___fldiv@a+1
  2145  0B92  3000               	movlw	0
  2146  0B93  00A0               	movwf	___fldiv@a
  2147  0B94  120A  118A  210E  120A  158A  	fcall	___fldiv
  2148  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  2149  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  2150  0B9B  0823               	movf	?___fldiv+3,w
  2151  0B9C  00C1               	movwf	___flmul@a+3
  2152  0B9D  0822               	movf	?___fldiv+2,w
  2153  0B9E  00C0               	movwf	___flmul@a+2
  2154  0B9F  0821               	movf	?___fldiv+1,w
  2155  0BA0  00BF               	movwf	___flmul@a+1
  2156  0BA1  0820               	movf	?___fldiv,w
  2157  0BA2  00BE               	movwf	___flmul@a
  2158  0BA3  3044               	movlw	68
  2159  0BA4  00BD               	movwf	___flmul@b+3
  2160  0BA5  307F               	movlw	127
  2161  0BA6  00BC               	movwf	___flmul@b+2
  2162  0BA7  3000               	movlw	0
  2163  0BA8  00BB               	movwf	___flmul@b+1
  2164  0BA9  3000               	movlw	0
  2165  0BAA  00BA               	movwf	___flmul@b
  2166  0BAB  120A  118A  24E0  120A  158A  	fcall	___flmul
  2167  0BB0  1283               	bcf	3,5	;RP0=0, select bank0
  2168  0BB1  1303               	bcf	3,6	;RP1=0, select bank0
  2169  0BB2  083D               	movf	?___flmul+3,w
  2170  0BB3  00EB               	movwf	___fltol@f1+3
  2171  0BB4  083C               	movf	?___flmul+2,w
  2172  0BB5  00EA               	movwf	___fltol@f1+2
  2173  0BB6  083B               	movf	?___flmul+1,w
  2174  0BB7  00E9               	movwf	___fltol@f1+1
  2175  0BB8  083A               	movf	?___flmul,w
  2176  0BB9  00E8               	movwf	___fltol@f1
  2177  0BBA  120A  158A  2425   	fcall	___fltol
  2178  0BBD  1283               	bcf	3,5	;RP0=0, select bank0
  2179  0BBE  1303               	bcf	3,6	;RP1=0, select bank0
  2180  0BBF  0869               	movf	?___fltol+1,w
  2181  0BC0  00EF               	movwf	?_setDuty+1
  2182  0BC1  0868               	movf	?___fltol,w
  2183  0BC2  00EE               	movwf	?_setDuty
  2184  0BC3  0008               	return
  2185  0BC4                     __end_of_setDuty:	
  2186                           
  2187                           	psect	text7
  2188  0DEA                     __ptext7:	
  2189 ;; *************** function ___xxtofl *****************
  2190 ;; Defined at:
  2191 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  sign            1    wreg     unsigned char 
  2194 ;;  val             4    0[COMMON] long 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  sign            1    8[COMMON] unsigned char 
  2197 ;;  arg             4   10[COMMON] unsigned long 
  2198 ;;  exp             1    9[COMMON] unsigned char 
  2199 ;; Return value:  Size  Location     Type
  2200 ;;                  4    0[COMMON] unsigned char 
  2201 ;; Registers used:
  2202 ;;		wreg, status,2, status,0
  2203 ;; Tracked objects:
  2204 ;;		On entry : 0/0
  2205 ;;		On exit  : 0/0
  2206 ;;		Unchanged: 0/0
  2207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2208 ;;      Params:         4       0       0       0       0
  2209 ;;      Locals:         6       0       0       0       0
  2210 ;;      Temps:          4       0       0       0       0
  2211 ;;      Totals:        14       0       0       0       0
  2212 ;;Total ram usage:       14 bytes
  2213 ;; Hardware stack levels used:    1
  2214 ;; This function calls:
  2215 ;;		Nothing
  2216 ;; This function is called by:
  2217 ;;		_setDuty
  2218 ;;		_setAngule1
  2219 ;;		_setAngule2
  2220 ;;		_main
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           
  2225                           ;psect for function ___xxtofl
  2226  0DEA                     ___xxtofl:	
  2227                           
  2228                           ;incstack = 0
  2229                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2230                           ;___xxtofl@sign stored from wreg
  2231  0DEA  00F8               	movwf	___xxtofl@sign
  2232  0DEB  0878               	movf	___xxtofl@sign,w
  2233  0DEC  1D03               	btfss	3,2
  2234  0DED  1FF3               	btfss	___xxtofl@val+3,7
  2235  0DEE  2DFF               	goto	l2027
  2236  0DEF  0970               	comf	___xxtofl@val,w
  2237  0DF0  00FA               	movwf	___xxtofl@arg
  2238  0DF1  0971               	comf	___xxtofl@val+1,w
  2239  0DF2  00FB               	movwf	___xxtofl@arg+1
  2240  0DF3  0972               	comf	___xxtofl@val+2,w
  2241  0DF4  00FC               	movwf	___xxtofl@arg+2
  2242  0DF5  0973               	comf	___xxtofl@val+3,w
  2243  0DF6  00FD               	movwf	___xxtofl@arg+3
  2244  0DF7  0AFA               	incf	___xxtofl@arg,f
  2245  0DF8  1903               	skipnz
  2246  0DF9  0AFB               	incf	___xxtofl@arg+1,f
  2247  0DFA  1903               	skipnz
  2248  0DFB  0AFC               	incf	___xxtofl@arg+2,f
  2249  0DFC  1903               	skipnz
  2250  0DFD  0AFD               	incf	___xxtofl@arg+3,f
  2251  0DFE  2E07               	goto	l690
  2252  0DFF                     l2027:	
  2253  0DFF  0873               	movf	___xxtofl@val+3,w
  2254  0E00  00FD               	movwf	___xxtofl@arg+3
  2255  0E01  0872               	movf	___xxtofl@val+2,w
  2256  0E02  00FC               	movwf	___xxtofl@arg+2
  2257  0E03  0871               	movf	___xxtofl@val+1,w
  2258  0E04  00FB               	movwf	___xxtofl@arg+1
  2259  0E05  0870               	movf	___xxtofl@val,w
  2260  0E06  00FA               	movwf	___xxtofl@arg
  2261  0E07                     l690:	
  2262  0E07  0873               	movf	___xxtofl@val+3,w
  2263  0E08  0472               	iorwf	___xxtofl@val+2,w
  2264  0E09  0471               	iorwf	___xxtofl@val+1,w
  2265  0E0A  0470               	iorwf	___xxtofl@val,w
  2266  0E0B  1D03               	skipz
  2267  0E0C  2E16               	goto	l2033
  2268  0E0D  3000               	movlw	0
  2269  0E0E  00F3               	movwf	?___xxtofl+3
  2270  0E0F  3000               	movlw	0
  2271  0E10  00F2               	movwf	?___xxtofl+2
  2272  0E11  3000               	movlw	0
  2273  0E12  00F1               	movwf	?___xxtofl+1
  2274  0E13  3000               	movlw	0
  2275  0E14  00F0               	movwf	?___xxtofl
  2276  0E15  0008               	return
  2277  0E16                     l2033:	
  2278  0E16  3096               	movlw	150
  2279  0E17  00F4               	movwf	??___xxtofl
  2280  0E18  0874               	movf	??___xxtofl,w
  2281  0E19  00F9               	movwf	___xxtofl@exp
  2282  0E1A                     l2037:	
  2283  0E1A  30FE               	movlw	254
  2284  0E1B  057D               	andwf	___xxtofl@arg+3,w
  2285  0E1C  1903               	btfsc	3,2
  2286  0E1D  2E47               	goto	l696
  2287  0E1E  3001               	movlw	1
  2288  0E1F  00F4               	movwf	??___xxtofl
  2289  0E20  0874               	movf	??___xxtofl,w
  2290  0E21  07F9               	addwf	___xxtofl@exp,f
  2291  0E22  3001               	movlw	1
  2292  0E23                     u2715:	
  2293  0E23  1003               	clrc
  2294  0E24  0CFD               	rrf	___xxtofl@arg+3,f
  2295  0E25  0CFC               	rrf	___xxtofl@arg+2,f
  2296  0E26  0CFB               	rrf	___xxtofl@arg+1,f
  2297  0E27  0CFA               	rrf	___xxtofl@arg,f
  2298  0E28  3EFF               	addlw	-1
  2299  0E29  1D03               	skipz
  2300  0E2A  2E23               	goto	u2715
  2301  0E2B  2E1A               	goto	l2037
  2302  0E2C                     l2039:	
  2303  0E2C  3001               	movlw	1
  2304  0E2D  00F4               	movwf	??___xxtofl
  2305  0E2E  0874               	movf	??___xxtofl,w
  2306  0E2F  07F9               	addwf	___xxtofl@exp,f
  2307  0E30  3001               	movlw	1
  2308  0E31  07FA               	addwf	___xxtofl@arg,f
  2309  0E32  3000               	movlw	0
  2310  0E33  1803               	skipnc
  2311  0E34  3001               	movlw	1
  2312  0E35  07FB               	addwf	___xxtofl@arg+1,f
  2313  0E36  3000               	movlw	0
  2314  0E37  1803               	skipnc
  2315  0E38  3001               	movlw	1
  2316  0E39  07FC               	addwf	___xxtofl@arg+2,f
  2317  0E3A  3000               	movlw	0
  2318  0E3B  1803               	skipnc
  2319  0E3C  3001               	movlw	1
  2320  0E3D  07FD               	addwf	___xxtofl@arg+3,f
  2321  0E3E  3001               	movlw	1
  2322  0E3F                     u2735:	
  2323  0E3F  1003               	clrc
  2324  0E40  0CFD               	rrf	___xxtofl@arg+3,f
  2325  0E41  0CFC               	rrf	___xxtofl@arg+2,f
  2326  0E42  0CFB               	rrf	___xxtofl@arg+1,f
  2327  0E43  0CFA               	rrf	___xxtofl@arg,f
  2328  0E44  3EFF               	addlw	-1
  2329  0E45  1D03               	skipz
  2330  0E46  2E3F               	goto	u2735
  2331  0E47                     l696:	
  2332  0E47  30FF               	movlw	255
  2333  0E48  057D               	andwf	___xxtofl@arg+3,w
  2334  0E49  1903               	btfsc	3,2
  2335  0E4A  2E5B               	goto	l2047
  2336  0E4B  2E2C               	goto	l2039
  2337  0E4C                     l2049:	
  2338  0E4C  3002               	movlw	2
  2339  0E4D  0279               	subwf	___xxtofl@exp,w
  2340  0E4E  1C03               	btfss	3,0
  2341  0E4F  2E5D               	goto	l703
  2342  0E50  3001               	movlw	1
  2343  0E51  02F9               	subwf	___xxtofl@exp,f
  2344  0E52  3001               	movlw	1
  2345  0E53  00F4               	movwf	??___xxtofl
  2346  0E54                     u2755:	
  2347  0E54  1003               	clrc
  2348  0E55  0DFA               	rlf	___xxtofl@arg,f
  2349  0E56  0DFB               	rlf	___xxtofl@arg+1,f
  2350  0E57  0DFC               	rlf	___xxtofl@arg+2,f
  2351  0E58  0DFD               	rlf	___xxtofl@arg+3,f
  2352  0E59  0BF4               	decfsz	??___xxtofl,f
  2353  0E5A  2E54               	goto	u2755
  2354  0E5B                     l2047:	
  2355  0E5B  1FFC               	btfss	___xxtofl@arg+2,7
  2356  0E5C  2E4C               	goto	l2049
  2357  0E5D                     l703:	
  2358  0E5D  1879               	btfsc	___xxtofl@exp,0
  2359  0E5E  2E67               	goto	l704
  2360  0E5F  30FF               	movlw	255
  2361  0E60  05FA               	andwf	___xxtofl@arg,f
  2362  0E61  30FF               	movlw	255
  2363  0E62  05FB               	andwf	___xxtofl@arg+1,f
  2364  0E63  307F               	movlw	127
  2365  0E64  05FC               	andwf	___xxtofl@arg+2,f
  2366  0E65  30FF               	movlw	255
  2367  0E66  05FD               	andwf	___xxtofl@arg+3,f
  2368  0E67                     l704:	
  2369  0E67  1003               	clrc
  2370  0E68  0CF9               	rrf	___xxtofl@exp,f
  2371  0E69  0879               	movf	___xxtofl@exp,w
  2372  0E6A  00F4               	movwf	??___xxtofl
  2373  0E6B  01F5               	clrf	??___xxtofl+1
  2374  0E6C  01F6               	clrf	??___xxtofl+2
  2375  0E6D  01F7               	clrf	??___xxtofl+3
  2376  0E6E  3018               	movlw	24
  2377  0E6F                     u2795:	
  2378  0E6F  1003               	clrc
  2379  0E70  0DF4               	rlf	??___xxtofl,f
  2380  0E71  0DF5               	rlf	??___xxtofl+1,f
  2381  0E72  0DF6               	rlf	??___xxtofl+2,f
  2382  0E73  0DF7               	rlf	??___xxtofl+3,f
  2383  0E74  3EFF               	addlw	-1
  2384  0E75  1D03               	skipz
  2385  0E76  2E6F               	goto	u2795
  2386  0E77  0874               	movf	??___xxtofl,w
  2387  0E78  04FA               	iorwf	___xxtofl@arg,f
  2388  0E79  0875               	movf	??___xxtofl+1,w
  2389  0E7A  04FB               	iorwf	___xxtofl@arg+1,f
  2390  0E7B  0876               	movf	??___xxtofl+2,w
  2391  0E7C  04FC               	iorwf	___xxtofl@arg+2,f
  2392  0E7D  0877               	movf	??___xxtofl+3,w
  2393  0E7E  04FD               	iorwf	___xxtofl@arg+3,f
  2394  0E7F  0878               	movf	___xxtofl@sign,w
  2395  0E80  1D03               	btfss	3,2
  2396  0E81  1FF3               	btfss	___xxtofl@val+3,7
  2397  0E82  2E84               	goto	l2061
  2398  0E83  17FD               	bsf	___xxtofl@arg+3,7
  2399  0E84                     l2061:	
  2400  0E84  087D               	movf	___xxtofl@arg+3,w
  2401  0E85  00F3               	movwf	?___xxtofl+3
  2402  0E86  087C               	movf	___xxtofl@arg+2,w
  2403  0E87  00F2               	movwf	?___xxtofl+2
  2404  0E88  087B               	movf	___xxtofl@arg+1,w
  2405  0E89  00F1               	movwf	?___xxtofl+1
  2406  0E8A  087A               	movf	___xxtofl@arg,w
  2407  0E8B  00F0               	movwf	?___xxtofl
  2408  0E8C  0008               	return
  2409  0E8D                     __end_of___xxtofl:	
  2410                           
  2411                           	psect	text8
  2412  0C25                     __ptext8:	
  2413 ;; *************** function ___fltol *****************
  2414 ;; Defined at:
  2415 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  f1              4   72[BANK0 ] unsigned char 
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;  exp1            1   77[BANK0 ] unsigned char 
  2420 ;;  sign1           1   76[BANK0 ] unsigned char 
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  4   72[BANK0 ] long 
  2423 ;; Registers used:
  2424 ;;		wreg, status,2, status,0
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2430 ;;      Params:         0       4       0       0       0
  2431 ;;      Locals:         0       2       0       0       0
  2432 ;;      Temps:          0       0       5       0       0
  2433 ;;      Totals:         0       6       5       0       0
  2434 ;;Total ram usage:       11 bytes
  2435 ;; Hardware stack levels used:    1
  2436 ;; This function calls:
  2437 ;;		Nothing
  2438 ;; This function is called by:
  2439 ;;		_setDuty
  2440 ;;		_setAngule1
  2441 ;;		_setAngule2
  2442 ;;		_main
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446                           
  2447                           ;psect for function ___fltol
  2448  0C25                     ___fltol:	
  2449                           
  2450                           ;incstack = 0
  2451                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2452  0C25  1003               	clrc
  2453  0C26  1283               	bcf	3,5	;RP0=0, select bank0
  2454  0C27  1303               	bcf	3,6	;RP1=0, select bank0
  2455  0C28  0D6A               	rlf	___fltol@f1+2,w
  2456  0C29  0D6B               	rlf	___fltol@f1+3,w
  2457  0C2A  1683               	bsf	3,5	;RP0=1, select bank1
  2458  0C2B  1303               	bcf	3,6	;RP1=0, select bank1
  2459  0C2C  00A0               	movwf	??___fltol^(0+128)
  2460  0C2D  0820               	movf	??___fltol^(0+128),w
  2461  0C2E  1283               	bcf	3,5	;RP0=0, select bank0
  2462  0C2F  1303               	bcf	3,6	;RP1=0, select bank0
  2463  0C30  00ED               	movwf	___fltol@exp1
  2464  0C31  086D               	movf	___fltol@exp1,w
  2465  0C32  1D03               	btfss	3,2
  2466  0C33  2C3D               	goto	l1709
  2467  0C34                     l1705:	
  2468  0C34  3000               	movlw	0
  2469  0C35  00EB               	movwf	?___fltol+3
  2470  0C36  3000               	movlw	0
  2471  0C37  00EA               	movwf	?___fltol+2
  2472  0C38  3000               	movlw	0
  2473  0C39  00E9               	movwf	?___fltol+1
  2474  0C3A  3000               	movlw	0
  2475  0C3B  00E8               	movwf	?___fltol
  2476  0C3C  0008               	return
  2477  0C3D                     l1709:	
  2478  0C3D  0868               	movf	___fltol@f1,w
  2479  0C3E  1683               	bsf	3,5	;RP0=1, select bank1
  2480  0C3F  1303               	bcf	3,6	;RP1=0, select bank1
  2481  0C40  00A0               	movwf	??___fltol^(0+128)
  2482  0C41  1283               	bcf	3,5	;RP0=0, select bank0
  2483  0C42  1303               	bcf	3,6	;RP1=0, select bank0
  2484  0C43  0869               	movf	___fltol@f1+1,w
  2485  0C44  1683               	bsf	3,5	;RP0=1, select bank1
  2486  0C45  1303               	bcf	3,6	;RP1=0, select bank1
  2487  0C46  00A1               	movwf	(??___fltol^(0+128)+1)
  2488  0C47  1283               	bcf	3,5	;RP0=0, select bank0
  2489  0C48  1303               	bcf	3,6	;RP1=0, select bank0
  2490  0C49  086A               	movf	___fltol@f1+2,w
  2491  0C4A  1683               	bsf	3,5	;RP0=1, select bank1
  2492  0C4B  1303               	bcf	3,6	;RP1=0, select bank1
  2493  0C4C  00A2               	movwf	(??___fltol^(0+128)+2)
  2494  0C4D  1283               	bcf	3,5	;RP0=0, select bank0
  2495  0C4E  1303               	bcf	3,6	;RP1=0, select bank0
  2496  0C4F  086B               	movf	___fltol@f1+3,w
  2497  0C50  1683               	bsf	3,5	;RP0=1, select bank1
  2498  0C51  1303               	bcf	3,6	;RP1=0, select bank1
  2499  0C52  00A3               	movwf	(??___fltol^(0+128)+3)
  2500  0C53  301F               	movlw	31
  2501  0C54                     u1935:	
  2502  0C54  1003               	clrc
  2503  0C55  0CA3               	rrf	(??___fltol^(0+128)+3),f
  2504  0C56  0CA2               	rrf	(??___fltol^(0+128)+2),f
  2505  0C57  0CA1               	rrf	(??___fltol^(0+128)+1),f
  2506  0C58  0CA0               	rrf	??___fltol^(0+128),f
  2507  0C59  3EFF               	addlw	-1
  2508  0C5A  1D03               	skipz
  2509  0C5B  2C54               	goto	u1935
  2510  0C5C  0820               	movf	??___fltol^(0+128),w
  2511  0C5D  00A4               	movwf	(??___fltol+4)^(0+128)
  2512  0C5E  0824               	movf	(??___fltol+4)^(0+128),w
  2513  0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  2514  0C60  1303               	bcf	3,6	;RP1=0, select bank0
  2515  0C61  00EC               	movwf	___fltol@sign1
  2516  0C62  17EA               	bsf	___fltol@f1+2,7
  2517  0C63  30FF               	movlw	255
  2518  0C64  05E8               	andwf	___fltol@f1,f
  2519  0C65  30FF               	movlw	255
  2520  0C66  05E9               	andwf	___fltol@f1+1,f
  2521  0C67  30FF               	movlw	255
  2522  0C68  05EA               	andwf	___fltol@f1+2,f
  2523  0C69  3000               	movlw	0
  2524  0C6A  05EB               	andwf	___fltol@f1+3,f
  2525  0C6B  3096               	movlw	150
  2526  0C6C  02ED               	subwf	___fltol@exp1,f
  2527  0C6D  1FED               	btfss	___fltol@exp1,7
  2528  0C6E  2C88               	goto	l1727
  2529  0C6F  086D               	movf	___fltol@exp1,w
  2530  0C70  3A80               	xorlw	128
  2531  0C71  3E97               	addlw	151
  2532  0C72  1C03               	btfss	3,0
  2533  0C73  2C34               	goto	l1705
  2534  0C74                     l1725:	
  2535  0C74  3001               	movlw	1
  2536  0C75                     u1965:	
  2537  0C75  1003               	clrc
  2538  0C76  0CEB               	rrf	___fltol@f1+3,f
  2539  0C77  0CEA               	rrf	___fltol@f1+2,f
  2540  0C78  0CE9               	rrf	___fltol@f1+1,f
  2541  0C79  0CE8               	rrf	___fltol@f1,f
  2542  0C7A  3EFF               	addlw	-1
  2543  0C7B  1D03               	skipz
  2544  0C7C  2C75               	goto	u1965
  2545  0C7D  3001               	movlw	1
  2546  0C7E  1683               	bsf	3,5	;RP0=1, select bank1
  2547  0C7F  1303               	bcf	3,6	;RP1=0, select bank1
  2548  0C80  00A0               	movwf	??___fltol^(0+128)
  2549  0C81  0820               	movf	??___fltol^(0+128),w
  2550  0C82  1283               	bcf	3,5	;RP0=0, select bank0
  2551  0C83  1303               	bcf	3,6	;RP1=0, select bank0
  2552  0C84  07ED               	addwf	___fltol@exp1,f
  2553  0C85  1903               	btfsc	3,2
  2554  0C86  2CA3               	goto	l1735
  2555  0C87  2C74               	goto	l1725
  2556  0C88                     l1727:	
  2557  0C88  3020               	movlw	32
  2558  0C89  026D               	subwf	___fltol@exp1,w
  2559  0C8A  1803               	btfsc	3,0
  2560  0C8B  2C34               	goto	l1705
  2561  0C8C                     l456:	
  2562  0C8C  086D               	movf	___fltol@exp1,w
  2563  0C8D  1903               	btfsc	3,2
  2564  0C8E  2CA3               	goto	l1735
  2565  0C8F  3001               	movlw	1
  2566  0C90  1683               	bsf	3,5	;RP0=1, select bank1
  2567  0C91  1303               	bcf	3,6	;RP1=0, select bank1
  2568  0C92  00A0               	movwf	??___fltol^(0+128)
  2569  0C93                     u1995:	
  2570  0C93  1003               	clrc
  2571  0C94  1283               	bcf	3,5	;RP0=0, select bank0
  2572  0C95  1303               	bcf	3,6	;RP1=0, select bank0
  2573  0C96  0DE8               	rlf	___fltol@f1,f
  2574  0C97  0DE9               	rlf	___fltol@f1+1,f
  2575  0C98  0DEA               	rlf	___fltol@f1+2,f
  2576  0C99  0DEB               	rlf	___fltol@f1+3,f
  2577  0C9A  1683               	bsf	3,5	;RP0=1, select bank1
  2578  0C9B  1303               	bcf	3,6	;RP1=0, select bank1
  2579  0C9C  0BA0               	decfsz	??___fltol^(0+128),f
  2580  0C9D  2C93               	goto	u1995
  2581  0C9E  3001               	movlw	1
  2582  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  2583  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  2584  0CA1  02ED               	subwf	___fltol@exp1,f
  2585  0CA2  2C8C               	goto	l456
  2586  0CA3                     l1735:	
  2587  0CA3  086C               	movf	___fltol@sign1,w
  2588  0CA4  1903               	btfsc	3,2
  2589  0CA5  0008               	return
  2590  0CA6  09E8               	comf	___fltol@f1,f
  2591  0CA7  09E9               	comf	___fltol@f1+1,f
  2592  0CA8  09EA               	comf	___fltol@f1+2,f
  2593  0CA9  09EB               	comf	___fltol@f1+3,f
  2594  0CAA  0AE8               	incf	___fltol@f1,f
  2595  0CAB  1903               	skipnz
  2596  0CAC  0AE9               	incf	___fltol@f1+1,f
  2597  0CAD  1903               	skipnz
  2598  0CAE  0AEA               	incf	___fltol@f1+2,f
  2599  0CAF  1903               	skipnz
  2600  0CB0  0AEB               	incf	___fltol@f1+3,f
  2601  0CB1  0008               	return
  2602  0CB2                     __end_of___fltol:	
  2603                           
  2604                           	psect	text9
  2605  04E0                     __ptext9:	
  2606 ;; *************** function ___flmul *****************
  2607 ;; Defined at:
  2608 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  b               4   26[BANK0 ] long 
  2611 ;;  a               4   30[BANK0 ] long 
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;  prod            4   46[BANK0 ] struct .
  2614 ;;  grs             4   40[BANK0 ] unsigned long 
  2615 ;;  temp            2   50[BANK0 ] struct .
  2616 ;;  bexp            1   45[BANK0 ] unsigned char 
  2617 ;;  aexp            1   44[BANK0 ] unsigned char 
  2618 ;;  sign            1   39[BANK0 ] unsigned char 
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  4   26[BANK0 ] unsigned char 
  2621 ;; Registers used:
  2622 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2628 ;;      Params:         0       8       0       0       0
  2629 ;;      Locals:         0      13       0       0       0
  2630 ;;      Temps:          0       5       0       0       0
  2631 ;;      Totals:         0      26       0       0       0
  2632 ;;Total ram usage:       26 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; Hardware stack levels required when called:    1
  2635 ;; This function calls:
  2636 ;;		__Umul8_16
  2637 ;; This function is called by:
  2638 ;;		_setDuty
  2639 ;;		_setAngule1
  2640 ;;		_setAngule2
  2641 ;;		_main
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           
  2646                           ;psect for function ___flmul
  2647  04E0                     ___flmul:	
  2648                           
  2649                           ;incstack = 0
  2650                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2651  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  2652  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  2653  04E2  083D               	movf	___flmul@b+3,w
  2654  04E3  3980               	andlw	128
  2655  04E4  00C2               	movwf	??___flmul
  2656  04E5  0842               	movf	??___flmul,w
  2657  04E6  00C7               	movwf	___flmul@sign
  2658  04E7  083D               	movf	___flmul@b+3,w
  2659  04E8  00C2               	movwf	??___flmul
  2660  04E9  0742               	addwf	??___flmul,w
  2661  04EA  00C3               	movwf	??___flmul+1
  2662  04EB  0843               	movf	??___flmul+1,w
  2663  04EC  00CD               	movwf	___flmul@bexp
  2664  04ED  1BBC               	btfsc	___flmul@b+2,7
  2665  04EE  144D               	bsf	___flmul@bexp,0
  2666  04EF  084D               	movf	___flmul@bexp,w
  2667  04F0  1903               	btfsc	3,2
  2668  04F1  2CFF               	goto	l1897
  2669  04F2  0A4D               	incf	___flmul@bexp,w
  2670  04F3  1D03               	btfss	3,2
  2671  04F4  2CFD               	goto	l1895
  2672  04F5  3000               	movlw	0
  2673  04F6  00BD               	movwf	___flmul@b+3
  2674  04F7  3000               	movlw	0
  2675  04F8  00BC               	movwf	___flmul@b+2
  2676  04F9  3000               	movlw	0
  2677  04FA  00BB               	movwf	___flmul@b+1
  2678  04FB  3000               	movlw	0
  2679  04FC  00BA               	movwf	___flmul@b
  2680  04FD                     l1895:	
  2681  04FD  17BC               	bsf	___flmul@b+2,7
  2682  04FE  2D07               	goto	l1899
  2683  04FF                     l1897:	
  2684  04FF  3000               	movlw	0
  2685  0500  00BD               	movwf	___flmul@b+3
  2686  0501  3000               	movlw	0
  2687  0502  00BC               	movwf	___flmul@b+2
  2688  0503  3000               	movlw	0
  2689  0504  00BB               	movwf	___flmul@b+1
  2690  0505  3000               	movlw	0
  2691  0506  00BA               	movwf	___flmul@b
  2692  0507                     l1899:	
  2693  0507  0841               	movf	___flmul@a+3,w
  2694  0508  3980               	andlw	128
  2695  0509  00C2               	movwf	??___flmul
  2696  050A  0842               	movf	??___flmul,w
  2697  050B  06C7               	xorwf	___flmul@sign,f
  2698  050C  0841               	movf	___flmul@a+3,w
  2699  050D  00C2               	movwf	??___flmul
  2700  050E  0742               	addwf	??___flmul,w
  2701  050F  00C3               	movwf	??___flmul+1
  2702  0510  0843               	movf	??___flmul+1,w
  2703  0511  00CC               	movwf	___flmul@aexp
  2704  0512  1BC0               	btfsc	___flmul@a+2,7
  2705  0513  144C               	bsf	___flmul@aexp,0
  2706  0514  084C               	movf	___flmul@aexp,w
  2707  0515  1903               	btfsc	3,2
  2708  0516  2D24               	goto	l1915
  2709  0517  0A4C               	incf	___flmul@aexp,w
  2710  0518  1D03               	btfss	3,2
  2711  0519  2D22               	goto	l1913
  2712  051A  3000               	movlw	0
  2713  051B  00C1               	movwf	___flmul@a+3
  2714  051C  3000               	movlw	0
  2715  051D  00C0               	movwf	___flmul@a+2
  2716  051E  3000               	movlw	0
  2717  051F  00BF               	movwf	___flmul@a+1
  2718  0520  3000               	movlw	0
  2719  0521  00BE               	movwf	___flmul@a
  2720  0522                     l1913:	
  2721  0522  17C0               	bsf	___flmul@a+2,7
  2722  0523  2D2C               	goto	l1917
  2723  0524                     l1915:	
  2724  0524  3000               	movlw	0
  2725  0525  00C1               	movwf	___flmul@a+3
  2726  0526  3000               	movlw	0
  2727  0527  00C0               	movwf	___flmul@a+2
  2728  0528  3000               	movlw	0
  2729  0529  00BF               	movwf	___flmul@a+1
  2730  052A  3000               	movlw	0
  2731  052B  00BE               	movwf	___flmul@a
  2732  052C                     l1917:	
  2733  052C  084C               	movf	___flmul@aexp,w
  2734  052D  1D03               	btfss	3,2
  2735  052E  084D               	movf	___flmul@bexp,w
  2736  052F  1D03               	btfss	3,2
  2737  0530  2D3A               	goto	l1925
  2738  0531  3000               	movlw	0
  2739  0532  00BD               	movwf	?___flmul+3
  2740  0533  3000               	movlw	0
  2741  0534  00BC               	movwf	?___flmul+2
  2742  0535  3000               	movlw	0
  2743  0536  00BB               	movwf	?___flmul+1
  2744  0537  3000               	movlw	0
  2745  0538  00BA               	movwf	?___flmul
  2746  0539  0008               	return
  2747  053A                     l1925:	
  2748  053A  083A               	movf	___flmul@b,w
  2749  053B  00C2               	movwf	??___flmul
  2750  053C  0842               	movf	??___flmul,w
  2751  053D  00F0               	movwf	__Umul8_16@multiplicand
  2752  053E  0840               	movf	___flmul@a+2,w
  2753  053F  120A  158A  2257  120A  118A  	fcall	__Umul8_16
  2754  0544  0871               	movf	?__Umul8_16+1,w
  2755  0545  1283               	bcf	3,5	;RP0=0, select bank0
  2756  0546  1303               	bcf	3,6	;RP1=0, select bank0
  2757  0547  00D3               	movwf	___flmul@temp+1
  2758  0548  0870               	movf	?__Umul8_16,w
  2759  0549  00D2               	movwf	___flmul@temp
  2760  054A  0852               	movf	___flmul@temp,w
  2761  054B  00C2               	movwf	??___flmul
  2762  054C  01C3               	clrf	??___flmul+1
  2763  054D  01C4               	clrf	??___flmul+2
  2764  054E  01C5               	clrf	??___flmul+3
  2765  054F  0845               	movf	??___flmul+3,w
  2766  0550  00CB               	movwf	___flmul@grs+3
  2767  0551  0844               	movf	??___flmul+2,w
  2768  0552  00CA               	movwf	___flmul@grs+2
  2769  0553  0843               	movf	??___flmul+1,w
  2770  0554  00C9               	movwf	___flmul@grs+1
  2771  0555  0842               	movf	??___flmul,w
  2772  0556  00C8               	movwf	___flmul@grs
  2773  0557  0853               	movf	___flmul@temp+1,w
  2774  0558  00C2               	movwf	??___flmul
  2775  0559  01C3               	clrf	??___flmul+1
  2776  055A  01C4               	clrf	??___flmul+2
  2777  055B  01C5               	clrf	??___flmul+3
  2778  055C  0845               	movf	??___flmul+3,w
  2779  055D  00D1               	movwf	___flmul@prod+3
  2780  055E  0844               	movf	??___flmul+2,w
  2781  055F  00D0               	movwf	___flmul@prod+2
  2782  0560  0843               	movf	??___flmul+1,w
  2783  0561  00CF               	movwf	___flmul@prod+1
  2784  0562  0842               	movf	??___flmul,w
  2785  0563  00CE               	movwf	___flmul@prod
  2786  0564  083B               	movf	___flmul@b+1,w
  2787  0565  00C2               	movwf	??___flmul
  2788  0566  0842               	movf	??___flmul,w
  2789  0567  00F0               	movwf	__Umul8_16@multiplicand
  2790  0568  083F               	movf	___flmul@a+1,w
  2791  0569  120A  158A  2257  120A  118A  	fcall	__Umul8_16
  2792  056E  0871               	movf	?__Umul8_16+1,w
  2793  056F  1283               	bcf	3,5	;RP0=0, select bank0
  2794  0570  1303               	bcf	3,6	;RP1=0, select bank0
  2795  0571  00D3               	movwf	___flmul@temp+1
  2796  0572  0870               	movf	?__Umul8_16,w
  2797  0573  00D2               	movwf	___flmul@temp
  2798  0574  0852               	movf	___flmul@temp,w
  2799  0575  00C2               	movwf	??___flmul
  2800  0576  01C3               	clrf	??___flmul+1
  2801  0577  01C4               	clrf	??___flmul+2
  2802  0578  01C5               	clrf	??___flmul+3
  2803  0579  0842               	movf	??___flmul,w
  2804  057A  07C8               	addwf	___flmul@grs,f
  2805  057B  0843               	movf	??___flmul+1,w
  2806  057C  1103               	clrz
  2807  057D  1803               	skipnc
  2808  057E  3E01               	addlw	1
  2809  057F  1D03               	btfss	3,2
  2810  0580  07C9               	addwf	___flmul@grs+1,f
  2811  0581  0844               	movf	??___flmul+2,w
  2812  0582  1103               	clrz
  2813  0583  1803               	skipnc
  2814  0584  3E01               	addlw	1
  2815  0585  1D03               	btfss	3,2
  2816  0586  07CA               	addwf	___flmul@grs+2,f
  2817  0587  0845               	movf	??___flmul+3,w
  2818  0588  1103               	clrz
  2819  0589  1803               	skipnc
  2820  058A  3E01               	addlw	1
  2821  058B  1D03               	btfss	3,2
  2822  058C  07CB               	addwf	___flmul@grs+3,f
  2823  058D  0853               	movf	___flmul@temp+1,w
  2824  058E  00C2               	movwf	??___flmul
  2825  058F  01C3               	clrf	??___flmul+1
  2826  0590  01C4               	clrf	??___flmul+2
  2827  0591  01C5               	clrf	??___flmul+3
  2828  0592  0842               	movf	??___flmul,w
  2829  0593  07CE               	addwf	___flmul@prod,f
  2830  0594  0843               	movf	??___flmul+1,w
  2831  0595  1103               	clrz
  2832  0596  1803               	skipnc
  2833  0597  3E01               	addlw	1
  2834  0598  1D03               	btfss	3,2
  2835  0599  07CF               	addwf	___flmul@prod+1,f
  2836  059A  0844               	movf	??___flmul+2,w
  2837  059B  1103               	clrz
  2838  059C  1803               	skipnc
  2839  059D  3E01               	addlw	1
  2840  059E  1D03               	btfss	3,2
  2841  059F  07D0               	addwf	___flmul@prod+2,f
  2842  05A0  0845               	movf	??___flmul+3,w
  2843  05A1  1103               	clrz
  2844  05A2  1803               	skipnc
  2845  05A3  3E01               	addlw	1
  2846  05A4  1D03               	btfss	3,2
  2847  05A5  07D1               	addwf	___flmul@prod+3,f
  2848  05A6  083C               	movf	___flmul@b+2,w
  2849  05A7  00C2               	movwf	??___flmul
  2850  05A8  0842               	movf	??___flmul,w
  2851  05A9  00F0               	movwf	__Umul8_16@multiplicand
  2852  05AA  083E               	movf	___flmul@a,w
  2853  05AB  120A  158A  2257  120A  118A  	fcall	__Umul8_16
  2854  05B0  0871               	movf	?__Umul8_16+1,w
  2855  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2856  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2857  05B3  00D3               	movwf	___flmul@temp+1
  2858  05B4  0870               	movf	?__Umul8_16,w
  2859  05B5  00D2               	movwf	___flmul@temp
  2860  05B6  0852               	movf	___flmul@temp,w
  2861  05B7  00C2               	movwf	??___flmul
  2862  05B8  01C3               	clrf	??___flmul+1
  2863  05B9  01C4               	clrf	??___flmul+2
  2864  05BA  01C5               	clrf	??___flmul+3
  2865  05BB  0842               	movf	??___flmul,w
  2866  05BC  07C8               	addwf	___flmul@grs,f
  2867  05BD  0843               	movf	??___flmul+1,w
  2868  05BE  1103               	clrz
  2869  05BF  1803               	skipnc
  2870  05C0  3E01               	addlw	1
  2871  05C1  1D03               	btfss	3,2
  2872  05C2  07C9               	addwf	___flmul@grs+1,f
  2873  05C3  0844               	movf	??___flmul+2,w
  2874  05C4  1103               	clrz
  2875  05C5  1803               	skipnc
  2876  05C6  3E01               	addlw	1
  2877  05C7  1D03               	btfss	3,2
  2878  05C8  07CA               	addwf	___flmul@grs+2,f
  2879  05C9  0845               	movf	??___flmul+3,w
  2880  05CA  1103               	clrz
  2881  05CB  1803               	skipnc
  2882  05CC  3E01               	addlw	1
  2883  05CD  1D03               	btfss	3,2
  2884  05CE  07CB               	addwf	___flmul@grs+3,f
  2885  05CF  0853               	movf	___flmul@temp+1,w
  2886  05D0  00C2               	movwf	??___flmul
  2887  05D1  01C3               	clrf	??___flmul+1
  2888  05D2  01C4               	clrf	??___flmul+2
  2889  05D3  01C5               	clrf	??___flmul+3
  2890  05D4  0842               	movf	??___flmul,w
  2891  05D5  07CE               	addwf	___flmul@prod,f
  2892  05D6  0843               	movf	??___flmul+1,w
  2893  05D7  1103               	clrz
  2894  05D8  1803               	skipnc
  2895  05D9  3E01               	addlw	1
  2896  05DA  1D03               	btfss	3,2
  2897  05DB  07CF               	addwf	___flmul@prod+1,f
  2898  05DC  0844               	movf	??___flmul+2,w
  2899  05DD  1103               	clrz
  2900  05DE  1803               	skipnc
  2901  05DF  3E01               	addlw	1
  2902  05E0  1D03               	btfss	3,2
  2903  05E1  07D0               	addwf	___flmul@prod+2,f
  2904  05E2  0845               	movf	??___flmul+3,w
  2905  05E3  1103               	clrz
  2906  05E4  1803               	skipnc
  2907  05E5  3E01               	addlw	1
  2908  05E6  1D03               	btfss	3,2
  2909  05E7  07D1               	addwf	___flmul@prod+3,f
  2910  05E8  3008               	movlw	8
  2911  05E9  00C2               	movwf	??___flmul
  2912  05EA                     u2435:	
  2913  05EA  1003               	clrc
  2914  05EB  0DC8               	rlf	___flmul@grs,f
  2915  05EC  0DC9               	rlf	___flmul@grs+1,f
  2916  05ED  0DCA               	rlf	___flmul@grs+2,f
  2917  05EE  0DCB               	rlf	___flmul@grs+3,f
  2918  05EF  0BC2               	decfsz	??___flmul,f
  2919  05F0  2DEA               	goto	u2435
  2920  05F1  083B               	movf	___flmul@b+1,w
  2921  05F2  00C2               	movwf	??___flmul
  2922  05F3  0842               	movf	??___flmul,w
  2923  05F4  00F0               	movwf	__Umul8_16@multiplicand
  2924  05F5  083E               	movf	___flmul@a,w
  2925  05F6  120A  158A  2257  120A  118A  	fcall	__Umul8_16
  2926  05FB  0871               	movf	?__Umul8_16+1,w
  2927  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  2928  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  2929  05FE  00D3               	movwf	___flmul@temp+1
  2930  05FF  0870               	movf	?__Umul8_16,w
  2931  0600  00D2               	movwf	___flmul@temp
  2932  0601  0852               	movf	___flmul@temp,w
  2933  0602  00C2               	movwf	??___flmul
  2934  0603  0853               	movf	___flmul@temp+1,w
  2935  0604  00C3               	movwf	??___flmul+1
  2936  0605  01C4               	clrf	??___flmul+2
  2937  0606  01C5               	clrf	??___flmul+3
  2938  0607  0842               	movf	??___flmul,w
  2939  0608  07C8               	addwf	___flmul@grs,f
  2940  0609  0843               	movf	??___flmul+1,w
  2941  060A  1103               	clrz
  2942  060B  1803               	skipnc
  2943  060C  3E01               	addlw	1
  2944  060D  1D03               	btfss	3,2
  2945  060E  07C9               	addwf	___flmul@grs+1,f
  2946  060F  0844               	movf	??___flmul+2,w
  2947  0610  1103               	clrz
  2948  0611  1803               	skipnc
  2949  0612  3E01               	addlw	1
  2950  0613  1D03               	btfss	3,2
  2951  0614  07CA               	addwf	___flmul@grs+2,f
  2952  0615  0845               	movf	??___flmul+3,w
  2953  0616  1103               	clrz
  2954  0617  1803               	skipnc
  2955  0618  3E01               	addlw	1
  2956  0619  1D03               	btfss	3,2
  2957  061A  07CB               	addwf	___flmul@grs+3,f
  2958  061B  083A               	movf	___flmul@b,w
  2959  061C  00C2               	movwf	??___flmul
  2960  061D  0842               	movf	??___flmul,w
  2961  061E  00F0               	movwf	__Umul8_16@multiplicand
  2962  061F  083F               	movf	___flmul@a+1,w
  2963  0620  120A  158A  2257  120A  118A  	fcall	__Umul8_16
  2964  0625  0871               	movf	?__Umul8_16+1,w
  2965  0626  1283               	bcf	3,5	;RP0=0, select bank0
  2966  0627  1303               	bcf	3,6	;RP1=0, select bank0
  2967  0628  00D3               	movwf	___flmul@temp+1
  2968  0629  0870               	movf	?__Umul8_16,w
  2969  062A  00D2               	movwf	___flmul@temp
  2970  062B  0852               	movf	___flmul@temp,w
  2971  062C  00C2               	movwf	??___flmul
  2972  062D  0853               	movf	___flmul@temp+1,w
  2973  062E  00C3               	movwf	??___flmul+1
  2974  062F  01C4               	clrf	??___flmul+2
  2975  0630  01C5               	clrf	??___flmul+3
  2976  0631  0842               	movf	??___flmul,w
  2977  0632  07C8               	addwf	___flmul@grs,f
  2978  0633  0843               	movf	??___flmul+1,w
  2979  0634  1103               	clrz
  2980  0635  1803               	skipnc
  2981  0636  3E01               	addlw	1
  2982  0637  1D03               	btfss	3,2
  2983  0638  07C9               	addwf	___flmul@grs+1,f
  2984  0639  0844               	movf	??___flmul+2,w
  2985  063A  1103               	clrz
  2986  063B  1803               	skipnc
  2987  063C  3E01               	addlw	1
  2988  063D  1D03               	btfss	3,2
  2989  063E  07CA               	addwf	___flmul@grs+2,f
  2990  063F  0845               	movf	??___flmul+3,w
  2991  0640  1103               	clrz
  2992  0641  1803               	skipnc
  2993  0642  3E01               	addlw	1
  2994  0643  1D03               	btfss	3,2
  2995  0644  07CB               	addwf	___flmul@grs+3,f
  2996  0645  3008               	movlw	8
  2997  0646  00C2               	movwf	??___flmul
  2998  0647                     u2465:	
  2999  0647  1003               	clrc
  3000  0648  0DC8               	rlf	___flmul@grs,f
  3001  0649  0DC9               	rlf	___flmul@grs+1,f
  3002  064A  0DCA               	rlf	___flmul@grs+2,f
  3003  064B  0DCB               	rlf	___flmul@grs+3,f
  3004  064C  0BC2               	decfsz	??___flmul,f
  3005  064D  2E47               	goto	u2465
  3006  064E  083A               	movf	___flmul@b,w
  3007  064F  00C2               	movwf	??___flmul
  3008  0650  0842               	movf	??___flmul,w
  3009  0651  00F0               	movwf	__Umul8_16@multiplicand
  3010  0652  083E               	movf	___flmul@a,w
  3011  0653  120A  158A  2257  120A  118A  	fcall	__Umul8_16
  3012  0658  0871               	movf	?__Umul8_16+1,w
  3013  0659  1283               	bcf	3,5	;RP0=0, select bank0
  3014  065A  1303               	bcf	3,6	;RP1=0, select bank0
  3015  065B  00D3               	movwf	___flmul@temp+1
  3016  065C  0870               	movf	?__Umul8_16,w
  3017  065D  00D2               	movwf	___flmul@temp
  3018  065E  0852               	movf	___flmul@temp,w
  3019  065F  00C2               	movwf	??___flmul
  3020  0660  0853               	movf	___flmul@temp+1,w
  3021  0661  00C3               	movwf	??___flmul+1
  3022  0662  01C4               	clrf	??___flmul+2
  3023  0663  01C5               	clrf	??___flmul+3
  3024  0664  0842               	movf	??___flmul,w
  3025  0665  07C8               	addwf	___flmul@grs,f
  3026  0666  0843               	movf	??___flmul+1,w
  3027  0667  1103               	clrz
  3028  0668  1803               	skipnc
  3029  0669  3E01               	addlw	1
  3030  066A  1D03               	btfss	3,2
  3031  066B  07C9               	addwf	___flmul@grs+1,f
  3032  066C  0844               	movf	??___flmul+2,w
  3033  066D  1103               	clrz
  3034  066E  1803               	skipnc
  3035  066F  3E01               	addlw	1
  3036  0670  1D03               	btfss	3,2
  3037  0671  07CA               	addwf	___flmul@grs+2,f
  3038  0672  0845               	movf	??___flmul+3,w
  3039  0673  1103               	clrz
  3040  0674  1803               	skipnc
  3041  0675  3E01               	addlw	1
  3042  0676  1D03               	btfss	3,2
  3043  0677  07CB               	addwf	___flmul@grs+3,f
  3044  0678  083B               	movf	___flmul@b+1,w
  3045  0679  00C2               	movwf	??___flmul
  3046  067A  0842               	movf	??___flmul,w
  3047  067B  00F0               	movwf	__Umul8_16@multiplicand
  3048  067C  0840               	movf	___flmul@a+2,w
  3049  067D  120A  158A  2257  120A  118A  	fcall	__Umul8_16
  3050  0682  0871               	movf	?__Umul8_16+1,w
  3051  0683  1283               	bcf	3,5	;RP0=0, select bank0
  3052  0684  1303               	bcf	3,6	;RP1=0, select bank0
  3053  0685  00D3               	movwf	___flmul@temp+1
  3054  0686  0870               	movf	?__Umul8_16,w
  3055  0687  00D2               	movwf	___flmul@temp
  3056  0688  0852               	movf	___flmul@temp,w
  3057  0689  00C2               	movwf	??___flmul
  3058  068A  0853               	movf	___flmul@temp+1,w
  3059  068B  00C3               	movwf	??___flmul+1
  3060  068C  01C4               	clrf	??___flmul+2
  3061  068D  01C5               	clrf	??___flmul+3
  3062  068E  0842               	movf	??___flmul,w
  3063  068F  07CE               	addwf	___flmul@prod,f
  3064  0690  0843               	movf	??___flmul+1,w
  3065  0691  1103               	clrz
  3066  0692  1803               	skipnc
  3067  0693  3E01               	addlw	1
  3068  0694  1D03               	btfss	3,2
  3069  0695  07CF               	addwf	___flmul@prod+1,f
  3070  0696  0844               	movf	??___flmul+2,w
  3071  0697  1103               	clrz
  3072  0698  1803               	skipnc
  3073  0699  3E01               	addlw	1
  3074  069A  1D03               	btfss	3,2
  3075  069B  07D0               	addwf	___flmul@prod+2,f
  3076  069C  0845               	movf	??___flmul+3,w
  3077  069D  1103               	clrz
  3078  069E  1803               	skipnc
  3079  069F  3E01               	addlw	1
  3080  06A0  1D03               	btfss	3,2
  3081  06A1  07D1               	addwf	___flmul@prod+3,f
  3082  06A2  083C               	movf	___flmul@b+2,w
  3083  06A3  00C2               	movwf	??___flmul
  3084  06A4  0842               	movf	??___flmul,w
  3085  06A5  00F0               	movwf	__Umul8_16@multiplicand
  3086  06A6  083F               	movf	___flmul@a+1,w
  3087  06A7  120A  158A  2257  120A  118A  	fcall	__Umul8_16
  3088  06AC  0871               	movf	?__Umul8_16+1,w
  3089  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  3090  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  3091  06AF  00D3               	movwf	___flmul@temp+1
  3092  06B0  0870               	movf	?__Umul8_16,w
  3093  06B1  00D2               	movwf	___flmul@temp
  3094  06B2  0852               	movf	___flmul@temp,w
  3095  06B3  00C2               	movwf	??___flmul
  3096  06B4  0853               	movf	___flmul@temp+1,w
  3097  06B5  00C3               	movwf	??___flmul+1
  3098  06B6  01C4               	clrf	??___flmul+2
  3099  06B7  01C5               	clrf	??___flmul+3
  3100  06B8  0842               	movf	??___flmul,w
  3101  06B9  07CE               	addwf	___flmul@prod,f
  3102  06BA  0843               	movf	??___flmul+1,w
  3103  06BB  1103               	clrz
  3104  06BC  1803               	skipnc
  3105  06BD  3E01               	addlw	1
  3106  06BE  1D03               	btfss	3,2
  3107  06BF  07CF               	addwf	___flmul@prod+1,f
  3108  06C0  0844               	movf	??___flmul+2,w
  3109  06C1  1103               	clrz
  3110  06C2  1803               	skipnc
  3111  06C3  3E01               	addlw	1
  3112  06C4  1D03               	btfss	3,2
  3113  06C5  07D0               	addwf	___flmul@prod+2,f
  3114  06C6  0845               	movf	??___flmul+3,w
  3115  06C7  1103               	clrz
  3116  06C8  1803               	skipnc
  3117  06C9  3E01               	addlw	1
  3118  06CA  1D03               	btfss	3,2
  3119  06CB  07D1               	addwf	___flmul@prod+3,f
  3120  06CC  083C               	movf	___flmul@b+2,w
  3121  06CD  00C2               	movwf	??___flmul
  3122  06CE  0842               	movf	??___flmul,w
  3123  06CF  00F0               	movwf	__Umul8_16@multiplicand
  3124  06D0  0840               	movf	___flmul@a+2,w
  3125  06D1  120A  158A  2257  120A  118A  	fcall	__Umul8_16
  3126  06D6  0871               	movf	?__Umul8_16+1,w
  3127  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  3128  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  3129  06D9  00D3               	movwf	___flmul@temp+1
  3130  06DA  0870               	movf	?__Umul8_16,w
  3131  06DB  00D2               	movwf	___flmul@temp
  3132  06DC  0852               	movf	___flmul@temp,w
  3133  06DD  00C2               	movwf	??___flmul
  3134  06DE  0853               	movf	___flmul@temp+1,w
  3135  06DF  00C3               	movwf	??___flmul+1
  3136  06E0  01C4               	clrf	??___flmul+2
  3137  06E1  01C5               	clrf	??___flmul+3
  3138  06E2  3008               	movlw	8
  3139  06E3                     u2505:	
  3140  06E3  1003               	clrc
  3141  06E4  0DC2               	rlf	??___flmul,f
  3142  06E5  0DC3               	rlf	??___flmul+1,f
  3143  06E6  0DC4               	rlf	??___flmul+2,f
  3144  06E7  0DC5               	rlf	??___flmul+3,f
  3145  06E8  3EFF               	addlw	-1
  3146  06E9  1D03               	skipz
  3147  06EA  2EE3               	goto	u2505
  3148  06EB  0842               	movf	??___flmul,w
  3149  06EC  07CE               	addwf	___flmul@prod,f
  3150  06ED  0843               	movf	??___flmul+1,w
  3151  06EE  1103               	clrz
  3152  06EF  1803               	skipnc
  3153  06F0  3E01               	addlw	1
  3154  06F1  1D03               	btfss	3,2
  3155  06F2  07CF               	addwf	___flmul@prod+1,f
  3156  06F3  0844               	movf	??___flmul+2,w
  3157  06F4  1103               	clrz
  3158  06F5  1803               	skipnc
  3159  06F6  3E01               	addlw	1
  3160  06F7  1D03               	btfss	3,2
  3161  06F8  07D0               	addwf	___flmul@prod+2,f
  3162  06F9  0845               	movf	??___flmul+3,w
  3163  06FA  1103               	clrz
  3164  06FB  1803               	skipnc
  3165  06FC  3E01               	addlw	1
  3166  06FD  1D03               	btfss	3,2
  3167  06FE  07D1               	addwf	___flmul@prod+3,f
  3168  06FF  0848               	movf	___flmul@grs,w
  3169  0700  00C2               	movwf	??___flmul
  3170  0701  0849               	movf	___flmul@grs+1,w
  3171  0702  00C3               	movwf	??___flmul+1
  3172  0703  084A               	movf	___flmul@grs+2,w
  3173  0704  00C4               	movwf	??___flmul+2
  3174  0705  084B               	movf	___flmul@grs+3,w
  3175  0706  00C5               	movwf	??___flmul+3
  3176  0707  3018               	movlw	24
  3177  0708                     u2525:	
  3178  0708  1003               	clrc
  3179  0709  0CC5               	rrf	??___flmul+3,f
  3180  070A  0CC4               	rrf	??___flmul+2,f
  3181  070B  0CC3               	rrf	??___flmul+1,f
  3182  070C  0CC2               	rrf	??___flmul,f
  3183  070D  3EFF               	addlw	-1
  3184  070E  1D03               	skipz
  3185  070F  2F08               	goto	u2525
  3186  0710  0842               	movf	??___flmul,w
  3187  0711  07CE               	addwf	___flmul@prod,f
  3188  0712  0843               	movf	??___flmul+1,w
  3189  0713  1103               	clrz
  3190  0714  1803               	skipnc
  3191  0715  3E01               	addlw	1
  3192  0716  1D03               	btfss	3,2
  3193  0717  07CF               	addwf	___flmul@prod+1,f
  3194  0718  0844               	movf	??___flmul+2,w
  3195  0719  1103               	clrz
  3196  071A  1803               	skipnc
  3197  071B  3E01               	addlw	1
  3198  071C  1D03               	btfss	3,2
  3199  071D  07D0               	addwf	___flmul@prod+2,f
  3200  071E  0845               	movf	??___flmul+3,w
  3201  071F  1103               	clrz
  3202  0720  1803               	skipnc
  3203  0721  3E01               	addlw	1
  3204  0722  1D03               	btfss	3,2
  3205  0723  07D1               	addwf	___flmul@prod+3,f
  3206  0724  3008               	movlw	8
  3207  0725  00C2               	movwf	??___flmul
  3208  0726                     u2545:	
  3209  0726  1003               	clrc
  3210  0727  0DC8               	rlf	___flmul@grs,f
  3211  0728  0DC9               	rlf	___flmul@grs+1,f
  3212  0729  0DCA               	rlf	___flmul@grs+2,f
  3213  072A  0DCB               	rlf	___flmul@grs+3,f
  3214  072B  0BC2               	decfsz	??___flmul,f
  3215  072C  2F26               	goto	u2545
  3216  072D  084D               	movf	___flmul@bexp,w
  3217  072E  074C               	addwf	___flmul@aexp,w
  3218  072F  00C2               	movwf	??___flmul
  3219  0730  01C3               	clrf	??___flmul+1
  3220  0731  0DC3               	rlf	??___flmul+1,f
  3221  0732  0842               	movf	??___flmul,w
  3222  0733  3E82               	addlw	130
  3223  0734  00D2               	movwf	___flmul@temp
  3224  0735  0843               	movf	??___flmul+1,w
  3225  0736  1803               	skipnc
  3226  0737  3E01               	addlw	1
  3227  0738  3EFF               	addlw	255
  3228  0739  00D3               	movwf	___flmul@temp+1
  3229  073A                     l1977:	
  3230  073A  1BD0               	btfsc	___flmul@prod+2,7
  3231  073B  2F57               	goto	l1979
  3232  073C  3001               	movlw	1
  3233  073D  00C2               	movwf	??___flmul
  3234  073E                     u2555:	
  3235  073E  1003               	clrc
  3236  073F  0DCE               	rlf	___flmul@prod,f
  3237  0740  0DCF               	rlf	___flmul@prod+1,f
  3238  0741  0DD0               	rlf	___flmul@prod+2,f
  3239  0742  0DD1               	rlf	___flmul@prod+3,f
  3240  0743  0BC2               	decfsz	??___flmul,f
  3241  0744  2F3E               	goto	u2555
  3242  0745  1BCB               	btfsc	___flmul@grs+3,7
  3243  0746  144E               	bsf	___flmul@prod,0
  3244  0747  3001               	movlw	1
  3245  0748  00C2               	movwf	??___flmul
  3246  0749                     u2575:	
  3247  0749  1003               	clrc
  3248  074A  0DC8               	rlf	___flmul@grs,f
  3249  074B  0DC9               	rlf	___flmul@grs+1,f
  3250  074C  0DCA               	rlf	___flmul@grs+2,f
  3251  074D  0DCB               	rlf	___flmul@grs+3,f
  3252  074E  0BC2               	decfsz	??___flmul,f
  3253  074F  2F49               	goto	u2575
  3254  0750  30FF               	movlw	255
  3255  0751  07D2               	addwf	___flmul@temp,f
  3256  0752  1803               	skipnc
  3257  0753  0AD3               	incf	___flmul@temp+1,f
  3258  0754  30FF               	movlw	255
  3259  0755  07D3               	addwf	___flmul@temp+1,f
  3260  0756  2F3A               	goto	l1977
  3261  0757                     l1979:	
  3262  0757  01CC               	clrf	___flmul@aexp
  3263  0758  1FCB               	btfss	___flmul@grs+3,7
  3264  0759  2F70               	goto	l1989
  3265  075A  30FF               	movlw	255
  3266  075B  0548               	andwf	___flmul@grs,w
  3267  075C  00C2               	movwf	??___flmul
  3268  075D  30FF               	movlw	255
  3269  075E  0549               	andwf	___flmul@grs+1,w
  3270  075F  00C3               	movwf	??___flmul+1
  3271  0760  30FF               	movlw	255
  3272  0761  054A               	andwf	___flmul@grs+2,w
  3273  0762  00C4               	movwf	??___flmul+2
  3274  0763  307F               	movlw	127
  3275  0764  054B               	andwf	___flmul@grs+3,w
  3276  0765  00C5               	movwf	??___flmul+3
  3277  0766  0845               	movf	??___flmul+3,w
  3278  0767  0444               	iorwf	??___flmul+2,w
  3279  0768  0443               	iorwf	??___flmul+1,w
  3280  0769  0442               	iorwf	??___flmul,w
  3281  076A  1903               	skipnz
  3282  076B  184E               	btfsc	___flmul@prod,0
  3283  076C  2F6E               	goto	l1985
  3284  076D  2F70               	goto	l1989
  3285  076E                     l1985:	
  3286  076E  01CC               	clrf	___flmul@aexp
  3287  076F  0ACC               	incf	___flmul@aexp,f
  3288  0770                     l1989:	
  3289  0770  084C               	movf	___flmul@aexp,w
  3290  0771  1903               	btfsc	3,2
  3291  0772  2FA2               	goto	l1999
  3292  0773  3001               	movlw	1
  3293  0774  07CE               	addwf	___flmul@prod,f
  3294  0775  3000               	movlw	0
  3295  0776  1803               	skipnc
  3296  0777  3001               	movlw	1
  3297  0778  07CF               	addwf	___flmul@prod+1,f
  3298  0779  3000               	movlw	0
  3299  077A  1803               	skipnc
  3300  077B  3001               	movlw	1
  3301  077C  07D0               	addwf	___flmul@prod+2,f
  3302  077D  3000               	movlw	0
  3303  077E  1803               	skipnc
  3304  077F  3001               	movlw	1
  3305  0780  07D1               	addwf	___flmul@prod+3,f
  3306  0781  1C51               	btfss	___flmul@prod+3,0
  3307  0782  2FA2               	goto	l1999
  3308  0783  084E               	movf	___flmul@prod,w
  3309  0784  00C2               	movwf	??___flmul
  3310  0785  084F               	movf	___flmul@prod+1,w
  3311  0786  00C3               	movwf	??___flmul+1
  3312  0787  0850               	movf	___flmul@prod+2,w
  3313  0788  00C4               	movwf	??___flmul+2
  3314  0789  0851               	movf	___flmul@prod+3,w
  3315  078A  00C5               	movwf	??___flmul+3
  3316  078B  3001               	movlw	1
  3317  078C  00C6               	movwf	??___flmul+4
  3318  078D                     u2645:	
  3319  078D  0D45               	rlf	??___flmul+3,w
  3320  078E  0CC5               	rrf	??___flmul+3,f
  3321  078F  0CC4               	rrf	??___flmul+2,f
  3322  0790  0CC3               	rrf	??___flmul+1,f
  3323  0791  0CC2               	rrf	??___flmul,f
  3324  0792  0BC6               	decfsz	??___flmul+4,f
  3325  0793  2F8D               	goto	u2645
  3326  0794  0845               	movf	??___flmul+3,w
  3327  0795  00D1               	movwf	___flmul@prod+3
  3328  0796  0844               	movf	??___flmul+2,w
  3329  0797  00D0               	movwf	___flmul@prod+2
  3330  0798  0843               	movf	??___flmul+1,w
  3331  0799  00CF               	movwf	___flmul@prod+1
  3332  079A  0842               	movf	??___flmul,w
  3333  079B  00CE               	movwf	___flmul@prod
  3334  079C  3001               	movlw	1
  3335  079D  07D2               	addwf	___flmul@temp,f
  3336  079E  1803               	skipnc
  3337  079F  0AD3               	incf	___flmul@temp+1,f
  3338  07A0  3000               	movlw	0
  3339  07A1  07D3               	addwf	___flmul@temp+1,f
  3340  07A2                     l1999:	
  3341  07A2  0853               	movf	___flmul@temp+1,w
  3342  07A3  3A80               	xorlw	128
  3343  07A4  00FF               	movwf	127
  3344  07A5  3080               	movlw	128
  3345  07A6  027F               	subwf	127,w
  3346  07A7  1D03               	skipz
  3347  07A8  2FAB               	goto	u2655
  3348  07A9  30FF               	movlw	255
  3349  07AA  0252               	subwf	___flmul@temp,w
  3350  07AB                     u2655:	
  3351  07AB  1C03               	skipc
  3352  07AC  2FB8               	goto	l2003
  3353  07AD  307F               	movlw	127
  3354  07AE  1283               	bcf	3,5	;RP0=0, select bank0
  3355  07AF  1303               	bcf	3,6	;RP1=0, select bank0
  3356  07B0  00D1               	movwf	___flmul@prod+3
  3357  07B1  3080               	movlw	128
  3358  07B2  00D0               	movwf	___flmul@prod+2
  3359  07B3  3000               	movlw	0
  3360  07B4  00CF               	movwf	___flmul@prod+1
  3361  07B5  3000               	movlw	0
  3362  07B6  00CE               	movwf	___flmul@prod
  3363  07B7  2FE8               	goto	l664
  3364  07B8                     l2003:	
  3365  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  3366  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  3367  07BA  0853               	movf	___flmul@temp+1,w
  3368  07BB  3A80               	xorlw	128
  3369  07BC  00FF               	movwf	127
  3370  07BD  3080               	movlw	128
  3371  07BE  027F               	subwf	127,w
  3372  07BF  1D03               	skipz
  3373  07C0  2FC3               	goto	u2665
  3374  07C1  3001               	movlw	1
  3375  07C2  0252               	subwf	___flmul@temp,w
  3376  07C3                     u2665:	
  3377  07C3  1803               	skipnc
  3378  07C4  2FD1               	goto	l2009
  3379  07C5  3000               	movlw	0
  3380  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  3381  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  3382  07C8  00D1               	movwf	___flmul@prod+3
  3383  07C9  3000               	movlw	0
  3384  07CA  00D0               	movwf	___flmul@prod+2
  3385  07CB  3000               	movlw	0
  3386  07CC  00CF               	movwf	___flmul@prod+1
  3387  07CD  3000               	movlw	0
  3388  07CE  00CE               	movwf	___flmul@prod
  3389  07CF  01C7               	clrf	___flmul@sign
  3390  07D0  2FE8               	goto	l664
  3391  07D1                     l2009:	
  3392  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  3393  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  3394  07D3  0852               	movf	___flmul@temp,w
  3395  07D4  00C2               	movwf	??___flmul
  3396  07D5  0842               	movf	??___flmul,w
  3397  07D6  00CD               	movwf	___flmul@bexp
  3398  07D7  30FF               	movlw	255
  3399  07D8  05CE               	andwf	___flmul@prod,f
  3400  07D9  30FF               	movlw	255
  3401  07DA  05CF               	andwf	___flmul@prod+1,f
  3402  07DB  307F               	movlw	127
  3403  07DC  05D0               	andwf	___flmul@prod+2,f
  3404  07DD  3000               	movlw	0
  3405  07DE  05D1               	andwf	___flmul@prod+3,f
  3406  07DF  184D               	btfsc	___flmul@bexp,0
  3407  07E0  17D0               	bsf	___flmul@prod+2,7
  3408  07E1  084D               	movf	___flmul@bexp,w
  3409  07E2  00C2               	movwf	??___flmul
  3410  07E3  1003               	clrc
  3411  07E4  0C42               	rrf	??___flmul,w
  3412  07E5  00C3               	movwf	??___flmul+1
  3413  07E6  0843               	movf	??___flmul+1,w
  3414  07E7  00D1               	movwf	___flmul@prod+3
  3415  07E8                     l664:	
  3416  07E8  0847               	movf	___flmul@sign,w
  3417  07E9  00C2               	movwf	??___flmul
  3418  07EA  0842               	movf	??___flmul,w
  3419  07EB  04D1               	iorwf	___flmul@prod+3,f
  3420  07EC  0851               	movf	___flmul@prod+3,w
  3421  07ED  00BD               	movwf	?___flmul+3
  3422  07EE  0850               	movf	___flmul@prod+2,w
  3423  07EF  00BC               	movwf	?___flmul+2
  3424  07F0  084F               	movf	___flmul@prod+1,w
  3425  07F1  00BB               	movwf	?___flmul+1
  3426  07F2  084E               	movf	___flmul@prod,w
  3427  07F3  00BA               	movwf	?___flmul
  3428  07F4  0008               	return
  3429  07F5                     __end_of___flmul:	
  3430                           
  3431                           	psect	text10
  3432  0A57                     __ptext10:	
  3433 ;; *************** function __Umul8_16 *****************
  3434 ;; Defined at:
  3435 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;  multiplier      1    wreg     unsigned char 
  3438 ;;  multiplicand    1    0[COMMON] unsigned char 
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;  multiplier      1    8[COMMON] unsigned char 
  3441 ;;  word_mpld       2    6[COMMON] unsigned int 
  3442 ;;  product         2    4[COMMON] unsigned int 
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  2    0[COMMON] unsigned int 
  3445 ;; Registers used:
  3446 ;;		wreg, status,2, status,0
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3452 ;;      Params:         2       0       0       0       0
  3453 ;;      Locals:         5       0       0       0       0
  3454 ;;      Temps:          2       0       0       0       0
  3455 ;;      Totals:         9       0       0       0       0
  3456 ;;Total ram usage:        9 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		___flmul
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           
  3466                           ;psect for function __Umul8_16
  3467  0A57                     __Umul8_16:	
  3468                           
  3469                           ;incstack = 0
  3470                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3471                           ;__Umul8_16@multiplier stored from wreg
  3472  0A57  00F8               	movwf	__Umul8_16@multiplier
  3473  0A58  01F4               	clrf	__Umul8_16@product
  3474  0A59  01F5               	clrf	__Umul8_16@product+1
  3475  0A5A  0870               	movf	__Umul8_16@multiplicand,w
  3476  0A5B  00F2               	movwf	??__Umul8_16
  3477  0A5C  01F3               	clrf	??__Umul8_16+1
  3478  0A5D  0872               	movf	??__Umul8_16,w
  3479  0A5E  00F6               	movwf	__Umul8_16@word_mpld
  3480  0A5F  0873               	movf	??__Umul8_16+1,w
  3481  0A60  00F7               	movwf	__Umul8_16@word_mpld+1
  3482  0A61                     l1683:	
  3483  0A61  1C78               	btfss	__Umul8_16@multiplier,0
  3484  0A62  2A69               	goto	l709
  3485  0A63  0876               	movf	__Umul8_16@word_mpld,w
  3486  0A64  07F4               	addwf	__Umul8_16@product,f
  3487  0A65  1803               	skipnc
  3488  0A66  0AF5               	incf	__Umul8_16@product+1,f
  3489  0A67  0877               	movf	__Umul8_16@word_mpld+1,w
  3490  0A68  07F5               	addwf	__Umul8_16@product+1,f
  3491  0A69                     l709:	
  3492  0A69  3001               	movlw	1
  3493  0A6A                     u1865:	
  3494  0A6A  1003               	clrc
  3495  0A6B  0DF6               	rlf	__Umul8_16@word_mpld,f
  3496  0A6C  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  3497  0A6D  3EFF               	addlw	-1
  3498  0A6E  1D03               	skipz
  3499  0A6F  2A6A               	goto	u1865
  3500  0A70  1003               	clrc
  3501  0A71  0CF8               	rrf	__Umul8_16@multiplier,f
  3502  0A72  0878               	movf	__Umul8_16@multiplier,w
  3503  0A73  1D03               	btfss	3,2
  3504  0A74  2A61               	goto	l1683
  3505  0A75  0875               	movf	__Umul8_16@product+1,w
  3506  0A76  00F1               	movwf	?__Umul8_16+1
  3507  0A77  0874               	movf	__Umul8_16@product,w
  3508  0A78  00F0               	movwf	?__Umul8_16
  3509  0A79  0008               	return
  3510  0A7A                     __end_of__Umul8_16:	
  3511                           
  3512                           	psect	text11
  3513  010E                     __ptext11:	
  3514 ;; *************** function ___fldiv *****************
  3515 ;; Defined at:
  3516 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;  a               4    0[BANK0 ] unsigned int 
  3519 ;;  b               4    4[BANK0 ] unsigned int 
  3520 ;; Auto vars:     Size  Location     Type
  3521 ;;  grs             4   20[BANK0 ] unsigned long 
  3522 ;;  rem             4   13[BANK0 ] unsigned long 
  3523 ;;  new_exp         2   18[BANK0 ] int 
  3524 ;;  aexp            1   25[BANK0 ] unsigned char 
  3525 ;;  bexp            1   24[BANK0 ] unsigned char 
  3526 ;;  sign            1   17[BANK0 ] unsigned char 
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  4    0[BANK0 ] unsigned char 
  3529 ;; Registers used:
  3530 ;;		wreg, status,2, status,0, btemp+1
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3536 ;;      Params:         0       8       0       0       0
  3537 ;;      Locals:         0      13       0       0       0
  3538 ;;      Temps:          0       5       0       0       0
  3539 ;;      Totals:         0      26       0       0       0
  3540 ;;Total ram usage:       26 bytes
  3541 ;; Hardware stack levels used:    1
  3542 ;; This function calls:
  3543 ;;		Nothing
  3544 ;; This function is called by:
  3545 ;;		_setDuty
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           
  3550                           ;psect for function ___fldiv
  3551  010E                     ___fldiv:	
  3552                           
  3553                           ;incstack = 0
  3554                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  3555  010E  1283               	bcf	3,5	;RP0=0, select bank0
  3556  010F  1303               	bcf	3,6	;RP1=0, select bank0
  3557  0110  0827               	movf	___fldiv@b+3,w
  3558  0111  3980               	andlw	128
  3559  0112  00A8               	movwf	??___fldiv
  3560  0113  0828               	movf	??___fldiv,w
  3561  0114  00B1               	movwf	___fldiv@sign
  3562  0115  0827               	movf	___fldiv@b+3,w
  3563  0116  00A8               	movwf	??___fldiv
  3564  0117  0728               	addwf	??___fldiv,w
  3565  0118  00A9               	movwf	??___fldiv+1
  3566  0119  0829               	movf	??___fldiv+1,w
  3567  011A  00B8               	movwf	___fldiv@bexp
  3568  011B  1BA6               	btfsc	___fldiv@b+2,7
  3569  011C  1438               	bsf	___fldiv@bexp,0
  3570  011D  0838               	movf	___fldiv@bexp,w
  3571  011E  1903               	btfsc	3,2
  3572  011F  292E               	goto	l1757
  3573  0120  0A38               	incf	___fldiv@bexp,w
  3574  0121  1D03               	btfss	3,2
  3575  0122  292B               	goto	l1753
  3576  0123  3000               	movlw	0
  3577  0124  00A7               	movwf	___fldiv@b+3
  3578  0125  3000               	movlw	0
  3579  0126  00A6               	movwf	___fldiv@b+2
  3580  0127  3000               	movlw	0
  3581  0128  00A5               	movwf	___fldiv@b+1
  3582  0129  3000               	movlw	0
  3583  012A  00A4               	movwf	___fldiv@b
  3584  012B                     l1753:	
  3585  012B  17A6               	bsf	___fldiv@b+2,7
  3586  012C  01A7               	clrf	___fldiv@b+3
  3587  012D  2936               	goto	l1759
  3588  012E                     l1757:	
  3589  012E  3000               	movlw	0
  3590  012F  00A7               	movwf	___fldiv@b+3
  3591  0130  3000               	movlw	0
  3592  0131  00A6               	movwf	___fldiv@b+2
  3593  0132  3000               	movlw	0
  3594  0133  00A5               	movwf	___fldiv@b+1
  3595  0134  3000               	movlw	0
  3596  0135  00A4               	movwf	___fldiv@b
  3597  0136                     l1759:	
  3598  0136  0823               	movf	___fldiv@a+3,w
  3599  0137  3980               	andlw	128
  3600  0138  00A8               	movwf	??___fldiv
  3601  0139  0828               	movf	??___fldiv,w
  3602  013A  06B1               	xorwf	___fldiv@sign,f
  3603  013B  0823               	movf	___fldiv@a+3,w
  3604  013C  00A8               	movwf	??___fldiv
  3605  013D  0728               	addwf	??___fldiv,w
  3606  013E  00A9               	movwf	??___fldiv+1
  3607  013F  0829               	movf	??___fldiv+1,w
  3608  0140  00B9               	movwf	___fldiv@aexp
  3609  0141  1BA2               	btfsc	___fldiv@a+2,7
  3610  0142  1439               	bsf	___fldiv@aexp,0
  3611  0143  0839               	movf	___fldiv@aexp,w
  3612  0144  1903               	btfsc	3,2
  3613  0145  2954               	goto	l1777
  3614  0146  0A39               	incf	___fldiv@aexp,w
  3615  0147  1D03               	btfss	3,2
  3616  0148  2951               	goto	l1773
  3617  0149  3000               	movlw	0
  3618  014A  00A3               	movwf	___fldiv@a+3
  3619  014B  3000               	movlw	0
  3620  014C  00A2               	movwf	___fldiv@a+2
  3621  014D  3000               	movlw	0
  3622  014E  00A1               	movwf	___fldiv@a+1
  3623  014F  3000               	movlw	0
  3624  0150  00A0               	movwf	___fldiv@a
  3625  0151                     l1773:	
  3626  0151  17A2               	bsf	___fldiv@a+2,7
  3627  0152  01A3               	clrf	___fldiv@a+3
  3628  0153  295C               	goto	l612
  3629  0154                     l1777:	
  3630  0154  3000               	movlw	0
  3631  0155  00A3               	movwf	___fldiv@a+3
  3632  0156  3000               	movlw	0
  3633  0157  00A2               	movwf	___fldiv@a+2
  3634  0158  3000               	movlw	0
  3635  0159  00A1               	movwf	___fldiv@a+1
  3636  015A  3000               	movlw	0
  3637  015B  00A0               	movwf	___fldiv@a
  3638  015C                     l612:	
  3639  015C  0823               	movf	___fldiv@a+3,w
  3640  015D  0422               	iorwf	___fldiv@a+2,w
  3641  015E  0421               	iorwf	___fldiv@a+1,w
  3642  015F  0420               	iorwf	___fldiv@a,w
  3643  0160  1D03               	skipz
  3644  0161  297B               	goto	l1787
  3645  0162  3000               	movlw	0
  3646  0163  00A7               	movwf	___fldiv@b+3
  3647  0164  3000               	movlw	0
  3648  0165  00A6               	movwf	___fldiv@b+2
  3649  0166  3000               	movlw	0
  3650  0167  00A5               	movwf	___fldiv@b+1
  3651  0168  3000               	movlw	0
  3652  0169  00A4               	movwf	___fldiv@b
  3653  016A  3080               	movlw	128
  3654  016B  04A6               	iorwf	___fldiv@b+2,f
  3655  016C  307F               	movlw	127
  3656  016D  04A7               	iorwf	___fldiv@b+3,f
  3657  016E                     L2:	
  3658  016E  0831               	movf	___fldiv@sign,w
  3659  016F  00A8               	movwf	??___fldiv
  3660  0170  0828               	movf	??___fldiv,w
  3661  0171  04A7               	iorwf	___fldiv@b+3,f
  3662  0172  0827               	movf	___fldiv@b+3,w
  3663  0173  00A3               	movwf	?___fldiv+3
  3664  0174  0826               	movf	___fldiv@b+2,w
  3665  0175  00A2               	movwf	?___fldiv+2
  3666  0176  0825               	movf	___fldiv@b+1,w
  3667  0177  00A1               	movwf	?___fldiv+1
  3668  0178  0824               	movf	___fldiv@b,w
  3669  0179  00A0               	movwf	?___fldiv
  3670  017A  0008               	return
  3671  017B                     l1787:	
  3672  017B  0838               	movf	___fldiv@bexp,w
  3673  017C  1D03               	btfss	3,2
  3674  017D  2987               	goto	l1793
  3675  017E  3000               	movlw	0
  3676  017F  00A3               	movwf	?___fldiv+3
  3677  0180  3000               	movlw	0
  3678  0181  00A2               	movwf	?___fldiv+2
  3679  0182  3000               	movlw	0
  3680  0183  00A1               	movwf	?___fldiv+1
  3681  0184  3000               	movlw	0
  3682  0185  00A0               	movwf	?___fldiv
  3683  0186  0008               	return
  3684  0187                     l1793:	
  3685  0187  0838               	movf	___fldiv@bexp,w
  3686  0188  00A8               	movwf	??___fldiv
  3687  0189  01A9               	clrf	??___fldiv+1
  3688  018A  0829               	movf	??___fldiv+1,w
  3689  018B  00AB               	movwf	??___fldiv+3
  3690  018C  0839               	movf	___fldiv@aexp,w
  3691  018D  0228               	subwf	??___fldiv,w
  3692  018E  00AA               	movwf	??___fldiv+2
  3693  018F  1C03               	skipc
  3694  0190  03AB               	decf	??___fldiv+3,f
  3695  0191  082A               	movf	??___fldiv+2,w
  3696  0192  3E7F               	addlw	127
  3697  0193  00B2               	movwf	___fldiv@new_exp
  3698  0194  082B               	movf	??___fldiv+3,w
  3699  0195  1803               	skipnc
  3700  0196  3E01               	addlw	1
  3701  0197  3E00               	addlw	0
  3702  0198  00B3               	movwf	___fldiv@new_exp+1
  3703  0199  0827               	movf	___fldiv@b+3,w
  3704  019A  00B0               	movwf	___fldiv@rem+3
  3705  019B  0826               	movf	___fldiv@b+2,w
  3706  019C  00AF               	movwf	___fldiv@rem+2
  3707  019D  0825               	movf	___fldiv@b+1,w
  3708  019E  00AE               	movwf	___fldiv@rem+1
  3709  019F  0824               	movf	___fldiv@b,w
  3710  01A0  00AD               	movwf	___fldiv@rem
  3711  01A1  3000               	movlw	0
  3712  01A2  00A7               	movwf	___fldiv@b+3
  3713  01A3  3000               	movlw	0
  3714  01A4  00A6               	movwf	___fldiv@b+2
  3715  01A5  3000               	movlw	0
  3716  01A6  00A5               	movwf	___fldiv@b+1
  3717  01A7  3000               	movlw	0
  3718  01A8  00A4               	movwf	___fldiv@b
  3719  01A9  3000               	movlw	0
  3720  01AA  00B7               	movwf	___fldiv@grs+3
  3721  01AB  3000               	movlw	0
  3722  01AC  00B6               	movwf	___fldiv@grs+2
  3723  01AD  3000               	movlw	0
  3724  01AE  00B5               	movwf	___fldiv@grs+1
  3725  01AF  3000               	movlw	0
  3726  01B0  00B4               	movwf	___fldiv@grs
  3727  01B1  01B9               	clrf	___fldiv@aexp
  3728  01B2                     l1821:	
  3729  01B2  301A               	movlw	26
  3730  01B3  0239               	subwf	___fldiv@aexp,w
  3731  01B4  1803               	btfsc	3,0
  3732  01B5  29FA               	goto	l1823
  3733  01B6  0839               	movf	___fldiv@aexp,w
  3734  01B7  1903               	btfsc	3,2
  3735  01B8  29D6               	goto	l1813
  3736  01B9  3001               	movlw	1
  3737  01BA  00A8               	movwf	??___fldiv
  3738  01BB                     u2115:	
  3739  01BB  1003               	clrc
  3740  01BC  0DAD               	rlf	___fldiv@rem,f
  3741  01BD  0DAE               	rlf	___fldiv@rem+1,f
  3742  01BE  0DAF               	rlf	___fldiv@rem+2,f
  3743  01BF  0DB0               	rlf	___fldiv@rem+3,f
  3744  01C0  0BA8               	decfsz	??___fldiv,f
  3745  01C1  29BB               	goto	u2115
  3746  01C2  3001               	movlw	1
  3747  01C3  00A8               	movwf	??___fldiv
  3748  01C4                     u2125:	
  3749  01C4  1003               	clrc
  3750  01C5  0DA4               	rlf	___fldiv@b,f
  3751  01C6  0DA5               	rlf	___fldiv@b+1,f
  3752  01C7  0DA6               	rlf	___fldiv@b+2,f
  3753  01C8  0DA7               	rlf	___fldiv@b+3,f
  3754  01C9  0BA8               	decfsz	??___fldiv,f
  3755  01CA  29C4               	goto	u2125
  3756  01CB  1BB7               	btfsc	___fldiv@grs+3,7
  3757  01CC  1424               	bsf	___fldiv@b,0
  3758  01CD  3001               	movlw	1
  3759  01CE  00A8               	movwf	??___fldiv
  3760  01CF                     u2145:	
  3761  01CF  1003               	clrc
  3762  01D0  0DB4               	rlf	___fldiv@grs,f
  3763  01D1  0DB5               	rlf	___fldiv@grs+1,f
  3764  01D2  0DB6               	rlf	___fldiv@grs+2,f
  3765  01D3  0DB7               	rlf	___fldiv@grs+3,f
  3766  01D4  0BA8               	decfsz	??___fldiv,f
  3767  01D5  29CF               	goto	u2145
  3768  01D6                     l1813:	
  3769  01D6  0823               	movf	___fldiv@a+3,w
  3770  01D7  0230               	subwf	___fldiv@rem+3,w
  3771  01D8  1D03               	skipz
  3772  01D9  29E4               	goto	u2155
  3773  01DA  0822               	movf	___fldiv@a+2,w
  3774  01DB  022F               	subwf	___fldiv@rem+2,w
  3775  01DC  1D03               	skipz
  3776  01DD  29E4               	goto	u2155
  3777  01DE  0821               	movf	___fldiv@a+1,w
  3778  01DF  022E               	subwf	___fldiv@rem+1,w
  3779  01E0  1D03               	skipz
  3780  01E1  29E4               	goto	u2155
  3781  01E2  0820               	movf	___fldiv@a,w
  3782  01E3  022D               	subwf	___fldiv@rem,w
  3783  01E4                     u2155:	
  3784  01E4  1C03               	skipc
  3785  01E5  29F5               	goto	l1819
  3786  01E6  1737               	bsf	___fldiv@grs+3,6
  3787  01E7  0820               	movf	___fldiv@a,w
  3788  01E8  02AD               	subwf	___fldiv@rem,f
  3789  01E9  0821               	movf	___fldiv@a+1,w
  3790  01EA  1C03               	skipc
  3791  01EB  0F21               	incfsz	___fldiv@a+1,w
  3792  01EC  02AE               	subwf	___fldiv@rem+1,f
  3793  01ED  0822               	movf	___fldiv@a+2,w
  3794  01EE  1C03               	skipc
  3795  01EF  0F22               	incfsz	___fldiv@a+2,w
  3796  01F0  02AF               	subwf	___fldiv@rem+2,f
  3797  01F1  0823               	movf	___fldiv@a+3,w
  3798  01F2  1C03               	skipc
  3799  01F3  0F23               	incfsz	___fldiv@a+3,w
  3800  01F4  02B0               	subwf	___fldiv@rem+3,f
  3801  01F5                     l1819:	
  3802  01F5  3001               	movlw	1
  3803  01F6  00A8               	movwf	??___fldiv
  3804  01F7  0828               	movf	??___fldiv,w
  3805  01F8  07B9               	addwf	___fldiv@aexp,f
  3806  01F9  29B2               	goto	l1821
  3807  01FA                     l1823:	
  3808  01FA  0830               	movf	___fldiv@rem+3,w
  3809  01FB  042F               	iorwf	___fldiv@rem+2,w
  3810  01FC  042E               	iorwf	___fldiv@rem+1,w
  3811  01FD  042D               	iorwf	___fldiv@rem,w
  3812  01FE  1D03               	btfss	3,2
  3813  01FF  1434               	bsf	___fldiv@grs,0
  3814  0200                     l1837:	
  3815  0200  1BA6               	btfsc	___fldiv@b+2,7
  3816  0201  2A1D               	goto	l1839
  3817  0202  3001               	movlw	1
  3818  0203  00A8               	movwf	??___fldiv
  3819  0204                     u2185:	
  3820  0204  1003               	clrc
  3821  0205  0DA4               	rlf	___fldiv@b,f
  3822  0206  0DA5               	rlf	___fldiv@b+1,f
  3823  0207  0DA6               	rlf	___fldiv@b+2,f
  3824  0208  0DA7               	rlf	___fldiv@b+3,f
  3825  0209  0BA8               	decfsz	??___fldiv,f
  3826  020A  2A04               	goto	u2185
  3827  020B  1BB7               	btfsc	___fldiv@grs+3,7
  3828  020C  1424               	bsf	___fldiv@b,0
  3829  020D  3001               	movlw	1
  3830  020E  00A8               	movwf	??___fldiv
  3831  020F                     u2205:	
  3832  020F  1003               	clrc
  3833  0210  0DB4               	rlf	___fldiv@grs,f
  3834  0211  0DB5               	rlf	___fldiv@grs+1,f
  3835  0212  0DB6               	rlf	___fldiv@grs+2,f
  3836  0213  0DB7               	rlf	___fldiv@grs+3,f
  3837  0214  0BA8               	decfsz	??___fldiv,f
  3838  0215  2A0F               	goto	u2205
  3839  0216  30FF               	movlw	255
  3840  0217  07B2               	addwf	___fldiv@new_exp,f
  3841  0218  1803               	skipnc
  3842  0219  0AB3               	incf	___fldiv@new_exp+1,f
  3843  021A  30FF               	movlw	255
  3844  021B  07B3               	addwf	___fldiv@new_exp+1,f
  3845  021C  2A00               	goto	l1837
  3846  021D                     l1839:	
  3847  021D  01B9               	clrf	___fldiv@aexp
  3848  021E  1FB7               	btfss	___fldiv@grs+3,7
  3849  021F  2A36               	goto	l1849
  3850  0220  30FF               	movlw	255
  3851  0221  0534               	andwf	___fldiv@grs,w
  3852  0222  00A8               	movwf	??___fldiv
  3853  0223  30FF               	movlw	255
  3854  0224  0535               	andwf	___fldiv@grs+1,w
  3855  0225  00A9               	movwf	??___fldiv+1
  3856  0226  30FF               	movlw	255
  3857  0227  0536               	andwf	___fldiv@grs+2,w
  3858  0228  00AA               	movwf	??___fldiv+2
  3859  0229  307F               	movlw	127
  3860  022A  0537               	andwf	___fldiv@grs+3,w
  3861  022B  00AB               	movwf	??___fldiv+3
  3862  022C  082B               	movf	??___fldiv+3,w
  3863  022D  042A               	iorwf	??___fldiv+2,w
  3864  022E  0429               	iorwf	??___fldiv+1,w
  3865  022F  0428               	iorwf	??___fldiv,w
  3866  0230  1903               	skipnz
  3867  0231  1824               	btfsc	___fldiv@b,0
  3868  0232  2A34               	goto	l1845
  3869  0233  2A36               	goto	l1849
  3870  0234                     l1845:	
  3871  0234  01B9               	clrf	___fldiv@aexp
  3872  0235  0AB9               	incf	___fldiv@aexp,f
  3873  0236                     l1849:	
  3874  0236  0839               	movf	___fldiv@aexp,w
  3875  0237  1903               	btfsc	3,2
  3876  0238  2A68               	goto	l1859
  3877  0239  3001               	movlw	1
  3878  023A  07A4               	addwf	___fldiv@b,f
  3879  023B  3000               	movlw	0
  3880  023C  1803               	skipnc
  3881  023D  3001               	movlw	1
  3882  023E  07A5               	addwf	___fldiv@b+1,f
  3883  023F  3000               	movlw	0
  3884  0240  1803               	skipnc
  3885  0241  3001               	movlw	1
  3886  0242  07A6               	addwf	___fldiv@b+2,f
  3887  0243  3000               	movlw	0
  3888  0244  1803               	skipnc
  3889  0245  3001               	movlw	1
  3890  0246  07A7               	addwf	___fldiv@b+3,f
  3891  0247  1C27               	btfss	___fldiv@b+3,0
  3892  0248  2A68               	goto	l1859
  3893  0249  0824               	movf	___fldiv@b,w
  3894  024A  00A8               	movwf	??___fldiv
  3895  024B  0825               	movf	___fldiv@b+1,w
  3896  024C  00A9               	movwf	??___fldiv+1
  3897  024D  0826               	movf	___fldiv@b+2,w
  3898  024E  00AA               	movwf	??___fldiv+2
  3899  024F  0827               	movf	___fldiv@b+3,w
  3900  0250  00AB               	movwf	??___fldiv+3
  3901  0251  3001               	movlw	1
  3902  0252  00AC               	movwf	??___fldiv+4
  3903  0253                     u2275:	
  3904  0253  0D2B               	rlf	??___fldiv+3,w
  3905  0254  0CAB               	rrf	??___fldiv+3,f
  3906  0255  0CAA               	rrf	??___fldiv+2,f
  3907  0256  0CA9               	rrf	??___fldiv+1,f
  3908  0257  0CA8               	rrf	??___fldiv,f
  3909  0258  0BAC               	decfsz	??___fldiv+4,f
  3910  0259  2A53               	goto	u2275
  3911  025A  082B               	movf	??___fldiv+3,w
  3912  025B  00A7               	movwf	___fldiv@b+3
  3913  025C  082A               	movf	??___fldiv+2,w
  3914  025D  00A6               	movwf	___fldiv@b+2
  3915  025E  0829               	movf	??___fldiv+1,w
  3916  025F  00A5               	movwf	___fldiv@b+1
  3917  0260  0828               	movf	??___fldiv,w
  3918  0261  00A4               	movwf	___fldiv@b
  3919  0262  3001               	movlw	1
  3920  0263  07B2               	addwf	___fldiv@new_exp,f
  3921  0264  1803               	skipnc
  3922  0265  0AB3               	incf	___fldiv@new_exp+1,f
  3923  0266  3000               	movlw	0
  3924  0267  07B3               	addwf	___fldiv@new_exp+1,f
  3925  0268                     l1859:	
  3926  0268  0833               	movf	___fldiv@new_exp+1,w
  3927  0269  3A80               	xorlw	128
  3928  026A  00FF               	movwf	127
  3929  026B  3080               	movlw	128
  3930  026C  027F               	subwf	127,w
  3931  026D  1D03               	skipz
  3932  026E  2A71               	goto	u2285
  3933  026F  30FF               	movlw	255
  3934  0270  0232               	subwf	___fldiv@new_exp,w
  3935  0271                     u2285:	
  3936  0271  1C03               	skipc
  3937  0272  2A81               	goto	l1863
  3938  0273  30FF               	movlw	255
  3939  0274  1283               	bcf	3,5	;RP0=0, select bank0
  3940  0275  1303               	bcf	3,6	;RP1=0, select bank0
  3941  0276  00B2               	movwf	___fldiv@new_exp
  3942  0277  3000               	movlw	0
  3943  0278  00B3               	movwf	___fldiv@new_exp+1
  3944  0279  3000               	movlw	0
  3945  027A  00A7               	movwf	___fldiv@b+3
  3946  027B  3000               	movlw	0
  3947  027C  00A6               	movwf	___fldiv@b+2
  3948  027D  3000               	movlw	0
  3949  027E  00A5               	movwf	___fldiv@b+1
  3950  027F  3000               	movlw	0
  3951  0280  00A4               	movwf	___fldiv@b
  3952  0281                     l1863:	
  3953  0281  1283               	bcf	3,5	;RP0=0, select bank0
  3954  0282  1303               	bcf	3,6	;RP1=0, select bank0
  3955  0283  0833               	movf	___fldiv@new_exp+1,w
  3956  0284  3A80               	xorlw	128
  3957  0285  00FF               	movwf	127
  3958  0286  3080               	movlw	128
  3959  0287  027F               	subwf	127,w
  3960  0288  1D03               	skipz
  3961  0289  2A8C               	goto	u2295
  3962  028A  3001               	movlw	1
  3963  028B  0232               	subwf	___fldiv@new_exp,w
  3964  028C                     u2295:	
  3965  028C  1803               	skipnc
  3966  028D  2A9B               	goto	l634
  3967  028E  1283               	bcf	3,5	;RP0=0, select bank0
  3968  028F  1303               	bcf	3,6	;RP1=0, select bank0
  3969  0290  01B2               	clrf	___fldiv@new_exp
  3970  0291  01B3               	clrf	___fldiv@new_exp+1
  3971  0292  3000               	movlw	0
  3972  0293  00A7               	movwf	___fldiv@b+3
  3973  0294  3000               	movlw	0
  3974  0295  00A6               	movwf	___fldiv@b+2
  3975  0296  3000               	movlw	0
  3976  0297  00A5               	movwf	___fldiv@b+1
  3977  0298  3000               	movlw	0
  3978  0299  00A4               	movwf	___fldiv@b
  3979  029A  01B1               	clrf	___fldiv@sign
  3980  029B                     l634:	
  3981  029B  1283               	bcf	3,5	;RP0=0, select bank0
  3982  029C  1303               	bcf	3,6	;RP1=0, select bank0
  3983  029D  0832               	movf	___fldiv@new_exp,w
  3984  029E  00A8               	movwf	??___fldiv
  3985  029F  0828               	movf	??___fldiv,w
  3986  02A0  00B8               	movwf	___fldiv@bexp
  3987  02A1  1C38               	btfss	___fldiv@bexp,0
  3988  02A2  2AA5               	goto	l1875
  3989  02A3  17A6               	bsf	___fldiv@b+2,7
  3990  02A4  2AA9               	goto	l636
  3991  02A5                     l1875:	
  3992  02A5  307F               	movlw	127
  3993  02A6  00A8               	movwf	??___fldiv
  3994  02A7  0828               	movf	??___fldiv,w
  3995  02A8  05A6               	andwf	___fldiv@b+2,f
  3996  02A9                     l636:	
  3997  02A9  0838               	movf	___fldiv@bexp,w
  3998  02AA  00A8               	movwf	??___fldiv
  3999  02AB  1003               	clrc
  4000  02AC  0C28               	rrf	??___fldiv,w
  4001  02AD  00A9               	movwf	??___fldiv+1
  4002  02AE  0829               	movf	??___fldiv+1,w
  4003  02AF  00A7               	movwf	___fldiv@b+3
  4004  02B0  296E               	goto	L2
  4005  02B1                     __end_of___fldiv:	
  4006                           
  4007                           	psect	text12
  4008  02B1                     __ptext12:	
  4009 ;; *************** function ___fladd *****************
  4010 ;; Defined at:
  4011 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;  b               4   52[BANK0 ] unsigned char 
  4014 ;;  a               4   56[BANK0 ] unsigned char 
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;  grs             1   71[BANK0 ] unsigned char 
  4017 ;;  bexp            1   70[BANK0 ] unsigned char 
  4018 ;;  aexp            1   69[BANK0 ] unsigned char 
  4019 ;;  signs           1   68[BANK0 ] unsigned char 
  4020 ;; Return value:  Size  Location     Type
  4021 ;;                  4   52[BANK0 ] unsigned char 
  4022 ;; Registers used:
  4023 ;;		wreg, status,2, status,0, btemp+1
  4024 ;; Tracked objects:
  4025 ;;		On entry : 0/0
  4026 ;;		On exit  : 0/0
  4027 ;;		Unchanged: 0/0
  4028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4029 ;;      Params:         0       8       0       0       0
  4030 ;;      Locals:         0       4       0       0       0
  4031 ;;      Temps:          0       8       0       0       0
  4032 ;;      Totals:         0      20       0       0       0
  4033 ;;Total ram usage:       20 bytes
  4034 ;; Hardware stack levels used:    1
  4035 ;; This function calls:
  4036 ;;		Nothing
  4037 ;; This function is called by:
  4038 ;;		_setAngule1
  4039 ;;		_setAngule2
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           
  4044                           ;psect for function ___fladd
  4045  02B1                     ___fladd:	
  4046                           
  4047                           ;incstack = 0
  4048                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  4049  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  4050  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  4051  02B3  0857               	movf	___fladd@b+3,w
  4052  02B4  3980               	andlw	128
  4053  02B5  00DC               	movwf	??___fladd
  4054  02B6  085C               	movf	??___fladd,w
  4055  02B7  00E4               	movwf	___fladd@signs
  4056  02B8  0857               	movf	___fladd@b+3,w
  4057  02B9  00DC               	movwf	??___fladd
  4058  02BA  075C               	addwf	??___fladd,w
  4059  02BB  00DD               	movwf	??___fladd+1
  4060  02BC  085D               	movf	??___fladd+1,w
  4061  02BD  00E6               	movwf	___fladd@bexp
  4062  02BE  1BD6               	btfsc	___fladd@b+2,7
  4063  02BF  1466               	bsf	___fladd@bexp,0
  4064  02C0  0866               	movf	___fladd@bexp,w
  4065  02C1  1903               	btfsc	3,2
  4066  02C2  2AD1               	goto	l2175
  4067  02C3  0A66               	incf	___fladd@bexp,w
  4068  02C4  1D03               	btfss	3,2
  4069  02C5  2ACE               	goto	l2171
  4070  02C6  3000               	movlw	0
  4071  02C7  00D7               	movwf	___fladd@b+3
  4072  02C8  3000               	movlw	0
  4073  02C9  00D6               	movwf	___fladd@b+2
  4074  02CA  3000               	movlw	0
  4075  02CB  00D5               	movwf	___fladd@b+1
  4076  02CC  3000               	movlw	0
  4077  02CD  00D4               	movwf	___fladd@b
  4078  02CE                     l2171:	
  4079  02CE  17D6               	bsf	___fladd@b+2,7
  4080  02CF  01D7               	clrf	___fladd@b+3
  4081  02D0  2AD9               	goto	l2177
  4082  02D1                     l2175:	
  4083  02D1  3000               	movlw	0
  4084  02D2  00D7               	movwf	___fladd@b+3
  4085  02D3  3000               	movlw	0
  4086  02D4  00D6               	movwf	___fladd@b+2
  4087  02D5  3000               	movlw	0
  4088  02D6  00D5               	movwf	___fladd@b+1
  4089  02D7  3000               	movlw	0
  4090  02D8  00D4               	movwf	___fladd@b
  4091  02D9                     l2177:	
  4092  02D9  085B               	movf	___fladd@a+3,w
  4093  02DA  3980               	andlw	128
  4094  02DB  00DC               	movwf	??___fladd
  4095  02DC  085C               	movf	??___fladd,w
  4096  02DD  00E5               	movwf	___fladd@aexp
  4097  02DE  0865               	movf	___fladd@aexp,w
  4098  02DF  0664               	xorwf	___fladd@signs,w
  4099  02E0  1D03               	btfss	3,2
  4100  02E1  1764               	bsf	___fladd@signs,6
  4101  02E2  085B               	movf	___fladd@a+3,w
  4102  02E3  00DC               	movwf	??___fladd
  4103  02E4  075C               	addwf	??___fladd,w
  4104  02E5  00DD               	movwf	??___fladd+1
  4105  02E6  085D               	movf	??___fladd+1,w
  4106  02E7  00E5               	movwf	___fladd@aexp
  4107  02E8  1BDA               	btfsc	___fladd@a+2,7
  4108  02E9  1465               	bsf	___fladd@aexp,0
  4109  02EA  0865               	movf	___fladd@aexp,w
  4110  02EB  1903               	btfsc	3,2
  4111  02EC  2AFB               	goto	l2199
  4112  02ED  0A65               	incf	___fladd@aexp,w
  4113  02EE  1D03               	btfss	3,2
  4114  02EF  2AF8               	goto	l2195
  4115  02F0  3000               	movlw	0
  4116  02F1  00DB               	movwf	___fladd@a+3
  4117  02F2  3000               	movlw	0
  4118  02F3  00DA               	movwf	___fladd@a+2
  4119  02F4  3000               	movlw	0
  4120  02F5  00D9               	movwf	___fladd@a+1
  4121  02F6  3000               	movlw	0
  4122  02F7  00D8               	movwf	___fladd@a
  4123  02F8                     l2195:	
  4124  02F8  17DA               	bsf	___fladd@a+2,7
  4125  02F9  01DB               	clrf	___fladd@a+3
  4126  02FA  2B03               	goto	l556
  4127  02FB                     l2199:	
  4128  02FB  3000               	movlw	0
  4129  02FC  00DB               	movwf	___fladd@a+3
  4130  02FD  3000               	movlw	0
  4131  02FE  00DA               	movwf	___fladd@a+2
  4132  02FF  3000               	movlw	0
  4133  0300  00D9               	movwf	___fladd@a+1
  4134  0301  3000               	movlw	0
  4135  0302  00D8               	movwf	___fladd@a
  4136  0303                     l556:	
  4137  0303  0866               	movf	___fladd@bexp,w
  4138  0304  0265               	subwf	___fladd@aexp,w
  4139  0305  1803               	skipnc
  4140  0306  2B49               	goto	l2235
  4141  0307  1F64               	btfss	___fladd@signs,6
  4142  0308  2B0D               	goto	l2205
  4143  0309  3080               	movlw	128
  4144  030A  00DC               	movwf	??___fladd
  4145  030B  085C               	movf	??___fladd,w
  4146  030C  06E4               	xorwf	___fladd@signs,f
  4147  030D                     l2205:	
  4148  030D  0866               	movf	___fladd@bexp,w
  4149  030E  00DC               	movwf	??___fladd
  4150  030F  085C               	movf	??___fladd,w
  4151  0310  00E7               	movwf	___fladd@grs
  4152  0311  0865               	movf	___fladd@aexp,w
  4153  0312  00DC               	movwf	??___fladd
  4154  0313  085C               	movf	??___fladd,w
  4155  0314  00E6               	movwf	___fladd@bexp
  4156  0315  0867               	movf	___fladd@grs,w
  4157  0316  00DC               	movwf	??___fladd
  4158  0317  085C               	movf	??___fladd,w
  4159  0318  00E5               	movwf	___fladd@aexp
  4160  0319  0854               	movf	___fladd@b,w
  4161  031A  00DC               	movwf	??___fladd
  4162  031B  085C               	movf	??___fladd,w
  4163  031C  00E7               	movwf	___fladd@grs
  4164  031D  0858               	movf	___fladd@a,w
  4165  031E  00DC               	movwf	??___fladd
  4166  031F  085C               	movf	??___fladd,w
  4167  0320  00D4               	movwf	___fladd@b
  4168  0321  0867               	movf	___fladd@grs,w
  4169  0322  00DC               	movwf	??___fladd
  4170  0323  085C               	movf	??___fladd,w
  4171  0324  00D8               	movwf	___fladd@a
  4172  0325  0855               	movf	___fladd@b+1,w
  4173  0326  00DC               	movwf	??___fladd
  4174  0327  085C               	movf	??___fladd,w
  4175  0328  00E7               	movwf	___fladd@grs
  4176  0329  0859               	movf	___fladd@a+1,w
  4177  032A  00DC               	movwf	??___fladd
  4178  032B  085C               	movf	??___fladd,w
  4179  032C  00D5               	movwf	___fladd@b+1
  4180  032D  0867               	movf	___fladd@grs,w
  4181  032E  00DC               	movwf	??___fladd
  4182  032F  085C               	movf	??___fladd,w
  4183  0330  00D9               	movwf	___fladd@a+1
  4184  0331  0856               	movf	___fladd@b+2,w
  4185  0332  00DC               	movwf	??___fladd
  4186  0333  085C               	movf	??___fladd,w
  4187  0334  00E7               	movwf	___fladd@grs
  4188  0335  085A               	movf	___fladd@a+2,w
  4189  0336  00DC               	movwf	??___fladd
  4190  0337  085C               	movf	??___fladd,w
  4191  0338  00D6               	movwf	___fladd@b+2
  4192  0339  0867               	movf	___fladd@grs,w
  4193  033A  00DC               	movwf	??___fladd
  4194  033B  085C               	movf	??___fladd,w
  4195  033C  00DA               	movwf	___fladd@a+2
  4196  033D  0857               	movf	___fladd@b+3,w
  4197  033E  00DC               	movwf	??___fladd
  4198  033F  085C               	movf	??___fladd,w
  4199  0340  00E7               	movwf	___fladd@grs
  4200  0341  085B               	movf	___fladd@a+3,w
  4201  0342  00DC               	movwf	??___fladd
  4202  0343  085C               	movf	??___fladd,w
  4203  0344  00D7               	movwf	___fladd@b+3
  4204  0345  0867               	movf	___fladd@grs,w
  4205  0346  00DC               	movwf	??___fladd
  4206  0347  085C               	movf	??___fladd,w
  4207  0348  00DB               	movwf	___fladd@a+3
  4208  0349                     l2235:	
  4209  0349  01E7               	clrf	___fladd@grs
  4210  034A  0865               	movf	___fladd@aexp,w
  4211  034B  00DC               	movwf	??___fladd
  4212  034C  01DD               	clrf	??___fladd+1
  4213  034D  085D               	movf	??___fladd+1,w
  4214  034E  00DF               	movwf	??___fladd+3
  4215  034F  0866               	movf	___fladd@bexp,w
  4216  0350  025C               	subwf	??___fladd,w
  4217  0351  00DE               	movwf	??___fladd+2
  4218  0352  1C03               	skipc
  4219  0353  03DF               	decf	??___fladd+3,f
  4220  0354  085F               	movf	??___fladd+3,w
  4221  0355  3A80               	xorlw	128
  4222  0356  00FF               	movwf	127
  4223  0357  3080               	movlw	128
  4224  0358  027F               	subwf	127,w
  4225  0359  1D03               	skipz
  4226  035A  2B5D               	goto	u3075
  4227  035B  301A               	movlw	26
  4228  035C  025E               	subwf	??___fladd+2,w
  4229  035D                     u3075:	
  4230  035D  1C03               	skipc
  4231  035E  2B96               	goto	l2253
  4232  035F  1283               	bcf	3,5	;RP0=0, select bank0
  4233  0360  1303               	bcf	3,6	;RP1=0, select bank0
  4234  0361  0857               	movf	___fladd@b+3,w
  4235  0362  0456               	iorwf	___fladd@b+2,w
  4236  0363  0455               	iorwf	___fladd@b+1,w
  4237  0364  0454               	iorwf	___fladd@b,w
  4238  0365  1903               	btfsc	3,2
  4239  0366  2B69               	goto	u3080
  4240  0367  3001               	movlw	1
  4241  0368  2B6A               	goto	u3090
  4242  0369                     u3080:	
  4243  0369  3000               	movlw	0
  4244  036A                     u3090:	
  4245  036A  00DC               	movwf	??___fladd
  4246  036B  085C               	movf	??___fladd,w
  4247  036C  00E7               	movwf	___fladd@grs
  4248  036D  3000               	movlw	0
  4249  036E  00D7               	movwf	___fladd@b+3
  4250  036F  3000               	movlw	0
  4251  0370  00D6               	movwf	___fladd@b+2
  4252  0371  3000               	movlw	0
  4253  0372  00D5               	movwf	___fladd@b+1
  4254  0373  3000               	movlw	0
  4255  0374  00D4               	movwf	___fladd@b
  4256  0375  0865               	movf	___fladd@aexp,w
  4257  0376  00DC               	movwf	??___fladd
  4258  0377  085C               	movf	??___fladd,w
  4259  0378  00E6               	movwf	___fladd@bexp
  4260  0379  2B9C               	goto	l560
  4261  037A                     l562:	
  4262  037A  1C67               	btfss	___fladd@grs,0
  4263  037B  2B85               	goto	l2243
  4264  037C  0867               	movf	___fladd@grs,w
  4265  037D  00DC               	movwf	??___fladd
  4266  037E  1003               	clrc
  4267  037F  0C5C               	rrf	??___fladd,w
  4268  0380  3801               	iorlw	1
  4269  0381  00DD               	movwf	??___fladd+1
  4270  0382  085D               	movf	??___fladd+1,w
  4271  0383  00E7               	movwf	___fladd@grs
  4272  0384  2B87               	goto	l2245
  4273  0385                     l2243:	
  4274  0385  1003               	clrc
  4275  0386  0CE7               	rrf	___fladd@grs,f
  4276  0387                     l2245:	
  4277  0387  1854               	btfsc	___fladd@b,0
  4278  0388  17E7               	bsf	___fladd@grs,7
  4279  0389  3001               	movlw	1
  4280  038A  00DC               	movwf	??___fladd
  4281  038B                     u3125:	
  4282  038B  0D57               	rlf	___fladd@b+3,w
  4283  038C  0CD7               	rrf	___fladd@b+3,f
  4284  038D  0CD6               	rrf	___fladd@b+2,f
  4285  038E  0CD5               	rrf	___fladd@b+1,f
  4286  038F  0CD4               	rrf	___fladd@b,f
  4287  0390  0BDC               	decfsz	??___fladd& (0+127),f
  4288  0391  2B8B               	goto	u3125
  4289  0392  3001               	movlw	1
  4290  0393  00DC               	movwf	??___fladd
  4291  0394  085C               	movf	??___fladd,w
  4292  0395  07E6               	addwf	___fladd@bexp,f
  4293  0396                     l2253:	
  4294  0396  1283               	bcf	3,5	;RP0=0, select bank0
  4295  0397  1303               	bcf	3,6	;RP1=0, select bank0
  4296  0398  0865               	movf	___fladd@aexp,w
  4297  0399  0266               	subwf	___fladd@bexp,w
  4298  039A  1C03               	skipc
  4299  039B  2B7A               	goto	l562
  4300  039C                     l560:	
  4301  039C  1B64               	btfsc	___fladd@signs,6
  4302  039D  2BDD               	goto	l2279
  4303  039E  0866               	movf	___fladd@bexp,w
  4304  039F  1D03               	btfss	3,2
  4305  03A0  2BAA               	goto	l2261
  4306  03A1  3000               	movlw	0
  4307  03A2  00D7               	movwf	?___fladd+3
  4308  03A3  3000               	movlw	0
  4309  03A4  00D6               	movwf	?___fladd+2
  4310  03A5  3000               	movlw	0
  4311  03A6  00D5               	movwf	?___fladd+1
  4312  03A7  3000               	movlw	0
  4313  03A8  00D4               	movwf	?___fladd
  4314  03A9  0008               	return
  4315  03AA                     l2261:	
  4316  03AA  0858               	movf	___fladd@a,w
  4317  03AB  07D4               	addwf	___fladd@b,f
  4318  03AC  0859               	movf	___fladd@a+1,w
  4319  03AD  1103               	clrz
  4320  03AE  1803               	skipnc
  4321  03AF  3E01               	addlw	1
  4322  03B0  1D03               	btfss	3,2
  4323  03B1  07D5               	addwf	___fladd@b+1,f
  4324  03B2  085A               	movf	___fladd@a+2,w
  4325  03B3  1103               	clrz
  4326  03B4  1803               	skipnc
  4327  03B5  3E01               	addlw	1
  4328  03B6  1D03               	btfss	3,2
  4329  03B7  07D6               	addwf	___fladd@b+2,f
  4330  03B8  085B               	movf	___fladd@a+3,w
  4331  03B9  1103               	clrz
  4332  03BA  1803               	skipnc
  4333  03BB  3E01               	addlw	1
  4334  03BC  1D03               	btfss	3,2
  4335  03BD  07D7               	addwf	___fladd@b+3,f
  4336  03BE  1C57               	btfss	___fladd@b+3,0
  4337  03BF  2C7F               	goto	l2313
  4338  03C0  1C67               	btfss	___fladd@grs,0
  4339  03C1  2BCB               	goto	l2269
  4340  03C2  0867               	movf	___fladd@grs,w
  4341  03C3  00DC               	movwf	??___fladd
  4342  03C4  1003               	clrc
  4343  03C5  0C5C               	rrf	??___fladd,w
  4344  03C6  3801               	iorlw	1
  4345  03C7  00DD               	movwf	??___fladd+1
  4346  03C8  085D               	movf	??___fladd+1,w
  4347  03C9  00E7               	movwf	___fladd@grs
  4348  03CA  2BCD               	goto	l2271
  4349  03CB                     l2269:	
  4350  03CB  1003               	clrc
  4351  03CC  0CE7               	rrf	___fladd@grs,f
  4352  03CD                     l2271:	
  4353  03CD  1854               	btfsc	___fladd@b,0
  4354  03CE  17E7               	bsf	___fladd@grs,7
  4355  03CF  3001               	movlw	1
  4356  03D0  00DC               	movwf	??___fladd
  4357  03D1                     u3205:	
  4358  03D1  0D57               	rlf	___fladd@b+3,w
  4359  03D2  0CD7               	rrf	___fladd@b+3,f
  4360  03D3  0CD6               	rrf	___fladd@b+2,f
  4361  03D4  0CD5               	rrf	___fladd@b+1,f
  4362  03D5  0CD4               	rrf	___fladd@b,f
  4363  03D6  0BDC               	decfsz	??___fladd& (0+127),f
  4364  03D7  2BD1               	goto	u3205
  4365  03D8  3001               	movlw	1
  4366  03D9  00DC               	movwf	??___fladd
  4367  03DA  085C               	movf	??___fladd,w
  4368  03DB  07E6               	addwf	___fladd@bexp,f
  4369  03DC  2C7F               	goto	l2313
  4370  03DD                     l2279:	
  4371  03DD  0857               	movf	___fladd@b+3,w
  4372  03DE  3A80               	xorlw	128
  4373  03DF  00FF               	movwf	127
  4374  03E0  085B               	movf	___fladd@a+3,w
  4375  03E1  3A80               	xorlw	128
  4376  03E2  027F               	subwf	127,w
  4377  03E3  1D03               	skipz
  4378  03E4  2BEF               	goto	u3213
  4379  03E5  085A               	movf	___fladd@a+2,w
  4380  03E6  0256               	subwf	___fladd@b+2,w
  4381  03E7  1D03               	skipz
  4382  03E8  2BEF               	goto	u3213
  4383  03E9  0859               	movf	___fladd@a+1,w
  4384  03EA  0255               	subwf	___fladd@b+1,w
  4385  03EB  1D03               	skipz
  4386  03EC  2BEF               	goto	u3213
  4387  03ED  0858               	movf	___fladd@a,w
  4388  03EE  0254               	subwf	___fladd@b,w
  4389  03EF                     u3213:	
  4390  03EF  1803               	skipnc
  4391  03F0  2C47               	goto	l2289
  4392  03F1  30FF               	movlw	255
  4393  03F2  00DC               	movwf	??___fladd
  4394  03F3  30FF               	movlw	255
  4395  03F4  00DD               	movwf	??___fladd+1
  4396  03F5  30FF               	movlw	255
  4397  03F6  00DE               	movwf	??___fladd+2
  4398  03F7  30FF               	movlw	255
  4399  03F8  00DF               	movwf	??___fladd+3
  4400  03F9  0858               	movf	___fladd@a,w
  4401  03FA  00E0               	movwf	??___fladd+4
  4402  03FB  0859               	movf	___fladd@a+1,w
  4403  03FC  00E1               	movwf	??___fladd+5
  4404  03FD  085A               	movf	___fladd@a+2,w
  4405  03FE  00E2               	movwf	??___fladd+6
  4406  03FF  085B               	movf	___fladd@a+3,w
  4407  0400  00E3               	movwf	??___fladd+7
  4408  0401  0854               	movf	___fladd@b,w
  4409  0402  02E0               	subwf	??___fladd+4,f
  4410  0403  0855               	movf	___fladd@b+1,w
  4411  0404  1C03               	skipc
  4412  0405  0F55               	incfsz	___fladd@b+1,w
  4413  0406  2C08               	goto	u3221
  4414  0407  2C09               	goto	u3222
  4415  0408                     u3221:	
  4416  0408  02E1               	subwf	??___fladd+5,f
  4417  0409                     u3222:	
  4418  0409  0856               	movf	___fladd@b+2,w
  4419  040A  1C03               	skipc
  4420  040B  0F56               	incfsz	___fladd@b+2,w
  4421  040C  2C0E               	goto	u3223
  4422  040D  2C0F               	goto	u3224
  4423  040E                     u3223:	
  4424  040E  02E2               	subwf	??___fladd+6,f
  4425  040F                     u3224:	
  4426  040F  0857               	movf	___fladd@b+3,w
  4427  0410  1C03               	skipc
  4428  0411  0F57               	incfsz	___fladd@b+3,w
  4429  0412  2C14               	goto	u3225
  4430  0413  2C15               	goto	u3226
  4431  0414                     u3225:	
  4432  0414  02E3               	subwf	??___fladd+7,f
  4433  0415                     u3226:	
  4434  0415  0860               	movf	??___fladd+4,w
  4435  0416  07DC               	addwf	??___fladd,f
  4436  0417  0861               	movf	??___fladd+5,w
  4437  0418  1803               	skipnc
  4438  0419  0F61               	incfsz	??___fladd+5,w
  4439  041A  2C1C               	goto	u3230
  4440  041B  2C1D               	goto	u3231
  4441  041C                     u3230:	
  4442  041C  07DD               	addwf	??___fladd+1,f
  4443  041D                     u3231:	
  4444  041D  0862               	movf	??___fladd+6,w
  4445  041E  1803               	skipnc
  4446  041F  0F62               	incfsz	??___fladd+6,w
  4447  0420  2C22               	goto	u3232
  4448  0421  2C23               	goto	u3233
  4449  0422                     u3232:	
  4450  0422  07DE               	addwf	??___fladd+2,f
  4451  0423                     u3233:	
  4452  0423  0863               	movf	??___fladd+7,w
  4453  0424  1803               	skipnc
  4454  0425  0A63               	incf	??___fladd+7,w
  4455  0426  07DF               	addwf	??___fladd+3,f
  4456  0427  085F               	movf	??___fladd+3,w
  4457  0428  00D7               	movwf	___fladd@b+3
  4458  0429  085E               	movf	??___fladd+2,w
  4459  042A  00D6               	movwf	___fladd@b+2
  4460  042B  085D               	movf	??___fladd+1,w
  4461  042C  00D5               	movwf	___fladd@b+1
  4462  042D  085C               	movf	??___fladd,w
  4463  042E  00D4               	movwf	___fladd@b
  4464  042F  3080               	movlw	128
  4465  0430  00DC               	movwf	??___fladd
  4466  0431  085C               	movf	??___fladd,w
  4467  0432  06E4               	xorwf	___fladd@signs,f
  4468  0433  09E7               	comf	___fladd@grs,f
  4469  0434  0AE7               	incf	___fladd@grs,f
  4470  0435  0867               	movf	___fladd@grs,w
  4471  0436  1D03               	btfss	3,2
  4472  0437  2C55               	goto	l577
  4473  0438  3001               	movlw	1
  4474  0439  07D4               	addwf	___fladd@b,f
  4475  043A  3000               	movlw	0
  4476  043B  1803               	skipnc
  4477  043C  3001               	movlw	1
  4478  043D  07D5               	addwf	___fladd@b+1,f
  4479  043E  3000               	movlw	0
  4480  043F  1803               	skipnc
  4481  0440  3001               	movlw	1
  4482  0441  07D6               	addwf	___fladd@b+2,f
  4483  0442  3000               	movlw	0
  4484  0443  1803               	skipnc
  4485  0444  3001               	movlw	1
  4486  0445  07D7               	addwf	___fladd@b+3,f
  4487  0446  2C55               	goto	l577
  4488  0447                     l2289:	
  4489  0447  0858               	movf	___fladd@a,w
  4490  0448  02D4               	subwf	___fladd@b,f
  4491  0449  0859               	movf	___fladd@a+1,w
  4492  044A  1C03               	skipc
  4493  044B  0F59               	incfsz	___fladd@a+1,w
  4494  044C  02D5               	subwf	___fladd@b+1,f
  4495  044D  085A               	movf	___fladd@a+2,w
  4496  044E  1C03               	skipc
  4497  044F  0F5A               	incfsz	___fladd@a+2,w
  4498  0450  02D6               	subwf	___fladd@b+2,f
  4499  0451  085B               	movf	___fladd@a+3,w
  4500  0452  1C03               	skipc
  4501  0453  0F5B               	incfsz	___fladd@a+3,w
  4502  0454  02D7               	subwf	___fladd@b+3,f
  4503  0455                     l577:	
  4504  0455  0857               	movf	___fladd@b+3,w
  4505  0456  0456               	iorwf	___fladd@b+2,w
  4506  0457  0455               	iorwf	___fladd@b+1,w
  4507  0458  0454               	iorwf	___fladd@b,w
  4508  0459  1D03               	skipz
  4509  045A  2C7D               	goto	l2311
  4510  045B  0867               	movf	___fladd@grs,w
  4511  045C  1D03               	btfss	3,2
  4512  045D  2C7D               	goto	l2311
  4513  045E  3000               	movlw	0
  4514  045F  00D7               	movwf	?___fladd+3
  4515  0460  3000               	movlw	0
  4516  0461  00D6               	movwf	?___fladd+2
  4517  0462  3000               	movlw	0
  4518  0463  00D5               	movwf	?___fladd+1
  4519  0464  3000               	movlw	0
  4520  0465  00D4               	movwf	?___fladd
  4521  0466  0008               	return
  4522  0467                     l2297:	
  4523  0467  3001               	movlw	1
  4524  0468  00DC               	movwf	??___fladd
  4525  0469                     u3275:	
  4526  0469  1003               	clrc
  4527  046A  0DD4               	rlf	___fladd@b,f
  4528  046B  0DD5               	rlf	___fladd@b+1,f
  4529  046C  0DD6               	rlf	___fladd@b+2,f
  4530  046D  0DD7               	rlf	___fladd@b+3,f
  4531  046E  0BDC               	decfsz	??___fladd,f
  4532  046F  2C69               	goto	u3275
  4533  0470  1BE7               	btfsc	___fladd@grs,7
  4534  0471  1454               	bsf	___fladd@b,0
  4535  0472  1C67               	btfss	___fladd@grs,0
  4536  0473  2C76               	goto	l2305
  4537  0474  1403               	setc
  4538  0475  2C77               	goto	L3
  4539  0476                     l2305:	
  4540  0476  1003               	clrc
  4541  0477                     L3:	
  4542  0477  0DE7               	rlf	___fladd@grs,f
  4543  0478  0866               	movf	___fladd@bexp,w
  4544  0479  1903               	btfsc	3,2
  4545  047A  2C7D               	goto	l2311
  4546  047B  3001               	movlw	1
  4547  047C  02E6               	subwf	___fladd@bexp,f
  4548  047D                     l2311:	
  4549  047D  1FD6               	btfss	___fladd@b+2,7
  4550  047E  2C67               	goto	l2297
  4551  047F                     l2313:	
  4552  047F  01E5               	clrf	___fladd@aexp
  4553  0480  1FE7               	btfss	___fladd@grs,7
  4554  0481  2C8A               	goto	l2323
  4555  0482  0867               	movf	___fladd@grs,w
  4556  0483  397F               	andlw	127
  4557  0484  1903               	btfsc	3,2
  4558  0485  1854               	btfsc	___fladd@b,0
  4559  0486  2C88               	goto	l2319
  4560  0487  2C8A               	goto	l2323
  4561  0488                     l2319:	
  4562  0488  01E5               	clrf	___fladd@aexp
  4563  0489  0AE5               	incf	___fladd@aexp,f
  4564  048A                     l2323:	
  4565  048A  0865               	movf	___fladd@aexp,w
  4566  048B  1903               	btfsc	3,2
  4567  048C  2CBD               	goto	l590
  4568  048D  3001               	movlw	1
  4569  048E  07D4               	addwf	___fladd@b,f
  4570  048F  3000               	movlw	0
  4571  0490  1803               	skipnc
  4572  0491  3001               	movlw	1
  4573  0492  07D5               	addwf	___fladd@b+1,f
  4574  0493  3000               	movlw	0
  4575  0494  1803               	skipnc
  4576  0495  3001               	movlw	1
  4577  0496  07D6               	addwf	___fladd@b+2,f
  4578  0497  3000               	movlw	0
  4579  0498  1803               	skipnc
  4580  0499  3001               	movlw	1
  4581  049A  07D7               	addwf	___fladd@b+3,f
  4582  049B  1C57               	btfss	___fladd@b+3,0
  4583  049C  2CBD               	goto	l590
  4584  049D  0854               	movf	___fladd@b,w
  4585  049E  00DC               	movwf	??___fladd
  4586  049F  0855               	movf	___fladd@b+1,w
  4587  04A0  00DD               	movwf	??___fladd+1
  4588  04A1  0856               	movf	___fladd@b+2,w
  4589  04A2  00DE               	movwf	??___fladd+2
  4590  04A3  0857               	movf	___fladd@b+3,w
  4591  04A4  00DF               	movwf	??___fladd+3
  4592  04A5  3001               	movlw	1
  4593  04A6  00E0               	movwf	??___fladd+4
  4594  04A7                     u3375:	
  4595  04A7  0D5F               	rlf	??___fladd+3,w
  4596  04A8  0CDF               	rrf	??___fladd+3,f
  4597  04A9  0CDE               	rrf	??___fladd+2,f
  4598  04AA  0CDD               	rrf	??___fladd+1,f
  4599  04AB  0CDC               	rrf	??___fladd,f
  4600  04AC  0BE0               	decfsz	??___fladd+4,f
  4601  04AD  2CA7               	goto	u3375
  4602  04AE  085F               	movf	??___fladd+3,w
  4603  04AF  00D7               	movwf	___fladd@b+3
  4604  04B0  085E               	movf	??___fladd+2,w
  4605  04B1  00D6               	movwf	___fladd@b+2
  4606  04B2  085D               	movf	??___fladd+1,w
  4607  04B3  00D5               	movwf	___fladd@b+1
  4608  04B4  085C               	movf	??___fladd,w
  4609  04B5  00D4               	movwf	___fladd@b
  4610  04B6  0A66               	incf	___fladd@bexp,w
  4611  04B7  1903               	btfsc	3,2
  4612  04B8  2CBD               	goto	l590
  4613  04B9  3001               	movlw	1
  4614  04BA  00DC               	movwf	??___fladd
  4615  04BB  085C               	movf	??___fladd,w
  4616  04BC  07E6               	addwf	___fladd@bexp,f
  4617  04BD                     l590:	
  4618  04BD  0A66               	incf	___fladd@bexp,w
  4619  04BE  1D03               	btfss	3,2
  4620  04BF  0866               	movf	___fladd@bexp,w
  4621  04C0  1D03               	btfss	3,2
  4622  04C1  2CCD               	goto	l2341
  4623  04C2  3000               	movlw	0
  4624  04C3  00D7               	movwf	___fladd@b+3
  4625  04C4  3000               	movlw	0
  4626  04C5  00D6               	movwf	___fladd@b+2
  4627  04C6  3000               	movlw	0
  4628  04C7  00D5               	movwf	___fladd@b+1
  4629  04C8  3000               	movlw	0
  4630  04C9  00D4               	movwf	___fladd@b
  4631  04CA  0866               	movf	___fladd@bexp,w
  4632  04CB  1903               	btfsc	3,2
  4633  04CC  01E4               	clrf	___fladd@signs
  4634  04CD                     l2341:	
  4635  04CD  1C66               	btfss	___fladd@bexp,0
  4636  04CE  2CD1               	goto	l2345
  4637  04CF  17D6               	bsf	___fladd@b+2,7
  4638  04D0  2CD5               	goto	l598
  4639  04D1                     l2345:	
  4640  04D1  307F               	movlw	127
  4641  04D2  00DC               	movwf	??___fladd
  4642  04D3  085C               	movf	??___fladd,w
  4643  04D4  05D6               	andwf	___fladd@b+2,f
  4644  04D5                     l598:	
  4645  04D5  0866               	movf	___fladd@bexp,w
  4646  04D6  00DC               	movwf	??___fladd
  4647  04D7  1003               	clrc
  4648  04D8  0C5C               	rrf	??___fladd,w
  4649  04D9  00DD               	movwf	??___fladd+1
  4650  04DA  085D               	movf	??___fladd+1,w
  4651  04DB  00D7               	movwf	___fladd@b+3
  4652  04DC  1FE4               	btfss	___fladd@signs,7
  4653  04DD  0008               	return
  4654  04DE  17D7               	bsf	___fladd@b+3,7
  4655  04DF  0008               	return
  4656  04E0                     __end_of___fladd:	
  4657                           
  4658                           	psect	text13
  4659  0B2A                     __ptext13:	
  4660 ;; *************** function _lcdSetCursor *****************
  4661 ;; Defined at:
  4662 ;;		line 56 in file "./lcd.h"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;  a               1    wreg     unsigned char 
  4665 ;;  b               1    4[COMMON] unsigned char 
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;  a               1    7[COMMON] unsigned char 
  4668 ;;  temp            1   10[COMMON] unsigned char 
  4669 ;;  y               1    9[COMMON] unsigned char 
  4670 ;;  z               1    8[COMMON] unsigned char 
  4671 ;; Return value:  Size  Location     Type
  4672 ;;                  1    wreg      void 
  4673 ;; Registers used:
  4674 ;;		wreg, status,2, status,0, pclath, cstack
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4680 ;;      Params:         1       0       0       0       0
  4681 ;;      Locals:         4       0       0       0       0
  4682 ;;      Temps:          2       0       0       0       0
  4683 ;;      Totals:         7       0       0       0       0
  4684 ;;Total ram usage:        7 bytes
  4685 ;; Hardware stack levels used:    1
  4686 ;; Hardware stack levels required when called:    2
  4687 ;; This function calls:
  4688 ;;		_lcdCmd
  4689 ;; This function is called by:
  4690 ;;		_main
  4691 ;; This function uses a non-reentrant model
  4692 ;;
  4693                           
  4694                           
  4695                           ;psect for function _lcdSetCursor
  4696  0B2A                     _lcdSetCursor:	
  4697                           
  4698                           ;incstack = 0
  4699                           ; Regs used in _lcdSetCursor: [wreg+status,2+status,0+pclath+cstack]
  4700                           ;lcdSetCursor@a stored from wreg
  4701  0B2A  00F7               	movwf	lcdSetCursor@a
  4702                           
  4703                           ;./lcd.h: 57:     char temp, z, y;;./lcd.h: 58:     if (a == 1) {
  4704  0B2B  0377               	decf	lcdSetCursor@a,w
  4705  0B2C  1D03               	btfss	3,2
  4706  0B2D  2B4F               	goto	l2363
  4707                           
  4708                           ;./lcd.h: 59:         temp = 0x80 + b - 1;
  4709  0B2E  0874               	movf	lcdSetCursor@b,w
  4710  0B2F  3E7F               	addlw	127
  4711  0B30  00F5               	movwf	??_lcdSetCursor
  4712  0B31  0875               	movf	??_lcdSetCursor,w
  4713  0B32  00FA               	movwf	lcdSetCursor@temp
  4714                           
  4715                           ;./lcd.h: 60:         z = temp >> 4;
  4716  0B33  087A               	movf	lcdSetCursor@temp,w
  4717  0B34  00F5               	movwf	??_lcdSetCursor
  4718  0B35  3004               	movlw	4
  4719  0B36                     u3455:	
  4720  0B36  1003               	clrc
  4721  0B37  0CF5               	rrf	??_lcdSetCursor,f
  4722  0B38  3EFF               	addlw	-1
  4723  0B39  1D03               	skipz
  4724  0B3A  2B36               	goto	u3455
  4725  0B3B  0875               	movf	??_lcdSetCursor,w
  4726  0B3C  00F6               	movwf	??_lcdSetCursor+1
  4727  0B3D  0876               	movf	??_lcdSetCursor+1,w
  4728  0B3E  00F8               	movwf	lcdSetCursor@z
  4729                           
  4730                           ;./lcd.h: 61:         y = temp & 0x0F;
  4731  0B3F  087A               	movf	lcdSetCursor@temp,w
  4732  0B40  390F               	andlw	15
  4733  0B41  00F5               	movwf	??_lcdSetCursor
  4734  0B42  0875               	movf	??_lcdSetCursor,w
  4735  0B43  00F9               	movwf	lcdSetCursor@y
  4736                           
  4737                           ;./lcd.h: 62:         lcdCmd(z);
  4738  0B44  0878               	movf	lcdSetCursor@z,w
  4739  0B45  120A  158A  21FE  120A  158A  	fcall	_lcdCmd
  4740                           
  4741                           ;./lcd.h: 63:         lcdCmd(y);
  4742  0B4A  0879               	movf	lcdSetCursor@y,w
  4743  0B4B  120A  158A  21FE   	fcall	_lcdCmd
  4744                           
  4745                           ;./lcd.h: 64:     } else if (a == 2) {
  4746  0B4E  0008               	return
  4747  0B4F                     l2363:	
  4748  0B4F  3002               	movlw	2
  4749  0B50  0677               	xorwf	lcdSetCursor@a,w
  4750  0B51  1D03               	btfss	3,2
  4751  0B52  0008               	return
  4752                           
  4753                           ;./lcd.h: 65:         temp = 0xC0 + b - 1;
  4754  0B53  0874               	movf	lcdSetCursor@b,w
  4755  0B54  3EBF               	addlw	191
  4756  0B55  00F5               	movwf	??_lcdSetCursor
  4757  0B56  0875               	movf	??_lcdSetCursor,w
  4758  0B57  00FA               	movwf	lcdSetCursor@temp
  4759                           
  4760                           ;./lcd.h: 66:         z = temp >> 4;
  4761  0B58  087A               	movf	lcdSetCursor@temp,w
  4762  0B59  00F5               	movwf	??_lcdSetCursor
  4763  0B5A  3004               	movlw	4
  4764  0B5B                     u3475:	
  4765  0B5B  1003               	clrc
  4766  0B5C  0CF5               	rrf	??_lcdSetCursor,f
  4767  0B5D  3EFF               	addlw	-1
  4768  0B5E  1D03               	skipz
  4769  0B5F  2B5B               	goto	u3475
  4770  0B60  0875               	movf	??_lcdSetCursor,w
  4771  0B61  00F6               	movwf	??_lcdSetCursor+1
  4772  0B62  0876               	movf	??_lcdSetCursor+1,w
  4773  0B63  00F8               	movwf	lcdSetCursor@z
  4774                           
  4775                           ;./lcd.h: 67:         y = temp & 0x0F;
  4776  0B64  087A               	movf	lcdSetCursor@temp,w
  4777  0B65  390F               	andlw	15
  4778  0B66  00F5               	movwf	??_lcdSetCursor
  4779  0B67  0875               	movf	??_lcdSetCursor,w
  4780  0B68  00F9               	movwf	lcdSetCursor@y
  4781                           
  4782                           ;./lcd.h: 68:         lcdCmd(z);
  4783  0B69  0878               	movf	lcdSetCursor@z,w
  4784  0B6A  120A  158A  21FE  120A  158A  	fcall	_lcdCmd
  4785                           
  4786                           ;./lcd.h: 69:         lcdCmd(y);
  4787  0B6F  0879               	movf	lcdSetCursor@y,w
  4788  0B70  120A  158A  21FE   	fcall	_lcdCmd
  4789  0B73  0008               	return
  4790  0B74                     __end_of_lcdSetCursor:	
  4791                           
  4792                           	psect	text14
  4793  0AED                     __ptext14:	
  4794 ;; *************** function _lcdPrint *****************
  4795 ;; Defined at:
  4796 ;;		line 108 in file "./lcd.h"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;  a               2    5[COMMON] PTR unsigned char 
  4799 ;;		 -> mensaje(16), STR_2(7), STR_1(13), 
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;  i               2   10[COMMON] int 
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  1    wreg      void 
  4804 ;; Registers used:
  4805 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4811 ;;      Params:         2       0       0       0       0
  4812 ;;      Locals:         2       0       0       0       0
  4813 ;;      Temps:          3       0       0       0       0
  4814 ;;      Totals:         7       0       0       0       0
  4815 ;;Total ram usage:        7 bytes
  4816 ;; Hardware stack levels used:    1
  4817 ;; Hardware stack levels required when called:    2
  4818 ;; This function calls:
  4819 ;;		_lcdWriteChar
  4820 ;; This function is called by:
  4821 ;;		_main
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825                           
  4826                           ;psect for function _lcdPrint
  4827  0AED                     _lcdPrint:	
  4828                           
  4829                           ;./lcd.h: 109:     int i;;./lcd.h: 110:     for (i = 0; a[i] != '\0'; i++)
  4830                           
  4831                           ;incstack = 0
  4832                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4833  0AED  01FA               	clrf	lcdPrint@i
  4834  0AEE  01FB               	clrf	lcdPrint@i+1
  4835  0AEF                     l2409:	
  4836  0AEF  087A               	movf	lcdPrint@i,w
  4837  0AF0  0775               	addwf	lcdPrint@a,w
  4838  0AF1  00F8               	movwf	??_lcdPrint+1
  4839  0AF2  0876               	movf	lcdPrint@a+1,w
  4840  0AF3  00F7               	movwf	??_lcdPrint
  4841  0AF4  1803               	skipnc
  4842  0AF5  0AF7               	incf	??_lcdPrint,f
  4843  0AF6  1BFA               	btfsc	lcdPrint@i,7
  4844  0AF7  03F7               	decf	??_lcdPrint,f
  4845  0AF8  0877               	movf	??_lcdPrint,w
  4846  0AF9  00F9               	movwf	??_lcdPrint+2
  4847  0AFA  0879               	movf	??_lcdPrint+2,w
  4848  0AFB  1283               	bcf	3,5	;RP0=0, select bank0
  4849  0AFC  1303               	bcf	3,6	;RP1=0, select bank0
  4850  0AFD  00FF               	movwf	127
  4851  0AFE  0878               	movf	??_lcdPrint+1,w
  4852  0AFF  0084               	movwf	4
  4853  0B00  120A  158A  2000  120A  158A  	fcall	stringtab
  4854  0B05  3A00               	xorlw	0
  4855  0B06  1903               	btfsc	3,2
  4856  0B07  0008               	return
  4857                           
  4858                           ;./lcd.h: 111:         lcdWriteChar(a[i]);
  4859  0B08  087A               	movf	lcdPrint@i,w
  4860  0B09  0775               	addwf	lcdPrint@a,w
  4861  0B0A  00F8               	movwf	??_lcdPrint+1
  4862  0B0B  0876               	movf	lcdPrint@a+1,w
  4863  0B0C  00F7               	movwf	??_lcdPrint
  4864  0B0D  1803               	skipnc
  4865  0B0E  0AF7               	incf	??_lcdPrint,f
  4866  0B0F  1BFA               	btfsc	lcdPrint@i,7
  4867  0B10  03F7               	decf	??_lcdPrint,f
  4868  0B11  0877               	movf	??_lcdPrint,w
  4869  0B12  00F9               	movwf	??_lcdPrint+2
  4870  0B13  0879               	movf	??_lcdPrint+2,w
  4871  0B14  1283               	bcf	3,5	;RP0=0, select bank0
  4872  0B15  1303               	bcf	3,6	;RP1=0, select bank0
  4873  0B16  00FF               	movwf	127
  4874  0B17  0878               	movf	??_lcdPrint+1,w
  4875  0B18  0084               	movwf	4
  4876  0B19  120A  158A  2000  120A  158A  	fcall	stringtab
  4877  0B1E  120A  158A  227A  120A  158A  	fcall	_lcdWriteChar
  4878  0B23  3001               	movlw	1
  4879  0B24  07FA               	addwf	lcdPrint@i,f
  4880  0B25  1803               	skipnc
  4881  0B26  0AFB               	incf	lcdPrint@i+1,f
  4882  0B27  3000               	movlw	0
  4883  0B28  07FB               	addwf	lcdPrint@i+1,f
  4884  0B29  2AEF               	goto	l2409
  4885  0B2A                     __end_of_lcdPrint:	
  4886                           
  4887                           	psect	text15
  4888  0A7A                     __ptext15:	
  4889 ;; *************** function _lcdWriteChar *****************
  4890 ;; Defined at:
  4891 ;;		line 93 in file "./lcd.h"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;  a               1    wreg     unsigned char 
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;  a               1    4[COMMON] unsigned char 
  4896 ;;  y               1    3[COMMON] unsigned char 
  4897 ;;  temp            1    2[COMMON] unsigned char 
  4898 ;; Return value:  Size  Location     Type
  4899 ;;                  1    wreg      void 
  4900 ;; Registers used:
  4901 ;;		wreg, status,2, status,0, pclath, cstack
  4902 ;; Tracked objects:
  4903 ;;		On entry : 0/0
  4904 ;;		On exit  : 0/0
  4905 ;;		Unchanged: 0/0
  4906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4907 ;;      Params:         0       0       0       0       0
  4908 ;;      Locals:         3       0       0       0       0
  4909 ;;      Temps:          1       0       0       0       0
  4910 ;;      Totals:         4       0       0       0       0
  4911 ;;Total ram usage:        4 bytes
  4912 ;; Hardware stack levels used:    1
  4913 ;; Hardware stack levels required when called:    1
  4914 ;; This function calls:
  4915 ;;		_lcdPort
  4916 ;; This function is called by:
  4917 ;;		_lcdPrint
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           
  4922                           ;psect for function _lcdWriteChar
  4923  0A7A                     _lcdWriteChar:	
  4924                           
  4925                           ;incstack = 0
  4926                           ; Regs used in _lcdWriteChar: [wreg+status,2+status,0+pclath+cstack]
  4927                           ;lcdWriteChar@a stored from wreg
  4928  0A7A  00F4               	movwf	lcdWriteChar@a
  4929                           
  4930                           ;./lcd.h: 94:     char temp, y;;./lcd.h: 95:     temp = a & 0x0F;
  4931  0A7B  0874               	movf	lcdWriteChar@a,w
  4932  0A7C  390F               	andlw	15
  4933  0A7D  00F1               	movwf	??_lcdWriteChar
  4934  0A7E  0871               	movf	??_lcdWriteChar,w
  4935  0A7F  00F2               	movwf	lcdWriteChar@temp
  4936                           
  4937                           ;./lcd.h: 96:     y = a & 0xF0;
  4938  0A80  0874               	movf	lcdWriteChar@a,w
  4939  0A81  39F0               	andlw	240
  4940  0A82  00F1               	movwf	??_lcdWriteChar
  4941  0A83  0871               	movf	??_lcdWriteChar,w
  4942  0A84  00F3               	movwf	lcdWriteChar@y
  4943                           
  4944                           ;./lcd.h: 97:     RD2 = 1;
  4945  0A85  1283               	bcf	3,5	;RP0=0, select bank0
  4946  0A86  1303               	bcf	3,6	;RP1=0, select bank0
  4947  0A87  1508               	bsf	8,2	;volatile
  4948                           
  4949                           ;./lcd.h: 98:     lcdPort(y >> 4);
  4950  0A88  0873               	movf	lcdWriteChar@y,w
  4951  0A89  00F1               	movwf	??_lcdWriteChar
  4952  0A8A  3004               	movlw	4
  4953  0A8B                     u2825:	
  4954  0A8B  1003               	clrc
  4955  0A8C  0CF1               	rrf	??_lcdWriteChar,f
  4956  0A8D  3EFF               	addlw	-1
  4957  0A8E  1D03               	skipz
  4958  0A8F  2A8B               	goto	u2825
  4959  0A90  0871               	movf	??_lcdWriteChar,w
  4960  0A91  120A  158A  21E4  120A  158A  	fcall	_lcdPort
  4961                           
  4962                           ;./lcd.h: 99:     RD3 = 1;
  4963  0A96  1283               	bcf	3,5	;RP0=0, select bank0
  4964  0A97  1303               	bcf	3,6	;RP1=0, select bank0
  4965  0A98  1588               	bsf	8,3	;volatile
  4966                           
  4967                           ;./lcd.h: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4968  0A99  300D               	movlw	13
  4969  0A9A  00F1               	movwf	??_lcdWriteChar
  4970  0A9B                     u3717:	
  4971  0A9B  0BF1               	decfsz	??_lcdWriteChar,f
  4972  0A9C  2A9B               	goto	u3717
  4973                           
  4974                           ;./lcd.h: 101:     RD3 = 0;
  4975  0A9D  1283               	bcf	3,5	;RP0=0, select bank0
  4976  0A9E  1303               	bcf	3,6	;RP1=0, select bank0
  4977  0A9F  1188               	bcf	8,3	;volatile
  4978                           
  4979                           ;./lcd.h: 102:     lcdPort(temp);
  4980  0AA0  0872               	movf	lcdWriteChar@temp,w
  4981  0AA1  120A  158A  21E4  120A  158A  	fcall	_lcdPort
  4982                           
  4983                           ;./lcd.h: 103:     RD3 = 1;
  4984  0AA6  1283               	bcf	3,5	;RP0=0, select bank0
  4985  0AA7  1303               	bcf	3,6	;RP1=0, select bank0
  4986  0AA8  1588               	bsf	8,3	;volatile
  4987                           
  4988                           ;./lcd.h: 104:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4989  0AA9  300D               	movlw	13
  4990  0AAA  00F1               	movwf	??_lcdWriteChar
  4991  0AAB                     u3727:	
  4992  0AAB  0BF1               	decfsz	??_lcdWriteChar,f
  4993  0AAC  2AAB               	goto	u3727
  4994                           
  4995                           ;./lcd.h: 105:     RD3 = 0;
  4996  0AAD  1283               	bcf	3,5	;RP0=0, select bank0
  4997  0AAE  1303               	bcf	3,6	;RP1=0, select bank0
  4998  0AAF  1188               	bcf	8,3	;volatile
  4999  0AB0  0008               	return
  5000  0AB1                     __end_of_lcdWriteChar:	
  5001                           
  5002                           	psect	text16
  5003  0BC4                     __ptext16:	
  5004 ;; *************** function _lcdInit *****************
  5005 ;; Defined at:
  5006 ;;		line 73 in file "./lcd.h"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;		None
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;		None
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  1    wreg      void 
  5013 ;; Registers used:
  5014 ;;		wreg, status,2, status,0, pclath, cstack
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5020 ;;      Params:         0       0       0       0       0
  5021 ;;      Locals:         0       0       0       0       0
  5022 ;;      Temps:          2       0       0       0       0
  5023 ;;      Totals:         2       0       0       0       0
  5024 ;;Total ram usage:        2 bytes
  5025 ;; Hardware stack levels used:    1
  5026 ;; Hardware stack levels required when called:    2
  5027 ;; This function calls:
  5028 ;;		_lcdCmd
  5029 ;;		_lcdPort
  5030 ;; This function is called by:
  5031 ;;		_main
  5032 ;; This function uses a non-reentrant model
  5033 ;;
  5034                           
  5035                           
  5036                           ;psect for function _lcdInit
  5037  0BC4                     _lcdInit:	
  5038                           
  5039                           ;./lcd.h: 74:     TRISD = 0;
  5040                           
  5041                           ;incstack = 0
  5042                           ; Regs used in _lcdInit: [wreg+status,2+status,0+pclath+cstack]
  5043  0BC4  1683               	bsf	3,5	;RP0=1, select bank1
  5044  0BC5  1303               	bcf	3,6	;RP1=0, select bank1
  5045  0BC6  0188               	clrf	8	;volatile
  5046                           
  5047                           ;./lcd.h: 75:     PORTD = 0;
  5048  0BC7  1283               	bcf	3,5	;RP0=0, select bank0
  5049  0BC8  1303               	bcf	3,6	;RP1=0, select bank0
  5050  0BC9  0188               	clrf	8	;volatile
  5051                           
  5052                           ;./lcd.h: 76:     lcdPort(0x00);
  5053  0BCA  3000               	movlw	0
  5054  0BCB  120A  158A  21E4  120A  158A  	fcall	_lcdPort
  5055                           
  5056                           ;./lcd.h: 77:     _delay((unsigned long)((20)*(4000000/4000.0)));
  5057  0BD0  301A               	movlw	26
  5058  0BD1  00F5               	movwf	??_lcdInit+1
  5059  0BD2  30F8               	movlw	248
  5060  0BD3  00F4               	movwf	??_lcdInit
  5061  0BD4                     u3737:	
  5062  0BD4  0BF4               	decfsz	??_lcdInit,f
  5063  0BD5  2BD4               	goto	u3737
  5064  0BD6  0BF5               	decfsz	??_lcdInit+1,f
  5065  0BD7  2BD4               	goto	u3737
  5066  0BD8  0000               	nop
  5067                           
  5068                           ;./lcd.h: 78:     lcdCmd(0x03);
  5069  0BD9  3003               	movlw	3
  5070  0BDA  120A  158A  21FE  120A  158A  	fcall	_lcdCmd
  5071                           
  5072                           ;./lcd.h: 79:     _delay((unsigned long)((5)*(4000000/4000.0)));
  5073  0BDF  3007               	movlw	7
  5074  0BE0  00F5               	movwf	??_lcdInit+1
  5075  0BE1  307D               	movlw	125
  5076  0BE2  00F4               	movwf	??_lcdInit
  5077  0BE3                     u3747:	
  5078  0BE3  0BF4               	decfsz	??_lcdInit,f
  5079  0BE4  2BE3               	goto	u3747
  5080  0BE5  0BF5               	decfsz	??_lcdInit+1,f
  5081  0BE6  2BE3               	goto	u3747
  5082                           
  5083                           ;./lcd.h: 80:     lcdCmd(0x03);
  5084  0BE7  3003               	movlw	3
  5085  0BE8  120A  158A  21FE  120A  158A  	fcall	_lcdCmd
  5086                           
  5087                           ;./lcd.h: 81:     _delay((unsigned long)((11)*(4000000/4000.0)));
  5088  0BED  300F               	movlw	15
  5089  0BEE  00F5               	movwf	??_lcdInit+1
  5090  0BEF  3047               	movlw	71
  5091  0BF0  00F4               	movwf	??_lcdInit
  5092  0BF1                     u3757:	
  5093  0BF1  0BF4               	decfsz	??_lcdInit,f
  5094  0BF2  2BF1               	goto	u3757
  5095  0BF3  0BF5               	decfsz	??_lcdInit+1,f
  5096  0BF4  2BF1               	goto	u3757
  5097  0BF5  2BF6               	nop2
  5098                           
  5099                           ;./lcd.h: 82:     lcdCmd(0x03);
  5100  0BF6  3003               	movlw	3
  5101  0BF7  120A  158A  21FE  120A  158A  	fcall	_lcdCmd
  5102                           
  5103                           ;./lcd.h: 84:     lcdCmd(0x02);
  5104  0BFC  3002               	movlw	2
  5105  0BFD  120A  158A  21FE  120A  158A  	fcall	_lcdCmd
  5106                           
  5107                           ;./lcd.h: 85:     lcdCmd(0x02);
  5108  0C02  3002               	movlw	2
  5109  0C03  120A  158A  21FE  120A  158A  	fcall	_lcdCmd
  5110                           
  5111                           ;./lcd.h: 86:     lcdCmd(0x08);
  5112  0C08  3008               	movlw	8
  5113  0C09  120A  158A  21FE  120A  158A  	fcall	_lcdCmd
  5114                           
  5115                           ;./lcd.h: 87:     lcdCmd(0x00);
  5116  0C0E  3000               	movlw	0
  5117  0C0F  120A  158A  21FE  120A  158A  	fcall	_lcdCmd
  5118                           
  5119                           ;./lcd.h: 88:     lcdCmd(0x0C);
  5120  0C14  300C               	movlw	12
  5121  0C15  120A  158A  21FE  120A  158A  	fcall	_lcdCmd
  5122                           
  5123                           ;./lcd.h: 89:     lcdCmd(0x00);
  5124  0C1A  3000               	movlw	0
  5125  0C1B  120A  158A  21FE  120A  158A  	fcall	_lcdCmd
  5126                           
  5127                           ;./lcd.h: 90:     lcdCmd(0x06);
  5128  0C20  3006               	movlw	6
  5129  0C21  120A  158A  21FE   	fcall	_lcdCmd
  5130  0C24  0008               	return
  5131  0C25                     __end_of_lcdInit:	
  5132                           
  5133                           	psect	text17
  5134  09B9                     __ptext17:	
  5135 ;; *************** function _lcdClear *****************
  5136 ;; Defined at:
  5137 ;;		line 51 in file "./lcd.h"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;		None
  5140 ;; Auto vars:     Size  Location     Type
  5141 ;;		None
  5142 ;; Return value:  Size  Location     Type
  5143 ;;                  1    wreg      void 
  5144 ;; Registers used:
  5145 ;;		wreg, status,2, status,0, pclath, cstack
  5146 ;; Tracked objects:
  5147 ;;		On entry : 0/0
  5148 ;;		On exit  : 0/0
  5149 ;;		Unchanged: 0/0
  5150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5151 ;;      Params:         0       0       0       0       0
  5152 ;;      Locals:         0       0       0       0       0
  5153 ;;      Temps:          0       0       0       0       0
  5154 ;;      Totals:         0       0       0       0       0
  5155 ;;Total ram usage:        0 bytes
  5156 ;; Hardware stack levels used:    1
  5157 ;; Hardware stack levels required when called:    2
  5158 ;; This function calls:
  5159 ;;		_lcdCmd
  5160 ;; This function is called by:
  5161 ;;		_main
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           
  5166                           ;psect for function _lcdClear
  5167  09B9                     _lcdClear:	
  5168                           
  5169                           ;./lcd.h: 52:     lcdCmd(0);
  5170                           
  5171                           ;incstack = 0
  5172                           ; Regs used in _lcdClear: [wreg+status,2+status,0+pclath+cstack]
  5173  09B9  3000               	movlw	0
  5174  09BA  120A  158A  21FE  120A  158A  	fcall	_lcdCmd
  5175                           
  5176                           ;./lcd.h: 53:     lcdCmd(1);
  5177  09BF  3001               	movlw	1
  5178  09C0  120A  158A  21FE   	fcall	_lcdCmd
  5179  09C3  0008               	return
  5180  09C4                     __end_of_lcdClear:	
  5181                           
  5182                           	psect	text18
  5183  09FE                     __ptext18:	
  5184 ;; *************** function _lcdCmd *****************
  5185 ;; Defined at:
  5186 ;;		line 43 in file "./lcd.h"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;  a               1    wreg     unsigned char 
  5189 ;; Auto vars:     Size  Location     Type
  5190 ;;  a               1    3[COMMON] unsigned char 
  5191 ;; Return value:  Size  Location     Type
  5192 ;;                  1    wreg      void 
  5193 ;; Registers used:
  5194 ;;		wreg, status,2, status,0, pclath, cstack
  5195 ;; Tracked objects:
  5196 ;;		On entry : 0/0
  5197 ;;		On exit  : 0/0
  5198 ;;		Unchanged: 0/0
  5199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5200 ;;      Params:         0       0       0       0       0
  5201 ;;      Locals:         1       0       0       0       0
  5202 ;;      Temps:          2       0       0       0       0
  5203 ;;      Totals:         3       0       0       0       0
  5204 ;;Total ram usage:        3 bytes
  5205 ;; Hardware stack levels used:    1
  5206 ;; Hardware stack levels required when called:    1
  5207 ;; This function calls:
  5208 ;;		_lcdPort
  5209 ;; This function is called by:
  5210 ;;		_lcdClear
  5211 ;;		_lcdSetCursor
  5212 ;;		_lcdInit
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           
  5217                           ;psect for function _lcdCmd
  5218  09FE                     _lcdCmd:	
  5219                           
  5220                           ;incstack = 0
  5221                           ; Regs used in _lcdCmd: [wreg+status,2+status,0+pclath+cstack]
  5222                           ;lcdCmd@a stored from wreg
  5223  09FE  00F3               	movwf	lcdCmd@a
  5224                           
  5225                           ;./lcd.h: 44:     RD2 = 0;
  5226  09FF  1283               	bcf	3,5	;RP0=0, select bank0
  5227  0A00  1303               	bcf	3,6	;RP1=0, select bank0
  5228  0A01  1108               	bcf	8,2	;volatile
  5229                           
  5230                           ;./lcd.h: 45:     lcdPort(a);
  5231  0A02  0873               	movf	lcdCmd@a,w
  5232  0A03  120A  158A  21E4  120A  158A  	fcall	_lcdPort
  5233                           
  5234                           ;./lcd.h: 46:     RD3 = 1;
  5235  0A08  1283               	bcf	3,5	;RP0=0, select bank0
  5236  0A09  1303               	bcf	3,6	;RP1=0, select bank0
  5237  0A0A  1588               	bsf	8,3	;volatile
  5238                           
  5239                           ;./lcd.h: 47:     _delay((unsigned long)((4)*(4000000/4000.0)));
  5240  0A0B  3006               	movlw	6
  5241  0A0C  00F2               	movwf	??_lcdCmd+1
  5242  0A0D  3030               	movlw	48
  5243  0A0E  00F1               	movwf	??_lcdCmd
  5244  0A0F                     u3767:	
  5245  0A0F  0BF1               	decfsz	??_lcdCmd,f
  5246  0A10  2A0F               	goto	u3767
  5247  0A11  0BF2               	decfsz	??_lcdCmd+1,f
  5248  0A12  2A0F               	goto	u3767
  5249  0A13  0000               	nop
  5250                           
  5251                           ;./lcd.h: 48:     RD3 = 0;
  5252  0A14  1283               	bcf	3,5	;RP0=0, select bank0
  5253  0A15  1303               	bcf	3,6	;RP1=0, select bank0
  5254  0A16  1188               	bcf	8,3	;volatile
  5255  0A17  0008               	return
  5256  0A18                     __end_of_lcdCmd:	
  5257                           
  5258                           	psect	text19
  5259  09E4                     __ptext19:	
  5260 ;; *************** function _lcdPort *****************
  5261 ;; Defined at:
  5262 ;;		line 21 in file "./lcd.h"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;  a               1    wreg     unsigned char 
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;  a               1    0[COMMON] unsigned char 
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  1    wreg      void 
  5269 ;; Registers used:
  5270 ;;		wreg
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5276 ;;      Params:         0       0       0       0       0
  5277 ;;      Locals:         1       0       0       0       0
  5278 ;;      Temps:          0       0       0       0       0
  5279 ;;      Totals:         1       0       0       0       0
  5280 ;;Total ram usage:        1 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; This function calls:
  5283 ;;		Nothing
  5284 ;; This function is called by:
  5285 ;;		_lcdCmd
  5286 ;;		_lcdInit
  5287 ;;		_lcdWriteChar
  5288 ;; This function uses a non-reentrant model
  5289 ;;
  5290                           
  5291                           
  5292                           ;psect for function _lcdPort
  5293  09E4                     _lcdPort:	
  5294                           
  5295                           ;incstack = 0
  5296                           ; Regs used in _lcdPort: [wreg]
  5297                           ;lcdPort@a stored from wreg
  5298  09E4  00F0               	movwf	lcdPort@a
  5299                           
  5300                           ;./lcd.h: 22:     if (a & 1)
  5301  09E5  1C70               	btfss	lcdPort@a,0
  5302  09E6  29EB               	goto	l69
  5303                           
  5304                           ;./lcd.h: 23:         RD4 = 1;
  5305  09E7  1283               	bcf	3,5	;RP0=0, select bank0
  5306  09E8  1303               	bcf	3,6	;RP1=0, select bank0
  5307  09E9  1608               	bsf	8,4	;volatile
  5308  09EA  29EE               	goto	l70
  5309  09EB                     l69:	
  5310                           ;./lcd.h: 24:     else
  5311                           
  5312                           
  5313                           ;./lcd.h: 25:         RD4 = 0;
  5314  09EB  1283               	bcf	3,5	;RP0=0, select bank0
  5315  09EC  1303               	bcf	3,6	;RP1=0, select bank0
  5316  09ED  1208               	bcf	8,4	;volatile
  5317  09EE                     l70:	
  5318                           
  5319                           ;./lcd.h: 27:     if (a & 2)
  5320  09EE  1CF0               	btfss	lcdPort@a,1
  5321  09EF  29F2               	goto	l71
  5322                           
  5323                           ;./lcd.h: 28:         RD5 = 1;
  5324  09F0  1688               	bsf	8,5	;volatile
  5325  09F1  29F3               	goto	l72
  5326  09F2                     l71:	
  5327                           ;./lcd.h: 29:     else
  5328                           
  5329                           
  5330                           ;./lcd.h: 30:         RD5 = 0;
  5331  09F2  1288               	bcf	8,5	;volatile
  5332  09F3                     l72:	
  5333                           
  5334                           ;./lcd.h: 32:     if (a & 4)
  5335  09F3  1D70               	btfss	lcdPort@a,2
  5336  09F4  29F7               	goto	l73
  5337                           
  5338                           ;./lcd.h: 33:         RD6 = 1;
  5339  09F5  1708               	bsf	8,6	;volatile
  5340  09F6  29F8               	goto	l74
  5341  09F7                     l73:	
  5342                           ;./lcd.h: 34:     else
  5343                           
  5344                           
  5345                           ;./lcd.h: 35:         RD6 = 0;
  5346  09F7  1308               	bcf	8,6	;volatile
  5347  09F8                     l74:	
  5348                           
  5349                           ;./lcd.h: 37:     if (a & 8)
  5350  09F8  1DF0               	btfss	lcdPort@a,3
  5351  09F9  29FC               	goto	l75
  5352                           
  5353                           ;./lcd.h: 38:         RD7 = 1;
  5354  09FA  1788               	bsf	8,7	;volatile
  5355  09FB  0008               	return
  5356  09FC                     l75:	
  5357                           ;./lcd.h: 39:     else
  5358                           
  5359                           
  5360                           ;./lcd.h: 40:         RD7 = 0;
  5361  09FC  1388               	bcf	8,7	;volatile
  5362  09FD  0008               	return
  5363  09FE                     __end_of_lcdPort:	
  5364                           
  5365                           	psect	text20
  5366  09D4                     __ptext20:	
  5367 ;; *************** function _initServos *****************
  5368 ;; Defined at:
  5369 ;;		line 26 in file "./servo_pwm.h"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;		None
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;		None
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  1    wreg      void 
  5376 ;; Registers used:
  5377 ;;		wreg, status,2, status,0, pclath, cstack
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5383 ;;      Params:         0       0       0       0       0
  5384 ;;      Locals:         0       0       0       0       0
  5385 ;;      Temps:          0       0       0       0       0
  5386 ;;      Totals:         0       0       0       0       0
  5387 ;;Total ram usage:        0 bytes
  5388 ;; Hardware stack levels used:    1
  5389 ;; Hardware stack levels required when called:    1
  5390 ;; This function calls:
  5391 ;;		_setPR2
  5392 ;;		_setTMR2
  5393 ;; This function is called by:
  5394 ;;		_main
  5395 ;; This function uses a non-reentrant model
  5396 ;;
  5397                           
  5398                           
  5399                           ;psect for function _initServos
  5400  09D4                     _initServos:	
  5401                           
  5402                           ;./servo_pwm.h: 27:     setPR2();
  5403                           
  5404                           ;incstack = 0
  5405                           ; Regs used in _initServos: [wreg+status,2+status,0+pclath+cstack]
  5406  09D4  120A  158A  21AC  120A  158A  	fcall	_setPR2
  5407                           
  5408                           ;./servo_pwm.h: 28:     setTMR2(1);
  5409  09D9  3001               	movlw	1
  5410  09DA  120A  158A  2218  120A  158A  	fcall	_setTMR2
  5411                           
  5412                           ;./servo_pwm.h: 29:     setTMR2(2);
  5413  09DF  3002               	movlw	2
  5414  09E0  120A  158A  2218   	fcall	_setTMR2
  5415  09E3  0008               	return
  5416  09E4                     __end_of_initServos:	
  5417                           
  5418                           	psect	text21
  5419  0A18                     __ptext21:	
  5420 ;; *************** function _setTMR2 *****************
  5421 ;; Defined at:
  5422 ;;		line 51 in file "./servo_pwm.h"
  5423 ;; Parameters:    Size  Location     Type
  5424 ;;  pwm             1    wreg     const unsigned char 
  5425 ;; Auto vars:     Size  Location     Type
  5426 ;;  pwm             1    0[COMMON] const unsigned char 
  5427 ;; Return value:  Size  Location     Type
  5428 ;;                  1    wreg      void 
  5429 ;; Registers used:
  5430 ;;		wreg, status,2, status,0
  5431 ;; Tracked objects:
  5432 ;;		On entry : 0/0
  5433 ;;		On exit  : 0/0
  5434 ;;		Unchanged: 0/0
  5435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5436 ;;      Params:         0       0       0       0       0
  5437 ;;      Locals:         1       0       0       0       0
  5438 ;;      Temps:          0       0       0       0       0
  5439 ;;      Totals:         1       0       0       0       0
  5440 ;;Total ram usage:        1 bytes
  5441 ;; Hardware stack levels used:    1
  5442 ;; This function calls:
  5443 ;;		Nothing
  5444 ;; This function is called by:
  5445 ;;		_initServos
  5446 ;; This function uses a non-reentrant model
  5447 ;;
  5448                           
  5449                           
  5450                           ;psect for function _setTMR2
  5451  0A18                     _setTMR2:	
  5452                           
  5453                           ;incstack = 0
  5454                           ; Regs used in _setTMR2: [wreg+status,2+status,0]
  5455                           ;setTMR2@pwm stored from wreg
  5456  0A18  00F0               	movwf	setTMR2@pwm
  5457                           
  5458                           ;./servo_pwm.h: 52:     if (pwm == 2) {
  5459  0A19  3002               	movlw	2
  5460  0A1A  0670               	xorwf	setTMR2@pwm,w
  5461  0A1B  1D03               	btfss	3,2
  5462  0A1C  2A22               	goto	l130
  5463                           
  5464                           ;./servo_pwm.h: 53:         CCP2M3 = 1;
  5465  0A1D  1283               	bcf	3,5	;RP0=0, select bank0
  5466  0A1E  1303               	bcf	3,6	;RP1=0, select bank0
  5467  0A1F  159D               	bsf	29,3	;volatile
  5468                           
  5469                           ;./servo_pwm.h: 54:         CCP2M2 = 1;
  5470  0A20  151D               	bsf	29,2	;volatile
  5471                           
  5472                           ;./servo_pwm.h: 55:     } else {
  5473  0A21  2A26               	goto	l131
  5474  0A22                     l130:	
  5475                           
  5476                           ;./servo_pwm.h: 56:         CCP1M3 = 1;
  5477  0A22  1283               	bcf	3,5	;RP0=0, select bank0
  5478  0A23  1303               	bcf	3,6	;RP1=0, select bank0
  5479  0A24  1597               	bsf	23,3	;volatile
  5480                           
  5481                           ;./servo_pwm.h: 57:         CCP1M2 = 1;
  5482  0A25  1517               	bsf	23,2	;volatile
  5483  0A26                     l131:	
  5484                           ;./servo_pwm.h: 58:     }
  5485                           
  5486                           
  5487                           ;./servo_pwm.h: 66:     T2CKPS0 = 1;
  5488  0A26  1412               	bsf	18,0	;volatile
  5489                           
  5490                           ;./servo_pwm.h: 67:     T2CKPS1 = 1;
  5491  0A27  1492               	bsf	18,1	;volatile
  5492                           
  5493                           ;./servo_pwm.h: 69:     TMR2ON = 1;
  5494  0A28  1512               	bsf	18,2	;volatile
  5495                           
  5496                           ;./servo_pwm.h: 70:     if (pwm == 2)
  5497  0A29  3002               	movlw	2
  5498  0A2A  0670               	xorwf	setTMR2@pwm,w
  5499  0A2B  1D03               	btfss	3,2
  5500  0A2C  2A31               	goto	l132
  5501                           
  5502                           ;./servo_pwm.h: 71:         TRISC2 = 0;
  5503  0A2D  1683               	bsf	3,5	;RP0=1, select bank1
  5504  0A2E  1303               	bcf	3,6	;RP1=0, select bank1
  5505  0A2F  1107               	bcf	7,2	;volatile
  5506  0A30  0008               	return
  5507  0A31                     l132:	
  5508                           ;./servo_pwm.h: 72:     else
  5509                           
  5510                           
  5511                           ;./servo_pwm.h: 73:         TRISC1 = 0;
  5512  0A31  1683               	bsf	3,5	;RP0=1, select bank1
  5513  0A32  1303               	bcf	3,6	;RP1=0, select bank1
  5514  0A33  1087               	bcf	7,1	;volatile
  5515  0A34  0008               	return
  5516  0A35                     __end_of_setTMR2:	
  5517                           
  5518                           	psect	text22
  5519  09AC                     __ptext22:	
  5520 ;; *************** function _setPR2 *****************
  5521 ;; Defined at:
  5522 ;;		line 18 in file "./servo_pwm.h"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;		None
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;		None
  5527 ;; Return value:  Size  Location     Type
  5528 ;;                  1    wreg      void 
  5529 ;; Registers used:
  5530 ;;		wreg
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5536 ;;      Params:         0       0       0       0       0
  5537 ;;      Locals:         0       0       0       0       0
  5538 ;;      Temps:          0       0       0       0       0
  5539 ;;      Totals:         0       0       0       0       0
  5540 ;;Total ram usage:        0 bytes
  5541 ;; Hardware stack levels used:    1
  5542 ;; This function calls:
  5543 ;;		Nothing
  5544 ;; This function is called by:
  5545 ;;		_initServos
  5546 ;; This function uses a non-reentrant model
  5547 ;;
  5548                           
  5549                           
  5550                           ;psect for function _setPR2
  5551  09AC                     _setPR2:	
  5552                           
  5553                           ;./servo_pwm.h: 19:     PR2 = (4000000 / (245 * 4 * 16)) - 1;
  5554                           
  5555                           ;incstack = 0
  5556                           ; Regs used in _setPR2: [wreg]
  5557  09AC  30FE               	movlw	254
  5558  09AD  1683               	bsf	3,5	;RP0=1, select bank1
  5559  09AE  1303               	bcf	3,6	;RP1=0, select bank1
  5560  09AF  0092               	movwf	18	;volatile
  5561  09B0  0008               	return
  5562  09B1                     __end_of_setPR2:	
  5563                           
  5564                           	psect	text23
  5565  0A35                     __ptext23:	
  5566 ;; *************** function _adcRead *****************
  5567 ;; Defined at:
  5568 ;;		line 35 in file "./adc.h"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;  adcChannel      2    0[COMMON] const int 
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;		None
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  2    0[COMMON] int 
  5575 ;; Registers used:
  5576 ;;		wreg, status,2, status,0
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5582 ;;      Params:         2       0       0       0       0
  5583 ;;      Locals:         0       0       0       0       0
  5584 ;;      Temps:          2       0       0       0       0
  5585 ;;      Totals:         4       0       0       0       0
  5586 ;;Total ram usage:        4 bytes
  5587 ;; Hardware stack levels used:    1
  5588 ;; This function calls:
  5589 ;;		Nothing
  5590 ;; This function is called by:
  5591 ;;		_main
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           
  5596                           ;psect for function _adcRead
  5597  0A35                     _adcRead:	
  5598                           
  5599                           ;./adc.h: 36:     ADCON0bits.ADON = 1;
  5600                           
  5601                           ;incstack = 0
  5602                           ; Regs used in _adcRead: [wreg+status,2+status,0]
  5603  0A35  1283               	bcf	3,5	;RP0=0, select bank0
  5604  0A36  1303               	bcf	3,6	;RP1=0, select bank0
  5605  0A37  141F               	bsf	31,0	;volatile
  5606                           
  5607                           ;./adc.h: 37:     ADCON0bits.CHS = adcChannel;
  5608  0A38  0870               	movf	adcRead@adcChannel,w
  5609  0A39  00F2               	movwf	??_adcRead
  5610  0A3A  0DF2               	rlf	??_adcRead,f
  5611  0A3B  0DF2               	rlf	??_adcRead,f
  5612  0A3C  0DF2               	rlf	??_adcRead,f
  5613  0A3D  081F               	movf	31,w	;volatile
  5614  0A3E  0672               	xorwf	??_adcRead,w
  5615  0A3F  39C7               	andlw	-57
  5616  0A40  0672               	xorwf	??_adcRead,w
  5617  0A41  009F               	movwf	31	;volatile
  5618                           
  5619                           ;./adc.h: 38:     _delay((unsigned long)((10)*(4000000/4000.0)));
  5620  0A42  300D               	movlw	13
  5621  0A43  00F3               	movwf	??_adcRead+1
  5622  0A44  30FB               	movlw	251
  5623  0A45  00F2               	movwf	??_adcRead
  5624  0A46                     u3777:	
  5625  0A46  0BF2               	decfsz	??_adcRead,f
  5626  0A47  2A46               	goto	u3777
  5627  0A48  0BF3               	decfsz	??_adcRead+1,f
  5628  0A49  2A46               	goto	u3777
  5629  0A4A  2A4B               	nop2
  5630                           
  5631                           ;./adc.h: 39:     ADCON0bits.GO = 1;
  5632  0A4B  1283               	bcf	3,5	;RP0=0, select bank0
  5633  0A4C  1303               	bcf	3,6	;RP1=0, select bank0
  5634  0A4D  151F               	bsf	31,2	;volatile
  5635  0A4E                     l107:	
  5636                           ;./adc.h: 40:     while (ADCON0bits.GO_DONE);
  5637                           
  5638  0A4E  191F               	btfsc	31,2	;volatile
  5639  0A4F  2A4E               	goto	l107
  5640                           
  5641                           ;./adc.h: 42:     return (ADRESH << 8) + (ADRESL);
  5642  0A50  081E               	movf	30,w	;volatile
  5643  0A51  00F1               	movwf	?_adcRead+1
  5644  0A52  1683               	bsf	3,5	;RP0=1, select bank1
  5645  0A53  1303               	bcf	3,6	;RP1=0, select bank1
  5646  0A54  081E               	movf	30,w	;volatile
  5647  0A55  00F0               	movwf	?_adcRead
  5648  0A56  0008               	return
  5649  0A57                     __end_of_adcRead:	
  5650                           
  5651                           	psect	text24
  5652  09C4                     __ptext24:	
  5653 ;; *************** function _adcInit *****************
  5654 ;; Defined at:
  5655 ;;		line 1 in file "./adc.h"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;		None
  5658 ;; Auto vars:     Size  Location     Type
  5659 ;;		None
  5660 ;; Return value:  Size  Location     Type
  5661 ;;                  1    wreg      void 
  5662 ;; Registers used:
  5663 ;;		wreg, status,2, status,0
  5664 ;; Tracked objects:
  5665 ;;		On entry : 0/0
  5666 ;;		On exit  : 0/0
  5667 ;;		Unchanged: 0/0
  5668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5669 ;;      Params:         0       0       0       0       0
  5670 ;;      Locals:         0       0       0       0       0
  5671 ;;      Temps:          0       0       0       0       0
  5672 ;;      Totals:         0       0       0       0       0
  5673 ;;Total ram usage:        0 bytes
  5674 ;; Hardware stack levels used:    1
  5675 ;; This function calls:
  5676 ;;		Nothing
  5677 ;; This function is called by:
  5678 ;;		_main
  5679 ;; This function uses a non-reentrant model
  5680 ;;
  5681                           
  5682                           
  5683                           ;psect for function _adcInit
  5684  09C4                     _adcInit:	
  5685                           
  5686                           ;./adc.h: 11:     ADCON0bits.ADCS = 0b01;
  5687                           
  5688                           ;incstack = 0
  5689                           ; Regs used in _adcInit: [wreg+status,2+status,0]
  5690  09C4  1283               	bcf	3,5	;RP0=0, select bank0
  5691  09C5  1303               	bcf	3,6	;RP1=0, select bank0
  5692  09C6  081F               	movf	31,w	;volatile
  5693  09C7  393F               	andlw	-193
  5694  09C8  3840               	iorlw	64
  5695  09C9  009F               	movwf	31	;volatile
  5696                           
  5697                           ;./adc.h: 12:     ADCON0bits.CHS = 0b000;
  5698  09CA  30C7               	movlw	-57
  5699  09CB  059F               	andwf	31,f	;volatile
  5700                           
  5701                           ;./adc.h: 13:     ADCON0bits.ADON = 0;
  5702  09CC  101F               	bcf	31,0	;volatile
  5703                           
  5704                           ;./adc.h: 24:     ADCON1bits.ADFM = 1;
  5705  09CD  1683               	bsf	3,5	;RP0=1, select bank1
  5706  09CE  1303               	bcf	3,6	;RP1=0, select bank1
  5707  09CF  179F               	bsf	31,7	;volatile
  5708                           
  5709                           ;./adc.h: 25:     ADCON1bits.ADCS2 = 1;
  5710  09D0  171F               	bsf	31,6	;volatile
  5711                           
  5712                           ;./adc.h: 26:     ADCON1bits.PCFG = 0b0000;
  5713  09D1  30F0               	movlw	-16
  5714  09D2  059F               	andwf	31,f	;volatile
  5715  09D3  0008               	return
  5716  09D4                     __end_of_adcInit:	
  5717  007E                     btemp	set	126	;btemp
  5718  007E                     wtemp0	set	126


Data Sizes:
    Strings     46
    Constant    10
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     21      37
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[13]), STR_3(CODE[13]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> mensaje(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcdPrint@a	PTR unsigned char  size(2) Largest target is 16
		 -> mensaje(BANK1[16]), STR_2(CODE[7]), STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setAngule2->___xxtofl
    _setAngule1->___xxtofl
    _setDuty->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    ___fladd->___xxtofl
    _lcdSetCursor->_lcdCmd
    _lcdPrint->_lcdWriteChar
    _lcdWriteChar->_lcdPort
    _lcdInit->_lcdCmd
    _lcdClear->_lcdCmd
    _lcdCmd->_lcdPort
    _initServos->_setTMR2

Critical Paths under _main in BANK0

    _setAngule2->_setDuty
    _setAngule1->_setDuty
    _setDuty->___fltol
    ___fltol->___fladd
    ___flmul->___fldiv
    ___fladd->___flmul

Critical Paths under _main in BANK1

    _main->_setAngule1
    _main->_setAngule2
    _setAngule2->___fltol
    _setAngule1->___fltol
    _setDuty->___fltol

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0   32876
                                             12 BANK1      9     9      0
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _adcInit
                            _adcRead
                         _initServos
                           _lcdClear
                            _lcdInit
                           _lcdPrint
                       _lcdSetCursor
                         _setAngule1
                         _setAngule2
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1320
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setAngule2                                           7     7      0   12645
                                              5 BANK1      7     7      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _setDuty
 ---------------------------------------------------------------------------------
 (1) _setAngule1                                           7     7      0   12645
                                              5 BANK1      7     7      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _setDuty
 ---------------------------------------------------------------------------------
 (2) _setDuty                                              2     0      2    5783
                                             78 BANK0      2     0      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     702
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     609
                                             72 BANK0      6     2      4
                                              0 BANK1      5     5      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    3025
                                             26 BANK0     26    18      8
                          __Umul8_16
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    1273
                                              0 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    2414
                                             52 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcdSetCursor                                         7     6      1     684
                                              4 COMMON     7     6      1
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             7     5      2     572
                                              5 COMMON     7     5      2
                       _lcdWriteChar
 ---------------------------------------------------------------------------------
 (2) _lcdWriteChar                                         4     4      0     178
                                              1 COMMON     4     4      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              2     2      0     198
                                              4 COMMON     2     2      0
                             _lcdCmd
                            _lcdPort
 ---------------------------------------------------------------------------------
 (1) _lcdClear                                             0     0      0     110
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (2) _lcdCmd                                               3     3      0     110
                                              1 COMMON     3     3      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (3) _lcdPort                                              1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initServos                                           0     0      0      44
                             _setPR2
                            _setTMR2
 ---------------------------------------------------------------------------------
 (2) _setTMR2                                              1     1      0      44
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setPR2                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adcRead                                              4     2      2      98
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flmul
     __Umul8_16
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _adcInit
   _adcRead
   _initServos
     _setPR2
     _setTMR2
   _lcdClear
     _lcdCmd
       _lcdPort
   _lcdInit
     _lcdCmd
       _lcdPort
     _lcdPort
   _lcdPrint
     _lcdWriteChar
       _lcdPort
   _lcdSetCursor
     _lcdCmd
       _lcdPort
   _setAngule1
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _setDuty
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
   _setAngule2
     ___fladd
       ___flmul (ARG)
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _setDuty
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         __Umul8_16
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      83       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     15      25       7       46.3%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      83      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu May 16 17:35:58 2019

           ___fldiv@aexp 0039             ___fldiv@bexp 0038                        pc 0002  
           ___fldiv@sign 0031              __CFG_CP$OFF 0000                       l70 09EE  
                     l71 09F2                       l72 09F3                       l73 09F7  
                     l74 09F8                       l75 09FC                       l69 09EB  
                     fsr 0004      __Umul8_16@word_mpld 0076                      l130 0A22  
                    l107 0A4E                      l131 0A26                      l132 0A31  
                    l142 0F70                      l144 0F84                      l612 015C  
                    l703 0E5D                      l560 039C                      l456 0C8C  
                    l704 0E67                      l562 037A                      l634 029B  
                    l556 0303                      l636 02A9                      l709 0A69  
                    l590 04BD                      l664 07E8                      l577 0455  
                    l690 0E07                      l598 04D5                      l696 0E47  
                    _RB0 0030                      _RB1 0031                      _RD2 0042  
                    _RD3 0043                      _RD4 0044                      _RD5 0045  
                    _RD6 0046                      _RD7 0047                      _PR2 0092  
           __CFG_CPD$OFF 0000                      fsr0 0004                      indf 0000  
           __CFG_FOSC$XT 0000             ___flmul@aexp 004C             ___flmul@bexp 004D  
           ___flmul@sign 0047             ___flmul@temp 0052             ___flmul@prod 004E  
         ??_lcdWriteChar 0071            lcdWriteChar@a 0074            lcdWriteChar@y 0073  
            main@angule1 00B1              main@angule2 00B2             __CFG_LVP$OFF 0000  
           ___fltol@exp1 006D                     l2003 07B8                     l2009 07D1  
                   l2033 0E16                     l2121 0AC7                     l2027 0DFF  
                   l2131 0AE8                     l2205 030D                     l2061 0E84  
                   l2037 0E1A                     l2311 047D                     l2047 0E5B  
                   l2039 0E2C                     l2127 0ADD                     l2119 0AB9  
                   l2143 000A                     l2305 0476                     l2313 047F  
                   l2049 0E4C                     l2145 0018                     l2153 0031  
                   l2323 048A                     l2243 0385                     l2235 0349  
                   l2171 02CE                     l2341 04CD                     l2261 03AA  
                   l2245 0387                     l2253 0396                     l2149 0026  
                   l2319 0488                     l2271 03CD                     l2175 02D1  
                   l2511 00C8                     l2503 00C4                     l2409 0AEF  
                   l2345 04D1                     l2177 02D9                     l1705 0C34  
                   l2513 003D                     l2363 0B4F                     l2195 02F8  
                   l2443 0D3C                     l2515 0109                     l2269 03CB  
                   l1813 01D6                     l1821 01B2                     l1725 0C74  
                   l1709 0C3D                     l2279 03DD                     l2199 02FB  
                   l1823 01FA                     l1735 0CA3                     l1727 0C88  
                   l2297 0467                     l2289 0447                     l1753 012B  
                   l1913 0522                     l2457 0DD8                     l2537 0EDB  
                   l1819 01F5                     l1683 0A61                     l1915 0524  
                   l2491 0094                     l2475 007B                     l1845 0234  
                   l1837 0200                     l1773 0151                     l1757 012E  
                   l1925 053A                     l1917 052C                     l2485 0092  
                   l2469 005D                     l1863 0281                     l1839 021D  
                   l1759 0136                     l1849 0236                     l1793 0187  
                   l1777 0154                     l2497 00B5                     l1875 02A5  
                   l1859 0268                     l1787 017B                     l2589 0070  
                   l1895 04FD                     l1985 076E                     l1977 073A  
                   l1897 04FF                     l1979 0757                     l1899 0507  
                   l1989 0770                     l1999 07A2                     STR_1 0834  
                   STR_2 0841                     STR_3 081A                     STR_4 0827  
                   u2115 01BB                     u2205 020F                     u2125 01C4  
                   u2145 01CF                     u2155 01E4                     u3221 0408  
                   u3213 03EF                     u3205 03D1                     u3125 038B  
                   u3230 041C                     u3222 0409                     u3231 041D  
                   u3223 040E                     u3232 0422                     u3224 040F  
                   u3080 0369                     u3233 0423                     u3225 0414  
                   u2185 0204                     u2505 06E3                     u3226 0415  
                   u3090 036A                     u3075 035D                     u2275 0253  
                   u2435 05EA                     u2285 0271                     u2525 0708  
                   u2295 028C                     u2545 0726                     u2465 0647  
                   u3530 0D39                     u3275 0469                     u2555 073E  
                   u2715 0E23                     u2645 078D                     u3605 00AB  
                   u3455 0B36                     u3375 04A7                     u2655 07AB  
                   u2575 0749                     u1935 0C54                     u2735 0E3F  
                   u3560 0DD5                     u2825 0A8B                     u1865 0A6A  
                   u2665 07C3                     u2905 0ADE                     u3475 0B5B  
                   u2755 0E54                     u3707 0FFA                     u3717 0A9B  
                   u1965 0C75                     u3727 0AAB                     u2935 000D  
                   u3737 0BD4                     u2865 0ABC                     u3747 0BE3  
                   u1995 0C93                     u2795 0E6F                     u2955 001E  
                   u3757 0BF1                     u2885 0AC8                     u2965 0027  
                   u3767 0A0F                     u2895 0AD4                     u3777 0A46  
                   u3697 0EC6             __CFG_WRT$OFF 0000                     _main 0E8D  
       setAngule1@angule 00A9                     btemp 007E         setAngule2@angule 00A9  
                   start 0000          ___fldiv@new_exp 0032            ___fltol@sign1 006C  
        __end_of___fladd 04E0                    ?_main 0070          __end_of_adcInit 09D4  
                  _CCP1X 00BD          __end_of___fldiv 02B1                    _CCP1Y 00BC  
                  _CCP2X 00ED          __end_of_adcRead 0A57                    _CCP2Y 00EC  
          __CFG_WDTE$OFF 0000          __end_of___flmul 07F5          __end_of___fltol 0CB2  
        __end_of___lwdiv 0AED          __end_of___lwmod 0036                    _PORTD 0008  
                  _TRISD 0088          __end_of_lcdInit 0C25          __end_of_lcdPort 09FE  
        __end_of_dpowers 081A          __end_of_setTMR2 0A35          __end_of_setDuty 0BC4  
         __CFG_BOREN$OFF 0000                    pclath 000A                    status 0003  
                  wtemp0 007E          __end_of_sprintf 010E          __initialization 07F5  
           __end_of_main 1000                   ??_main 00AC     __end_of_lcdSetCursor 0B74  
                 _CCP1M2 00BA                   _CCP1M3 00BB                   _CCP2M2 00EA  
                 _CCP2M3 00EB                   _ADRESH 001E                   _ADRESL 009E  
                 _CCPR1L 0015                   _CCPR2L 001B                   _TMR2ON 0092  
                 _TRISC1 0439                   _TRISC2 043A         __end_of___xxtofl 0E8D  
       __end_of_lcdClear 09C4           __CFG_PWRTE$OFF 0000         __end_of_lcdPrint 0B2A  
              ??___fladd 005C                ??_adcInit 0070                ??___fldiv 0028  
              ??_adcRead 0072     __end_of_lcdWriteChar 0AB1                ??___flmul 0042  
              ??___fltol 00A0                   _lcdCmd 09FE                ??___lwdiv 0074  
              ??___lwmod 007C                   _setPR2 09AC                ??_lcdInit 0074  
              ??_lcdPort 0070                ??_setTMR2 0070       __size_of__Umul8_16 0023  
              ??_setDuty 007E                ??_sprintf 0023             ___xxtofl@arg 007A  
           ___xxtofl@exp 0079             ___xxtofl@val 0070  __end_of__initialization 07FC  
             ___fltol@f1 0068           __pcstackCOMMON 0070         lcdWriteChar@temp 0072  
             __pbssBANK1 00B5        __end_of__Umul8_16 0A7A               __pmaintext 0E8D  
                ?_lcdCmd 0070    __size_of_lcdSetCursor 004A                  ?_setPR2 0070  
            setDuty@duty 006E                  _T2CKPS0 0090                  _T2CKPS1 0091  
              ?___xxtofl 0070                ?_lcdClear 0070                ?_lcdPrint 0075  
             __stringtab 0800    __size_of_lcdWriteChar 0037             _lcdSetCursor 0B2A  
                ___fladd 02B1                  _adcInit 09C4                  ___fldiv 010E  
                _adcRead 0A35                  ___flmul 04E0                  ___fltol 0C25  
             _initServos 09D4                  ___lwdiv 0AB1                  ___lwmod 0004  
        __size_of_lcdCmd 001A          __size_of_setPR2 0005                  _lcdInit 0BC4  
                __ptext1 0036                  __ptext2 0004                  __ptext3 0AB1  
                __ptext4 0D4E                  __ptext5 0CB2                  __ptext6 0B74  
                __ptext7 0DEA                  __ptext8 0C25                  __ptext9 04E0  
                _lcdPort 09E4                  _dpowers 0810                  _mensaje 00B5  
             ??___xxtofl 0074                  _setTMR2 0A18                  lcdCmd@a 0073  
                _setDuty 0B74               ??_lcdClear 0074               _setAngule1 0CB2  
             _setAngule2 0D4E               ??_lcdPrint 0077                  _sprintf 0036  
                clrloop0 09B2             _lcdWriteChar 0A7A     end_of_initialization 07FC  
            ___fladd@grs 0067            ___xxtofl@sign 0078              ___fldiv@grs 0034  
            ___fldiv@rem 002D           setAngule1@duty 00AA           setAngule2@duty 00AA  
            ___flmul@grs 0048               main@servo1 00AF               main@servo2 00B3  
            ?_initServos 0070           __end_of_lcdCmd 0A18           __end_of_setPR2 09B1  
    start_initialization 07F5              ?_setAngule1 0070              ?_setAngule2 0070  
               ??_lcdCmd 0071                __Umul8_16 0A57                 ??_setPR2 0070  
              ___fladd@a 0058                ___fladd@b 0054                ___fldiv@a 0020  
              ___fldiv@b 0024                ___flmul@a 003E                ___flmul@b 003A  
              ___latbits 0002               setTMR2@pwm 0070            __pcstackBANK0 0020  
          __pcstackBANK1 00A0        __size_of___xxtofl 00A3        __size_of_lcdClear 000B  
    __size_of_initServos 0010        __size_of_lcdPrint 003D              sprintf@flag 0027  
            sprintf@prec 0028         ___lwdiv@dividend 0072                 ?___fladd 0054  
               ?_adcInit 0070                 ?___fldiv 0020                 ?_adcRead 0070  
               ?___flmul 003A                 ?___fltol 0068      __size_of_setAngule1 009C  
    __size_of_setAngule2 009C               ?__Umul8_16 0070                 ?___lwdiv 0070  
               ?___lwmod 0078                __pstrings 0800                 ?_lcdInit 0070  
               ?_lcdPort 0070        adcRead@adcChannel 0070                 ?_setTMR2 0070  
               ?_setDuty 006E         ___lwdiv@quotient 0075                 ?_sprintf 0020  
              clear_ram0 09B1                lcdPrint@a 0075                lcdPrint@i 007A  
             _ADCON0bits 001F              __stringbase 080F               _ADCON1bits 009F  
       lcdSetCursor@temp 007A             ??_initServos 0071              ??__Umul8_16 0072  
       __size_of___fladd 022F         __size_of_adcInit 0010         __size_of___fldiv 01A3  
       __size_of_adcRead 0022         __size_of___flmul 0315         __size_of___fltol 008D  
       __size_of___lwdiv 003C         __size_of___lwmod 0032       __end_of__stringtab 0810  
       __size_of_lcdInit 0061         __size_of_lcdPort 001A               sprintf@val 0029  
               ___xxtofl 0DEA         __size_of_setTMR2 001D                 _lcdClear 09B9  
        ___lwdiv@divisor 0070             ??_setAngule1 00A5             ??_setAngule2 00A5  
       __size_of_setDuty 0050          ___lwdiv@counter 0077                 __ptext10 0A57  
               __ptext11 010E                 __ptext20 09D4                 __ptext12 02B1  
               __ptext21 0A18                 __ptext13 0B2A                 __ptext22 09AC  
               __ptext14 0AED                 __ptext23 0A35                 __ptext15 0A7A  
               __ptext24 09C4                 __ptext16 0BC4                 __ptext17 09B9  
               __ptext18 09FE                 __ptext19 09E4                 _lcdPrint 0AED  
       __size_of_sprintf 00D8            lcdSetCursor@a 0077            lcdSetCursor@b 0074  
     __end_of_initServos 09E4            lcdSetCursor@y 0079            lcdSetCursor@z 0078  
          __size_of_main 0173                 lcdPort@a 0070       __end_of_setAngule1 0D4E  
     __end_of_setAngule2 0DEA                sprintf@ap 0026                sprintf@sp 002B  
       ___lwmod@dividend 007A            ?_lcdSetCursor 0074                stringcode 080A  
 __Umul8_16@multiplicand 0070                 sprintf@c 002C                 sprintf@f 0020  
        ___lwmod@divisor 0078          ___lwmod@counter 007D                 stringdir 080A  
               stringtab 0800            ?_lcdWriteChar 0070            ___fladd@signs 0064  
           ___fladd@aexp 0065             ___fladd@bexp 0066     __Umul8_16@multiplier 0078  
         ??_lcdSetCursor 0075        __Umul8_16@product 0074  
