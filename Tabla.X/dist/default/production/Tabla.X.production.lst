

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 02 08:37:48 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 2.05
    12                           ; Generated 20/12/2018 GMT
    13                           ; 
    14                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F877A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  0088                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0094                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009C                     	;# 
    96  009D                     	;# 
    97  009E                     	;# 
    98  009F                     	;# 
    99  010C                     	;# 
   100  010D                     	;# 
   101  010E                     	;# 
   102  010F                     	;# 
   103  018C                     	;# 
   104  018D                     	;# 
   105  0000                     	;# 
   106  0001                     	;# 
   107  0002                     	;# 
   108  0003                     	;# 
   109  0004                     	;# 
   110  0005                     	;# 
   111  0006                     	;# 
   112  0007                     	;# 
   113  0008                     	;# 
   114  0009                     	;# 
   115  000A                     	;# 
   116  000B                     	;# 
   117  000C                     	;# 
   118  000D                     	;# 
   119  000E                     	;# 
   120  000E                     	;# 
   121  000F                     	;# 
   122  0010                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0013                     	;# 
   126  0014                     	;# 
   127  0015                     	;# 
   128  0015                     	;# 
   129  0016                     	;# 
   130  0017                     	;# 
   131  0018                     	;# 
   132  0019                     	;# 
   133  001A                     	;# 
   134  001B                     	;# 
   135  001B                     	;# 
   136  001C                     	;# 
   137  001D                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  0081                     	;# 
   141  0085                     	;# 
   142  0086                     	;# 
   143  0087                     	;# 
   144  0088                     	;# 
   145  0089                     	;# 
   146  008C                     	;# 
   147  008D                     	;# 
   148  008E                     	;# 
   149  0091                     	;# 
   150  0092                     	;# 
   151  0093                     	;# 
   152  0094                     	;# 
   153  0098                     	;# 
   154  0099                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  009F                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  018C                     	;# 
   164  018D                     	;# 
   165  0006                     _PORTB	set	6
   166  0086                     _TRISB	set	134
   167                           
   168                           	psect	cinit
   169  07FC                     start_initialization:	
   170                           ; #config settings
   171                           
   172  07FC                     __initialization:	
   173  07FC                     end_of_initialization:	
   174                           ;End of C runtime variable initialization code
   175                           
   176  07FC                     __end_of__initialization:	
   177  07FC  0183               	clrf	3
   178  07FD  120A  118A  2FB5   	ljmp	_main	;jump to C main() function
   179                           
   180                           	psect	cstackCOMMON
   181  0070                     __pcstackCOMMON:	
   182  0070                     ?_main:	
   183  0070                     ?___wmul:	
   184                           ; 1 bytes @ 0x0
   185                           
   186  0070                     ___wmul@multiplier:	
   187                           ; 2 bytes @ 0x0
   188                           
   189                           
   190                           ; 2 bytes @ 0x0
   191  0070                     	ds	2
   192  0072                     ___wmul@multiplicand:	
   193                           
   194                           ; 2 bytes @ 0x2
   195  0072                     	ds	2
   196  0074                     ??___wmul:	
   197  0074                     ___wmul@product:	
   198                           ; 1 bytes @ 0x4
   199                           
   200                           
   201                           ; 2 bytes @ 0x4
   202  0074                     	ds	2
   203  0076                     ??_main:	
   204                           
   205                           ; 1 bytes @ 0x6
   206  0076                     	ds	3
   207                           
   208                           	psect	cstackBANK0
   209  0020                     __pcstackBANK0:	
   210  0020                     main@tabla:	
   211                           
   212                           ; 2 bytes @ 0x0
   213  0020                     	ds	2
   214  0022                     main@resultado:	
   215                           
   216                           ; 2 bytes @ 0x2
   217  0022                     	ds	2
   218  0024                     main@x:	
   219                           
   220                           ; 2 bytes @ 0x4
   221  0024                     	ds	2
   222                           
   223                           	psect	maintext
   224  07B5                     __pmaintext:	
   225 ;;
   226 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   227 ;;
   228 ;; *************** function _main *****************
   229 ;; Defined at:
   230 ;;		line 4 in file "main.c"
   231 ;; Parameters:    Size  Location     Type
   232 ;;		None
   233 ;; Auto vars:     Size  Location     Type
   234 ;;  resultado       2    2[BANK0 ] int 
   235 ;;  x               2    4[BANK0 ] int 
   236 ;;  tabla           2    0[BANK0 ] int 
   237 ;; Return value:  Size  Location     Type
   238 ;;                  1    wreg      void 
   239 ;; Registers used:
   240 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   241 ;; Tracked objects:
   242 ;;		On entry : B00/0
   243 ;;		On exit  : 0/0
   244 ;;		Unchanged: 0/0
   245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   246 ;;      Params:         0       0       0       0       0
   247 ;;      Locals:         0       6       0       0       0
   248 ;;      Temps:          3       0       0       0       0
   249 ;;      Totals:         3       6       0       0       0
   250 ;;Total ram usage:        9 bytes
   251 ;; Hardware stack levels required when called:    1
   252 ;; This function calls:
   253 ;;		___wmul
   254 ;; This function is called by:
   255 ;;		Startup code after reset
   256 ;; This function uses a non-reentrant model
   257 ;;
   258                           
   259                           
   260                           ;psect for function _main
   261  07B5                     _main:	
   262                           
   263                           ;main.c: 5:     TRISB = 0;
   264                           
   265                           ;incstack = 0
   266                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   267  07B5  1683               	bsf	3,5	;RP0=1, select bank1
   268  07B6  1303               	bcf	3,6	;RP1=0, select bank1
   269  07B7  0186               	clrf	6	;volatile
   270                           
   271                           ;main.c: 6:     PORTB = 0;
   272  07B8  1283               	bcf	3,5	;RP0=0, select bank0
   273  07B9  1303               	bcf	3,6	;RP1=0, select bank0
   274  07BA  0186               	clrf	6	;volatile
   275                           
   276                           ;main.c: 8:     int tabla = 2;
   277  07BB  3002               	movlw	2
   278  07BC  00A0               	movwf	main@tabla
   279  07BD  3000               	movlw	0
   280  07BE  00A1               	movwf	main@tabla+1
   281  07BF                     l660:	
   282                           
   283                           ;main.c: 12:         for(int x = 1; x <= 10; x++){
   284  07BF  3001               	movlw	1
   285  07C0  1283               	bcf	3,5	;RP0=0, select bank0
   286  07C1  1303               	bcf	3,6	;RP1=0, select bank0
   287  07C2  00A4               	movwf	main@x
   288  07C3  3000               	movlw	0
   289  07C4  00A5               	movwf	main@x+1
   290  07C5                     l666:	
   291                           
   292                           ;main.c: 13:             int resultado = tabla * x;
   293  07C5  1283               	bcf	3,5	;RP0=0, select bank0
   294  07C6  1303               	bcf	3,6	;RP1=0, select bank0
   295  07C7  0821               	movf	main@tabla+1,w
   296  07C8  00F1               	movwf	___wmul@multiplier+1
   297  07C9  0820               	movf	main@tabla,w
   298  07CA  00F0               	movwf	___wmul@multiplier
   299  07CB  0825               	movf	main@x+1,w
   300  07CC  00F3               	movwf	___wmul@multiplicand+1
   301  07CD  0824               	movf	main@x,w
   302  07CE  00F2               	movwf	___wmul@multiplicand
   303  07CF  120A  118A  2794  120A  118A  	fcall	___wmul
   304  07D4  0871               	movf	?___wmul+1,w
   305  07D5  1283               	bcf	3,5	;RP0=0, select bank0
   306  07D6  1303               	bcf	3,6	;RP1=0, select bank0
   307  07D7  00A3               	movwf	main@resultado+1
   308  07D8  0870               	movf	?___wmul,w
   309  07D9  00A2               	movwf	main@resultado
   310                           
   311                           ;main.c: 14:             PORTB = resultado;
   312  07DA  0822               	movf	main@resultado,w
   313  07DB  0086               	movwf	6	;volatile
   314                           
   315                           ;main.c: 15:             _delay((unsigned long)((300)*(4000000/4000.0)));
   316  07DC  3002               	movlw	2
   317  07DD  00F8               	movwf	??_main+2
   318  07DE  3086               	movlw	134
   319  07DF  00F7               	movwf	??_main+1
   320  07E0  3099               	movlw	153
   321  07E1  00F6               	movwf	??_main
   322  07E2                     u117:	
   323  07E2  0BF6               	decfsz	??_main,f
   324  07E3  2FE2               	goto	u117
   325  07E4  0BF7               	decfsz	??_main+1,f
   326  07E5  2FE2               	goto	u117
   327  07E6  0BF8               	decfsz	??_main+2,f
   328  07E7  2FE2               	goto	u117
   329                           
   330                           ;main.c: 16:         }
   331  07E8  3001               	movlw	1
   332  07E9  1283               	bcf	3,5	;RP0=0, select bank0
   333  07EA  1303               	bcf	3,6	;RP1=0, select bank0
   334  07EB  07A4               	addwf	main@x,f
   335  07EC  1803               	skipnc
   336  07ED  0AA5               	incf	main@x+1,f
   337  07EE  3000               	movlw	0
   338  07EF  07A5               	addwf	main@x+1,f
   339  07F0  0825               	movf	main@x+1,w
   340  07F1  3A80               	xorlw	128
   341  07F2  00FF               	movwf	127
   342  07F3  3080               	movlw	128
   343  07F4  027F               	subwf	127,w
   344  07F5  1D03               	skipz
   345  07F6  2FF9               	goto	u105
   346  07F7  300B               	movlw	11
   347  07F8  0224               	subwf	main@x,w
   348  07F9                     u105:	
   349  07F9  1803               	btfsc	3,0
   350  07FA  2FBF               	goto	l660
   351  07FB  2FC5               	goto	l666
   352  07FC                     __end_of_main:	
   353                           
   354                           	psect	text1
   355  0794                     __ptext1:	
   356 ;; *************** function ___wmul *****************
   357 ;; Defined at:
   358 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
   359 ;; Parameters:    Size  Location     Type
   360 ;;  multiplier      2    0[COMMON] unsigned int 
   361 ;;  multiplicand    2    2[COMMON] unsigned int 
   362 ;; Auto vars:     Size  Location     Type
   363 ;;  product         2    4[COMMON] unsigned int 
   364 ;; Return value:  Size  Location     Type
   365 ;;                  2    0[COMMON] unsigned int 
   366 ;; Registers used:
   367 ;;		wreg, status,2, status,0
   368 ;; Tracked objects:
   369 ;;		On entry : 0/0
   370 ;;		On exit  : 0/0
   371 ;;		Unchanged: 0/0
   372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   373 ;;      Params:         4       0       0       0       0
   374 ;;      Locals:         2       0       0       0       0
   375 ;;      Temps:          0       0       0       0       0
   376 ;;      Totals:         6       0       0       0       0
   377 ;;Total ram usage:        6 bytes
   378 ;; Hardware stack levels used:    1
   379 ;; This function calls:
   380 ;;		Nothing
   381 ;; This function is called by:
   382 ;;		_main
   383 ;; This function uses a non-reentrant model
   384 ;;
   385                           
   386                           
   387                           ;psect for function ___wmul
   388  0794                     ___wmul:	
   389                           
   390                           ;incstack = 0
   391                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   392  0794  01F4               	clrf	___wmul@product
   393  0795  01F5               	clrf	___wmul@product+1
   394  0796                     l644:	
   395  0796  1C70               	btfss	___wmul@multiplier,0
   396  0797  2F9E               	goto	l102
   397  0798  0872               	movf	___wmul@multiplicand,w
   398  0799  07F4               	addwf	___wmul@product,f
   399  079A  1803               	skipnc
   400  079B  0AF5               	incf	___wmul@product+1,f
   401  079C  0873               	movf	___wmul@multiplicand+1,w
   402  079D  07F5               	addwf	___wmul@product+1,f
   403  079E                     l102:	
   404  079E  3001               	movlw	1
   405  079F                     u75:	
   406  079F  1003               	clrc
   407  07A0  0DF2               	rlf	___wmul@multiplicand,f
   408  07A1  0DF3               	rlf	___wmul@multiplicand+1,f
   409  07A2  3EFF               	addlw	-1
   410  07A3  1D03               	skipz
   411  07A4  2F9F               	goto	u75
   412  07A5  3001               	movlw	1
   413  07A6                     u85:	
   414  07A6  1003               	clrc
   415  07A7  0CF1               	rrf	___wmul@multiplier+1,f
   416  07A8  0CF0               	rrf	___wmul@multiplier,f
   417  07A9  3EFF               	addlw	-1
   418  07AA  1D03               	skipz
   419  07AB  2FA6               	goto	u85
   420  07AC  0870               	movf	___wmul@multiplier,w
   421  07AD  0471               	iorwf	___wmul@multiplier+1,w
   422  07AE  1D03               	btfss	3,2
   423  07AF  2F96               	goto	l644
   424  07B0  0875               	movf	___wmul@product+1,w
   425  07B1  00F1               	movwf	?___wmul+1
   426  07B2  0874               	movf	___wmul@product,w
   427  07B3  00F0               	movwf	?___wmul
   428  07B4  0008               	return
   429  07B5                     __end_of___wmul:	
   430  007E                     btemp	set	126	;btemp
   431  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      6       6
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     358
                                              6 COMMON     3     3      0
                                              0 BANK0      6     6      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       6       5        7.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 02 08:37:48 2019

                     u75 079F                       u85 07A6      ___wmul@multiplicand 0072  
                    l102 079E                      l644 0796                      l660 07BF  
                    l666 07C5                      u105 07F9                      u117 07E2  
                   _main 07B5                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTB 0006                    _TRISB 0086  
                  main@x 0024                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0076  
                 ___wmul 0794            main@resultado 0022  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 07B5                  ?___wmul 0070  
        __size_of___wmul 0021                  __ptext1 0794     end_of_initialization 07FC  
         __end_of___wmul 07B5      start_initialization 07FC                 ??___wmul 0074  
              ___latbits 0002            __pcstackBANK0 0020           ___wmul@product 0074  
      ___wmul@multiplier 0070                main@tabla 0020            __size_of_main 0047  
