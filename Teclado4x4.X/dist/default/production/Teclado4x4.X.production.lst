

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon May 06 18:47:46 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16LF877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.05
    14                           ; Generated 20/12/2018 GMT
    15                           ; 
    16                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16LF877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0088                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167                           
   168                           	psect	strings
   169  0003                     __pstrings:	
   170  0003                     stringtab:	
   171  0003                     __stringtab:	
   172  0003                     stringcode:	
   173                           ;	String table - string pointers are 1 byte each
   174                           
   175  0003                     stringdir:	
   176  0003  3000               	movlw	high stringdir
   177  0004  008A               	movwf	10
   178  0005  0804               	movf	4,w
   179  0006  0A84               	incf	4,f
   180  0007  0782               	addwf	2,f
   181  0008                     __stringbase:	
   182  0008  3400               	retlw	0
   183  0009                     __end_of__stringtab:	
   184  0009                     _keyPadMatrix:	
   185  0009  3437               	retlw	55
   186  000A  3438               	retlw	56
   187  000B  3439               	retlw	57
   188  000C  3441               	retlw	65
   189  000D  3434               	retlw	52
   190  000E  3435               	retlw	53
   191  000F  3436               	retlw	54
   192  0010  3442               	retlw	66
   193  0011  3431               	retlw	49
   194  0012  3432               	retlw	50
   195  0013  3433               	retlw	51
   196  0014  3443               	retlw	67
   197  0015  3446               	retlw	70
   198  0016  3430               	retlw	48
   199  0017  3445               	retlw	69
   200  0018  3444               	retlw	68
   201  0019  34FF               	retlw	255
   202  001A                     __end_of_keyPadMatrix:	
   203  0007                     _PORTC	set	7
   204  0006                     _PORTB	set	6
   205  0037                     _RB7	set	55
   206  0036                     _RB6	set	54
   207  0035                     _RB5	set	53
   208  0034                     _RB4	set	52
   209  0033                     _RB3	set	51
   210  0032                     _RB2	set	50
   211  0031                     _RB1	set	49
   212  0030                     _RB0	set	48
   213  0087                     _TRISC	set	135
   214  0086                     _TRISB	set	134
   215                           
   216                           	psect	cinit
   217  07FA                     start_initialization:	
   218                           ; #config settings
   219                           
   220  07FA                     __initialization:	
   221                           
   222                           ; Clear objects allocated to COMMON
   223  07FA  01F9               	clrf	__pbssCOMMON& (0+127)
   224  07FB  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   225  07FC                     end_of_initialization:	
   226                           ;End of C runtime variable initialization code
   227                           
   228  07FC                     __end_of__initialization:	
   229  07FC  0183               	clrf	3
   230  07FD  120A  118A  2EEB   	ljmp	_main	;jump to C main() function
   231                           
   232                           	psect	bssCOMMON
   233  0079                     __pbssCOMMON:	
   234  0079                     _old_key:	
   235  0079                     	ds	1
   236  007A                     _key:	
   237  007A                     	ds	1
   238                           
   239                           	psect	cstackCOMMON
   240  0070                     __pcstackCOMMON:	
   241  0070                     ?_kbdInit:	
   242  0070                     ??_kbdInit:	
   243                           ; 1 bytes @ 0x0
   244                           
   245  0070                     ?_main:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0070                     ?_kbdGetC:	
   249                           ; 1 bytes @ 0x0
   250                           
   251                           
   252                           ; 2 bytes @ 0x0
   253  0070                     	ds	2
   254  0072                     ??_kbdGetC:	
   255                           
   256                           ; 1 bytes @ 0x2
   257  0072                     	ds	2
   258  0074                     kbdGetC@key:	
   259                           
   260                           ; 1 bytes @ 0x4
   261  0074                     	ds	1
   262  0075                     kbdGetC@row:	
   263                           
   264                           ; 1 bytes @ 0x5
   265  0075                     	ds	1
   266  0076                     ??_main:	
   267                           
   268                           ; 1 bytes @ 0x6
   269  0076                     	ds	2
   270  0078                     main@keypress:	
   271                           
   272                           ; 1 bytes @ 0x8
   273  0078                     	ds	1
   274                           
   275                           	psect	maintext
   276  06EB                     __pmaintext:	
   277 ;;
   278 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   279 ;;
   280 ;; *************** function _main *****************
   281 ;; Defined at:
   282 ;;		line 17 in file "main.c"
   283 ;; Parameters:    Size  Location     Type
   284 ;;		None
   285 ;; Auto vars:     Size  Location     Type
   286 ;;  keypress        1    8[COMMON] unsigned char 
   287 ;; Return value:  Size  Location     Type
   288 ;;                  1    wreg      void 
   289 ;; Registers used:
   290 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   291 ;; Tracked objects:
   292 ;;		On entry : B00/0
   293 ;;		On exit  : 0/0
   294 ;;		Unchanged: 0/0
   295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   296 ;;      Params:         0       0       0       0       0
   297 ;;      Locals:         1       0       0       0       0
   298 ;;      Temps:          2       0       0       0       0
   299 ;;      Totals:         3       0       0       0       0
   300 ;;Total ram usage:        3 bytes
   301 ;; Hardware stack levels required when called:    2
   302 ;; This function calls:
   303 ;;		_kbdGetC
   304 ;;		_kbdInit
   305 ;; This function is called by:
   306 ;;		Startup code after reset
   307 ;; This function uses a non-reentrant model
   308 ;;
   309                           
   310                           
   311                           ;psect for function _main
   312  06EB                     _main:	
   313                           
   314                           ;main.c: 18:     TRISC = 0;
   315                           
   316                           ;incstack = 0
   317                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   318  06EB  1683               	bsf	3,5	;RP0=1, select bank1
   319  06EC  1303               	bcf	3,6	;RP1=0, select bank1
   320  06ED  0187               	clrf	7	;volatile
   321                           
   322                           ;main.c: 19:     PORTC = 0;
   323  06EE  1283               	bcf	3,5	;RP0=0, select bank0
   324  06EF  1303               	bcf	3,6	;RP1=0, select bank0
   325  06F0  0187               	clrf	7	;volatile
   326                           
   327                           ;main.c: 20:     kbdInit();
   328  06F1  120A  118A  26DB  120A  118A  	fcall	_kbdInit
   329                           
   330                           ;main.c: 22:     PORTC = 0x3F;
   331  06F6  303F               	movlw	63
   332  06F7  1283               	bcf	3,5	;RP0=0, select bank0
   333  06F8  1303               	bcf	3,6	;RP1=0, select bank0
   334  06F9  0087               	movwf	7	;volatile
   335                           
   336                           ;main.c: 23:     _delay((unsigned long)((5)*(4000000/4000.0)));
   337  06FA  3007               	movlw	7
   338  06FB  00F7               	movwf	??_main+1
   339  06FC  307D               	movlw	125
   340  06FD  00F6               	movwf	??_main
   341  06FE                     u377:	
   342  06FE  0BF6               	decfsz	??_main,f
   343  06FF  2EFE               	goto	u377
   344  0700  0BF7               	decfsz	??_main+1,f
   345  0701  2EFE               	goto	u377
   346  0702                     l873:	
   347                           
   348                           ;main.c: 27:         char keypress = kbdGetC();
   349  0702  120A  118A  276F  120A  118A  	fcall	_kbdGetC
   350  0707  0870               	movf	?_kbdGetC,w
   351  0708  00F6               	movwf	??_main
   352  0709  0876               	movf	??_main,w
   353  070A  00F8               	movwf	main@keypress
   354                           
   355                           ;main.c: 28:         if (keypress != 255) {
   356  070B  0A78               	incf	main@keypress,w
   357  070C  1D03               	btfss	3,2
   358  070D  2F32               	goto	l913
   359  070E  2F02               	goto	l873
   360  070F                     l879:	
   361                           
   362                           ;main.c: 32:                     PORTC = 0x3F;
   363  070F  303F               	movlw	63
   364  0710  2F2E               	goto	L16
   365  0711                     l881:	
   366                           ;main.c: 33:                     break;
   367                           
   368                           
   369                           ;main.c: 35:                     PORTC = 0x03;
   370  0711  3003               	movlw	3
   371  0712  2F2E               	goto	L16
   372  0713                     l883:	
   373                           ;main.c: 36:                     break;
   374                           
   375                           
   376                           ;main.c: 38:                     PORTC = 0x6D;
   377  0713  306D               	movlw	109
   378  0714  2F2E               	goto	L16
   379  0715                     l885:	
   380                           ;main.c: 39:                     break;
   381                           
   382                           
   383                           ;main.c: 41:                     PORTC = 0x67;
   384  0715  3067               	movlw	103
   385  0716  2F2E               	goto	L16
   386  0717                     l887:	
   387                           ;main.c: 42:                     break;
   388                           
   389                           
   390                           ;main.c: 44:                     PORTC = 0x53;
   391  0717  3053               	movlw	83
   392  0718  2F2E               	goto	L16
   393  0719                     l889:	
   394                           ;main.c: 45:                     break;
   395                           
   396                           
   397                           ;main.c: 47:                     PORTC = 0x76;
   398  0719  3076               	movlw	118
   399  071A  2F2E               	goto	L16
   400  071B                     l891:	
   401                           ;main.c: 48:                     break;
   402                           
   403                           
   404                           ;main.c: 50:                     PORTC = 0xFE;
   405  071B  30FE               	movlw	254
   406  071C  2F2E               	goto	L16
   407  071D                     l893:	
   408                           ;main.c: 51:                     break;
   409                           
   410                           
   411                           ;main.c: 53:                     PORTC = 0x23;
   412  071D  3023               	movlw	35
   413  071E  2F2E               	goto	L16
   414  071F                     l895:	
   415                           ;main.c: 54:                     break;
   416                           
   417                           
   418                           ;main.c: 56:                     PORTC = 0xFF;
   419  071F  30FF               	movlw	255
   420  0720  2F2E               	goto	L16
   421  0721                     l897:	
   422                           ;main.c: 57:                     break;
   423                           
   424                           
   425                           ;main.c: 59:                     PORTC = 0xF3;
   426  0721  30F3               	movlw	243
   427  0722  2F2E               	goto	L16
   428  0723                     l899:	
   429                           ;main.c: 60:                     break;
   430                           
   431                           
   432                           ;main.c: 62:                     PORTC = 0xFB;
   433  0723  30FB               	movlw	251
   434  0724  2F2E               	goto	L16
   435  0725                     l901:	
   436                           ;main.c: 63:                     break;
   437                           
   438                           
   439                           ;main.c: 65:                     PORTC = 0x5E;
   440  0725  305E               	movlw	94
   441  0726  2F2E               	goto	L16
   442  0727                     l903:	
   443                           ;main.c: 66:                     break;
   444                           
   445                           
   446                           ;main.c: 68:                     PORTC = 0x3C;
   447  0727  303C               	movlw	60
   448  0728  2F2E               	goto	L16
   449  0729                     l905:	
   450                           ;main.c: 69:                     break;
   451                           
   452                           
   453                           ;main.c: 71:                     PORTC = 0x4F;
   454  0729  304F               	movlw	79
   455  072A  2F2E               	goto	L16
   456  072B                     l907:	
   457                           ;main.c: 72:                     break;
   458                           
   459                           
   460                           ;main.c: 74:                     PORTC = 0xFC;
   461  072B  30FC               	movlw	252
   462  072C  2F2E               	goto	L16
   463  072D                     l909:	
   464                           ;main.c: 75:                     break;
   465                           
   466                           
   467                           ;main.c: 77:                     PORTC = 0xF8;
   468  072D  30F8               	movlw	248
   469  072E                     L16:	
   470  072E  1283               	bcf	3,5	;RP0=0, select bank0
   471  072F  1303               	bcf	3,6	;RP1=0, select bank0
   472  0730  0087               	movwf	7	;volatile
   473                           
   474                           ;main.c: 78:                     break;
   475  0731  2F02               	goto	l873
   476  0732                     l913:	
   477  0732  0878               	movf	main@keypress,w
   478  0733  00F6               	movwf	??_main
   479  0734  01F7               	clrf	??_main+1
   480                           
   481                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   482                           ; Switch size 1, requested type "simple"
   483                           ; Number of cases is 1, Range of values is 0 to 0
   484                           ; switch strategies available:
   485                           ; Name         Instructions Cycles
   486                           ; simple_byte            4     3 (average)
   487                           ; direct_byte           11     8 (fixed)
   488                           ; jumptable            260     6 (fixed)
   489                           ;	Chosen strategy is simple_byte
   490  0735  0877               	movf	??_main+1,w
   491  0736  3A00               	xorlw	0	; case 0
   492  0737  1903               	skipnz
   493  0738  2F3A               	goto	l951
   494  0739  2F02               	goto	l873
   495  073A                     l951:	
   496                           
   497                           ; Switch size 1, requested type "simple"
   498                           ; Number of cases is 16, Range of values is 48 to 70
   499                           ; switch strategies available:
   500                           ; Name         Instructions Cycles
   501                           ; simple_byte           49    25 (average)
   502                           ; direct_byte           80    11 (fixed)
   503                           ; jumptable            263     9 (fixed)
   504                           ;	Chosen strategy is simple_byte
   505  073A  0876               	movf	??_main,w
   506  073B  3A30               	xorlw	48	; case 48
   507  073C  1903               	skipnz
   508  073D  2F0F               	goto	l879
   509  073E  3A01               	xorlw	1	; case 49
   510  073F  1903               	skipnz
   511  0740  2F11               	goto	l881
   512  0741  3A03               	xorlw	3	; case 50
   513  0742  1903               	skipnz
   514  0743  2F13               	goto	l883
   515  0744  3A01               	xorlw	1	; case 51
   516  0745  1903               	skipnz
   517  0746  2F15               	goto	l885
   518  0747  3A07               	xorlw	7	; case 52
   519  0748  1903               	skipnz
   520  0749  2F17               	goto	l887
   521  074A  3A01               	xorlw	1	; case 53
   522  074B  1903               	skipnz
   523  074C  2F19               	goto	l889
   524  074D  3A03               	xorlw	3	; case 54
   525  074E  1903               	skipnz
   526  074F  2F1B               	goto	l891
   527  0750  3A01               	xorlw	1	; case 55
   528  0751  1903               	skipnz
   529  0752  2F1D               	goto	l893
   530  0753  3A0F               	xorlw	15	; case 56
   531  0754  1903               	skipnz
   532  0755  2F1F               	goto	l895
   533  0756  3A01               	xorlw	1	; case 57
   534  0757  1903               	skipnz
   535  0758  2F21               	goto	l897
   536  0759  3A78               	xorlw	120	; case 65
   537  075A  1903               	skipnz
   538  075B  2F23               	goto	l899
   539  075C  3A03               	xorlw	3	; case 66
   540  075D  1903               	skipnz
   541  075E  2F25               	goto	l901
   542  075F  3A01               	xorlw	1	; case 67
   543  0760  1903               	skipnz
   544  0761  2F27               	goto	l903
   545  0762  3A07               	xorlw	7	; case 68
   546  0763  1903               	skipnz
   547  0764  2F29               	goto	l905
   548  0765  3A01               	xorlw	1	; case 69
   549  0766  1903               	skipnz
   550  0767  2F2B               	goto	l907
   551  0768  3A03               	xorlw	3	; case 70
   552  0769  1903               	skipnz
   553  076A  2F2D               	goto	l909
   554  076B  2F02               	goto	l873
   555  076C  120A  118A  2800   	ljmp	start
   556  076F                     __end_of_main:	
   557                           
   558                           	psect	text1
   559  06DB                     __ptext1:	
   560 ;; *************** function _kbdInit *****************
   561 ;; Defined at:
   562 ;;		line 28 in file "./keypad.h"
   563 ;; Parameters:    Size  Location     Type
   564 ;;		None
   565 ;; Auto vars:     Size  Location     Type
   566 ;;		None
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, status,2
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   576 ;;      Params:         0       0       0       0       0
   577 ;;      Locals:         0       0       0       0       0
   578 ;;      Temps:          2       0       0       0       0
   579 ;;      Totals:         2       0       0       0       0
   580 ;;Total ram usage:        2 bytes
   581 ;; Hardware stack levels used:    1
   582 ;; This function calls:
   583 ;;		Nothing
   584 ;; This function is called by:
   585 ;;		_main
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589                           
   590                           ;psect for function _kbdInit
   591  06DB                     _kbdInit:	
   592                           
   593                           ;./keypad.h: 29:     TRISB = 0xF0;
   594                           
   595                           ;incstack = 0
   596                           ; Regs used in _kbdInit: [wreg+status,2]
   597  06DB  30F0               	movlw	240
   598  06DC  1683               	bsf	3,5	;RP0=1, select bank1
   599  06DD  1303               	bcf	3,6	;RP1=0, select bank1
   600  06DE  0086               	movwf	6	;volatile
   601                           
   602                           ;./keypad.h: 30:     PORTB = 0x00;
   603  06DF  1283               	bcf	3,5	;RP0=0, select bank0
   604  06E0  1303               	bcf	3,6	;RP1=0, select bank0
   605  06E1  0186               	clrf	6	;volatile
   606                           
   607                           ;./keypad.h: 31:     _delay((unsigned long)((5)*(4000000/4000.0)));
   608  06E2  3007               	movlw	7
   609  06E3  00F1               	movwf	??_kbdInit+1
   610  06E4  307D               	movlw	125
   611  06E5  00F0               	movwf	??_kbdInit
   612  06E6                     u387:	
   613  06E6  0BF0               	decfsz	??_kbdInit,f
   614  06E7  2EE6               	goto	u387
   615  06E8  0BF1               	decfsz	??_kbdInit+1,f
   616  06E9  2EE6               	goto	u387
   617  06EA  0008               	return
   618  06EB                     __end_of_kbdInit:	
   619                           
   620                           	psect	text2
   621  076F                     __ptext2:	
   622 ;; *************** function _kbdGetC *****************
   623 ;; Defined at:
   624 ;;		line 34 in file "./keypad.h"
   625 ;; Parameters:    Size  Location     Type
   626 ;;		None
   627 ;; Auto vars:     Size  Location     Type
   628 ;;  row             1    5[COMMON] unsigned char 
   629 ;;  key             1    4[COMMON] unsigned char 
   630 ;; Return value:  Size  Location     Type
   631 ;;                  2    0[COMMON] int 
   632 ;; Registers used:
   633 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   639 ;;      Params:         2       0       0       0       0
   640 ;;      Locals:         2       0       0       0       0
   641 ;;      Temps:          2       0       0       0       0
   642 ;;      Totals:         6       0       0       0       0
   643 ;;Total ram usage:        6 bytes
   644 ;; Hardware stack levels used:    2
   645 ;; This function calls:
   646 ;;		Nothing
   647 ;; This function is called by:
   648 ;;		_main
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           
   653                           ;psect for function _kbdGetC
   654  076F                     _kbdGetC:	
   655                           
   656                           ;./keypad.h: 36:     char key = 0, row;
   657                           
   658                           ;incstack = 0
   659                           ; Regs used in _kbdGetC: [wreg-fsr0h+status,2+status,0+pclath]
   660  076F  01F4               	clrf	kbdGetC@key
   661                           
   662                           ;./keypad.h: 38:     for (row = 0b00000001; row < 0b00010000; row <<= 1) {
   663  0770  01F5               	clrf	kbdGetC@row
   664  0771  0AF5               	incf	kbdGetC@row,f
   665  0772                     l38:	
   666                           
   667                           ;./keypad.h: 39:         {;./keypad.h: 40:             RB0 = (row & 0x0001) >> 0;
   668  0772  1C75               	btfss	kbdGetC@row,0
   669  0773  2F78               	goto	u190
   670  0774  1283               	bcf	3,5	;RP0=0, select bank0
   671  0775  1303               	bcf	3,6	;RP1=0, select bank0
   672  0776  1406               	bsf	6,0	;volatile
   673  0777  2F7B               	goto	l819
   674  0778                     u190:	
   675  0778  1283               	bcf	3,5	;RP0=0, select bank0
   676  0779  1303               	bcf	3,6	;RP1=0, select bank0
   677  077A  1006               	bcf	6,0	;volatile
   678  077B                     l819:	
   679                           
   680                           ;./keypad.h: 41:             RB1 = (row & 0x0002) >> 1;
   681  077B  0875               	movf	kbdGetC@row,w
   682  077C  00F2               	movwf	??_kbdGetC
   683  077D  3001               	movlw	1
   684  077E                     u215:	
   685  077E  1003               	clrc
   686  077F  0CF2               	rrf	??_kbdGetC,f
   687  0780  3EFF               	addlw	-1
   688  0781  1D03               	skipz
   689  0782  2F7E               	goto	u215
   690  0783  1C72               	btfss	??_kbdGetC,0
   691  0784  2F89               	goto	u220
   692  0785  1283               	bcf	3,5	;RP0=0, select bank0
   693  0786  1303               	bcf	3,6	;RP1=0, select bank0
   694  0787  1486               	bsf	6,1	;volatile
   695  0788  2F8C               	goto	u234
   696  0789                     u220:	
   697  0789  1283               	bcf	3,5	;RP0=0, select bank0
   698  078A  1303               	bcf	3,6	;RP1=0, select bank0
   699  078B  1086               	bcf	6,1	;volatile
   700  078C                     u234:	
   701                           
   702                           ;./keypad.h: 42:             RB2 = (row & 0x0004) >> 2;
   703  078C  0875               	movf	kbdGetC@row,w
   704  078D  00F2               	movwf	??_kbdGetC
   705  078E  3002               	movlw	2
   706  078F                     u245:	
   707  078F  1003               	clrc
   708  0790  0CF2               	rrf	??_kbdGetC,f
   709  0791  3EFF               	addlw	-1
   710  0792  1D03               	skipz
   711  0793  2F8F               	goto	u245
   712  0794  1C72               	btfss	??_kbdGetC,0
   713  0795  2F9A               	goto	u250
   714  0796  1283               	bcf	3,5	;RP0=0, select bank0
   715  0797  1303               	bcf	3,6	;RP1=0, select bank0
   716  0798  1506               	bsf	6,2	;volatile
   717  0799  2F9D               	goto	u264
   718  079A                     u250:	
   719  079A  1283               	bcf	3,5	;RP0=0, select bank0
   720  079B  1303               	bcf	3,6	;RP1=0, select bank0
   721  079C  1106               	bcf	6,2	;volatile
   722  079D                     u264:	
   723                           
   724                           ;./keypad.h: 43:             RB3 = (row & 0x0008) >> 3;
   725  079D  0875               	movf	kbdGetC@row,w
   726  079E  00F2               	movwf	??_kbdGetC
   727  079F  3003               	movlw	3
   728  07A0                     u275:	
   729  07A0  1003               	clrc
   730  07A1  0CF2               	rrf	??_kbdGetC,f
   731  07A2  3EFF               	addlw	-1
   732  07A3  1D03               	skipz
   733  07A4  2FA0               	goto	u275
   734  07A5  1C72               	btfss	??_kbdGetC,0
   735  07A6  2FAB               	goto	u280
   736  07A7  1283               	bcf	3,5	;RP0=0, select bank0
   737  07A8  1303               	bcf	3,6	;RP1=0, select bank0
   738  07A9  1586               	bsf	6,3	;volatile
   739  07AA  2FAE               	goto	l821
   740  07AB                     u280:	
   741  07AB  1283               	bcf	3,5	;RP0=0, select bank0
   742  07AC  1303               	bcf	3,6	;RP1=0, select bank0
   743  07AD  1186               	bcf	6,3	;volatile
   744  07AE                     l821:	
   745                           
   746                           ;./keypad.h: 44:             _delay((unsigned long)((1)*(4000000/4000.0)));
   747  07AE  30C7               	movlw	199
   748  07AF  00F2               	movwf	??_kbdGetC
   749  07B0                     u397:	
   750  07B0  2FB1               	nop2
   751  07B1  0BF2               	decfsz	??_kbdGetC,f
   752  07B2  2FB0               	goto	u397
   753  07B3  2FB4               	nop2
   754  07B4  2FB5               	nop2
   755                           
   756                           ;./keypad.h: 45:         };./keypad.h: 47:         if (RB4)break;
   757  07B5  1283               	bcf	3,5	;RP0=0, select bank0
   758  07B6  1303               	bcf	3,6	;RP1=0, select bank0
   759  07B7  1A06               	btfsc	6,4	;volatile
   760  07B8  2FD5               	goto	l39
   761                           
   762                           ;./keypad.h: 48:         key++;
   763  07B9  3001               	movlw	1
   764  07BA  00F2               	movwf	??_kbdGetC
   765  07BB  0872               	movf	??_kbdGetC,w
   766  07BC  07F4               	addwf	kbdGetC@key,f
   767                           
   768                           ;./keypad.h: 49:         if (RB5)break;
   769  07BD  1A86               	btfsc	6,5	;volatile
   770  07BE  2FD5               	goto	l39
   771                           
   772                           ;./keypad.h: 50:         key++;
   773  07BF  3001               	movlw	1
   774  07C0  00F2               	movwf	??_kbdGetC
   775  07C1  0872               	movf	??_kbdGetC,w
   776  07C2  07F4               	addwf	kbdGetC@key,f
   777                           
   778                           ;./keypad.h: 51:         if (RB6)break;
   779  07C3  1B06               	btfsc	6,6	;volatile
   780  07C4  2FD5               	goto	l39
   781                           
   782                           ;./keypad.h: 52:         key++;
   783  07C5  3001               	movlw	1
   784  07C6  00F2               	movwf	??_kbdGetC
   785  07C7  0872               	movf	??_kbdGetC,w
   786  07C8  07F4               	addwf	kbdGetC@key,f
   787                           
   788                           ;./keypad.h: 53:         if (RB7)break;
   789  07C9  1B86               	btfsc	6,7	;volatile
   790  07CA  2FD5               	goto	l39
   791                           
   792                           ;./keypad.h: 54:         key++;
   793  07CB  3001               	movlw	1
   794  07CC  00F2               	movwf	??_kbdGetC
   795  07CD  0872               	movf	??_kbdGetC,w
   796  07CE  07F4               	addwf	kbdGetC@key,f
   797                           
   798                           ;./keypad.h: 55:     }
   799  07CF  1003               	clrc
   800  07D0  0DF5               	rlf	kbdGetC@row,f
   801  07D1  3010               	movlw	16
   802  07D2  0275               	subwf	kbdGetC@row,w
   803  07D3  1C03               	skipc
   804  07D4  2F72               	goto	l38
   805  07D5                     l39:	
   806                           
   807                           ;./keypad.h: 56:     RB0 = 0;
   808  07D5  1006               	bcf	6,0	;volatile
   809                           
   810                           ;./keypad.h: 57:     RB1 = 0;
   811  07D6  1086               	bcf	6,1	;volatile
   812                           
   813                           ;./keypad.h: 58:     RB2 = 0;
   814  07D7  1106               	bcf	6,2	;volatile
   815                           
   816                           ;./keypad.h: 59:     RB3 = 0;
   817  07D8  1186               	bcf	6,3	;volatile
   818                           
   819                           ;./keypad.h: 60:     if (key != old_key) {
   820  07D9  0874               	movf	kbdGetC@key,w
   821  07DA  0679               	xorwf	_old_key,w
   822  07DB  1903               	skipnz
   823  07DC  2FEE               	goto	l861
   824                           
   825                           ;./keypad.h: 61:         old_key = key;
   826  07DD  0874               	movf	kbdGetC@key,w
   827  07DE  00F2               	movwf	??_kbdGetC
   828  07DF  0872               	movf	??_kbdGetC,w
   829  07E0  00F9               	movwf	_old_key
   830                           
   831                           ;./keypad.h: 62:         return keyPadMatrix[ key ];
   832  07E1  0874               	movf	kbdGetC@key,w
   833  07E2  3E01               	addlw	low ((_keyPadMatrix-__stringbase)| (0+32768))
   834  07E3  0084               	movwf	4
   835  07E4  120A  118A  2003   	fcall	stringdir
   836  07E7  00F2               	movwf	??_kbdGetC
   837  07E8  01F3               	clrf	??_kbdGetC+1
   838  07E9  0872               	movf	??_kbdGetC,w
   839  07EA  00F0               	movwf	?_kbdGetC
   840  07EB  0873               	movf	??_kbdGetC+1,w
   841  07EC  00F1               	movwf	?_kbdGetC+1
   842  07ED  0008               	return
   843  07EE                     l861:	
   844                           
   845                           ;./keypad.h: 64:         return keyPadMatrix[ 16 ];
   846  07EE  3011               	movlw	low (((_keyPadMatrix+16)-__stringbase)| (0+32768))
   847  07EF  0084               	movwf	4
   848  07F0  120A  118A  2003   	fcall	stringdir
   849  07F3  00F2               	movwf	??_kbdGetC
   850  07F4  01F3               	clrf	??_kbdGetC+1
   851  07F5  0872               	movf	??_kbdGetC,w
   852  07F6  00F0               	movwf	?_kbdGetC
   853  07F7  0873               	movf	??_kbdGetC+1,w
   854  07F8  00F1               	movwf	?_kbdGetC+1
   855  07F9  0008               	return
   856  07FA                     __end_of_kbdGetC:	
   857  007E                     btemp	set	126	;btemp
   858  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    17
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_kbdGetC

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     250
                                              6 COMMON     3     3      0
                            _kbdGetC
                            _kbdInit
 ---------------------------------------------------------------------------------
 (1) _kbdInit                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _kbdGetC                                              6     4      2     205
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _kbdGetC
   _kbdInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon May 06 18:47:46 2019

                      pc 0002                       l38 0772                       l39 07D5  
                     fsr 0004                      l821 07AE                      l901 0725  
                    l903 0727                      l905 0729                      l913 0732  
                    l819 077B                      l907 072B                      l861 07EE  
                    l909 072D                      l951 073A                      l881 0711  
                    l873 0702                      l891 071B                      l883 0713  
                    l893 071D                      l885 0715                      l895 071F  
                    l887 0717                      l879 070F                      l897 0721  
                    l889 0719                      l899 0723                      _RB0 0030  
                    _RB1 0031                      _RB2 0032                      _RB3 0033  
                    _RB4 0034                      _RB5 0035                      _RB6 0036  
                    _RB7 0037                      u220 0789                      u215 077E  
                    u250 079A                      u234 078C                      u245 078F  
                    u190 0778                      u280 07AB                      u264 079D  
                    u275 07A0                      u377 06FE                      u387 06E6  
                    u397 07B0                      _key 007A                      fsr0 0004  
                   _main 06EB                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTB 0006                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087          __end_of_kbdGetC 07FA  
        __end_of_kbdInit 06EB             main@keypress 0078                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FA  
           __end_of_main 076F                   ??_main 0076                ??_kbdGetC 0072  
              ??_kbdInit 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
   __end_of_keyPadMatrix 001A               __pmaintext 06EB               __stringtab 0003  
                _kbdGetC 076F                  _kbdInit 06DB                  __ptext1 06DB  
                __ptext2 076F               kbdGetC@key 0074               kbdGetC@row 0075  
                _old_key 0079     end_of_initialization 07FC             _keyPadMatrix 0009  
    start_initialization 07FA              __pbssCOMMON 0079                ___latbits 0002  
               ?_kbdGetC 0070                 ?_kbdInit 0070                __pstrings 0003  
            __stringbase 0008       __end_of__stringtab 0009         __size_of_kbdGetC 008B  
       __size_of_kbdInit 0010            __size_of_main 0084                stringcode 0003  
               stringdir 0003                 stringtab 0003  
