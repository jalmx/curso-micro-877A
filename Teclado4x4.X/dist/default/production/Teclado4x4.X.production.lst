

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Apr 24 16:52:28 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16LF877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.05
    14                           ; Generated 20/12/2018 GMT
    15                           ; 
    16                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16LF877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0088                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167                           
   168                           	psect	strings
   169  0003                     __pstrings:	
   170  0003                     stringtab:	
   171  0003                     __stringtab:	
   172  0003                     stringcode:	
   173                           ;	String table - string pointers are 1 byte each
   174                           
   175  0003                     stringdir:	
   176  0003  3000               	movlw	high stringdir
   177  0004  008A               	movwf	10
   178  0005  0804               	movf	4,w
   179  0006  0A84               	incf	4,f
   180  0007  0782               	addwf	2,f
   181  0008                     __stringbase:	
   182  0008  3400               	retlw	0
   183  0009                     __end_of__stringtab:	
   184  0009                     _keyPadMatrix:	
   185  0009  3437               	retlw	55
   186  000A  3438               	retlw	56
   187  000B  3439               	retlw	57
   188  000C  3441               	retlw	65
   189  000D  3434               	retlw	52
   190  000E  3435               	retlw	53
   191  000F  3436               	retlw	54
   192  0010  3442               	retlw	66
   193  0011  3431               	retlw	49
   194  0012  3432               	retlw	50
   195  0013  3433               	retlw	51
   196  0014  3443               	retlw	67
   197  0015  3446               	retlw	70
   198  0016  3430               	retlw	48
   199  0017  3445               	retlw	69
   200  0018  3444               	retlw	68
   201  0019  34FF               	retlw	255
   202  001A                     __end_of_keyPadMatrix:	
   203  0007                     _PORTC	set	7
   204  0006                     _PORTB	set	6
   205  0037                     _RB7	set	55
   206  0036                     _RB6	set	54
   207  0035                     _RB5	set	53
   208  0034                     _RB4	set	52
   209  0033                     _RB3	set	51
   210  0032                     _RB2	set	50
   211  0031                     _RB1	set	49
   212  0030                     _RB0	set	48
   213  0087                     _TRISC	set	135
   214  0086                     _TRISB	set	134
   215                           
   216                           	psect	cinit
   217  07FA                     start_initialization:	
   218                           ; #config settings
   219                           
   220  07FA                     __initialization:	
   221                           
   222                           ; Clear objects allocated to COMMON
   223  07FA  01FA               	clrf	__pbssCOMMON& (0+127)
   224  07FB  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   225  07FC                     end_of_initialization:	
   226                           ;End of C runtime variable initialization code
   227                           
   228  07FC                     __end_of__initialization:	
   229  07FC  0183               	clrf	3
   230  07FD  120A  118A  2EE8   	ljmp	_main	;jump to C main() function
   231                           
   232                           	psect	bssCOMMON
   233  007A                     __pbssCOMMON:	
   234  007A                     _old_key:	
   235  007A                     	ds	1
   236  007B                     _key:	
   237  007B                     	ds	1
   238                           
   239                           	psect	cstackCOMMON
   240  0070                     __pcstackCOMMON:	
   241  0070                     ?_kbdInit:	
   242  0070                     ??_kbdInit:	
   243                           ; 1 bytes @ 0x0
   244                           
   245  0070                     ?_main:	
   246                           ; 1 bytes @ 0x0
   247                           
   248  0070                     ?_kbdGetC:	
   249                           ; 1 bytes @ 0x0
   250                           
   251                           
   252                           ; 2 bytes @ 0x0
   253  0070                     	ds	2
   254  0072                     ??_kbdGetC:	
   255                           
   256                           ; 1 bytes @ 0x2
   257  0072                     	ds	2
   258  0074                     kbdGetC@key:	
   259                           
   260                           ; 1 bytes @ 0x4
   261  0074                     	ds	1
   262  0075                     kbdGetC@row:	
   263                           
   264                           ; 1 bytes @ 0x5
   265  0075                     	ds	1
   266  0076                     ??_main:	
   267                           
   268                           ; 1 bytes @ 0x6
   269  0076                     	ds	2
   270  0078                     main@key:	
   271                           
   272                           ; 1 bytes @ 0x8
   273  0078                     	ds	1
   274  0079                     main@keypress:	
   275                           
   276                           ; 1 bytes @ 0x9
   277  0079                     	ds	1
   278                           
   279                           	psect	maintext
   280  06E8                     __pmaintext:	
   281 ;;
   282 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   283 ;;
   284 ;; *************** function _main *****************
   285 ;; Defined at:
   286 ;;		line 17 in file "main.c"
   287 ;; Parameters:    Size  Location     Type
   288 ;;		None
   289 ;; Auto vars:     Size  Location     Type
   290 ;;  key             1    8[COMMON] unsigned char 
   291 ;;  keypress        1    9[COMMON] unsigned char 
   292 ;; Return value:  Size  Location     Type
   293 ;;                  1    wreg      void 
   294 ;; Registers used:
   295 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   296 ;; Tracked objects:
   297 ;;		On entry : B00/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   301 ;;      Params:         0       0       0       0       0
   302 ;;      Locals:         2       0       0       0       0
   303 ;;      Temps:          2       0       0       0       0
   304 ;;      Totals:         4       0       0       0       0
   305 ;;Total ram usage:        4 bytes
   306 ;; Hardware stack levels required when called:    2
   307 ;; This function calls:
   308 ;;		_kbdGetC
   309 ;;		_kbdInit
   310 ;; This function is called by:
   311 ;;		Startup code after reset
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315                           
   316                           ;psect for function _main
   317  06E8                     _main:	
   318                           
   319                           ;main.c: 18:     TRISC = 0;
   320                           
   321                           ;incstack = 0
   322                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   323  06E8  1683               	bsf	3,5	;RP0=1, select bank1
   324  06E9  1303               	bcf	3,6	;RP1=0, select bank1
   325  06EA  0187               	clrf	7	;volatile
   326                           
   327                           ;main.c: 19:     PORTC = 0;
   328  06EB  1283               	bcf	3,5	;RP0=0, select bank0
   329  06EC  1303               	bcf	3,6	;RP1=0, select bank0
   330  06ED  0187               	clrf	7	;volatile
   331                           
   332                           ;main.c: 20:     kbdInit();
   333  06EE  120A  118A  26D8  120A  118A  	fcall	_kbdInit
   334                           
   335                           ;main.c: 22:     PORTC = 0x3F;
   336  06F3  303F               	movlw	63
   337  06F4  1283               	bcf	3,5	;RP0=0, select bank0
   338  06F5  1303               	bcf	3,6	;RP1=0, select bank0
   339  06F6  0087               	movwf	7	;volatile
   340                           
   341                           ;main.c: 23:     _delay((unsigned long)((5)*(4000000/4000.0)));
   342  06F7  3007               	movlw	7
   343  06F8  00F7               	movwf	??_main+1
   344  06F9  307D               	movlw	125
   345  06FA  00F6               	movwf	??_main
   346  06FB                     u377:	
   347  06FB  0BF6               	decfsz	??_main,f
   348  06FC  2EFB               	goto	u377
   349  06FD  0BF7               	decfsz	??_main+1,f
   350  06FE  2EFB               	goto	u377
   351                           
   352                           ;main.c: 31:             switch (key) {
   353  06FF  2F22               	goto	l873
   354  0700                     l879:	
   355                           
   356                           ;main.c: 33:                     PORTC = 0x3F;
   357  0700  303F               	movlw	63
   358  0701  2F1F               	goto	L15
   359  0702                     l881:	
   360                           ;main.c: 34:                     break;
   361                           
   362                           
   363                           ;main.c: 36:                     PORTC = 0x03;
   364  0702  3003               	movlw	3
   365  0703  2F1F               	goto	L15
   366  0704                     l883:	
   367                           ;main.c: 37:                     break;
   368                           
   369                           
   370                           ;main.c: 39:                     PORTC = 0x6D;
   371  0704  306D               	movlw	109
   372  0705  2F1F               	goto	L15
   373  0706                     l885:	
   374                           ;main.c: 40:                     break;
   375                           
   376                           
   377                           ;main.c: 42:                     PORTC = 0x67;
   378  0706  3067               	movlw	103
   379  0707  2F1F               	goto	L15
   380  0708                     l887:	
   381                           ;main.c: 43:                     break;
   382                           
   383                           
   384                           ;main.c: 45:                     PORTC = 0x53;
   385  0708  3053               	movlw	83
   386  0709  2F1F               	goto	L15
   387  070A                     l889:	
   388                           ;main.c: 46:                     break;
   389                           
   390                           
   391                           ;main.c: 48:                     PORTC = 0x76;
   392  070A  3076               	movlw	118
   393  070B  2F1F               	goto	L15
   394  070C                     l891:	
   395                           ;main.c: 49:                     break;
   396                           
   397                           
   398                           ;main.c: 51:                     PORTC = 0xFE;
   399  070C  30FE               	movlw	254
   400  070D  2F1F               	goto	L15
   401  070E                     l893:	
   402                           ;main.c: 52:                     break;
   403                           
   404                           
   405                           ;main.c: 54:                     PORTC = 0x23;
   406  070E  3023               	movlw	35
   407  070F  2F1F               	goto	L15
   408  0710                     l895:	
   409                           ;main.c: 55:                     break;
   410                           
   411                           
   412                           ;main.c: 57:                     PORTC = 0xFF;
   413  0710  30FF               	movlw	255
   414  0711  2F1F               	goto	L15
   415  0712                     l897:	
   416                           ;main.c: 58:                     break;
   417                           
   418                           
   419                           ;main.c: 60:                     PORTC = 0xF3;
   420  0712  30F3               	movlw	243
   421  0713  2F1F               	goto	L15
   422  0714                     l899:	
   423                           ;main.c: 61:                     break;
   424                           
   425                           
   426                           ;main.c: 63:                     PORTC = 0xFB;
   427  0714  30FB               	movlw	251
   428  0715  2F1F               	goto	L15
   429  0716                     l901:	
   430                           ;main.c: 64:                     break;
   431                           
   432                           
   433                           ;main.c: 66:                     PORTC = 0x5E;
   434  0716  305E               	movlw	94
   435  0717  2F1F               	goto	L15
   436  0718                     l903:	
   437                           ;main.c: 67:                     break;
   438                           
   439                           
   440                           ;main.c: 69:                     PORTC = 0x3C;
   441  0718  303C               	movlw	60
   442  0719  2F1F               	goto	L15
   443  071A                     l905:	
   444                           ;main.c: 70:                     break;
   445                           
   446                           
   447                           ;main.c: 72:                     PORTC = 0x4F;
   448  071A  304F               	movlw	79
   449  071B  2F1F               	goto	L15
   450  071C                     l907:	
   451                           ;main.c: 73:                     break;
   452                           
   453                           
   454                           ;main.c: 75:                     PORTC = 0xFC;
   455  071C  30FC               	movlw	252
   456  071D  2F1F               	goto	L15
   457  071E                     l909:	
   458                           ;main.c: 76:                     break;
   459                           
   460                           
   461                           ;main.c: 78:                     PORTC = 0xF8;
   462  071E  30F8               	movlw	248
   463  071F                     L15:	
   464  071F  1283               	bcf	3,5	;RP0=0, select bank0
   465  0720  1303               	bcf	3,6	;RP1=0, select bank0
   466  0721  0087               	movwf	7	;volatile
   467  0722                     l873:	
   468                           ;main.c: 79:                     break;
   469                           
   470                           
   471                           ;main.c: 27:         char keypress = kbdGetC();
   472  0722  120A  118A  276F  120A  118A  	fcall	_kbdGetC
   473  0727  0870               	movf	?_kbdGetC,w
   474  0728  00F6               	movwf	??_main
   475  0729  0876               	movf	??_main,w
   476  072A  00F9               	movwf	main@keypress
   477                           
   478                           ;main.c: 28:         if (keypress != 0xFF) {
   479  072B  0A79               	incf	main@keypress,w
   480  072C  1903               	btfsc	3,2
   481  072D  2F22               	goto	l873
   482                           
   483                           ;main.c: 30:             char key = keypress;
   484  072E  0879               	movf	main@keypress,w
   485  072F  00F6               	movwf	??_main
   486  0730  0876               	movf	??_main,w
   487  0731  00F8               	movwf	main@key
   488  0732  0878               	movf	main@key,w
   489  0733  00F6               	movwf	??_main
   490  0734  01F7               	clrf	??_main+1
   491                           
   492                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   493                           ; Switch size 1, requested type "simple"
   494                           ; Number of cases is 1, Range of values is 0 to 0
   495                           ; switch strategies available:
   496                           ; Name         Instructions Cycles
   497                           ; simple_byte            4     3 (average)
   498                           ; direct_byte           11     8 (fixed)
   499                           ; jumptable            260     6 (fixed)
   500                           ;	Chosen strategy is simple_byte
   501  0735  0877               	movf	??_main+1,w
   502  0736  3A00               	xorlw	0	; case 0
   503  0737  1903               	skipnz
   504  0738  2F3A               	goto	l951
   505  0739  2F22               	goto	l873
   506  073A                     l951:	
   507                           
   508                           ; Switch size 1, requested type "simple"
   509                           ; Number of cases is 16, Range of values is 48 to 70
   510                           ; switch strategies available:
   511                           ; Name         Instructions Cycles
   512                           ; simple_byte           49    25 (average)
   513                           ; direct_byte           80    11 (fixed)
   514                           ; jumptable            263     9 (fixed)
   515                           ;	Chosen strategy is simple_byte
   516  073A  0876               	movf	??_main,w
   517  073B  3A30               	xorlw	48	; case 48
   518  073C  1903               	skipnz
   519  073D  2F00               	goto	l879
   520  073E  3A01               	xorlw	1	; case 49
   521  073F  1903               	skipnz
   522  0740  2F02               	goto	l881
   523  0741  3A03               	xorlw	3	; case 50
   524  0742  1903               	skipnz
   525  0743  2F04               	goto	l883
   526  0744  3A01               	xorlw	1	; case 51
   527  0745  1903               	skipnz
   528  0746  2F06               	goto	l885
   529  0747  3A07               	xorlw	7	; case 52
   530  0748  1903               	skipnz
   531  0749  2F08               	goto	l887
   532  074A  3A01               	xorlw	1	; case 53
   533  074B  1903               	skipnz
   534  074C  2F0A               	goto	l889
   535  074D  3A03               	xorlw	3	; case 54
   536  074E  1903               	skipnz
   537  074F  2F0C               	goto	l891
   538  0750  3A01               	xorlw	1	; case 55
   539  0751  1903               	skipnz
   540  0752  2F0E               	goto	l893
   541  0753  3A0F               	xorlw	15	; case 56
   542  0754  1903               	skipnz
   543  0755  2F10               	goto	l895
   544  0756  3A01               	xorlw	1	; case 57
   545  0757  1903               	skipnz
   546  0758  2F12               	goto	l897
   547  0759  3A78               	xorlw	120	; case 65
   548  075A  1903               	skipnz
   549  075B  2F14               	goto	l899
   550  075C  3A03               	xorlw	3	; case 66
   551  075D  1903               	skipnz
   552  075E  2F16               	goto	l901
   553  075F  3A01               	xorlw	1	; case 67
   554  0760  1903               	skipnz
   555  0761  2F18               	goto	l903
   556  0762  3A07               	xorlw	7	; case 68
   557  0763  1903               	skipnz
   558  0764  2F1A               	goto	l905
   559  0765  3A01               	xorlw	1	; case 69
   560  0766  1903               	skipnz
   561  0767  2F1C               	goto	l907
   562  0768  3A03               	xorlw	3	; case 70
   563  0769  1903               	skipnz
   564  076A  2F1E               	goto	l909
   565  076B  2F22               	goto	l873
   566  076C  120A  118A  2800   	ljmp	start
   567  076F                     __end_of_main:	
   568                           
   569                           	psect	text1
   570  06D8                     __ptext1:	
   571 ;; *************** function _kbdInit *****************
   572 ;; Defined at:
   573 ;;		line 28 in file "./keypad.h"
   574 ;; Parameters:    Size  Location     Type
   575 ;;		None
   576 ;; Auto vars:     Size  Location     Type
   577 ;;		None
   578 ;; Return value:  Size  Location     Type
   579 ;;                  1    wreg      void 
   580 ;; Registers used:
   581 ;;		wreg, status,2
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   587 ;;      Params:         0       0       0       0       0
   588 ;;      Locals:         0       0       0       0       0
   589 ;;      Temps:          2       0       0       0       0
   590 ;;      Totals:         2       0       0       0       0
   591 ;;Total ram usage:        2 bytes
   592 ;; Hardware stack levels used:    1
   593 ;; This function calls:
   594 ;;		Nothing
   595 ;; This function is called by:
   596 ;;		_main
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           
   600                           
   601                           ;psect for function _kbdInit
   602  06D8                     _kbdInit:	
   603                           
   604                           ;./keypad.h: 29:     TRISB = 0xF0;
   605                           
   606                           ;incstack = 0
   607                           ; Regs used in _kbdInit: [wreg+status,2]
   608  06D8  30F0               	movlw	240
   609  06D9  1683               	bsf	3,5	;RP0=1, select bank1
   610  06DA  1303               	bcf	3,6	;RP1=0, select bank1
   611  06DB  0086               	movwf	6	;volatile
   612                           
   613                           ;./keypad.h: 30:     PORTB = 0x00;
   614  06DC  1283               	bcf	3,5	;RP0=0, select bank0
   615  06DD  1303               	bcf	3,6	;RP1=0, select bank0
   616  06DE  0186               	clrf	6	;volatile
   617                           
   618                           ;./keypad.h: 31:     _delay((unsigned long)((5)*(4000000/4000.0)));
   619  06DF  3007               	movlw	7
   620  06E0  00F1               	movwf	??_kbdInit+1
   621  06E1  307D               	movlw	125
   622  06E2  00F0               	movwf	??_kbdInit
   623  06E3                     u387:	
   624  06E3  0BF0               	decfsz	??_kbdInit,f
   625  06E4  2EE3               	goto	u387
   626  06E5  0BF1               	decfsz	??_kbdInit+1,f
   627  06E6  2EE3               	goto	u387
   628  06E7  0008               	return
   629  06E8                     __end_of_kbdInit:	
   630                           
   631                           	psect	text2
   632  076F                     __ptext2:	
   633 ;; *************** function _kbdGetC *****************
   634 ;; Defined at:
   635 ;;		line 34 in file "./keypad.h"
   636 ;; Parameters:    Size  Location     Type
   637 ;;		None
   638 ;; Auto vars:     Size  Location     Type
   639 ;;  row             1    5[COMMON] unsigned char 
   640 ;;  key             1    4[COMMON] unsigned char 
   641 ;; Return value:  Size  Location     Type
   642 ;;                  2    0[COMMON] int 
   643 ;; Registers used:
   644 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   650 ;;      Params:         2       0       0       0       0
   651 ;;      Locals:         2       0       0       0       0
   652 ;;      Temps:          2       0       0       0       0
   653 ;;      Totals:         6       0       0       0       0
   654 ;;Total ram usage:        6 bytes
   655 ;; Hardware stack levels used:    2
   656 ;; This function calls:
   657 ;;		Nothing
   658 ;; This function is called by:
   659 ;;		_main
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           
   664                           ;psect for function _kbdGetC
   665  076F                     _kbdGetC:	
   666                           
   667                           ;./keypad.h: 36:     char key = 0, row;
   668                           
   669                           ;incstack = 0
   670                           ; Regs used in _kbdGetC: [wreg-fsr0h+status,2+status,0+pclath]
   671  076F  01F4               	clrf	kbdGetC@key
   672                           
   673                           ;./keypad.h: 38:     for (row = 0b00000001; row < 0b00010000; row <<= 1) {
   674  0770  01F5               	clrf	kbdGetC@row
   675  0771  0AF5               	incf	kbdGetC@row,f
   676  0772                     l38:	
   677                           
   678                           ;./keypad.h: 39:         {;./keypad.h: 40:             RB0 = (row & 0x0001) >> 0;
   679  0772  1C75               	btfss	kbdGetC@row,0
   680  0773  2F78               	goto	u190
   681  0774  1283               	bcf	3,5	;RP0=0, select bank0
   682  0775  1303               	bcf	3,6	;RP1=0, select bank0
   683  0776  1406               	bsf	6,0	;volatile
   684  0777  2F7B               	goto	l819
   685  0778                     u190:	
   686  0778  1283               	bcf	3,5	;RP0=0, select bank0
   687  0779  1303               	bcf	3,6	;RP1=0, select bank0
   688  077A  1006               	bcf	6,0	;volatile
   689  077B                     l819:	
   690                           
   691                           ;./keypad.h: 41:             RB1 = (row & 0x0002) >> 1;
   692  077B  0875               	movf	kbdGetC@row,w
   693  077C  00F2               	movwf	??_kbdGetC
   694  077D  3001               	movlw	1
   695  077E                     u215:	
   696  077E  1003               	clrc
   697  077F  0CF2               	rrf	??_kbdGetC,f
   698  0780  3EFF               	addlw	-1
   699  0781  1D03               	skipz
   700  0782  2F7E               	goto	u215
   701  0783  1C72               	btfss	??_kbdGetC,0
   702  0784  2F89               	goto	u220
   703  0785  1283               	bcf	3,5	;RP0=0, select bank0
   704  0786  1303               	bcf	3,6	;RP1=0, select bank0
   705  0787  1486               	bsf	6,1	;volatile
   706  0788  2F8C               	goto	u234
   707  0789                     u220:	
   708  0789  1283               	bcf	3,5	;RP0=0, select bank0
   709  078A  1303               	bcf	3,6	;RP1=0, select bank0
   710  078B  1086               	bcf	6,1	;volatile
   711  078C                     u234:	
   712                           
   713                           ;./keypad.h: 42:             RB2 = (row & 0x0004) >> 2;
   714  078C  0875               	movf	kbdGetC@row,w
   715  078D  00F2               	movwf	??_kbdGetC
   716  078E  3002               	movlw	2
   717  078F                     u245:	
   718  078F  1003               	clrc
   719  0790  0CF2               	rrf	??_kbdGetC,f
   720  0791  3EFF               	addlw	-1
   721  0792  1D03               	skipz
   722  0793  2F8F               	goto	u245
   723  0794  1C72               	btfss	??_kbdGetC,0
   724  0795  2F9A               	goto	u250
   725  0796  1283               	bcf	3,5	;RP0=0, select bank0
   726  0797  1303               	bcf	3,6	;RP1=0, select bank0
   727  0798  1506               	bsf	6,2	;volatile
   728  0799  2F9D               	goto	u264
   729  079A                     u250:	
   730  079A  1283               	bcf	3,5	;RP0=0, select bank0
   731  079B  1303               	bcf	3,6	;RP1=0, select bank0
   732  079C  1106               	bcf	6,2	;volatile
   733  079D                     u264:	
   734                           
   735                           ;./keypad.h: 43:             RB3 = (row & 0x0008) >> 3;
   736  079D  0875               	movf	kbdGetC@row,w
   737  079E  00F2               	movwf	??_kbdGetC
   738  079F  3003               	movlw	3
   739  07A0                     u275:	
   740  07A0  1003               	clrc
   741  07A1  0CF2               	rrf	??_kbdGetC,f
   742  07A2  3EFF               	addlw	-1
   743  07A3  1D03               	skipz
   744  07A4  2FA0               	goto	u275
   745  07A5  1C72               	btfss	??_kbdGetC,0
   746  07A6  2FAB               	goto	u280
   747  07A7  1283               	bcf	3,5	;RP0=0, select bank0
   748  07A8  1303               	bcf	3,6	;RP1=0, select bank0
   749  07A9  1586               	bsf	6,3	;volatile
   750  07AA  2FAE               	goto	l821
   751  07AB                     u280:	
   752  07AB  1283               	bcf	3,5	;RP0=0, select bank0
   753  07AC  1303               	bcf	3,6	;RP1=0, select bank0
   754  07AD  1186               	bcf	6,3	;volatile
   755  07AE                     l821:	
   756                           
   757                           ;./keypad.h: 44:             _delay((unsigned long)((1)*(4000000/4000.0)));
   758  07AE  30C7               	movlw	199
   759  07AF  00F2               	movwf	??_kbdGetC
   760  07B0                     u397:	
   761  07B0  2FB1               	nop2
   762  07B1  0BF2               	decfsz	??_kbdGetC,f
   763  07B2  2FB0               	goto	u397
   764  07B3  2FB4               	nop2
   765  07B4  2FB5               	nop2
   766                           
   767                           ;./keypad.h: 45:         };./keypad.h: 47:         if (RB4)break;
   768  07B5  1283               	bcf	3,5	;RP0=0, select bank0
   769  07B6  1303               	bcf	3,6	;RP1=0, select bank0
   770  07B7  1A06               	btfsc	6,4	;volatile
   771  07B8  2FD5               	goto	l39
   772                           
   773                           ;./keypad.h: 48:         key++;
   774  07B9  3001               	movlw	1
   775  07BA  00F2               	movwf	??_kbdGetC
   776  07BB  0872               	movf	??_kbdGetC,w
   777  07BC  07F4               	addwf	kbdGetC@key,f
   778                           
   779                           ;./keypad.h: 49:         if (RB5)break;
   780  07BD  1A86               	btfsc	6,5	;volatile
   781  07BE  2FD5               	goto	l39
   782                           
   783                           ;./keypad.h: 50:         key++;
   784  07BF  3001               	movlw	1
   785  07C0  00F2               	movwf	??_kbdGetC
   786  07C1  0872               	movf	??_kbdGetC,w
   787  07C2  07F4               	addwf	kbdGetC@key,f
   788                           
   789                           ;./keypad.h: 51:         if (RB6)break;
   790  07C3  1B06               	btfsc	6,6	;volatile
   791  07C4  2FD5               	goto	l39
   792                           
   793                           ;./keypad.h: 52:         key++;
   794  07C5  3001               	movlw	1
   795  07C6  00F2               	movwf	??_kbdGetC
   796  07C7  0872               	movf	??_kbdGetC,w
   797  07C8  07F4               	addwf	kbdGetC@key,f
   798                           
   799                           ;./keypad.h: 53:         if (RB7)break;
   800  07C9  1B86               	btfsc	6,7	;volatile
   801  07CA  2FD5               	goto	l39
   802                           
   803                           ;./keypad.h: 54:         key++;
   804  07CB  3001               	movlw	1
   805  07CC  00F2               	movwf	??_kbdGetC
   806  07CD  0872               	movf	??_kbdGetC,w
   807  07CE  07F4               	addwf	kbdGetC@key,f
   808                           
   809                           ;./keypad.h: 55:     }
   810  07CF  1003               	clrc
   811  07D0  0DF5               	rlf	kbdGetC@row,f
   812  07D1  3010               	movlw	16
   813  07D2  0275               	subwf	kbdGetC@row,w
   814  07D3  1C03               	skipc
   815  07D4  2F72               	goto	l38
   816  07D5                     l39:	
   817                           
   818                           ;./keypad.h: 56:     RB0 = 0;
   819  07D5  1006               	bcf	6,0	;volatile
   820                           
   821                           ;./keypad.h: 57:     RB1 = 0;
   822  07D6  1086               	bcf	6,1	;volatile
   823                           
   824                           ;./keypad.h: 58:     RB2 = 0;
   825  07D7  1106               	bcf	6,2	;volatile
   826                           
   827                           ;./keypad.h: 59:     RB3 = 0;
   828  07D8  1186               	bcf	6,3	;volatile
   829                           
   830                           ;./keypad.h: 60:     if (key != old_key) {
   831  07D9  0874               	movf	kbdGetC@key,w
   832  07DA  067A               	xorwf	_old_key,w
   833  07DB  1903               	skipnz
   834  07DC  2FEE               	goto	l861
   835                           
   836                           ;./keypad.h: 61:         old_key = key;
   837  07DD  0874               	movf	kbdGetC@key,w
   838  07DE  00F2               	movwf	??_kbdGetC
   839  07DF  0872               	movf	??_kbdGetC,w
   840  07E0  00FA               	movwf	_old_key
   841                           
   842                           ;./keypad.h: 62:         return keyPadMatrix[ key ];
   843  07E1  0874               	movf	kbdGetC@key,w
   844  07E2  3E01               	addlw	low ((_keyPadMatrix-__stringbase)| (0+32768))
   845  07E3  0084               	movwf	4
   846  07E4  120A  118A  2003   	fcall	stringdir
   847  07E7  00F2               	movwf	??_kbdGetC
   848  07E8  01F3               	clrf	??_kbdGetC+1
   849  07E9  0872               	movf	??_kbdGetC,w
   850  07EA  00F0               	movwf	?_kbdGetC
   851  07EB  0873               	movf	??_kbdGetC+1,w
   852  07EC  00F1               	movwf	?_kbdGetC+1
   853  07ED  0008               	return
   854  07EE                     l861:	
   855                           
   856                           ;./keypad.h: 64:         return keyPadMatrix[ 17 ];
   857  07EE  3012               	movlw	low (((_keyPadMatrix+17)-__stringbase)| (0+32768))
   858  07EF  0084               	movwf	4
   859  07F0  120A  118A  2003   	fcall	stringdir
   860  07F3  00F2               	movwf	??_kbdGetC
   861  07F4  01F3               	clrf	??_kbdGetC+1
   862  07F5  0872               	movf	??_kbdGetC,w
   863  07F6  00F0               	movwf	?_kbdGetC
   864  07F7  0873               	movf	??_kbdGetC+1,w
   865  07F8  00F1               	movwf	?_kbdGetC+1
   866  07F9  0008               	return
   867  07FA                     __end_of_kbdGetC:	
   868  007E                     btemp	set	126	;btemp
   869  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    17
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_kbdGetC

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     273
                                              6 COMMON     4     4      0
                            _kbdGetC
                            _kbdInit
 ---------------------------------------------------------------------------------
 (1) _kbdInit                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _kbdGetC                                              6     4      2     205
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _kbdGetC
   _kbdInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Apr 24 16:52:28 2019

                      pc 0002                       l38 0772                       l39 07D5  
                     fsr 0004                      l821 07AE                      l901 0716  
                    l903 0718                      l905 071A                      l819 077B  
                    l907 071C                      l861 07EE                      l909 071E  
                    l951 073A                      l881 0702                      l873 0722  
                    l891 070C                      l883 0704                      l893 070E  
                    l885 0706                      l895 0710                      l887 0708  
                    l879 0700                      l897 0712                      l889 070A  
                    l899 0714                      _RB0 0030                      _RB1 0031  
                    _RB2 0032                      _RB3 0033                      _RB4 0034  
                    _RB5 0035                      _RB6 0036                      _RB7 0037  
                    u220 0789                      u215 077E                      u250 079A  
                    u234 078C                      u245 078F                      u190 0778  
                    u280 07AB                      u264 079D                      u275 07A0  
                    u377 06FB                      u387 06E3                      u397 07B0  
                    _key 007B                      fsr0 0004                     _main 06E8  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTB 0006                    _PORTC 0007                    _TRISB 0086  
                  _TRISC 0087          __end_of_kbdGetC 07FA          __end_of_kbdInit 06E8  
           main@keypress 0079                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FA             __end_of_main 076F  
                 ??_main 0076                ??_kbdGetC 0072                ??_kbdInit 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070     __end_of_keyPadMatrix 001A  
             __pmaintext 06E8               __stringtab 0003                  _kbdGetC 076F  
                _kbdInit 06D8                  __ptext1 06D8                  __ptext2 076F  
             kbdGetC@key 0074               kbdGetC@row 0075                  _old_key 007A  
                main@key 0078     end_of_initialization 07FC             _keyPadMatrix 0009  
    start_initialization 07FA              __pbssCOMMON 007A                ___latbits 0002  
               ?_kbdGetC 0070                 ?_kbdInit 0070                __pstrings 0003  
            __stringbase 0008       __end_of__stringtab 0009         __size_of_kbdGetC 008B  
       __size_of_kbdInit 0010            __size_of_main 0087                stringcode 0003  
               stringdir 0003                 stringtab 0003  
