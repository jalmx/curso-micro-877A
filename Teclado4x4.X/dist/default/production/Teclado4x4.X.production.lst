

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Apr 24 12:45:55 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16LF877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.05
    14                           ; Generated 20/12/2018 GMT
    15                           ; 
    16                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16LF877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0088                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167                           
   168                           	psect	strings
   169  0003                     __pstrings:	
   170  0003                     stringtab:	
   171  0003                     __stringtab:	
   172  0003                     stringcode:	
   173                           ;	String table - string pointers are 1 byte each
   174                           
   175  0003                     stringdir:	
   176  0003  3000               	movlw	high stringdir
   177  0004  008A               	movwf	10
   178  0005  0804               	movf	4,w
   179  0006  0A84               	incf	4,f
   180  0007  0782               	addwf	2,f
   181  0008                     __stringbase:	
   182  0008  3400               	retlw	0
   183  0009                     __end_of__stringtab:	
   184  0009                     _keyPadMatrix:	
   185  0009  3437               	retlw	55
   186  000A  3438               	retlw	56
   187  000B  3439               	retlw	57
   188  000C  3430               	retlw	48
   189  000D  3434               	retlw	52
   190  000E  3435               	retlw	53
   191  000F  3436               	retlw	54
   192  0010  3430               	retlw	48
   193  0011  3431               	retlw	49
   194  0012  3432               	retlw	50
   195  0013  3433               	retlw	51
   196  0014  3430               	retlw	48
   197  0015  342A               	retlw	42
   198  0016  3430               	retlw	48
   199  0017  3423               	retlw	35
   200  0018  34FF               	retlw	255
   201  0019                     __end_of_keyPadMatrix:	
   202  0007                     _PORTC	set	7
   203  0006                     _PORTB	set	6
   204  0037                     _RB7	set	55
   205  0036                     _RB6	set	54
   206  0035                     _RB5	set	53
   207  0034                     _RB4	set	52
   208  0033                     _RB3	set	51
   209  0032                     _RB2	set	50
   210  0031                     _RB1	set	49
   211  0030                     _RB0	set	48
   212  0087                     _TRISC	set	135
   213  0086                     _TRISB	set	134
   214                           
   215                           	psect	cinit
   216  07FA                     start_initialization:	
   217                           ; #config settings
   218                           
   219  07FA                     __initialization:	
   220                           
   221                           ; Clear objects allocated to COMMON
   222  07FA  01FA               	clrf	__pbssCOMMON& (0+127)
   223  07FB  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   224  07FC                     end_of_initialization:	
   225                           ;End of C runtime variable initialization code
   226                           
   227  07FC                     __end_of__initialization:	
   228  07FC  0183               	clrf	3
   229  07FD  120A  118A  2F1A   	ljmp	_main	;jump to C main() function
   230                           
   231                           	psect	bssCOMMON
   232  007A                     __pbssCOMMON:	
   233  007A                     _old_key:	
   234  007A                     	ds	1
   235  007B                     _key:	
   236  007B                     	ds	1
   237                           
   238                           	psect	cstackCOMMON
   239  0070                     __pcstackCOMMON:	
   240  0070                     ?_kbdInit:	
   241  0070                     ??_kbdInit:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     ?_main:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ?_kbdGetC:	
   248                           ; 1 bytes @ 0x0
   249                           
   250                           
   251                           ; 2 bytes @ 0x0
   252  0070                     	ds	2
   253  0072                     ??_kbdGetC:	
   254                           
   255                           ; 1 bytes @ 0x2
   256  0072                     	ds	2
   257  0074                     kbdGetC@key:	
   258                           
   259                           ; 1 bytes @ 0x4
   260  0074                     	ds	1
   261  0075                     kbdGetC@row:	
   262                           
   263                           ; 1 bytes @ 0x5
   264  0075                     	ds	1
   265  0076                     ??_main:	
   266                           
   267                           ; 1 bytes @ 0x6
   268  0076                     	ds	2
   269  0078                     main@key:	
   270                           
   271                           ; 1 bytes @ 0x8
   272  0078                     	ds	1
   273  0079                     main@keypress:	
   274                           
   275                           ; 1 bytes @ 0x9
   276  0079                     	ds	1
   277                           
   278                           	psect	maintext
   279  071A                     __pmaintext:	
   280 ;;
   281 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   282 ;;
   283 ;; *************** function _main *****************
   284 ;; Defined at:
   285 ;;		line 17 in file "main.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;		None
   288 ;; Auto vars:     Size  Location     Type
   289 ;;  key             1    8[COMMON] unsigned char 
   290 ;;  keypress        1    9[COMMON] unsigned char 
   291 ;; Return value:  Size  Location     Type
   292 ;;                  1    wreg      void 
   293 ;; Registers used:
   294 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   295 ;; Tracked objects:
   296 ;;		On entry : B00/0
   297 ;;		On exit  : 0/0
   298 ;;		Unchanged: 0/0
   299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   300 ;;      Params:         0       0       0       0       0
   301 ;;      Locals:         2       0       0       0       0
   302 ;;      Temps:          2       0       0       0       0
   303 ;;      Totals:         4       0       0       0       0
   304 ;;Total ram usage:        4 bytes
   305 ;; Hardware stack levels required when called:    2
   306 ;; This function calls:
   307 ;;		_kbdGetC
   308 ;;		_kbdInit
   309 ;; This function is called by:
   310 ;;		Startup code after reset
   311 ;; This function uses a non-reentrant model
   312 ;;
   313                           
   314                           
   315                           ;psect for function _main
   316  071A                     _main:	
   317                           
   318                           ;main.c: 18:     TRISC = 0;
   319                           
   320                           ;incstack = 0
   321                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   322  071A  1683               	bsf	3,5	;RP0=1, select bank1
   323  071B  1303               	bcf	3,6	;RP1=0, select bank1
   324  071C  0187               	clrf	7	;volatile
   325                           
   326                           ;main.c: 19:     PORTC = 0;
   327  071D  1283               	bcf	3,5	;RP0=0, select bank0
   328  071E  1303               	bcf	3,6	;RP1=0, select bank0
   329  071F  0187               	clrf	7	;volatile
   330                           
   331                           ;main.c: 20:     kbdInit();
   332  0720  120A  118A  270A  120A  118A  	fcall	_kbdInit
   333                           
   334                           ;main.c: 22:     PORTC = 0x3F;
   335  0725  303F               	movlw	63
   336  0726  1283               	bcf	3,5	;RP0=0, select bank0
   337  0727  1303               	bcf	3,6	;RP1=0, select bank0
   338  0728  0087               	movwf	7	;volatile
   339                           
   340                           ;main.c: 23:     _delay((unsigned long)((5)*(4000000/4000.0)));
   341  0729  3007               	movlw	7
   342  072A  00F7               	movwf	??_main+1
   343  072B  307D               	movlw	125
   344  072C  00F6               	movwf	??_main
   345  072D                     u377:	
   346  072D  0BF6               	decfsz	??_main,f
   347  072E  2F2D               	goto	u377
   348  072F  0BF7               	decfsz	??_main+1,f
   349  0730  2F2D               	goto	u377
   350                           
   351                           ;main.c: 31:             switch (key) {
   352  0731  2F40               	goto	l843
   353  0732                     l849:	
   354                           
   355                           ;main.c: 33:                     PORTC = 0x3F;
   356  0732  303F               	movlw	63
   357  0733  2F3D               	goto	L5
   358  0734                     l851:	
   359                           ;main.c: 34:                     break;
   360                           
   361                           
   362                           ;main.c: 36:                     PORTC = 0x03;
   363  0734  3003               	movlw	3
   364  0735  2F3D               	goto	L5
   365  0736                     l853:	
   366                           ;main.c: 37:                     break;
   367                           
   368                           
   369                           ;main.c: 39:                     PORTC = 0x6D;
   370  0736  306D               	movlw	109
   371  0737  2F3D               	goto	L5
   372  0738                     l855:	
   373                           ;main.c: 40:                     break;
   374                           
   375                           
   376                           ;main.c: 42:                     PORTC = 0x67;
   377  0738  3067               	movlw	103
   378  0739  2F3D               	goto	L5
   379  073A                     l857:	
   380                           ;main.c: 43:                     break;
   381                           
   382                           
   383                           ;main.c: 45:                     PORTC = 0x53;
   384  073A  3053               	movlw	83
   385  073B  2F3D               	goto	L5
   386  073C                     l859:	
   387                           ;main.c: 46:                     break;
   388                           
   389                           
   390                           ;main.c: 48:                     PORTC = 0x76;
   391  073C  3076               	movlw	118
   392  073D                     L5:	
   393  073D  1283               	bcf	3,5	;RP0=0, select bank0
   394  073E  1303               	bcf	3,6	;RP1=0, select bank0
   395  073F  0087               	movwf	7	;volatile
   396  0740                     l843:	
   397                           ;main.c: 49:                     break;
   398                           
   399                           
   400                           ;main.c: 27:         char keypress = kbdGetC();
   401  0740  120A  118A  276F  120A  118A  	fcall	_kbdGetC
   402  0745  0870               	movf	?_kbdGetC,w
   403  0746  00F6               	movwf	??_main
   404  0747  0876               	movf	??_main,w
   405  0748  00F9               	movwf	main@keypress
   406                           
   407                           ;main.c: 28:         if (keypress != 0xFF) {
   408  0749  0A79               	incf	main@keypress,w
   409  074A  1903               	btfsc	3,2
   410  074B  2F40               	goto	l843
   411                           
   412                           ;main.c: 30:             char key = keypress;
   413  074C  0879               	movf	main@keypress,w
   414  074D  00F6               	movwf	??_main
   415  074E  0876               	movf	??_main,w
   416  074F  00F8               	movwf	main@key
   417  0750  0878               	movf	main@key,w
   418  0751  00F6               	movwf	??_main
   419  0752  01F7               	clrf	??_main+1
   420                           
   421                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   422                           ; Switch size 1, requested type "simple"
   423                           ; Number of cases is 1, Range of values is 0 to 0
   424                           ; switch strategies available:
   425                           ; Name         Instructions Cycles
   426                           ; simple_byte            4     3 (average)
   427                           ; direct_byte           11     8 (fixed)
   428                           ; jumptable            260     6 (fixed)
   429                           ;	Chosen strategy is simple_byte
   430  0753  0877               	movf	??_main+1,w
   431  0754  3A00               	xorlw	0	; case 0
   432  0755  1903               	skipnz
   433  0756  2F58               	goto	l901
   434  0757  2F40               	goto	l843
   435  0758                     l901:	
   436                           
   437                           ; Switch size 1, requested type "simple"
   438                           ; Number of cases is 6, Range of values is 48 to 53
   439                           ; switch strategies available:
   440                           ; Name         Instructions Cycles
   441                           ; simple_byte           19    10 (average)
   442                           ; direct_byte           29    11 (fixed)
   443                           ; jumptable            263     9 (fixed)
   444                           ;	Chosen strategy is simple_byte
   445  0758  0876               	movf	??_main,w
   446  0759  3A30               	xorlw	48	; case 48
   447  075A  1903               	skipnz
   448  075B  2F32               	goto	l849
   449  075C  3A01               	xorlw	1	; case 49
   450  075D  1903               	skipnz
   451  075E  2F34               	goto	l851
   452  075F  3A03               	xorlw	3	; case 50
   453  0760  1903               	skipnz
   454  0761  2F36               	goto	l853
   455  0762  3A01               	xorlw	1	; case 51
   456  0763  1903               	skipnz
   457  0764  2F38               	goto	l855
   458  0765  3A07               	xorlw	7	; case 52
   459  0766  1903               	skipnz
   460  0767  2F3A               	goto	l857
   461  0768  3A01               	xorlw	1	; case 53
   462  0769  1903               	skipnz
   463  076A  2F3C               	goto	l859
   464  076B  2F40               	goto	l843
   465  076C  120A  118A  2800   	ljmp	start
   466  076F                     __end_of_main:	
   467                           
   468                           	psect	text1
   469  070A                     __ptext1:	
   470 ;; *************** function _kbdInit *****************
   471 ;; Defined at:
   472 ;;		line 28 in file "./keypad.h"
   473 ;; Parameters:    Size  Location     Type
   474 ;;		None
   475 ;; Auto vars:     Size  Location     Type
   476 ;;		None
   477 ;; Return value:  Size  Location     Type
   478 ;;                  1    wreg      void 
   479 ;; Registers used:
   480 ;;		wreg, status,2
   481 ;; Tracked objects:
   482 ;;		On entry : 0/0
   483 ;;		On exit  : 0/0
   484 ;;		Unchanged: 0/0
   485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   486 ;;      Params:         0       0       0       0       0
   487 ;;      Locals:         0       0       0       0       0
   488 ;;      Temps:          2       0       0       0       0
   489 ;;      Totals:         2       0       0       0       0
   490 ;;Total ram usage:        2 bytes
   491 ;; Hardware stack levels used:    1
   492 ;; This function calls:
   493 ;;		Nothing
   494 ;; This function is called by:
   495 ;;		_main
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           
   500                           ;psect for function _kbdInit
   501  070A                     _kbdInit:	
   502                           
   503                           ;./keypad.h: 29:     TRISB = 0xF0;
   504                           
   505                           ;incstack = 0
   506                           ; Regs used in _kbdInit: [wreg+status,2]
   507  070A  30F0               	movlw	240
   508  070B  1683               	bsf	3,5	;RP0=1, select bank1
   509  070C  1303               	bcf	3,6	;RP1=0, select bank1
   510  070D  0086               	movwf	6	;volatile
   511                           
   512                           ;./keypad.h: 30:     PORTB = 0x00;
   513  070E  1283               	bcf	3,5	;RP0=0, select bank0
   514  070F  1303               	bcf	3,6	;RP1=0, select bank0
   515  0710  0186               	clrf	6	;volatile
   516                           
   517                           ;./keypad.h: 31:     _delay((unsigned long)((5)*(4000000/4000.0)));
   518  0711  3007               	movlw	7
   519  0712  00F1               	movwf	??_kbdInit+1
   520  0713  307D               	movlw	125
   521  0714  00F0               	movwf	??_kbdInit
   522  0715                     u387:	
   523  0715  0BF0               	decfsz	??_kbdInit,f
   524  0716  2F15               	goto	u387
   525  0717  0BF1               	decfsz	??_kbdInit+1,f
   526  0718  2F15               	goto	u387
   527  0719  0008               	return
   528  071A                     __end_of_kbdInit:	
   529                           
   530                           	psect	text2
   531  076F                     __ptext2:	
   532 ;; *************** function _kbdGetC *****************
   533 ;; Defined at:
   534 ;;		line 34 in file "./keypad.h"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;  row             1    5[COMMON] unsigned char 
   539 ;;  key             1    4[COMMON] unsigned char 
   540 ;; Return value:  Size  Location     Type
   541 ;;                  2    0[COMMON] int 
   542 ;; Registers used:
   543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   544 ;; Tracked objects:
   545 ;;		On entry : 0/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   549 ;;      Params:         2       0       0       0       0
   550 ;;      Locals:         2       0       0       0       0
   551 ;;      Temps:          2       0       0       0       0
   552 ;;      Totals:         6       0       0       0       0
   553 ;;Total ram usage:        6 bytes
   554 ;; Hardware stack levels used:    2
   555 ;; This function calls:
   556 ;;		Nothing
   557 ;; This function is called by:
   558 ;;		_main
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           
   563                           ;psect for function _kbdGetC
   564  076F                     _kbdGetC:	
   565                           
   566                           ;./keypad.h: 36:     char key = 0, row;
   567                           
   568                           ;incstack = 0
   569                           ; Regs used in _kbdGetC: [wreg-fsr0h+status,2+status,0+pclath]
   570  076F  01F4               	clrf	kbdGetC@key
   571                           
   572                           ;./keypad.h: 38:     for (row = 0b00000001; row < 0b00010000; row <<= 1) {
   573  0770  01F5               	clrf	kbdGetC@row
   574  0771  0AF5               	incf	kbdGetC@row,f
   575  0772                     l38:	
   576                           
   577                           ;./keypad.h: 39:         {;./keypad.h: 40:             RB0 = (row & 0x0001) >> 0;
   578  0772  1C75               	btfss	kbdGetC@row,0
   579  0773  2F78               	goto	u190
   580  0774  1283               	bcf	3,5	;RP0=0, select bank0
   581  0775  1303               	bcf	3,6	;RP1=0, select bank0
   582  0776  1406               	bsf	6,0	;volatile
   583  0777  2F7B               	goto	l789
   584  0778                     u190:	
   585  0778  1283               	bcf	3,5	;RP0=0, select bank0
   586  0779  1303               	bcf	3,6	;RP1=0, select bank0
   587  077A  1006               	bcf	6,0	;volatile
   588  077B                     l789:	
   589                           
   590                           ;./keypad.h: 41:             RB1 = (row & 0x0002) >> 1;
   591  077B  0875               	movf	kbdGetC@row,w
   592  077C  00F2               	movwf	??_kbdGetC
   593  077D  3001               	movlw	1
   594  077E                     u215:	
   595  077E  1003               	clrc
   596  077F  0CF2               	rrf	??_kbdGetC,f
   597  0780  3EFF               	addlw	-1
   598  0781  1D03               	skipz
   599  0782  2F7E               	goto	u215
   600  0783  1C72               	btfss	??_kbdGetC,0
   601  0784  2F89               	goto	u220
   602  0785  1283               	bcf	3,5	;RP0=0, select bank0
   603  0786  1303               	bcf	3,6	;RP1=0, select bank0
   604  0787  1486               	bsf	6,1	;volatile
   605  0788  2F8C               	goto	u234
   606  0789                     u220:	
   607  0789  1283               	bcf	3,5	;RP0=0, select bank0
   608  078A  1303               	bcf	3,6	;RP1=0, select bank0
   609  078B  1086               	bcf	6,1	;volatile
   610  078C                     u234:	
   611                           
   612                           ;./keypad.h: 42:             RB2 = (row & 0x0004) >> 2;
   613  078C  0875               	movf	kbdGetC@row,w
   614  078D  00F2               	movwf	??_kbdGetC
   615  078E  3002               	movlw	2
   616  078F                     u245:	
   617  078F  1003               	clrc
   618  0790  0CF2               	rrf	??_kbdGetC,f
   619  0791  3EFF               	addlw	-1
   620  0792  1D03               	skipz
   621  0793  2F8F               	goto	u245
   622  0794  1C72               	btfss	??_kbdGetC,0
   623  0795  2F9A               	goto	u250
   624  0796  1283               	bcf	3,5	;RP0=0, select bank0
   625  0797  1303               	bcf	3,6	;RP1=0, select bank0
   626  0798  1506               	bsf	6,2	;volatile
   627  0799  2F9D               	goto	u264
   628  079A                     u250:	
   629  079A  1283               	bcf	3,5	;RP0=0, select bank0
   630  079B  1303               	bcf	3,6	;RP1=0, select bank0
   631  079C  1106               	bcf	6,2	;volatile
   632  079D                     u264:	
   633                           
   634                           ;./keypad.h: 43:             RB3 = (row & 0x0008) >> 3;
   635  079D  0875               	movf	kbdGetC@row,w
   636  079E  00F2               	movwf	??_kbdGetC
   637  079F  3003               	movlw	3
   638  07A0                     u275:	
   639  07A0  1003               	clrc
   640  07A1  0CF2               	rrf	??_kbdGetC,f
   641  07A2  3EFF               	addlw	-1
   642  07A3  1D03               	skipz
   643  07A4  2FA0               	goto	u275
   644  07A5  1C72               	btfss	??_kbdGetC,0
   645  07A6  2FAB               	goto	u280
   646  07A7  1283               	bcf	3,5	;RP0=0, select bank0
   647  07A8  1303               	bcf	3,6	;RP1=0, select bank0
   648  07A9  1586               	bsf	6,3	;volatile
   649  07AA  2FAE               	goto	l791
   650  07AB                     u280:	
   651  07AB  1283               	bcf	3,5	;RP0=0, select bank0
   652  07AC  1303               	bcf	3,6	;RP1=0, select bank0
   653  07AD  1186               	bcf	6,3	;volatile
   654  07AE                     l791:	
   655                           
   656                           ;./keypad.h: 44:             _delay((unsigned long)((1)*(4000000/4000.0)));
   657  07AE  30C7               	movlw	199
   658  07AF  00F2               	movwf	??_kbdGetC
   659  07B0                     u397:	
   660  07B0  2FB1               	nop2
   661  07B1  0BF2               	decfsz	??_kbdGetC,f
   662  07B2  2FB0               	goto	u397
   663  07B3  2FB4               	nop2
   664  07B4  2FB5               	nop2
   665                           
   666                           ;./keypad.h: 45:         };./keypad.h: 47:         if (RB4)break;
   667  07B5  1283               	bcf	3,5	;RP0=0, select bank0
   668  07B6  1303               	bcf	3,6	;RP1=0, select bank0
   669  07B7  1A06               	btfsc	6,4	;volatile
   670  07B8  2FD5               	goto	l39
   671                           
   672                           ;./keypad.h: 48:         key++;
   673  07B9  3001               	movlw	1
   674  07BA  00F2               	movwf	??_kbdGetC
   675  07BB  0872               	movf	??_kbdGetC,w
   676  07BC  07F4               	addwf	kbdGetC@key,f
   677                           
   678                           ;./keypad.h: 49:         if (RB5)break;
   679  07BD  1A86               	btfsc	6,5	;volatile
   680  07BE  2FD5               	goto	l39
   681                           
   682                           ;./keypad.h: 50:         key++;
   683  07BF  3001               	movlw	1
   684  07C0  00F2               	movwf	??_kbdGetC
   685  07C1  0872               	movf	??_kbdGetC,w
   686  07C2  07F4               	addwf	kbdGetC@key,f
   687                           
   688                           ;./keypad.h: 51:         if (RB6)break;
   689  07C3  1B06               	btfsc	6,6	;volatile
   690  07C4  2FD5               	goto	l39
   691                           
   692                           ;./keypad.h: 52:         key++;
   693  07C5  3001               	movlw	1
   694  07C6  00F2               	movwf	??_kbdGetC
   695  07C7  0872               	movf	??_kbdGetC,w
   696  07C8  07F4               	addwf	kbdGetC@key,f
   697                           
   698                           ;./keypad.h: 53:         if (RB7)break;
   699  07C9  1B86               	btfsc	6,7	;volatile
   700  07CA  2FD5               	goto	l39
   701                           
   702                           ;./keypad.h: 54:         key++;
   703  07CB  3001               	movlw	1
   704  07CC  00F2               	movwf	??_kbdGetC
   705  07CD  0872               	movf	??_kbdGetC,w
   706  07CE  07F4               	addwf	kbdGetC@key,f
   707                           
   708                           ;./keypad.h: 55:     }
   709  07CF  1003               	clrc
   710  07D0  0DF5               	rlf	kbdGetC@row,f
   711  07D1  3010               	movlw	16
   712  07D2  0275               	subwf	kbdGetC@row,w
   713  07D3  1C03               	skipc
   714  07D4  2F72               	goto	l38
   715  07D5                     l39:	
   716                           
   717                           ;./keypad.h: 56:     RB0 = 0;
   718  07D5  1006               	bcf	6,0	;volatile
   719                           
   720                           ;./keypad.h: 57:     RB1 = 0;
   721  07D6  1086               	bcf	6,1	;volatile
   722                           
   723                           ;./keypad.h: 58:     RB2 = 0;
   724  07D7  1106               	bcf	6,2	;volatile
   725                           
   726                           ;./keypad.h: 59:     RB3 = 0;
   727  07D8  1186               	bcf	6,3	;volatile
   728                           
   729                           ;./keypad.h: 60:     if (key != old_key) {
   730  07D9  0874               	movf	kbdGetC@key,w
   731  07DA  067A               	xorwf	_old_key,w
   732  07DB  1903               	skipnz
   733  07DC  2FEE               	goto	l831
   734                           
   735                           ;./keypad.h: 61:         old_key = key;
   736  07DD  0874               	movf	kbdGetC@key,w
   737  07DE  00F2               	movwf	??_kbdGetC
   738  07DF  0872               	movf	??_kbdGetC,w
   739  07E0  00FA               	movwf	_old_key
   740                           
   741                           ;./keypad.h: 62:         return keyPadMatrix[ key ];
   742  07E1  0874               	movf	kbdGetC@key,w
   743  07E2  3E01               	addlw	low ((_keyPadMatrix-__stringbase)| (0+32768))
   744  07E3  0084               	movwf	4
   745  07E4  120A  118A  2003   	fcall	stringdir
   746  07E7  00F2               	movwf	??_kbdGetC
   747  07E8  01F3               	clrf	??_kbdGetC+1
   748  07E9  0872               	movf	??_kbdGetC,w
   749  07EA  00F0               	movwf	?_kbdGetC
   750  07EB  0873               	movf	??_kbdGetC+1,w
   751  07EC  00F1               	movwf	?_kbdGetC+1
   752  07ED  0008               	return
   753  07EE                     l831:	
   754                           
   755                           ;./keypad.h: 64:         return keyPadMatrix[ 0x0F ];
   756  07EE  3010               	movlw	low (((_keyPadMatrix+15)-__stringbase)| (0+32768))
   757  07EF  0084               	movwf	4
   758  07F0  120A  118A  2003   	fcall	stringdir
   759  07F3  00F2               	movwf	??_kbdGetC
   760  07F4  01F3               	clrf	??_kbdGetC+1
   761  07F5  0872               	movf	??_kbdGetC,w
   762  07F6  00F0               	movwf	?_kbdGetC
   763  07F7  0873               	movf	??_kbdGetC+1,w
   764  07F8  00F1               	movwf	?_kbdGetC+1
   765  07F9  0008               	return
   766  07FA                     __end_of_kbdGetC:	
   767  007E                     btemp	set	126	;btemp
   768  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_kbdGetC

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     273
                                              6 COMMON     4     4      0
                            _kbdGetC
                            _kbdInit
 ---------------------------------------------------------------------------------
 (1) _kbdInit                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _kbdGetC                                              6     4      2     205
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _kbdGetC
   _kbdInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Apr 24 12:45:55 2019

                      pc 0002                       l38 0772                       l39 07D5  
                     fsr 0004                      l901 0758                      l831 07EE  
                    l851 0734                      l843 0740                      l853 0736  
                    l791 07AE                      l855 0738                      l857 073A  
                    l849 0732                      l859 073C                      l789 077B  
                    _RB0 0030                      _RB1 0031                      _RB2 0032  
                    _RB3 0033                      _RB4 0034                      _RB5 0035  
                    _RB6 0036                      _RB7 0037                      u220 0789  
                    u215 077E                      u250 079A                      u234 078C  
                    u245 078F                      u190 0778                      u280 07AB  
                    u264 079D                      u275 07A0                      u377 072D  
                    u387 0715                      u397 07B0                      _key 007B  
                    fsr0 0004                     _main 071A                     btemp 007E  
                   start 0000                    ?_main 0070                    _PORTB 0006  
                  _PORTC 0007                    _TRISB 0086                    _TRISC 0087  
        __end_of_kbdGetC 07FA          __end_of_kbdInit 071A             main@keypress 0079  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FA             __end_of_main 076F                   ??_main 0076  
              ??_kbdGetC 0072                ??_kbdInit 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070     __end_of_keyPadMatrix 0019               __pmaintext 071A  
             __stringtab 0003                  _kbdGetC 076F                  _kbdInit 070A  
                __ptext1 070A                  __ptext2 076F               kbdGetC@key 0074  
             kbdGetC@row 0075                  _old_key 007A                  main@key 0078  
   end_of_initialization 07FC             _keyPadMatrix 0009      start_initialization 07FA  
            __pbssCOMMON 007A                ___latbits 0002                 ?_kbdGetC 0070  
               ?_kbdInit 0070                __pstrings 0003              __stringbase 0008  
     __end_of__stringtab 0009         __size_of_kbdGetC 008B         __size_of_kbdInit 0010  
          __size_of_main 0055                stringcode 0003                 stringdir 0003  
               stringtab 0003  
