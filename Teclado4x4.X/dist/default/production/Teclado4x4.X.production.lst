

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Mar 31 19:26:53 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16LF877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.05
    14                           ; Generated 20/12/2018 GMT
    15                           ; 
    16                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16LF877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0088                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167                           
   168                           	psect	strings
   169  0003                     __pstrings:	
   170  0003                     stringtab:	
   171  0003                     __stringtab:	
   172  0003                     stringcode:	
   173                           ;	String table - string pointers are 1 byte each
   174                           
   175  0003                     stringdir:	
   176  0003  3000               	movlw	high stringdir
   177  0004  008A               	movwf	10
   178  0005  0804               	movf	4,w
   179  0006  0A84               	incf	4,f
   180  0007  0782               	addwf	2,f
   181  0008                     __stringbase:	
   182  0008  3400               	retlw	0
   183  0009                     __end_of__stringtab:	
   184  0009                     _keyPadMatrix:	
   185  0009  3431               	retlw	49
   186  000A  3432               	retlw	50
   187  000B  3433               	retlw	51
   188  000C  3434               	retlw	52
   189  000D  3435               	retlw	53
   190  000E  3436               	retlw	54
   191  000F  3437               	retlw	55
   192  0010  3438               	retlw	56
   193  0011  3439               	retlw	57
   194  0012  342A               	retlw	42
   195  0013  3430               	retlw	48
   196  0014  3423               	retlw	35
   197  0015  34FF               	retlw	255
   198  0016                     __end_of_keyPadMatrix:	
   199  0007                     _PORTC	set	7
   200  0006                     _PORTB	set	6
   201  0037                     _RB7	set	55
   202  0036                     _RB6	set	54
   203  0035                     _RB5	set	53
   204  0034                     _RB4	set	52
   205  0033                     _RB3	set	51
   206  0032                     _RB2	set	50
   207  0031                     _RB1	set	49
   208  0030                     _RB0	set	48
   209  0087                     _TRISC	set	135
   210  0086                     _TRISB	set	134
   211                           
   212                           	psect	cinit
   213  07FA                     start_initialization:	
   214                           ; #config settings
   215                           
   216  07FA                     __initialization:	
   217                           
   218                           ; Clear objects allocated to COMMON
   219  07FA  01FA               	clrf	__pbssCOMMON& (0+127)
   220  07FB  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   221  07FC                     end_of_initialization:	
   222                           ;End of C runtime variable initialization code
   223                           
   224  07FC                     __end_of__initialization:	
   225  07FC  0183               	clrf	3
   226  07FD  120A  118A  2F35   	ljmp	_main	;jump to C main() function
   227                           
   228                           	psect	bssCOMMON
   229  007A                     __pbssCOMMON:	
   230  007A                     _old_key:	
   231  007A                     	ds	1
   232  007B                     _key:	
   233  007B                     	ds	1
   234                           
   235                           	psect	cstackCOMMON
   236  0070                     __pcstackCOMMON:	
   237  0070                     ?_kbdInit:	
   238  0070                     ??_kbdInit:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0070                     ?_main:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     ?_kbdGetC:	
   245                           ; 1 bytes @ 0x0
   246                           
   247                           
   248                           ; 2 bytes @ 0x0
   249  0070                     	ds	2
   250  0072                     ??_kbdGetC:	
   251                           
   252                           ; 1 bytes @ 0x2
   253  0072                     	ds	2
   254  0074                     kbdGetC@key:	
   255                           
   256                           ; 1 bytes @ 0x4
   257  0074                     	ds	1
   258  0075                     kbdGetC@row:	
   259                           
   260                           ; 1 bytes @ 0x5
   261  0075                     	ds	1
   262  0076                     ??_main:	
   263                           
   264                           ; 1 bytes @ 0x6
   265  0076                     	ds	2
   266  0078                     main@key:	
   267                           
   268                           ; 1 bytes @ 0x8
   269  0078                     	ds	1
   270  0079                     main@keypress:	
   271                           
   272                           ; 1 bytes @ 0x9
   273  0079                     	ds	1
   274                           
   275                           	psect	maintext
   276  0735                     __pmaintext:	
   277 ;;
   278 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   279 ;;
   280 ;; *************** function _main *****************
   281 ;; Defined at:
   282 ;;		line 17 in file "main.c"
   283 ;; Parameters:    Size  Location     Type
   284 ;;		None
   285 ;; Auto vars:     Size  Location     Type
   286 ;;  key             1    8[COMMON] unsigned char 
   287 ;;  keypress        1    9[COMMON] unsigned char 
   288 ;; Return value:  Size  Location     Type
   289 ;;                  1    wreg      void 
   290 ;; Registers used:
   291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   292 ;; Tracked objects:
   293 ;;		On entry : B00/0
   294 ;;		On exit  : 0/0
   295 ;;		Unchanged: 0/0
   296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   297 ;;      Params:         0       0       0       0       0
   298 ;;      Locals:         2       0       0       0       0
   299 ;;      Temps:          2       0       0       0       0
   300 ;;      Totals:         4       0       0       0       0
   301 ;;Total ram usage:        4 bytes
   302 ;; Hardware stack levels required when called:    2
   303 ;; This function calls:
   304 ;;		_kbdGetC
   305 ;;		_kbdInit
   306 ;; This function is called by:
   307 ;;		Startup code after reset
   308 ;; This function uses a non-reentrant model
   309 ;;
   310                           
   311                           
   312                           ;psect for function _main
   313  0735                     _main:	
   314                           
   315                           ;main.c: 18:     TRISC = 0;
   316                           
   317                           ;incstack = 0
   318                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   319  0735  1683               	bsf	3,5	;RP0=1, select bank1
   320  0736  1303               	bcf	3,6	;RP1=0, select bank1
   321  0737  0187               	clrf	7	;volatile
   322                           
   323                           ;main.c: 19:     PORTC = 0;
   324  0738  1283               	bcf	3,5	;RP0=0, select bank0
   325  0739  1303               	bcf	3,6	;RP1=0, select bank0
   326  073A  0187               	clrf	7	;volatile
   327                           
   328                           ;main.c: 21:     kbdInit();
   329  073B  120A  118A  272D  120A  118A  	fcall	_kbdInit
   330                           
   331                           ;main.c: 28:             switch (key) {
   332  0740  2F49               	goto	l824
   333  0741                     l830:	
   334                           
   335                           ;main.c: 30:                     PORTC = 0x03;
   336  0741  3003               	movlw	3
   337  0742  2F46               	goto	L2
   338  0743                     l832:	
   339                           ;main.c: 31:                     break;
   340                           
   341                           
   342                           ;main.c: 33:                     PORTC = 0x6D;
   343  0743  306D               	movlw	109
   344  0744  2F46               	goto	L2
   345  0745                     l834:	
   346                           ;main.c: 34:                     break;
   347                           
   348                           
   349                           ;main.c: 36:                     PORTC = 0x67;
   350  0745  3067               	movlw	103
   351  0746                     L2:	
   352  0746  1283               	bcf	3,5	;RP0=0, select bank0
   353  0747  1303               	bcf	3,6	;RP1=0, select bank0
   354  0748  0087               	movwf	7	;volatile
   355  0749                     l824:	
   356                           ;main.c: 37:                     break;
   357                           
   358                           
   359                           ;main.c: 24:         char keypress = kbdGetC();
   360  0749  120A  118A  276F  120A  118A  	fcall	_kbdGetC
   361  074E  0870               	movf	?_kbdGetC,w
   362  074F  00F6               	movwf	??_main
   363  0750  0876               	movf	??_main,w
   364  0751  00F9               	movwf	main@keypress
   365                           
   366                           ;main.c: 25:         if (keypress != 0xFF) {
   367  0752  0A79               	incf	main@keypress,w
   368  0753  1903               	btfsc	3,2
   369  0754  2F49               	goto	l824
   370                           
   371                           ;main.c: 26:             char key = keypress;
   372  0755  0879               	movf	main@keypress,w
   373  0756  00F6               	movwf	??_main
   374  0757  0876               	movf	??_main,w
   375  0758  00F8               	movwf	main@key
   376  0759  0878               	movf	main@key,w
   377  075A  00F6               	movwf	??_main
   378  075B  01F7               	clrf	??_main+1
   379                           
   380                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   381                           ; Switch size 1, requested type "simple"
   382                           ; Number of cases is 1, Range of values is 0 to 0
   383                           ; switch strategies available:
   384                           ; Name         Instructions Cycles
   385                           ; simple_byte            4     3 (average)
   386                           ; direct_byte           11     8 (fixed)
   387                           ; jumptable            260     6 (fixed)
   388                           ;	Chosen strategy is simple_byte
   389  075C  0877               	movf	??_main+1,w
   390  075D  3A00               	xorlw	0	; case 0
   391  075E  1903               	skipnz
   392  075F  2F61               	goto	l876
   393  0760  2F49               	goto	l824
   394  0761                     l876:	
   395                           
   396                           ; Switch size 1, requested type "simple"
   397                           ; Number of cases is 3, Range of values is 49 to 51
   398                           ; switch strategies available:
   399                           ; Name         Instructions Cycles
   400                           ; simple_byte           10     6 (average)
   401                           ; direct_byte           20    11 (fixed)
   402                           ; jumptable            263     9 (fixed)
   403                           ;	Chosen strategy is simple_byte
   404  0761  0876               	movf	??_main,w
   405  0762  3A31               	xorlw	49	; case 49
   406  0763  1903               	skipnz
   407  0764  2F41               	goto	l830
   408  0765  3A03               	xorlw	3	; case 50
   409  0766  1903               	skipnz
   410  0767  2F43               	goto	l832
   411  0768  3A01               	xorlw	1	; case 51
   412  0769  1903               	skipnz
   413  076A  2F45               	goto	l834
   414  076B  2F49               	goto	l824
   415  076C  120A  118A  2800   	ljmp	start
   416  076F                     __end_of_main:	
   417                           
   418                           	psect	text1
   419  072D                     __ptext1:	
   420 ;; *************** function _kbdInit *****************
   421 ;; Defined at:
   422 ;;		line 28 in file "./keypad.h"
   423 ;; Parameters:    Size  Location     Type
   424 ;;		None
   425 ;; Auto vars:     Size  Location     Type
   426 ;;		None
   427 ;; Return value:  Size  Location     Type
   428 ;;                  1    wreg      void 
   429 ;; Registers used:
   430 ;;		wreg, status,2
   431 ;; Tracked objects:
   432 ;;		On entry : 0/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   436 ;;      Params:         0       0       0       0       0
   437 ;;      Locals:         0       0       0       0       0
   438 ;;      Temps:          0       0       0       0       0
   439 ;;      Totals:         0       0       0       0       0
   440 ;;Total ram usage:        0 bytes
   441 ;; Hardware stack levels used:    1
   442 ;; This function calls:
   443 ;;		Nothing
   444 ;; This function is called by:
   445 ;;		_main
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449                           
   450                           ;psect for function _kbdInit
   451  072D                     _kbdInit:	
   452                           
   453                           ;./keypad.h: 29:     TRISB = 0xF0;
   454                           
   455                           ;incstack = 0
   456                           ; Regs used in _kbdInit: [wreg+status,2]
   457  072D  30F0               	movlw	240
   458  072E  1683               	bsf	3,5	;RP0=1, select bank1
   459  072F  1303               	bcf	3,6	;RP1=0, select bank1
   460  0730  0086               	movwf	6	;volatile
   461                           
   462                           ;./keypad.h: 30:     PORTB = 0x00;
   463  0731  1283               	bcf	3,5	;RP0=0, select bank0
   464  0732  1303               	bcf	3,6	;RP1=0, select bank0
   465  0733  0186               	clrf	6	;volatile
   466  0734  0008               	return
   467  0735                     __end_of_kbdInit:	
   468                           
   469                           	psect	text2
   470  076F                     __ptext2:	
   471 ;; *************** function _kbdGetC *****************
   472 ;; Defined at:
   473 ;;		line 33 in file "./keypad.h"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;  row             1    5[COMMON] unsigned char 
   478 ;;  key             1    4[COMMON] unsigned char 
   479 ;; Return value:  Size  Location     Type
   480 ;;                  2    0[COMMON] int 
   481 ;; Registers used:
   482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   488 ;;      Params:         2       0       0       0       0
   489 ;;      Locals:         2       0       0       0       0
   490 ;;      Temps:          2       0       0       0       0
   491 ;;      Totals:         6       0       0       0       0
   492 ;;Total ram usage:        6 bytes
   493 ;; Hardware stack levels used:    2
   494 ;; This function calls:
   495 ;;		Nothing
   496 ;; This function is called by:
   497 ;;		_main
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           
   502                           ;psect for function _kbdGetC
   503  076F                     _kbdGetC:	
   504                           
   505                           ;./keypad.h: 35:     char key = 0, row;
   506                           
   507                           ;incstack = 0
   508                           ; Regs used in _kbdGetC: [wreg-fsr0h+status,2+status,0+pclath]
   509  076F  01F4               	clrf	kbdGetC@key
   510                           
   511                           ;./keypad.h: 37:     for (row = 0b00000001; row < 0b00010000; row <<= 1) {
   512  0770  01F5               	clrf	kbdGetC@row
   513  0771  0AF5               	incf	kbdGetC@row,f
   514  0772                     l38:	
   515                           
   516                           ;./keypad.h: 38:         {;./keypad.h: 39:             RB0 = (row & 0x0001) >> 0;
   517  0772  1C75               	btfss	kbdGetC@row,0
   518  0773  2F78               	goto	u190
   519  0774  1283               	bcf	3,5	;RP0=0, select bank0
   520  0775  1303               	bcf	3,6	;RP1=0, select bank0
   521  0776  1406               	bsf	6,0	;volatile
   522  0777  2F7B               	goto	l774
   523  0778                     u190:	
   524  0778  1283               	bcf	3,5	;RP0=0, select bank0
   525  0779  1303               	bcf	3,6	;RP1=0, select bank0
   526  077A  1006               	bcf	6,0	;volatile
   527  077B                     l774:	
   528                           
   529                           ;./keypad.h: 40:             RB1 = (row & 0x0002) >> 1;
   530  077B  0875               	movf	kbdGetC@row,w
   531  077C  00F2               	movwf	??_kbdGetC
   532  077D  3001               	movlw	1
   533  077E                     u215:	
   534  077E  1003               	clrc
   535  077F  0CF2               	rrf	??_kbdGetC,f
   536  0780  3EFF               	addlw	-1
   537  0781  1D03               	skipz
   538  0782  2F7E               	goto	u215
   539  0783  1C72               	btfss	??_kbdGetC,0
   540  0784  2F89               	goto	u220
   541  0785  1283               	bcf	3,5	;RP0=0, select bank0
   542  0786  1303               	bcf	3,6	;RP1=0, select bank0
   543  0787  1486               	bsf	6,1	;volatile
   544  0788  2F8C               	goto	u234
   545  0789                     u220:	
   546  0789  1283               	bcf	3,5	;RP0=0, select bank0
   547  078A  1303               	bcf	3,6	;RP1=0, select bank0
   548  078B  1086               	bcf	6,1	;volatile
   549  078C                     u234:	
   550                           
   551                           ;./keypad.h: 41:             RB2 = (row & 0x0004) >> 2;
   552  078C  0875               	movf	kbdGetC@row,w
   553  078D  00F2               	movwf	??_kbdGetC
   554  078E  3002               	movlw	2
   555  078F                     u245:	
   556  078F  1003               	clrc
   557  0790  0CF2               	rrf	??_kbdGetC,f
   558  0791  3EFF               	addlw	-1
   559  0792  1D03               	skipz
   560  0793  2F8F               	goto	u245
   561  0794  1C72               	btfss	??_kbdGetC,0
   562  0795  2F9A               	goto	u250
   563  0796  1283               	bcf	3,5	;RP0=0, select bank0
   564  0797  1303               	bcf	3,6	;RP1=0, select bank0
   565  0798  1506               	bsf	6,2	;volatile
   566  0799  2F9D               	goto	u264
   567  079A                     u250:	
   568  079A  1283               	bcf	3,5	;RP0=0, select bank0
   569  079B  1303               	bcf	3,6	;RP1=0, select bank0
   570  079C  1106               	bcf	6,2	;volatile
   571  079D                     u264:	
   572                           
   573                           ;./keypad.h: 42:             RB3 = (row & 0x0008) >> 3;
   574  079D  0875               	movf	kbdGetC@row,w
   575  079E  00F2               	movwf	??_kbdGetC
   576  079F  3003               	movlw	3
   577  07A0                     u275:	
   578  07A0  1003               	clrc
   579  07A1  0CF2               	rrf	??_kbdGetC,f
   580  07A2  3EFF               	addlw	-1
   581  07A3  1D03               	skipz
   582  07A4  2FA0               	goto	u275
   583  07A5  1C72               	btfss	??_kbdGetC,0
   584  07A6  2FAB               	goto	u280
   585  07A7  1283               	bcf	3,5	;RP0=0, select bank0
   586  07A8  1303               	bcf	3,6	;RP1=0, select bank0
   587  07A9  1586               	bsf	6,3	;volatile
   588  07AA  2FAE               	goto	l776
   589  07AB                     u280:	
   590  07AB  1283               	bcf	3,5	;RP0=0, select bank0
   591  07AC  1303               	bcf	3,6	;RP1=0, select bank0
   592  07AD  1186               	bcf	6,3	;volatile
   593  07AE                     l776:	
   594                           
   595                           ;./keypad.h: 43:             _delay((unsigned long)((1)*(4000000/4000.0)));
   596  07AE  30C7               	movlw	199
   597  07AF  00F2               	movwf	??_kbdGetC
   598  07B0                     u377:	
   599  07B0  2FB1               	nop2
   600  07B1  0BF2               	decfsz	??_kbdGetC,f
   601  07B2  2FB0               	goto	u377
   602  07B3  2FB4               	nop2
   603  07B4  2FB5               	nop2
   604                           
   605                           ;./keypad.h: 44:         };./keypad.h: 46:         if (RB4)break;
   606  07B5  1283               	bcf	3,5	;RP0=0, select bank0
   607  07B6  1303               	bcf	3,6	;RP1=0, select bank0
   608  07B7  1A06               	btfsc	6,4	;volatile
   609  07B8  2FD5               	goto	l39
   610                           
   611                           ;./keypad.h: 47:         key++;
   612  07B9  3001               	movlw	1
   613  07BA  00F2               	movwf	??_kbdGetC
   614  07BB  0872               	movf	??_kbdGetC,w
   615  07BC  07F4               	addwf	kbdGetC@key,f
   616                           
   617                           ;./keypad.h: 48:         if (RB5)break;
   618  07BD  1A86               	btfsc	6,5	;volatile
   619  07BE  2FD5               	goto	l39
   620                           
   621                           ;./keypad.h: 49:         key++;
   622  07BF  3001               	movlw	1
   623  07C0  00F2               	movwf	??_kbdGetC
   624  07C1  0872               	movf	??_kbdGetC,w
   625  07C2  07F4               	addwf	kbdGetC@key,f
   626                           
   627                           ;./keypad.h: 50:         if (RB6)break;
   628  07C3  1B06               	btfsc	6,6	;volatile
   629  07C4  2FD5               	goto	l39
   630                           
   631                           ;./keypad.h: 51:         key++;
   632  07C5  3001               	movlw	1
   633  07C6  00F2               	movwf	??_kbdGetC
   634  07C7  0872               	movf	??_kbdGetC,w
   635  07C8  07F4               	addwf	kbdGetC@key,f
   636                           
   637                           ;./keypad.h: 52:         if (RB7)break;
   638  07C9  1B86               	btfsc	6,7	;volatile
   639  07CA  2FD5               	goto	l39
   640                           
   641                           ;./keypad.h: 53:         key++;
   642  07CB  3001               	movlw	1
   643  07CC  00F2               	movwf	??_kbdGetC
   644  07CD  0872               	movf	??_kbdGetC,w
   645  07CE  07F4               	addwf	kbdGetC@key,f
   646                           
   647                           ;./keypad.h: 54:     }
   648  07CF  1003               	clrc
   649  07D0  0DF5               	rlf	kbdGetC@row,f
   650  07D1  3010               	movlw	16
   651  07D2  0275               	subwf	kbdGetC@row,w
   652  07D3  1C03               	skipc
   653  07D4  2F72               	goto	l38
   654  07D5                     l39:	
   655                           
   656                           ;./keypad.h: 55:     RB0 = 0;
   657  07D5  1006               	bcf	6,0	;volatile
   658                           
   659                           ;./keypad.h: 56:     RB1 = 0;
   660  07D6  1086               	bcf	6,1	;volatile
   661                           
   662                           ;./keypad.h: 57:     RB2 = 0;
   663  07D7  1106               	bcf	6,2	;volatile
   664                           
   665                           ;./keypad.h: 58:     RB3 = 0;
   666  07D8  1186               	bcf	6,3	;volatile
   667                           
   668                           ;./keypad.h: 59:     if (key != old_key) {
   669  07D9  0874               	movf	kbdGetC@key,w
   670  07DA  067A               	xorwf	_old_key,w
   671  07DB  1903               	skipnz
   672  07DC  2FEE               	goto	l816
   673                           
   674                           ;./keypad.h: 60:         old_key = key;
   675  07DD  0874               	movf	kbdGetC@key,w
   676  07DE  00F2               	movwf	??_kbdGetC
   677  07DF  0872               	movf	??_kbdGetC,w
   678  07E0  00FA               	movwf	_old_key
   679                           
   680                           ;./keypad.h: 61:         return keyPadMatrix[ key ];
   681  07E1  0874               	movf	kbdGetC@key,w
   682  07E2  3E01               	addlw	low ((_keyPadMatrix-__stringbase)| (0+32768))
   683  07E3  0084               	movwf	4
   684  07E4  120A  118A  2003   	fcall	stringdir
   685  07E7  00F2               	movwf	??_kbdGetC
   686  07E8  01F3               	clrf	??_kbdGetC+1
   687  07E9  0872               	movf	??_kbdGetC,w
   688  07EA  00F0               	movwf	?_kbdGetC
   689  07EB  0873               	movf	??_kbdGetC+1,w
   690  07EC  00F1               	movwf	?_kbdGetC+1
   691  07ED  0008               	return
   692  07EE                     l816:	
   693                           
   694                           ;./keypad.h: 63:         return keyPadMatrix[ 0x0C ];
   695  07EE  300D               	movlw	low (((_keyPadMatrix+12)-__stringbase)| (0+32768))
   696  07EF  0084               	movwf	4
   697  07F0  120A  118A  2003   	fcall	stringdir
   698  07F3  00F2               	movwf	??_kbdGetC
   699  07F4  01F3               	clrf	??_kbdGetC+1
   700  07F5  0872               	movf	??_kbdGetC,w
   701  07F6  00F0               	movwf	?_kbdGetC
   702  07F7  0873               	movf	??_kbdGetC+1,w
   703  07F8  00F1               	movwf	?_kbdGetC+1
   704  07F9  0008               	return
   705  07FA                     __end_of_kbdGetC:	
   706  007E                     btemp	set	126	;btemp
   707  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    13
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_kbdGetC

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     273
                                              6 COMMON     4     4      0
                            _kbdGetC
                            _kbdInit
 ---------------------------------------------------------------------------------
 (1) _kbdInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _kbdGetC                                              6     4      2     205
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _kbdGetC
   _kbdInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Mar 31 19:26:53 2019

                      pc 0002                       l38 0772                       l39 07D5  
                     fsr 0004                      l830 0741                      l816 07EE  
                    l832 0743                      l824 0749                      l834 0745  
                    l774 077B                      l776 07AE                      l876 0761  
                    _RB0 0030                      _RB1 0031                      _RB2 0032  
                    _RB3 0033                      _RB4 0034                      _RB5 0035  
                    _RB6 0036                      _RB7 0037                      u220 0789  
                    u215 077E                      u250 079A                      u234 078C  
                    u245 078F                      u190 0778                      u280 07AB  
                    u264 079D                      u275 07A0                      u377 07B0  
                    _key 007B                      fsr0 0004                     _main 0735  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTB 0006                    _PORTC 0007                    _TRISB 0086  
                  _TRISC 0087          __end_of_kbdGetC 07FA          __end_of_kbdInit 0735  
           main@keypress 0079                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FA             __end_of_main 076F  
                 ??_main 0076                ??_kbdGetC 0072                ??_kbdInit 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070     __end_of_keyPadMatrix 0016  
             __pmaintext 0735               __stringtab 0003                  _kbdGetC 076F  
                _kbdInit 072D                  __ptext1 072D                  __ptext2 076F  
             kbdGetC@key 0074               kbdGetC@row 0075                  _old_key 007A  
                main@key 0078     end_of_initialization 07FC             _keyPadMatrix 0009  
    start_initialization 07FA              __pbssCOMMON 007A                ___latbits 0002  
               ?_kbdGetC 0070                 ?_kbdInit 0070                __pstrings 0003  
            __stringbase 0008       __end_of__stringtab 0009         __size_of_kbdGetC 008B  
       __size_of_kbdInit 0008            __size_of_main 003A                stringcode 0003  
               stringdir 0003                 stringtab 0003  
