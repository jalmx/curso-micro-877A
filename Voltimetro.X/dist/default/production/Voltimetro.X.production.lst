

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue May 07 13:33:51 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,merge=1,delta=2
    37                           	psect	text28,local,class=CODE,merge=1,delta=2
    38                           	psect	text29,local,class=CODE,merge=1,delta=2
    39                           	psect	text30,local,class=CODE,merge=1,delta=2
    40                           	psect	text31,local,class=CODE,merge=1,delta=2
    41                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.05
    45                           ; Generated 20/12/2018 GMT
    46                           ; 
    47                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F877A Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  018C                     	;# 
   197  018D                     	;# 
   198                           
   199                           	psect	strings
   200  1000                     __pstrings:	
   201  1000                     stringtab:	
   202  1000                     __stringtab:	
   203                           
   204                           ;	String table - string pointers are 1 byte each
   205  1000  1BFF               	btfsc	btemp+1,7
   206  1001  280A               	ljmp	stringcode
   207  1002  1383               	bcf	3,7
   208  1003  187F               	btfsc	btemp+1,0
   209  1004  1783               	bsf	3,7
   210  1005  0800               	movf	0,w
   211  1006  0A84               	incf	4,f
   212  1007  1903               	skipnz
   213  1008  0AFF               	incf	btemp+1,f
   214  1009  0008               	return
   215  100A                     stringcode:	
   216  100A                     stringdir:	
   217  100A  3010               	movlw	high stringdir
   218  100B  008A               	movwf	10
   219  100C  0804               	movf	4,w
   220  100D  0A84               	incf	4,f
   221  100E  0782               	addwf	2,f
   222  100F                     __stringbase:	
   223  100F  3400               	retlw	0
   224  1010                     __end_of__stringtab:	
   225  1010                     __powers_:	
   226  1010  3400               	retlw	0
   227  1011  3400               	retlw	0
   228  1012  3480               	retlw	128
   229  1013  343F               	retlw	63
   230  1014  3400               	retlw	0
   231  1015  3400               	retlw	0
   232  1016  3420               	retlw	32
   233  1017  3441               	retlw	65
   234  1018  3400               	retlw	0
   235  1019  3400               	retlw	0
   236  101A  34C8               	retlw	200
   237  101B  3442               	retlw	66
   238  101C  3400               	retlw	0
   239  101D  3400               	retlw	0
   240  101E  347A               	retlw	122
   241  101F  3444               	retlw	68
   242  1020  3400               	retlw	0
   243  1021  3440               	retlw	64
   244  1022  341C               	retlw	28
   245  1023  3446               	retlw	70
   246  1024  3400               	retlw	0
   247  1025  3450               	retlw	80
   248  1026  34C3               	retlw	195
   249  1027  3447               	retlw	71
   250  1028  3400               	retlw	0
   251  1029  3424               	retlw	36
   252  102A  3474               	retlw	116
   253  102B  3449               	retlw	73
   254  102C  3480               	retlw	128
   255  102D  3496               	retlw	150
   256  102E  3418               	retlw	24
   257  102F  344B               	retlw	75
   258  1030  3420               	retlw	32
   259  1031  34BC               	retlw	188
   260  1032  34BE               	retlw	190
   261  1033  344C               	retlw	76
   262  1034  3428               	retlw	40
   263  1035  346B               	retlw	107
   264  1036  346E               	retlw	110
   265  1037  344E               	retlw	78
   266  1038  34F9               	retlw	249
   267  1039  3402               	retlw	2
   268  103A  3415               	retlw	21
   269  103B  3450               	retlw	80
   270  103C  34EC               	retlw	236
   271  103D  3478               	retlw	120
   272  103E  34AD               	retlw	173
   273  103F  3460               	retlw	96
   274  1040  34CA               	retlw	202
   275  1041  34F2               	retlw	242
   276  1042  3449               	retlw	73
   277  1043  3471               	retlw	113
   278  1044                     __end_of__powers_:	
   279  1044                     __npowers_:	
   280  1044  3400               	retlw	0
   281  1045  3400               	retlw	0
   282  1046  3480               	retlw	128
   283  1047  343F               	retlw	63
   284  1048  34CD               	retlw	205
   285  1049  34CC               	retlw	204
   286  104A  34CC               	retlw	204
   287  104B  343D               	retlw	61
   288  104C  340A               	retlw	10
   289  104D  34D7               	retlw	215
   290  104E  3423               	retlw	35
   291  104F  343C               	retlw	60
   292  1050  346F               	retlw	111
   293  1051  3412               	retlw	18
   294  1052  3483               	retlw	131
   295  1053  343A               	retlw	58
   296  1054  3417               	retlw	23
   297  1055  34B7               	retlw	183
   298  1056  34D1               	retlw	209
   299  1057  3438               	retlw	56
   300  1058  34AC               	retlw	172
   301  1059  34C5               	retlw	197
   302  105A  3427               	retlw	39
   303  105B  3437               	retlw	55
   304  105C  34BD               	retlw	189
   305  105D  3437               	retlw	55
   306  105E  3486               	retlw	134
   307  105F  3435               	retlw	53
   308  1060  3495               	retlw	149
   309  1061  34BF               	retlw	191
   310  1062  34D6               	retlw	214
   311  1063  3433               	retlw	51
   312  1064  3477               	retlw	119
   313  1065  34CC               	retlw	204
   314  1066  342B               	retlw	43
   315  1067  3432               	retlw	50
   316  1068  345F               	retlw	95
   317  1069  3470               	retlw	112
   318  106A  3489               	retlw	137
   319  106B  3430               	retlw	48
   320  106C  34FF               	retlw	255
   321  106D  34E6               	retlw	230
   322  106E  34DB               	retlw	219
   323  106F  342E               	retlw	46
   324  1070  3408               	retlw	8
   325  1071  34E5               	retlw	229
   326  1072  343C               	retlw	60
   327  1073  341E               	retlw	30
   328  1074  3460               	retlw	96
   329  1075  3442               	retlw	66
   330  1076  34A2               	retlw	162
   331  1077  340D               	retlw	13
   332  1078                     __end_of__npowers_:	
   333  1078                     _dpowers:	
   334  1078  3401               	retlw	1
   335  1079  3400               	retlw	0
   336  107A  3400               	retlw	0
   337  107B  3400               	retlw	0
   338  107C  340A               	retlw	10
   339  107D  3400               	retlw	0
   340  107E  3400               	retlw	0
   341  107F  3400               	retlw	0
   342  1080  3464               	retlw	100
   343  1081  3400               	retlw	0
   344  1082  3400               	retlw	0
   345  1083  3400               	retlw	0
   346  1084  34E8               	retlw	232
   347  1085  3403               	retlw	3
   348  1086  3400               	retlw	0
   349  1087  3400               	retlw	0
   350  1088  3410               	retlw	16
   351  1089  3427               	retlw	39
   352  108A  3400               	retlw	0
   353  108B  3400               	retlw	0
   354  108C  34A0               	retlw	160
   355  108D  3486               	retlw	134
   356  108E  3401               	retlw	1
   357  108F  3400               	retlw	0
   358  1090  3440               	retlw	64
   359  1091  3442               	retlw	66
   360  1092  340F               	retlw	15
   361  1093  3400               	retlw	0
   362  1094  3480               	retlw	128
   363  1095  3496               	retlw	150
   364  1096  3498               	retlw	152
   365  1097  3400               	retlw	0
   366  1098  3400               	retlw	0
   367  1099  34E1               	retlw	225
   368  109A  34F5               	retlw	245
   369  109B  3405               	retlw	5
   370  109C  3400               	retlw	0
   371  109D  34CA               	retlw	202
   372  109E  349A               	retlw	154
   373  109F  343B               	retlw	59
   374  10A0                     __end_of_dpowers:	
   375  0005                     _PORTA	set	5
   376  001E                     _ADRESH	set	30
   377  001F                     _ADCON0bits	set	31
   378  0006                     _PORTB	set	6
   379  0033                     _RB3	set	51
   380  0032                     _RB2	set	50
   381  0037                     _RB7	set	55
   382  0036                     _RB6	set	54
   383  0035                     _RB5	set	53
   384  0034                     _RB4	set	52
   385  0085                     _TRISA	set	133
   386  009E                     _ADRESL	set	158
   387  009F                     _ADCON1bits	set	159
   388  0086                     _TRISB	set	134
   389  10A0                     STR_2:	
   390  10A0  3443               	retlw	67	;'C'
   391  10A1  3461               	retlw	97	;'a'
   392  10A2  3472               	retlw	114	;'r'
   393  10A3  3467               	retlw	103	;'g'
   394  10A4  3461               	retlw	97	;'a'
   395  10A5  346E               	retlw	110	;'n'
   396  10A6  3464               	retlw	100	;'d'
   397  10A7  346F               	retlw	111	;'o'
   398  10A8  342E               	retlw	46	;'.'
   399  10A9  342E               	retlw	46	;'.'
   400  10AA  342E               	retlw	46	;'.'
   401  10AB  3400               	retlw	0
   402  10AC                     STR_1:	
   403  10AC  3456               	retlw	86	;'V'
   404  10AD  346F               	retlw	111	;'o'
   405  10AE  346C               	retlw	108	;'l'
   406  10AF  3474               	retlw	116	;'t'
   407  10B0  3469               	retlw	105	;'i'
   408  10B1  346D               	retlw	109	;'m'
   409  10B2  3465               	retlw	101	;'e'
   410  10B3  3474               	retlw	116	;'t'
   411  10B4  3472               	retlw	114	;'r'
   412  10B5  346F               	retlw	111	;'o'
   413  10B6  3400               	retlw	0
   414  10B7                     STR_4:	
   415  10B7  3443               	retlw	67	;'C'
   416  10B8  3442               	retlw	66	;'B'
   417  10B9  3454               	retlw	84	;'T'
   418  10BA  3449               	retlw	73	;'I'
   419  10BB  3453               	retlw	83	;'S'
   420  10BC  3420               	retlw	32	;' '
   421  10BD  3438               	retlw	56	;'8'
   422  10BE  3435               	retlw	53	;'5'
   423  10BF  3400               	retlw	0
   424  10C0                     STR_3:	
   425  10C0  3456               	retlw	86	;'V'
   426  10C1  346F               	retlw	111	;'o'
   427  10C2  346C               	retlw	108	;'l'
   428  10C3  3474               	retlw	116	;'t'
   429  10C4  3461               	retlw	97	;'a'
   430  10C5  346A               	retlw	106	;'j'
   431  10C6  3465               	retlw	101	;'e'
   432  10C7  3400               	retlw	0
   433  10C8                     STR_5:	
   434  10C8  344D               	retlw	77	;'M'
   435  10C9  3449               	retlw	73	;'I'
   436  10CA  3443               	retlw	67	;'C'
   437  10CB  3452               	retlw	82	;'R'
   438  10CC  344F               	retlw	79	;'O'
   439  10CD  3400               	retlw	0
   440  10CE                     STR_6:	
   441  10CE  3425               	retlw	37	;'%'
   442  10CF  342E               	retlw	46	;'.'
   443  10D0  3436               	retlw	54	;'6'
   444  10D1  3466               	retlw	102	;'f'
   445  10D2  3456               	retlw	86	;'V'
   446  10D3  3400               	retlw	0
   447                           
   448                           ; #config settings
   449  0000                     
   450                           	psect	cinit
   451  07FC                     start_initialization:	
   452  07FC                     __initialization:	
   453  07FC                     end_of_initialization:	
   454                           ;End of C runtime variable initialization code
   455                           
   456  07FC                     __end_of__initialization:	
   457  07FC  0183               	clrf	3
   458  07FD  120A  158A  288D   	ljmp	_main	;jump to C main() function
   459                           
   460                           	psect	cstackBANK1
   461  00A0                     __pcstackBANK1:	
   462  00A0                     ?_sprintf:	
   463  00A0                     sprintf@f:	
   464                           ; 2 bytes @ 0x0
   465                           
   466                           
   467                           ; 1 bytes @ 0x0
   468  00A0                     	ds	5
   469  00A5                     ??_sprintf:	
   470                           
   471                           ; 1 bytes @ 0x5
   472  00A5                     	ds	5
   473  00AA                     _sprintf$876:	
   474                           
   475                           ; 4 bytes @ 0xA
   476  00AA                     	ds	4
   477  00AE                     sprintf@ap:	
   478                           
   479                           ; 1 bytes @ 0xE
   480  00AE                     	ds	1
   481  00AF                     sprintf@flag:	
   482                           
   483                           ; 2 bytes @ 0xF
   484  00AF                     	ds	2
   485  00B1                     sprintf@val:	
   486                           
   487                           ; 4 bytes @ 0x11
   488  00B1                     	ds	4
   489  00B5                     sprintf@eexp:	
   490                           
   491                           ; 2 bytes @ 0x15
   492  00B5                     	ds	2
   493  00B7                     sprintf@tmpval:	
   494                           
   495                           ; 4 bytes @ 0x17
   496  00B7                     	ds	4
   497  00BB                     sprintf@sp:	
   498                           
   499                           ; 1 bytes @ 0x1B
   500  00BB                     	ds	1
   501  00BC                     sprintf@prec:	
   502                           
   503                           ; 2 bytes @ 0x1C
   504  00BC                     	ds	2
   505  00BE                     sprintf@fval:	
   506                           
   507                           ; 4 bytes @ 0x1E
   508  00BE                     	ds	4
   509  00C2                     sprintf@c:	
   510                           
   511                           ; 1 bytes @ 0x22
   512  00C2                     	ds	1
   513  00C3                     ??_main:	
   514                           
   515                           ; 1 bytes @ 0x23
   516  00C3                     	ds	3
   517  00C6                     main@mensaje:	
   518                           
   519                           ; 16 bytes @ 0x26
   520  00C6                     	ds	16
   521  00D6                     main@volt:	
   522                           
   523                           ; 4 bytes @ 0x36
   524  00D6                     	ds	4
   525                           
   526                           	psect	cstackCOMMON
   527  0070                     __pcstackCOMMON:	
   528  0070                     ?_isdigit:	
   529  0070                     ?___fleq:	
   530                           ; 1 bit 
   531                           
   532  0070                     ?___flge:	
   533                           ; 1 bit 
   534                           
   535  0070                     ??_isdigit:	
   536                           ; 1 bit 
   537                           
   538  0070                     ?_lcdPort:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ??_lcdPort:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_lcdCmd:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_lcdClear:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_lcdInit:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_lcdWriteChar:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_adcInit:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ??_adcInit:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_main:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?__Umul8_16:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_adcRead:	
   569                           ; 2 bytes @ 0x0
   570                           
   571  0070                     ?___wmul:	
   572                           ; 2 bytes @ 0x0
   573                           
   574  0070                     ?___awmod:	
   575                           ; 2 bytes @ 0x0
   576                           
   577  0070                     ?___lwmod:	
   578                           ; 2 bytes @ 0x0
   579                           
   580  0070                     ?__tdiv_to_l_:	
   581                           ; 2 bytes @ 0x0
   582                           
   583  0070                     ?__div_to_l_:	
   584                           ; 4 bytes @ 0x0
   585                           
   586  0070                     ?___lldiv:	
   587                           ; 4 bytes @ 0x0
   588                           
   589  0070                     ?___flneg:	
   590                           ; 4 bytes @ 0x0
   591                           
   592  0070                     ?___llmod:	
   593                           ; 4 bytes @ 0x0
   594                           
   595  0070                     lcdPort@a:	
   596                           ; 4 bytes @ 0x0
   597                           
   598  0070                     _isdigit$684:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     __Umul8_16@multiplicand:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     adcRead@adcChannel:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ___wmul@multiplier:	
   608                           ; 2 bytes @ 0x0
   609                           
   610  0070                     ___awmod@divisor:	
   611                           ; 2 bytes @ 0x0
   612                           
   613  0070                     ___lwmod@divisor:	
   614                           ; 2 bytes @ 0x0
   615                           
   616  0070                     ___lldiv@divisor:	
   617                           ; 2 bytes @ 0x0
   618                           
   619  0070                     __div_to_l_@f1:	
   620                           ; 4 bytes @ 0x0
   621                           
   622  0070                     ___fleq@ff1:	
   623                           ; 4 bytes @ 0x0
   624                           
   625  0070                     ___flge@ff1:	
   626                           ; 4 bytes @ 0x0
   627                           
   628  0070                     ___flneg@f1:	
   629                           ; 4 bytes @ 0x0
   630                           
   631  0070                     __tdiv_to_l_@f1:	
   632                           ; 4 bytes @ 0x0
   633                           
   634  0070                     ___llmod@divisor:	
   635                           ; 4 bytes @ 0x0
   636                           
   637                           
   638                           ; 4 bytes @ 0x0
   639  0070                     	ds	1
   640  0071                     ??_lcdCmd:	
   641  0071                     ??_lcdWriteChar:	
   642                           ; 1 bytes @ 0x1
   643                           
   644  0071                     isdigit@c:	
   645                           ; 1 bytes @ 0x1
   646                           
   647                           
   648                           ; 1 bytes @ 0x1
   649  0071                     	ds	1
   650  0072                     ??__Umul8_16:	
   651  0072                     ??_adcRead:	
   652                           ; 1 bytes @ 0x2
   653                           
   654  0072                     lcdWriteChar@temp:	
   655                           ; 1 bytes @ 0x2
   656                           
   657  0072                     ___wmul@multiplicand:	
   658                           ; 1 bytes @ 0x2
   659                           
   660  0072                     ___awmod@dividend:	
   661                           ; 2 bytes @ 0x2
   662                           
   663  0072                     ___lwmod@dividend:	
   664                           ; 2 bytes @ 0x2
   665                           
   666                           
   667                           ; 2 bytes @ 0x2
   668  0072                     	ds	1
   669  0073                     lcdCmd@a:	
   670  0073                     lcdWriteChar@y:	
   671                           ; 1 bytes @ 0x3
   672                           
   673                           
   674                           ; 1 bytes @ 0x3
   675  0073                     	ds	1
   676  0074                     ??_lcdClear:	
   677  0074                     ?_lcdSetCursor:	
   678                           ; 1 bytes @ 0x4
   679                           
   680  0074                     ??_lcdInit:	
   681                           ; 1 bytes @ 0x4
   682                           
   683  0074                     ??___wmul:	
   684                           ; 1 bytes @ 0x4
   685                           
   686  0074                     ??___awmod:	
   687                           ; 1 bytes @ 0x4
   688                           
   689  0074                     ??___flneg:	
   690                           ; 1 bytes @ 0x4
   691                           
   692  0074                     ??___lwmod:	
   693                           ; 1 bytes @ 0x4
   694                           
   695  0074                     ?___xxtofl:	
   696                           ; 1 bytes @ 0x4
   697                           
   698  0074                     lcdSetCursor@x:	
   699                           ; 4 bytes @ 0x4
   700                           
   701  0074                     lcdWriteChar@a:	
   702                           ; 1 bytes @ 0x4
   703                           
   704  0074                     ___wmul@product:	
   705                           ; 1 bytes @ 0x4
   706                           
   707  0074                     __Umul8_16@product:	
   708                           ; 2 bytes @ 0x4
   709                           
   710  0074                     ___lldiv@dividend:	
   711                           ; 2 bytes @ 0x4
   712                           
   713  0074                     __div_to_l_@f2:	
   714                           ; 4 bytes @ 0x4
   715                           
   716  0074                     ___fleq@ff2:	
   717                           ; 4 bytes @ 0x4
   718                           
   719  0074                     ___flge@ff2:	
   720                           ; 4 bytes @ 0x4
   721                           
   722  0074                     __tdiv_to_l_@f2:	
   723                           ; 4 bytes @ 0x4
   724                           
   725  0074                     ___llmod@dividend:	
   726                           ; 4 bytes @ 0x4
   727                           
   728  0074                     ___xxtofl@val:	
   729                           ; 4 bytes @ 0x4
   730                           
   731                           
   732                           ; 4 bytes @ 0x4
   733  0074                     	ds	1
   734  0075                     ??_lcdSetCursor:	
   735  0075                     ?_lcdPrint:	
   736                           ; 1 bytes @ 0x5
   737                           
   738  0075                     ___awmod@counter:	
   739                           ; 1 bytes @ 0x5
   740                           
   741  0075                     ___lwmod@counter:	
   742                           ; 1 bytes @ 0x5
   743                           
   744  0075                     lcdPrint@a:	
   745                           ; 1 bytes @ 0x5
   746                           
   747                           
   748                           ; 2 bytes @ 0x5
   749  0075                     	ds	1
   750  0076                     ?___lwdiv:	
   751  0076                     ___awmod@sign:	
   752                           ; 2 bytes @ 0x6
   753                           
   754  0076                     ___lwdiv@divisor:	
   755                           ; 1 bytes @ 0x6
   756                           
   757  0076                     __Umul8_16@word_mpld:	
   758                           ; 2 bytes @ 0x6
   759                           
   760                           
   761                           ; 2 bytes @ 0x6
   762  0076                     	ds	1
   763  0077                     ??_lcdPrint:	
   764  0077                     ?___awdiv:	
   765                           ; 1 bytes @ 0x7
   766                           
   767  0077                     lcdSetCursor@z:	
   768                           ; 2 bytes @ 0x7
   769                           
   770  0077                     ___awdiv@divisor:	
   771                           ; 1 bytes @ 0x7
   772                           
   773                           
   774                           ; 2 bytes @ 0x7
   775  0077                     	ds	1
   776  0078                     ??__tdiv_to_l_:	
   777  0078                     ??__div_to_l_:	
   778                           ; 1 bytes @ 0x8
   779                           
   780  0078                     ??___lldiv:	
   781                           ; 1 bytes @ 0x8
   782                           
   783  0078                     ??___fleq:	
   784                           ; 1 bytes @ 0x8
   785                           
   786  0078                     ??___flge:	
   787                           ; 1 bytes @ 0x8
   788                           
   789  0078                     ??___llmod:	
   790                           ; 1 bytes @ 0x8
   791                           
   792  0078                     ??___xxtofl:	
   793                           ; 1 bytes @ 0x8
   794                           
   795  0078                     lcdSetCursor@yy:	
   796                           ; 1 bytes @ 0x8
   797                           
   798  0078                     __Umul8_16@multiplier:	
   799                           ; 1 bytes @ 0x8
   800                           
   801  0078                     ___lwdiv@dividend:	
   802                           ; 1 bytes @ 0x8
   803                           
   804                           
   805                           ; 2 bytes @ 0x8
   806  0078                     	ds	1
   807  0079                     lcdSetCursor@row:	
   808  0079                     ___llmod@counter:	
   809                           ; 1 bytes @ 0x9
   810                           
   811  0079                     ___awdiv@dividend:	
   812                           ; 1 bytes @ 0x9
   813                           
   814  0079                     ___lldiv@quotient:	
   815                           ; 2 bytes @ 0x9
   816                           
   817                           
   818                           ; 4 bytes @ 0x9
   819  0079                     	ds	1
   820  007A                     ??___lwdiv:	
   821  007A                     lcdSetCursor@temp:	
   822                           ; 1 bytes @ 0xA
   823                           
   824  007A                     lcdPrint@i:	
   825                           ; 1 bytes @ 0xA
   826                           
   827                           
   828                           ; 2 bytes @ 0xA
   829  007A                     	ds	1
   830  007B                     ??___awdiv:	
   831  007B                     lcdSetCursor@y:	
   832                           ; 1 bytes @ 0xB
   833                           
   834  007B                     ___lwdiv@quotient:	
   835                           ; 1 bytes @ 0xB
   836                           
   837                           
   838                           ; 2 bytes @ 0xB
   839  007B                     	ds	2
   840  007D                     ___lldiv@counter:	
   841  007D                     ___lwdiv@counter:	
   842                           ; 1 bytes @ 0xD
   843                           
   844                           
   845                           ; 1 bytes @ 0xD
   846  007D                     	ds	1
   847  007E                     ??___flsub:	
   848                           
   849                           	psect	cstackBANK0
   850  0020                     __pcstackBANK0:	
   851                           ; 1 bytes @ 0xE
   852                           
   853  0020                     ___awdiv@counter:	
   854  0020                     ___xxtofl@sign:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0020                     __div_to_l_@quot:	
   858                           ; 1 bytes @ 0x0
   859                           
   860  0020                     __tdiv_to_l_@quot:	
   861                           ; 4 bytes @ 0x0
   862                           
   863                           
   864                           ; 4 bytes @ 0x0
   865  0020                     	ds	1
   866  0021                     ___awdiv@sign:	
   867  0021                     ___xxtofl@exp:	
   868                           ; 1 bytes @ 0x1
   869                           
   870                           
   871                           ; 1 bytes @ 0x1
   872  0021                     	ds	1
   873  0022                     ___awdiv@quotient:	
   874  0022                     ___xxtofl@arg:	
   875                           ; 2 bytes @ 0x2
   876                           
   877                           
   878                           ; 4 bytes @ 0x2
   879  0022                     	ds	2
   880  0024                     __div_to_l_@cntr:	
   881  0024                     __tdiv_to_l_@cntr:	
   882                           ; 1 bytes @ 0x4
   883                           
   884                           
   885                           ; 1 bytes @ 0x4
   886  0024                     	ds	1
   887  0025                     __div_to_l_@exp1:	
   888  0025                     __tdiv_to_l_@exp1:	
   889                           ; 1 bytes @ 0x5
   890                           
   891                           
   892                           ; 1 bytes @ 0x5
   893  0025                     	ds	1
   894  0026                     ?___flmul:	
   895  0026                     ___flmul@b:	
   896                           ; 4 bytes @ 0x6
   897                           
   898                           
   899                           ; 4 bytes @ 0x6
   900  0026                     	ds	4
   901  002A                     ___flmul@a:	
   902                           
   903                           ; 4 bytes @ 0xA
   904  002A                     	ds	4
   905  002E                     ??___flmul:	
   906                           
   907                           ; 1 bytes @ 0xE
   908  002E                     	ds	5
   909  0033                     ___flmul@sign:	
   910                           
   911                           ; 1 bytes @ 0x13
   912  0033                     	ds	1
   913  0034                     ___flmul@grs:	
   914                           
   915                           ; 4 bytes @ 0x14
   916  0034                     	ds	4
   917  0038                     ___flmul@aexp:	
   918                           
   919                           ; 1 bytes @ 0x18
   920  0038                     	ds	1
   921  0039                     ___flmul@bexp:	
   922                           
   923                           ; 1 bytes @ 0x19
   924  0039                     	ds	1
   925  003A                     ___flmul@prod:	
   926                           
   927                           ; 4 bytes @ 0x1A
   928  003A                     	ds	4
   929  003E                     ___flmul@temp:	
   930                           
   931                           ; 2 bytes @ 0x1E
   932  003E                     	ds	2
   933  0040                     ?_fround:	
   934  0040                     ?_scale:	
   935                           ; 4 bytes @ 0x20
   936                           
   937  0040                     ?___fldiv:	
   938                           ; 4 bytes @ 0x20
   939                           
   940  0040                     ___fldiv@a:	
   941                           ; 4 bytes @ 0x20
   942                           
   943                           
   944                           ; 4 bytes @ 0x20
   945  0040                     	ds	4
   946  0044                     ??_fround:	
   947  0044                     ??_scale:	
   948                           ; 1 bytes @ 0x24
   949                           
   950  0044                     ___fldiv@b:	
   951                           ; 1 bytes @ 0x24
   952                           
   953                           
   954                           ; 4 bytes @ 0x24
   955  0044                     	ds	4
   956  0048                     ??___fldiv:	
   957                           
   958                           ; 1 bytes @ 0x28
   959  0048                     	ds	3
   960  004B                     _fround$874:	
   961                           
   962                           ; 4 bytes @ 0x2B
   963  004B                     	ds	2
   964  004D                     ___fldiv@rem:	
   965                           
   966                           ; 4 bytes @ 0x2D
   967  004D                     	ds	1
   968  004E                     _scale$875:	
   969                           
   970                           ; 4 bytes @ 0x2E
   971  004E                     	ds	1
   972  004F                     _fround$873:	
   973                           
   974                           ; 4 bytes @ 0x2F
   975  004F                     	ds	2
   976  0051                     ___fldiv@sign:	
   977                           
   978                           ; 1 bytes @ 0x31
   979  0051                     	ds	1
   980  0052                     scale@scl:	
   981  0052                     ___fldiv@new_exp:	
   982                           ; 1 bytes @ 0x32
   983                           
   984                           
   985                           ; 2 bytes @ 0x32
   986  0052                     	ds	1
   987  0053                     ?___fltol:	
   988  0053                     fround@prec:	
   989                           ; 4 bytes @ 0x33
   990                           
   991  0053                     ___fltol@f1:	
   992                           ; 1 bytes @ 0x33
   993                           
   994                           
   995                           ; 4 bytes @ 0x33
   996  0053                     	ds	1
   997  0054                     ?___fladd:	
   998  0054                     ___fladd@b:	
   999                           ; 4 bytes @ 0x34
  1000                           
  1001  0054                     ___fldiv@grs:	
  1002                           ; 4 bytes @ 0x34
  1003                           
  1004                           
  1005                           ; 4 bytes @ 0x34
  1006  0054                     	ds	3
  1007  0057                     ??___fltol:	
  1008                           
  1009                           ; 1 bytes @ 0x37
  1010  0057                     	ds	1
  1011  0058                     ___fldiv@bexp:	
  1012  0058                     ___fladd@a:	
  1013                           ; 1 bytes @ 0x38
  1014                           
  1015                           
  1016                           ; 4 bytes @ 0x38
  1017  0058                     	ds	1
  1018  0059                     ___fldiv@aexp:	
  1019                           
  1020                           ; 1 bytes @ 0x39
  1021  0059                     	ds	3
  1022  005C                     ??___fladd:	
  1023  005C                     ___fltol@sign1:	
  1024                           ; 1 bytes @ 0x3C
  1025                           
  1026                           
  1027                           ; 1 bytes @ 0x3C
  1028  005C                     	ds	1
  1029  005D                     ___fltol@exp1:	
  1030                           
  1031                           ; 1 bytes @ 0x3D
  1032  005D                     	ds	7
  1033  0064                     ___fladd@signs:	
  1034                           
  1035                           ; 1 bytes @ 0x44
  1036  0064                     	ds	1
  1037  0065                     ___fladd@aexp:	
  1038                           
  1039                           ; 1 bytes @ 0x45
  1040  0065                     	ds	1
  1041  0066                     ___fladd@bexp:	
  1042                           
  1043                           ; 1 bytes @ 0x46
  1044  0066                     	ds	1
  1045  0067                     ___fladd@grs:	
  1046                           
  1047                           ; 1 bytes @ 0x47
  1048  0067                     	ds	1
  1049  0068                     ?___flsub:	
  1050  0068                     ___flsub@a:	
  1051                           ; 4 bytes @ 0x48
  1052                           
  1053                           
  1054                           ; 4 bytes @ 0x48
  1055  0068                     	ds	4
  1056  006C                     ___flsub@b:	
  1057                           
  1058                           ; 4 bytes @ 0x4C
  1059  006C                     	ds	4
  1060                           
  1061                           	psect	maintext
  1062  088D                     __pmaintext:	
  1063 ;;
  1064 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1065 ;;
  1066 ;; *************** function _main *****************
  1067 ;; Defined at:
  1068 ;;		line 18 in file "main.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;		None
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;  mensaje        16   38[BANK1 ] unsigned char [16]
  1073 ;;  volt            4   54[BANK1 ] float 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1078 ;; Tracked objects:
  1079 ;;		On entry : B00/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1083 ;;      Params:         0       0       0       0       0
  1084 ;;      Locals:         0       0      20       0       0
  1085 ;;      Temps:          0       0       3       0       0
  1086 ;;      Totals:         0       0      23       0       0
  1087 ;;Total ram usage:       23 bytes
  1088 ;; Hardware stack levels required when called:    4
  1089 ;; This function calls:
  1090 ;;		___fldiv
  1091 ;;		___flmul
  1092 ;;		___xxtofl
  1093 ;;		_adcInit
  1094 ;;		_adcRead
  1095 ;;		_lcdClear
  1096 ;;		_lcdInit
  1097 ;;		_lcdPrint
  1098 ;;		_lcdSetCursor
  1099 ;;		_sprintf
  1100 ;; This function is called by:
  1101 ;;		Startup code after reset
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           
  1106                           ;psect for function _main
  1107  088D                     _main:	
  1108                           
  1109                           ;main.c: 19:     TRISA = 255;
  1110                           
  1111                           ;incstack = 0
  1112                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1113  088D  30FF               	movlw	255
  1114  088E  1683               	bsf	3,5	;RP0=1, select bank1
  1115  088F  1303               	bcf	3,6	;RP1=0, select bank1
  1116  0890  0085               	movwf	5	;volatile
  1117                           
  1118                           ;main.c: 20:     PORTA = 0;
  1119  0891  1283               	bcf	3,5	;RP0=0, select bank0
  1120  0892  1303               	bcf	3,6	;RP1=0, select bank0
  1121  0893  0185               	clrf	5	;volatile
  1122                           
  1123                           ;main.c: 21:     lcdInit();
  1124  0894  160A  118A  2142  120A  158A  	fcall	_lcdInit
  1125                           
  1126                           ;main.c: 22:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1127  0899  300D               	movlw	13
  1128  089A  1683               	bsf	3,5	;RP0=1, select bank1
  1129  089B  1303               	bcf	3,6	;RP1=0, select bank1
  1130  089C  00C4               	movwf	(??_main^(0+128)+1)
  1131  089D  30FB               	movlw	251
  1132  089E  00C3               	movwf	??_main^(0+128)
  1133  089F                     u6017:	
  1134  089F  0BC3               	decfsz	??_main^(0+128),f
  1135  08A0  289F               	goto	u6017
  1136  08A1  0BC4               	decfsz	(??_main^(0+128)+1),f
  1137  08A2  289F               	goto	u6017
  1138                           
  1139                           ;main.c: 23:     lcdClear();
  1140  08A3  160A  158A  24EE  120A  158A  	fcall	_lcdClear
  1141                           
  1142                           ;main.c: 25:     adcInit();
  1143  08A8  160A  118A  20D4  120A  158A  	fcall	_adcInit
  1144                           
  1145                           ;main.c: 26:     lcdSetCursor(1, 1);
  1146  08AD  01F4               	clrf	lcdSetCursor@x
  1147  08AE  0AF4               	incf	lcdSetCursor@x,f
  1148  08AF  3001               	movlw	1
  1149  08B0  160A  158A  2612  120A  158A  	fcall	_lcdSetCursor
  1150                           
  1151                           ;main.c: 27:     lcdPrint("Voltimetro");
  1152  08B5  309D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1153  08B6  00F5               	movwf	lcdPrint@a
  1154  08B7  3080               	movlw	128
  1155  08B8  00F6               	movwf	lcdPrint@a+1
  1156  08B9  160A  158A  2689  120A  158A  	fcall	_lcdPrint
  1157                           
  1158                           ;main.c: 28:     lcdSetCursor(2, 1);
  1159  08BE  01F4               	clrf	lcdSetCursor@x
  1160  08BF  0AF4               	incf	lcdSetCursor@x,f
  1161  08C0  3002               	movlw	2
  1162  08C1  160A  158A  2612  120A  158A  	fcall	_lcdSetCursor
  1163                           
  1164                           ;main.c: 29:     lcdPrint("Cargando...");
  1165  08C6  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1166  08C7  00F5               	movwf	lcdPrint@a
  1167  08C8  3080               	movlw	128
  1168  08C9  00F6               	movwf	lcdPrint@a+1
  1169  08CA  160A  158A  2689  120A  158A  	fcall	_lcdPrint
  1170                           
  1171                           ;main.c: 30:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1172  08CF  3003               	movlw	3
  1173  08D0  1683               	bsf	3,5	;RP0=1, select bank1
  1174  08D1  1303               	bcf	3,6	;RP1=0, select bank1
  1175  08D2  00C5               	movwf	(??_main^(0+128)+2)
  1176  08D3  308A               	movlw	138
  1177  08D4  00C4               	movwf	(??_main^(0+128)+1)
  1178  08D5  3055               	movlw	85
  1179  08D6  00C3               	movwf	??_main^(0+128)
  1180  08D7                     u6027:	
  1181  08D7  0BC3               	decfsz	??_main^(0+128),f
  1182  08D8  28D7               	goto	u6027
  1183  08D9  0BC4               	decfsz	(??_main^(0+128)+1),f
  1184  08DA  28D7               	goto	u6027
  1185  08DB  0BC5               	decfsz	(??_main^(0+128)+2),f
  1186  08DC  28D7               	goto	u6027
  1187                           
  1188                           ;main.c: 32:     lcdClear();
  1189  08DD  160A  158A  24EE  120A  158A  	fcall	_lcdClear
  1190                           
  1191                           ;main.c: 33:     lcdSetCursor(1, 1);
  1192  08E2  01F4               	clrf	lcdSetCursor@x
  1193  08E3  0AF4               	incf	lcdSetCursor@x,f
  1194  08E4  3001               	movlw	1
  1195  08E5  160A  158A  2612  120A  158A  	fcall	_lcdSetCursor
  1196                           
  1197                           ;main.c: 34:     lcdPrint("Voltaje");
  1198  08EA  30B1               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1199  08EB  00F5               	movwf	lcdPrint@a
  1200  08EC  3080               	movlw	128
  1201  08ED  00F6               	movwf	lcdPrint@a+1
  1202  08EE  160A  158A  2689  120A  158A  	fcall	_lcdPrint
  1203                           
  1204                           ;main.c: 36:     lcdSetCursor(3, 1);
  1205  08F3  01F4               	clrf	lcdSetCursor@x
  1206  08F4  0AF4               	incf	lcdSetCursor@x,f
  1207  08F5  3003               	movlw	3
  1208  08F6  160A  158A  2612  120A  158A  	fcall	_lcdSetCursor
  1209                           
  1210                           ;main.c: 37:     lcdPrint("CBTIS 85");
  1211  08FB  30A8               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1212  08FC  00F5               	movwf	lcdPrint@a
  1213  08FD  3080               	movlw	128
  1214  08FE  00F6               	movwf	lcdPrint@a+1
  1215  08FF  160A  158A  2689  120A  158A  	fcall	_lcdPrint
  1216                           
  1217                           ;main.c: 38:     lcdSetCursor(4, 1);
  1218  0904  01F4               	clrf	lcdSetCursor@x
  1219  0905  0AF4               	incf	lcdSetCursor@x,f
  1220  0906  3004               	movlw	4
  1221  0907  160A  158A  2612  120A  158A  	fcall	_lcdSetCursor
  1222                           
  1223                           ;main.c: 39:     lcdPrint("MICRO");
  1224  090C  30B9               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1225  090D  00F5               	movwf	lcdPrint@a
  1226  090E  3080               	movlw	128
  1227  090F  00F6               	movwf	lcdPrint@a+1
  1228  0910  160A  158A  2689  120A  158A  	fcall	_lcdPrint
  1229  0915                     l3561:	
  1230                           
  1231                           ;main.c: 42:         float volt = (5 * (float) adcRead(0)) / 1023;
  1232  0915  3044               	movlw	68
  1233  0916  1283               	bcf	3,5	;RP0=0, select bank0
  1234  0917  1303               	bcf	3,6	;RP1=0, select bank0
  1235  0918  00C3               	movwf	___fldiv@a+3
  1236  0919  307F               	movlw	127
  1237  091A  00C2               	movwf	___fldiv@a+2
  1238  091B  30C0               	movlw	192
  1239  091C  00C1               	movwf	___fldiv@a+1
  1240  091D  3000               	movlw	0
  1241  091E  00C0               	movwf	___fldiv@a
  1242  091F  3040               	movlw	64
  1243  0920  00A9               	movwf	___flmul@b+3
  1244  0921  30A0               	movlw	160
  1245  0922  00A8               	movwf	___flmul@b+2
  1246  0923  3000               	movlw	0
  1247  0924  00A7               	movwf	___flmul@b+1
  1248  0925  3000               	movlw	0
  1249  0926  00A6               	movwf	___flmul@b
  1250  0927  3000               	movlw	0
  1251  0928  00F0               	movwf	adcRead@adcChannel
  1252  0929  00F1               	movwf	adcRead@adcChannel+1
  1253  092A  160A  158A  2542  120A  158A  	fcall	_adcRead
  1254  092F  0870               	movf	?_adcRead,w
  1255  0930  00F4               	movwf	___xxtofl@val
  1256  0931  0871               	movf	?_adcRead+1,w
  1257  0932  00F5               	movwf	___xxtofl@val+1
  1258  0933  3000               	movlw	0
  1259  0934  1BF5               	btfsc	___xxtofl@val+1,7
  1260  0935  30FF               	movlw	255
  1261  0936  00F6               	movwf	___xxtofl@val+2
  1262  0937  00F7               	movwf	___xxtofl@val+3
  1263  0938  3001               	movlw	1
  1264  0939  160A  118A  2236  120A  158A  	fcall	___xxtofl
  1265  093E  0877               	movf	?___xxtofl+3,w
  1266  093F  1283               	bcf	3,5	;RP0=0, select bank0
  1267  0940  1303               	bcf	3,6	;RP1=0, select bank0
  1268  0941  00AD               	movwf	___flmul@a+3
  1269  0942  0876               	movf	?___xxtofl+2,w
  1270  0943  00AC               	movwf	___flmul@a+2
  1271  0944  0875               	movf	?___xxtofl+1,w
  1272  0945  00AB               	movwf	___flmul@a+1
  1273  0946  0874               	movf	?___xxtofl,w
  1274  0947  00AA               	movwf	___flmul@a
  1275  0948  120A  158A  21A2  120A  158A  	fcall	___flmul
  1276  094D  1283               	bcf	3,5	;RP0=0, select bank0
  1277  094E  1303               	bcf	3,6	;RP1=0, select bank0
  1278  094F  0829               	movf	?___flmul+3,w
  1279  0950  00C7               	movwf	___fldiv@b+3
  1280  0951  0828               	movf	?___flmul+2,w
  1281  0952  00C6               	movwf	___fldiv@b+2
  1282  0953  0827               	movf	?___flmul+1,w
  1283  0954  00C5               	movwf	___fldiv@b+1
  1284  0955  0826               	movf	?___flmul,w
  1285  0956  00C4               	movwf	___fldiv@b
  1286  0957  160A  118A  242E  120A  158A  	fcall	___fldiv
  1287  095C  1283               	bcf	3,5	;RP0=0, select bank0
  1288  095D  1303               	bcf	3,6	;RP1=0, select bank0
  1289  095E  0843               	movf	?___fldiv+3,w
  1290  095F  1683               	bsf	3,5	;RP0=1, select bank1
  1291  0960  1303               	bcf	3,6	;RP1=0, select bank1
  1292  0961  00D9               	movwf	(main@volt+3)^(0+128)
  1293  0962  1283               	bcf	3,5	;RP0=0, select bank0
  1294  0963  1303               	bcf	3,6	;RP1=0, select bank0
  1295  0964  0842               	movf	?___fldiv+2,w
  1296  0965  1683               	bsf	3,5	;RP0=1, select bank1
  1297  0966  1303               	bcf	3,6	;RP1=0, select bank1
  1298  0967  00D8               	movwf	(main@volt+2)^(0+128)
  1299  0968  1283               	bcf	3,5	;RP0=0, select bank0
  1300  0969  1303               	bcf	3,6	;RP1=0, select bank0
  1301  096A  0841               	movf	?___fldiv+1,w
  1302  096B  1683               	bsf	3,5	;RP0=1, select bank1
  1303  096C  1303               	bcf	3,6	;RP1=0, select bank1
  1304  096D  00D7               	movwf	(main@volt+1)^(0+128)
  1305  096E  1283               	bcf	3,5	;RP0=0, select bank0
  1306  096F  1303               	bcf	3,6	;RP1=0, select bank0
  1307  0970  0840               	movf	?___fldiv,w
  1308  0971  1683               	bsf	3,5	;RP0=1, select bank1
  1309  0972  1303               	bcf	3,6	;RP1=0, select bank1
  1310  0973  00D6               	movwf	main@volt^(0+128)
  1311                           
  1312                           ;main.c: 43:         char mensaje[16];;main.c: 44:         sprintf(mensaje, "%.6fV", vol
      +                          t);
  1313  0974  30BF               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1314  0975  00C3               	movwf	??_main^(0+128)
  1315  0976  0843               	movf	??_main^(0+128),w
  1316  0977  00A0               	movwf	sprintf@f^(0+128)
  1317  0978  0859               	movf	(main@volt+3)^(0+128),w
  1318  0979  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1319  097A  0858               	movf	(main@volt+2)^(0+128),w
  1320  097B  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1321  097C  0857               	movf	(main@volt+1)^(0+128),w
  1322  097D  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1323  097E  0856               	movf	main@volt^(0+128),w
  1324  097F  00A1               	movwf	(?_sprintf^(0+128)+1)
  1325  0980  30C6               	movlw	(low (main@mensaje| 0))& (0+255)
  1326  0981  120A  118A  2205  120A  158A  	fcall	_sprintf
  1327                           
  1328                           ;main.c: 45:         lcdSetCursor(2,1);
  1329  0986  01F4               	clrf	lcdSetCursor@x
  1330  0987  0AF4               	incf	lcdSetCursor@x,f
  1331  0988  3002               	movlw	2
  1332  0989  160A  158A  2612  120A  158A  	fcall	_lcdSetCursor
  1333                           
  1334                           ;main.c: 46:         lcdPrint(mensaje);
  1335  098E  30C6               	movlw	(low (main@mensaje| 0))& (0+255)
  1336  098F  00F5               	movwf	lcdPrint@a
  1337  0990  3000               	movlw	0
  1338  0991  00F6               	movwf	lcdPrint@a+1
  1339  0992  160A  158A  2689  120A  158A  	fcall	_lcdPrint
  1340                           
  1341                           ;main.c: 47:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1342  0997  300D               	movlw	13
  1343  0998  1683               	bsf	3,5	;RP0=1, select bank1
  1344  0999  1303               	bcf	3,6	;RP1=0, select bank1
  1345  099A  00C4               	movwf	(??_main^(0+128)+1)
  1346  099B  30FB               	movlw	251
  1347  099C  00C3               	movwf	??_main^(0+128)
  1348  099D                     u6037:	
  1349  099D  0BC3               	decfsz	??_main^(0+128),f
  1350  099E  299D               	goto	u6037
  1351  099F  0BC4               	decfsz	(??_main^(0+128)+1),f
  1352  09A0  299D               	goto	u6037
  1353                           
  1354                           ;main.c: 48:     }
  1355  09A1  2915               	goto	l3561
  1356  09A2                     __end_of_main:	
  1357                           
  1358                           	psect	text1
  1359  0205                     __ptext1:	
  1360 ;; *************** function _sprintf *****************
  1361 ;; Defined at:
  1362 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;  sp              1    wreg     PTR unsigned char 
  1365 ;;		 -> main@mensaje(16), 
  1366 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1367 ;;		 -> STR_6(6), 
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  1370 ;;		 -> main@mensaje(16), 
  1371 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  1372 ;;  tmpval          4   23[BANK1 ] struct .
  1373 ;;  val             4   17[BANK1 ] unsigned long 
  1374 ;;  prec            2   28[BANK1 ] int 
  1375 ;;  eexp            2   21[BANK1 ] int 
  1376 ;;  flag            2   15[BANK1 ] unsigned short 
  1377 ;;  cp              2    0        PTR const unsigned char 
  1378 ;;  len             2    0        unsigned int 
  1379 ;;  width           2    0        int 
  1380 ;;  c               1   34[BANK1 ] unsigned char 
  1381 ;;  ap              1   14[BANK1 ] PTR void [1]
  1382 ;;		 -> ?_sprintf(2), 
  1383 ;;  d               1    0        unsigned char 
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  2    0[BANK1 ] int 
  1386 ;; Registers used:
  1387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1393 ;;      Params:         0       0       5       0       0
  1394 ;;      Locals:         0       0      25       0       0
  1395 ;;      Temps:          0       0       5       0       0
  1396 ;;      Totals:         0       0      35       0       0
  1397 ;;Total ram usage:       35 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    3
  1400 ;; This function calls:
  1401 ;;		___awdiv
  1402 ;;		___fladd
  1403 ;;		___fleq
  1404 ;;		___flge
  1405 ;;		___flmul
  1406 ;;		___flneg
  1407 ;;		___flsub
  1408 ;;		___fltol
  1409 ;;		___lldiv
  1410 ;;		___llmod
  1411 ;;		___wmul
  1412 ;;		___xxtofl
  1413 ;;		__div_to_l_
  1414 ;;		__tdiv_to_l_
  1415 ;;		_fround
  1416 ;;		_isdigit
  1417 ;;		_scale
  1418 ;; This function is called by:
  1419 ;;		_main
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           
  1424                           ;psect for function _sprintf
  1425  0205                     _sprintf:	
  1426                           
  1427                           ;incstack = 0
  1428                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1429                           ;sprintf@sp stored from wreg
  1430  0205  1683               	bsf	3,5	;RP0=1, select bank1
  1431  0206  1303               	bcf	3,6	;RP1=0, select bank1
  1432  0207  00BB               	movwf	sprintf@sp^(0+128)
  1433                           
  1434                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 509:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c90\common\doprnt.c: 512:  int prec;
  1435  0208  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1436  0209  00A5               	movwf	??_sprintf^(0+128)
  1437  020A  0825               	movf	??_sprintf^(0+128),w
  1438  020B  00AE               	movwf	sprintf@ap^(0+128)
  1439  020C                     l3371:	
  1440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1441                           
  1442                           
  1443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1444  020C  3001               	movlw	1
  1445  020D  07A0               	addwf	sprintf@f^(0+128),f
  1446  020E  30FF               	movlw	-1
  1447  020F  0720               	addwf	sprintf@f^(0+128),w
  1448  0210  0084               	movwf	4
  1449  0211  160A  118A  200A  120A  118A  	fcall	stringdir
  1450  0216  00A5               	movwf	??_sprintf^(0+128)
  1451  0217  0825               	movf	??_sprintf^(0+128),w
  1452  0218  00C2               	movwf	sprintf@c^(0+128)
  1453  0219  0842               	movf	sprintf@c^(0+128),w
  1454  021A  1903               	btfsc	3,2
  1455  021B  2FF7               	goto	l3373
  1456                           
  1457                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  1458  021C  3025               	movlw	37
  1459  021D  0642               	xorwf	sprintf@c^(0+128),w
  1460  021E  1903               	btfsc	3,2
  1461  021F  2A22               	goto	l3187
  1462                           
  1463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  1464  0220  0842               	movf	sprintf@c^(0+128),w
  1465  0221  2FEC               	goto	L6
  1466  0222                     l3187:	
  1467                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  1468                           
  1469                           
  1470                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  1471  0222  01AF               	clrf	sprintf@flag^(0+128)
  1472  0223  01B0               	clrf	(sprintf@flag+1)^(0+128)
  1473                           
  1474                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 623:   if(*
      +                          f == '.') {
  1475  0224  0820               	movf	sprintf@f^(0+128),w
  1476  0225  0084               	movwf	4
  1477  0226  160A  118A  200A  120A  118A  	fcall	stringdir
  1478  022B  3A2E               	xorlw	46
  1479  022C  1D03               	skipz
  1480  022D  2A6F               	goto	l3203
  1481                           
  1482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 624:    fla
      +                          g |= 0x4000;
  1483  022E  1730               	bsf	(sprintf@flag^(0+128)+1),6
  1484                           
  1485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 625:    f++
      +                          ;
  1486  022F  3001               	movlw	1
  1487  0230  00A5               	movwf	??_sprintf^(0+128)
  1488  0231  0825               	movf	??_sprintf^(0+128),w
  1489  0232  07A0               	addwf	sprintf@f^(0+128),f
  1490                           
  1491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 639:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 640:     prec
      +                           = 0;
  1492  0233  01BC               	clrf	sprintf@prec^(0+128)
  1493  0234  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1494  0235                     l3201:	
  1495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     wh
      +                          ile(isdigit((unsigned)*f))
  1496                           
  1497                           
  1498                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     wh
      +                          ile(isdigit((unsigned)*f))
  1499  0235  0820               	movf	sprintf@f^(0+128),w
  1500  0236  0084               	movwf	4
  1501  0237  160A  118A  200A  120A  118A  	fcall	stringdir
  1502  023C  160A  158A  24F9  120A  118A  	fcall	_isdigit
  1503  0241  1C03               	btfss	3,0
  1504  0242  2A75               	goto	l3209
  1505                           
  1506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 642:      p
      +                          rec = prec*10 + *f++ - '0';
  1507  0243  1683               	bsf	3,5	;RP0=1, select bank1
  1508  0244  1303               	bcf	3,6	;RP1=0, select bank1
  1509  0245  083D               	movf	(sprintf@prec+1)^(0+128),w
  1510  0246  00F1               	movwf	___wmul@multiplier+1
  1511  0247  083C               	movf	sprintf@prec^(0+128),w
  1512  0248  00F0               	movwf	___wmul@multiplier
  1513  0249  300A               	movlw	10
  1514  024A  00F2               	movwf	___wmul@multiplicand
  1515  024B  3000               	movlw	0
  1516  024C  00F3               	movwf	___wmul@multiplicand+1
  1517  024D  160A  158A  2521  120A  118A  	fcall	___wmul
  1518  0252  1683               	bsf	3,5	;RP0=1, select bank1
  1519  0253  1303               	bcf	3,6	;RP1=0, select bank1
  1520  0254  0820               	movf	sprintf@f^(0+128),w
  1521  0255  0084               	movwf	4
  1522  0256  160A  118A  200A  120A  118A  	fcall	stringdir
  1523  025B  0770               	addwf	?___wmul,w
  1524  025C  00A5               	movwf	??_sprintf^(0+128)
  1525  025D  3000               	movlw	0
  1526  025E  1803               	skipnc
  1527  025F  3001               	movlw	1
  1528  0260  0771               	addwf	?___wmul+1,w
  1529  0261  00A6               	movwf	(??_sprintf+1)^(0+128)
  1530  0262  0825               	movf	??_sprintf^(0+128),w
  1531  0263  3ED0               	addlw	208
  1532  0264  00BC               	movwf	sprintf@prec^(0+128)
  1533  0265  0826               	movf	(??_sprintf+1)^(0+128),w
  1534  0266  1803               	skipnc
  1535  0267  3E01               	addlw	1
  1536  0268  3EFF               	addlw	255
  1537  0269  00BD               	movwf	(sprintf@prec+1)^(0+128)
  1538  026A  3001               	movlw	1
  1539  026B  00A5               	movwf	??_sprintf^(0+128)
  1540  026C  0825               	movf	??_sprintf^(0+128),w
  1541  026D  07A0               	addwf	sprintf@f^(0+128),f
  1542  026E  2A35               	goto	l3201
  1543  026F                     l3203:	
  1544                           
  1545                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 645:    pre
      +                          c = 0;
  1546  026F  01BC               	clrf	sprintf@prec^(0+128)
  1547  0270  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1548                           
  1549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 647:    fla
      +                          g |= 0x1000;
  1550  0271  1630               	bsf	(sprintf@flag^(0+128)+1),4
  1551  0272  2A75               	goto	l3209
  1552  0273                     l213:	
  1553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 681:   case
      +                           'f':
  1554                           
  1555                           
  1556                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 682:    fla
      +                          g |= 0x400;
  1557  0273  1530               	bsf	(sprintf@flag^(0+128)+1),2
  1558                           
  1559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 683:    bre
      +                          ak;
  1560  0274  2A91               	goto	l3211
  1561  0275                     l3209:	
  1562  0275  3001               	movlw	1
  1563  0276  1683               	bsf	3,5	;RP0=1, select bank1
  1564  0277  1303               	bcf	3,6	;RP1=0, select bank1
  1565  0278  07A0               	addwf	sprintf@f^(0+128),f
  1566  0279  30FF               	movlw	-1
  1567  027A  0720               	addwf	sprintf@f^(0+128),w
  1568  027B  0084               	movwf	4
  1569  027C  160A  118A  200A  120A  118A  	fcall	stringdir
  1570  0281  00C2               	movwf	sprintf@c^(0+128)
  1571  0282  00A5               	movwf	??_sprintf^(0+128)
  1572  0283  01A6               	clrf	(??_sprintf^(0+128)+1)
  1573                           
  1574                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1575                           ; Switch size 1, requested type "simple"
  1576                           ; Number of cases is 1, Range of values is 0 to 0
  1577                           ; switch strategies available:
  1578                           ; Name         Instructions Cycles
  1579                           ; simple_byte            4     3 (average)
  1580                           ; direct_byte           11     8 (fixed)
  1581                           ; jumptable            260     6 (fixed)
  1582                           ;	Chosen strategy is simple_byte
  1583  0284  0826               	movf	(??_sprintf+1)^(0+128),w
  1584  0285  3A00               	xorlw	0	; case 0
  1585  0286  1903               	skipnz
  1586  0287  2A89               	goto	l3601
  1587  0288  2A0C               	goto	l3371
  1588  0289                     l3601:	
  1589                           
  1590                           ; Switch size 1, requested type "simple"
  1591                           ; Number of cases is 2, Range of values is 0 to 102
  1592                           ; switch strategies available:
  1593                           ; Name         Instructions Cycles
  1594                           ; simple_byte            7     4 (average)
  1595                           ; jumptable            260     6 (fixed)
  1596                           ;	Chosen strategy is simple_byte
  1597  0289  0825               	movf	??_sprintf^(0+128),w
  1598  028A  3A00               	xorlw	0	; case 0
  1599  028B  1903               	skipnz
  1600  028C  2FF7               	goto	l3373
  1601  028D  3A66               	xorlw	102	; case 102
  1602  028E  1903               	skipnz
  1603  028F  2A73               	goto	l213
  1604  0290  2A0C               	goto	l3371
  1605  0291                     l3211:	
  1606                           
  1607                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 844:   if(f
      +                          lag & (0x700)) {
  1608  0291  3000               	movlw	0
  1609  0292  052F               	andwf	sprintf@flag^(0+128),w
  1610  0293  00A5               	movwf	??_sprintf^(0+128)
  1611  0294  3007               	movlw	7
  1612  0295  0530               	andwf	(sprintf@flag+1)^(0+128),w
  1613  0296  00A6               	movwf	(??_sprintf+1)^(0+128)
  1614  0297  0825               	movf	??_sprintf^(0+128),w
  1615  0298  0426               	iorwf	(??_sprintf^(0+128)+1),w
  1616  0299  1903               	btfsc	3,2
  1617  029A  2FB9               	goto	l3353
  1618                           
  1619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 846:    if(
      +                          flag & 0x1000)
  1620  029B  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  1621  029C  2AA1               	goto	l3217
  1622                           
  1623                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 848:     pr
      +                          ec = 6;
  1624  029D  3006               	movlw	6
  1625  029E  00BC               	movwf	sprintf@prec^(0+128)
  1626  029F  3000               	movlw	0
  1627  02A0  00BD               	movwf	(sprintf@prec^(0+128)+1)
  1628  02A1                     l3217:	
  1629                           
  1630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 849:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  1631  02A1  082E               	movf	sprintf@ap^(0+128),w
  1632  02A2  0084               	movwf	4
  1633  02A3  1383               	bcf	3,7	;select IRP bank0
  1634  02A4  0800               	movf	0,w
  1635  02A5  00BE               	movwf	sprintf@fval^(0+128)
  1636  02A6  0A84               	incf	4,f
  1637  02A7  0800               	movf	0,w
  1638  02A8  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1639  02A9  0A84               	incf	4,f
  1640  02AA  0800               	movf	0,w
  1641  02AB  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1642  02AC  0A84               	incf	4,f
  1643  02AD  0800               	movf	0,w
  1644  02AE  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1645  02AF  3004               	movlw	4
  1646  02B0  00A5               	movwf	??_sprintf^(0+128)
  1647  02B1  0825               	movf	??_sprintf^(0+128),w
  1648  02B2  07AE               	addwf	sprintf@ap^(0+128),f
  1649                           
  1650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 850:    if(
      +                          fval < 0.0) {
  1651  02B3  0841               	movf	(sprintf@fval+3)^(0+128),w
  1652  02B4  00F3               	movwf	___flge@ff1+3
  1653  02B5  0840               	movf	(sprintf@fval+2)^(0+128),w
  1654  02B6  00F2               	movwf	___flge@ff1+2
  1655  02B7  083F               	movf	(sprintf@fval+1)^(0+128),w
  1656  02B8  00F1               	movwf	___flge@ff1+1
  1657  02B9  083E               	movf	sprintf@fval^(0+128),w
  1658  02BA  00F0               	movwf	___flge@ff1
  1659  02BB  3000               	movlw	0
  1660  02BC  00F7               	movwf	___flge@ff2+3
  1661  02BD  3000               	movlw	0
  1662  02BE  00F6               	movwf	___flge@ff2+2
  1663  02BF  3000               	movlw	0
  1664  02C0  00F5               	movwf	___flge@ff2+1
  1665  02C1  3000               	movlw	0
  1666  02C2  00F4               	movwf	___flge@ff2
  1667  02C3  160A  118A  21A3  120A  118A  	fcall	___flge
  1668  02C8  1803               	btfsc	3,0
  1669  02C9  2AE7               	goto	l3227
  1670                           
  1671                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 851:     fv
      +                          al = -fval;
  1672  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  1673  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  1674  02CC  0841               	movf	(sprintf@fval+3)^(0+128),w
  1675  02CD  00F3               	movwf	___flneg@f1+3
  1676  02CE  0840               	movf	(sprintf@fval+2)^(0+128),w
  1677  02CF  00F2               	movwf	___flneg@f1+2
  1678  02D0  083F               	movf	(sprintf@fval+1)^(0+128),w
  1679  02D1  00F1               	movwf	___flneg@f1+1
  1680  02D2  083E               	movf	sprintf@fval^(0+128),w
  1681  02D3  00F0               	movwf	___flneg@f1
  1682  02D4  160A  158A  24E5  120A  118A  	fcall	___flneg
  1683  02D9  0873               	movf	?___flneg+3,w
  1684  02DA  1683               	bsf	3,5	;RP0=1, select bank1
  1685  02DB  1303               	bcf	3,6	;RP1=0, select bank1
  1686  02DC  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1687  02DD  0872               	movf	?___flneg+2,w
  1688  02DE  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1689  02DF  0871               	movf	?___flneg+1,w
  1690  02E0  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1691  02E1  0870               	movf	?___flneg,w
  1692  02E2  00BE               	movwf	sprintf@fval^(0+128)
  1693                           
  1694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 852:     fl
      +                          ag |= 0x03;
  1695  02E3  3003               	movlw	3
  1696  02E4  04AF               	iorwf	sprintf@flag^(0+128),f
  1697  02E5  3000               	movlw	0
  1698  02E6  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  1699  02E7                     l3227:	
  1700                           
  1701                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 854:    eex
      +                          p = 0;
  1702  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  1703  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  1704  02E9  01B5               	clrf	sprintf@eexp^(0+128)
  1705  02EA  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  1706                           
  1707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 855:    if(
      +                           fval!=0) {
  1708  02EB  0841               	movf	(sprintf@fval+3)^(0+128),w
  1709  02EC  00F3               	movwf	___fleq@ff1+3
  1710  02ED  0840               	movf	(sprintf@fval+2)^(0+128),w
  1711  02EE  00F2               	movwf	___fleq@ff1+2
  1712  02EF  083F               	movf	(sprintf@fval+1)^(0+128),w
  1713  02F0  00F1               	movwf	___fleq@ff1+1
  1714  02F1  083E               	movf	sprintf@fval^(0+128),w
  1715  02F2  00F0               	movwf	___fleq@ff1
  1716  02F3  3000               	movlw	0
  1717  02F4  00F7               	movwf	___fleq@ff2+3
  1718  02F5  3000               	movlw	0
  1719  02F6  00F6               	movwf	___fleq@ff2+2
  1720  02F7  3000               	movlw	0
  1721  02F8  00F5               	movwf	___fleq@ff2+1
  1722  02F9  3000               	movlw	0
  1723  02FA  00F4               	movwf	___fleq@ff2
  1724  02FB  160A  158A  26C6  120A  118A  	fcall	___fleq
  1725  0300  1803               	btfsc	3,0
  1726  0301  2BEB               	goto	l3255
  1727                           
  1728                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 856:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1729  0302  1003               	clrc
  1730  0303  1683               	bsf	3,5	;RP0=1, select bank1
  1731  0304  1303               	bcf	3,6	;RP1=0, select bank1
  1732  0305  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  1733  0306  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  1734  0307  3E82               	addlw	130
  1735  0308  00B5               	movwf	sprintf@eexp^(0+128)
  1736  0309  30FF               	movlw	255
  1737  030A  1803               	skipnc
  1738  030B  3000               	movlw	0
  1739  030C  00B6               	movwf	(sprintf@eexp^(0+128)+1)
  1740                           
  1741                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 857:     ee
      +                          xp--;
  1742  030D  30FF               	movlw	255
  1743  030E  07B5               	addwf	sprintf@eexp^(0+128),f
  1744  030F  1803               	skipnc
  1745  0310  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1746  0311  30FF               	movlw	255
  1747  0312  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  1748                           
  1749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 858:     ee
      +                          xp *= 3;
  1750  0313  3003               	movlw	3
  1751  0314  00F0               	movwf	___wmul@multiplier
  1752  0315  3000               	movlw	0
  1753  0316  00F1               	movwf	___wmul@multiplier+1
  1754  0317  0836               	movf	(sprintf@eexp+1)^(0+128),w
  1755  0318  00F3               	movwf	___wmul@multiplicand+1
  1756  0319  0835               	movf	sprintf@eexp^(0+128),w
  1757  031A  00F2               	movwf	___wmul@multiplicand
  1758  031B  160A  158A  2521  120A  118A  	fcall	___wmul
  1759  0320  0871               	movf	?___wmul+1,w
  1760  0321  1683               	bsf	3,5	;RP0=1, select bank1
  1761  0322  1303               	bcf	3,6	;RP1=0, select bank1
  1762  0323  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  1763  0324  0870               	movf	?___wmul,w
  1764  0325  00B5               	movwf	sprintf@eexp^(0+128)
  1765                           
  1766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 859:     ee
      +                          xp /= 10;
  1767  0326  300A               	movlw	10
  1768  0327  00F7               	movwf	___awdiv@divisor
  1769  0328  3000               	movlw	0
  1770  0329  00F8               	movwf	___awdiv@divisor+1
  1771  032A  0836               	movf	(sprintf@eexp+1)^(0+128),w
  1772  032B  00FA               	movwf	___awdiv@dividend+1
  1773  032C  0835               	movf	sprintf@eexp^(0+128),w
  1774  032D  00F9               	movwf	___awdiv@dividend
  1775  032E  160A  158A  27A5  120A  118A  	fcall	___awdiv
  1776  0333  0878               	movf	?___awdiv+1,w
  1777  0334  1683               	bsf	3,5	;RP0=1, select bank1
  1778  0335  1303               	bcf	3,6	;RP1=0, select bank1
  1779  0336  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  1780  0337  0877               	movf	?___awdiv,w
  1781  0338  00B5               	movwf	sprintf@eexp^(0+128)
  1782                           
  1783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 860:     if
      +                          (eexp < 0)
  1784  0339  1FB6               	btfss	(sprintf@eexp+1)^(0+128),7
  1785  033A  2B41               	goto	l3243
  1786                           
  1787                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 861:      e
      +                          exp--;
  1788  033B  30FF               	movlw	255
  1789  033C  07B5               	addwf	sprintf@eexp^(0+128),f
  1790  033D  1803               	skipnc
  1791  033E  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1792  033F  30FF               	movlw	255
  1793  0340  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  1794  0341                     l3243:	
  1795                           
  1796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 865:     tm
      +                          pval.integ = scale(-eexp);
  1797  0341  0335               	decf	sprintf@eexp^(0+128),w
  1798  0342  3AFF               	xorlw	255
  1799  0343  120A  158A  24B7  120A  118A  	fcall	_scale
  1800  0348  1283               	bcf	3,5	;RP0=0, select bank0
  1801  0349  1303               	bcf	3,6	;RP1=0, select bank0
  1802  034A  0843               	movf	?_scale+3,w
  1803  034B  1683               	bsf	3,5	;RP0=1, select bank1
  1804  034C  1303               	bcf	3,6	;RP1=0, select bank1
  1805  034D  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  1806  034E  1283               	bcf	3,5	;RP0=0, select bank0
  1807  034F  1303               	bcf	3,6	;RP1=0, select bank0
  1808  0350  0842               	movf	?_scale+2,w
  1809  0351  1683               	bsf	3,5	;RP0=1, select bank1
  1810  0352  1303               	bcf	3,6	;RP1=0, select bank1
  1811  0353  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  1812  0354  1283               	bcf	3,5	;RP0=0, select bank0
  1813  0355  1303               	bcf	3,6	;RP1=0, select bank0
  1814  0356  0841               	movf	?_scale+1,w
  1815  0357  1683               	bsf	3,5	;RP0=1, select bank1
  1816  0358  1303               	bcf	3,6	;RP1=0, select bank1
  1817  0359  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  1818  035A  1283               	bcf	3,5	;RP0=0, select bank0
  1819  035B  1303               	bcf	3,6	;RP1=0, select bank0
  1820  035C  0840               	movf	?_scale,w
  1821  035D  1683               	bsf	3,5	;RP0=1, select bank1
  1822  035E  1303               	bcf	3,6	;RP1=0, select bank1
  1823  035F  00B7               	movwf	sprintf@tmpval^(0+128)
  1824                           
  1825                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 866:     tm
      +                          pval.integ *= fval;
  1826  0360  0841               	movf	(sprintf@fval+3)^(0+128),w
  1827  0361  1283               	bcf	3,5	;RP0=0, select bank0
  1828  0362  1303               	bcf	3,6	;RP1=0, select bank0
  1829  0363  00A9               	movwf	___flmul@b+3
  1830  0364  1683               	bsf	3,5	;RP0=1, select bank1
  1831  0365  1303               	bcf	3,6	;RP1=0, select bank1
  1832  0366  0840               	movf	(sprintf@fval+2)^(0+128),w
  1833  0367  1283               	bcf	3,5	;RP0=0, select bank0
  1834  0368  1303               	bcf	3,6	;RP1=0, select bank0
  1835  0369  00A8               	movwf	___flmul@b+2
  1836  036A  1683               	bsf	3,5	;RP0=1, select bank1
  1837  036B  1303               	bcf	3,6	;RP1=0, select bank1
  1838  036C  083F               	movf	(sprintf@fval+1)^(0+128),w
  1839  036D  1283               	bcf	3,5	;RP0=0, select bank0
  1840  036E  1303               	bcf	3,6	;RP1=0, select bank0
  1841  036F  00A7               	movwf	___flmul@b+1
  1842  0370  1683               	bsf	3,5	;RP0=1, select bank1
  1843  0371  1303               	bcf	3,6	;RP1=0, select bank1
  1844  0372  083E               	movf	sprintf@fval^(0+128),w
  1845  0373  1283               	bcf	3,5	;RP0=0, select bank0
  1846  0374  1303               	bcf	3,6	;RP1=0, select bank0
  1847  0375  00A6               	movwf	___flmul@b
  1848  0376  1683               	bsf	3,5	;RP0=1, select bank1
  1849  0377  1303               	bcf	3,6	;RP1=0, select bank1
  1850  0378  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  1851  0379  1283               	bcf	3,5	;RP0=0, select bank0
  1852  037A  1303               	bcf	3,6	;RP1=0, select bank0
  1853  037B  00AD               	movwf	___flmul@a+3
  1854  037C  1683               	bsf	3,5	;RP0=1, select bank1
  1855  037D  1303               	bcf	3,6	;RP1=0, select bank1
  1856  037E  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  1857  037F  1283               	bcf	3,5	;RP0=0, select bank0
  1858  0380  1303               	bcf	3,6	;RP1=0, select bank0
  1859  0381  00AC               	movwf	___flmul@a+2
  1860  0382  1683               	bsf	3,5	;RP0=1, select bank1
  1861  0383  1303               	bcf	3,6	;RP1=0, select bank1
  1862  0384  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  1863  0385  1283               	bcf	3,5	;RP0=0, select bank0
  1864  0386  1303               	bcf	3,6	;RP1=0, select bank0
  1865  0387  00AB               	movwf	___flmul@a+1
  1866  0388  1683               	bsf	3,5	;RP0=1, select bank1
  1867  0389  1303               	bcf	3,6	;RP1=0, select bank1
  1868  038A  0837               	movf	sprintf@tmpval^(0+128),w
  1869  038B  1283               	bcf	3,5	;RP0=0, select bank0
  1870  038C  1303               	bcf	3,6	;RP1=0, select bank0
  1871  038D  00AA               	movwf	___flmul@a
  1872  038E  120A  158A  21A2  120A  118A  	fcall	___flmul
  1873  0393  1283               	bcf	3,5	;RP0=0, select bank0
  1874  0394  1303               	bcf	3,6	;RP1=0, select bank0
  1875  0395  0829               	movf	?___flmul+3,w
  1876  0396  1683               	bsf	3,5	;RP0=1, select bank1
  1877  0397  1303               	bcf	3,6	;RP1=0, select bank1
  1878  0398  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  1879  0399  1283               	bcf	3,5	;RP0=0, select bank0
  1880  039A  1303               	bcf	3,6	;RP1=0, select bank0
  1881  039B  0828               	movf	?___flmul+2,w
  1882  039C  1683               	bsf	3,5	;RP0=1, select bank1
  1883  039D  1303               	bcf	3,6	;RP1=0, select bank1
  1884  039E  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  1885  039F  1283               	bcf	3,5	;RP0=0, select bank0
  1886  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  1887  03A1  0827               	movf	?___flmul+1,w
  1888  03A2  1683               	bsf	3,5	;RP0=1, select bank1
  1889  03A3  1303               	bcf	3,6	;RP1=0, select bank1
  1890  03A4  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  1891  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  1892  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  1893  03A7  0826               	movf	?___flmul,w
  1894  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  1895  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  1896  03AA  00B7               	movwf	sprintf@tmpval^(0+128)
  1897                           
  1898                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (tmpval.integ < 1.0)
  1899  03AB  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  1900  03AC  00F3               	movwf	___flge@ff1+3
  1901  03AD  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  1902  03AE  00F2               	movwf	___flge@ff1+2
  1903  03AF  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  1904  03B0  00F1               	movwf	___flge@ff1+1
  1905  03B1  0837               	movf	sprintf@tmpval^(0+128),w
  1906  03B2  00F0               	movwf	___flge@ff1
  1907  03B3  303F               	movlw	63
  1908  03B4  00F7               	movwf	___flge@ff2+3
  1909  03B5  3080               	movlw	128
  1910  03B6  00F6               	movwf	___flge@ff2+2
  1911  03B7  3000               	movlw	0
  1912  03B8  00F5               	movwf	___flge@ff2+1
  1913  03B9  3000               	movlw	0
  1914  03BA  00F4               	movwf	___flge@ff2
  1915  03BB  160A  118A  21A3  120A  118A  	fcall	___flge
  1916  03C0  1803               	btfsc	3,0
  1917  03C1  2BCA               	goto	l3251
  1918                           
  1919                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  1920  03C2  30FF               	movlw	255
  1921  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  1922  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  1923  03C5  07B5               	addwf	sprintf@eexp^(0+128),f
  1924  03C6  1803               	skipnc
  1925  03C7  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1926  03C8  30FF               	movlw	255
  1927  03C9  2BEA               	goto	L1
  1928  03CA                     l3251:	
  1929  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  1930  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  1931  03CC  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  1932  03CD  00F3               	movwf	___flge@ff1+3
  1933  03CE  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  1934  03CF  00F2               	movwf	___flge@ff1+2
  1935  03D0  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  1936  03D1  00F1               	movwf	___flge@ff1+1
  1937  03D2  0837               	movf	sprintf@tmpval^(0+128),w
  1938  03D3  00F0               	movwf	___flge@ff1
  1939  03D4  3041               	movlw	65
  1940  03D5  00F7               	movwf	___flge@ff2+3
  1941  03D6  3020               	movlw	32
  1942  03D7  00F6               	movwf	___flge@ff2+2
  1943  03D8  3000               	movlw	0
  1944  03D9  00F5               	movwf	___flge@ff2+1
  1945  03DA  3000               	movlw	0
  1946  03DB  00F4               	movwf	___flge@ff2
  1947  03DC  160A  118A  21A3  120A  118A  	fcall	___flge
  1948  03E1  1C03               	btfss	3,0
  1949  03E2  2BEB               	goto	l3255
  1950                           
  1951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 870:      e
      +                          exp++;
  1952  03E3  3001               	movlw	1
  1953  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  1954  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  1955  03E6  07B5               	addwf	sprintf@eexp^(0+128),f
  1956  03E7  1803               	skipnc
  1957  03E8  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1958  03E9  3000               	movlw	0
  1959  03EA                     L1:	
  1960  03EA  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  1961  03EB                     l3255:	
  1962                           
  1963                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1131:      
      +                          if(prec <= 12)
  1964  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  1965  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  1966  03ED  083D               	movf	(sprintf@prec+1)^(0+128),w
  1967  03EE  3A80               	xorlw	128
  1968  03EF  00FF               	movwf	127
  1969  03F0  3080               	movlw	128
  1970  03F1  027F               	subwf	127,w
  1971  03F2  1D03               	skipz
  1972  03F3  2BF6               	goto	u5475
  1973  03F4  300D               	movlw	13
  1974  03F5  023C               	subwf	sprintf@prec^(0+128),w
  1975  03F6                     u5475:	
  1976  03F6  1803               	skipnc
  1977  03F7  2C3F               	goto	l3259
  1978                           
  1979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1132:      
      +                           fval += fround((unsigned int)prec);
  1980  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  1981  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  1982  03FA  083C               	movf	sprintf@prec^(0+128),w
  1983  03FB  120A  118A  2004  120A  118A  	fcall	_fround
  1984  0400  1283               	bcf	3,5	;RP0=0, select bank0
  1985  0401  1303               	bcf	3,6	;RP1=0, select bank0
  1986  0402  0843               	movf	?_fround+3,w
  1987  0403  00D7               	movwf	___fladd@b+3
  1988  0404  0842               	movf	?_fround+2,w
  1989  0405  00D6               	movwf	___fladd@b+2
  1990  0406  0841               	movf	?_fround+1,w
  1991  0407  00D5               	movwf	___fladd@b+1
  1992  0408  0840               	movf	?_fround,w
  1993  0409  00D4               	movwf	___fladd@b
  1994  040A  1683               	bsf	3,5	;RP0=1, select bank1
  1995  040B  1303               	bcf	3,6	;RP1=0, select bank1
  1996  040C  0841               	movf	(sprintf@fval+3)^(0+128),w
  1997  040D  1283               	bcf	3,5	;RP0=0, select bank0
  1998  040E  1303               	bcf	3,6	;RP1=0, select bank0
  1999  040F  00DB               	movwf	___fladd@a+3
  2000  0410  1683               	bsf	3,5	;RP0=1, select bank1
  2001  0411  1303               	bcf	3,6	;RP1=0, select bank1
  2002  0412  0840               	movf	(sprintf@fval+2)^(0+128),w
  2003  0413  1283               	bcf	3,5	;RP0=0, select bank0
  2004  0414  1303               	bcf	3,6	;RP1=0, select bank0
  2005  0415  00DA               	movwf	___fladd@a+2
  2006  0416  1683               	bsf	3,5	;RP0=1, select bank1
  2007  0417  1303               	bcf	3,6	;RP1=0, select bank1
  2008  0418  083F               	movf	(sprintf@fval+1)^(0+128),w
  2009  0419  1283               	bcf	3,5	;RP0=0, select bank0
  2010  041A  1303               	bcf	3,6	;RP1=0, select bank0
  2011  041B  00D9               	movwf	___fladd@a+1
  2012  041C  1683               	bsf	3,5	;RP0=1, select bank1
  2013  041D  1303               	bcf	3,6	;RP1=0, select bank1
  2014  041E  083E               	movf	sprintf@fval^(0+128),w
  2015  041F  1283               	bcf	3,5	;RP0=0, select bank0
  2016  0420  1303               	bcf	3,6	;RP1=0, select bank0
  2017  0421  00D8               	movwf	___fladd@a
  2018  0422  160A  118A  25D1  120A  118A  	fcall	___fladd
  2019  0427  1283               	bcf	3,5	;RP0=0, select bank0
  2020  0428  1303               	bcf	3,6	;RP1=0, select bank0
  2021  0429  0857               	movf	?___fladd+3,w
  2022  042A  1683               	bsf	3,5	;RP0=1, select bank1
  2023  042B  1303               	bcf	3,6	;RP1=0, select bank1
  2024  042C  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2025  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2026  042E  1303               	bcf	3,6	;RP1=0, select bank0
  2027  042F  0856               	movf	?___fladd+2,w
  2028  0430  1683               	bsf	3,5	;RP0=1, select bank1
  2029  0431  1303               	bcf	3,6	;RP1=0, select bank1
  2030  0432  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2031  0433  1283               	bcf	3,5	;RP0=0, select bank0
  2032  0434  1303               	bcf	3,6	;RP1=0, select bank0
  2033  0435  0855               	movf	?___fladd+1,w
  2034  0436  1683               	bsf	3,5	;RP0=1, select bank1
  2035  0437  1303               	bcf	3,6	;RP1=0, select bank1
  2036  0438  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2037  0439  1283               	bcf	3,5	;RP0=0, select bank0
  2038  043A  1303               	bcf	3,6	;RP1=0, select bank0
  2039  043B  0854               	movf	?___fladd,w
  2040  043C  1683               	bsf	3,5	;RP0=1, select bank1
  2041  043D  1303               	bcf	3,6	;RP1=0, select bank1
  2042  043E  00BE               	movwf	sprintf@fval^(0+128)
  2043  043F                     l3259:	
  2044                           
  2045                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1135:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2046  043F  1683               	bsf	3,5	;RP0=1, select bank1
  2047  0440  1303               	bcf	3,6	;RP1=0, select bank1
  2048  0441  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2049  0442  3A80               	xorlw	128
  2050  0443  00FF               	movwf	127
  2051  0444  3080               	movlw	128
  2052  0445  027F               	subwf	127,w
  2053  0446  1D03               	skipz
  2054  0447  2C4A               	goto	u5485
  2055  0448  300A               	movlw	10
  2056  0449  0235               	subwf	sprintf@eexp^(0+128),w
  2057  044A                     u5485:	
  2058  044A  1803               	skipnc
  2059  044B  2C97               	goto	l3267
  2060  044C  1683               	bsf	3,5	;RP0=1, select bank1
  2061  044D  1303               	bcf	3,6	;RP1=0, select bank1
  2062  044E  0841               	movf	(sprintf@fval+3)^(0+128),w
  2063  044F  00F3               	movwf	___fleq@ff1+3
  2064  0450  0840               	movf	(sprintf@fval+2)^(0+128),w
  2065  0451  00F2               	movwf	___fleq@ff1+2
  2066  0452  083F               	movf	(sprintf@fval+1)^(0+128),w
  2067  0453  00F1               	movwf	___fleq@ff1+1
  2068  0454  083E               	movf	sprintf@fval^(0+128),w
  2069  0455  00F0               	movwf	___fleq@ff1
  2070  0456  3000               	movlw	0
  2071  0457  00F7               	movwf	___fleq@ff2+3
  2072  0458  3000               	movlw	0
  2073  0459  00F6               	movwf	___fleq@ff2+2
  2074  045A  3000               	movlw	0
  2075  045B  00F5               	movwf	___fleq@ff2+1
  2076  045C  3000               	movlw	0
  2077  045D  00F4               	movwf	___fleq@ff2
  2078  045E  160A  158A  26C6  120A  118A  	fcall	___fleq
  2079  0463  1803               	btfsc	3,0
  2080  0464  2D00               	goto	l3281
  2081  0465  1683               	bsf	3,5	;RP0=1, select bank1
  2082  0466  1303               	bcf	3,6	;RP1=0, select bank1
  2083  0467  0841               	movf	(sprintf@fval+3)^(0+128),w
  2084  0468  1283               	bcf	3,5	;RP0=0, select bank0
  2085  0469  1303               	bcf	3,6	;RP1=0, select bank0
  2086  046A  00D6               	movwf	___fltol@f1+3
  2087  046B  1683               	bsf	3,5	;RP0=1, select bank1
  2088  046C  1303               	bcf	3,6	;RP1=0, select bank1
  2089  046D  0840               	movf	(sprintf@fval+2)^(0+128),w
  2090  046E  1283               	bcf	3,5	;RP0=0, select bank0
  2091  046F  1303               	bcf	3,6	;RP1=0, select bank0
  2092  0470  00D5               	movwf	___fltol@f1+2
  2093  0471  1683               	bsf	3,5	;RP0=1, select bank1
  2094  0472  1303               	bcf	3,6	;RP1=0, select bank1
  2095  0473  083F               	movf	(sprintf@fval+1)^(0+128),w
  2096  0474  1283               	bcf	3,5	;RP0=0, select bank0
  2097  0475  1303               	bcf	3,6	;RP1=0, select bank0
  2098  0476  00D4               	movwf	___fltol@f1+1
  2099  0477  1683               	bsf	3,5	;RP0=1, select bank1
  2100  0478  1303               	bcf	3,6	;RP1=0, select bank1
  2101  0479  083E               	movf	sprintf@fval^(0+128),w
  2102  047A  1283               	bcf	3,5	;RP0=0, select bank0
  2103  047B  1303               	bcf	3,6	;RP1=0, select bank0
  2104  047C  00D3               	movwf	___fltol@f1
  2105  047D  120A  158A  2020  120A  118A  	fcall	___fltol
  2106  0482  1283               	bcf	3,5	;RP0=0, select bank0
  2107  0483  1303               	bcf	3,6	;RP1=0, select bank0
  2108  0484  0856               	movf	?___fltol+3,w
  2109  0485  0455               	iorwf	?___fltol+2,w
  2110  0486  0454               	iorwf	?___fltol+1,w
  2111  0487  0453               	iorwf	?___fltol,w
  2112  0488  1D03               	skipz
  2113  0489  2D00               	goto	l3281
  2114  048A  1683               	bsf	3,5	;RP0=1, select bank1
  2115  048B  1303               	bcf	3,6	;RP1=0, select bank1
  2116  048C  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2117  048D  3A80               	xorlw	128
  2118  048E  00FF               	movwf	127
  2119  048F  3080               	movlw	128
  2120  0490  027F               	subwf	127,w
  2121  0491  1D03               	skipz
  2122  0492  2C95               	goto	u5515
  2123  0493  3002               	movlw	2
  2124  0494  0235               	subwf	sprintf@eexp^(0+128),w
  2125  0495                     u5515:	
  2126  0495  1C03               	skipc
  2127  0496  2D00               	goto	l3281
  2128  0497                     l3267:	
  2129                           
  2130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1139:      
      +                          if(tmpval.integ < 4.294967296){
  2131  0497  1683               	bsf	3,5	;RP0=1, select bank1
  2132  0498  1303               	bcf	3,6	;RP1=0, select bank1
  2133  0499  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2134  049A  00F3               	movwf	___flge@ff1+3
  2135  049B  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2136  049C  00F2               	movwf	___flge@ff1+2
  2137  049D  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2138  049E  00F1               	movwf	___flge@ff1+1
  2139  049F  0837               	movf	sprintf@tmpval^(0+128),w
  2140  04A0  00F0               	movwf	___flge@ff1
  2141  04A1  3040               	movlw	64
  2142  04A2  00F7               	movwf	___flge@ff2+3
  2143  04A3  3089               	movlw	137
  2144  04A4  00F6               	movwf	___flge@ff2+2
  2145  04A5  3070               	movlw	112
  2146  04A6  00F5               	movwf	___flge@ff2+1
  2147  04A7  305F               	movlw	95
  2148  04A8  00F4               	movwf	___flge@ff2
  2149  04A9  160A  118A  21A3  120A  118A  	fcall	___flge
  2150  04AE  1803               	btfsc	3,0
  2151  04AF  2CB2               	goto	l3271
  2152                           
  2153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1140:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2154  04B0  30F7               	movlw	247
  2155  04B1  2CB3               	goto	L2
  2156  04B2                     l3271:	
  2157                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1141:      
      +                          }else{
  2158                           
  2159                           
  2160                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1142:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2161  04B2  30F8               	movlw	248
  2162  04B3                     L2:	
  2163  04B3  1683               	bsf	3,5	;RP0=1, select bank1
  2164  04B4  1303               	bcf	3,6	;RP1=0, select bank1
  2165  04B5  07B5               	addwf	sprintf@eexp^(0+128),f
  2166  04B6  1803               	skipnc
  2167  04B7  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2168  04B8  30FF               	movlw	255
  2169  04B9  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2170                           
  2171                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1145:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  2172  04BA  0835               	movf	sprintf@eexp^(0+128),w
  2173  04BB  120A  158A  24B7  120A  118A  	fcall	_scale
  2174  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2175  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  2176  04C2  0843               	movf	?_scale+3,w
  2177  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  2178  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  2179  04C5  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2180  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2181  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  2182  04C8  0842               	movf	?_scale+2,w
  2183  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  2184  04CA  1303               	bcf	3,6	;RP1=0, select bank1
  2185  04CB  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2186  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  2187  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  2188  04CE  0841               	movf	?_scale+1,w
  2189  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  2190  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  2191  04D1  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2192  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  2193  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  2194  04D4  0840               	movf	?_scale,w
  2195  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  2196  04D6  1303               	bcf	3,6	;RP1=0, select bank1
  2197  04D7  00B7               	movwf	sprintf@tmpval^(0+128)
  2198  04D8  0841               	movf	(sprintf@fval+3)^(0+128),w
  2199  04D9  00F3               	movwf	__div_to_l_@f1+3
  2200  04DA  0840               	movf	(sprintf@fval+2)^(0+128),w
  2201  04DB  00F2               	movwf	__div_to_l_@f1+2
  2202  04DC  083F               	movf	(sprintf@fval+1)^(0+128),w
  2203  04DD  00F1               	movwf	__div_to_l_@f1+1
  2204  04DE  083E               	movf	sprintf@fval^(0+128),w
  2205  04DF  00F0               	movwf	__div_to_l_@f1
  2206  04E0  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2207  04E1  00F7               	movwf	__div_to_l_@f2+3
  2208  04E2  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2209  04E3  00F6               	movwf	__div_to_l_@f2+2
  2210  04E4  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2211  04E5  00F5               	movwf	__div_to_l_@f2+1
  2212  04E6  0837               	movf	sprintf@tmpval^(0+128),w
  2213  04E7  00F4               	movwf	__div_to_l_@f2
  2214  04E8  160A  118A  2384  120A  118A  	fcall	__div_to_l_
  2215  04ED  0873               	movf	?__div_to_l_+3,w
  2216  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  2217  04EF  1303               	bcf	3,6	;RP1=0, select bank1
  2218  04F0  00B4               	movwf	(sprintf@val+3)^(0+128)
  2219  04F1  0872               	movf	?__div_to_l_+2,w
  2220  04F2  00B3               	movwf	(sprintf@val+2)^(0+128)
  2221  04F3  0871               	movf	?__div_to_l_+1,w
  2222  04F4  00B2               	movwf	(sprintf@val+1)^(0+128)
  2223  04F5  0870               	movf	?__div_to_l_,w
  2224  04F6  00B1               	movwf	sprintf@val^(0+128)
  2225                           
  2226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1148:      
      +                          fval = 0.0;
  2227  04F7  3000               	movlw	0
  2228  04F8  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2229  04F9  3000               	movlw	0
  2230  04FA  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2231  04FB  3000               	movlw	0
  2232  04FC  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2233  04FD  3000               	movlw	0
  2234  04FE  00BE               	movwf	sprintf@fval^(0+128)
  2235                           
  2236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1149:     }
      +                           else {
  2237  04FF  2D84               	goto	l3287
  2238  0500                     l3281:	
  2239                           
  2240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1150:      
      +                          val = (unsigned long)fval;
  2241  0500  1683               	bsf	3,5	;RP0=1, select bank1
  2242  0501  1303               	bcf	3,6	;RP1=0, select bank1
  2243  0502  0841               	movf	(sprintf@fval+3)^(0+128),w
  2244  0503  1283               	bcf	3,5	;RP0=0, select bank0
  2245  0504  1303               	bcf	3,6	;RP1=0, select bank0
  2246  0505  00D6               	movwf	___fltol@f1+3
  2247  0506  1683               	bsf	3,5	;RP0=1, select bank1
  2248  0507  1303               	bcf	3,6	;RP1=0, select bank1
  2249  0508  0840               	movf	(sprintf@fval+2)^(0+128),w
  2250  0509  1283               	bcf	3,5	;RP0=0, select bank0
  2251  050A  1303               	bcf	3,6	;RP1=0, select bank0
  2252  050B  00D5               	movwf	___fltol@f1+2
  2253  050C  1683               	bsf	3,5	;RP0=1, select bank1
  2254  050D  1303               	bcf	3,6	;RP1=0, select bank1
  2255  050E  083F               	movf	(sprintf@fval+1)^(0+128),w
  2256  050F  1283               	bcf	3,5	;RP0=0, select bank0
  2257  0510  1303               	bcf	3,6	;RP1=0, select bank0
  2258  0511  00D4               	movwf	___fltol@f1+1
  2259  0512  1683               	bsf	3,5	;RP0=1, select bank1
  2260  0513  1303               	bcf	3,6	;RP1=0, select bank1
  2261  0514  083E               	movf	sprintf@fval^(0+128),w
  2262  0515  1283               	bcf	3,5	;RP0=0, select bank0
  2263  0516  1303               	bcf	3,6	;RP1=0, select bank0
  2264  0517  00D3               	movwf	___fltol@f1
  2265  0518  120A  158A  2020  120A  118A  	fcall	___fltol
  2266  051D  1283               	bcf	3,5	;RP0=0, select bank0
  2267  051E  1303               	bcf	3,6	;RP1=0, select bank0
  2268  051F  0856               	movf	?___fltol+3,w
  2269  0520  1683               	bsf	3,5	;RP0=1, select bank1
  2270  0521  1303               	bcf	3,6	;RP1=0, select bank1
  2271  0522  00B4               	movwf	(sprintf@val+3)^(0+128)
  2272  0523  1283               	bcf	3,5	;RP0=0, select bank0
  2273  0524  1303               	bcf	3,6	;RP1=0, select bank0
  2274  0525  0855               	movf	?___fltol+2,w
  2275  0526  1683               	bsf	3,5	;RP0=1, select bank1
  2276  0527  1303               	bcf	3,6	;RP1=0, select bank1
  2277  0528  00B3               	movwf	(sprintf@val+2)^(0+128)
  2278  0529  1283               	bcf	3,5	;RP0=0, select bank0
  2279  052A  1303               	bcf	3,6	;RP1=0, select bank0
  2280  052B  0854               	movf	?___fltol+1,w
  2281  052C  1683               	bsf	3,5	;RP0=1, select bank1
  2282  052D  1303               	bcf	3,6	;RP1=0, select bank1
  2283  052E  00B2               	movwf	(sprintf@val+1)^(0+128)
  2284  052F  1283               	bcf	3,5	;RP0=0, select bank0
  2285  0530  1303               	bcf	3,6	;RP1=0, select bank0
  2286  0531  0853               	movf	?___fltol,w
  2287  0532  1683               	bsf	3,5	;RP0=1, select bank1
  2288  0533  1303               	bcf	3,6	;RP1=0, select bank1
  2289  0534  00B1               	movwf	sprintf@val^(0+128)
  2290                           
  2291                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1151:      
      +                          fval -= (double)val;
  2292  0535  0834               	movf	(sprintf@val+3)^(0+128),w
  2293  0536  00F7               	movwf	___xxtofl@val+3
  2294  0537  0833               	movf	(sprintf@val+2)^(0+128),w
  2295  0538  00F6               	movwf	___xxtofl@val+2
  2296  0539  0832               	movf	(sprintf@val+1)^(0+128),w
  2297  053A  00F5               	movwf	___xxtofl@val+1
  2298  053B  0831               	movf	sprintf@val^(0+128),w
  2299  053C  00F4               	movwf	___xxtofl@val
  2300  053D  3000               	movlw	0
  2301  053E  160A  118A  2236  120A  118A  	fcall	___xxtofl
  2302  0543  0877               	movf	?___xxtofl+3,w
  2303  0544  1283               	bcf	3,5	;RP0=0, select bank0
  2304  0545  1303               	bcf	3,6	;RP1=0, select bank0
  2305  0546  00EB               	movwf	___flsub@a+3
  2306  0547  0876               	movf	?___xxtofl+2,w
  2307  0548  00EA               	movwf	___flsub@a+2
  2308  0549  0875               	movf	?___xxtofl+1,w
  2309  054A  00E9               	movwf	___flsub@a+1
  2310  054B  0874               	movf	?___xxtofl,w
  2311  054C  00E8               	movwf	___flsub@a
  2312  054D  1683               	bsf	3,5	;RP0=1, select bank1
  2313  054E  1303               	bcf	3,6	;RP1=0, select bank1
  2314  054F  0841               	movf	(sprintf@fval+3)^(0+128),w
  2315  0550  1283               	bcf	3,5	;RP0=0, select bank0
  2316  0551  1303               	bcf	3,6	;RP1=0, select bank0
  2317  0552  00EF               	movwf	___flsub@b+3
  2318  0553  1683               	bsf	3,5	;RP0=1, select bank1
  2319  0554  1303               	bcf	3,6	;RP1=0, select bank1
  2320  0555  0840               	movf	(sprintf@fval+2)^(0+128),w
  2321  0556  1283               	bcf	3,5	;RP0=0, select bank0
  2322  0557  1303               	bcf	3,6	;RP1=0, select bank0
  2323  0558  00EE               	movwf	___flsub@b+2
  2324  0559  1683               	bsf	3,5	;RP0=1, select bank1
  2325  055A  1303               	bcf	3,6	;RP1=0, select bank1
  2326  055B  083F               	movf	(sprintf@fval+1)^(0+128),w
  2327  055C  1283               	bcf	3,5	;RP0=0, select bank0
  2328  055D  1303               	bcf	3,6	;RP1=0, select bank0
  2329  055E  00ED               	movwf	___flsub@b+1
  2330  055F  1683               	bsf	3,5	;RP0=1, select bank1
  2331  0560  1303               	bcf	3,6	;RP1=0, select bank1
  2332  0561  083E               	movf	sprintf@fval^(0+128),w
  2333  0562  1283               	bcf	3,5	;RP0=0, select bank0
  2334  0563  1303               	bcf	3,6	;RP1=0, select bank0
  2335  0564  00EC               	movwf	___flsub@b
  2336  0565  160A  158A  2564  120A  118A  	fcall	___flsub
  2337  056A  1283               	bcf	3,5	;RP0=0, select bank0
  2338  056B  1303               	bcf	3,6	;RP1=0, select bank0
  2339  056C  086B               	movf	?___flsub+3,w
  2340  056D  1683               	bsf	3,5	;RP0=1, select bank1
  2341  056E  1303               	bcf	3,6	;RP1=0, select bank1
  2342  056F  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2343  0570  1283               	bcf	3,5	;RP0=0, select bank0
  2344  0571  1303               	bcf	3,6	;RP1=0, select bank0
  2345  0572  086A               	movf	?___flsub+2,w
  2346  0573  1683               	bsf	3,5	;RP0=1, select bank1
  2347  0574  1303               	bcf	3,6	;RP1=0, select bank1
  2348  0575  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2349  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2350  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2351  0578  0869               	movf	?___flsub+1,w
  2352  0579  1683               	bsf	3,5	;RP0=1, select bank1
  2353  057A  1303               	bcf	3,6	;RP1=0, select bank1
  2354  057B  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2355  057C  1283               	bcf	3,5	;RP0=0, select bank0
  2356  057D  1303               	bcf	3,6	;RP1=0, select bank0
  2357  057E  0868               	movf	?___flsub,w
  2358  057F  1683               	bsf	3,5	;RP0=1, select bank1
  2359  0580  1303               	bcf	3,6	;RP1=0, select bank1
  2360  0581  00BE               	movwf	sprintf@fval^(0+128)
  2361                           
  2362                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1152:      
      +                          eexp = 0;
  2363  0582  01B5               	clrf	sprintf@eexp^(0+128)
  2364  0583  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2365  0584                     l3287:	
  2366                           
  2367                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1155:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2368  0584  01C2               	clrf	sprintf@c^(0+128)
  2369  0585  0AC2               	incf	sprintf@c^(0+128),f
  2370  0586                     l3293:	
  2371                           
  2372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1156:      
      +                          if(val < dpowers[c])
  2373  0586  0842               	movf	sprintf@c^(0+128),w
  2374  0587  00A5               	movwf	??_sprintf^(0+128)
  2375  0588  3001               	movlw	1
  2376  0589                     u5535:	
  2377  0589  1003               	clrc
  2378  058A  0DA5               	rlf	??_sprintf^(0+128),f
  2379  058B  3EFF               	addlw	-1
  2380  058C  1D03               	skipz
  2381  058D  2D89               	goto	u5535
  2382  058E  1003               	clrc
  2383  058F  0D25               	rlf	??_sprintf^(0+128),w
  2384  0590  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2385  0591  0084               	movwf	4
  2386  0592  160A  118A  200A  120A  118A  	fcall	stringdir
  2387  0597  00A6               	movwf	(??_sprintf+1)^(0+128)
  2388  0598  160A  118A  200A  120A  118A  	fcall	stringdir
  2389  059D  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2390  059E  160A  118A  200A  120A  118A  	fcall	stringdir
  2391  05A3  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2392  05A4  160A  118A  200A  120A  118A  	fcall	stringdir
  2393  05A9  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2394  05AA  0829               	movf	(??_sprintf+4)^(0+128),w
  2395  05AB  0234               	subwf	(sprintf@val+3)^(0+128),w
  2396  05AC  1D03               	skipz
  2397  05AD  2DB8               	goto	u5545
  2398  05AE  0828               	movf	(??_sprintf+3)^(0+128),w
  2399  05AF  0233               	subwf	(sprintf@val+2)^(0+128),w
  2400  05B0  1D03               	skipz
  2401  05B1  2DB8               	goto	u5545
  2402  05B2  0827               	movf	(??_sprintf+2)^(0+128),w
  2403  05B3  0232               	subwf	(sprintf@val+1)^(0+128),w
  2404  05B4  1D03               	skipz
  2405  05B5  2DB8               	goto	u5545
  2406  05B6  0826               	movf	(??_sprintf+1)^(0+128),w
  2407  05B7  0231               	subwf	sprintf@val^(0+128),w
  2408  05B8                     u5545:	
  2409  05B8  1C03               	btfss	3,0
  2410  05B9  2DC2               	goto	l3299
  2411  05BA  3001               	movlw	1
  2412  05BB  00A5               	movwf	??_sprintf^(0+128)
  2413  05BC  0825               	movf	??_sprintf^(0+128),w
  2414  05BD  07C2               	addwf	sprintf@c^(0+128),f
  2415  05BE  300A               	movlw	10
  2416  05BF  0642               	xorwf	sprintf@c^(0+128),w
  2417  05C0  1D03               	btfss	3,2
  2418  05C1  2D86               	goto	l3293
  2419  05C2                     l3299:	
  2420                           
  2421                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1194:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1207:     i
      +                          f(flag & 0x03)
  2422  05C2  3003               	movlw	3
  2423  05C3  052F               	andwf	sprintf@flag^(0+128),w
  2424  05C4  00A5               	movwf	??_sprintf^(0+128)
  2425  05C5  3000               	movlw	0
  2426  05C6  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2427  05C7  00A6               	movwf	(??_sprintf+1)^(0+128)
  2428  05C8  0825               	movf	??_sprintf^(0+128),w
  2429  05C9  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2430  05CA  1903               	btfsc	3,2
  2431  05CB  2DD7               	goto	l239
  2432                           
  2433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1209:      
      +                          ((*sp++ = ('-')));
  2434  05CC  302D               	movlw	45
  2435  05CD                     L3:	
  2436  05CD  00A5               	movwf	??_sprintf^(0+128)
  2437  05CE  083B               	movf	sprintf@sp^(0+128),w
  2438  05CF  0084               	movwf	4
  2439  05D0  0825               	movf	??_sprintf^(0+128),w
  2440  05D1  1383               	bcf	3,7	;select IRP bank0
  2441  05D2  0080               	movwf	0
  2442  05D3  3001               	movlw	1
  2443  05D4  00A5               	movwf	??_sprintf^(0+128)
  2444  05D5  0825               	movf	??_sprintf^(0+128),w
  2445  05D6  07BB               	addwf	sprintf@sp^(0+128),f
  2446  05D7                     l239:	
  2447                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1223:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1225:    }
  2448                           
  2449                           
  2450                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1215:    wh
      +                          ile(c--) {
  2451  05D7  3001               	movlw	1
  2452  05D8  02C2               	subwf	sprintf@c^(0+128),f
  2453  05D9  0A42               	incf	sprintf@c^(0+128),w
  2454  05DA  1903               	btfsc	3,2
  2455  05DB  2E4C               	goto	l3317
  2456                           
  2457                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1219:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1220:      
      +                          tmpval.vd = val/dpowers[c];
  2458  05DC  0842               	movf	sprintf@c^(0+128),w
  2459  05DD  00A5               	movwf	??_sprintf^(0+128)
  2460  05DE  3001               	movlw	1
  2461  05DF                     u5575:	
  2462  05DF  1003               	clrc
  2463  05E0  0DA5               	rlf	??_sprintf^(0+128),f
  2464  05E1  3EFF               	addlw	-1
  2465  05E2  1D03               	skipz
  2466  05E3  2DDF               	goto	u5575
  2467  05E4  1003               	clrc
  2468  05E5  0D25               	rlf	??_sprintf^(0+128),w
  2469  05E6  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2470  05E7  0084               	movwf	4
  2471  05E8  160A  118A  200A  120A  118A  	fcall	stringdir
  2472  05ED  00F0               	movwf	___lldiv@divisor
  2473  05EE  160A  118A  200A  120A  118A  	fcall	stringdir
  2474  05F3  00F1               	movwf	___lldiv@divisor+1
  2475  05F4  160A  118A  200A  120A  118A  	fcall	stringdir
  2476  05F9  00F2               	movwf	___lldiv@divisor+2
  2477  05FA  160A  118A  200A  120A  118A  	fcall	stringdir
  2478  05FF  00F3               	movwf	___lldiv@divisor+3
  2479  0600  0834               	movf	(sprintf@val+3)^(0+128),w
  2480  0601  00F7               	movwf	___lldiv@dividend+3
  2481  0602  0833               	movf	(sprintf@val+2)^(0+128),w
  2482  0603  00F6               	movwf	___lldiv@dividend+2
  2483  0604  0832               	movf	(sprintf@val+1)^(0+128),w
  2484  0605  00F5               	movwf	___lldiv@dividend+1
  2485  0606  0831               	movf	sprintf@val^(0+128),w
  2486  0607  00F4               	movwf	___lldiv@dividend
  2487  0608  160A  118A  20E4  120A  118A  	fcall	___lldiv
  2488  060D  0873               	movf	?___lldiv+3,w
  2489  060E  1683               	bsf	3,5	;RP0=1, select bank1
  2490  060F  1303               	bcf	3,6	;RP1=0, select bank1
  2491  0610  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2492  0611  0872               	movf	?___lldiv+2,w
  2493  0612  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2494  0613  0871               	movf	?___lldiv+1,w
  2495  0614  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2496  0615  0870               	movf	?___lldiv,w
  2497  0616  00B7               	movwf	sprintf@tmpval^(0+128)
  2498                           
  2499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1221:      
      +                          tmpval.vd %= 10;
  2500  0617  3000               	movlw	0
  2501  0618  00F3               	movwf	___llmod@divisor+3
  2502  0619  3000               	movlw	0
  2503  061A  00F2               	movwf	___llmod@divisor+2
  2504  061B  3000               	movlw	0
  2505  061C  00F1               	movwf	___llmod@divisor+1
  2506  061D  300A               	movlw	10
  2507  061E  00F0               	movwf	___llmod@divisor
  2508  061F  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2509  0620  00F7               	movwf	___llmod@dividend+3
  2510  0621  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2511  0622  00F6               	movwf	___llmod@dividend+2
  2512  0623  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2513  0624  00F5               	movwf	___llmod@dividend+1
  2514  0625  0837               	movf	sprintf@tmpval^(0+128),w
  2515  0626  00F4               	movwf	___llmod@dividend
  2516  0627  160A  158A  2759  120A  118A  	fcall	___llmod
  2517  062C  0873               	movf	?___llmod+3,w
  2518  062D  1683               	bsf	3,5	;RP0=1, select bank1
  2519  062E  1303               	bcf	3,6	;RP1=0, select bank1
  2520  062F  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2521  0630  0872               	movf	?___llmod+2,w
  2522  0631  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2523  0632  0871               	movf	?___llmod+1,w
  2524  0633  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2525  0634  0870               	movf	?___llmod,w
  2526  0635  00B7               	movwf	sprintf@tmpval^(0+128)
  2527                           
  2528                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1222:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
  2529  0636  0837               	movf	sprintf@tmpval^(0+128),w
  2530  0637  3E30               	addlw	48
  2531  0638  2DCD               	goto	L3
  2532  0639                     l3311:	
  2533                           
  2534                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1227:     (
      +                          (*sp++ = ('0')));
  2535  0639  3030               	movlw	48
  2536  063A  1683               	bsf	3,5	;RP0=1, select bank1
  2537  063B  1303               	bcf	3,6	;RP1=0, select bank1
  2538  063C  00A5               	movwf	??_sprintf^(0+128)
  2539  063D  083B               	movf	sprintf@sp^(0+128),w
  2540  063E  0084               	movwf	4
  2541  063F  0825               	movf	??_sprintf^(0+128),w
  2542  0640  1383               	bcf	3,7	;select IRP bank0
  2543  0641  0080               	movwf	0
  2544  0642  3001               	movlw	1
  2545  0643  00A5               	movwf	??_sprintf^(0+128)
  2546  0644  0825               	movf	??_sprintf^(0+128),w
  2547  0645  07BB               	addwf	sprintf@sp^(0+128),f
  2548                           
  2549                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1228:     e
      +                          exp--;
  2550  0646  30FF               	movlw	255
  2551  0647  07B5               	addwf	sprintf@eexp^(0+128),f
  2552  0648  1803               	skipnc
  2553  0649  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2554  064A  30FF               	movlw	255
  2555  064B  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2556  064C                     l3317:	
  2557                           
  2558                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1226:    wh
      +                          ile(eexp > 0) {
  2559  064C  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2560  064D  3A80               	xorlw	128
  2561  064E  00FF               	movwf	127
  2562  064F  3080               	movlw	128
  2563  0650  027F               	subwf	127,w
  2564  0651  1D03               	skipz
  2565  0652  2E55               	goto	u5595
  2566  0653  3001               	movlw	1
  2567  0654  0235               	subwf	sprintf@eexp^(0+128),w
  2568  0655                     u5595:	
  2569  0655  1803               	skipnc
  2570  0656  2E39               	goto	l3311
  2571                           
  2572                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1230:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2573  0657  1683               	bsf	3,5	;RP0=1, select bank1
  2574  0658  1303               	bcf	3,6	;RP1=0, select bank1
  2575  0659  083D               	movf	(sprintf@prec+1)^(0+128),w
  2576  065A  3A80               	xorlw	128
  2577  065B  00FF               	movwf	127
  2578  065C  3080               	movlw	128
  2579  065D  027F               	subwf	127,w
  2580  065E  1D03               	skipz
  2581  065F  2E62               	goto	u5605
  2582  0660  3009               	movlw	9
  2583  0661  023C               	subwf	sprintf@prec^(0+128),w
  2584  0662                     u5605:	
  2585  0662  1C03               	skipc
  2586  0663  2E68               	goto	l3323
  2587                           
  2588                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1231:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
  2589  0664  3008               	movlw	8
  2590  0665  1683               	bsf	3,5	;RP0=1, select bank1
  2591  0666  1303               	bcf	3,6	;RP1=0, select bank1
  2592  0667  2E6B               	goto	L4
  2593  0668                     l3323:	
  2594                           
  2595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1233:     c
      +                           = (char)prec;
  2596  0668  1683               	bsf	3,5	;RP0=1, select bank1
  2597  0669  1303               	bcf	3,6	;RP1=0, select bank1
  2598  066A  083C               	movf	sprintf@prec^(0+128),w
  2599  066B                     L4:	
  2600  066B  00A5               	movwf	??_sprintf^(0+128)
  2601  066C  0825               	movf	??_sprintf^(0+128),w
  2602  066D  00C2               	movwf	sprintf@c^(0+128)
  2603                           
  2604                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1234:    pr
      +                          ec -= (int)c;
  2605  066E  0842               	movf	sprintf@c^(0+128),w
  2606  066F  00A5               	movwf	??_sprintf^(0+128)
  2607  0670  01A6               	clrf	(??_sprintf^(0+128)+1)
  2608  0671  0825               	movf	??_sprintf^(0+128),w
  2609  0672  02BC               	subwf	sprintf@prec^(0+128),f
  2610  0673  0826               	movf	(??_sprintf+1)^(0+128),w
  2611  0674  1C03               	skipc
  2612  0675  03BD               	decf	(sprintf@prec+1)^(0+128),f
  2613  0676  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  2614                           
  2615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1238:    if
      +                          (c)
  2616  0677  0842               	movf	sprintf@c^(0+128),w
  2617  0678  1903               	btfsc	3,2
  2618  0679  2E85               	goto	l3331
  2619                           
  2620                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1240:     (
      +                          (*sp++ = ('.')));
  2621  067A  302E               	movlw	46
  2622  067B  00A5               	movwf	??_sprintf^(0+128)
  2623  067C  083B               	movf	sprintf@sp^(0+128),w
  2624  067D  0084               	movwf	4
  2625  067E  0825               	movf	??_sprintf^(0+128),w
  2626  067F  1383               	bcf	3,7	;select IRP bank0
  2627  0680  0080               	movwf	0
  2628  0681  3001               	movlw	1
  2629  0682  00A5               	movwf	??_sprintf^(0+128)
  2630  0683  0825               	movf	??_sprintf^(0+128),w
  2631  0684  07BB               	addwf	sprintf@sp^(0+128),f
  2632  0685                     l3331:	
  2633                           
  2634                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2635  0685  0842               	movf	sprintf@c^(0+128),w
  2636  0686  120A  158A  24B7  120A  118A  	fcall	_scale
  2637  068B  1283               	bcf	3,5	;RP0=0, select bank0
  2638  068C  1303               	bcf	3,6	;RP1=0, select bank0
  2639  068D  0843               	movf	?_scale+3,w
  2640  068E  1683               	bsf	3,5	;RP0=1, select bank1
  2641  068F  1303               	bcf	3,6	;RP1=0, select bank1
  2642  0690  00AD               	movwf	(_sprintf$876+3)^(0+128)
  2643  0691  1283               	bcf	3,5	;RP0=0, select bank0
  2644  0692  1303               	bcf	3,6	;RP1=0, select bank0
  2645  0693  0842               	movf	?_scale+2,w
  2646  0694  1683               	bsf	3,5	;RP0=1, select bank1
  2647  0695  1303               	bcf	3,6	;RP1=0, select bank1
  2648  0696  00AC               	movwf	(_sprintf$876+2)^(0+128)
  2649  0697  1283               	bcf	3,5	;RP0=0, select bank0
  2650  0698  1303               	bcf	3,6	;RP1=0, select bank0
  2651  0699  0841               	movf	?_scale+1,w
  2652  069A  1683               	bsf	3,5	;RP0=1, select bank1
  2653  069B  1303               	bcf	3,6	;RP1=0, select bank1
  2654  069C  00AB               	movwf	(_sprintf$876+1)^(0+128)
  2655  069D  1283               	bcf	3,5	;RP0=0, select bank0
  2656  069E  1303               	bcf	3,6	;RP1=0, select bank0
  2657  069F  0840               	movf	?_scale,w
  2658  06A0  1683               	bsf	3,5	;RP0=1, select bank1
  2659  06A1  1303               	bcf	3,6	;RP1=0, select bank1
  2660  06A2  00AA               	movwf	_sprintf$876^(0+128)
  2661                           
  2662                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2663  06A3  082D               	movf	(_sprintf$876+3)^(0+128),w
  2664  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  2665  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  2666  06A6  00AD               	movwf	___flmul@a+3
  2667  06A7  1683               	bsf	3,5	;RP0=1, select bank1
  2668  06A8  1303               	bcf	3,6	;RP1=0, select bank1
  2669  06A9  082C               	movf	(_sprintf$876+2)^(0+128),w
  2670  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  2671  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  2672  06AC  00AC               	movwf	___flmul@a+2
  2673  06AD  1683               	bsf	3,5	;RP0=1, select bank1
  2674  06AE  1303               	bcf	3,6	;RP1=0, select bank1
  2675  06AF  082B               	movf	(_sprintf$876+1)^(0+128),w
  2676  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  2677  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  2678  06B2  00AB               	movwf	___flmul@a+1
  2679  06B3  1683               	bsf	3,5	;RP0=1, select bank1
  2680  06B4  1303               	bcf	3,6	;RP1=0, select bank1
  2681  06B5  082A               	movf	_sprintf$876^(0+128),w
  2682  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  2683  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  2684  06B8  00AA               	movwf	___flmul@a
  2685  06B9  1683               	bsf	3,5	;RP0=1, select bank1
  2686  06BA  1303               	bcf	3,6	;RP1=0, select bank1
  2687  06BB  0841               	movf	(sprintf@fval+3)^(0+128),w
  2688  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  2689  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  2690  06BE  00A9               	movwf	___flmul@b+3
  2691  06BF  1683               	bsf	3,5	;RP0=1, select bank1
  2692  06C0  1303               	bcf	3,6	;RP1=0, select bank1
  2693  06C1  0840               	movf	(sprintf@fval+2)^(0+128),w
  2694  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  2695  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  2696  06C4  00A8               	movwf	___flmul@b+2
  2697  06C5  1683               	bsf	3,5	;RP0=1, select bank1
  2698  06C6  1303               	bcf	3,6	;RP1=0, select bank1
  2699  06C7  083F               	movf	(sprintf@fval+1)^(0+128),w
  2700  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  2701  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  2702  06CA  00A7               	movwf	___flmul@b+1
  2703  06CB  1683               	bsf	3,5	;RP0=1, select bank1
  2704  06CC  1303               	bcf	3,6	;RP1=0, select bank1
  2705  06CD  083E               	movf	sprintf@fval^(0+128),w
  2706  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  2707  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  2708  06D0  00A6               	movwf	___flmul@b
  2709  06D1  120A  158A  21A2  120A  118A  	fcall	___flmul
  2710  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  2711  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  2712  06D8  0829               	movf	?___flmul+3,w
  2713  06D9  00D6               	movwf	___fltol@f1+3
  2714  06DA  0828               	movf	?___flmul+2,w
  2715  06DB  00D5               	movwf	___fltol@f1+2
  2716  06DC  0827               	movf	?___flmul+1,w
  2717  06DD  00D4               	movwf	___fltol@f1+1
  2718  06DE  0826               	movf	?___flmul,w
  2719  06DF  00D3               	movwf	___fltol@f1
  2720  06E0  120A  158A  2020  120A  118A  	fcall	___fltol
  2721  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  2722  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  2723  06E7  0856               	movf	?___fltol+3,w
  2724  06E8  1683               	bsf	3,5	;RP0=1, select bank1
  2725  06E9  1303               	bcf	3,6	;RP1=0, select bank1
  2726  06EA  00B4               	movwf	(sprintf@val+3)^(0+128)
  2727  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  2728  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  2729  06ED  0855               	movf	?___fltol+2,w
  2730  06EE  1683               	bsf	3,5	;RP0=1, select bank1
  2731  06EF  1303               	bcf	3,6	;RP1=0, select bank1
  2732  06F0  00B3               	movwf	(sprintf@val+2)^(0+128)
  2733  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  2734  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  2735  06F3  0854               	movf	?___fltol+1,w
  2736  06F4  1683               	bsf	3,5	;RP0=1, select bank1
  2737  06F5  1303               	bcf	3,6	;RP1=0, select bank1
  2738  06F6  00B2               	movwf	(sprintf@val+1)^(0+128)
  2739  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  2740  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  2741  06F9  0853               	movf	?___fltol,w
  2742  06FA  1683               	bsf	3,5	;RP0=1, select bank1
  2743  06FB  1303               	bcf	3,6	;RP1=0, select bank1
  2744  06FC                     L5:	
  2745  06FC  00B1               	movwf	sprintf@val^(0+128)
  2746                           
  2747                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  2748  06FD  3001               	movlw	1
  2749  06FE  02C2               	subwf	sprintf@c^(0+128),f
  2750  06FF  0A42               	incf	sprintf@c^(0+128),w
  2751  0700  1903               	btfsc	3,2
  2752  0701  2FB4               	goto	l3351
  2753                           
  2754                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1248:     t
      +                          mpval.vd = val/dpowers[c];
  2755                           
  2756                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  2757  0702  0842               	movf	sprintf@c^(0+128),w
  2758  0703  00A5               	movwf	??_sprintf^(0+128)
  2759  0704  3001               	movlw	1
  2760  0705                     u5625:	
  2761  0705  1003               	clrc
  2762  0706  0DA5               	rlf	??_sprintf^(0+128),f
  2763  0707  3EFF               	addlw	-1
  2764  0708  1D03               	skipz
  2765  0709  2F05               	goto	u5625
  2766  070A  1003               	clrc
  2767  070B  0D25               	rlf	??_sprintf^(0+128),w
  2768  070C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2769  070D  0084               	movwf	4
  2770  070E  160A  118A  200A  120A  118A  	fcall	stringdir
  2771  0713  00F0               	movwf	___lldiv@divisor
  2772  0714  160A  118A  200A  120A  118A  	fcall	stringdir
  2773  0719  00F1               	movwf	___lldiv@divisor+1
  2774  071A  160A  118A  200A  120A  118A  	fcall	stringdir
  2775  071F  00F2               	movwf	___lldiv@divisor+2
  2776  0720  160A  118A  200A  120A  118A  	fcall	stringdir
  2777  0725  00F3               	movwf	___lldiv@divisor+3
  2778  0726  0834               	movf	(sprintf@val+3)^(0+128),w
  2779  0727  00F7               	movwf	___lldiv@dividend+3
  2780  0728  0833               	movf	(sprintf@val+2)^(0+128),w
  2781  0729  00F6               	movwf	___lldiv@dividend+2
  2782  072A  0832               	movf	(sprintf@val+1)^(0+128),w
  2783  072B  00F5               	movwf	___lldiv@dividend+1
  2784  072C  0831               	movf	sprintf@val^(0+128),w
  2785  072D  00F4               	movwf	___lldiv@dividend
  2786  072E  160A  118A  20E4  120A  118A  	fcall	___lldiv
  2787  0733  0873               	movf	?___lldiv+3,w
  2788  0734  1683               	bsf	3,5	;RP0=1, select bank1
  2789  0735  1303               	bcf	3,6	;RP1=0, select bank1
  2790  0736  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2791  0737  0872               	movf	?___lldiv+2,w
  2792  0738  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2793  0739  0871               	movf	?___lldiv+1,w
  2794  073A  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2795  073B  0870               	movf	?___lldiv,w
  2796  073C  00B7               	movwf	sprintf@tmpval^(0+128)
  2797                           
  2798                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1249:     t
      +                          mpval.vd %= 10;
  2799  073D  3000               	movlw	0
  2800  073E  00F3               	movwf	___llmod@divisor+3
  2801  073F  3000               	movlw	0
  2802  0740  00F2               	movwf	___llmod@divisor+2
  2803  0741  3000               	movlw	0
  2804  0742  00F1               	movwf	___llmod@divisor+1
  2805  0743  300A               	movlw	10
  2806  0744  00F0               	movwf	___llmod@divisor
  2807  0745  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2808  0746  00F7               	movwf	___llmod@dividend+3
  2809  0747  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2810  0748  00F6               	movwf	___llmod@dividend+2
  2811  0749  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2812  074A  00F5               	movwf	___llmod@dividend+1
  2813  074B  0837               	movf	sprintf@tmpval^(0+128),w
  2814  074C  00F4               	movwf	___llmod@dividend
  2815  074D  160A  158A  2759  120A  118A  	fcall	___llmod
  2816  0752  0873               	movf	?___llmod+3,w
  2817  0753  1683               	bsf	3,5	;RP0=1, select bank1
  2818  0754  1303               	bcf	3,6	;RP1=0, select bank1
  2819  0755  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2820  0756  0872               	movf	?___llmod+2,w
  2821  0757  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2822  0758  0871               	movf	?___llmod+1,w
  2823  0759  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2824  075A  0870               	movf	?___llmod,w
  2825  075B  00B7               	movwf	sprintf@tmpval^(0+128)
  2826                           
  2827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1250:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
  2828  075C  0837               	movf	sprintf@tmpval^(0+128),w
  2829  075D  3E30               	addlw	48
  2830  075E  00A5               	movwf	??_sprintf^(0+128)
  2831  075F  083B               	movf	sprintf@sp^(0+128),w
  2832  0760  0084               	movwf	4
  2833  0761  0825               	movf	??_sprintf^(0+128),w
  2834  0762  1383               	bcf	3,7	;select IRP bank0
  2835  0763  0080               	movwf	0
  2836  0764  3001               	movlw	1
  2837  0765  00A5               	movwf	??_sprintf^(0+128)
  2838  0766  0825               	movf	??_sprintf^(0+128),w
  2839  0767  07BB               	addwf	sprintf@sp^(0+128),f
  2840                           
  2841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1251:     v
      +                          al %= dpowers[c];
  2842  0768  0842               	movf	sprintf@c^(0+128),w
  2843  0769  00A5               	movwf	??_sprintf^(0+128)
  2844  076A  3001               	movlw	1
  2845  076B                     u5635:	
  2846  076B  1003               	clrc
  2847  076C  0DA5               	rlf	??_sprintf^(0+128),f
  2848  076D  3EFF               	addlw	-1
  2849  076E  1D03               	skipz
  2850  076F  2F6B               	goto	u5635
  2851  0770  1003               	clrc
  2852  0771  0D25               	rlf	??_sprintf^(0+128),w
  2853  0772  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2854  0773  0084               	movwf	4
  2855  0774  160A  118A  200A  120A  118A  	fcall	stringdir
  2856  0779  00F0               	movwf	___llmod@divisor
  2857  077A  160A  118A  200A  120A  118A  	fcall	stringdir
  2858  077F  00F1               	movwf	___llmod@divisor+1
  2859  0780  160A  118A  200A  120A  118A  	fcall	stringdir
  2860  0785  00F2               	movwf	___llmod@divisor+2
  2861  0786  160A  118A  200A  120A  118A  	fcall	stringdir
  2862  078B  00F3               	movwf	___llmod@divisor+3
  2863  078C  0834               	movf	(sprintf@val+3)^(0+128),w
  2864  078D  00F7               	movwf	___llmod@dividend+3
  2865  078E  0833               	movf	(sprintf@val+2)^(0+128),w
  2866  078F  00F6               	movwf	___llmod@dividend+2
  2867  0790  0832               	movf	(sprintf@val+1)^(0+128),w
  2868  0791  00F5               	movwf	___llmod@dividend+1
  2869  0792  0831               	movf	sprintf@val^(0+128),w
  2870  0793  00F4               	movwf	___llmod@dividend
  2871  0794  160A  158A  2759  120A  118A  	fcall	___llmod
  2872  0799  0873               	movf	?___llmod+3,w
  2873  079A  1683               	bsf	3,5	;RP0=1, select bank1
  2874  079B  1303               	bcf	3,6	;RP1=0, select bank1
  2875  079C  00B4               	movwf	(sprintf@val+3)^(0+128)
  2876  079D  0872               	movf	?___llmod+2,w
  2877  079E  00B3               	movwf	(sprintf@val+2)^(0+128)
  2878  079F  0871               	movf	?___llmod+1,w
  2879  07A0  00B2               	movwf	(sprintf@val+1)^(0+128)
  2880  07A1  0870               	movf	?___llmod,w
  2881  07A2  2EFC               	goto	L5
  2882  07A3                     l3345:	
  2883                           
  2884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1255:     (
      +                          (*sp++ = ('0')));
  2885  07A3  3030               	movlw	48
  2886  07A4  00A5               	movwf	??_sprintf^(0+128)
  2887  07A5  083B               	movf	sprintf@sp^(0+128),w
  2888  07A6  0084               	movwf	4
  2889  07A7  0825               	movf	??_sprintf^(0+128),w
  2890  07A8  1383               	bcf	3,7	;select IRP bank0
  2891  07A9  0080               	movwf	0
  2892  07AA  3001               	movlw	1
  2893  07AB  00A5               	movwf	??_sprintf^(0+128)
  2894  07AC  0825               	movf	??_sprintf^(0+128),w
  2895  07AD  07BB               	addwf	sprintf@sp^(0+128),f
  2896                           
  2897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1256:     p
      +                          rec--;
  2898  07AE  30FF               	movlw	255
  2899  07AF  07BC               	addwf	sprintf@prec^(0+128),f
  2900  07B0  1803               	skipnc
  2901  07B1  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  2902  07B2  30FF               	movlw	255
  2903  07B3  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  2904  07B4                     l3351:	
  2905                           
  2906                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(prec) {
  2907  07B4  083C               	movf	sprintf@prec^(0+128),w
  2908  07B5  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  2909  07B6  1903               	btfsc	3,2
  2910  07B7  2A0C               	goto	l3371
  2911  07B8  2FA3               	goto	l3345
  2912  07B9                     l3353:	
  2913                           
  2914                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1309:   if(
      +                          prec == 0 && val == 0)
  2915  07B9  083C               	movf	sprintf@prec^(0+128),w
  2916  07BA  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  2917  07BB  1D03               	btfss	3,2
  2918  07BC  2FC9               	goto	l254
  2919  07BD  0834               	movf	(sprintf@val+3)^(0+128),w
  2920  07BE  0433               	iorwf	(sprintf@val+2)^(0+128),w
  2921  07BF  0432               	iorwf	(sprintf@val+1)^(0+128),w
  2922  07C0  0431               	iorwf	sprintf@val^(0+128),w
  2923  07C1  1D03               	skipz
  2924  07C2  2FC9               	goto	l254
  2925                           
  2926                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1310:    pr
      +                          ec++;
  2927  07C3  3001               	movlw	1
  2928  07C4  07BC               	addwf	sprintf@prec^(0+128),f
  2929  07C5  1803               	skipnc
  2930  07C6  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  2931  07C7  3000               	movlw	0
  2932  07C8  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  2933  07C9                     l254:	
  2934                           
  2935                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1358:   if(
      +                          c < prec)
  2936  07C9  083D               	movf	(sprintf@prec+1)^(0+128),w
  2937  07CA  3A80               	xorlw	128
  2938  07CB  3C80               	sublw	128
  2939  07CC  1D03               	skipz
  2940  07CD  2FD0               	goto	u5685
  2941  07CE  083C               	movf	sprintf@prec^(0+128),w
  2942  07CF  0242               	subwf	sprintf@c^(0+128),w
  2943  07D0                     u5685:	
  2944  07D0  1C03               	btfss	3,0
  2945  07D1  2FDF               	goto	l3365
  2946  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  2947  07D3  1303               	bcf	3,6	;RP1=0, select bank1
  2948  07D4  083D               	movf	(sprintf@prec+1)^(0+128),w
  2949  07D5  3A80               	xorlw	128
  2950  07D6  00A5               	movwf	??_sprintf^(0+128)
  2951  07D7  3080               	movlw	128
  2952  07D8  0225               	subwf	??_sprintf^(0+128),w
  2953  07D9  1D03               	skipz
  2954  07DA  2FDD               	goto	u5695
  2955  07DB  0842               	movf	sprintf@c^(0+128),w
  2956  07DC  023C               	subwf	sprintf@prec^(0+128),w
  2957  07DD                     u5695:	
  2958  07DD  1C03               	btfss	3,0
  2959  07DE  2FDF               	goto	l3365
  2960  07DF                     l3365:	
  2961                           
  2962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  2963  07DF  3003               	movlw	3
  2964  07E0  1683               	bsf	3,5	;RP0=1, select bank1
  2965  07E1  1303               	bcf	3,6	;RP1=0, select bank1
  2966  07E2  052F               	andwf	sprintf@flag^(0+128),w
  2967  07E3  00A5               	movwf	??_sprintf^(0+128)
  2968  07E4  3000               	movlw	0
  2969  07E5  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2970  07E6  00A6               	movwf	(??_sprintf+1)^(0+128)
  2971  07E7  0825               	movf	??_sprintf^(0+128),w
  2972  07E8  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2973  07E9  1903               	btfsc	3,2
  2974  07EA  2A0C               	goto	l3371
  2975                           
  2976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  2977  07EB  302D               	movlw	45
  2978  07EC                     L6:	
  2979  07EC  00A5               	movwf	??_sprintf^(0+128)
  2980  07ED  083B               	movf	sprintf@sp^(0+128),w
  2981  07EE  0084               	movwf	4
  2982  07EF  0825               	movf	??_sprintf^(0+128),w
  2983  07F0  1383               	bcf	3,7	;select IRP bank0
  2984  07F1  0080               	movwf	0
  2985  07F2  3001               	movlw	1
  2986  07F3  00A5               	movwf	??_sprintf^(0+128)
  2987  07F4  0825               	movf	??_sprintf^(0+128),w
  2988  07F5  07BB               	addwf	sprintf@sp^(0+128),f
  2989  07F6  2A0C               	goto	l3371
  2990  07F7                     l3373:	
  2991                           
  2992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  2993  07F7  083B               	movf	sprintf@sp^(0+128),w
  2994  07F8  0084               	movwf	4
  2995  07F9  1383               	bcf	3,7	;select IRP bank0
  2996  07FA  0180               	clrf	0
  2997  07FB  0008               	return
  2998  07FC                     __end_of_sprintf:	
  2999                           
  3000                           	psect	text2
  3001  0CB7                     __ptext2:	
  3002 ;; *************** function _scale *****************
  3003 ;; Defined at:
  3004 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;  scl             1    wreg     char 
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;  scl             1   50[BANK0 ] char 
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  4   32[BANK0 ] char 
  3011 ;; Registers used:
  3012 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3018 ;;      Params:         0       4       0       0       0
  3019 ;;      Locals:         0       5       0       0       0
  3020 ;;      Temps:          0      10       0       0       0
  3021 ;;      Totals:         0      19       0       0       0
  3022 ;;Total ram usage:       19 bytes
  3023 ;; Hardware stack levels used:    1
  3024 ;; Hardware stack levels required when called:    2
  3025 ;; This function calls:
  3026 ;;		___awdiv
  3027 ;;		___awmod
  3028 ;;		___flmul
  3029 ;; This function is called by:
  3030 ;;		_sprintf
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           
  3035                           ;psect for function _scale
  3036  0CB7                     _scale:	
  3037                           
  3038                           ;incstack = 0
  3039                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3040                           ;scale@scl stored from wreg
  3041  0CB7  1283               	bcf	3,5	;RP0=0, select bank0
  3042  0CB8  1303               	bcf	3,6	;RP1=0, select bank0
  3043  0CB9  00D2               	movwf	scale@scl
  3044                           
  3045                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  3046  0CBA  1FD2               	btfss	scale@scl,7
  3047  0CBB  2E5F               	goto	l2781
  3048                           
  3049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  3050  0CBC  09D2               	comf	scale@scl,f
  3051  0CBD  0AD2               	incf	scale@scl,f
  3052                           
  3053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  3054  0CBE  0852               	movf	scale@scl,w
  3055  0CBF  3A80               	xorlw	128
  3056  0CC0  3E12               	addlw	-238
  3057  0CC1  1C03               	skipc
  3058  0CC2  2DA9               	goto	l2771
  3059                           
  3060                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3061  0CC3  300A               	movlw	10
  3062  0CC4  00F7               	movwf	___awdiv@divisor
  3063  0CC5  3000               	movlw	0
  3064  0CC6  00F8               	movwf	___awdiv@divisor+1
  3065  0CC7  0852               	movf	scale@scl,w
  3066  0CC8  00F2               	movwf	___awmod@dividend
  3067  0CC9  01F3               	clrf	___awmod@dividend+1
  3068  0CCA  1BF2               	btfsc	___awmod@dividend,7
  3069  0CCB  03F3               	decf	___awmod@dividend+1,f
  3070  0CCC  3064               	movlw	100
  3071  0CCD  00F0               	movwf	___awmod@divisor
  3072  0CCE  3000               	movlw	0
  3073  0CCF  00F1               	movwf	___awmod@divisor+1
  3074  0CD0  160A  158A  270E  120A  158A  	fcall	___awmod
  3075  0CD5  0871               	movf	?___awmod+1,w
  3076  0CD6  00FA               	movwf	___awdiv@dividend+1
  3077  0CD7  0870               	movf	?___awmod,w
  3078  0CD8  00F9               	movwf	___awdiv@dividend
  3079  0CD9  160A  158A  27A5  120A  158A  	fcall	___awdiv
  3080  0CDE  0877               	movf	?___awdiv,w
  3081  0CDF  1283               	bcf	3,5	;RP0=0, select bank0
  3082  0CE0  1303               	bcf	3,6	;RP1=0, select bank0
  3083  0CE1  00C4               	movwf	??_scale
  3084  0CE2  3001               	movlw	1
  3085  0CE3                     u4345:	
  3086  0CE3  1003               	clrc
  3087  0CE4  0DC4               	rlf	??_scale,f
  3088  0CE5  3EFF               	addlw	-1
  3089  0CE6  1D03               	skipz
  3090  0CE7  2CE3               	goto	u4345
  3091  0CE8  1003               	clrc
  3092  0CE9  0D44               	rlf	??_scale,w
  3093  0CEA  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3094  0CEB  0084               	movwf	4
  3095  0CEC  160A  118A  200A  120A  158A  	fcall	stringdir
  3096  0CF1  00C5               	movwf	??_scale+1
  3097  0CF2  160A  118A  200A  120A  158A  	fcall	stringdir
  3098  0CF7  00C6               	movwf	??_scale+2
  3099  0CF8  160A  118A  200A  120A  158A  	fcall	stringdir
  3100  0CFD  00C7               	movwf	??_scale+3
  3101  0CFE  160A  118A  200A  120A  158A  	fcall	stringdir
  3102  0D03  00C8               	movwf	??_scale+4
  3103  0D04  0848               	movf	??_scale+4,w
  3104  0D05  00A9               	movwf	___flmul@b+3
  3105  0D06  0847               	movf	??_scale+3,w
  3106  0D07  00A8               	movwf	___flmul@b+2
  3107  0D08  0846               	movf	??_scale+2,w
  3108  0D09  00A7               	movwf	___flmul@b+1
  3109  0D0A  0845               	movf	??_scale+1,w
  3110  0D0B  00A6               	movwf	___flmul@b
  3111  0D0C  3064               	movlw	100
  3112  0D0D  00F7               	movwf	___awdiv@divisor
  3113  0D0E  3000               	movlw	0
  3114  0D0F  00F8               	movwf	___awdiv@divisor+1
  3115  0D10  0852               	movf	scale@scl,w
  3116  0D11  00F9               	movwf	___awdiv@dividend
  3117  0D12  01FA               	clrf	___awdiv@dividend+1
  3118  0D13  1BF9               	btfsc	___awdiv@dividend,7
  3119  0D14  03FA               	decf	___awdiv@dividend+1,f
  3120  0D15  160A  158A  27A5  120A  158A  	fcall	___awdiv
  3121  0D1A  0877               	movf	?___awdiv,w
  3122  0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  3123  0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  3124  0D1D  00C9               	movwf	??_scale+5
  3125  0D1E  3001               	movlw	1
  3126  0D1F                     u4355:	
  3127  0D1F  1003               	clrc
  3128  0D20  0DC9               	rlf	??_scale+5,f
  3129  0D21  3EFF               	addlw	-1
  3130  0D22  1D03               	skipz
  3131  0D23  2D1F               	goto	u4355
  3132  0D24  1003               	clrc
  3133  0D25  0D49               	rlf	??_scale+5,w
  3134  0D26  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3135  0D27  0084               	movwf	4
  3136  0D28  160A  118A  200A  120A  158A  	fcall	stringdir
  3137  0D2D  00CA               	movwf	??_scale+6
  3138  0D2E  160A  118A  200A  120A  158A  	fcall	stringdir
  3139  0D33  00CB               	movwf	??_scale+7
  3140  0D34  160A  118A  200A  120A  158A  	fcall	stringdir
  3141  0D39  00CC               	movwf	??_scale+8
  3142  0D3A  160A  118A  200A  120A  158A  	fcall	stringdir
  3143  0D3F  00CD               	movwf	??_scale+9
  3144  0D40  084D               	movf	??_scale+9,w
  3145  0D41  00AD               	movwf	___flmul@a+3
  3146  0D42  084C               	movf	??_scale+8,w
  3147  0D43  00AC               	movwf	___flmul@a+2
  3148  0D44  084B               	movf	??_scale+7,w
  3149  0D45  00AB               	movwf	___flmul@a+1
  3150  0D46  084A               	movf	??_scale+6,w
  3151  0D47  00AA               	movwf	___flmul@a
  3152  0D48  120A  158A  21A2  120A  158A  	fcall	___flmul
  3153  0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  3154  0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  3155  0D4F  0829               	movf	?___flmul+3,w
  3156  0D50  00D1               	movwf	_scale$875+3
  3157  0D51  0828               	movf	?___flmul+2,w
  3158  0D52  00D0               	movwf	_scale$875+2
  3159  0D53  0827               	movf	?___flmul+1,w
  3160  0D54  00CF               	movwf	_scale$875+1
  3161  0D55  0826               	movf	?___flmul,w
  3162  0D56  00CE               	movwf	_scale$875
  3163                           
  3164                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3165  0D57  300A               	movlw	10
  3166  0D58  00F0               	movwf	___awmod@divisor
  3167  0D59  3000               	movlw	0
  3168  0D5A  00F1               	movwf	___awmod@divisor+1
  3169  0D5B  0852               	movf	scale@scl,w
  3170  0D5C  00F2               	movwf	___awmod@dividend
  3171  0D5D  01F3               	clrf	___awmod@dividend+1
  3172  0D5E  1BF2               	btfsc	___awmod@dividend,7
  3173  0D5F  03F3               	decf	___awmod@dividend+1,f
  3174  0D60  160A  158A  270E  120A  158A  	fcall	___awmod
  3175  0D65  0870               	movf	?___awmod,w
  3176  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  3177  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  3178  0D68  00C4               	movwf	??_scale
  3179  0D69  3001               	movlw	1
  3180  0D6A                     u4365:	
  3181  0D6A  1003               	clrc
  3182  0D6B  0DC4               	rlf	??_scale,f
  3183  0D6C  3EFF               	addlw	-1
  3184  0D6D  1D03               	skipz
  3185  0D6E  2D6A               	goto	u4365
  3186  0D6F  1003               	clrc
  3187  0D70  0D44               	rlf	??_scale,w
  3188  0D71  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3189  0D72  0084               	movwf	4
  3190  0D73  160A  118A  200A  120A  158A  	fcall	stringdir
  3191  0D78  00C5               	movwf	??_scale+1
  3192  0D79  160A  118A  200A  120A  158A  	fcall	stringdir
  3193  0D7E  00C6               	movwf	??_scale+2
  3194  0D7F  160A  118A  200A  120A  158A  	fcall	stringdir
  3195  0D84  00C7               	movwf	??_scale+3
  3196  0D85  160A  118A  200A  120A  158A  	fcall	stringdir
  3197  0D8A  00C8               	movwf	??_scale+4
  3198  0D8B  0848               	movf	??_scale+4,w
  3199  0D8C  00A9               	movwf	___flmul@b+3
  3200  0D8D  0847               	movf	??_scale+3,w
  3201  0D8E  00A8               	movwf	___flmul@b+2
  3202  0D8F  0846               	movf	??_scale+2,w
  3203  0D90  00A7               	movwf	___flmul@b+1
  3204  0D91  0845               	movf	??_scale+1,w
  3205  0D92  00A6               	movwf	___flmul@b
  3206  0D93  0851               	movf	_scale$875+3,w
  3207  0D94  00AD               	movwf	___flmul@a+3
  3208  0D95  0850               	movf	_scale$875+2,w
  3209  0D96  00AC               	movwf	___flmul@a+2
  3210  0D97  084F               	movf	_scale$875+1,w
  3211  0D98  00AB               	movwf	___flmul@a+1
  3212  0D99  084E               	movf	_scale$875,w
  3213  0D9A  00AA               	movwf	___flmul@a
  3214  0D9B  120A  158A  21A2   	fcall	___flmul
  3215  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  3216  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  3217  0DA0  0829               	movf	?___flmul+3,w
  3218  0DA1  00C3               	movwf	?_scale+3
  3219  0DA2  0828               	movf	?___flmul+2,w
  3220  0DA3  00C2               	movwf	?_scale+2
  3221  0DA4  0827               	movf	?___flmul+1,w
  3222  0DA5  00C1               	movwf	?_scale+1
  3223  0DA6  0826               	movf	?___flmul,w
  3224  0DA7  00C0               	movwf	?_scale
  3225  0DA8  0008               	return
  3226  0DA9                     l2771:	
  3227  0DA9  0852               	movf	scale@scl,w
  3228  0DAA  3A80               	xorlw	128
  3229  0DAB  3E75               	addlw	-139
  3230  0DAC  1C03               	skipc
  3231  0DAD  2E34               	goto	l2777
  3232                           
  3233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3234  0DAE  300A               	movlw	10
  3235  0DAF  00F0               	movwf	___awmod@divisor
  3236  0DB0  3000               	movlw	0
  3237  0DB1  00F1               	movwf	___awmod@divisor+1
  3238  0DB2  0852               	movf	scale@scl,w
  3239  0DB3  00F2               	movwf	___awmod@dividend
  3240  0DB4  01F3               	clrf	___awmod@dividend+1
  3241  0DB5  1BF2               	btfsc	___awmod@dividend,7
  3242  0DB6  03F3               	decf	___awmod@dividend+1,f
  3243  0DB7  160A  158A  270E  120A  158A  	fcall	___awmod
  3244  0DBC  0870               	movf	?___awmod,w
  3245  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  3246  0DBE  1303               	bcf	3,6	;RP1=0, select bank0
  3247  0DBF  00C4               	movwf	??_scale
  3248  0DC0  3001               	movlw	1
  3249  0DC1                     u4385:	
  3250  0DC1  1003               	clrc
  3251  0DC2  0DC4               	rlf	??_scale,f
  3252  0DC3  3EFF               	addlw	-1
  3253  0DC4  1D03               	skipz
  3254  0DC5  2DC1               	goto	u4385
  3255  0DC6  1003               	clrc
  3256  0DC7  0D44               	rlf	??_scale,w
  3257  0DC8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3258  0DC9  0084               	movwf	4
  3259  0DCA  160A  118A  200A  120A  158A  	fcall	stringdir
  3260  0DCF  00C5               	movwf	??_scale+1
  3261  0DD0  160A  118A  200A  120A  158A  	fcall	stringdir
  3262  0DD5  00C6               	movwf	??_scale+2
  3263  0DD6  160A  118A  200A  120A  158A  	fcall	stringdir
  3264  0DDB  00C7               	movwf	??_scale+3
  3265  0DDC  160A  118A  200A  120A  158A  	fcall	stringdir
  3266  0DE1  00C8               	movwf	??_scale+4
  3267  0DE2  0848               	movf	??_scale+4,w
  3268  0DE3  00A9               	movwf	___flmul@b+3
  3269  0DE4  0847               	movf	??_scale+3,w
  3270  0DE5  00A8               	movwf	___flmul@b+2
  3271  0DE6  0846               	movf	??_scale+2,w
  3272  0DE7  00A7               	movwf	___flmul@b+1
  3273  0DE8  0845               	movf	??_scale+1,w
  3274  0DE9  00A6               	movwf	___flmul@b
  3275  0DEA  300A               	movlw	10
  3276  0DEB  00F7               	movwf	___awdiv@divisor
  3277  0DEC  3000               	movlw	0
  3278  0DED  00F8               	movwf	___awdiv@divisor+1
  3279  0DEE  0852               	movf	scale@scl,w
  3280  0DEF  00F9               	movwf	___awdiv@dividend
  3281  0DF0  01FA               	clrf	___awdiv@dividend+1
  3282  0DF1  1BF9               	btfsc	___awdiv@dividend,7
  3283  0DF2  03FA               	decf	___awdiv@dividend+1,f
  3284  0DF3  160A  158A  27A5  120A  158A  	fcall	___awdiv
  3285  0DF8  0877               	movf	?___awdiv,w
  3286  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  3287  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  3288  0DFB  00C9               	movwf	??_scale+5
  3289  0DFC  3001               	movlw	1
  3290  0DFD                     u4395:	
  3291  0DFD  1003               	clrc
  3292  0DFE  0DC9               	rlf	??_scale+5,f
  3293  0DFF  3EFF               	addlw	-1
  3294  0E00  1D03               	skipz
  3295  0E01  2DFD               	goto	u4395
  3296  0E02  1003               	clrc
  3297  0E03  0D49               	rlf	??_scale+5,w
  3298  0E04  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3299  0E05  0084               	movwf	4
  3300  0E06  160A  118A  200A  120A  158A  	fcall	stringdir
  3301  0E0B  00CA               	movwf	??_scale+6
  3302  0E0C  160A  118A  200A  120A  158A  	fcall	stringdir
  3303  0E11  00CB               	movwf	??_scale+7
  3304  0E12  160A  118A  200A  120A  158A  	fcall	stringdir
  3305  0E17  00CC               	movwf	??_scale+8
  3306  0E18  160A  118A  200A  120A  158A  	fcall	stringdir
  3307  0E1D  00CD               	movwf	??_scale+9
  3308  0E1E  084D               	movf	??_scale+9,w
  3309  0E1F  00AD               	movwf	___flmul@a+3
  3310  0E20  084C               	movf	??_scale+8,w
  3311  0E21  00AC               	movwf	___flmul@a+2
  3312  0E22  084B               	movf	??_scale+7,w
  3313  0E23  00AB               	movwf	___flmul@a+1
  3314  0E24  084A               	movf	??_scale+6,w
  3315  0E25  00AA               	movwf	___flmul@a
  3316  0E26  120A  158A  21A2   	fcall	___flmul
  3317  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  3318  0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  3319  0E2B  0829               	movf	?___flmul+3,w
  3320  0E2C  00C3               	movwf	?_scale+3
  3321  0E2D  0828               	movf	?___flmul+2,w
  3322  0E2E  00C2               	movwf	?_scale+2
  3323  0E2F  0827               	movf	?___flmul+1,w
  3324  0E30  00C1               	movwf	?_scale+1
  3325  0E31  0826               	movf	?___flmul,w
  3326  0E32  00C0               	movwf	?_scale
  3327  0E33  0008               	return
  3328  0E34                     l2777:	
  3329                           
  3330                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  3331  0E34  0852               	movf	scale@scl,w
  3332  0E35  00C4               	movwf	??_scale
  3333  0E36  3001               	movlw	1
  3334  0E37                     u4405:	
  3335  0E37  1003               	clrc
  3336  0E38  0DC4               	rlf	??_scale,f
  3337  0E39  3EFF               	addlw	-1
  3338  0E3A  1D03               	skipz
  3339  0E3B  2E37               	goto	u4405
  3340  0E3C  1003               	clrc
  3341  0E3D  0D44               	rlf	??_scale,w
  3342  0E3E  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3343  0E3F  0084               	movwf	4
  3344  0E40  160A  118A  200A  120A  158A  	fcall	stringdir
  3345  0E45  00C5               	movwf	??_scale+1
  3346  0E46  160A  118A  200A  120A  158A  	fcall	stringdir
  3347  0E4B  00C6               	movwf	??_scale+2
  3348  0E4C  160A  118A  200A  120A  158A  	fcall	stringdir
  3349  0E51  00C7               	movwf	??_scale+3
  3350  0E52  160A  118A  200A   	fcall	stringdir
  3351  0E55  00C8               	movwf	??_scale+4
  3352  0E56  0848               	movf	??_scale+4,w
  3353  0E57  00C3               	movwf	?_scale+3
  3354  0E58  0847               	movf	??_scale+3,w
  3355  0E59  00C2               	movwf	?_scale+2
  3356  0E5A  0846               	movf	??_scale+2,w
  3357  0E5B  00C1               	movwf	?_scale+1
  3358  0E5C  0845               	movf	??_scale+1,w
  3359  0E5D  00C0               	movwf	?_scale
  3360  0E5E  0008               	return
  3361  0E5F                     l2781:	
  3362                           
  3363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  3364  0E5F  0852               	movf	scale@scl,w
  3365  0E60  3A80               	xorlw	128
  3366  0E61  3E12               	addlw	-238
  3367  0E62  1C03               	skipc
  3368  0E63  2F4A               	goto	l2789
  3369                           
  3370                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3371  0E64  300A               	movlw	10
  3372  0E65  00F7               	movwf	___awdiv@divisor
  3373  0E66  3000               	movlw	0
  3374  0E67  00F8               	movwf	___awdiv@divisor+1
  3375  0E68  0852               	movf	scale@scl,w
  3376  0E69  00F2               	movwf	___awmod@dividend
  3377  0E6A  01F3               	clrf	___awmod@dividend+1
  3378  0E6B  1BF2               	btfsc	___awmod@dividend,7
  3379  0E6C  03F3               	decf	___awmod@dividend+1,f
  3380  0E6D  3064               	movlw	100
  3381  0E6E  00F0               	movwf	___awmod@divisor
  3382  0E6F  3000               	movlw	0
  3383  0E70  00F1               	movwf	___awmod@divisor+1
  3384  0E71  160A  158A  270E  120A  158A  	fcall	___awmod
  3385  0E76  0871               	movf	?___awmod+1,w
  3386  0E77  00FA               	movwf	___awdiv@dividend+1
  3387  0E78  0870               	movf	?___awmod,w
  3388  0E79  00F9               	movwf	___awdiv@dividend
  3389  0E7A  160A  158A  27A5  120A  158A  	fcall	___awdiv
  3390  0E7F  0877               	movf	?___awdiv,w
  3391  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  3392  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  3393  0E82  00C4               	movwf	??_scale
  3394  0E83  3001               	movlw	1
  3395  0E84                     u4425:	
  3396  0E84  1003               	clrc
  3397  0E85  0DC4               	rlf	??_scale,f
  3398  0E86  3EFF               	addlw	-1
  3399  0E87  1D03               	skipz
  3400  0E88  2E84               	goto	u4425
  3401  0E89  1003               	clrc
  3402  0E8A  0D44               	rlf	??_scale,w
  3403  0E8B  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3404  0E8C  0084               	movwf	4
  3405  0E8D  160A  118A  200A  120A  158A  	fcall	stringdir
  3406  0E92  00C5               	movwf	??_scale+1
  3407  0E93  160A  118A  200A  120A  158A  	fcall	stringdir
  3408  0E98  00C6               	movwf	??_scale+2
  3409  0E99  160A  118A  200A  120A  158A  	fcall	stringdir
  3410  0E9E  00C7               	movwf	??_scale+3
  3411  0E9F  160A  118A  200A  120A  158A  	fcall	stringdir
  3412  0EA4  00C8               	movwf	??_scale+4
  3413  0EA5  0848               	movf	??_scale+4,w
  3414  0EA6  00A9               	movwf	___flmul@b+3
  3415  0EA7  0847               	movf	??_scale+3,w
  3416  0EA8  00A8               	movwf	___flmul@b+2
  3417  0EA9  0846               	movf	??_scale+2,w
  3418  0EAA  00A7               	movwf	___flmul@b+1
  3419  0EAB  0845               	movf	??_scale+1,w
  3420  0EAC  00A6               	movwf	___flmul@b
  3421  0EAD  3064               	movlw	100
  3422  0EAE  00F7               	movwf	___awdiv@divisor
  3423  0EAF  3000               	movlw	0
  3424  0EB0  00F8               	movwf	___awdiv@divisor+1
  3425  0EB1  0852               	movf	scale@scl,w
  3426  0EB2  00F9               	movwf	___awdiv@dividend
  3427  0EB3  01FA               	clrf	___awdiv@dividend+1
  3428  0EB4  1BF9               	btfsc	___awdiv@dividend,7
  3429  0EB5  03FA               	decf	___awdiv@dividend+1,f
  3430  0EB6  160A  158A  27A5  120A  158A  	fcall	___awdiv
  3431  0EBB  0877               	movf	?___awdiv,w
  3432  0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  3433  0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  3434  0EBE  00C9               	movwf	??_scale+5
  3435  0EBF  3001               	movlw	1
  3436  0EC0                     u4435:	
  3437  0EC0  1003               	clrc
  3438  0EC1  0DC9               	rlf	??_scale+5,f
  3439  0EC2  3EFF               	addlw	-1
  3440  0EC3  1D03               	skipz
  3441  0EC4  2EC0               	goto	u4435
  3442  0EC5  1003               	clrc
  3443  0EC6  0D49               	rlf	??_scale+5,w
  3444  0EC7  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3445  0EC8  0084               	movwf	4
  3446  0EC9  160A  118A  200A  120A  158A  	fcall	stringdir
  3447  0ECE  00CA               	movwf	??_scale+6
  3448  0ECF  160A  118A  200A  120A  158A  	fcall	stringdir
  3449  0ED4  00CB               	movwf	??_scale+7
  3450  0ED5  160A  118A  200A  120A  158A  	fcall	stringdir
  3451  0EDA  00CC               	movwf	??_scale+8
  3452  0EDB  160A  118A  200A  120A  158A  	fcall	stringdir
  3453  0EE0  00CD               	movwf	??_scale+9
  3454  0EE1  084D               	movf	??_scale+9,w
  3455  0EE2  00AD               	movwf	___flmul@a+3
  3456  0EE3  084C               	movf	??_scale+8,w
  3457  0EE4  00AC               	movwf	___flmul@a+2
  3458  0EE5  084B               	movf	??_scale+7,w
  3459  0EE6  00AB               	movwf	___flmul@a+1
  3460  0EE7  084A               	movf	??_scale+6,w
  3461  0EE8  00AA               	movwf	___flmul@a
  3462  0EE9  120A  158A  21A2  120A  158A  	fcall	___flmul
  3463  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  3464  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  3465  0EF0  0829               	movf	?___flmul+3,w
  3466  0EF1  00D1               	movwf	_scale$875+3
  3467  0EF2  0828               	movf	?___flmul+2,w
  3468  0EF3  00D0               	movwf	_scale$875+2
  3469  0EF4  0827               	movf	?___flmul+1,w
  3470  0EF5  00CF               	movwf	_scale$875+1
  3471  0EF6  0826               	movf	?___flmul,w
  3472  0EF7  00CE               	movwf	_scale$875
  3473                           
  3474                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3475  0EF8  300A               	movlw	10
  3476  0EF9  00F0               	movwf	___awmod@divisor
  3477  0EFA  3000               	movlw	0
  3478  0EFB  00F1               	movwf	___awmod@divisor+1
  3479  0EFC  0852               	movf	scale@scl,w
  3480  0EFD  00F2               	movwf	___awmod@dividend
  3481  0EFE  01F3               	clrf	___awmod@dividend+1
  3482  0EFF  1BF2               	btfsc	___awmod@dividend,7
  3483  0F00  03F3               	decf	___awmod@dividend+1,f
  3484  0F01  160A  158A  270E  120A  158A  	fcall	___awmod
  3485  0F06  0870               	movf	?___awmod,w
  3486  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  3487  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  3488  0F09  00C4               	movwf	??_scale
  3489  0F0A  3001               	movlw	1
  3490  0F0B                     u4445:	
  3491  0F0B  1003               	clrc
  3492  0F0C  0DC4               	rlf	??_scale,f
  3493  0F0D  3EFF               	addlw	-1
  3494  0F0E  1D03               	skipz
  3495  0F0F  2F0B               	goto	u4445
  3496  0F10  1003               	clrc
  3497  0F11  0D44               	rlf	??_scale,w
  3498  0F12  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3499  0F13  0084               	movwf	4
  3500  0F14  160A  118A  200A  120A  158A  	fcall	stringdir
  3501  0F19  00C5               	movwf	??_scale+1
  3502  0F1A  160A  118A  200A  120A  158A  	fcall	stringdir
  3503  0F1F  00C6               	movwf	??_scale+2
  3504  0F20  160A  118A  200A  120A  158A  	fcall	stringdir
  3505  0F25  00C7               	movwf	??_scale+3
  3506  0F26  160A  118A  200A  120A  158A  	fcall	stringdir
  3507  0F2B  00C8               	movwf	??_scale+4
  3508  0F2C  0848               	movf	??_scale+4,w
  3509  0F2D  00A9               	movwf	___flmul@b+3
  3510  0F2E  0847               	movf	??_scale+3,w
  3511  0F2F  00A8               	movwf	___flmul@b+2
  3512  0F30  0846               	movf	??_scale+2,w
  3513  0F31  00A7               	movwf	___flmul@b+1
  3514  0F32  0845               	movf	??_scale+1,w
  3515  0F33  00A6               	movwf	___flmul@b
  3516  0F34  0851               	movf	_scale$875+3,w
  3517  0F35  00AD               	movwf	___flmul@a+3
  3518  0F36  0850               	movf	_scale$875+2,w
  3519  0F37  00AC               	movwf	___flmul@a+2
  3520  0F38  084F               	movf	_scale$875+1,w
  3521  0F39  00AB               	movwf	___flmul@a+1
  3522  0F3A  084E               	movf	_scale$875,w
  3523  0F3B  00AA               	movwf	___flmul@a
  3524  0F3C  120A  158A  21A2   	fcall	___flmul
  3525  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  3526  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  3527  0F41  0829               	movf	?___flmul+3,w
  3528  0F42  00C3               	movwf	?_scale+3
  3529  0F43  0828               	movf	?___flmul+2,w
  3530  0F44  00C2               	movwf	?_scale+2
  3531  0F45  0827               	movf	?___flmul+1,w
  3532  0F46  00C1               	movwf	?_scale+1
  3533  0F47  0826               	movf	?___flmul,w
  3534  0F48  00C0               	movwf	?_scale
  3535  0F49  0008               	return
  3536  0F4A                     l2789:	
  3537  0F4A  0852               	movf	scale@scl,w
  3538  0F4B  3A80               	xorlw	128
  3539  0F4C  3E75               	addlw	-139
  3540  0F4D  1C03               	skipc
  3541  0F4E  2FD5               	goto	l2795
  3542                           
  3543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3544  0F4F  300A               	movlw	10
  3545  0F50  00F0               	movwf	___awmod@divisor
  3546  0F51  3000               	movlw	0
  3547  0F52  00F1               	movwf	___awmod@divisor+1
  3548  0F53  0852               	movf	scale@scl,w
  3549  0F54  00F2               	movwf	___awmod@dividend
  3550  0F55  01F3               	clrf	___awmod@dividend+1
  3551  0F56  1BF2               	btfsc	___awmod@dividend,7
  3552  0F57  03F3               	decf	___awmod@dividend+1,f
  3553  0F58  160A  158A  270E  120A  158A  	fcall	___awmod
  3554  0F5D  0870               	movf	?___awmod,w
  3555  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  3556  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  3557  0F60  00C4               	movwf	??_scale
  3558  0F61  3001               	movlw	1
  3559  0F62                     u4465:	
  3560  0F62  1003               	clrc
  3561  0F63  0DC4               	rlf	??_scale,f
  3562  0F64  3EFF               	addlw	-1
  3563  0F65  1D03               	skipz
  3564  0F66  2F62               	goto	u4465
  3565  0F67  1003               	clrc
  3566  0F68  0D44               	rlf	??_scale,w
  3567  0F69  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3568  0F6A  0084               	movwf	4
  3569  0F6B  160A  118A  200A  120A  158A  	fcall	stringdir
  3570  0F70  00C5               	movwf	??_scale+1
  3571  0F71  160A  118A  200A  120A  158A  	fcall	stringdir
  3572  0F76  00C6               	movwf	??_scale+2
  3573  0F77  160A  118A  200A  120A  158A  	fcall	stringdir
  3574  0F7C  00C7               	movwf	??_scale+3
  3575  0F7D  160A  118A  200A  120A  158A  	fcall	stringdir
  3576  0F82  00C8               	movwf	??_scale+4
  3577  0F83  0848               	movf	??_scale+4,w
  3578  0F84  00A9               	movwf	___flmul@b+3
  3579  0F85  0847               	movf	??_scale+3,w
  3580  0F86  00A8               	movwf	___flmul@b+2
  3581  0F87  0846               	movf	??_scale+2,w
  3582  0F88  00A7               	movwf	___flmul@b+1
  3583  0F89  0845               	movf	??_scale+1,w
  3584  0F8A  00A6               	movwf	___flmul@b
  3585  0F8B  300A               	movlw	10
  3586  0F8C  00F7               	movwf	___awdiv@divisor
  3587  0F8D  3000               	movlw	0
  3588  0F8E  00F8               	movwf	___awdiv@divisor+1
  3589  0F8F  0852               	movf	scale@scl,w
  3590  0F90  00F9               	movwf	___awdiv@dividend
  3591  0F91  01FA               	clrf	___awdiv@dividend+1
  3592  0F92  1BF9               	btfsc	___awdiv@dividend,7
  3593  0F93  03FA               	decf	___awdiv@dividend+1,f
  3594  0F94  160A  158A  27A5  120A  158A  	fcall	___awdiv
  3595  0F99  0877               	movf	?___awdiv,w
  3596  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  3597  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  3598  0F9C  00C9               	movwf	??_scale+5
  3599  0F9D  3001               	movlw	1
  3600  0F9E                     u4475:	
  3601  0F9E  1003               	clrc
  3602  0F9F  0DC9               	rlf	??_scale+5,f
  3603  0FA0  3EFF               	addlw	-1
  3604  0FA1  1D03               	skipz
  3605  0FA2  2F9E               	goto	u4475
  3606  0FA3  1003               	clrc
  3607  0FA4  0D49               	rlf	??_scale+5,w
  3608  0FA5  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3609  0FA6  0084               	movwf	4
  3610  0FA7  160A  118A  200A  120A  158A  	fcall	stringdir
  3611  0FAC  00CA               	movwf	??_scale+6
  3612  0FAD  160A  118A  200A  120A  158A  	fcall	stringdir
  3613  0FB2  00CB               	movwf	??_scale+7
  3614  0FB3  160A  118A  200A  120A  158A  	fcall	stringdir
  3615  0FB8  00CC               	movwf	??_scale+8
  3616  0FB9  160A  118A  200A  120A  158A  	fcall	stringdir
  3617  0FBE  00CD               	movwf	??_scale+9
  3618  0FBF  084D               	movf	??_scale+9,w
  3619  0FC0  00AD               	movwf	___flmul@a+3
  3620  0FC1  084C               	movf	??_scale+8,w
  3621  0FC2  00AC               	movwf	___flmul@a+2
  3622  0FC3  084B               	movf	??_scale+7,w
  3623  0FC4  00AB               	movwf	___flmul@a+1
  3624  0FC5  084A               	movf	??_scale+6,w
  3625  0FC6  00AA               	movwf	___flmul@a
  3626  0FC7  120A  158A  21A2   	fcall	___flmul
  3627  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  3628  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  3629  0FCC  0829               	movf	?___flmul+3,w
  3630  0FCD  00C3               	movwf	?_scale+3
  3631  0FCE  0828               	movf	?___flmul+2,w
  3632  0FCF  00C2               	movwf	?_scale+2
  3633  0FD0  0827               	movf	?___flmul+1,w
  3634  0FD1  00C1               	movwf	?_scale+1
  3635  0FD2  0826               	movf	?___flmul,w
  3636  0FD3  00C0               	movwf	?_scale
  3637  0FD4  0008               	return
  3638  0FD5                     l2795:	
  3639                           
  3640                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  3641  0FD5  0852               	movf	scale@scl,w
  3642  0FD6  00C4               	movwf	??_scale
  3643  0FD7  3001               	movlw	1
  3644  0FD8                     u4485:	
  3645  0FD8  1003               	clrc
  3646  0FD9  0DC4               	rlf	??_scale,f
  3647  0FDA  3EFF               	addlw	-1
  3648  0FDB  1D03               	skipz
  3649  0FDC  2FD8               	goto	u4485
  3650  0FDD  1003               	clrc
  3651  0FDE  0D44               	rlf	??_scale,w
  3652  0FDF  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3653  0FE0  0084               	movwf	4
  3654  0FE1  160A  118A  200A  120A  158A  	fcall	stringdir
  3655  0FE6  00C5               	movwf	??_scale+1
  3656  0FE7  160A  118A  200A  120A  158A  	fcall	stringdir
  3657  0FEC  00C6               	movwf	??_scale+2
  3658  0FED  160A  118A  200A  120A  158A  	fcall	stringdir
  3659  0FF2  00C7               	movwf	??_scale+3
  3660  0FF3  160A  118A  200A   	fcall	stringdir
  3661  0FF6  00C8               	movwf	??_scale+4
  3662  0FF7  0848               	movf	??_scale+4,w
  3663  0FF8  00C3               	movwf	?_scale+3
  3664  0FF9  0847               	movf	??_scale+3,w
  3665  0FFA  00C2               	movwf	?_scale+2
  3666  0FFB  0846               	movf	??_scale+2,w
  3667  0FFC  00C1               	movwf	?_scale+1
  3668  0FFD  0845               	movf	??_scale+1,w
  3669  0FFE  00C0               	movwf	?_scale
  3670  0FFF  0008               	return
  3671  1000                     __end_of_scale:	
  3672                           
  3673                           	psect	text3
  3674  1F0E                     __ptext3:	
  3675 ;; *************** function ___awmod *****************
  3676 ;; Defined at:
  3677 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  divisor         2    0[COMMON] int 
  3680 ;;  dividend        2    2[COMMON] int 
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;  sign            1    6[COMMON] unsigned char 
  3683 ;;  counter         1    5[COMMON] unsigned char 
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  2    0[COMMON] int 
  3686 ;; Registers used:
  3687 ;;		wreg, status,2, status,0
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3693 ;;      Params:         4       0       0       0       0
  3694 ;;      Locals:         2       0       0       0       0
  3695 ;;      Temps:          1       0       0       0       0
  3696 ;;      Totals:         7       0       0       0       0
  3697 ;;Total ram usage:        7 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		_scale
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706                           
  3707                           ;psect for function ___awmod
  3708  1F0E                     ___awmod:	
  3709                           
  3710                           ;incstack = 0
  3711                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3712  1F0E  01F6               	clrf	___awmod@sign
  3713  1F0F  1FF3               	btfss	___awmod@dividend+1,7
  3714  1F10  2F18               	goto	l2299
  3715  1F11  09F2               	comf	___awmod@dividend,f
  3716  1F12  09F3               	comf	___awmod@dividend+1,f
  3717  1F13  0AF2               	incf	___awmod@dividend,f
  3718  1F14  1903               	skipnz
  3719  1F15  0AF3               	incf	___awmod@dividend+1,f
  3720  1F16  01F6               	clrf	___awmod@sign
  3721  1F17  0AF6               	incf	___awmod@sign,f
  3722  1F18                     l2299:	
  3723  1F18  1FF1               	btfss	___awmod@divisor+1,7
  3724  1F19  2F1F               	goto	l2303
  3725  1F1A  09F0               	comf	___awmod@divisor,f
  3726  1F1B  09F1               	comf	___awmod@divisor+1,f
  3727  1F1C  0AF0               	incf	___awmod@divisor,f
  3728  1F1D  1903               	skipnz
  3729  1F1E  0AF1               	incf	___awmod@divisor+1,f
  3730  1F1F                     l2303:	
  3731  1F1F  0870               	movf	___awmod@divisor,w
  3732  1F20  0471               	iorwf	___awmod@divisor+1,w
  3733  1F21  1903               	btfsc	3,2
  3734  1F22  2F4C               	goto	l2321
  3735  1F23  01F5               	clrf	___awmod@counter
  3736  1F24  0AF5               	incf	___awmod@counter,f
  3737  1F25                     l2311:	
  3738  1F25  1BF1               	btfsc	___awmod@divisor+1,7
  3739  1F26  2F33               	goto	l2313
  3740  1F27  3001               	movlw	1
  3741  1F28                     u3215:	
  3742  1F28  1003               	clrc
  3743  1F29  0DF0               	rlf	___awmod@divisor,f
  3744  1F2A  0DF1               	rlf	___awmod@divisor+1,f
  3745  1F2B  3EFF               	addlw	-1
  3746  1F2C  1D03               	skipz
  3747  1F2D  2F28               	goto	u3215
  3748  1F2E  3001               	movlw	1
  3749  1F2F  00F4               	movwf	??___awmod
  3750  1F30  0874               	movf	??___awmod,w
  3751  1F31  07F5               	addwf	___awmod@counter,f
  3752  1F32  2F25               	goto	l2311
  3753  1F33                     l2313:	
  3754  1F33  0871               	movf	___awmod@divisor+1,w
  3755  1F34  0273               	subwf	___awmod@dividend+1,w
  3756  1F35  1D03               	skipz
  3757  1F36  2F39               	goto	u3235
  3758  1F37  0870               	movf	___awmod@divisor,w
  3759  1F38  0272               	subwf	___awmod@dividend,w
  3760  1F39                     u3235:	
  3761  1F39  1C03               	skipc
  3762  1F3A  2F41               	goto	l2317
  3763  1F3B  0870               	movf	___awmod@divisor,w
  3764  1F3C  02F2               	subwf	___awmod@dividend,f
  3765  1F3D  0871               	movf	___awmod@divisor+1,w
  3766  1F3E  1C03               	skipc
  3767  1F3F  03F3               	decf	___awmod@dividend+1,f
  3768  1F40  02F3               	subwf	___awmod@dividend+1,f
  3769  1F41                     l2317:	
  3770  1F41  3001               	movlw	1
  3771  1F42                     u3245:	
  3772  1F42  1003               	clrc
  3773  1F43  0CF1               	rrf	___awmod@divisor+1,f
  3774  1F44  0CF0               	rrf	___awmod@divisor,f
  3775  1F45  3EFF               	addlw	-1
  3776  1F46  1D03               	skipz
  3777  1F47  2F42               	goto	u3245
  3778  1F48  3001               	movlw	1
  3779  1F49  02F5               	subwf	___awmod@counter,f
  3780  1F4A  1D03               	btfss	3,2
  3781  1F4B  2F33               	goto	l2313
  3782  1F4C                     l2321:	
  3783  1F4C  0876               	movf	___awmod@sign,w
  3784  1F4D  1903               	btfsc	3,2
  3785  1F4E  2F54               	goto	l2325
  3786  1F4F  09F2               	comf	___awmod@dividend,f
  3787  1F50  09F3               	comf	___awmod@dividend+1,f
  3788  1F51  0AF2               	incf	___awmod@dividend,f
  3789  1F52  1903               	skipnz
  3790  1F53  0AF3               	incf	___awmod@dividend+1,f
  3791  1F54                     l2325:	
  3792  1F54  0873               	movf	___awmod@dividend+1,w
  3793  1F55  00F1               	movwf	?___awmod+1
  3794  1F56  0872               	movf	___awmod@dividend,w
  3795  1F57  00F0               	movwf	?___awmod
  3796  1F58  0008               	return
  3797  1F59                     __end_of___awmod:	
  3798                           
  3799                           	psect	text4
  3800  1FA5                     __ptext4:	
  3801 ;; *************** function ___awdiv *****************
  3802 ;; Defined at:
  3803 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;  divisor         2    7[COMMON] int 
  3806 ;;  dividend        2    9[COMMON] int 
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;  quotient        2    2[BANK0 ] int 
  3809 ;;  sign            1    1[BANK0 ] unsigned char 
  3810 ;;  counter         1    0[BANK0 ] unsigned char 
  3811 ;; Return value:  Size  Location     Type
  3812 ;;                  2    7[COMMON] int 
  3813 ;; Registers used:
  3814 ;;		wreg, status,2, status,0
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3820 ;;      Params:         4       0       0       0       0
  3821 ;;      Locals:         0       4       0       0       0
  3822 ;;      Temps:          1       0       0       0       0
  3823 ;;      Totals:         5       4       0       0       0
  3824 ;;Total ram usage:        9 bytes
  3825 ;; Hardware stack levels used:    1
  3826 ;; This function calls:
  3827 ;;		Nothing
  3828 ;; This function is called by:
  3829 ;;		_scale
  3830 ;;		_sprintf
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834                           
  3835                           ;psect for function ___awdiv
  3836  1FA5                     ___awdiv:	
  3837                           
  3838                           ;incstack = 0
  3839                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3840  1FA5  1283               	bcf	3,5	;RP0=0, select bank0
  3841  1FA6  1303               	bcf	3,6	;RP1=0, select bank0
  3842  1FA7  01A1               	clrf	___awdiv@sign
  3843  1FA8  1FF8               	btfss	___awdiv@divisor+1,7
  3844  1FA9  2FB1               	goto	l2255
  3845  1FAA  09F7               	comf	___awdiv@divisor,f
  3846  1FAB  09F8               	comf	___awdiv@divisor+1,f
  3847  1FAC  0AF7               	incf	___awdiv@divisor,f
  3848  1FAD  1903               	skipnz
  3849  1FAE  0AF8               	incf	___awdiv@divisor+1,f
  3850  1FAF  01A1               	clrf	___awdiv@sign
  3851  1FB0  0AA1               	incf	___awdiv@sign,f
  3852  1FB1                     l2255:	
  3853  1FB1  1FFA               	btfss	___awdiv@dividend+1,7
  3854  1FB2  2FBC               	goto	l2261
  3855  1FB3  09F9               	comf	___awdiv@dividend,f
  3856  1FB4  09FA               	comf	___awdiv@dividend+1,f
  3857  1FB5  0AF9               	incf	___awdiv@dividend,f
  3858  1FB6  1903               	skipnz
  3859  1FB7  0AFA               	incf	___awdiv@dividend+1,f
  3860  1FB8  3001               	movlw	1
  3861  1FB9  00FB               	movwf	??___awdiv
  3862  1FBA  087B               	movf	??___awdiv,w
  3863  1FBB  06A1               	xorwf	___awdiv@sign,f
  3864  1FBC                     l2261:	
  3865  1FBC  01A2               	clrf	___awdiv@quotient
  3866  1FBD  01A3               	clrf	___awdiv@quotient+1
  3867  1FBE  0877               	movf	___awdiv@divisor,w
  3868  1FBF  0478               	iorwf	___awdiv@divisor+1,w
  3869  1FC0  1903               	btfsc	3,2
  3870  1FC1  2FF3               	goto	l2283
  3871  1FC2  01A0               	clrf	___awdiv@counter
  3872  1FC3  0AA0               	incf	___awdiv@counter,f
  3873  1FC4                     l2271:	
  3874  1FC4  1BF8               	btfsc	___awdiv@divisor+1,7
  3875  1FC5  2FD2               	goto	l2273
  3876  1FC6  3001               	movlw	1
  3877  1FC7                     u3115:	
  3878  1FC7  1003               	clrc
  3879  1FC8  0DF7               	rlf	___awdiv@divisor,f
  3880  1FC9  0DF8               	rlf	___awdiv@divisor+1,f
  3881  1FCA  3EFF               	addlw	-1
  3882  1FCB  1D03               	skipz
  3883  1FCC  2FC7               	goto	u3115
  3884  1FCD  3001               	movlw	1
  3885  1FCE  00FB               	movwf	??___awdiv
  3886  1FCF  087B               	movf	??___awdiv,w
  3887  1FD0  07A0               	addwf	___awdiv@counter,f
  3888  1FD1  2FC4               	goto	l2271
  3889  1FD2                     l2273:	
  3890  1FD2  3001               	movlw	1
  3891  1FD3                     u3135:	
  3892  1FD3  1003               	clrc
  3893  1FD4  0DA2               	rlf	___awdiv@quotient,f
  3894  1FD5  0DA3               	rlf	___awdiv@quotient+1,f
  3895  1FD6  3EFF               	addlw	-1
  3896  1FD7  1D03               	skipz
  3897  1FD8  2FD3               	goto	u3135
  3898  1FD9  0878               	movf	___awdiv@divisor+1,w
  3899  1FDA  027A               	subwf	___awdiv@dividend+1,w
  3900  1FDB  1D03               	skipz
  3901  1FDC  2FDF               	goto	u3145
  3902  1FDD  0877               	movf	___awdiv@divisor,w
  3903  1FDE  0279               	subwf	___awdiv@dividend,w
  3904  1FDF                     u3145:	
  3905  1FDF  1C03               	skipc
  3906  1FE0  2FE8               	goto	l2279
  3907  1FE1  0877               	movf	___awdiv@divisor,w
  3908  1FE2  02F9               	subwf	___awdiv@dividend,f
  3909  1FE3  0878               	movf	___awdiv@divisor+1,w
  3910  1FE4  1C03               	skipc
  3911  1FE5  03FA               	decf	___awdiv@dividend+1,f
  3912  1FE6  02FA               	subwf	___awdiv@dividend+1,f
  3913  1FE7  1422               	bsf	___awdiv@quotient,0
  3914  1FE8                     l2279:	
  3915  1FE8  3001               	movlw	1
  3916  1FE9                     u3155:	
  3917  1FE9  1003               	clrc
  3918  1FEA  0CF8               	rrf	___awdiv@divisor+1,f
  3919  1FEB  0CF7               	rrf	___awdiv@divisor,f
  3920  1FEC  3EFF               	addlw	-1
  3921  1FED  1D03               	skipz
  3922  1FEE  2FE9               	goto	u3155
  3923  1FEF  3001               	movlw	1
  3924  1FF0  02A0               	subwf	___awdiv@counter,f
  3925  1FF1  1D03               	btfss	3,2
  3926  1FF2  2FD2               	goto	l2273
  3927  1FF3                     l2283:	
  3928  1FF3  0821               	movf	___awdiv@sign,w
  3929  1FF4  1903               	btfsc	3,2
  3930  1FF5  2FFB               	goto	l2287
  3931  1FF6  09A2               	comf	___awdiv@quotient,f
  3932  1FF7  09A3               	comf	___awdiv@quotient+1,f
  3933  1FF8  0AA2               	incf	___awdiv@quotient,f
  3934  1FF9  1903               	skipnz
  3935  1FFA  0AA3               	incf	___awdiv@quotient+1,f
  3936  1FFB                     l2287:	
  3937  1FFB  0823               	movf	___awdiv@quotient+1,w
  3938  1FFC  00F8               	movwf	?___awdiv+1
  3939  1FFD  0822               	movf	___awdiv@quotient,w
  3940  1FFE  00F7               	movwf	?___awdiv
  3941  1FFF  0008               	return
  3942  2000                     __end_of___awdiv:	
  3943                           
  3944                           	psect	text5
  3945  1CF9                     __ptext5:	
  3946 ;; *************** function _isdigit *****************
  3947 ;; Defined at:
  3948 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;  c               1    wreg     unsigned char 
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;  c               1    1[COMMON] unsigned char 
  3953 ;; Return value:  Size  Location     Type
  3954 ;;		None               void
  3955 ;; Registers used:
  3956 ;;		wreg, status,2, status,0
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3962 ;;      Params:         0       0       0       0       0
  3963 ;;      Locals:         2       0       0       0       0
  3964 ;;      Temps:          0       0       0       0       0
  3965 ;;      Totals:         2       0       0       0       0
  3966 ;;Total ram usage:        2 bytes
  3967 ;; Hardware stack levels used:    1
  3968 ;; This function calls:
  3969 ;;		Nothing
  3970 ;; This function is called by:
  3971 ;;		_sprintf
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974                           
  3975                           
  3976                           ;psect for function _isdigit
  3977  1CF9                     _isdigit:	
  3978                           
  3979                           ;incstack = 0
  3980                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3981                           ;isdigit@c stored from wreg
  3982  1CF9  00F1               	movwf	isdigit@c
  3983  1CFA  01F0               	clrf	_isdigit$684
  3984  1CFB  303A               	movlw	58
  3985  1CFC  0271               	subwf	isdigit@c,w
  3986  1CFD  1803               	skipnc
  3987  1CFE  2D05               	goto	l2807
  3988  1CFF  3030               	movlw	48
  3989  1D00  0271               	subwf	isdigit@c,w
  3990  1D01  1C03               	skipc
  3991  1D02  2D05               	goto	l2807
  3992  1D03  01F0               	clrf	_isdigit$684
  3993  1D04  0AF0               	incf	_isdigit$684,f
  3994  1D05                     l2807:	
  3995  1D05  0C70               	rrf	_isdigit$684,w
  3996  1D06  0008               	return
  3997  1D07                     __end_of_isdigit:	
  3998                           
  3999                           	psect	text6
  4000  0004                     __ptext6:	
  4001 ;; *************** function _fround *****************
  4002 ;; Defined at:
  4003 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;  prec            1    wreg     unsigned char 
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;  prec            1   51[BANK0 ] unsigned char 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  4   32[BANK0 ] unsigned char 
  4010 ;; Registers used:
  4011 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4017 ;;      Params:         0       4       0       0       0
  4018 ;;      Locals:         0       9       0       0       0
  4019 ;;      Temps:          0       7       0       0       0
  4020 ;;      Totals:         0      20       0       0       0
  4021 ;;Total ram usage:       20 bytes
  4022 ;; Hardware stack levels used:    1
  4023 ;; Hardware stack levels required when called:    2
  4024 ;; This function calls:
  4025 ;;		___flmul
  4026 ;;		___lwdiv
  4027 ;;		___lwmod
  4028 ;; This function is called by:
  4029 ;;		_sprintf
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           
  4034                           ;psect for function _fround
  4035  0004                     _fround:	
  4036                           
  4037                           ;incstack = 0
  4038                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4039                           ;fround@prec stored from wreg
  4040  0004  1283               	bcf	3,5	;RP0=0, select bank0
  4041  0005  1303               	bcf	3,6	;RP1=0, select bank0
  4042  0006  00D3               	movwf	fround@prec
  4043                           
  4044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  4045  0007  306E               	movlw	110
  4046  0008  0253               	subwf	fround@prec,w
  4047  0009  1C03               	skipc
  4048  000A  2916               	goto	l2749
  4049                           
  4050                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4051  000B  303F               	movlw	63
  4052  000C  00A9               	movwf	___flmul@b+3
  4053  000D  3000               	movlw	0
  4054  000E  00A8               	movwf	___flmul@b+2
  4055  000F  3000               	movlw	0
  4056  0010  00A7               	movwf	___flmul@b+1
  4057  0011  3000               	movlw	0
  4058  0012  00A6               	movwf	___flmul@b
  4059  0013  3064               	movlw	100
  4060  0014  00F6               	movwf	___lwdiv@divisor
  4061  0015  3000               	movlw	0
  4062  0016  00F7               	movwf	___lwdiv@divisor+1
  4063  0017  0853               	movf	fround@prec,w
  4064  0018  00C4               	movwf	??_fround
  4065  0019  01C5               	clrf	??_fround+1
  4066  001A  0844               	movf	??_fround,w
  4067  001B  00F8               	movwf	___lwdiv@dividend
  4068  001C  0845               	movf	??_fround+1,w
  4069  001D  00F9               	movwf	___lwdiv@dividend+1
  4070  001E  160A  158A  264D  120A  118A  	fcall	___lwdiv
  4071  0023  0876               	movf	?___lwdiv,w
  4072  0024  1283               	bcf	3,5	;RP0=0, select bank0
  4073  0025  1303               	bcf	3,6	;RP1=0, select bank0
  4074  0026  00C6               	movwf	??_fround+2
  4075  0027  3001               	movlw	1
  4076  0028                     u4255:	
  4077  0028  1003               	clrc
  4078  0029  0DC6               	rlf	??_fround+2,f
  4079  002A  3EFF               	addlw	-1
  4080  002B  1D03               	skipz
  4081  002C  2828               	goto	u4255
  4082  002D  1003               	clrc
  4083  002E  0D46               	rlf	??_fround+2,w
  4084  002F  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4085  0030  0084               	movwf	4
  4086  0031  160A  118A  200A  120A  118A  	fcall	stringdir
  4087  0036  00C7               	movwf	??_fround+3
  4088  0037  160A  118A  200A  120A  118A  	fcall	stringdir
  4089  003C  00C8               	movwf	??_fround+4
  4090  003D  160A  118A  200A  120A  118A  	fcall	stringdir
  4091  0042  00C9               	movwf	??_fround+5
  4092  0043  160A  118A  200A  120A  118A  	fcall	stringdir
  4093  0048  00CA               	movwf	??_fround+6
  4094  0049  084A               	movf	??_fround+6,w
  4095  004A  00AD               	movwf	___flmul@a+3
  4096  004B  0849               	movf	??_fround+5,w
  4097  004C  00AC               	movwf	___flmul@a+2
  4098  004D  0848               	movf	??_fround+4,w
  4099  004E  00AB               	movwf	___flmul@a+1
  4100  004F  0847               	movf	??_fround+3,w
  4101  0050  00AA               	movwf	___flmul@a
  4102  0051  120A  158A  21A2  120A  118A  	fcall	___flmul
  4103  0056  1283               	bcf	3,5	;RP0=0, select bank0
  4104  0057  1303               	bcf	3,6	;RP1=0, select bank0
  4105  0058  0829               	movf	?___flmul+3,w
  4106  0059  00D2               	movwf	_fround$873+3
  4107  005A  0828               	movf	?___flmul+2,w
  4108  005B  00D1               	movwf	_fround$873+2
  4109  005C  0827               	movf	?___flmul+1,w
  4110  005D  00D0               	movwf	_fround$873+1
  4111  005E  0826               	movf	?___flmul,w
  4112  005F  00CF               	movwf	_fround$873
  4113                           
  4114                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4115  0060  300A               	movlw	10
  4116  0061  00F6               	movwf	___lwdiv@divisor
  4117  0062  3000               	movlw	0
  4118  0063  00F7               	movwf	___lwdiv@divisor+1
  4119  0064  0853               	movf	fround@prec,w
  4120  0065  00C4               	movwf	??_fround
  4121  0066  01C5               	clrf	??_fround+1
  4122  0067  0844               	movf	??_fround,w
  4123  0068  00F2               	movwf	___lwmod@dividend
  4124  0069  0845               	movf	??_fround+1,w
  4125  006A  00F3               	movwf	___lwmod@dividend+1
  4126  006B  3064               	movlw	100
  4127  006C  00F0               	movwf	___lwmod@divisor
  4128  006D  3000               	movlw	0
  4129  006E  00F1               	movwf	___lwmod@divisor+1
  4130  006F  160A  158A  25A9  120A  118A  	fcall	___lwmod
  4131  0074  0871               	movf	?___lwmod+1,w
  4132  0075  00F9               	movwf	___lwdiv@dividend+1
  4133  0076  0870               	movf	?___lwmod,w
  4134  0077  00F8               	movwf	___lwdiv@dividend
  4135  0078  160A  158A  264D  120A  118A  	fcall	___lwdiv
  4136  007D  0876               	movf	?___lwdiv,w
  4137  007E  1283               	bcf	3,5	;RP0=0, select bank0
  4138  007F  1303               	bcf	3,6	;RP1=0, select bank0
  4139  0080  00C6               	movwf	??_fround+2
  4140  0081  3001               	movlw	1
  4141  0082                     u4265:	
  4142  0082  1003               	clrc
  4143  0083  0DC6               	rlf	??_fround+2,f
  4144  0084  3EFF               	addlw	-1
  4145  0085  1D03               	skipz
  4146  0086  2882               	goto	u4265
  4147  0087  1003               	clrc
  4148  0088  0D46               	rlf	??_fround+2,w
  4149  0089  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4150  008A  0084               	movwf	4
  4151  008B  160A  118A  200A  120A  118A  	fcall	stringdir
  4152  0090  00C7               	movwf	??_fround+3
  4153  0091  160A  118A  200A  120A  118A  	fcall	stringdir
  4154  0096  00C8               	movwf	??_fround+4
  4155  0097  160A  118A  200A  120A  118A  	fcall	stringdir
  4156  009C  00C9               	movwf	??_fround+5
  4157  009D  160A  118A  200A  120A  118A  	fcall	stringdir
  4158  00A2  00CA               	movwf	??_fround+6
  4159  00A3  084A               	movf	??_fround+6,w
  4160  00A4  00A9               	movwf	___flmul@b+3
  4161  00A5  0849               	movf	??_fround+5,w
  4162  00A6  00A8               	movwf	___flmul@b+2
  4163  00A7  0848               	movf	??_fround+4,w
  4164  00A8  00A7               	movwf	___flmul@b+1
  4165  00A9  0847               	movf	??_fround+3,w
  4166  00AA  00A6               	movwf	___flmul@b
  4167  00AB  0852               	movf	_fround$873+3,w
  4168  00AC  00AD               	movwf	___flmul@a+3
  4169  00AD  0851               	movf	_fround$873+2,w
  4170  00AE  00AC               	movwf	___flmul@a+2
  4171  00AF  0850               	movf	_fround$873+1,w
  4172  00B0  00AB               	movwf	___flmul@a+1
  4173  00B1  084F               	movf	_fround$873,w
  4174  00B2  00AA               	movwf	___flmul@a
  4175  00B3  120A  158A  21A2  120A  118A  	fcall	___flmul
  4176  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  4177  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  4178  00BA  0829               	movf	?___flmul+3,w
  4179  00BB  00CE               	movwf	_fround$874+3
  4180  00BC  0828               	movf	?___flmul+2,w
  4181  00BD  00CD               	movwf	_fround$874+2
  4182  00BE  0827               	movf	?___flmul+1,w
  4183  00BF  00CC               	movwf	_fround$874+1
  4184  00C0  0826               	movf	?___flmul,w
  4185  00C1  00CB               	movwf	_fround$874
  4186                           
  4187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4188  00C2  300A               	movlw	10
  4189  00C3  00F0               	movwf	___lwmod@divisor
  4190  00C4  3000               	movlw	0
  4191  00C5  00F1               	movwf	___lwmod@divisor+1
  4192  00C6  0853               	movf	fround@prec,w
  4193  00C7  00C4               	movwf	??_fround
  4194  00C8  01C5               	clrf	??_fround+1
  4195  00C9  0844               	movf	??_fround,w
  4196  00CA  00F2               	movwf	___lwmod@dividend
  4197  00CB  0845               	movf	??_fround+1,w
  4198  00CC  00F3               	movwf	___lwmod@dividend+1
  4199  00CD  160A  158A  25A9  120A  118A  	fcall	___lwmod
  4200  00D2  0870               	movf	?___lwmod,w
  4201  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  4202  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  4203  00D5  00C6               	movwf	??_fround+2
  4204  00D6  3001               	movlw	1
  4205  00D7                     u4275:	
  4206  00D7  1003               	clrc
  4207  00D8  0DC6               	rlf	??_fround+2,f
  4208  00D9  3EFF               	addlw	-1
  4209  00DA  1D03               	skipz
  4210  00DB  28D7               	goto	u4275
  4211  00DC  1003               	clrc
  4212  00DD  0D46               	rlf	??_fround+2,w
  4213  00DE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4214  00DF  0084               	movwf	4
  4215  00E0  160A  118A  200A  120A  118A  	fcall	stringdir
  4216  00E5  00C7               	movwf	??_fround+3
  4217  00E6  160A  118A  200A  120A  118A  	fcall	stringdir
  4218  00EB  00C8               	movwf	??_fround+4
  4219  00EC  160A  118A  200A  120A  118A  	fcall	stringdir
  4220  00F1  00C9               	movwf	??_fround+5
  4221  00F2  160A  118A  200A  120A  118A  	fcall	stringdir
  4222  00F7  00CA               	movwf	??_fround+6
  4223  00F8  084A               	movf	??_fround+6,w
  4224  00F9  00A9               	movwf	___flmul@b+3
  4225  00FA  0849               	movf	??_fround+5,w
  4226  00FB  00A8               	movwf	___flmul@b+2
  4227  00FC  0848               	movf	??_fround+4,w
  4228  00FD  00A7               	movwf	___flmul@b+1
  4229  00FE  0847               	movf	??_fround+3,w
  4230  00FF  00A6               	movwf	___flmul@b
  4231  0100  084E               	movf	_fround$874+3,w
  4232  0101  00AD               	movwf	___flmul@a+3
  4233  0102  084D               	movf	_fround$874+2,w
  4234  0103  00AC               	movwf	___flmul@a+2
  4235  0104  084C               	movf	_fround$874+1,w
  4236  0105  00AB               	movwf	___flmul@a+1
  4237  0106  084B               	movf	_fround$874,w
  4238  0107  00AA               	movwf	___flmul@a
  4239  0108  120A  158A  21A2   	fcall	___flmul
  4240  010B  1283               	bcf	3,5	;RP0=0, select bank0
  4241  010C  1303               	bcf	3,6	;RP1=0, select bank0
  4242  010D  0829               	movf	?___flmul+3,w
  4243  010E  00C3               	movwf	?_fround+3
  4244  010F  0828               	movf	?___flmul+2,w
  4245  0110  00C2               	movwf	?_fround+2
  4246  0111  0827               	movf	?___flmul+1,w
  4247  0112  00C1               	movwf	?_fround+1
  4248  0113  0826               	movf	?___flmul,w
  4249  0114  00C0               	movwf	?_fround
  4250  0115  0008               	return
  4251  0116                     l2749:	
  4252  0116  300B               	movlw	11
  4253  0117  0253               	subwf	fround@prec,w
  4254  0118  1C03               	skipc
  4255  0119  29C3               	goto	l2755
  4256                           
  4257                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4258  011A  303F               	movlw	63
  4259  011B  00A9               	movwf	___flmul@b+3
  4260  011C  3000               	movlw	0
  4261  011D  00A8               	movwf	___flmul@b+2
  4262  011E  3000               	movlw	0
  4263  011F  00A7               	movwf	___flmul@b+1
  4264  0120  3000               	movlw	0
  4265  0121  00A6               	movwf	___flmul@b
  4266  0122  300A               	movlw	10
  4267  0123  00F6               	movwf	___lwdiv@divisor
  4268  0124  3000               	movlw	0
  4269  0125  00F7               	movwf	___lwdiv@divisor+1
  4270  0126  0853               	movf	fround@prec,w
  4271  0127  00C4               	movwf	??_fround
  4272  0128  01C5               	clrf	??_fround+1
  4273  0129  0844               	movf	??_fround,w
  4274  012A  00F8               	movwf	___lwdiv@dividend
  4275  012B  0845               	movf	??_fround+1,w
  4276  012C  00F9               	movwf	___lwdiv@dividend+1
  4277  012D  160A  158A  264D  120A  118A  	fcall	___lwdiv
  4278  0132  0876               	movf	?___lwdiv,w
  4279  0133  1283               	bcf	3,5	;RP0=0, select bank0
  4280  0134  1303               	bcf	3,6	;RP1=0, select bank0
  4281  0135  00C6               	movwf	??_fround+2
  4282  0136  3001               	movlw	1
  4283  0137                     u4295:	
  4284  0137  1003               	clrc
  4285  0138  0DC6               	rlf	??_fround+2,f
  4286  0139  3EFF               	addlw	-1
  4287  013A  1D03               	skipz
  4288  013B  2937               	goto	u4295
  4289  013C  1003               	clrc
  4290  013D  0D46               	rlf	??_fround+2,w
  4291  013E  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4292  013F  0084               	movwf	4
  4293  0140  160A  118A  200A  120A  118A  	fcall	stringdir
  4294  0145  00C7               	movwf	??_fround+3
  4295  0146  160A  118A  200A  120A  118A  	fcall	stringdir
  4296  014B  00C8               	movwf	??_fround+4
  4297  014C  160A  118A  200A  120A  118A  	fcall	stringdir
  4298  0151  00C9               	movwf	??_fround+5
  4299  0152  160A  118A  200A  120A  118A  	fcall	stringdir
  4300  0157  00CA               	movwf	??_fround+6
  4301  0158  084A               	movf	??_fround+6,w
  4302  0159  00AD               	movwf	___flmul@a+3
  4303  015A  0849               	movf	??_fround+5,w
  4304  015B  00AC               	movwf	___flmul@a+2
  4305  015C  0848               	movf	??_fround+4,w
  4306  015D  00AB               	movwf	___flmul@a+1
  4307  015E  0847               	movf	??_fround+3,w
  4308  015F  00AA               	movwf	___flmul@a
  4309  0160  120A  158A  21A2  120A  118A  	fcall	___flmul
  4310  0165  1283               	bcf	3,5	;RP0=0, select bank0
  4311  0166  1303               	bcf	3,6	;RP1=0, select bank0
  4312  0167  0829               	movf	?___flmul+3,w
  4313  0168  00D2               	movwf	_fround$873+3
  4314  0169  0828               	movf	?___flmul+2,w
  4315  016A  00D1               	movwf	_fround$873+2
  4316  016B  0827               	movf	?___flmul+1,w
  4317  016C  00D0               	movwf	_fround$873+1
  4318  016D  0826               	movf	?___flmul,w
  4319  016E  00CF               	movwf	_fround$873
  4320                           
  4321                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4322  016F  300A               	movlw	10
  4323  0170  00F0               	movwf	___lwmod@divisor
  4324  0171  3000               	movlw	0
  4325  0172  00F1               	movwf	___lwmod@divisor+1
  4326  0173  0853               	movf	fround@prec,w
  4327  0174  00C4               	movwf	??_fround
  4328  0175  01C5               	clrf	??_fround+1
  4329  0176  0844               	movf	??_fround,w
  4330  0177  00F2               	movwf	___lwmod@dividend
  4331  0178  0845               	movf	??_fround+1,w
  4332  0179  00F3               	movwf	___lwmod@dividend+1
  4333  017A  160A  158A  25A9  120A  118A  	fcall	___lwmod
  4334  017F  0870               	movf	?___lwmod,w
  4335  0180  1283               	bcf	3,5	;RP0=0, select bank0
  4336  0181  1303               	bcf	3,6	;RP1=0, select bank0
  4337  0182  00C6               	movwf	??_fround+2
  4338  0183  3001               	movlw	1
  4339  0184                     u4305:	
  4340  0184  1003               	clrc
  4341  0185  0DC6               	rlf	??_fround+2,f
  4342  0186  3EFF               	addlw	-1
  4343  0187  1D03               	skipz
  4344  0188  2984               	goto	u4305
  4345  0189  1003               	clrc
  4346  018A  0D46               	rlf	??_fround+2,w
  4347  018B  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4348  018C  0084               	movwf	4
  4349  018D  160A  118A  200A  120A  118A  	fcall	stringdir
  4350  0192  00C7               	movwf	??_fround+3
  4351  0193  160A  118A  200A  120A  118A  	fcall	stringdir
  4352  0198  00C8               	movwf	??_fround+4
  4353  0199  160A  118A  200A  120A  118A  	fcall	stringdir
  4354  019E  00C9               	movwf	??_fround+5
  4355  019F  160A  118A  200A  120A  118A  	fcall	stringdir
  4356  01A4  00CA               	movwf	??_fround+6
  4357  01A5  084A               	movf	??_fround+6,w
  4358  01A6  00A9               	movwf	___flmul@b+3
  4359  01A7  0849               	movf	??_fround+5,w
  4360  01A8  00A8               	movwf	___flmul@b+2
  4361  01A9  0848               	movf	??_fround+4,w
  4362  01AA  00A7               	movwf	___flmul@b+1
  4363  01AB  0847               	movf	??_fround+3,w
  4364  01AC  00A6               	movwf	___flmul@b
  4365  01AD  0852               	movf	_fround$873+3,w
  4366  01AE  00AD               	movwf	___flmul@a+3
  4367  01AF  0851               	movf	_fround$873+2,w
  4368  01B0  00AC               	movwf	___flmul@a+2
  4369  01B1  0850               	movf	_fround$873+1,w
  4370  01B2  00AB               	movwf	___flmul@a+1
  4371  01B3  084F               	movf	_fround$873,w
  4372  01B4  00AA               	movwf	___flmul@a
  4373  01B5  120A  158A  21A2   	fcall	___flmul
  4374  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  4375  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  4376  01BA  0829               	movf	?___flmul+3,w
  4377  01BB  00C3               	movwf	?_fround+3
  4378  01BC  0828               	movf	?___flmul+2,w
  4379  01BD  00C2               	movwf	?_fround+2
  4380  01BE  0827               	movf	?___flmul+1,w
  4381  01BF  00C1               	movwf	?_fround+1
  4382  01C0  0826               	movf	?___flmul,w
  4383  01C1  00C0               	movwf	?_fround
  4384  01C2  0008               	return
  4385  01C3                     l2755:	
  4386                           
  4387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  4388  01C3  303F               	movlw	63
  4389  01C4  00A9               	movwf	___flmul@b+3
  4390  01C5  3000               	movlw	0
  4391  01C6  00A8               	movwf	___flmul@b+2
  4392  01C7  3000               	movlw	0
  4393  01C8  00A7               	movwf	___flmul@b+1
  4394  01C9  3000               	movlw	0
  4395  01CA  00A6               	movwf	___flmul@b
  4396  01CB  0853               	movf	fround@prec,w
  4397  01CC  00C4               	movwf	??_fround
  4398  01CD  3001               	movlw	1
  4399  01CE                     u4315:	
  4400  01CE  1003               	clrc
  4401  01CF  0DC4               	rlf	??_fround,f
  4402  01D0  3EFF               	addlw	-1
  4403  01D1  1D03               	skipz
  4404  01D2  29CE               	goto	u4315
  4405  01D3  1003               	clrc
  4406  01D4  0D44               	rlf	??_fround,w
  4407  01D5  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4408  01D6  0084               	movwf	4
  4409  01D7  160A  118A  200A  120A  118A  	fcall	stringdir
  4410  01DC  00C5               	movwf	??_fround+1
  4411  01DD  160A  118A  200A  120A  118A  	fcall	stringdir
  4412  01E2  00C6               	movwf	??_fround+2
  4413  01E3  160A  118A  200A  120A  118A  	fcall	stringdir
  4414  01E8  00C7               	movwf	??_fround+3
  4415  01E9  160A  118A  200A  120A  118A  	fcall	stringdir
  4416  01EE  00C8               	movwf	??_fround+4
  4417  01EF  0848               	movf	??_fround+4,w
  4418  01F0  00AD               	movwf	___flmul@a+3
  4419  01F1  0847               	movf	??_fround+3,w
  4420  01F2  00AC               	movwf	___flmul@a+2
  4421  01F3  0846               	movf	??_fround+2,w
  4422  01F4  00AB               	movwf	___flmul@a+1
  4423  01F5  0845               	movf	??_fround+1,w
  4424  01F6  00AA               	movwf	___flmul@a
  4425  01F7  120A  158A  21A2   	fcall	___flmul
  4426  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  4427  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  4428  01FC  0829               	movf	?___flmul+3,w
  4429  01FD  00C3               	movwf	?_fround+3
  4430  01FE  0828               	movf	?___flmul+2,w
  4431  01FF  00C2               	movwf	?_fround+2
  4432  0200  0827               	movf	?___flmul+1,w
  4433  0201  00C1               	movwf	?_fround+1
  4434  0202  0826               	movf	?___flmul,w
  4435  0203  00C0               	movwf	?_fround
  4436  0204  0008               	return
  4437  0205                     __end_of_fround:	
  4438                           
  4439                           	psect	text7
  4440  1DA9                     __ptext7:	
  4441 ;; *************** function ___lwmod *****************
  4442 ;; Defined at:
  4443 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;  divisor         2    0[COMMON] unsigned int 
  4446 ;;  dividend        2    2[COMMON] unsigned int 
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;  counter         1    5[COMMON] unsigned char 
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  2    0[COMMON] unsigned int 
  4451 ;; Registers used:
  4452 ;;		wreg, status,2, status,0
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4458 ;;      Params:         4       0       0       0       0
  4459 ;;      Locals:         1       0       0       0       0
  4460 ;;      Temps:          1       0       0       0       0
  4461 ;;      Totals:         6       0       0       0       0
  4462 ;;Total ram usage:        6 bytes
  4463 ;; Hardware stack levels used:    1
  4464 ;; This function calls:
  4465 ;;		Nothing
  4466 ;; This function is called by:
  4467 ;;		_fround
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           
  4472                           ;psect for function ___lwmod
  4473  1DA9                     ___lwmod:	
  4474                           
  4475                           ;incstack = 0
  4476                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4477  1DA9  0870               	movf	___lwmod@divisor,w
  4478  1DAA  0471               	iorwf	___lwmod@divisor+1,w
  4479  1DAB  1903               	btfsc	3,2
  4480  1DAC  2DD6               	goto	l2373
  4481  1DAD  01F5               	clrf	___lwmod@counter
  4482  1DAE  0AF5               	incf	___lwmod@counter,f
  4483  1DAF                     l2363:	
  4484  1DAF  1BF1               	btfsc	___lwmod@divisor+1,7
  4485  1DB0  2DBD               	goto	l2365
  4486  1DB1  3001               	movlw	1
  4487  1DB2                     u3355:	
  4488  1DB2  1003               	clrc
  4489  1DB3  0DF0               	rlf	___lwmod@divisor,f
  4490  1DB4  0DF1               	rlf	___lwmod@divisor+1,f
  4491  1DB5  3EFF               	addlw	-1
  4492  1DB6  1D03               	skipz
  4493  1DB7  2DB2               	goto	u3355
  4494  1DB8  3001               	movlw	1
  4495  1DB9  00F4               	movwf	??___lwmod
  4496  1DBA  0874               	movf	??___lwmod,w
  4497  1DBB  07F5               	addwf	___lwmod@counter,f
  4498  1DBC  2DAF               	goto	l2363
  4499  1DBD                     l2365:	
  4500  1DBD  0871               	movf	___lwmod@divisor+1,w
  4501  1DBE  0273               	subwf	___lwmod@dividend+1,w
  4502  1DBF  1D03               	skipz
  4503  1DC0  2DC3               	goto	u3375
  4504  1DC1  0870               	movf	___lwmod@divisor,w
  4505  1DC2  0272               	subwf	___lwmod@dividend,w
  4506  1DC3                     u3375:	
  4507  1DC3  1C03               	skipc
  4508  1DC4  2DCB               	goto	l2369
  4509  1DC5  0870               	movf	___lwmod@divisor,w
  4510  1DC6  02F2               	subwf	___lwmod@dividend,f
  4511  1DC7  0871               	movf	___lwmod@divisor+1,w
  4512  1DC8  1C03               	skipc
  4513  1DC9  03F3               	decf	___lwmod@dividend+1,f
  4514  1DCA  02F3               	subwf	___lwmod@dividend+1,f
  4515  1DCB                     l2369:	
  4516  1DCB  3001               	movlw	1
  4517  1DCC                     u3385:	
  4518  1DCC  1003               	clrc
  4519  1DCD  0CF1               	rrf	___lwmod@divisor+1,f
  4520  1DCE  0CF0               	rrf	___lwmod@divisor,f
  4521  1DCF  3EFF               	addlw	-1
  4522  1DD0  1D03               	skipz
  4523  1DD1  2DCC               	goto	u3385
  4524  1DD2  3001               	movlw	1
  4525  1DD3  02F5               	subwf	___lwmod@counter,f
  4526  1DD4  1D03               	btfss	3,2
  4527  1DD5  2DBD               	goto	l2365
  4528  1DD6                     l2373:	
  4529  1DD6  0873               	movf	___lwmod@dividend+1,w
  4530  1DD7  00F1               	movwf	?___lwmod+1
  4531  1DD8  0872               	movf	___lwmod@dividend,w
  4532  1DD9  00F0               	movwf	?___lwmod
  4533  1DDA  0008               	return
  4534  1DDB                     __end_of___lwmod:	
  4535                           
  4536                           	psect	text8
  4537  1E4D                     __ptext8:	
  4538 ;; *************** function ___lwdiv *****************
  4539 ;; Defined at:
  4540 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;  divisor         2    6[COMMON] unsigned int 
  4543 ;;  dividend        2    8[COMMON] unsigned int 
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;  quotient        2   11[COMMON] unsigned int 
  4546 ;;  counter         1   13[COMMON] unsigned char 
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  2    6[COMMON] unsigned int 
  4549 ;; Registers used:
  4550 ;;		wreg, status,2, status,0
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4556 ;;      Params:         4       0       0       0       0
  4557 ;;      Locals:         3       0       0       0       0
  4558 ;;      Temps:          1       0       0       0       0
  4559 ;;      Totals:         8       0       0       0       0
  4560 ;;Total ram usage:        8 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; This function calls:
  4563 ;;		Nothing
  4564 ;; This function is called by:
  4565 ;;		_fround
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569                           
  4570                           ;psect for function ___lwdiv
  4571  1E4D                     ___lwdiv:	
  4572                           
  4573                           ;incstack = 0
  4574                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4575  1E4D  01FB               	clrf	___lwdiv@quotient
  4576  1E4E  01FC               	clrf	___lwdiv@quotient+1
  4577  1E4F  0876               	movf	___lwdiv@divisor,w
  4578  1E50  0477               	iorwf	___lwdiv@divisor+1,w
  4579  1E51  1903               	btfsc	3,2
  4580  1E52  2E84               	goto	l2351
  4581  1E53  01FD               	clrf	___lwdiv@counter
  4582  1E54  0AFD               	incf	___lwdiv@counter,f
  4583  1E55                     l2339:	
  4584  1E55  1BF7               	btfsc	___lwdiv@divisor+1,7
  4585  1E56  2E63               	goto	l2341
  4586  1E57  3001               	movlw	1
  4587  1E58                     u3285:	
  4588  1E58  1003               	clrc
  4589  1E59  0DF6               	rlf	___lwdiv@divisor,f
  4590  1E5A  0DF7               	rlf	___lwdiv@divisor+1,f
  4591  1E5B  3EFF               	addlw	-1
  4592  1E5C  1D03               	skipz
  4593  1E5D  2E58               	goto	u3285
  4594  1E5E  3001               	movlw	1
  4595  1E5F  00FA               	movwf	??___lwdiv
  4596  1E60  087A               	movf	??___lwdiv,w
  4597  1E61  07FD               	addwf	___lwdiv@counter,f
  4598  1E62  2E55               	goto	l2339
  4599  1E63                     l2341:	
  4600  1E63  3001               	movlw	1
  4601  1E64                     u3305:	
  4602  1E64  1003               	clrc
  4603  1E65  0DFB               	rlf	___lwdiv@quotient,f
  4604  1E66  0DFC               	rlf	___lwdiv@quotient+1,f
  4605  1E67  3EFF               	addlw	-1
  4606  1E68  1D03               	skipz
  4607  1E69  2E64               	goto	u3305
  4608  1E6A  0877               	movf	___lwdiv@divisor+1,w
  4609  1E6B  0279               	subwf	___lwdiv@dividend+1,w
  4610  1E6C  1D03               	skipz
  4611  1E6D  2E70               	goto	u3315
  4612  1E6E  0876               	movf	___lwdiv@divisor,w
  4613  1E6F  0278               	subwf	___lwdiv@dividend,w
  4614  1E70                     u3315:	
  4615  1E70  1C03               	skipc
  4616  1E71  2E79               	goto	l2347
  4617  1E72  0876               	movf	___lwdiv@divisor,w
  4618  1E73  02F8               	subwf	___lwdiv@dividend,f
  4619  1E74  0877               	movf	___lwdiv@divisor+1,w
  4620  1E75  1C03               	skipc
  4621  1E76  03F9               	decf	___lwdiv@dividend+1,f
  4622  1E77  02F9               	subwf	___lwdiv@dividend+1,f
  4623  1E78  147B               	bsf	___lwdiv@quotient,0
  4624  1E79                     l2347:	
  4625  1E79  3001               	movlw	1
  4626  1E7A                     u3325:	
  4627  1E7A  1003               	clrc
  4628  1E7B  0CF7               	rrf	___lwdiv@divisor+1,f
  4629  1E7C  0CF6               	rrf	___lwdiv@divisor,f
  4630  1E7D  3EFF               	addlw	-1
  4631  1E7E  1D03               	skipz
  4632  1E7F  2E7A               	goto	u3325
  4633  1E80  3001               	movlw	1
  4634  1E81  02FD               	subwf	___lwdiv@counter,f
  4635  1E82  1D03               	btfss	3,2
  4636  1E83  2E63               	goto	l2341
  4637  1E84                     l2351:	
  4638  1E84  087C               	movf	___lwdiv@quotient+1,w
  4639  1E85  00F7               	movwf	?___lwdiv+1
  4640  1E86  087B               	movf	___lwdiv@quotient,w
  4641  1E87  00F6               	movwf	?___lwdiv
  4642  1E88  0008               	return
  4643  1E89                     __end_of___lwdiv:	
  4644                           
  4645                           	psect	text9
  4646  09A2                     __ptext9:	
  4647 ;; *************** function ___flmul *****************
  4648 ;; Defined at:
  4649 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  4650 ;; Parameters:    Size  Location     Type
  4651 ;;  b               4    6[BANK0 ] unsigned int 
  4652 ;;  a               4   10[BANK0 ] unsigned int 
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;  prod            4   26[BANK0 ] struct .
  4655 ;;  grs             4   20[BANK0 ] unsigned long 
  4656 ;;  temp            2   30[BANK0 ] struct .
  4657 ;;  bexp            1   25[BANK0 ] unsigned char 
  4658 ;;  aexp            1   24[BANK0 ] unsigned char 
  4659 ;;  sign            1   19[BANK0 ] unsigned char 
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  4    6[BANK0 ] unsigned char 
  4662 ;; Registers used:
  4663 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4669 ;;      Params:         0       8       0       0       0
  4670 ;;      Locals:         0      13       0       0       0
  4671 ;;      Temps:          0       5       0       0       0
  4672 ;;      Totals:         0      26       0       0       0
  4673 ;;Total ram usage:       26 bytes
  4674 ;; Hardware stack levels used:    1
  4675 ;; Hardware stack levels required when called:    1
  4676 ;; This function calls:
  4677 ;;		__Umul8_16
  4678 ;; This function is called by:
  4679 ;;		_main
  4680 ;;		_fround
  4681 ;;		_scale
  4682 ;;		_sprintf
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           
  4687                           ;psect for function ___flmul
  4688  09A2                     ___flmul:	
  4689                           
  4690                           ;incstack = 0
  4691                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4692  09A2  1283               	bcf	3,5	;RP0=0, select bank0
  4693  09A3  1303               	bcf	3,6	;RP1=0, select bank0
  4694  09A4  0829               	movf	___flmul@b+3,w
  4695  09A5  3980               	andlw	128
  4696  09A6  00AE               	movwf	??___flmul
  4697  09A7  082E               	movf	??___flmul,w
  4698  09A8  00B3               	movwf	___flmul@sign
  4699  09A9  0829               	movf	___flmul@b+3,w
  4700  09AA  00AE               	movwf	??___flmul
  4701  09AB  072E               	addwf	??___flmul,w
  4702  09AC  00AF               	movwf	??___flmul+1
  4703  09AD  082F               	movf	??___flmul+1,w
  4704  09AE  00B9               	movwf	___flmul@bexp
  4705  09AF  1BA8               	btfsc	___flmul@b+2,7
  4706  09B0  1439               	bsf	___flmul@bexp,0
  4707  09B1  0839               	movf	___flmul@bexp,w
  4708  09B2  1903               	btfsc	3,2
  4709  09B3  29C1               	goto	l2587
  4710  09B4  0A39               	incf	___flmul@bexp,w
  4711  09B5  1D03               	btfss	3,2
  4712  09B6  29BF               	goto	l2585
  4713  09B7  3000               	movlw	0
  4714  09B8  00A9               	movwf	___flmul@b+3
  4715  09B9  3000               	movlw	0
  4716  09BA  00A8               	movwf	___flmul@b+2
  4717  09BB  3000               	movlw	0
  4718  09BC  00A7               	movwf	___flmul@b+1
  4719  09BD  3000               	movlw	0
  4720  09BE  00A6               	movwf	___flmul@b
  4721  09BF                     l2585:	
  4722  09BF  17A8               	bsf	___flmul@b+2,7
  4723  09C0  29C9               	goto	l2589
  4724  09C1                     l2587:	
  4725  09C1  3000               	movlw	0
  4726  09C2  00A9               	movwf	___flmul@b+3
  4727  09C3  3000               	movlw	0
  4728  09C4  00A8               	movwf	___flmul@b+2
  4729  09C5  3000               	movlw	0
  4730  09C6  00A7               	movwf	___flmul@b+1
  4731  09C7  3000               	movlw	0
  4732  09C8  00A6               	movwf	___flmul@b
  4733  09C9                     l2589:	
  4734  09C9  082D               	movf	___flmul@a+3,w
  4735  09CA  3980               	andlw	128
  4736  09CB  00AE               	movwf	??___flmul
  4737  09CC  082E               	movf	??___flmul,w
  4738  09CD  06B3               	xorwf	___flmul@sign,f
  4739  09CE  082D               	movf	___flmul@a+3,w
  4740  09CF  00AE               	movwf	??___flmul
  4741  09D0  072E               	addwf	??___flmul,w
  4742  09D1  00AF               	movwf	??___flmul+1
  4743  09D2  082F               	movf	??___flmul+1,w
  4744  09D3  00B8               	movwf	___flmul@aexp
  4745  09D4  1BAC               	btfsc	___flmul@a+2,7
  4746  09D5  1438               	bsf	___flmul@aexp,0
  4747  09D6  0838               	movf	___flmul@aexp,w
  4748  09D7  1903               	btfsc	3,2
  4749  09D8  29E6               	goto	l2605
  4750  09D9  0A38               	incf	___flmul@aexp,w
  4751  09DA  1D03               	btfss	3,2
  4752  09DB  29E4               	goto	l2603
  4753  09DC  3000               	movlw	0
  4754  09DD  00AD               	movwf	___flmul@a+3
  4755  09DE  3000               	movlw	0
  4756  09DF  00AC               	movwf	___flmul@a+2
  4757  09E0  3000               	movlw	0
  4758  09E1  00AB               	movwf	___flmul@a+1
  4759  09E2  3000               	movlw	0
  4760  09E3  00AA               	movwf	___flmul@a
  4761  09E4                     l2603:	
  4762  09E4  17AC               	bsf	___flmul@a+2,7
  4763  09E5  29EE               	goto	l2607
  4764  09E6                     l2605:	
  4765  09E6  3000               	movlw	0
  4766  09E7  00AD               	movwf	___flmul@a+3
  4767  09E8  3000               	movlw	0
  4768  09E9  00AC               	movwf	___flmul@a+2
  4769  09EA  3000               	movlw	0
  4770  09EB  00AB               	movwf	___flmul@a+1
  4771  09EC  3000               	movlw	0
  4772  09ED  00AA               	movwf	___flmul@a
  4773  09EE                     l2607:	
  4774  09EE  0838               	movf	___flmul@aexp,w
  4775  09EF  1D03               	btfss	3,2
  4776  09F0  0839               	movf	___flmul@bexp,w
  4777  09F1  1D03               	btfss	3,2
  4778  09F2  29FC               	goto	l2615
  4779  09F3  3000               	movlw	0
  4780  09F4  00A9               	movwf	?___flmul+3
  4781  09F5  3000               	movlw	0
  4782  09F6  00A8               	movwf	?___flmul+2
  4783  09F7  3000               	movlw	0
  4784  09F8  00A7               	movwf	?___flmul+1
  4785  09F9  3000               	movlw	0
  4786  09FA  00A6               	movwf	?___flmul
  4787  09FB  0008               	return
  4788  09FC                     l2615:	
  4789  09FC  0826               	movf	___flmul@b,w
  4790  09FD  00AE               	movwf	??___flmul
  4791  09FE  082E               	movf	??___flmul,w
  4792  09FF  00F0               	movwf	__Umul8_16@multiplicand
  4793  0A00  082C               	movf	___flmul@a+2,w
  4794  0A01  160A  158A  2586  120A  158A  	fcall	__Umul8_16
  4795  0A06  0871               	movf	?__Umul8_16+1,w
  4796  0A07  1283               	bcf	3,5	;RP0=0, select bank0
  4797  0A08  1303               	bcf	3,6	;RP1=0, select bank0
  4798  0A09  00BF               	movwf	___flmul@temp+1
  4799  0A0A  0870               	movf	?__Umul8_16,w
  4800  0A0B  00BE               	movwf	___flmul@temp
  4801  0A0C  083E               	movf	___flmul@temp,w
  4802  0A0D  00AE               	movwf	??___flmul
  4803  0A0E  01AF               	clrf	??___flmul+1
  4804  0A0F  01B0               	clrf	??___flmul+2
  4805  0A10  01B1               	clrf	??___flmul+3
  4806  0A11  0831               	movf	??___flmul+3,w
  4807  0A12  00B7               	movwf	___flmul@grs+3
  4808  0A13  0830               	movf	??___flmul+2,w
  4809  0A14  00B6               	movwf	___flmul@grs+2
  4810  0A15  082F               	movf	??___flmul+1,w
  4811  0A16  00B5               	movwf	___flmul@grs+1
  4812  0A17  082E               	movf	??___flmul,w
  4813  0A18  00B4               	movwf	___flmul@grs
  4814  0A19  083F               	movf	___flmul@temp+1,w
  4815  0A1A  00AE               	movwf	??___flmul
  4816  0A1B  01AF               	clrf	??___flmul+1
  4817  0A1C  01B0               	clrf	??___flmul+2
  4818  0A1D  01B1               	clrf	??___flmul+3
  4819  0A1E  0831               	movf	??___flmul+3,w
  4820  0A1F  00BD               	movwf	___flmul@prod+3
  4821  0A20  0830               	movf	??___flmul+2,w
  4822  0A21  00BC               	movwf	___flmul@prod+2
  4823  0A22  082F               	movf	??___flmul+1,w
  4824  0A23  00BB               	movwf	___flmul@prod+1
  4825  0A24  082E               	movf	??___flmul,w
  4826  0A25  00BA               	movwf	___flmul@prod
  4827  0A26  0827               	movf	___flmul@b+1,w
  4828  0A27  00AE               	movwf	??___flmul
  4829  0A28  082E               	movf	??___flmul,w
  4830  0A29  00F0               	movwf	__Umul8_16@multiplicand
  4831  0A2A  082B               	movf	___flmul@a+1,w
  4832  0A2B  160A  158A  2586  120A  158A  	fcall	__Umul8_16
  4833  0A30  0871               	movf	?__Umul8_16+1,w
  4834  0A31  1283               	bcf	3,5	;RP0=0, select bank0
  4835  0A32  1303               	bcf	3,6	;RP1=0, select bank0
  4836  0A33  00BF               	movwf	___flmul@temp+1
  4837  0A34  0870               	movf	?__Umul8_16,w
  4838  0A35  00BE               	movwf	___flmul@temp
  4839  0A36  083E               	movf	___flmul@temp,w
  4840  0A37  00AE               	movwf	??___flmul
  4841  0A38  01AF               	clrf	??___flmul+1
  4842  0A39  01B0               	clrf	??___flmul+2
  4843  0A3A  01B1               	clrf	??___flmul+3
  4844  0A3B  082E               	movf	??___flmul,w
  4845  0A3C  07B4               	addwf	___flmul@grs,f
  4846  0A3D  082F               	movf	??___flmul+1,w
  4847  0A3E  1103               	clrz
  4848  0A3F  1803               	skipnc
  4849  0A40  3E01               	addlw	1
  4850  0A41  1D03               	btfss	3,2
  4851  0A42  07B5               	addwf	___flmul@grs+1,f
  4852  0A43  0830               	movf	??___flmul+2,w
  4853  0A44  1103               	clrz
  4854  0A45  1803               	skipnc
  4855  0A46  3E01               	addlw	1
  4856  0A47  1D03               	btfss	3,2
  4857  0A48  07B6               	addwf	___flmul@grs+2,f
  4858  0A49  0831               	movf	??___flmul+3,w
  4859  0A4A  1103               	clrz
  4860  0A4B  1803               	skipnc
  4861  0A4C  3E01               	addlw	1
  4862  0A4D  1D03               	btfss	3,2
  4863  0A4E  07B7               	addwf	___flmul@grs+3,f
  4864  0A4F  083F               	movf	___flmul@temp+1,w
  4865  0A50  00AE               	movwf	??___flmul
  4866  0A51  01AF               	clrf	??___flmul+1
  4867  0A52  01B0               	clrf	??___flmul+2
  4868  0A53  01B1               	clrf	??___flmul+3
  4869  0A54  082E               	movf	??___flmul,w
  4870  0A55  07BA               	addwf	___flmul@prod,f
  4871  0A56  082F               	movf	??___flmul+1,w
  4872  0A57  1103               	clrz
  4873  0A58  1803               	skipnc
  4874  0A59  3E01               	addlw	1
  4875  0A5A  1D03               	btfss	3,2
  4876  0A5B  07BB               	addwf	___flmul@prod+1,f
  4877  0A5C  0830               	movf	??___flmul+2,w
  4878  0A5D  1103               	clrz
  4879  0A5E  1803               	skipnc
  4880  0A5F  3E01               	addlw	1
  4881  0A60  1D03               	btfss	3,2
  4882  0A61  07BC               	addwf	___flmul@prod+2,f
  4883  0A62  0831               	movf	??___flmul+3,w
  4884  0A63  1103               	clrz
  4885  0A64  1803               	skipnc
  4886  0A65  3E01               	addlw	1
  4887  0A66  1D03               	btfss	3,2
  4888  0A67  07BD               	addwf	___flmul@prod+3,f
  4889  0A68  0828               	movf	___flmul@b+2,w
  4890  0A69  00AE               	movwf	??___flmul
  4891  0A6A  082E               	movf	??___flmul,w
  4892  0A6B  00F0               	movwf	__Umul8_16@multiplicand
  4893  0A6C  082A               	movf	___flmul@a,w
  4894  0A6D  160A  158A  2586  120A  158A  	fcall	__Umul8_16
  4895  0A72  0871               	movf	?__Umul8_16+1,w
  4896  0A73  1283               	bcf	3,5	;RP0=0, select bank0
  4897  0A74  1303               	bcf	3,6	;RP1=0, select bank0
  4898  0A75  00BF               	movwf	___flmul@temp+1
  4899  0A76  0870               	movf	?__Umul8_16,w
  4900  0A77  00BE               	movwf	___flmul@temp
  4901  0A78  083E               	movf	___flmul@temp,w
  4902  0A79  00AE               	movwf	??___flmul
  4903  0A7A  01AF               	clrf	??___flmul+1
  4904  0A7B  01B0               	clrf	??___flmul+2
  4905  0A7C  01B1               	clrf	??___flmul+3
  4906  0A7D  082E               	movf	??___flmul,w
  4907  0A7E  07B4               	addwf	___flmul@grs,f
  4908  0A7F  082F               	movf	??___flmul+1,w
  4909  0A80  1103               	clrz
  4910  0A81  1803               	skipnc
  4911  0A82  3E01               	addlw	1
  4912  0A83  1D03               	btfss	3,2
  4913  0A84  07B5               	addwf	___flmul@grs+1,f
  4914  0A85  0830               	movf	??___flmul+2,w
  4915  0A86  1103               	clrz
  4916  0A87  1803               	skipnc
  4917  0A88  3E01               	addlw	1
  4918  0A89  1D03               	btfss	3,2
  4919  0A8A  07B6               	addwf	___flmul@grs+2,f
  4920  0A8B  0831               	movf	??___flmul+3,w
  4921  0A8C  1103               	clrz
  4922  0A8D  1803               	skipnc
  4923  0A8E  3E01               	addlw	1
  4924  0A8F  1D03               	btfss	3,2
  4925  0A90  07B7               	addwf	___flmul@grs+3,f
  4926  0A91  083F               	movf	___flmul@temp+1,w
  4927  0A92  00AE               	movwf	??___flmul
  4928  0A93  01AF               	clrf	??___flmul+1
  4929  0A94  01B0               	clrf	??___flmul+2
  4930  0A95  01B1               	clrf	??___flmul+3
  4931  0A96  082E               	movf	??___flmul,w
  4932  0A97  07BA               	addwf	___flmul@prod,f
  4933  0A98  082F               	movf	??___flmul+1,w
  4934  0A99  1103               	clrz
  4935  0A9A  1803               	skipnc
  4936  0A9B  3E01               	addlw	1
  4937  0A9C  1D03               	btfss	3,2
  4938  0A9D  07BB               	addwf	___flmul@prod+1,f
  4939  0A9E  0830               	movf	??___flmul+2,w
  4940  0A9F  1103               	clrz
  4941  0AA0  1803               	skipnc
  4942  0AA1  3E01               	addlw	1
  4943  0AA2  1D03               	btfss	3,2
  4944  0AA3  07BC               	addwf	___flmul@prod+2,f
  4945  0AA4  0831               	movf	??___flmul+3,w
  4946  0AA5  1103               	clrz
  4947  0AA6  1803               	skipnc
  4948  0AA7  3E01               	addlw	1
  4949  0AA8  1D03               	btfss	3,2
  4950  0AA9  07BD               	addwf	___flmul@prod+3,f
  4951  0AAA  3008               	movlw	8
  4952  0AAB  00AE               	movwf	??___flmul
  4953  0AAC                     u3985:	
  4954  0AAC  1003               	clrc
  4955  0AAD  0DB4               	rlf	___flmul@grs,f
  4956  0AAE  0DB5               	rlf	___flmul@grs+1,f
  4957  0AAF  0DB6               	rlf	___flmul@grs+2,f
  4958  0AB0  0DB7               	rlf	___flmul@grs+3,f
  4959  0AB1  0BAE               	decfsz	??___flmul,f
  4960  0AB2  2AAC               	goto	u3985
  4961  0AB3  0827               	movf	___flmul@b+1,w
  4962  0AB4  00AE               	movwf	??___flmul
  4963  0AB5  082E               	movf	??___flmul,w
  4964  0AB6  00F0               	movwf	__Umul8_16@multiplicand
  4965  0AB7  082A               	movf	___flmul@a,w
  4966  0AB8  160A  158A  2586  120A  158A  	fcall	__Umul8_16
  4967  0ABD  0871               	movf	?__Umul8_16+1,w
  4968  0ABE  1283               	bcf	3,5	;RP0=0, select bank0
  4969  0ABF  1303               	bcf	3,6	;RP1=0, select bank0
  4970  0AC0  00BF               	movwf	___flmul@temp+1
  4971  0AC1  0870               	movf	?__Umul8_16,w
  4972  0AC2  00BE               	movwf	___flmul@temp
  4973  0AC3  083E               	movf	___flmul@temp,w
  4974  0AC4  00AE               	movwf	??___flmul
  4975  0AC5  083F               	movf	___flmul@temp+1,w
  4976  0AC6  00AF               	movwf	??___flmul+1
  4977  0AC7  01B0               	clrf	??___flmul+2
  4978  0AC8  01B1               	clrf	??___flmul+3
  4979  0AC9  082E               	movf	??___flmul,w
  4980  0ACA  07B4               	addwf	___flmul@grs,f
  4981  0ACB  082F               	movf	??___flmul+1,w
  4982  0ACC  1103               	clrz
  4983  0ACD  1803               	skipnc
  4984  0ACE  3E01               	addlw	1
  4985  0ACF  1D03               	btfss	3,2
  4986  0AD0  07B5               	addwf	___flmul@grs+1,f
  4987  0AD1  0830               	movf	??___flmul+2,w
  4988  0AD2  1103               	clrz
  4989  0AD3  1803               	skipnc
  4990  0AD4  3E01               	addlw	1
  4991  0AD5  1D03               	btfss	3,2
  4992  0AD6  07B6               	addwf	___flmul@grs+2,f
  4993  0AD7  0831               	movf	??___flmul+3,w
  4994  0AD8  1103               	clrz
  4995  0AD9  1803               	skipnc
  4996  0ADA  3E01               	addlw	1
  4997  0ADB  1D03               	btfss	3,2
  4998  0ADC  07B7               	addwf	___flmul@grs+3,f
  4999  0ADD  0826               	movf	___flmul@b,w
  5000  0ADE  00AE               	movwf	??___flmul
  5001  0ADF  082E               	movf	??___flmul,w
  5002  0AE0  00F0               	movwf	__Umul8_16@multiplicand
  5003  0AE1  082B               	movf	___flmul@a+1,w
  5004  0AE2  160A  158A  2586  120A  158A  	fcall	__Umul8_16
  5005  0AE7  0871               	movf	?__Umul8_16+1,w
  5006  0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  5007  0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  5008  0AEA  00BF               	movwf	___flmul@temp+1
  5009  0AEB  0870               	movf	?__Umul8_16,w
  5010  0AEC  00BE               	movwf	___flmul@temp
  5011  0AED  083E               	movf	___flmul@temp,w
  5012  0AEE  00AE               	movwf	??___flmul
  5013  0AEF  083F               	movf	___flmul@temp+1,w
  5014  0AF0  00AF               	movwf	??___flmul+1
  5015  0AF1  01B0               	clrf	??___flmul+2
  5016  0AF2  01B1               	clrf	??___flmul+3
  5017  0AF3  082E               	movf	??___flmul,w
  5018  0AF4  07B4               	addwf	___flmul@grs,f
  5019  0AF5  082F               	movf	??___flmul+1,w
  5020  0AF6  1103               	clrz
  5021  0AF7  1803               	skipnc
  5022  0AF8  3E01               	addlw	1
  5023  0AF9  1D03               	btfss	3,2
  5024  0AFA  07B5               	addwf	___flmul@grs+1,f
  5025  0AFB  0830               	movf	??___flmul+2,w
  5026  0AFC  1103               	clrz
  5027  0AFD  1803               	skipnc
  5028  0AFE  3E01               	addlw	1
  5029  0AFF  1D03               	btfss	3,2
  5030  0B00  07B6               	addwf	___flmul@grs+2,f
  5031  0B01  0831               	movf	??___flmul+3,w
  5032  0B02  1103               	clrz
  5033  0B03  1803               	skipnc
  5034  0B04  3E01               	addlw	1
  5035  0B05  1D03               	btfss	3,2
  5036  0B06  07B7               	addwf	___flmul@grs+3,f
  5037  0B07  3008               	movlw	8
  5038  0B08  00AE               	movwf	??___flmul
  5039  0B09                     u4015:	
  5040  0B09  1003               	clrc
  5041  0B0A  0DB4               	rlf	___flmul@grs,f
  5042  0B0B  0DB5               	rlf	___flmul@grs+1,f
  5043  0B0C  0DB6               	rlf	___flmul@grs+2,f
  5044  0B0D  0DB7               	rlf	___flmul@grs+3,f
  5045  0B0E  0BAE               	decfsz	??___flmul,f
  5046  0B0F  2B09               	goto	u4015
  5047  0B10  0826               	movf	___flmul@b,w
  5048  0B11  00AE               	movwf	??___flmul
  5049  0B12  082E               	movf	??___flmul,w
  5050  0B13  00F0               	movwf	__Umul8_16@multiplicand
  5051  0B14  082A               	movf	___flmul@a,w
  5052  0B15  160A  158A  2586  120A  158A  	fcall	__Umul8_16
  5053  0B1A  0871               	movf	?__Umul8_16+1,w
  5054  0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  5055  0B1C  1303               	bcf	3,6	;RP1=0, select bank0
  5056  0B1D  00BF               	movwf	___flmul@temp+1
  5057  0B1E  0870               	movf	?__Umul8_16,w
  5058  0B1F  00BE               	movwf	___flmul@temp
  5059  0B20  083E               	movf	___flmul@temp,w
  5060  0B21  00AE               	movwf	??___flmul
  5061  0B22  083F               	movf	___flmul@temp+1,w
  5062  0B23  00AF               	movwf	??___flmul+1
  5063  0B24  01B0               	clrf	??___flmul+2
  5064  0B25  01B1               	clrf	??___flmul+3
  5065  0B26  082E               	movf	??___flmul,w
  5066  0B27  07B4               	addwf	___flmul@grs,f
  5067  0B28  082F               	movf	??___flmul+1,w
  5068  0B29  1103               	clrz
  5069  0B2A  1803               	skipnc
  5070  0B2B  3E01               	addlw	1
  5071  0B2C  1D03               	btfss	3,2
  5072  0B2D  07B5               	addwf	___flmul@grs+1,f
  5073  0B2E  0830               	movf	??___flmul+2,w
  5074  0B2F  1103               	clrz
  5075  0B30  1803               	skipnc
  5076  0B31  3E01               	addlw	1
  5077  0B32  1D03               	btfss	3,2
  5078  0B33  07B6               	addwf	___flmul@grs+2,f
  5079  0B34  0831               	movf	??___flmul+3,w
  5080  0B35  1103               	clrz
  5081  0B36  1803               	skipnc
  5082  0B37  3E01               	addlw	1
  5083  0B38  1D03               	btfss	3,2
  5084  0B39  07B7               	addwf	___flmul@grs+3,f
  5085  0B3A  0827               	movf	___flmul@b+1,w
  5086  0B3B  00AE               	movwf	??___flmul
  5087  0B3C  082E               	movf	??___flmul,w
  5088  0B3D  00F0               	movwf	__Umul8_16@multiplicand
  5089  0B3E  082C               	movf	___flmul@a+2,w
  5090  0B3F  160A  158A  2586  120A  158A  	fcall	__Umul8_16
  5091  0B44  0871               	movf	?__Umul8_16+1,w
  5092  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  5093  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  5094  0B47  00BF               	movwf	___flmul@temp+1
  5095  0B48  0870               	movf	?__Umul8_16,w
  5096  0B49  00BE               	movwf	___flmul@temp
  5097  0B4A  083E               	movf	___flmul@temp,w
  5098  0B4B  00AE               	movwf	??___flmul
  5099  0B4C  083F               	movf	___flmul@temp+1,w
  5100  0B4D  00AF               	movwf	??___flmul+1
  5101  0B4E  01B0               	clrf	??___flmul+2
  5102  0B4F  01B1               	clrf	??___flmul+3
  5103  0B50  082E               	movf	??___flmul,w
  5104  0B51  07BA               	addwf	___flmul@prod,f
  5105  0B52  082F               	movf	??___flmul+1,w
  5106  0B53  1103               	clrz
  5107  0B54  1803               	skipnc
  5108  0B55  3E01               	addlw	1
  5109  0B56  1D03               	btfss	3,2
  5110  0B57  07BB               	addwf	___flmul@prod+1,f
  5111  0B58  0830               	movf	??___flmul+2,w
  5112  0B59  1103               	clrz
  5113  0B5A  1803               	skipnc
  5114  0B5B  3E01               	addlw	1
  5115  0B5C  1D03               	btfss	3,2
  5116  0B5D  07BC               	addwf	___flmul@prod+2,f
  5117  0B5E  0831               	movf	??___flmul+3,w
  5118  0B5F  1103               	clrz
  5119  0B60  1803               	skipnc
  5120  0B61  3E01               	addlw	1
  5121  0B62  1D03               	btfss	3,2
  5122  0B63  07BD               	addwf	___flmul@prod+3,f
  5123  0B64  0828               	movf	___flmul@b+2,w
  5124  0B65  00AE               	movwf	??___flmul
  5125  0B66  082E               	movf	??___flmul,w
  5126  0B67  00F0               	movwf	__Umul8_16@multiplicand
  5127  0B68  082B               	movf	___flmul@a+1,w
  5128  0B69  160A  158A  2586  120A  158A  	fcall	__Umul8_16
  5129  0B6E  0871               	movf	?__Umul8_16+1,w
  5130  0B6F  1283               	bcf	3,5	;RP0=0, select bank0
  5131  0B70  1303               	bcf	3,6	;RP1=0, select bank0
  5132  0B71  00BF               	movwf	___flmul@temp+1
  5133  0B72  0870               	movf	?__Umul8_16,w
  5134  0B73  00BE               	movwf	___flmul@temp
  5135  0B74  083E               	movf	___flmul@temp,w
  5136  0B75  00AE               	movwf	??___flmul
  5137  0B76  083F               	movf	___flmul@temp+1,w
  5138  0B77  00AF               	movwf	??___flmul+1
  5139  0B78  01B0               	clrf	??___flmul+2
  5140  0B79  01B1               	clrf	??___flmul+3
  5141  0B7A  082E               	movf	??___flmul,w
  5142  0B7B  07BA               	addwf	___flmul@prod,f
  5143  0B7C  082F               	movf	??___flmul+1,w
  5144  0B7D  1103               	clrz
  5145  0B7E  1803               	skipnc
  5146  0B7F  3E01               	addlw	1
  5147  0B80  1D03               	btfss	3,2
  5148  0B81  07BB               	addwf	___flmul@prod+1,f
  5149  0B82  0830               	movf	??___flmul+2,w
  5150  0B83  1103               	clrz
  5151  0B84  1803               	skipnc
  5152  0B85  3E01               	addlw	1
  5153  0B86  1D03               	btfss	3,2
  5154  0B87  07BC               	addwf	___flmul@prod+2,f
  5155  0B88  0831               	movf	??___flmul+3,w
  5156  0B89  1103               	clrz
  5157  0B8A  1803               	skipnc
  5158  0B8B  3E01               	addlw	1
  5159  0B8C  1D03               	btfss	3,2
  5160  0B8D  07BD               	addwf	___flmul@prod+3,f
  5161  0B8E  0828               	movf	___flmul@b+2,w
  5162  0B8F  00AE               	movwf	??___flmul
  5163  0B90  082E               	movf	??___flmul,w
  5164  0B91  00F0               	movwf	__Umul8_16@multiplicand
  5165  0B92  082C               	movf	___flmul@a+2,w
  5166  0B93  160A  158A  2586  120A  158A  	fcall	__Umul8_16
  5167  0B98  0871               	movf	?__Umul8_16+1,w
  5168  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  5169  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  5170  0B9B  00BF               	movwf	___flmul@temp+1
  5171  0B9C  0870               	movf	?__Umul8_16,w
  5172  0B9D  00BE               	movwf	___flmul@temp
  5173  0B9E  083E               	movf	___flmul@temp,w
  5174  0B9F  00AE               	movwf	??___flmul
  5175  0BA0  083F               	movf	___flmul@temp+1,w
  5176  0BA1  00AF               	movwf	??___flmul+1
  5177  0BA2  01B0               	clrf	??___flmul+2
  5178  0BA3  01B1               	clrf	??___flmul+3
  5179  0BA4  3008               	movlw	8
  5180  0BA5                     u4055:	
  5181  0BA5  1003               	clrc
  5182  0BA6  0DAE               	rlf	??___flmul,f
  5183  0BA7  0DAF               	rlf	??___flmul+1,f
  5184  0BA8  0DB0               	rlf	??___flmul+2,f
  5185  0BA9  0DB1               	rlf	??___flmul+3,f
  5186  0BAA  3EFF               	addlw	-1
  5187  0BAB  1D03               	skipz
  5188  0BAC  2BA5               	goto	u4055
  5189  0BAD  082E               	movf	??___flmul,w
  5190  0BAE  07BA               	addwf	___flmul@prod,f
  5191  0BAF  082F               	movf	??___flmul+1,w
  5192  0BB0  1103               	clrz
  5193  0BB1  1803               	skipnc
  5194  0BB2  3E01               	addlw	1
  5195  0BB3  1D03               	btfss	3,2
  5196  0BB4  07BB               	addwf	___flmul@prod+1,f
  5197  0BB5  0830               	movf	??___flmul+2,w
  5198  0BB6  1103               	clrz
  5199  0BB7  1803               	skipnc
  5200  0BB8  3E01               	addlw	1
  5201  0BB9  1D03               	btfss	3,2
  5202  0BBA  07BC               	addwf	___flmul@prod+2,f
  5203  0BBB  0831               	movf	??___flmul+3,w
  5204  0BBC  1103               	clrz
  5205  0BBD  1803               	skipnc
  5206  0BBE  3E01               	addlw	1
  5207  0BBF  1D03               	btfss	3,2
  5208  0BC0  07BD               	addwf	___flmul@prod+3,f
  5209  0BC1  0834               	movf	___flmul@grs,w
  5210  0BC2  00AE               	movwf	??___flmul
  5211  0BC3  0835               	movf	___flmul@grs+1,w
  5212  0BC4  00AF               	movwf	??___flmul+1
  5213  0BC5  0836               	movf	___flmul@grs+2,w
  5214  0BC6  00B0               	movwf	??___flmul+2
  5215  0BC7  0837               	movf	___flmul@grs+3,w
  5216  0BC8  00B1               	movwf	??___flmul+3
  5217  0BC9  3018               	movlw	24
  5218  0BCA                     u4075:	
  5219  0BCA  1003               	clrc
  5220  0BCB  0CB1               	rrf	??___flmul+3,f
  5221  0BCC  0CB0               	rrf	??___flmul+2,f
  5222  0BCD  0CAF               	rrf	??___flmul+1,f
  5223  0BCE  0CAE               	rrf	??___flmul,f
  5224  0BCF  3EFF               	addlw	-1
  5225  0BD0  1D03               	skipz
  5226  0BD1  2BCA               	goto	u4075
  5227  0BD2  082E               	movf	??___flmul,w
  5228  0BD3  07BA               	addwf	___flmul@prod,f
  5229  0BD4  082F               	movf	??___flmul+1,w
  5230  0BD5  1103               	clrz
  5231  0BD6  1803               	skipnc
  5232  0BD7  3E01               	addlw	1
  5233  0BD8  1D03               	btfss	3,2
  5234  0BD9  07BB               	addwf	___flmul@prod+1,f
  5235  0BDA  0830               	movf	??___flmul+2,w
  5236  0BDB  1103               	clrz
  5237  0BDC  1803               	skipnc
  5238  0BDD  3E01               	addlw	1
  5239  0BDE  1D03               	btfss	3,2
  5240  0BDF  07BC               	addwf	___flmul@prod+2,f
  5241  0BE0  0831               	movf	??___flmul+3,w
  5242  0BE1  1103               	clrz
  5243  0BE2  1803               	skipnc
  5244  0BE3  3E01               	addlw	1
  5245  0BE4  1D03               	btfss	3,2
  5246  0BE5  07BD               	addwf	___flmul@prod+3,f
  5247  0BE6  3008               	movlw	8
  5248  0BE7  00AE               	movwf	??___flmul
  5249  0BE8                     u4095:	
  5250  0BE8  1003               	clrc
  5251  0BE9  0DB4               	rlf	___flmul@grs,f
  5252  0BEA  0DB5               	rlf	___flmul@grs+1,f
  5253  0BEB  0DB6               	rlf	___flmul@grs+2,f
  5254  0BEC  0DB7               	rlf	___flmul@grs+3,f
  5255  0BED  0BAE               	decfsz	??___flmul,f
  5256  0BEE  2BE8               	goto	u4095
  5257  0BEF  0839               	movf	___flmul@bexp,w
  5258  0BF0  0738               	addwf	___flmul@aexp,w
  5259  0BF1  00AE               	movwf	??___flmul
  5260  0BF2  01AF               	clrf	??___flmul+1
  5261  0BF3  0DAF               	rlf	??___flmul+1,f
  5262  0BF4  082E               	movf	??___flmul,w
  5263  0BF5  3E82               	addlw	130
  5264  0BF6  00BE               	movwf	___flmul@temp
  5265  0BF7  082F               	movf	??___flmul+1,w
  5266  0BF8  1803               	skipnc
  5267  0BF9  3E01               	addlw	1
  5268  0BFA  3EFF               	addlw	255
  5269  0BFB  00BF               	movwf	___flmul@temp+1
  5270  0BFC                     l2667:	
  5271  0BFC  1BBC               	btfsc	___flmul@prod+2,7
  5272  0BFD  2C19               	goto	l2669
  5273  0BFE  3001               	movlw	1
  5274  0BFF  00AE               	movwf	??___flmul
  5275  0C00                     u4105:	
  5276  0C00  1003               	clrc
  5277  0C01  0DBA               	rlf	___flmul@prod,f
  5278  0C02  0DBB               	rlf	___flmul@prod+1,f
  5279  0C03  0DBC               	rlf	___flmul@prod+2,f
  5280  0C04  0DBD               	rlf	___flmul@prod+3,f
  5281  0C05  0BAE               	decfsz	??___flmul,f
  5282  0C06  2C00               	goto	u4105
  5283  0C07  1BB7               	btfsc	___flmul@grs+3,7
  5284  0C08  143A               	bsf	___flmul@prod,0
  5285  0C09  3001               	movlw	1
  5286  0C0A  00AE               	movwf	??___flmul
  5287  0C0B                     u4125:	
  5288  0C0B  1003               	clrc
  5289  0C0C  0DB4               	rlf	___flmul@grs,f
  5290  0C0D  0DB5               	rlf	___flmul@grs+1,f
  5291  0C0E  0DB6               	rlf	___flmul@grs+2,f
  5292  0C0F  0DB7               	rlf	___flmul@grs+3,f
  5293  0C10  0BAE               	decfsz	??___flmul,f
  5294  0C11  2C0B               	goto	u4125
  5295  0C12  30FF               	movlw	255
  5296  0C13  07BE               	addwf	___flmul@temp,f
  5297  0C14  1803               	skipnc
  5298  0C15  0ABF               	incf	___flmul@temp+1,f
  5299  0C16  30FF               	movlw	255
  5300  0C17  07BF               	addwf	___flmul@temp+1,f
  5301  0C18  2BFC               	goto	l2667
  5302  0C19                     l2669:	
  5303  0C19  01B8               	clrf	___flmul@aexp
  5304  0C1A  1FB7               	btfss	___flmul@grs+3,7
  5305  0C1B  2C32               	goto	l2679
  5306  0C1C  30FF               	movlw	255
  5307  0C1D  0534               	andwf	___flmul@grs,w
  5308  0C1E  00AE               	movwf	??___flmul
  5309  0C1F  30FF               	movlw	255
  5310  0C20  0535               	andwf	___flmul@grs+1,w
  5311  0C21  00AF               	movwf	??___flmul+1
  5312  0C22  30FF               	movlw	255
  5313  0C23  0536               	andwf	___flmul@grs+2,w
  5314  0C24  00B0               	movwf	??___flmul+2
  5315  0C25  307F               	movlw	127
  5316  0C26  0537               	andwf	___flmul@grs+3,w
  5317  0C27  00B1               	movwf	??___flmul+3
  5318  0C28  0831               	movf	??___flmul+3,w
  5319  0C29  0430               	iorwf	??___flmul+2,w
  5320  0C2A  042F               	iorwf	??___flmul+1,w
  5321  0C2B  042E               	iorwf	??___flmul,w
  5322  0C2C  1903               	skipnz
  5323  0C2D  183A               	btfsc	___flmul@prod,0
  5324  0C2E  2C30               	goto	l2675
  5325  0C2F  2C32               	goto	l2679
  5326  0C30                     l2675:	
  5327  0C30  01B8               	clrf	___flmul@aexp
  5328  0C31  0AB8               	incf	___flmul@aexp,f
  5329  0C32                     l2679:	
  5330  0C32  0838               	movf	___flmul@aexp,w
  5331  0C33  1903               	btfsc	3,2
  5332  0C34  2C64               	goto	l2689
  5333  0C35  3001               	movlw	1
  5334  0C36  07BA               	addwf	___flmul@prod,f
  5335  0C37  3000               	movlw	0
  5336  0C38  1803               	skipnc
  5337  0C39  3001               	movlw	1
  5338  0C3A  07BB               	addwf	___flmul@prod+1,f
  5339  0C3B  3000               	movlw	0
  5340  0C3C  1803               	skipnc
  5341  0C3D  3001               	movlw	1
  5342  0C3E  07BC               	addwf	___flmul@prod+2,f
  5343  0C3F  3000               	movlw	0
  5344  0C40  1803               	skipnc
  5345  0C41  3001               	movlw	1
  5346  0C42  07BD               	addwf	___flmul@prod+3,f
  5347  0C43  1C3D               	btfss	___flmul@prod+3,0
  5348  0C44  2C64               	goto	l2689
  5349  0C45  083A               	movf	___flmul@prod,w
  5350  0C46  00AE               	movwf	??___flmul
  5351  0C47  083B               	movf	___flmul@prod+1,w
  5352  0C48  00AF               	movwf	??___flmul+1
  5353  0C49  083C               	movf	___flmul@prod+2,w
  5354  0C4A  00B0               	movwf	??___flmul+2
  5355  0C4B  083D               	movf	___flmul@prod+3,w
  5356  0C4C  00B1               	movwf	??___flmul+3
  5357  0C4D  3001               	movlw	1
  5358  0C4E  00B2               	movwf	??___flmul+4
  5359  0C4F                     u4195:	
  5360  0C4F  0D31               	rlf	??___flmul+3,w
  5361  0C50  0CB1               	rrf	??___flmul+3,f
  5362  0C51  0CB0               	rrf	??___flmul+2,f
  5363  0C52  0CAF               	rrf	??___flmul+1,f
  5364  0C53  0CAE               	rrf	??___flmul,f
  5365  0C54  0BB2               	decfsz	??___flmul+4,f
  5366  0C55  2C4F               	goto	u4195
  5367  0C56  0831               	movf	??___flmul+3,w
  5368  0C57  00BD               	movwf	___flmul@prod+3
  5369  0C58  0830               	movf	??___flmul+2,w
  5370  0C59  00BC               	movwf	___flmul@prod+2
  5371  0C5A  082F               	movf	??___flmul+1,w
  5372  0C5B  00BB               	movwf	___flmul@prod+1
  5373  0C5C  082E               	movf	??___flmul,w
  5374  0C5D  00BA               	movwf	___flmul@prod
  5375  0C5E  3001               	movlw	1
  5376  0C5F  07BE               	addwf	___flmul@temp,f
  5377  0C60  1803               	skipnc
  5378  0C61  0ABF               	incf	___flmul@temp+1,f
  5379  0C62  3000               	movlw	0
  5380  0C63  07BF               	addwf	___flmul@temp+1,f
  5381  0C64                     l2689:	
  5382  0C64  083F               	movf	___flmul@temp+1,w
  5383  0C65  3A80               	xorlw	128
  5384  0C66  00FF               	movwf	127
  5385  0C67  3080               	movlw	128
  5386  0C68  027F               	subwf	127,w
  5387  0C69  1D03               	skipz
  5388  0C6A  2C6D               	goto	u4205
  5389  0C6B  30FF               	movlw	255
  5390  0C6C  023E               	subwf	___flmul@temp,w
  5391  0C6D                     u4205:	
  5392  0C6D  1C03               	skipc
  5393  0C6E  2C7A               	goto	l2693
  5394  0C6F  307F               	movlw	127
  5395  0C70  1283               	bcf	3,5	;RP0=0, select bank0
  5396  0C71  1303               	bcf	3,6	;RP1=0, select bank0
  5397  0C72  00BD               	movwf	___flmul@prod+3
  5398  0C73  3080               	movlw	128
  5399  0C74  00BC               	movwf	___flmul@prod+2
  5400  0C75  3000               	movlw	0
  5401  0C76  00BB               	movwf	___flmul@prod+1
  5402  0C77  3000               	movlw	0
  5403  0C78  00BA               	movwf	___flmul@prod
  5404  0C79  2CAA               	goto	l699
  5405  0C7A                     l2693:	
  5406  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  5407  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  5408  0C7C  083F               	movf	___flmul@temp+1,w
  5409  0C7D  3A80               	xorlw	128
  5410  0C7E  00FF               	movwf	127
  5411  0C7F  3080               	movlw	128
  5412  0C80  027F               	subwf	127,w
  5413  0C81  1D03               	skipz
  5414  0C82  2C85               	goto	u4215
  5415  0C83  3001               	movlw	1
  5416  0C84  023E               	subwf	___flmul@temp,w
  5417  0C85                     u4215:	
  5418  0C85  1803               	skipnc
  5419  0C86  2C93               	goto	l2699
  5420  0C87  3000               	movlw	0
  5421  0C88  1283               	bcf	3,5	;RP0=0, select bank0
  5422  0C89  1303               	bcf	3,6	;RP1=0, select bank0
  5423  0C8A  00BD               	movwf	___flmul@prod+3
  5424  0C8B  3000               	movlw	0
  5425  0C8C  00BC               	movwf	___flmul@prod+2
  5426  0C8D  3000               	movlw	0
  5427  0C8E  00BB               	movwf	___flmul@prod+1
  5428  0C8F  3000               	movlw	0
  5429  0C90  00BA               	movwf	___flmul@prod
  5430  0C91  01B3               	clrf	___flmul@sign
  5431  0C92  2CAA               	goto	l699
  5432  0C93                     l2699:	
  5433  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  5434  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  5435  0C95  083E               	movf	___flmul@temp,w
  5436  0C96  00AE               	movwf	??___flmul
  5437  0C97  082E               	movf	??___flmul,w
  5438  0C98  00B9               	movwf	___flmul@bexp
  5439  0C99  30FF               	movlw	255
  5440  0C9A  05BA               	andwf	___flmul@prod,f
  5441  0C9B  30FF               	movlw	255
  5442  0C9C  05BB               	andwf	___flmul@prod+1,f
  5443  0C9D  307F               	movlw	127
  5444  0C9E  05BC               	andwf	___flmul@prod+2,f
  5445  0C9F  3000               	movlw	0
  5446  0CA0  05BD               	andwf	___flmul@prod+3,f
  5447  0CA1  1839               	btfsc	___flmul@bexp,0
  5448  0CA2  17BC               	bsf	___flmul@prod+2,7
  5449  0CA3  0839               	movf	___flmul@bexp,w
  5450  0CA4  00AE               	movwf	??___flmul
  5451  0CA5  1003               	clrc
  5452  0CA6  0C2E               	rrf	??___flmul,w
  5453  0CA7  00AF               	movwf	??___flmul+1
  5454  0CA8  082F               	movf	??___flmul+1,w
  5455  0CA9  00BD               	movwf	___flmul@prod+3
  5456  0CAA                     l699:	
  5457  0CAA  0833               	movf	___flmul@sign,w
  5458  0CAB  00AE               	movwf	??___flmul
  5459  0CAC  082E               	movf	??___flmul,w
  5460  0CAD  04BD               	iorwf	___flmul@prod+3,f
  5461  0CAE  083D               	movf	___flmul@prod+3,w
  5462  0CAF  00A9               	movwf	?___flmul+3
  5463  0CB0  083C               	movf	___flmul@prod+2,w
  5464  0CB1  00A8               	movwf	?___flmul+2
  5465  0CB2  083B               	movf	___flmul@prod+1,w
  5466  0CB3  00A7               	movwf	?___flmul+1
  5467  0CB4  083A               	movf	___flmul@prod,w
  5468  0CB5  00A6               	movwf	?___flmul
  5469  0CB6  0008               	return
  5470  0CB7                     __end_of___flmul:	
  5471                           
  5472                           	psect	text10
  5473  1D86                     __ptext10:	
  5474 ;; *************** function __Umul8_16 *****************
  5475 ;; Defined at:
  5476 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;  multiplier      1    wreg     unsigned char 
  5479 ;;  multiplicand    1    0[COMMON] unsigned char 
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;  multiplier      1    8[COMMON] unsigned char 
  5482 ;;  word_mpld       2    6[COMMON] unsigned int 
  5483 ;;  product         2    4[COMMON] unsigned int 
  5484 ;; Return value:  Size  Location     Type
  5485 ;;                  2    0[COMMON] unsigned int 
  5486 ;; Registers used:
  5487 ;;		wreg, status,2, status,0
  5488 ;; Tracked objects:
  5489 ;;		On entry : 0/0
  5490 ;;		On exit  : 0/0
  5491 ;;		Unchanged: 0/0
  5492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5493 ;;      Params:         2       0       0       0       0
  5494 ;;      Locals:         5       0       0       0       0
  5495 ;;      Temps:          2       0       0       0       0
  5496 ;;      Totals:         9       0       0       0       0
  5497 ;;Total ram usage:        9 bytes
  5498 ;; Hardware stack levels used:    1
  5499 ;; This function calls:
  5500 ;;		Nothing
  5501 ;; This function is called by:
  5502 ;;		___flmul
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           
  5507                           ;psect for function __Umul8_16
  5508  1D86                     __Umul8_16:	
  5509                           
  5510                           ;incstack = 0
  5511                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5512                           ;__Umul8_16@multiplier stored from wreg
  5513  1D86  00F8               	movwf	__Umul8_16@multiplier
  5514  1D87  01F4               	clrf	__Umul8_16@product
  5515  1D88  01F5               	clrf	__Umul8_16@product+1
  5516  1D89  0870               	movf	__Umul8_16@multiplicand,w
  5517  1D8A  00F2               	movwf	??__Umul8_16
  5518  1D8B  01F3               	clrf	??__Umul8_16+1
  5519  1D8C  0872               	movf	??__Umul8_16,w
  5520  1D8D  00F6               	movwf	__Umul8_16@word_mpld
  5521  1D8E  0873               	movf	??__Umul8_16+1,w
  5522  1D8F  00F7               	movwf	__Umul8_16@word_mpld+1
  5523  1D90                     l2227:	
  5524  1D90  1C78               	btfss	__Umul8_16@multiplier,0
  5525  1D91  2D98               	goto	l753
  5526  1D92  0876               	movf	__Umul8_16@word_mpld,w
  5527  1D93  07F4               	addwf	__Umul8_16@product,f
  5528  1D94  1803               	skipnc
  5529  1D95  0AF5               	incf	__Umul8_16@product+1,f
  5530  1D96  0877               	movf	__Umul8_16@word_mpld+1,w
  5531  1D97  07F5               	addwf	__Umul8_16@product+1,f
  5532  1D98                     l753:	
  5533  1D98  3001               	movlw	1
  5534  1D99                     u3025:	
  5535  1D99  1003               	clrc
  5536  1D9A  0DF6               	rlf	__Umul8_16@word_mpld,f
  5537  1D9B  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5538  1D9C  3EFF               	addlw	-1
  5539  1D9D  1D03               	skipz
  5540  1D9E  2D99               	goto	u3025
  5541  1D9F  1003               	clrc
  5542  1DA0  0CF8               	rrf	__Umul8_16@multiplier,f
  5543  1DA1  0878               	movf	__Umul8_16@multiplier,w
  5544  1DA2  1D03               	btfss	3,2
  5545  1DA3  2D90               	goto	l2227
  5546  1DA4  0875               	movf	__Umul8_16@product+1,w
  5547  1DA5  00F1               	movwf	?__Umul8_16+1
  5548  1DA6  0874               	movf	__Umul8_16@product,w
  5549  1DA7  00F0               	movwf	?__Umul8_16
  5550  1DA8  0008               	return
  5551  1DA9                     __end_of__Umul8_16:	
  5552                           
  5553                           	psect	text11
  5554  12DB                     __ptext11:	
  5555 ;; *************** function __tdiv_to_l_ *****************
  5556 ;; Defined at:
  5557 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;  f1              4    0[COMMON] float 
  5560 ;;  f2              4    4[COMMON] float 
  5561 ;; Auto vars:     Size  Location     Type
  5562 ;;  quot            4    0[BANK0 ] unsigned long 
  5563 ;;  exp1            1    5[BANK0 ] unsigned char 
  5564 ;;  cntr            1    4[BANK0 ] unsigned char 
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  4    0[COMMON] unsigned long 
  5567 ;; Registers used:
  5568 ;;		wreg, status,2, status,0
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/0
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5574 ;;      Params:         8       0       0       0       0
  5575 ;;      Locals:         0       6       0       0       0
  5576 ;;      Temps:          4       0       0       0       0
  5577 ;;      Totals:        12       6       0       0       0
  5578 ;;Total ram usage:       18 bytes
  5579 ;; Hardware stack levels used:    1
  5580 ;; This function calls:
  5581 ;;		Nothing
  5582 ;; This function is called by:
  5583 ;;		_sprintf
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586                           
  5587                           
  5588                           ;psect for function __tdiv_to_l_
  5589  12DB                     __tdiv_to_l_:	
  5590                           
  5591                           ;incstack = 0
  5592                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5593  12DB  0870               	movf	__tdiv_to_l_@f1,w
  5594  12DC  00F8               	movwf	??__tdiv_to_l_
  5595  12DD  0871               	movf	__tdiv_to_l_@f1+1,w
  5596  12DE  00F9               	movwf	??__tdiv_to_l_+1
  5597  12DF  0872               	movf	__tdiv_to_l_@f1+2,w
  5598  12E0  00FA               	movwf	??__tdiv_to_l_+2
  5599  12E1  1003               	clrc
  5600  12E2  0D79               	rlf	??__tdiv_to_l_+1,w
  5601  12E3  0D7A               	rlf	??__tdiv_to_l_+2,w
  5602  12E4  00FB               	movwf	??__tdiv_to_l_+3
  5603  12E5  087B               	movf	??__tdiv_to_l_+3,w
  5604  12E6  1283               	bcf	3,5	;RP0=0, select bank0
  5605  12E7  1303               	bcf	3,6	;RP1=0, select bank0
  5606  12E8  00A5               	movwf	__tdiv_to_l_@exp1
  5607  12E9  0825               	movf	__tdiv_to_l_@exp1,w
  5608  12EA  1D03               	btfss	3,2
  5609  12EB  2AF5               	goto	l2817
  5610  12EC                     l2813:	
  5611  12EC  3000               	movlw	0
  5612  12ED  00F3               	movwf	?__tdiv_to_l_+3
  5613  12EE  3000               	movlw	0
  5614  12EF  00F2               	movwf	?__tdiv_to_l_+2
  5615  12F0  3000               	movlw	0
  5616  12F1  00F1               	movwf	?__tdiv_to_l_+1
  5617  12F2  3000               	movlw	0
  5618  12F3  00F0               	movwf	?__tdiv_to_l_
  5619  12F4  0008               	return
  5620  12F5                     l2817:	
  5621  12F5  0874               	movf	__tdiv_to_l_@f2,w
  5622  12F6  00F8               	movwf	??__tdiv_to_l_
  5623  12F7  0875               	movf	__tdiv_to_l_@f2+1,w
  5624  12F8  00F9               	movwf	??__tdiv_to_l_+1
  5625  12F9  0876               	movf	__tdiv_to_l_@f2+2,w
  5626  12FA  00FA               	movwf	??__tdiv_to_l_+2
  5627  12FB  1003               	clrc
  5628  12FC  0D79               	rlf	??__tdiv_to_l_+1,w
  5629  12FD  0D7A               	rlf	??__tdiv_to_l_+2,w
  5630  12FE  00FB               	movwf	??__tdiv_to_l_+3
  5631  12FF  087B               	movf	??__tdiv_to_l_+3,w
  5632  1300  00A4               	movwf	__tdiv_to_l_@cntr
  5633  1301  0824               	movf	__tdiv_to_l_@cntr,w
  5634  1302  1903               	btfsc	3,2
  5635  1303  2AEC               	goto	l2813
  5636  1304  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5637  1305  30FF               	movlw	255
  5638  1306  05F0               	andwf	__tdiv_to_l_@f1,f
  5639  1307  30FF               	movlw	255
  5640  1308  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5641  1309  3000               	movlw	0
  5642  130A  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5643  130B  17F5               	bsf	__tdiv_to_l_@f2+1,7
  5644  130C  30FF               	movlw	255
  5645  130D  05F4               	andwf	__tdiv_to_l_@f2,f
  5646  130E  30FF               	movlw	255
  5647  130F  05F5               	andwf	__tdiv_to_l_@f2+1,f
  5648  1310  3000               	movlw	0
  5649  1311  05F6               	andwf	__tdiv_to_l_@f2+2,f
  5650  1312  3000               	movlw	0
  5651  1313  00A3               	movwf	__tdiv_to_l_@quot+3
  5652  1314  3000               	movlw	0
  5653  1315  00A2               	movwf	__tdiv_to_l_@quot+2
  5654  1316  3000               	movlw	0
  5655  1317  00A1               	movwf	__tdiv_to_l_@quot+1
  5656  1318  3000               	movlw	0
  5657  1319  00A0               	movwf	__tdiv_to_l_@quot
  5658  131A  307F               	movlw	127
  5659  131B  02A5               	subwf	__tdiv_to_l_@exp1,f
  5660  131C  3098               	movlw	152
  5661  131D  0724               	addwf	__tdiv_to_l_@cntr,w
  5662  131E  00F8               	movwf	??__tdiv_to_l_
  5663  131F  0878               	movf	??__tdiv_to_l_,w
  5664  1320  02A5               	subwf	__tdiv_to_l_@exp1,f
  5665  1321  3018               	movlw	24
  5666  1322  00F8               	movwf	??__tdiv_to_l_
  5667  1323  0878               	movf	??__tdiv_to_l_,w
  5668  1324  00A4               	movwf	__tdiv_to_l_@cntr
  5669  1325                     l2831:	
  5670  1325  3001               	movlw	1
  5671  1326  00F8               	movwf	??__tdiv_to_l_
  5672  1327                     u4535:	
  5673  1327  1003               	clrc
  5674  1328  0DA0               	rlf	__tdiv_to_l_@quot,f
  5675  1329  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5676  132A  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5677  132B  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5678  132C  0BF8               	decfsz	??__tdiv_to_l_,f
  5679  132D  2B27               	goto	u4535
  5680  132E  0876               	movf	__tdiv_to_l_@f2+2,w
  5681  132F  0272               	subwf	__tdiv_to_l_@f1+2,w
  5682  1330  1D03               	skipz
  5683  1331  2B38               	goto	u4545
  5684  1332  0875               	movf	__tdiv_to_l_@f2+1,w
  5685  1333  0271               	subwf	__tdiv_to_l_@f1+1,w
  5686  1334  1D03               	skipz
  5687  1335  2B38               	goto	u4545
  5688  1336  0874               	movf	__tdiv_to_l_@f2,w
  5689  1337  0270               	subwf	__tdiv_to_l_@f1,w
  5690  1338                     u4545:	
  5691  1338  1C03               	skipc
  5692  1339  2B45               	goto	l2839
  5693  133A  0874               	movf	__tdiv_to_l_@f2,w
  5694  133B  02F0               	subwf	__tdiv_to_l_@f1,f
  5695  133C  0875               	movf	__tdiv_to_l_@f2+1,w
  5696  133D  1C03               	skipc
  5697  133E  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  5698  133F  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5699  1340  0876               	movf	__tdiv_to_l_@f2+2,w
  5700  1341  1C03               	skipc
  5701  1342  0A76               	incf	__tdiv_to_l_@f2+2,w
  5702  1343  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5703  1344  1420               	bsf	__tdiv_to_l_@quot,0
  5704  1345                     l2839:	
  5705  1345  3001               	movlw	1
  5706  1346                     u4555:	
  5707  1346  1003               	clrc
  5708  1347  0DF0               	rlf	__tdiv_to_l_@f1,f
  5709  1348  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5710  1349  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5711  134A  3EFF               	addlw	-1
  5712  134B  1D03               	skipz
  5713  134C  2B46               	goto	u4555
  5714  134D  3001               	movlw	1
  5715  134E  02A4               	subwf	__tdiv_to_l_@cntr,f
  5716  134F  1D03               	btfss	3,2
  5717  1350  2B25               	goto	l2831
  5718  1351  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5719  1352  2B68               	goto	l2851
  5720  1353  0825               	movf	__tdiv_to_l_@exp1,w
  5721  1354  3A80               	xorlw	128
  5722  1355  3E97               	addlw	151
  5723  1356  1C03               	btfss	3,0
  5724  1357  2AEC               	goto	l2813
  5725  1358                     l2849:	
  5726  1358  3001               	movlw	1
  5727  1359                     u4595:	
  5728  1359  1003               	clrc
  5729  135A  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5730  135B  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5731  135C  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5732  135D  0CA0               	rrf	__tdiv_to_l_@quot,f
  5733  135E  3EFF               	addlw	-1
  5734  135F  1D03               	skipz
  5735  1360  2B59               	goto	u4595
  5736  1361  3001               	movlw	1
  5737  1362  00F8               	movwf	??__tdiv_to_l_
  5738  1363  0878               	movf	??__tdiv_to_l_,w
  5739  1364  07A5               	addwf	__tdiv_to_l_@exp1,f
  5740  1365  1903               	btfsc	3,2
  5741  1366  2B7B               	goto	l2859
  5742  1367  2B58               	goto	l2849
  5743  1368                     l2851:	
  5744  1368  3018               	movlw	24
  5745  1369  0225               	subwf	__tdiv_to_l_@exp1,w
  5746  136A  1803               	btfsc	3,0
  5747  136B  2AEC               	goto	l2813
  5748  136C                     l492:	
  5749  136C  0825               	movf	__tdiv_to_l_@exp1,w
  5750  136D  1903               	btfsc	3,2
  5751  136E  2B7B               	goto	l2859
  5752  136F  3001               	movlw	1
  5753  1370  00F8               	movwf	??__tdiv_to_l_
  5754  1371                     u4625:	
  5755  1371  1003               	clrc
  5756  1372  0DA0               	rlf	__tdiv_to_l_@quot,f
  5757  1373  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5758  1374  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5759  1375  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5760  1376  0BF8               	decfsz	??__tdiv_to_l_,f
  5761  1377  2B71               	goto	u4625
  5762  1378  3001               	movlw	1
  5763  1379  02A5               	subwf	__tdiv_to_l_@exp1,f
  5764  137A  2B6C               	goto	l492
  5765  137B                     l2859:	
  5766  137B  0823               	movf	__tdiv_to_l_@quot+3,w
  5767  137C  00F3               	movwf	?__tdiv_to_l_+3
  5768  137D  0822               	movf	__tdiv_to_l_@quot+2,w
  5769  137E  00F2               	movwf	?__tdiv_to_l_+2
  5770  137F  0821               	movf	__tdiv_to_l_@quot+1,w
  5771  1380  00F1               	movwf	?__tdiv_to_l_+1
  5772  1381  0820               	movf	__tdiv_to_l_@quot,w
  5773  1382  00F0               	movwf	?__tdiv_to_l_
  5774  1383  0008               	return
  5775  1384                     __end_of__tdiv_to_l_:	
  5776                           
  5777                           	psect	text12
  5778  1384                     __ptext12:	
  5779 ;; *************** function __div_to_l_ *****************
  5780 ;; Defined at:
  5781 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
  5782 ;; Parameters:    Size  Location     Type
  5783 ;;  f1              4    0[COMMON] unsigned long 
  5784 ;;  f2              4    4[COMMON] unsigned long 
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;  quot            4    0[BANK0 ] unsigned long 
  5787 ;;  exp1            1    5[BANK0 ] unsigned char 
  5788 ;;  cntr            1    4[BANK0 ] unsigned char 
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  4    0[COMMON] unsigned long 
  5791 ;; Registers used:
  5792 ;;		wreg, status,2, status,0
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5798 ;;      Params:         8       0       0       0       0
  5799 ;;      Locals:         0       6       0       0       0
  5800 ;;      Temps:          1       0       0       0       0
  5801 ;;      Totals:         9       6       0       0       0
  5802 ;;Total ram usage:       15 bytes
  5803 ;; Hardware stack levels used:    1
  5804 ;; This function calls:
  5805 ;;		Nothing
  5806 ;; This function is called by:
  5807 ;;		_sprintf
  5808 ;; This function uses a non-reentrant model
  5809 ;;
  5810                           
  5811                           
  5812                           ;psect for function __div_to_l_
  5813  1384                     __div_to_l_:	
  5814                           
  5815                           ;incstack = 0
  5816                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5817  1384  1003               	clrc
  5818  1385  0D72               	rlf	__div_to_l_@f1+2,w
  5819  1386  0D73               	rlf	__div_to_l_@f1+3,w
  5820  1387  00F8               	movwf	??__div_to_l_
  5821  1388  0878               	movf	??__div_to_l_,w
  5822  1389  1283               	bcf	3,5	;RP0=0, select bank0
  5823  138A  1303               	bcf	3,6	;RP1=0, select bank0
  5824  138B  00A5               	movwf	__div_to_l_@exp1
  5825  138C  0825               	movf	__div_to_l_@exp1,w
  5826  138D  1D03               	btfss	3,2
  5827  138E  2B98               	goto	l2869
  5828  138F                     l2865:	
  5829  138F  3000               	movlw	0
  5830  1390  00F3               	movwf	?__div_to_l_+3
  5831  1391  3000               	movlw	0
  5832  1392  00F2               	movwf	?__div_to_l_+2
  5833  1393  3000               	movlw	0
  5834  1394  00F1               	movwf	?__div_to_l_+1
  5835  1395  3000               	movlw	0
  5836  1396  00F0               	movwf	?__div_to_l_
  5837  1397  0008               	return
  5838  1398                     l2869:	
  5839  1398  1003               	clrc
  5840  1399  0D76               	rlf	__div_to_l_@f2+2,w
  5841  139A  0D77               	rlf	__div_to_l_@f2+3,w
  5842  139B  00F8               	movwf	??__div_to_l_
  5843  139C  0878               	movf	??__div_to_l_,w
  5844  139D  00A4               	movwf	__div_to_l_@cntr
  5845  139E  0824               	movf	__div_to_l_@cntr,w
  5846  139F  1903               	btfsc	3,2
  5847  13A0  2B8F               	goto	l2865
  5848  13A1  17F2               	bsf	__div_to_l_@f1+2,7
  5849  13A2  30FF               	movlw	255
  5850  13A3  05F0               	andwf	__div_to_l_@f1,f
  5851  13A4  30FF               	movlw	255
  5852  13A5  05F1               	andwf	__div_to_l_@f1+1,f
  5853  13A6  30FF               	movlw	255
  5854  13A7  05F2               	andwf	__div_to_l_@f1+2,f
  5855  13A8  3000               	movlw	0
  5856  13A9  05F3               	andwf	__div_to_l_@f1+3,f
  5857  13AA  17F6               	bsf	__div_to_l_@f2+2,7
  5858  13AB  30FF               	movlw	255
  5859  13AC  05F4               	andwf	__div_to_l_@f2,f
  5860  13AD  30FF               	movlw	255
  5861  13AE  05F5               	andwf	__div_to_l_@f2+1,f
  5862  13AF  30FF               	movlw	255
  5863  13B0  05F6               	andwf	__div_to_l_@f2+2,f
  5864  13B1  3000               	movlw	0
  5865  13B2  05F7               	andwf	__div_to_l_@f2+3,f
  5866  13B3  3000               	movlw	0
  5867  13B4  00A3               	movwf	__div_to_l_@quot+3
  5868  13B5  3000               	movlw	0
  5869  13B6  00A2               	movwf	__div_to_l_@quot+2
  5870  13B7  3000               	movlw	0
  5871  13B8  00A1               	movwf	__div_to_l_@quot+1
  5872  13B9  3000               	movlw	0
  5873  13BA  00A0               	movwf	__div_to_l_@quot
  5874  13BB  307F               	movlw	127
  5875  13BC  02A5               	subwf	__div_to_l_@exp1,f
  5876  13BD  30A0               	movlw	160
  5877  13BE  0724               	addwf	__div_to_l_@cntr,w
  5878  13BF  00F8               	movwf	??__div_to_l_
  5879  13C0  0878               	movf	??__div_to_l_,w
  5880  13C1  02A5               	subwf	__div_to_l_@exp1,f
  5881  13C2  3020               	movlw	32
  5882  13C3  00F8               	movwf	??__div_to_l_
  5883  13C4  0878               	movf	??__div_to_l_,w
  5884  13C5  00A4               	movwf	__div_to_l_@cntr
  5885  13C6                     l2883:	
  5886  13C6  3001               	movlw	1
  5887  13C7  00F8               	movwf	??__div_to_l_
  5888  13C8                     u4665:	
  5889  13C8  1003               	clrc
  5890  13C9  0DA0               	rlf	__div_to_l_@quot,f
  5891  13CA  0DA1               	rlf	__div_to_l_@quot+1,f
  5892  13CB  0DA2               	rlf	__div_to_l_@quot+2,f
  5893  13CC  0DA3               	rlf	__div_to_l_@quot+3,f
  5894  13CD  0BF8               	decfsz	??__div_to_l_,f
  5895  13CE  2BC8               	goto	u4665
  5896  13CF  0877               	movf	__div_to_l_@f2+3,w
  5897  13D0  0273               	subwf	__div_to_l_@f1+3,w
  5898  13D1  1D03               	skipz
  5899  13D2  2BDD               	goto	u4675
  5900  13D3  0876               	movf	__div_to_l_@f2+2,w
  5901  13D4  0272               	subwf	__div_to_l_@f1+2,w
  5902  13D5  1D03               	skipz
  5903  13D6  2BDD               	goto	u4675
  5904  13D7  0875               	movf	__div_to_l_@f2+1,w
  5905  13D8  0271               	subwf	__div_to_l_@f1+1,w
  5906  13D9  1D03               	skipz
  5907  13DA  2BDD               	goto	u4675
  5908  13DB  0874               	movf	__div_to_l_@f2,w
  5909  13DC  0270               	subwf	__div_to_l_@f1,w
  5910  13DD                     u4675:	
  5911  13DD  1C03               	skipc
  5912  13DE  2BEE               	goto	l2891
  5913  13DF  0874               	movf	__div_to_l_@f2,w
  5914  13E0  02F0               	subwf	__div_to_l_@f1,f
  5915  13E1  0875               	movf	__div_to_l_@f2+1,w
  5916  13E2  1C03               	skipc
  5917  13E3  0F75               	incfsz	__div_to_l_@f2+1,w
  5918  13E4  02F1               	subwf	__div_to_l_@f1+1,f
  5919  13E5  0876               	movf	__div_to_l_@f2+2,w
  5920  13E6  1C03               	skipc
  5921  13E7  0F76               	incfsz	__div_to_l_@f2+2,w
  5922  13E8  02F2               	subwf	__div_to_l_@f1+2,f
  5923  13E9  0877               	movf	__div_to_l_@f2+3,w
  5924  13EA  1C03               	skipc
  5925  13EB  0F77               	incfsz	__div_to_l_@f2+3,w
  5926  13EC  02F3               	subwf	__div_to_l_@f1+3,f
  5927  13ED  1420               	bsf	__div_to_l_@quot,0
  5928  13EE                     l2891:	
  5929  13EE  3001               	movlw	1
  5930  13EF  00F8               	movwf	??__div_to_l_
  5931  13F0                     u4685:	
  5932  13F0  1003               	clrc
  5933  13F1  0DF0               	rlf	__div_to_l_@f1,f
  5934  13F2  0DF1               	rlf	__div_to_l_@f1+1,f
  5935  13F3  0DF2               	rlf	__div_to_l_@f1+2,f
  5936  13F4  0DF3               	rlf	__div_to_l_@f1+3,f
  5937  13F5  0BF8               	decfsz	??__div_to_l_,f
  5938  13F6  2BF0               	goto	u4685
  5939  13F7  3001               	movlw	1
  5940  13F8  02A4               	subwf	__div_to_l_@cntr,f
  5941  13F9  1D03               	btfss	3,2
  5942  13FA  2BC6               	goto	l2883
  5943  13FB  1FA5               	btfss	__div_to_l_@exp1,7
  5944  13FC  2C12               	goto	l2903
  5945  13FD  0825               	movf	__div_to_l_@exp1,w
  5946  13FE  3A80               	xorlw	128
  5947  13FF  3E9F               	addlw	159
  5948  1400  1C03               	btfss	3,0
  5949  1401  2B8F               	goto	l2865
  5950  1402                     l2901:	
  5951  1402  3001               	movlw	1
  5952  1403                     u4725:	
  5953  1403  1003               	clrc
  5954  1404  0CA3               	rrf	__div_to_l_@quot+3,f
  5955  1405  0CA2               	rrf	__div_to_l_@quot+2,f
  5956  1406  0CA1               	rrf	__div_to_l_@quot+1,f
  5957  1407  0CA0               	rrf	__div_to_l_@quot,f
  5958  1408  3EFF               	addlw	-1
  5959  1409  1D03               	skipz
  5960  140A  2C03               	goto	u4725
  5961  140B  3001               	movlw	1
  5962  140C  00F8               	movwf	??__div_to_l_
  5963  140D  0878               	movf	??__div_to_l_,w
  5964  140E  07A5               	addwf	__div_to_l_@exp1,f
  5965  140F  1903               	btfsc	3,2
  5966  1410  2C25               	goto	l2911
  5967  1411  2C02               	goto	l2901
  5968  1412                     l2903:	
  5969  1412  3020               	movlw	32
  5970  1413  0225               	subwf	__div_to_l_@exp1,w
  5971  1414  1803               	btfsc	3,0
  5972  1415  2B8F               	goto	l2865
  5973  1416                     l445:	
  5974  1416  0825               	movf	__div_to_l_@exp1,w
  5975  1417  1903               	btfsc	3,2
  5976  1418  2C25               	goto	l2911
  5977  1419  3001               	movlw	1
  5978  141A  00F8               	movwf	??__div_to_l_
  5979  141B                     u4755:	
  5980  141B  1003               	clrc
  5981  141C  0DA0               	rlf	__div_to_l_@quot,f
  5982  141D  0DA1               	rlf	__div_to_l_@quot+1,f
  5983  141E  0DA2               	rlf	__div_to_l_@quot+2,f
  5984  141F  0DA3               	rlf	__div_to_l_@quot+3,f
  5985  1420  0BF8               	decfsz	??__div_to_l_,f
  5986  1421  2C1B               	goto	u4755
  5987  1422  3001               	movlw	1
  5988  1423  02A5               	subwf	__div_to_l_@exp1,f
  5989  1424  2C16               	goto	l445
  5990  1425                     l2911:	
  5991  1425  0823               	movf	__div_to_l_@quot+3,w
  5992  1426  00F3               	movwf	?__div_to_l_+3
  5993  1427  0822               	movf	__div_to_l_@quot+2,w
  5994  1428  00F2               	movwf	?__div_to_l_+2
  5995  1429  0821               	movf	__div_to_l_@quot+1,w
  5996  142A  00F1               	movwf	?__div_to_l_+1
  5997  142B  0820               	movf	__div_to_l_@quot,w
  5998  142C  00F0               	movwf	?__div_to_l_
  5999  142D  0008               	return
  6000  142E                     __end_of__div_to_l_:	
  6001                           
  6002                           	psect	text13
  6003  1236                     __ptext13:	
  6004 ;; *************** function ___xxtofl *****************
  6005 ;; Defined at:
  6006 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  6007 ;; Parameters:    Size  Location     Type
  6008 ;;  sign            1    wreg     unsigned char 
  6009 ;;  val             4    4[COMMON] long 
  6010 ;; Auto vars:     Size  Location     Type
  6011 ;;  sign            1    0[BANK0 ] unsigned char 
  6012 ;;  arg             4    2[BANK0 ] unsigned long 
  6013 ;;  exp             1    1[BANK0 ] unsigned char 
  6014 ;; Return value:  Size  Location     Type
  6015 ;;                  4    4[COMMON] unsigned char 
  6016 ;; Registers used:
  6017 ;;		wreg, status,2, status,0
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6023 ;;      Params:         4       0       0       0       0
  6024 ;;      Locals:         0       6       0       0       0
  6025 ;;      Temps:          4       0       0       0       0
  6026 ;;      Totals:         8       6       0       0       0
  6027 ;;Total ram usage:       14 bytes
  6028 ;; Hardware stack levels used:    1
  6029 ;; This function calls:
  6030 ;;		Nothing
  6031 ;; This function is called by:
  6032 ;;		_main
  6033 ;;		_sprintf
  6034 ;; This function uses a non-reentrant model
  6035 ;;
  6036                           
  6037                           
  6038                           ;psect for function ___xxtofl
  6039  1236                     ___xxtofl:	
  6040                           
  6041                           ;incstack = 0
  6042                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6043                           ;___xxtofl@sign stored from wreg
  6044  1236  1283               	bcf	3,5	;RP0=0, select bank0
  6045  1237  1303               	bcf	3,6	;RP1=0, select bank0
  6046  1238  00A0               	movwf	___xxtofl@sign
  6047  1239  0820               	movf	___xxtofl@sign,w
  6048  123A  1D03               	btfss	3,2
  6049  123B  1FF7               	btfss	___xxtofl@val+3,7
  6050  123C  2A4D               	goto	l3061
  6051  123D  0974               	comf	___xxtofl@val,w
  6052  123E  00A2               	movwf	___xxtofl@arg
  6053  123F  0975               	comf	___xxtofl@val+1,w
  6054  1240  00A3               	movwf	___xxtofl@arg+1
  6055  1241  0976               	comf	___xxtofl@val+2,w
  6056  1242  00A4               	movwf	___xxtofl@arg+2
  6057  1243  0977               	comf	___xxtofl@val+3,w
  6058  1244  00A5               	movwf	___xxtofl@arg+3
  6059  1245  0AA2               	incf	___xxtofl@arg,f
  6060  1246  1903               	skipnz
  6061  1247  0AA3               	incf	___xxtofl@arg+1,f
  6062  1248  1903               	skipnz
  6063  1249  0AA4               	incf	___xxtofl@arg+2,f
  6064  124A  1903               	skipnz
  6065  124B  0AA5               	incf	___xxtofl@arg+3,f
  6066  124C  2A55               	goto	l725
  6067  124D                     l3061:	
  6068  124D  0877               	movf	___xxtofl@val+3,w
  6069  124E  00A5               	movwf	___xxtofl@arg+3
  6070  124F  0876               	movf	___xxtofl@val+2,w
  6071  1250  00A4               	movwf	___xxtofl@arg+2
  6072  1251  0875               	movf	___xxtofl@val+1,w
  6073  1252  00A3               	movwf	___xxtofl@arg+1
  6074  1253  0874               	movf	___xxtofl@val,w
  6075  1254  00A2               	movwf	___xxtofl@arg
  6076  1255                     l725:	
  6077  1255  0877               	movf	___xxtofl@val+3,w
  6078  1256  0476               	iorwf	___xxtofl@val+2,w
  6079  1257  0475               	iorwf	___xxtofl@val+1,w
  6080  1258  0474               	iorwf	___xxtofl@val,w
  6081  1259  1D03               	skipz
  6082  125A  2A64               	goto	l3067
  6083  125B  3000               	movlw	0
  6084  125C  00F7               	movwf	?___xxtofl+3
  6085  125D  3000               	movlw	0
  6086  125E  00F6               	movwf	?___xxtofl+2
  6087  125F  3000               	movlw	0
  6088  1260  00F5               	movwf	?___xxtofl+1
  6089  1261  3000               	movlw	0
  6090  1262  00F4               	movwf	?___xxtofl
  6091  1263  0008               	return
  6092  1264                     l3067:	
  6093  1264  3096               	movlw	150
  6094  1265  00F8               	movwf	??___xxtofl
  6095  1266  0878               	movf	??___xxtofl,w
  6096  1267  00A1               	movwf	___xxtofl@exp
  6097  1268                     l3071:	
  6098  1268  30FE               	movlw	254
  6099  1269  0525               	andwf	___xxtofl@arg+3,w
  6100  126A  1903               	btfsc	3,2
  6101  126B  2A95               	goto	l731
  6102  126C  3001               	movlw	1
  6103  126D  00F8               	movwf	??___xxtofl
  6104  126E  0878               	movf	??___xxtofl,w
  6105  126F  07A1               	addwf	___xxtofl@exp,f
  6106  1270  3001               	movlw	1
  6107  1271                     u5185:	
  6108  1271  1003               	clrc
  6109  1272  0CA5               	rrf	___xxtofl@arg+3,f
  6110  1273  0CA4               	rrf	___xxtofl@arg+2,f
  6111  1274  0CA3               	rrf	___xxtofl@arg+1,f
  6112  1275  0CA2               	rrf	___xxtofl@arg,f
  6113  1276  3EFF               	addlw	-1
  6114  1277  1D03               	skipz
  6115  1278  2A71               	goto	u5185
  6116  1279  2A68               	goto	l3071
  6117  127A                     l3073:	
  6118  127A  3001               	movlw	1
  6119  127B  00F8               	movwf	??___xxtofl
  6120  127C  0878               	movf	??___xxtofl,w
  6121  127D  07A1               	addwf	___xxtofl@exp,f
  6122  127E  3001               	movlw	1
  6123  127F  07A2               	addwf	___xxtofl@arg,f
  6124  1280  3000               	movlw	0
  6125  1281  1803               	skipnc
  6126  1282  3001               	movlw	1
  6127  1283  07A3               	addwf	___xxtofl@arg+1,f
  6128  1284  3000               	movlw	0
  6129  1285  1803               	skipnc
  6130  1286  3001               	movlw	1
  6131  1287  07A4               	addwf	___xxtofl@arg+2,f
  6132  1288  3000               	movlw	0
  6133  1289  1803               	skipnc
  6134  128A  3001               	movlw	1
  6135  128B  07A5               	addwf	___xxtofl@arg+3,f
  6136  128C  3001               	movlw	1
  6137  128D                     u5205:	
  6138  128D  1003               	clrc
  6139  128E  0CA5               	rrf	___xxtofl@arg+3,f
  6140  128F  0CA4               	rrf	___xxtofl@arg+2,f
  6141  1290  0CA3               	rrf	___xxtofl@arg+1,f
  6142  1291  0CA2               	rrf	___xxtofl@arg,f
  6143  1292  3EFF               	addlw	-1
  6144  1293  1D03               	skipz
  6145  1294  2A8D               	goto	u5205
  6146  1295                     l731:	
  6147  1295  30FF               	movlw	255
  6148  1296  0525               	andwf	___xxtofl@arg+3,w
  6149  1297  1903               	btfsc	3,2
  6150  1298  2AA9               	goto	l3081
  6151  1299  2A7A               	goto	l3073
  6152  129A                     l3083:	
  6153  129A  3002               	movlw	2
  6154  129B  0221               	subwf	___xxtofl@exp,w
  6155  129C  1C03               	btfss	3,0
  6156  129D  2AAB               	goto	l738
  6157  129E  3001               	movlw	1
  6158  129F  02A1               	subwf	___xxtofl@exp,f
  6159  12A0  3001               	movlw	1
  6160  12A1  00F8               	movwf	??___xxtofl
  6161  12A2                     u5225:	
  6162  12A2  1003               	clrc
  6163  12A3  0DA2               	rlf	___xxtofl@arg,f
  6164  12A4  0DA3               	rlf	___xxtofl@arg+1,f
  6165  12A5  0DA4               	rlf	___xxtofl@arg+2,f
  6166  12A6  0DA5               	rlf	___xxtofl@arg+3,f
  6167  12A7  0BF8               	decfsz	??___xxtofl,f
  6168  12A8  2AA2               	goto	u5225
  6169  12A9                     l3081:	
  6170  12A9  1FA4               	btfss	___xxtofl@arg+2,7
  6171  12AA  2A9A               	goto	l3083
  6172  12AB                     l738:	
  6173  12AB  1821               	btfsc	___xxtofl@exp,0
  6174  12AC  2AB5               	goto	l739
  6175  12AD  30FF               	movlw	255
  6176  12AE  05A2               	andwf	___xxtofl@arg,f
  6177  12AF  30FF               	movlw	255
  6178  12B0  05A3               	andwf	___xxtofl@arg+1,f
  6179  12B1  307F               	movlw	127
  6180  12B2  05A4               	andwf	___xxtofl@arg+2,f
  6181  12B3  30FF               	movlw	255
  6182  12B4  05A5               	andwf	___xxtofl@arg+3,f
  6183  12B5                     l739:	
  6184  12B5  1003               	clrc
  6185  12B6  0CA1               	rrf	___xxtofl@exp,f
  6186  12B7  0821               	movf	___xxtofl@exp,w
  6187  12B8  00F8               	movwf	??___xxtofl
  6188  12B9  01F9               	clrf	??___xxtofl+1
  6189  12BA  01FA               	clrf	??___xxtofl+2
  6190  12BB  01FB               	clrf	??___xxtofl+3
  6191  12BC  3018               	movlw	24
  6192  12BD                     u5265:	
  6193  12BD  1003               	clrc
  6194  12BE  0DF8               	rlf	??___xxtofl,f
  6195  12BF  0DF9               	rlf	??___xxtofl+1,f
  6196  12C0  0DFA               	rlf	??___xxtofl+2,f
  6197  12C1  0DFB               	rlf	??___xxtofl+3,f
  6198  12C2  3EFF               	addlw	-1
  6199  12C3  1D03               	skipz
  6200  12C4  2ABD               	goto	u5265
  6201  12C5  0878               	movf	??___xxtofl,w
  6202  12C6  04A2               	iorwf	___xxtofl@arg,f
  6203  12C7  0879               	movf	??___xxtofl+1,w
  6204  12C8  04A3               	iorwf	___xxtofl@arg+1,f
  6205  12C9  087A               	movf	??___xxtofl+2,w
  6206  12CA  04A4               	iorwf	___xxtofl@arg+2,f
  6207  12CB  087B               	movf	??___xxtofl+3,w
  6208  12CC  04A5               	iorwf	___xxtofl@arg+3,f
  6209  12CD  0820               	movf	___xxtofl@sign,w
  6210  12CE  1D03               	btfss	3,2
  6211  12CF  1FF7               	btfss	___xxtofl@val+3,7
  6212  12D0  2AD2               	goto	l3095
  6213  12D1  17A5               	bsf	___xxtofl@arg+3,7
  6214  12D2                     l3095:	
  6215  12D2  0825               	movf	___xxtofl@arg+3,w
  6216  12D3  00F7               	movwf	?___xxtofl+3
  6217  12D4  0824               	movf	___xxtofl@arg+2,w
  6218  12D5  00F6               	movwf	?___xxtofl+2
  6219  12D6  0823               	movf	___xxtofl@arg+1,w
  6220  12D7  00F5               	movwf	?___xxtofl+1
  6221  12D8  0822               	movf	___xxtofl@arg,w
  6222  12D9  00F4               	movwf	?___xxtofl
  6223  12DA  0008               	return
  6224  12DB                     __end_of___xxtofl:	
  6225                           
  6226                           	psect	text14
  6227  1D21                     __ptext14:	
  6228 ;; *************** function ___wmul *****************
  6229 ;; Defined at:
  6230 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  6231 ;; Parameters:    Size  Location     Type
  6232 ;;  multiplier      2    0[COMMON] unsigned int 
  6233 ;;  multiplicand    2    2[COMMON] unsigned int 
  6234 ;; Auto vars:     Size  Location     Type
  6235 ;;  product         2    4[COMMON] unsigned int 
  6236 ;; Return value:  Size  Location     Type
  6237 ;;                  2    0[COMMON] unsigned int 
  6238 ;; Registers used:
  6239 ;;		wreg, status,2, status,0
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6245 ;;      Params:         4       0       0       0       0
  6246 ;;      Locals:         2       0       0       0       0
  6247 ;;      Temps:          0       0       0       0       0
  6248 ;;      Totals:         6       0       0       0       0
  6249 ;;Total ram usage:        6 bytes
  6250 ;; Hardware stack levels used:    1
  6251 ;; This function calls:
  6252 ;;		Nothing
  6253 ;; This function is called by:
  6254 ;;		_sprintf
  6255 ;; This function uses a non-reentrant model
  6256 ;;
  6257                           
  6258                           
  6259                           ;psect for function ___wmul
  6260  1D21                     ___wmul:	
  6261                           
  6262                           ;incstack = 0
  6263                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6264  1D21  01F4               	clrf	___wmul@product
  6265  1D22  01F5               	clrf	___wmul@product+1
  6266  1D23                     l2917:	
  6267  1D23  1C70               	btfss	___wmul@multiplier,0
  6268  1D24  2D2B               	goto	l264
  6269  1D25  0872               	movf	___wmul@multiplicand,w
  6270  1D26  07F4               	addwf	___wmul@product,f
  6271  1D27  1803               	skipnc
  6272  1D28  0AF5               	incf	___wmul@product+1,f
  6273  1D29  0873               	movf	___wmul@multiplicand+1,w
  6274  1D2A  07F5               	addwf	___wmul@product+1,f
  6275  1D2B                     l264:	
  6276  1D2B  3001               	movlw	1
  6277  1D2C                     u4785:	
  6278  1D2C  1003               	clrc
  6279  1D2D  0DF2               	rlf	___wmul@multiplicand,f
  6280  1D2E  0DF3               	rlf	___wmul@multiplicand+1,f
  6281  1D2F  3EFF               	addlw	-1
  6282  1D30  1D03               	skipz
  6283  1D31  2D2C               	goto	u4785
  6284  1D32  3001               	movlw	1
  6285  1D33                     u4795:	
  6286  1D33  1003               	clrc
  6287  1D34  0CF1               	rrf	___wmul@multiplier+1,f
  6288  1D35  0CF0               	rrf	___wmul@multiplier,f
  6289  1D36  3EFF               	addlw	-1
  6290  1D37  1D03               	skipz
  6291  1D38  2D33               	goto	u4795
  6292  1D39  0870               	movf	___wmul@multiplier,w
  6293  1D3A  0471               	iorwf	___wmul@multiplier+1,w
  6294  1D3B  1D03               	btfss	3,2
  6295  1D3C  2D23               	goto	l2917
  6296  1D3D  0875               	movf	___wmul@product+1,w
  6297  1D3E  00F1               	movwf	?___wmul+1
  6298  1D3F  0874               	movf	___wmul@product,w
  6299  1D40  00F0               	movwf	?___wmul
  6300  1D41  0008               	return
  6301  1D42                     __end_of___wmul:	
  6302                           
  6303                           	psect	text15
  6304  1F59                     __ptext15:	
  6305 ;; *************** function ___llmod *****************
  6306 ;; Defined at:
  6307 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  6308 ;; Parameters:    Size  Location     Type
  6309 ;;  divisor         4    0[COMMON] unsigned long 
  6310 ;;  dividend        4    4[COMMON] unsigned long 
  6311 ;; Auto vars:     Size  Location     Type
  6312 ;;  counter         1    9[COMMON] unsigned char 
  6313 ;; Return value:  Size  Location     Type
  6314 ;;                  4    0[COMMON] unsigned long 
  6315 ;; Registers used:
  6316 ;;		wreg, status,2, status,0
  6317 ;; Tracked objects:
  6318 ;;		On entry : 0/0
  6319 ;;		On exit  : 0/0
  6320 ;;		Unchanged: 0/0
  6321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6322 ;;      Params:         8       0       0       0       0
  6323 ;;      Locals:         1       0       0       0       0
  6324 ;;      Temps:          1       0       0       0       0
  6325 ;;      Totals:        10       0       0       0       0
  6326 ;;Total ram usage:       10 bytes
  6327 ;; Hardware stack levels used:    1
  6328 ;; This function calls:
  6329 ;;		Nothing
  6330 ;; This function is called by:
  6331 ;;		_sprintf
  6332 ;; This function uses a non-reentrant model
  6333 ;;
  6334                           
  6335                           
  6336                           ;psect for function ___llmod
  6337  1F59                     ___llmod:	
  6338                           
  6339                           ;incstack = 0
  6340                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6341  1F59  0873               	movf	___llmod@divisor+3,w
  6342  1F5A  0472               	iorwf	___llmod@divisor+2,w
  6343  1F5B  0471               	iorwf	___llmod@divisor+1,w
  6344  1F5C  0470               	iorwf	___llmod@divisor,w
  6345  1F5D  1903               	skipnz
  6346  1F5E  2F9C               	goto	l3045
  6347  1F5F  01F9               	clrf	___llmod@counter
  6348  1F60  0AF9               	incf	___llmod@counter,f
  6349  1F61                     l3035:	
  6350  1F61  1BF3               	btfsc	___llmod@divisor+3,7
  6351  1F62  2F71               	goto	l3037
  6352  1F63  3001               	movlw	1
  6353  1F64  00F8               	movwf	??___llmod
  6354  1F65                     u5105:	
  6355  1F65  1003               	clrc
  6356  1F66  0DF0               	rlf	___llmod@divisor,f
  6357  1F67  0DF1               	rlf	___llmod@divisor+1,f
  6358  1F68  0DF2               	rlf	___llmod@divisor+2,f
  6359  1F69  0DF3               	rlf	___llmod@divisor+3,f
  6360  1F6A  0BF8               	decfsz	??___llmod,f
  6361  1F6B  2F65               	goto	u5105
  6362  1F6C  3001               	movlw	1
  6363  1F6D  00F8               	movwf	??___llmod
  6364  1F6E  0878               	movf	??___llmod,w
  6365  1F6F  07F9               	addwf	___llmod@counter,f
  6366  1F70  2F61               	goto	l3035
  6367  1F71                     l3037:	
  6368  1F71  0873               	movf	___llmod@divisor+3,w
  6369  1F72  0277               	subwf	___llmod@dividend+3,w
  6370  1F73  1D03               	skipz
  6371  1F74  2F7F               	goto	u5125
  6372  1F75  0872               	movf	___llmod@divisor+2,w
  6373  1F76  0276               	subwf	___llmod@dividend+2,w
  6374  1F77  1D03               	skipz
  6375  1F78  2F7F               	goto	u5125
  6376  1F79  0871               	movf	___llmod@divisor+1,w
  6377  1F7A  0275               	subwf	___llmod@dividend+1,w
  6378  1F7B  1D03               	skipz
  6379  1F7C  2F7F               	goto	u5125
  6380  1F7D  0870               	movf	___llmod@divisor,w
  6381  1F7E  0274               	subwf	___llmod@dividend,w
  6382  1F7F                     u5125:	
  6383  1F7F  1C03               	skipc
  6384  1F80  2F8F               	goto	l3041
  6385  1F81  0870               	movf	___llmod@divisor,w
  6386  1F82  02F4               	subwf	___llmod@dividend,f
  6387  1F83  0871               	movf	___llmod@divisor+1,w
  6388  1F84  1C03               	skipc
  6389  1F85  0F71               	incfsz	___llmod@divisor+1,w
  6390  1F86  02F5               	subwf	___llmod@dividend+1,f
  6391  1F87  0872               	movf	___llmod@divisor+2,w
  6392  1F88  1C03               	skipc
  6393  1F89  0F72               	incfsz	___llmod@divisor+2,w
  6394  1F8A  02F6               	subwf	___llmod@dividend+2,f
  6395  1F8B  0873               	movf	___llmod@divisor+3,w
  6396  1F8C  1C03               	skipc
  6397  1F8D  0F73               	incfsz	___llmod@divisor+3,w
  6398  1F8E  02F7               	subwf	___llmod@dividend+3,f
  6399  1F8F                     l3041:	
  6400  1F8F  3001               	movlw	1
  6401  1F90                     u5135:	
  6402  1F90  1003               	clrc
  6403  1F91  0CF3               	rrf	___llmod@divisor+3,f
  6404  1F92  0CF2               	rrf	___llmod@divisor+2,f
  6405  1F93  0CF1               	rrf	___llmod@divisor+1,f
  6406  1F94  0CF0               	rrf	___llmod@divisor,f
  6407  1F95  3EFF               	addlw	-1
  6408  1F96  1D03               	skipz
  6409  1F97  2F90               	goto	u5135
  6410  1F98  3001               	movlw	1
  6411  1F99  02F9               	subwf	___llmod@counter,f
  6412  1F9A  1D03               	btfss	3,2
  6413  1F9B  2F71               	goto	l3037
  6414  1F9C                     l3045:	
  6415  1F9C  0877               	movf	___llmod@dividend+3,w
  6416  1F9D  00F3               	movwf	?___llmod+3
  6417  1F9E  0876               	movf	___llmod@dividend+2,w
  6418  1F9F  00F2               	movwf	?___llmod+2
  6419  1FA0  0875               	movf	___llmod@dividend+1,w
  6420  1FA1  00F1               	movwf	?___llmod+1
  6421  1FA2  0874               	movf	___llmod@dividend,w
  6422  1FA3  00F0               	movwf	?___llmod
  6423  1FA4  0008               	return
  6424  1FA5                     __end_of___llmod:	
  6425                           
  6426                           	psect	text16
  6427  10E4                     __ptext16:	
  6428 ;; *************** function ___lldiv *****************
  6429 ;; Defined at:
  6430 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  6431 ;; Parameters:    Size  Location     Type
  6432 ;;  divisor         4    0[COMMON] unsigned long 
  6433 ;;  dividend        4    4[COMMON] unsigned long 
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;  quotient        4    9[COMMON] unsigned long 
  6436 ;;  counter         1   13[COMMON] unsigned char 
  6437 ;; Return value:  Size  Location     Type
  6438 ;;                  4    0[COMMON] unsigned long 
  6439 ;; Registers used:
  6440 ;;		wreg, status,2, status,0
  6441 ;; Tracked objects:
  6442 ;;		On entry : 0/0
  6443 ;;		On exit  : 0/0
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6446 ;;      Params:         8       0       0       0       0
  6447 ;;      Locals:         5       0       0       0       0
  6448 ;;      Temps:          1       0       0       0       0
  6449 ;;      Totals:        14       0       0       0       0
  6450 ;;Total ram usage:       14 bytes
  6451 ;; Hardware stack levels used:    1
  6452 ;; This function calls:
  6453 ;;		Nothing
  6454 ;; This function is called by:
  6455 ;;		_sprintf
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458                           
  6459                           
  6460                           ;psect for function ___lldiv
  6461  10E4                     ___lldiv:	
  6462                           
  6463                           ;incstack = 0
  6464                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6465  10E4  3000               	movlw	0
  6466  10E5  00FC               	movwf	___lldiv@quotient+3
  6467  10E6  3000               	movlw	0
  6468  10E7  00FB               	movwf	___lldiv@quotient+2
  6469  10E8  3000               	movlw	0
  6470  10E9  00FA               	movwf	___lldiv@quotient+1
  6471  10EA  3000               	movlw	0
  6472  10EB  00F9               	movwf	___lldiv@quotient
  6473  10EC  0873               	movf	___lldiv@divisor+3,w
  6474  10ED  0472               	iorwf	___lldiv@divisor+2,w
  6475  10EE  0471               	iorwf	___lldiv@divisor+1,w
  6476  10EF  0470               	iorwf	___lldiv@divisor,w
  6477  10F0  1903               	skipnz
  6478  10F1  2939               	goto	l2949
  6479  10F2  01FD               	clrf	___lldiv@counter
  6480  10F3  0AFD               	incf	___lldiv@counter,f
  6481  10F4                     l2935:	
  6482  10F4  1BF3               	btfsc	___lldiv@divisor+3,7
  6483  10F5  2904               	goto	l2937
  6484  10F6  3001               	movlw	1
  6485  10F7  00F8               	movwf	??___lldiv
  6486  10F8                     u4825:	
  6487  10F8  1003               	clrc
  6488  10F9  0DF0               	rlf	___lldiv@divisor,f
  6489  10FA  0DF1               	rlf	___lldiv@divisor+1,f
  6490  10FB  0DF2               	rlf	___lldiv@divisor+2,f
  6491  10FC  0DF3               	rlf	___lldiv@divisor+3,f
  6492  10FD  0BF8               	decfsz	??___lldiv,f
  6493  10FE  28F8               	goto	u4825
  6494  10FF  3001               	movlw	1
  6495  1100  00F8               	movwf	??___lldiv
  6496  1101  0878               	movf	??___lldiv,w
  6497  1102  07FD               	addwf	___lldiv@counter,f
  6498  1103  28F4               	goto	l2935
  6499  1104                     l2937:	
  6500  1104  3001               	movlw	1
  6501  1105  00F8               	movwf	??___lldiv
  6502  1106                     u4845:	
  6503  1106  1003               	clrc
  6504  1107  0DF9               	rlf	___lldiv@quotient,f
  6505  1108  0DFA               	rlf	___lldiv@quotient+1,f
  6506  1109  0DFB               	rlf	___lldiv@quotient+2,f
  6507  110A  0DFC               	rlf	___lldiv@quotient+3,f
  6508  110B  0BF8               	decfsz	??___lldiv,f
  6509  110C  2906               	goto	u4845
  6510  110D  0873               	movf	___lldiv@divisor+3,w
  6511  110E  0277               	subwf	___lldiv@dividend+3,w
  6512  110F  1D03               	skipz
  6513  1110  291B               	goto	u4855
  6514  1111  0872               	movf	___lldiv@divisor+2,w
  6515  1112  0276               	subwf	___lldiv@dividend+2,w
  6516  1113  1D03               	skipz
  6517  1114  291B               	goto	u4855
  6518  1115  0871               	movf	___lldiv@divisor+1,w
  6519  1116  0275               	subwf	___lldiv@dividend+1,w
  6520  1117  1D03               	skipz
  6521  1118  291B               	goto	u4855
  6522  1119  0870               	movf	___lldiv@divisor,w
  6523  111A  0274               	subwf	___lldiv@dividend,w
  6524  111B                     u4855:	
  6525  111B  1C03               	skipc
  6526  111C  292C               	goto	l2945
  6527  111D  0870               	movf	___lldiv@divisor,w
  6528  111E  02F4               	subwf	___lldiv@dividend,f
  6529  111F  0871               	movf	___lldiv@divisor+1,w
  6530  1120  1C03               	skipc
  6531  1121  0F71               	incfsz	___lldiv@divisor+1,w
  6532  1122  02F5               	subwf	___lldiv@dividend+1,f
  6533  1123  0872               	movf	___lldiv@divisor+2,w
  6534  1124  1C03               	skipc
  6535  1125  0F72               	incfsz	___lldiv@divisor+2,w
  6536  1126  02F6               	subwf	___lldiv@dividend+2,f
  6537  1127  0873               	movf	___lldiv@divisor+3,w
  6538  1128  1C03               	skipc
  6539  1129  0F73               	incfsz	___lldiv@divisor+3,w
  6540  112A  02F7               	subwf	___lldiv@dividend+3,f
  6541  112B  1479               	bsf	___lldiv@quotient,0
  6542  112C                     l2945:	
  6543  112C  3001               	movlw	1
  6544  112D                     u4865:	
  6545  112D  1003               	clrc
  6546  112E  0CF3               	rrf	___lldiv@divisor+3,f
  6547  112F  0CF2               	rrf	___lldiv@divisor+2,f
  6548  1130  0CF1               	rrf	___lldiv@divisor+1,f
  6549  1131  0CF0               	rrf	___lldiv@divisor,f
  6550  1132  3EFF               	addlw	-1
  6551  1133  1D03               	skipz
  6552  1134  292D               	goto	u4865
  6553  1135  3001               	movlw	1
  6554  1136  02FD               	subwf	___lldiv@counter,f
  6555  1137  1D03               	btfss	3,2
  6556  1138  2904               	goto	l2937
  6557  1139                     l2949:	
  6558  1139  087C               	movf	___lldiv@quotient+3,w
  6559  113A  00F3               	movwf	?___lldiv+3
  6560  113B  087B               	movf	___lldiv@quotient+2,w
  6561  113C  00F2               	movwf	?___lldiv+2
  6562  113D  087A               	movf	___lldiv@quotient+1,w
  6563  113E  00F1               	movwf	?___lldiv+1
  6564  113F  0879               	movf	___lldiv@quotient,w
  6565  1140  00F0               	movwf	?___lldiv
  6566  1141  0008               	return
  6567  1142                     __end_of___lldiv:	
  6568                           
  6569                           	psect	text17
  6570  0820                     __ptext17:	
  6571 ;; *************** function ___fltol *****************
  6572 ;; Defined at:
  6573 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;  f1              4   51[BANK0 ] unsigned long 
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;  exp1            1   61[BANK0 ] unsigned char 
  6578 ;;  sign1           1   60[BANK0 ] unsigned char 
  6579 ;; Return value:  Size  Location     Type
  6580 ;;                  4   51[BANK0 ] long 
  6581 ;; Registers used:
  6582 ;;		wreg, status,2, status,0
  6583 ;; Tracked objects:
  6584 ;;		On entry : 0/0
  6585 ;;		On exit  : 0/0
  6586 ;;		Unchanged: 0/0
  6587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6588 ;;      Params:         0       4       0       0       0
  6589 ;;      Locals:         0       2       0       0       0
  6590 ;;      Temps:          0       5       0       0       0
  6591 ;;      Totals:         0      11       0       0       0
  6592 ;;Total ram usage:       11 bytes
  6593 ;; Hardware stack levels used:    1
  6594 ;; This function calls:
  6595 ;;		Nothing
  6596 ;; This function is called by:
  6597 ;;		_sprintf
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601                           
  6602                           ;psect for function ___fltol
  6603  0820                     ___fltol:	
  6604                           
  6605                           ;incstack = 0
  6606                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6607  0820  1003               	clrc
  6608  0821  1283               	bcf	3,5	;RP0=0, select bank0
  6609  0822  1303               	bcf	3,6	;RP1=0, select bank0
  6610  0823  0D55               	rlf	___fltol@f1+2,w
  6611  0824  0D56               	rlf	___fltol@f1+3,w
  6612  0825  00D7               	movwf	??___fltol
  6613  0826  0857               	movf	??___fltol,w
  6614  0827  00DD               	movwf	___fltol@exp1
  6615  0828  085D               	movf	___fltol@exp1,w
  6616  0829  1D03               	btfss	3,2
  6617  082A  2834               	goto	l2999
  6618  082B                     l2995:	
  6619  082B  3000               	movlw	0
  6620  082C  00D6               	movwf	?___fltol+3
  6621  082D  3000               	movlw	0
  6622  082E  00D5               	movwf	?___fltol+2
  6623  082F  3000               	movlw	0
  6624  0830  00D4               	movwf	?___fltol+1
  6625  0831  3000               	movlw	0
  6626  0832  00D3               	movwf	?___fltol
  6627  0833  0008               	return
  6628  0834                     l2999:	
  6629  0834  0853               	movf	___fltol@f1,w
  6630  0835  00D7               	movwf	??___fltol
  6631  0836  0854               	movf	___fltol@f1+1,w
  6632  0837  00D8               	movwf	??___fltol+1
  6633  0838  0855               	movf	___fltol@f1+2,w
  6634  0839  00D9               	movwf	??___fltol+2
  6635  083A  0856               	movf	___fltol@f1+3,w
  6636  083B  00DA               	movwf	??___fltol+3
  6637  083C  301F               	movlw	31
  6638  083D                     u5005:	
  6639  083D  1003               	clrc
  6640  083E  0CDA               	rrf	??___fltol+3,f
  6641  083F  0CD9               	rrf	??___fltol+2,f
  6642  0840  0CD8               	rrf	??___fltol+1,f
  6643  0841  0CD7               	rrf	??___fltol,f
  6644  0842  3EFF               	addlw	-1
  6645  0843  1D03               	skipz
  6646  0844  283D               	goto	u5005
  6647  0845  0857               	movf	??___fltol,w
  6648  0846  00DB               	movwf	??___fltol+4
  6649  0847  085B               	movf	??___fltol+4,w
  6650  0848  00DC               	movwf	___fltol@sign1
  6651  0849  17D5               	bsf	___fltol@f1+2,7
  6652  084A  30FF               	movlw	255
  6653  084B  05D3               	andwf	___fltol@f1,f
  6654  084C  30FF               	movlw	255
  6655  084D  05D4               	andwf	___fltol@f1+1,f
  6656  084E  30FF               	movlw	255
  6657  084F  05D5               	andwf	___fltol@f1+2,f
  6658  0850  3000               	movlw	0
  6659  0851  05D6               	andwf	___fltol@f1+3,f
  6660  0852  3096               	movlw	150
  6661  0853  02DD               	subwf	___fltol@exp1,f
  6662  0854  1FDD               	btfss	___fltol@exp1,7
  6663  0855  286B               	goto	l3017
  6664  0856  085D               	movf	___fltol@exp1,w
  6665  0857  3A80               	xorlw	128
  6666  0858  3E97               	addlw	151
  6667  0859  1C03               	btfss	3,0
  6668  085A  282B               	goto	l2995
  6669  085B                     l3015:	
  6670  085B  3001               	movlw	1
  6671  085C                     u5035:	
  6672  085C  1003               	clrc
  6673  085D  0CD6               	rrf	___fltol@f1+3,f
  6674  085E  0CD5               	rrf	___fltol@f1+2,f
  6675  085F  0CD4               	rrf	___fltol@f1+1,f
  6676  0860  0CD3               	rrf	___fltol@f1,f
  6677  0861  3EFF               	addlw	-1
  6678  0862  1D03               	skipz
  6679  0863  285C               	goto	u5035
  6680  0864  3001               	movlw	1
  6681  0865  00D7               	movwf	??___fltol
  6682  0866  0857               	movf	??___fltol,w
  6683  0867  07DD               	addwf	___fltol@exp1,f
  6684  0868  1903               	btfsc	3,2
  6685  0869  287E               	goto	l3025
  6686  086A  285B               	goto	l3015
  6687  086B                     l3017:	
  6688  086B  3020               	movlw	32
  6689  086C  025D               	subwf	___fltol@exp1,w
  6690  086D  1803               	btfsc	3,0
  6691  086E  282B               	goto	l2995
  6692  086F                     l474:	
  6693  086F  085D               	movf	___fltol@exp1,w
  6694  0870  1903               	btfsc	3,2
  6695  0871  287E               	goto	l3025
  6696  0872  3001               	movlw	1
  6697  0873  00D7               	movwf	??___fltol
  6698  0874                     u5065:	
  6699  0874  1003               	clrc
  6700  0875  0DD3               	rlf	___fltol@f1,f
  6701  0876  0DD4               	rlf	___fltol@f1+1,f
  6702  0877  0DD5               	rlf	___fltol@f1+2,f
  6703  0878  0DD6               	rlf	___fltol@f1+3,f
  6704  0879  0BD7               	decfsz	??___fltol,f
  6705  087A  2874               	goto	u5065
  6706  087B  3001               	movlw	1
  6707  087C  02DD               	subwf	___fltol@exp1,f
  6708  087D  286F               	goto	l474
  6709  087E                     l3025:	
  6710  087E  085C               	movf	___fltol@sign1,w
  6711  087F  1903               	btfsc	3,2
  6712  0880  0008               	return
  6713  0881  09D3               	comf	___fltol@f1,f
  6714  0882  09D4               	comf	___fltol@f1+1,f
  6715  0883  09D5               	comf	___fltol@f1+2,f
  6716  0884  09D6               	comf	___fltol@f1+3,f
  6717  0885  0AD3               	incf	___fltol@f1,f
  6718  0886  1903               	skipnz
  6719  0887  0AD4               	incf	___fltol@f1+1,f
  6720  0888  1903               	skipnz
  6721  0889  0AD5               	incf	___fltol@f1+2,f
  6722  088A  1903               	skipnz
  6723  088B  0AD6               	incf	___fltol@f1+3,f
  6724  088C  0008               	return
  6725  088D                     __end_of___fltol:	
  6726                           
  6727                           	psect	text18
  6728  1D64                     __ptext18:	
  6729 ;; *************** function ___flsub *****************
  6730 ;; Defined at:
  6731 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;  a               4   72[BANK0 ] long 
  6734 ;;  b               4   76[BANK0 ] long 
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;		None
  6737 ;; Return value:  Size  Location     Type
  6738 ;;                  4   72[BANK0 ] long 
  6739 ;; Registers used:
  6740 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6741 ;; Tracked objects:
  6742 ;;		On entry : 0/0
  6743 ;;		On exit  : 0/0
  6744 ;;		Unchanged: 0/0
  6745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6746 ;;      Params:         0       8       0       0       0
  6747 ;;      Locals:         0       0       0       0       0
  6748 ;;      Temps:          0       0       0       0       0
  6749 ;;      Totals:         0       8       0       0       0
  6750 ;;Total ram usage:        8 bytes
  6751 ;; Hardware stack levels used:    1
  6752 ;; Hardware stack levels required when called:    1
  6753 ;; This function calls:
  6754 ;;		___fladd
  6755 ;; This function is called by:
  6756 ;;		_sprintf
  6757 ;; This function uses a non-reentrant model
  6758 ;;
  6759                           
  6760                           
  6761                           ;psect for function ___flsub
  6762  1D64                     ___flsub:	
  6763                           
  6764                           ;incstack = 0
  6765                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6766  1D64  3080               	movlw	128
  6767  1D65  1283               	bcf	3,5	;RP0=0, select bank0
  6768  1D66  1303               	bcf	3,6	;RP1=0, select bank0
  6769  1D67  06EB               	xorwf	___flsub@a+3,f
  6770  1D68  086F               	movf	___flsub@b+3,w
  6771  1D69  00D7               	movwf	___fladd@b+3
  6772  1D6A  086E               	movf	___flsub@b+2,w
  6773  1D6B  00D6               	movwf	___fladd@b+2
  6774  1D6C  086D               	movf	___flsub@b+1,w
  6775  1D6D  00D5               	movwf	___fladd@b+1
  6776  1D6E  086C               	movf	___flsub@b,w
  6777  1D6F  00D4               	movwf	___fladd@b
  6778  1D70  086B               	movf	___flsub@a+3,w
  6779  1D71  00DB               	movwf	___fladd@a+3
  6780  1D72  086A               	movf	___flsub@a+2,w
  6781  1D73  00DA               	movwf	___fladd@a+2
  6782  1D74  0869               	movf	___flsub@a+1,w
  6783  1D75  00D9               	movwf	___fladd@a+1
  6784  1D76  0868               	movf	___flsub@a,w
  6785  1D77  00D8               	movwf	___fladd@a
  6786  1D78  160A  118A  25D1   	fcall	___fladd
  6787  1D7B  1283               	bcf	3,5	;RP0=0, select bank0
  6788  1D7C  1303               	bcf	3,6	;RP1=0, select bank0
  6789  1D7D  0857               	movf	?___fladd+3,w
  6790  1D7E  00EB               	movwf	?___flsub+3
  6791  1D7F  0856               	movf	?___fladd+2,w
  6792  1D80  00EA               	movwf	?___flsub+2
  6793  1D81  0855               	movf	?___fladd+1,w
  6794  1D82  00E9               	movwf	?___flsub+1
  6795  1D83  0854               	movf	?___fladd,w
  6796  1D84  00E8               	movwf	?___flsub
  6797  1D85  0008               	return
  6798  1D86                     __end_of___flsub:	
  6799                           
  6800                           	psect	text19
  6801  15D1                     __ptext19:	
  6802 ;; *************** function ___fladd *****************
  6803 ;; Defined at:
  6804 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  6805 ;; Parameters:    Size  Location     Type
  6806 ;;  b               4   52[BANK0 ] long 
  6807 ;;  a               4   56[BANK0 ] long 
  6808 ;; Auto vars:     Size  Location     Type
  6809 ;;  grs             1   71[BANK0 ] unsigned char 
  6810 ;;  bexp            1   70[BANK0 ] unsigned char 
  6811 ;;  aexp            1   69[BANK0 ] unsigned char 
  6812 ;;  signs           1   68[BANK0 ] unsigned char 
  6813 ;; Return value:  Size  Location     Type
  6814 ;;                  4   52[BANK0 ] unsigned char 
  6815 ;; Registers used:
  6816 ;;		wreg, status,2, status,0, btemp+1
  6817 ;; Tracked objects:
  6818 ;;		On entry : 0/0
  6819 ;;		On exit  : 0/0
  6820 ;;		Unchanged: 0/0
  6821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6822 ;;      Params:         0       8       0       0       0
  6823 ;;      Locals:         0       4       0       0       0
  6824 ;;      Temps:          0       8       0       0       0
  6825 ;;      Totals:         0      20       0       0       0
  6826 ;;Total ram usage:       20 bytes
  6827 ;; Hardware stack levels used:    1
  6828 ;; This function calls:
  6829 ;;		Nothing
  6830 ;; This function is called by:
  6831 ;;		_sprintf
  6832 ;;		___flsub
  6833 ;; This function uses a non-reentrant model
  6834 ;;
  6835                           
  6836                           
  6837                           ;psect for function ___fladd
  6838  15D1                     ___fladd:	
  6839                           
  6840                           ;incstack = 0
  6841                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6842  15D1  1283               	bcf	3,5	;RP0=0, select bank0
  6843  15D2  1303               	bcf	3,6	;RP1=0, select bank0
  6844  15D3  0857               	movf	___fladd@b+3,w
  6845  15D4  3980               	andlw	128
  6846  15D5  00DC               	movwf	??___fladd
  6847  15D6  085C               	movf	??___fladd,w
  6848  15D7  00E4               	movwf	___fladd@signs
  6849  15D8  0857               	movf	___fladd@b+3,w
  6850  15D9  00DC               	movwf	??___fladd
  6851  15DA  075C               	addwf	??___fladd,w
  6852  15DB  00DD               	movwf	??___fladd+1
  6853  15DC  085D               	movf	??___fladd+1,w
  6854  15DD  00E6               	movwf	___fladd@bexp
  6855  15DE  1BD6               	btfsc	___fladd@b+2,7
  6856  15DF  1466               	bsf	___fladd@bexp,0
  6857  15E0  0866               	movf	___fladd@bexp,w
  6858  15E1  1903               	btfsc	3,2
  6859  15E2  2DF1               	goto	l2395
  6860  15E3  0A66               	incf	___fladd@bexp,w
  6861  15E4  1D03               	btfss	3,2
  6862  15E5  2DEE               	goto	l2391
  6863  15E6  3000               	movlw	0
  6864  15E7  00D7               	movwf	___fladd@b+3
  6865  15E8  3000               	movlw	0
  6866  15E9  00D6               	movwf	___fladd@b+2
  6867  15EA  3000               	movlw	0
  6868  15EB  00D5               	movwf	___fladd@b+1
  6869  15EC  3000               	movlw	0
  6870  15ED  00D4               	movwf	___fladd@b
  6871  15EE                     l2391:	
  6872  15EE  17D6               	bsf	___fladd@b+2,7
  6873  15EF  01D7               	clrf	___fladd@b+3
  6874  15F0  2DF9               	goto	l2397
  6875  15F1                     l2395:	
  6876  15F1  3000               	movlw	0
  6877  15F2  00D7               	movwf	___fladd@b+3
  6878  15F3  3000               	movlw	0
  6879  15F4  00D6               	movwf	___fladd@b+2
  6880  15F5  3000               	movlw	0
  6881  15F6  00D5               	movwf	___fladd@b+1
  6882  15F7  3000               	movlw	0
  6883  15F8  00D4               	movwf	___fladd@b
  6884  15F9                     l2397:	
  6885  15F9  085B               	movf	___fladd@a+3,w
  6886  15FA  3980               	andlw	128
  6887  15FB  00DC               	movwf	??___fladd
  6888  15FC  085C               	movf	??___fladd,w
  6889  15FD  00E5               	movwf	___fladd@aexp
  6890  15FE  0865               	movf	___fladd@aexp,w
  6891  15FF  0664               	xorwf	___fladd@signs,w
  6892  1600  1D03               	btfss	3,2
  6893  1601  1764               	bsf	___fladd@signs,6
  6894  1602  085B               	movf	___fladd@a+3,w
  6895  1603  00DC               	movwf	??___fladd
  6896  1604  075C               	addwf	??___fladd,w
  6897  1605  00DD               	movwf	??___fladd+1
  6898  1606  085D               	movf	??___fladd+1,w
  6899  1607  00E5               	movwf	___fladd@aexp
  6900  1608  1BDA               	btfsc	___fladd@a+2,7
  6901  1609  1465               	bsf	___fladd@aexp,0
  6902  160A  0865               	movf	___fladd@aexp,w
  6903  160B  1903               	btfsc	3,2
  6904  160C  2E1B               	goto	l2419
  6905  160D  0A65               	incf	___fladd@aexp,w
  6906  160E  1D03               	btfss	3,2
  6907  160F  2E18               	goto	l2415
  6908  1610  3000               	movlw	0
  6909  1611  00DB               	movwf	___fladd@a+3
  6910  1612  3000               	movlw	0
  6911  1613  00DA               	movwf	___fladd@a+2
  6912  1614  3000               	movlw	0
  6913  1615  00D9               	movwf	___fladd@a+1
  6914  1616  3000               	movlw	0
  6915  1617  00D8               	movwf	___fladd@a
  6916  1618                     l2415:	
  6917  1618  17DA               	bsf	___fladd@a+2,7
  6918  1619  01DB               	clrf	___fladd@a+3
  6919  161A  2E23               	goto	l591
  6920  161B                     l2419:	
  6921  161B  3000               	movlw	0
  6922  161C  00DB               	movwf	___fladd@a+3
  6923  161D  3000               	movlw	0
  6924  161E  00DA               	movwf	___fladd@a+2
  6925  161F  3000               	movlw	0
  6926  1620  00D9               	movwf	___fladd@a+1
  6927  1621  3000               	movlw	0
  6928  1622  00D8               	movwf	___fladd@a
  6929  1623                     l591:	
  6930  1623  0866               	movf	___fladd@bexp,w
  6931  1624  0265               	subwf	___fladd@aexp,w
  6932  1625  1803               	skipnc
  6933  1626  2E69               	goto	l2455
  6934  1627  1F64               	btfss	___fladd@signs,6
  6935  1628  2E2D               	goto	l2425
  6936  1629  3080               	movlw	128
  6937  162A  00DC               	movwf	??___fladd
  6938  162B  085C               	movf	??___fladd,w
  6939  162C  06E4               	xorwf	___fladd@signs,f
  6940  162D                     l2425:	
  6941  162D  0866               	movf	___fladd@bexp,w
  6942  162E  00DC               	movwf	??___fladd
  6943  162F  085C               	movf	??___fladd,w
  6944  1630  00E7               	movwf	___fladd@grs
  6945  1631  0865               	movf	___fladd@aexp,w
  6946  1632  00DC               	movwf	??___fladd
  6947  1633  085C               	movf	??___fladd,w
  6948  1634  00E6               	movwf	___fladd@bexp
  6949  1635  0867               	movf	___fladd@grs,w
  6950  1636  00DC               	movwf	??___fladd
  6951  1637  085C               	movf	??___fladd,w
  6952  1638  00E5               	movwf	___fladd@aexp
  6953  1639  0854               	movf	___fladd@b,w
  6954  163A  00DC               	movwf	??___fladd
  6955  163B  085C               	movf	??___fladd,w
  6956  163C  00E7               	movwf	___fladd@grs
  6957  163D  0858               	movf	___fladd@a,w
  6958  163E  00DC               	movwf	??___fladd
  6959  163F  085C               	movf	??___fladd,w
  6960  1640  00D4               	movwf	___fladd@b
  6961  1641  0867               	movf	___fladd@grs,w
  6962  1642  00DC               	movwf	??___fladd
  6963  1643  085C               	movf	??___fladd,w
  6964  1644  00D8               	movwf	___fladd@a
  6965  1645  0855               	movf	___fladd@b+1,w
  6966  1646  00DC               	movwf	??___fladd
  6967  1647  085C               	movf	??___fladd,w
  6968  1648  00E7               	movwf	___fladd@grs
  6969  1649  0859               	movf	___fladd@a+1,w
  6970  164A  00DC               	movwf	??___fladd
  6971  164B  085C               	movf	??___fladd,w
  6972  164C  00D5               	movwf	___fladd@b+1
  6973  164D  0867               	movf	___fladd@grs,w
  6974  164E  00DC               	movwf	??___fladd
  6975  164F  085C               	movf	??___fladd,w
  6976  1650  00D9               	movwf	___fladd@a+1
  6977  1651  0856               	movf	___fladd@b+2,w
  6978  1652  00DC               	movwf	??___fladd
  6979  1653  085C               	movf	??___fladd,w
  6980  1654  00E7               	movwf	___fladd@grs
  6981  1655  085A               	movf	___fladd@a+2,w
  6982  1656  00DC               	movwf	??___fladd
  6983  1657  085C               	movf	??___fladd,w
  6984  1658  00D6               	movwf	___fladd@b+2
  6985  1659  0867               	movf	___fladd@grs,w
  6986  165A  00DC               	movwf	??___fladd
  6987  165B  085C               	movf	??___fladd,w
  6988  165C  00DA               	movwf	___fladd@a+2
  6989  165D  0857               	movf	___fladd@b+3,w
  6990  165E  00DC               	movwf	??___fladd
  6991  165F  085C               	movf	??___fladd,w
  6992  1660  00E7               	movwf	___fladd@grs
  6993  1661  085B               	movf	___fladd@a+3,w
  6994  1662  00DC               	movwf	??___fladd
  6995  1663  085C               	movf	??___fladd,w
  6996  1664  00D7               	movwf	___fladd@b+3
  6997  1665  0867               	movf	___fladd@grs,w
  6998  1666  00DC               	movwf	??___fladd
  6999  1667  085C               	movf	??___fladd,w
  7000  1668  00DB               	movwf	___fladd@a+3
  7001  1669                     l2455:	
  7002  1669  01E7               	clrf	___fladd@grs
  7003  166A  0865               	movf	___fladd@aexp,w
  7004  166B  00DC               	movwf	??___fladd
  7005  166C  01DD               	clrf	??___fladd+1
  7006  166D  085D               	movf	??___fladd+1,w
  7007  166E  00DF               	movwf	??___fladd+3
  7008  166F  0866               	movf	___fladd@bexp,w
  7009  1670  025C               	subwf	??___fladd,w
  7010  1671  00DE               	movwf	??___fladd+2
  7011  1672  1C03               	skipc
  7012  1673  03DF               	decf	??___fladd+3,f
  7013  1674  085F               	movf	??___fladd+3,w
  7014  1675  3A80               	xorlw	128
  7015  1676  00FF               	movwf	127
  7016  1677  3080               	movlw	128
  7017  1678  027F               	subwf	127,w
  7018  1679  1D03               	skipz
  7019  167A  2E7D               	goto	u3495
  7020  167B  301A               	movlw	26
  7021  167C  025E               	subwf	??___fladd+2,w
  7022  167D                     u3495:	
  7023  167D  1C03               	skipc
  7024  167E  2EB6               	goto	l2473
  7025  167F  1283               	bcf	3,5	;RP0=0, select bank0
  7026  1680  1303               	bcf	3,6	;RP1=0, select bank0
  7027  1681  0857               	movf	___fladd@b+3,w
  7028  1682  0456               	iorwf	___fladd@b+2,w
  7029  1683  0455               	iorwf	___fladd@b+1,w
  7030  1684  0454               	iorwf	___fladd@b,w
  7031  1685  1903               	btfsc	3,2
  7032  1686  2E89               	goto	u3500
  7033  1687  3001               	movlw	1
  7034  1688  2E8A               	goto	u3510
  7035  1689                     u3500:	
  7036  1689  3000               	movlw	0
  7037  168A                     u3510:	
  7038  168A  00DC               	movwf	??___fladd
  7039  168B  085C               	movf	??___fladd,w
  7040  168C  00E7               	movwf	___fladd@grs
  7041  168D  3000               	movlw	0
  7042  168E  00D7               	movwf	___fladd@b+3
  7043  168F  3000               	movlw	0
  7044  1690  00D6               	movwf	___fladd@b+2
  7045  1691  3000               	movlw	0
  7046  1692  00D5               	movwf	___fladd@b+1
  7047  1693  3000               	movlw	0
  7048  1694  00D4               	movwf	___fladd@b
  7049  1695  0865               	movf	___fladd@aexp,w
  7050  1696  00DC               	movwf	??___fladd
  7051  1697  085C               	movf	??___fladd,w
  7052  1698  00E6               	movwf	___fladd@bexp
  7053  1699  2EBC               	goto	l595
  7054  169A                     l597:	
  7055  169A  1C67               	btfss	___fladd@grs,0
  7056  169B  2EA5               	goto	l2463
  7057  169C  0867               	movf	___fladd@grs,w
  7058  169D  00DC               	movwf	??___fladd
  7059  169E  1003               	clrc
  7060  169F  0C5C               	rrf	??___fladd,w
  7061  16A0  3801               	iorlw	1
  7062  16A1  00DD               	movwf	??___fladd+1
  7063  16A2  085D               	movf	??___fladd+1,w
  7064  16A3  00E7               	movwf	___fladd@grs
  7065  16A4  2EA7               	goto	l2465
  7066  16A5                     l2463:	
  7067  16A5  1003               	clrc
  7068  16A6  0CE7               	rrf	___fladd@grs,f
  7069  16A7                     l2465:	
  7070  16A7  1854               	btfsc	___fladd@b,0
  7071  16A8  17E7               	bsf	___fladd@grs,7
  7072  16A9  3001               	movlw	1
  7073  16AA  00DC               	movwf	??___fladd
  7074  16AB                     u3545:	
  7075  16AB  0D57               	rlf	___fladd@b+3,w
  7076  16AC  0CD7               	rrf	___fladd@b+3,f
  7077  16AD  0CD6               	rrf	___fladd@b+2,f
  7078  16AE  0CD5               	rrf	___fladd@b+1,f
  7079  16AF  0CD4               	rrf	___fladd@b,f
  7080  16B0  0BDC               	decfsz	??___fladd& (0+127),f
  7081  16B1  2EAB               	goto	u3545
  7082  16B2  3001               	movlw	1
  7083  16B3  00DC               	movwf	??___fladd
  7084  16B4  085C               	movf	??___fladd,w
  7085  16B5  07E6               	addwf	___fladd@bexp,f
  7086  16B6                     l2473:	
  7087  16B6  1283               	bcf	3,5	;RP0=0, select bank0
  7088  16B7  1303               	bcf	3,6	;RP1=0, select bank0
  7089  16B8  0865               	movf	___fladd@aexp,w
  7090  16B9  0266               	subwf	___fladd@bexp,w
  7091  16BA  1C03               	skipc
  7092  16BB  2E9A               	goto	l597
  7093  16BC                     l595:	
  7094  16BC  1B64               	btfsc	___fladd@signs,6
  7095  16BD  2EFD               	goto	l2499
  7096  16BE  0866               	movf	___fladd@bexp,w
  7097  16BF  1D03               	btfss	3,2
  7098  16C0  2ECA               	goto	l2481
  7099  16C1  3000               	movlw	0
  7100  16C2  00D7               	movwf	?___fladd+3
  7101  16C3  3000               	movlw	0
  7102  16C4  00D6               	movwf	?___fladd+2
  7103  16C5  3000               	movlw	0
  7104  16C6  00D5               	movwf	?___fladd+1
  7105  16C7  3000               	movlw	0
  7106  16C8  00D4               	movwf	?___fladd
  7107  16C9  0008               	return
  7108  16CA                     l2481:	
  7109  16CA  0858               	movf	___fladd@a,w
  7110  16CB  07D4               	addwf	___fladd@b,f
  7111  16CC  0859               	movf	___fladd@a+1,w
  7112  16CD  1103               	clrz
  7113  16CE  1803               	skipnc
  7114  16CF  3E01               	addlw	1
  7115  16D0  1D03               	btfss	3,2
  7116  16D1  07D5               	addwf	___fladd@b+1,f
  7117  16D2  085A               	movf	___fladd@a+2,w
  7118  16D3  1103               	clrz
  7119  16D4  1803               	skipnc
  7120  16D5  3E01               	addlw	1
  7121  16D6  1D03               	btfss	3,2
  7122  16D7  07D6               	addwf	___fladd@b+2,f
  7123  16D8  085B               	movf	___fladd@a+3,w
  7124  16D9  1103               	clrz
  7125  16DA  1803               	skipnc
  7126  16DB  3E01               	addlw	1
  7127  16DC  1D03               	btfss	3,2
  7128  16DD  07D7               	addwf	___fladd@b+3,f
  7129  16DE  1C57               	btfss	___fladd@b+3,0
  7130  16DF  2F9F               	goto	l2533
  7131  16E0  1C67               	btfss	___fladd@grs,0
  7132  16E1  2EEB               	goto	l2489
  7133  16E2  0867               	movf	___fladd@grs,w
  7134  16E3  00DC               	movwf	??___fladd
  7135  16E4  1003               	clrc
  7136  16E5  0C5C               	rrf	??___fladd,w
  7137  16E6  3801               	iorlw	1
  7138  16E7  00DD               	movwf	??___fladd+1
  7139  16E8  085D               	movf	??___fladd+1,w
  7140  16E9  00E7               	movwf	___fladd@grs
  7141  16EA  2EED               	goto	l2491
  7142  16EB                     l2489:	
  7143  16EB  1003               	clrc
  7144  16EC  0CE7               	rrf	___fladd@grs,f
  7145  16ED                     l2491:	
  7146  16ED  1854               	btfsc	___fladd@b,0
  7147  16EE  17E7               	bsf	___fladd@grs,7
  7148  16EF  3001               	movlw	1
  7149  16F0  00DC               	movwf	??___fladd
  7150  16F1                     u3625:	
  7151  16F1  0D57               	rlf	___fladd@b+3,w
  7152  16F2  0CD7               	rrf	___fladd@b+3,f
  7153  16F3  0CD6               	rrf	___fladd@b+2,f
  7154  16F4  0CD5               	rrf	___fladd@b+1,f
  7155  16F5  0CD4               	rrf	___fladd@b,f
  7156  16F6  0BDC               	decfsz	??___fladd& (0+127),f
  7157  16F7  2EF1               	goto	u3625
  7158  16F8  3001               	movlw	1
  7159  16F9  00DC               	movwf	??___fladd
  7160  16FA  085C               	movf	??___fladd,w
  7161  16FB  07E6               	addwf	___fladd@bexp,f
  7162  16FC  2F9F               	goto	l2533
  7163  16FD                     l2499:	
  7164  16FD  0857               	movf	___fladd@b+3,w
  7165  16FE  3A80               	xorlw	128
  7166  16FF  00FF               	movwf	127
  7167  1700  085B               	movf	___fladd@a+3,w
  7168  1701  3A80               	xorlw	128
  7169  1702  027F               	subwf	127,w
  7170  1703  1D03               	skipz
  7171  1704  2F0F               	goto	u3633
  7172  1705  085A               	movf	___fladd@a+2,w
  7173  1706  0256               	subwf	___fladd@b+2,w
  7174  1707  1D03               	skipz
  7175  1708  2F0F               	goto	u3633
  7176  1709  0859               	movf	___fladd@a+1,w
  7177  170A  0255               	subwf	___fladd@b+1,w
  7178  170B  1D03               	skipz
  7179  170C  2F0F               	goto	u3633
  7180  170D  0858               	movf	___fladd@a,w
  7181  170E  0254               	subwf	___fladd@b,w
  7182  170F                     u3633:	
  7183  170F  1803               	skipnc
  7184  1710  2F67               	goto	l2509
  7185  1711  30FF               	movlw	255
  7186  1712  00DC               	movwf	??___fladd
  7187  1713  30FF               	movlw	255
  7188  1714  00DD               	movwf	??___fladd+1
  7189  1715  30FF               	movlw	255
  7190  1716  00DE               	movwf	??___fladd+2
  7191  1717  30FF               	movlw	255
  7192  1718  00DF               	movwf	??___fladd+3
  7193  1719  0858               	movf	___fladd@a,w
  7194  171A  00E0               	movwf	??___fladd+4
  7195  171B  0859               	movf	___fladd@a+1,w
  7196  171C  00E1               	movwf	??___fladd+5
  7197  171D  085A               	movf	___fladd@a+2,w
  7198  171E  00E2               	movwf	??___fladd+6
  7199  171F  085B               	movf	___fladd@a+3,w
  7200  1720  00E3               	movwf	??___fladd+7
  7201  1721  0854               	movf	___fladd@b,w
  7202  1722  02E0               	subwf	??___fladd+4,f
  7203  1723  0855               	movf	___fladd@b+1,w
  7204  1724  1C03               	skipc
  7205  1725  0F55               	incfsz	___fladd@b+1,w
  7206  1726  2F28               	goto	u3641
  7207  1727  2F29               	goto	u3642
  7208  1728                     u3641:	
  7209  1728  02E1               	subwf	??___fladd+5,f
  7210  1729                     u3642:	
  7211  1729  0856               	movf	___fladd@b+2,w
  7212  172A  1C03               	skipc
  7213  172B  0F56               	incfsz	___fladd@b+2,w
  7214  172C  2F2E               	goto	u3643
  7215  172D  2F2F               	goto	u3644
  7216  172E                     u3643:	
  7217  172E  02E2               	subwf	??___fladd+6,f
  7218  172F                     u3644:	
  7219  172F  0857               	movf	___fladd@b+3,w
  7220  1730  1C03               	skipc
  7221  1731  0F57               	incfsz	___fladd@b+3,w
  7222  1732  2F34               	goto	u3645
  7223  1733  2F35               	goto	u3646
  7224  1734                     u3645:	
  7225  1734  02E3               	subwf	??___fladd+7,f
  7226  1735                     u3646:	
  7227  1735  0860               	movf	??___fladd+4,w
  7228  1736  07DC               	addwf	??___fladd,f
  7229  1737  0861               	movf	??___fladd+5,w
  7230  1738  1803               	skipnc
  7231  1739  0F61               	incfsz	??___fladd+5,w
  7232  173A  2F3C               	goto	u3650
  7233  173B  2F3D               	goto	u3651
  7234  173C                     u3650:	
  7235  173C  07DD               	addwf	??___fladd+1,f
  7236  173D                     u3651:	
  7237  173D  0862               	movf	??___fladd+6,w
  7238  173E  1803               	skipnc
  7239  173F  0F62               	incfsz	??___fladd+6,w
  7240  1740  2F42               	goto	u3652
  7241  1741  2F43               	goto	u3653
  7242  1742                     u3652:	
  7243  1742  07DE               	addwf	??___fladd+2,f
  7244  1743                     u3653:	
  7245  1743  0863               	movf	??___fladd+7,w
  7246  1744  1803               	skipnc
  7247  1745  0A63               	incf	??___fladd+7,w
  7248  1746  07DF               	addwf	??___fladd+3,f
  7249  1747  085F               	movf	??___fladd+3,w
  7250  1748  00D7               	movwf	___fladd@b+3
  7251  1749  085E               	movf	??___fladd+2,w
  7252  174A  00D6               	movwf	___fladd@b+2
  7253  174B  085D               	movf	??___fladd+1,w
  7254  174C  00D5               	movwf	___fladd@b+1
  7255  174D  085C               	movf	??___fladd,w
  7256  174E  00D4               	movwf	___fladd@b
  7257  174F  3080               	movlw	128
  7258  1750  00DC               	movwf	??___fladd
  7259  1751  085C               	movf	??___fladd,w
  7260  1752  06E4               	xorwf	___fladd@signs,f
  7261  1753  09E7               	comf	___fladd@grs,f
  7262  1754  0AE7               	incf	___fladd@grs,f
  7263  1755  0867               	movf	___fladd@grs,w
  7264  1756  1D03               	btfss	3,2
  7265  1757  2F75               	goto	l612
  7266  1758  3001               	movlw	1
  7267  1759  07D4               	addwf	___fladd@b,f
  7268  175A  3000               	movlw	0
  7269  175B  1803               	skipnc
  7270  175C  3001               	movlw	1
  7271  175D  07D5               	addwf	___fladd@b+1,f
  7272  175E  3000               	movlw	0
  7273  175F  1803               	skipnc
  7274  1760  3001               	movlw	1
  7275  1761  07D6               	addwf	___fladd@b+2,f
  7276  1762  3000               	movlw	0
  7277  1763  1803               	skipnc
  7278  1764  3001               	movlw	1
  7279  1765  07D7               	addwf	___fladd@b+3,f
  7280  1766  2F75               	goto	l612
  7281  1767                     l2509:	
  7282  1767  0858               	movf	___fladd@a,w
  7283  1768  02D4               	subwf	___fladd@b,f
  7284  1769  0859               	movf	___fladd@a+1,w
  7285  176A  1C03               	skipc
  7286  176B  0F59               	incfsz	___fladd@a+1,w
  7287  176C  02D5               	subwf	___fladd@b+1,f
  7288  176D  085A               	movf	___fladd@a+2,w
  7289  176E  1C03               	skipc
  7290  176F  0F5A               	incfsz	___fladd@a+2,w
  7291  1770  02D6               	subwf	___fladd@b+2,f
  7292  1771  085B               	movf	___fladd@a+3,w
  7293  1772  1C03               	skipc
  7294  1773  0F5B               	incfsz	___fladd@a+3,w
  7295  1774  02D7               	subwf	___fladd@b+3,f
  7296  1775                     l612:	
  7297  1775  0857               	movf	___fladd@b+3,w
  7298  1776  0456               	iorwf	___fladd@b+2,w
  7299  1777  0455               	iorwf	___fladd@b+1,w
  7300  1778  0454               	iorwf	___fladd@b,w
  7301  1779  1D03               	skipz
  7302  177A  2F9D               	goto	l2531
  7303  177B  0867               	movf	___fladd@grs,w
  7304  177C  1D03               	btfss	3,2
  7305  177D  2F9D               	goto	l2531
  7306  177E  3000               	movlw	0
  7307  177F  00D7               	movwf	?___fladd+3
  7308  1780  3000               	movlw	0
  7309  1781  00D6               	movwf	?___fladd+2
  7310  1782  3000               	movlw	0
  7311  1783  00D5               	movwf	?___fladd+1
  7312  1784  3000               	movlw	0
  7313  1785  00D4               	movwf	?___fladd
  7314  1786  0008               	return
  7315  1787                     l2517:	
  7316  1787  3001               	movlw	1
  7317  1788  00DC               	movwf	??___fladd
  7318  1789                     u3695:	
  7319  1789  1003               	clrc
  7320  178A  0DD4               	rlf	___fladd@b,f
  7321  178B  0DD5               	rlf	___fladd@b+1,f
  7322  178C  0DD6               	rlf	___fladd@b+2,f
  7323  178D  0DD7               	rlf	___fladd@b+3,f
  7324  178E  0BDC               	decfsz	??___fladd,f
  7325  178F  2F89               	goto	u3695
  7326  1790  1BE7               	btfsc	___fladd@grs,7
  7327  1791  1454               	bsf	___fladd@b,0
  7328  1792  1C67               	btfss	___fladd@grs,0
  7329  1793  2F96               	goto	l2525
  7330  1794  1403               	setc
  7331  1795  2F97               	goto	L7
  7332  1796                     l2525:	
  7333  1796  1003               	clrc
  7334  1797                     L7:	
  7335  1797  0DE7               	rlf	___fladd@grs,f
  7336  1798  0866               	movf	___fladd@bexp,w
  7337  1799  1903               	btfsc	3,2
  7338  179A  2F9D               	goto	l2531
  7339  179B  3001               	movlw	1
  7340  179C  02E6               	subwf	___fladd@bexp,f
  7341  179D                     l2531:	
  7342  179D  1FD6               	btfss	___fladd@b+2,7
  7343  179E  2F87               	goto	l2517
  7344  179F                     l2533:	
  7345  179F  01E5               	clrf	___fladd@aexp
  7346  17A0  1FE7               	btfss	___fladd@grs,7
  7347  17A1  2FAA               	goto	l2543
  7348  17A2  0867               	movf	___fladd@grs,w
  7349  17A3  397F               	andlw	127
  7350  17A4  1903               	btfsc	3,2
  7351  17A5  1854               	btfsc	___fladd@b,0
  7352  17A6  2FA8               	goto	l2539
  7353  17A7  2FAA               	goto	l2543
  7354  17A8                     l2539:	
  7355  17A8  01E5               	clrf	___fladd@aexp
  7356  17A9  0AE5               	incf	___fladd@aexp,f
  7357  17AA                     l2543:	
  7358  17AA  0865               	movf	___fladd@aexp,w
  7359  17AB  1903               	btfsc	3,2
  7360  17AC  2FDD               	goto	l625
  7361  17AD  3001               	movlw	1
  7362  17AE  07D4               	addwf	___fladd@b,f
  7363  17AF  3000               	movlw	0
  7364  17B0  1803               	skipnc
  7365  17B1  3001               	movlw	1
  7366  17B2  07D5               	addwf	___fladd@b+1,f
  7367  17B3  3000               	movlw	0
  7368  17B4  1803               	skipnc
  7369  17B5  3001               	movlw	1
  7370  17B6  07D6               	addwf	___fladd@b+2,f
  7371  17B7  3000               	movlw	0
  7372  17B8  1803               	skipnc
  7373  17B9  3001               	movlw	1
  7374  17BA  07D7               	addwf	___fladd@b+3,f
  7375  17BB  1C57               	btfss	___fladd@b+3,0
  7376  17BC  2FDD               	goto	l625
  7377  17BD  0854               	movf	___fladd@b,w
  7378  17BE  00DC               	movwf	??___fladd
  7379  17BF  0855               	movf	___fladd@b+1,w
  7380  17C0  00DD               	movwf	??___fladd+1
  7381  17C1  0856               	movf	___fladd@b+2,w
  7382  17C2  00DE               	movwf	??___fladd+2
  7383  17C3  0857               	movf	___fladd@b+3,w
  7384  17C4  00DF               	movwf	??___fladd+3
  7385  17C5  3001               	movlw	1
  7386  17C6  00E0               	movwf	??___fladd+4
  7387  17C7                     u3795:	
  7388  17C7  0D5F               	rlf	??___fladd+3,w
  7389  17C8  0CDF               	rrf	??___fladd+3,f
  7390  17C9  0CDE               	rrf	??___fladd+2,f
  7391  17CA  0CDD               	rrf	??___fladd+1,f
  7392  17CB  0CDC               	rrf	??___fladd,f
  7393  17CC  0BE0               	decfsz	??___fladd+4,f
  7394  17CD  2FC7               	goto	u3795
  7395  17CE  085F               	movf	??___fladd+3,w
  7396  17CF  00D7               	movwf	___fladd@b+3
  7397  17D0  085E               	movf	??___fladd+2,w
  7398  17D1  00D6               	movwf	___fladd@b+2
  7399  17D2  085D               	movf	??___fladd+1,w
  7400  17D3  00D5               	movwf	___fladd@b+1
  7401  17D4  085C               	movf	??___fladd,w
  7402  17D5  00D4               	movwf	___fladd@b
  7403  17D6  0A66               	incf	___fladd@bexp,w
  7404  17D7  1903               	btfsc	3,2
  7405  17D8  2FDD               	goto	l625
  7406  17D9  3001               	movlw	1
  7407  17DA  00DC               	movwf	??___fladd
  7408  17DB  085C               	movf	??___fladd,w
  7409  17DC  07E6               	addwf	___fladd@bexp,f
  7410  17DD                     l625:	
  7411  17DD  0A66               	incf	___fladd@bexp,w
  7412  17DE  1D03               	btfss	3,2
  7413  17DF  0866               	movf	___fladd@bexp,w
  7414  17E0  1D03               	btfss	3,2
  7415  17E1  2FED               	goto	l2561
  7416  17E2  3000               	movlw	0
  7417  17E3  00D7               	movwf	___fladd@b+3
  7418  17E4  3000               	movlw	0
  7419  17E5  00D6               	movwf	___fladd@b+2
  7420  17E6  3000               	movlw	0
  7421  17E7  00D5               	movwf	___fladd@b+1
  7422  17E8  3000               	movlw	0
  7423  17E9  00D4               	movwf	___fladd@b
  7424  17EA  0866               	movf	___fladd@bexp,w
  7425  17EB  1903               	btfsc	3,2
  7426  17EC  01E4               	clrf	___fladd@signs
  7427  17ED                     l2561:	
  7428  17ED  1C66               	btfss	___fladd@bexp,0
  7429  17EE  2FF1               	goto	l2565
  7430  17EF  17D6               	bsf	___fladd@b+2,7
  7431  17F0  2FF5               	goto	l633
  7432  17F1                     l2565:	
  7433  17F1  307F               	movlw	127
  7434  17F2  00DC               	movwf	??___fladd
  7435  17F3  085C               	movf	??___fladd,w
  7436  17F4  05D6               	andwf	___fladd@b+2,f
  7437  17F5                     l633:	
  7438  17F5  0866               	movf	___fladd@bexp,w
  7439  17F6  00DC               	movwf	??___fladd
  7440  17F7  1003               	clrc
  7441  17F8  0C5C               	rrf	??___fladd,w
  7442  17F9  00DD               	movwf	??___fladd+1
  7443  17FA  085D               	movf	??___fladd+1,w
  7444  17FB  00D7               	movwf	___fladd@b+3
  7445  17FC  1FE4               	btfss	___fladd@signs,7
  7446  17FD  0008               	return
  7447  17FE  17D7               	bsf	___fladd@b+3,7
  7448  17FF  0008               	return
  7449  1800                     __end_of___fladd:	
  7450                           
  7451                           	psect	text20
  7452  1CE5                     __ptext20:	
  7453 ;; *************** function ___flneg *****************
  7454 ;; Defined at:
  7455 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
  7456 ;; Parameters:    Size  Location     Type
  7457 ;;  f1              4    0[COMMON] unsigned char 
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;		None
  7460 ;; Return value:  Size  Location     Type
  7461 ;;                  4    0[COMMON] unsigned char 
  7462 ;; Registers used:
  7463 ;;		wreg
  7464 ;; Tracked objects:
  7465 ;;		On entry : 0/0
  7466 ;;		On exit  : 0/0
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7469 ;;      Params:         4       0       0       0       0
  7470 ;;      Locals:         0       0       0       0       0
  7471 ;;      Temps:          0       0       0       0       0
  7472 ;;      Totals:         4       0       0       0       0
  7473 ;;Total ram usage:        4 bytes
  7474 ;; Hardware stack levels used:    1
  7475 ;; This function calls:
  7476 ;;		Nothing
  7477 ;; This function is called by:
  7478 ;;		_sprintf
  7479 ;; This function uses a non-reentrant model
  7480 ;;
  7481                           
  7482                           
  7483                           ;psect for function ___flneg
  7484  1CE5                     ___flneg:	
  7485                           
  7486                           ;incstack = 0
  7487                           ; Regs used in ___flneg: [wreg]
  7488  1CE5  0873               	movf	___flneg@f1+3,w
  7489  1CE6  0472               	iorwf	___flneg@f1+2,w
  7490  1CE7  0471               	iorwf	___flneg@f1+1,w
  7491  1CE8  0470               	iorwf	___flneg@f1,w
  7492  1CE9  1903               	skipnz
  7493  1CEA  0008               	return
  7494  1CEB  3080               	movlw	128
  7495  1CEC  06F3               	xorwf	___flneg@f1+3,f
  7496  1CED  0008               	return
  7497  1CEE                     __end_of___flneg:	
  7498                           
  7499                           	psect	text21
  7500  11A3                     __ptext21:	
  7501 ;; *************** function ___flge *****************
  7502 ;; Defined at:
  7503 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
  7504 ;; Parameters:    Size  Location     Type
  7505 ;;  ff1             4    0[COMMON] unsigned char 
  7506 ;;  ff2             4    4[COMMON] unsigned char 
  7507 ;; Auto vars:     Size  Location     Type
  7508 ;;		None
  7509 ;; Return value:  Size  Location     Type
  7510 ;;		None               void
  7511 ;; Registers used:
  7512 ;;		wreg, status,2, status,0
  7513 ;; Tracked objects:
  7514 ;;		On entry : 0/0
  7515 ;;		On exit  : 0/0
  7516 ;;		Unchanged: 0/0
  7517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7518 ;;      Params:         8       0       0       0       0
  7519 ;;      Locals:         0       0       0       0       0
  7520 ;;      Temps:          4       0       0       0       0
  7521 ;;      Totals:        12       0       0       0       0
  7522 ;;Total ram usage:       12 bytes
  7523 ;; Hardware stack levels used:    1
  7524 ;; This function calls:
  7525 ;;		Nothing
  7526 ;; This function is called by:
  7527 ;;		_sprintf
  7528 ;; This function uses a non-reentrant model
  7529 ;;
  7530                           
  7531                           
  7532                           ;psect for function ___flge
  7533  11A3                     ___flge:	
  7534                           
  7535                           ;incstack = 0
  7536                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7537  11A3  3000               	movlw	0
  7538  11A4  0570               	andwf	___flge@ff1,w
  7539  11A5  00F8               	movwf	??___flge
  7540  11A6  3000               	movlw	0
  7541  11A7  0571               	andwf	___flge@ff1+1,w
  7542  11A8  00F9               	movwf	??___flge+1
  7543  11A9  3080               	movlw	128
  7544  11AA  0572               	andwf	___flge@ff1+2,w
  7545  11AB  00FA               	movwf	??___flge+2
  7546  11AC  307F               	movlw	127
  7547  11AD  0573               	andwf	___flge@ff1+3,w
  7548  11AE  00FB               	movwf	??___flge+3
  7549  11AF  087B               	movf	??___flge+3,w
  7550  11B0  047A               	iorwf	??___flge+2,w
  7551  11B1  0479               	iorwf	??___flge+1,w
  7552  11B2  0478               	iorwf	??___flge,w
  7553  11B3  1D03               	skipz
  7554  11B4  29BD               	goto	l455
  7555  11B5  3000               	movlw	0
  7556  11B6  00F3               	movwf	___flge@ff1+3
  7557  11B7  3000               	movlw	0
  7558  11B8  00F2               	movwf	___flge@ff1+2
  7559  11B9  3000               	movlw	0
  7560  11BA  00F1               	movwf	___flge@ff1+1
  7561  11BB  3000               	movlw	0
  7562  11BC  00F0               	movwf	___flge@ff1
  7563  11BD                     l455:	
  7564  11BD  3000               	movlw	0
  7565  11BE  0574               	andwf	___flge@ff2,w
  7566  11BF  00F8               	movwf	??___flge
  7567  11C0  3000               	movlw	0
  7568  11C1  0575               	andwf	___flge@ff2+1,w
  7569  11C2  00F9               	movwf	??___flge+1
  7570  11C3  3080               	movlw	128
  7571  11C4  0576               	andwf	___flge@ff2+2,w
  7572  11C5  00FA               	movwf	??___flge+2
  7573  11C6  307F               	movlw	127
  7574  11C7  0577               	andwf	___flge@ff2+3,w
  7575  11C8  00FB               	movwf	??___flge+3
  7576  11C9  087B               	movf	??___flge+3,w
  7577  11CA  047A               	iorwf	??___flge+2,w
  7578  11CB  0479               	iorwf	??___flge+1,w
  7579  11CC  0478               	iorwf	??___flge,w
  7580  11CD  1D03               	skipz
  7581  11CE  29D7               	goto	l2971
  7582  11CF  3000               	movlw	0
  7583  11D0  00F7               	movwf	___flge@ff2+3
  7584  11D1  3000               	movlw	0
  7585  11D2  00F6               	movwf	___flge@ff2+2
  7586  11D3  3000               	movlw	0
  7587  11D4  00F5               	movwf	___flge@ff2+1
  7588  11D5  3000               	movlw	0
  7589  11D6  00F4               	movwf	___flge@ff2
  7590  11D7                     l2971:	
  7591  11D7  1FF3               	btfss	___flge@ff1+3,7
  7592  11D8  29FD               	goto	l2975
  7593  11D9  3000               	movlw	0
  7594  11DA  00F8               	movwf	??___flge
  7595  11DB  3000               	movlw	0
  7596  11DC  00F9               	movwf	??___flge+1
  7597  11DD  3000               	movlw	0
  7598  11DE  00FA               	movwf	??___flge+2
  7599  11DF  3080               	movlw	128
  7600  11E0  00FB               	movwf	??___flge+3
  7601  11E1  0870               	movf	___flge@ff1,w
  7602  11E2  02F8               	subwf	??___flge,f
  7603  11E3  0871               	movf	___flge@ff1+1,w
  7604  11E4  1C03               	skipc
  7605  11E5  0F71               	incfsz	___flge@ff1+1,w
  7606  11E6  29E8               	goto	u4941
  7607  11E7  29E9               	goto	u4942
  7608  11E8                     u4941:	
  7609  11E8  02F9               	subwf	??___flge+1,f
  7610  11E9                     u4942:	
  7611  11E9  0872               	movf	___flge@ff1+2,w
  7612  11EA  1C03               	skipc
  7613  11EB  0F72               	incfsz	___flge@ff1+2,w
  7614  11EC  29EE               	goto	u4943
  7615  11ED  29EF               	goto	u4944
  7616  11EE                     u4943:	
  7617  11EE  02FA               	subwf	??___flge+2,f
  7618  11EF                     u4944:	
  7619  11EF  0873               	movf	___flge@ff1+3,w
  7620  11F0  1C03               	skipc
  7621  11F1  0F73               	incfsz	___flge@ff1+3,w
  7622  11F2  29F4               	goto	u4945
  7623  11F3  29F5               	goto	u4946
  7624  11F4                     u4945:	
  7625  11F4  02FB               	subwf	??___flge+3,f
  7626  11F5                     u4946:	
  7627  11F5  087B               	movf	??___flge+3,w
  7628  11F6  00F3               	movwf	___flge@ff1+3
  7629  11F7  087A               	movf	??___flge+2,w
  7630  11F8  00F2               	movwf	___flge@ff1+2
  7631  11F9  0879               	movf	??___flge+1,w
  7632  11FA  00F1               	movwf	___flge@ff1+1
  7633  11FB  0878               	movf	??___flge,w
  7634  11FC  00F0               	movwf	___flge@ff1
  7635  11FD                     l2975:	
  7636  11FD  1FF7               	btfss	___flge@ff2+3,7
  7637  11FE  2A23               	goto	l458
  7638  11FF  3000               	movlw	0
  7639  1200  00F8               	movwf	??___flge
  7640  1201  3000               	movlw	0
  7641  1202  00F9               	movwf	??___flge+1
  7642  1203  3000               	movlw	0
  7643  1204  00FA               	movwf	??___flge+2
  7644  1205  3080               	movlw	128
  7645  1206  00FB               	movwf	??___flge+3
  7646  1207  0874               	movf	___flge@ff2,w
  7647  1208  02F8               	subwf	??___flge,f
  7648  1209  0875               	movf	___flge@ff2+1,w
  7649  120A  1C03               	skipc
  7650  120B  0F75               	incfsz	___flge@ff2+1,w
  7651  120C  2A0E               	goto	u4961
  7652  120D  2A0F               	goto	u4962
  7653  120E                     u4961:	
  7654  120E  02F9               	subwf	??___flge+1,f
  7655  120F                     u4962:	
  7656  120F  0876               	movf	___flge@ff2+2,w
  7657  1210  1C03               	skipc
  7658  1211  0F76               	incfsz	___flge@ff2+2,w
  7659  1212  2A14               	goto	u4963
  7660  1213  2A15               	goto	u4964
  7661  1214                     u4963:	
  7662  1214  02FA               	subwf	??___flge+2,f
  7663  1215                     u4964:	
  7664  1215  0877               	movf	___flge@ff2+3,w
  7665  1216  1C03               	skipc
  7666  1217  0F77               	incfsz	___flge@ff2+3,w
  7667  1218  2A1A               	goto	u4965
  7668  1219  2A1B               	goto	u4966
  7669  121A                     u4965:	
  7670  121A  02FB               	subwf	??___flge+3,f
  7671  121B                     u4966:	
  7672  121B  087B               	movf	??___flge+3,w
  7673  121C  00F7               	movwf	___flge@ff2+3
  7674  121D  087A               	movf	??___flge+2,w
  7675  121E  00F6               	movwf	___flge@ff2+2
  7676  121F  0879               	movf	??___flge+1,w
  7677  1220  00F5               	movwf	___flge@ff2+1
  7678  1221  0878               	movf	??___flge,w
  7679  1222  00F4               	movwf	___flge@ff2
  7680  1223                     l458:	
  7681  1223  3080               	movlw	128
  7682  1224  06F3               	xorwf	___flge@ff1+3,f
  7683  1225  3080               	movlw	128
  7684  1226  06F7               	xorwf	___flge@ff2+3,f
  7685  1227  0877               	movf	___flge@ff2+3,w
  7686  1228  0273               	subwf	___flge@ff1+3,w
  7687  1229  1D03               	skipz
  7688  122A  0008               	return
  7689  122B  0876               	movf	___flge@ff2+2,w
  7690  122C  0272               	subwf	___flge@ff1+2,w
  7691  122D  1D03               	skipz
  7692  122E  0008               	return
  7693  122F  0875               	movf	___flge@ff2+1,w
  7694  1230  0271               	subwf	___flge@ff1+1,w
  7695  1231  1D03               	skipz
  7696  1232  0008               	return
  7697  1233  0874               	movf	___flge@ff2,w
  7698  1234  0270               	subwf	___flge@ff1,w
  7699  1235  0008               	return
  7700  1236                     __end_of___flge:	
  7701                           
  7702                           	psect	text22
  7703  1EC6                     __ptext22:	
  7704 ;; *************** function ___fleq *****************
  7705 ;; Defined at:
  7706 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
  7707 ;; Parameters:    Size  Location     Type
  7708 ;;  ff1             4    0[COMMON] unsigned char 
  7709 ;;  ff2             4    4[COMMON] unsigned char 
  7710 ;; Auto vars:     Size  Location     Type
  7711 ;;		None
  7712 ;; Return value:  Size  Location     Type
  7713 ;;		None               void
  7714 ;; Registers used:
  7715 ;;		wreg, status,2, status,0
  7716 ;; Tracked objects:
  7717 ;;		On entry : 0/0
  7718 ;;		On exit  : 0/0
  7719 ;;		Unchanged: 0/0
  7720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7721 ;;      Params:         8       0       0       0       0
  7722 ;;      Locals:         0       0       0       0       0
  7723 ;;      Temps:          4       0       0       0       0
  7724 ;;      Totals:        12       0       0       0       0
  7725 ;;Total ram usage:       12 bytes
  7726 ;; Hardware stack levels used:    1
  7727 ;; This function calls:
  7728 ;;		Nothing
  7729 ;; This function is called by:
  7730 ;;		_sprintf
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           
  7735                           ;psect for function ___fleq
  7736  1EC6                     ___fleq:	
  7737                           
  7738                           ;incstack = 0
  7739                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7740  1EC6  3000               	movlw	0
  7741  1EC7  0570               	andwf	___fleq@ff1,w
  7742  1EC8  00F8               	movwf	??___fleq
  7743  1EC9  3000               	movlw	0
  7744  1ECA  0571               	andwf	___fleq@ff1+1,w
  7745  1ECB  00F9               	movwf	??___fleq+1
  7746  1ECC  3080               	movlw	128
  7747  1ECD  0572               	andwf	___fleq@ff1+2,w
  7748  1ECE  00FA               	movwf	??___fleq+2
  7749  1ECF  307F               	movlw	127
  7750  1ED0  0573               	andwf	___fleq@ff1+3,w
  7751  1ED1  00FB               	movwf	??___fleq+3
  7752  1ED2  087B               	movf	??___fleq+3,w
  7753  1ED3  047A               	iorwf	??___fleq+2,w
  7754  1ED4  0479               	iorwf	??___fleq+1,w
  7755  1ED5  0478               	iorwf	??___fleq,w
  7756  1ED6  1D03               	skipz
  7757  1ED7  2EE0               	goto	l450
  7758  1ED8  3000               	movlw	0
  7759  1ED9  00F3               	movwf	___fleq@ff1+3
  7760  1EDA  3000               	movlw	0
  7761  1EDB  00F2               	movwf	___fleq@ff1+2
  7762  1EDC  3000               	movlw	0
  7763  1EDD  00F1               	movwf	___fleq@ff1+1
  7764  1EDE  3000               	movlw	0
  7765  1EDF  00F0               	movwf	___fleq@ff1
  7766  1EE0                     l450:	
  7767  1EE0  3000               	movlw	0
  7768  1EE1  0574               	andwf	___fleq@ff2,w
  7769  1EE2  00F8               	movwf	??___fleq
  7770  1EE3  3000               	movlw	0
  7771  1EE4  0575               	andwf	___fleq@ff2+1,w
  7772  1EE5  00F9               	movwf	??___fleq+1
  7773  1EE6  3080               	movlw	128
  7774  1EE7  0576               	andwf	___fleq@ff2+2,w
  7775  1EE8  00FA               	movwf	??___fleq+2
  7776  1EE9  307F               	movlw	127
  7777  1EEA  0577               	andwf	___fleq@ff2+3,w
  7778  1EEB  00FB               	movwf	??___fleq+3
  7779  1EEC  087B               	movf	??___fleq+3,w
  7780  1EED  047A               	iorwf	??___fleq+2,w
  7781  1EEE  0479               	iorwf	??___fleq+1,w
  7782  1EEF  0478               	iorwf	??___fleq,w
  7783  1EF0  1D03               	skipz
  7784  1EF1  2EFA               	goto	l451
  7785  1EF2  3000               	movlw	0
  7786  1EF3  00F7               	movwf	___fleq@ff2+3
  7787  1EF4  3000               	movlw	0
  7788  1EF5  00F6               	movwf	___fleq@ff2+2
  7789  1EF6  3000               	movlw	0
  7790  1EF7  00F5               	movwf	___fleq@ff2+1
  7791  1EF8  3000               	movlw	0
  7792  1EF9  00F4               	movwf	___fleq@ff2
  7793  1EFA                     l451:	
  7794  1EFA  0877               	movf	___fleq@ff2+3,w
  7795  1EFB  0673               	xorwf	___fleq@ff1+3,w
  7796  1EFC  1D03               	skipz
  7797  1EFD  2F08               	goto	u4905
  7798  1EFE  0876               	movf	___fleq@ff2+2,w
  7799  1EFF  0672               	xorwf	___fleq@ff1+2,w
  7800  1F00  1D03               	skipz
  7801  1F01  2F08               	goto	u4905
  7802  1F02  0875               	movf	___fleq@ff2+1,w
  7803  1F03  0671               	xorwf	___fleq@ff1+1,w
  7804  1F04  1D03               	skipz
  7805  1F05  2F08               	goto	u4905
  7806  1F06  0874               	movf	___fleq@ff2,w
  7807  1F07  0670               	xorwf	___fleq@ff1,w
  7808  1F08                     u4905:	
  7809  1F08  1903               	skipnz
  7810  1F09  2F0C               	goto	l2961
  7811  1F0A  1003               	clrc
  7812  1F0B  0008               	return
  7813  1F0C                     l2961:	
  7814  1F0C  1403               	setc
  7815  1F0D  0008               	return
  7816  1F0E                     __end_of___fleq:	
  7817                           
  7818                           	psect	text23
  7819  1E12                     __ptext23:	
  7820 ;; *************** function _lcdSetCursor *****************
  7821 ;; Defined at:
  7822 ;;		line 56 in file "./lcd.h"
  7823 ;; Parameters:    Size  Location     Type
  7824 ;;  y               1    wreg     unsigned char 
  7825 ;;  x               1    4[COMMON] unsigned char 
  7826 ;; Auto vars:     Size  Location     Type
  7827 ;;  y               1   11[COMMON] unsigned char 
  7828 ;;  temp            1   10[COMMON] unsigned char 
  7829 ;;  row             1    9[COMMON] unsigned char 
  7830 ;;  yy              1    8[COMMON] unsigned char 
  7831 ;;  z               1    7[COMMON] unsigned char 
  7832 ;; Return value:  Size  Location     Type
  7833 ;;                  1    wreg      void 
  7834 ;; Registers used:
  7835 ;;		wreg, status,2, status,0, pclath, cstack
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/0
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7841 ;;      Params:         1       0       0       0       0
  7842 ;;      Locals:         5       0       0       0       0
  7843 ;;      Temps:          2       0       0       0       0
  7844 ;;      Totals:         8       0       0       0       0
  7845 ;;Total ram usage:        8 bytes
  7846 ;; Hardware stack levels used:    1
  7847 ;; Hardware stack levels required when called:    2
  7848 ;; This function calls:
  7849 ;;		_lcdCmd
  7850 ;; This function is called by:
  7851 ;;		_main
  7852 ;; This function uses a non-reentrant model
  7853 ;;
  7854                           
  7855                           
  7856                           ;psect for function _lcdSetCursor
  7857  1E12                     _lcdSetCursor:	
  7858                           
  7859                           ;incstack = 0
  7860                           ; Regs used in _lcdSetCursor: [wreg+status,2+status,0+pclath+cstack]
  7861                           ;lcdSetCursor@y stored from wreg
  7862  1E12  00FB               	movwf	lcdSetCursor@y
  7863                           
  7864                           ;./lcd.h: 57:     char temp, z, yy, row = 0x80;
  7865  1E13  3080               	movlw	128
  7866  1E14  00F5               	movwf	??_lcdSetCursor
  7867  1E15  0875               	movf	??_lcdSetCursor,w
  7868  1E16  00F9               	movwf	lcdSetCursor@row
  7869                           
  7870                           ;./lcd.h: 59:     if (y == 2)
  7871  1E17  3002               	movlw	2
  7872  1E18  067B               	xorwf	lcdSetCursor@y,w
  7873  1E19  1D03               	btfss	3,2
  7874  1E1A  2E1D               	goto	l3107
  7875                           
  7876                           ;./lcd.h: 60:         row += 64;
  7877  1E1B  3040               	movlw	64
  7878  1E1C  2E28               	goto	L9
  7879  1E1D                     l3107:	
  7880  1E1D  3003               	movlw	3
  7881  1E1E  067B               	xorwf	lcdSetCursor@y,w
  7882  1E1F  1D03               	btfss	3,2
  7883  1E20  2E23               	goto	l3111
  7884                           
  7885                           ;./lcd.h: 62:         row +=20;
  7886  1E21  3014               	movlw	20
  7887  1E22  2E28               	goto	L9
  7888  1E23                     l3111:	
  7889  1E23  3004               	movlw	4
  7890  1E24  067B               	xorwf	lcdSetCursor@y,w
  7891  1E25  1D03               	btfss	3,2
  7892  1E26  2E2B               	goto	l53
  7893                           
  7894                           ;./lcd.h: 64:         row += 64+20;
  7895  1E27  3054               	movlw	84
  7896  1E28                     L9:	
  7897  1E28  00F5               	movwf	??_lcdSetCursor
  7898  1E29  0875               	movf	??_lcdSetCursor,w
  7899  1E2A  07F9               	addwf	lcdSetCursor@row,f
  7900  1E2B                     l53:	
  7901                           
  7902                           ;./lcd.h: 66:     temp = row + x - 1;
  7903  1E2B  0874               	movf	lcdSetCursor@x,w
  7904  1E2C  0779               	addwf	lcdSetCursor@row,w
  7905  1E2D  3EFF               	addlw	255
  7906  1E2E  00F5               	movwf	??_lcdSetCursor
  7907  1E2F  0875               	movf	??_lcdSetCursor,w
  7908  1E30  00FA               	movwf	lcdSetCursor@temp
  7909                           
  7910                           ;./lcd.h: 67:     z = temp >> 4;
  7911  1E31  087A               	movf	lcdSetCursor@temp,w
  7912  1E32  00F5               	movwf	??_lcdSetCursor
  7913  1E33  3004               	movlw	4
  7914  1E34                     u5325:	
  7915  1E34  1003               	clrc
  7916  1E35  0CF5               	rrf	??_lcdSetCursor,f
  7917  1E36  3EFF               	addlw	-1
  7918  1E37  1D03               	skipz
  7919  1E38  2E34               	goto	u5325
  7920  1E39  0875               	movf	??_lcdSetCursor,w
  7921  1E3A  00F6               	movwf	??_lcdSetCursor+1
  7922  1E3B  0876               	movf	??_lcdSetCursor+1,w
  7923  1E3C  00F7               	movwf	lcdSetCursor@z
  7924                           
  7925                           ;./lcd.h: 68:     yy = temp & 0x0F;
  7926  1E3D  087A               	movf	lcdSetCursor@temp,w
  7927  1E3E  390F               	andlw	15
  7928  1E3F  00F5               	movwf	??_lcdSetCursor
  7929  1E40  0875               	movf	??_lcdSetCursor,w
  7930  1E41  00F8               	movwf	lcdSetCursor@yy
  7931                           
  7932                           ;./lcd.h: 69:     lcdCmd(z);
  7933  1E42  0877               	movf	lcdSetCursor@z,w
  7934  1E43  120A  158A  2006  160A  158A  	fcall	_lcdCmd
  7935                           
  7936                           ;./lcd.h: 70:     lcdCmd(yy);
  7937  1E48  0878               	movf	lcdSetCursor@yy,w
  7938  1E49  120A  158A  2006   	fcall	_lcdCmd
  7939  1E4C  0008               	return
  7940  1E4D                     __end_of_lcdSetCursor:	
  7941                           
  7942                           	psect	text24
  7943  1E89                     __ptext24:	
  7944 ;; *************** function _lcdPrint *****************
  7945 ;; Defined at:
  7946 ;;		line 108 in file "./lcd.h"
  7947 ;; Parameters:    Size  Location     Type
  7948 ;;  a               2    5[COMMON] PTR const unsigned char 
  7949 ;;		 -> main@mensaje(16), STR_5(6), STR_4(9), STR_3(8), 
  7950 ;;		 -> STR_2(12), STR_1(11), 
  7951 ;; Auto vars:     Size  Location     Type
  7952 ;;  i               2   10[COMMON] int 
  7953 ;; Return value:  Size  Location     Type
  7954 ;;                  1    wreg      void 
  7955 ;; Registers used:
  7956 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7957 ;; Tracked objects:
  7958 ;;		On entry : 0/0
  7959 ;;		On exit  : 0/0
  7960 ;;		Unchanged: 0/0
  7961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7962 ;;      Params:         2       0       0       0       0
  7963 ;;      Locals:         2       0       0       0       0
  7964 ;;      Temps:          3       0       0       0       0
  7965 ;;      Totals:         7       0       0       0       0
  7966 ;;Total ram usage:        7 bytes
  7967 ;; Hardware stack levels used:    1
  7968 ;; Hardware stack levels required when called:    2
  7969 ;; This function calls:
  7970 ;;		_lcdWriteChar
  7971 ;; This function is called by:
  7972 ;;		_main
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976                           
  7977                           ;psect for function _lcdPrint
  7978  1E89                     _lcdPrint:	
  7979                           
  7980                           ;./lcd.h: 109:     for (int i = 0; a[i] != '\0'; i++)
  7981                           
  7982                           ;incstack = 0
  7983                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7984  1E89  01FA               	clrf	lcdPrint@i
  7985  1E8A  01FB               	clrf	lcdPrint@i+1
  7986  1E8B                     l3157:	
  7987  1E8B  087A               	movf	lcdPrint@i,w
  7988  1E8C  0775               	addwf	lcdPrint@a,w
  7989  1E8D  00F8               	movwf	??_lcdPrint+1
  7990  1E8E  0876               	movf	lcdPrint@a+1,w
  7991  1E8F  00F7               	movwf	??_lcdPrint
  7992  1E90  1803               	skipnc
  7993  1E91  0AF7               	incf	??_lcdPrint,f
  7994  1E92  1BFA               	btfsc	lcdPrint@i,7
  7995  1E93  03F7               	decf	??_lcdPrint,f
  7996  1E94  0877               	movf	??_lcdPrint,w
  7997  1E95  00F9               	movwf	??_lcdPrint+2
  7998  1E96  0879               	movf	??_lcdPrint+2,w
  7999  1E97  1283               	bcf	3,5	;RP0=0, select bank0
  8000  1E98  1303               	bcf	3,6	;RP1=0, select bank0
  8001  1E99  00FF               	movwf	127
  8002  1E9A  0878               	movf	??_lcdPrint+1,w
  8003  1E9B  0084               	movwf	4
  8004  1E9C  160A  118A  2000  160A  158A  	fcall	stringtab
  8005  1EA1  3A00               	xorlw	0
  8006  1EA2  1903               	btfsc	3,2
  8007  1EA3  0008               	return
  8008                           
  8009                           ;./lcd.h: 110:         lcdWriteChar(a[i]);
  8010  1EA4  087A               	movf	lcdPrint@i,w
  8011  1EA5  0775               	addwf	lcdPrint@a,w
  8012  1EA6  00F8               	movwf	??_lcdPrint+1
  8013  1EA7  0876               	movf	lcdPrint@a+1,w
  8014  1EA8  00F7               	movwf	??_lcdPrint
  8015  1EA9  1803               	skipnc
  8016  1EAA  0AF7               	incf	??_lcdPrint,f
  8017  1EAB  1BFA               	btfsc	lcdPrint@i,7
  8018  1EAC  03F7               	decf	??_lcdPrint,f
  8019  1EAD  0877               	movf	??_lcdPrint,w
  8020  1EAE  00F9               	movwf	??_lcdPrint+2
  8021  1EAF  0879               	movf	??_lcdPrint+2,w
  8022  1EB0  1283               	bcf	3,5	;RP0=0, select bank0
  8023  1EB1  1303               	bcf	3,6	;RP1=0, select bank0
  8024  1EB2  00FF               	movwf	127
  8025  1EB3  0878               	movf	??_lcdPrint+1,w
  8026  1EB4  0084               	movwf	4
  8027  1EB5  160A  118A  2000  160A  158A  	fcall	stringtab
  8028  1EBA  160A  158A  25DB  160A  158A  	fcall	_lcdWriteChar
  8029  1EBF  3001               	movlw	1
  8030  1EC0  07FA               	addwf	lcdPrint@i,f
  8031  1EC1  1803               	skipnc
  8032  1EC2  0AFB               	incf	lcdPrint@i+1,f
  8033  1EC3  3000               	movlw	0
  8034  1EC4  07FB               	addwf	lcdPrint@i+1,f
  8035  1EC5  2E8B               	goto	l3157
  8036  1EC6                     __end_of_lcdPrint:	
  8037                           
  8038                           	psect	text25
  8039  1DDB                     __ptext25:	
  8040 ;; *************** function _lcdWriteChar *****************
  8041 ;; Defined at:
  8042 ;;		line 93 in file "./lcd.h"
  8043 ;; Parameters:    Size  Location     Type
  8044 ;;  a               1    wreg     const unsigned char 
  8045 ;; Auto vars:     Size  Location     Type
  8046 ;;  a               1    4[COMMON] const unsigned char 
  8047 ;;  y               1    3[COMMON] unsigned char 
  8048 ;;  temp            1    2[COMMON] unsigned char 
  8049 ;; Return value:  Size  Location     Type
  8050 ;;                  1    wreg      void 
  8051 ;; Registers used:
  8052 ;;		wreg, status,2, status,0, pclath, cstack
  8053 ;; Tracked objects:
  8054 ;;		On entry : 0/0
  8055 ;;		On exit  : 0/0
  8056 ;;		Unchanged: 0/0
  8057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8058 ;;      Params:         0       0       0       0       0
  8059 ;;      Locals:         3       0       0       0       0
  8060 ;;      Temps:          1       0       0       0       0
  8061 ;;      Totals:         4       0       0       0       0
  8062 ;;Total ram usage:        4 bytes
  8063 ;; Hardware stack levels used:    1
  8064 ;; Hardware stack levels required when called:    1
  8065 ;; This function calls:
  8066 ;;		_lcdPort
  8067 ;; This function is called by:
  8068 ;;		_lcdPrint
  8069 ;; This function uses a non-reentrant model
  8070 ;;
  8071                           
  8072                           
  8073                           ;psect for function _lcdWriteChar
  8074  1DDB                     _lcdWriteChar:	
  8075                           
  8076                           ;incstack = 0
  8077                           ; Regs used in _lcdWriteChar: [wreg+status,2+status,0+pclath+cstack]
  8078                           ;lcdWriteChar@a stored from wreg
  8079  1DDB  00F4               	movwf	lcdWriteChar@a
  8080                           
  8081                           ;./lcd.h: 94:     char temp, y;;./lcd.h: 95:     temp = a & 0x0F;
  8082  1DDC  0874               	movf	lcdWriteChar@a,w
  8083  1DDD  390F               	andlw	15
  8084  1DDE  00F1               	movwf	??_lcdWriteChar
  8085  1DDF  0871               	movf	??_lcdWriteChar,w
  8086  1DE0  00F2               	movwf	lcdWriteChar@temp
  8087                           
  8088                           ;./lcd.h: 96:     y = a & 0xF0;
  8089  1DE1  0874               	movf	lcdWriteChar@a,w
  8090  1DE2  39F0               	andlw	240
  8091  1DE3  00F1               	movwf	??_lcdWriteChar
  8092  1DE4  0871               	movf	??_lcdWriteChar,w
  8093  1DE5  00F3               	movwf	lcdWriteChar@y
  8094                           
  8095                           ;./lcd.h: 97:     RB2 = 1;
  8096  1DE6  1283               	bcf	3,5	;RP0=0, select bank0
  8097  1DE7  1303               	bcf	3,6	;RP1=0, select bank0
  8098  1DE8  1506               	bsf	6,2	;volatile
  8099                           
  8100                           ;./lcd.h: 98:     lcdPort(y >> 4);
  8101  1DE9  0873               	movf	lcdWriteChar@y,w
  8102  1DEA  00F1               	movwf	??_lcdWriteChar
  8103  1DEB  3004               	movlw	4
  8104  1DEC                     u4235:	
  8105  1DEC  1003               	clrc
  8106  1DED  0CF1               	rrf	??_lcdWriteChar,f
  8107  1DEE  3EFF               	addlw	-1
  8108  1DEF  1D03               	skipz
  8109  1DF0  2DEC               	goto	u4235
  8110  1DF1  0871               	movf	??_lcdWriteChar,w
  8111  1DF2  160A  158A  2507  160A  158A  	fcall	_lcdPort
  8112                           
  8113                           ;./lcd.h: 99:     RB3 = 1;
  8114  1DF7  1283               	bcf	3,5	;RP0=0, select bank0
  8115  1DF8  1303               	bcf	3,6	;RP1=0, select bank0
  8116  1DF9  1586               	bsf	6,3	;volatile
  8117                           
  8118                           ;./lcd.h: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  8119  1DFA  300D               	movlw	13
  8120  1DFB  00F1               	movwf	??_lcdWriteChar
  8121  1DFC                     u6047:	
  8122  1DFC  0BF1               	decfsz	??_lcdWriteChar,f
  8123  1DFD  2DFC               	goto	u6047
  8124                           
  8125                           ;./lcd.h: 101:     RB3 = 0;
  8126  1DFE  1283               	bcf	3,5	;RP0=0, select bank0
  8127  1DFF  1303               	bcf	3,6	;RP1=0, select bank0
  8128  1E00  1186               	bcf	6,3	;volatile
  8129                           
  8130                           ;./lcd.h: 102:     lcdPort(temp);
  8131  1E01  0872               	movf	lcdWriteChar@temp,w
  8132  1E02  160A  158A  2507  160A  158A  	fcall	_lcdPort
  8133                           
  8134                           ;./lcd.h: 103:     RB3 = 1;
  8135  1E07  1283               	bcf	3,5	;RP0=0, select bank0
  8136  1E08  1303               	bcf	3,6	;RP1=0, select bank0
  8137  1E09  1586               	bsf	6,3	;volatile
  8138                           
  8139                           ;./lcd.h: 104:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  8140  1E0A  300D               	movlw	13
  8141  1E0B  00F1               	movwf	??_lcdWriteChar
  8142  1E0C                     u6057:	
  8143  1E0C  0BF1               	decfsz	??_lcdWriteChar,f
  8144  1E0D  2E0C               	goto	u6057
  8145                           
  8146                           ;./lcd.h: 105:     RB3 = 0;
  8147  1E0E  1283               	bcf	3,5	;RP0=0, select bank0
  8148  1E0F  1303               	bcf	3,6	;RP1=0, select bank0
  8149  1E10  1186               	bcf	6,3	;volatile
  8150  1E11  0008               	return
  8151  1E12                     __end_of_lcdWriteChar:	
  8152                           
  8153                           	psect	text26
  8154  1142                     __ptext26:	
  8155 ;; *************** function _lcdInit *****************
  8156 ;; Defined at:
  8157 ;;		line 73 in file "./lcd.h"
  8158 ;; Parameters:    Size  Location     Type
  8159 ;;		None
  8160 ;; Auto vars:     Size  Location     Type
  8161 ;;		None
  8162 ;; Return value:  Size  Location     Type
  8163 ;;                  1    wreg      void 
  8164 ;; Registers used:
  8165 ;;		wreg, status,2, status,0, pclath, cstack
  8166 ;; Tracked objects:
  8167 ;;		On entry : 0/0
  8168 ;;		On exit  : 0/0
  8169 ;;		Unchanged: 0/0
  8170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8171 ;;      Params:         0       0       0       0       0
  8172 ;;      Locals:         0       0       0       0       0
  8173 ;;      Temps:          2       0       0       0       0
  8174 ;;      Totals:         2       0       0       0       0
  8175 ;;Total ram usage:        2 bytes
  8176 ;; Hardware stack levels used:    1
  8177 ;; Hardware stack levels required when called:    2
  8178 ;; This function calls:
  8179 ;;		_lcdCmd
  8180 ;;		_lcdPort
  8181 ;; This function is called by:
  8182 ;;		_main
  8183 ;; This function uses a non-reentrant model
  8184 ;;
  8185                           
  8186                           
  8187                           ;psect for function _lcdInit
  8188  1142                     _lcdInit:	
  8189                           
  8190                           ;./lcd.h: 74:     TRISB = 0;
  8191                           
  8192                           ;incstack = 0
  8193                           ; Regs used in _lcdInit: [wreg+status,2+status,0+pclath+cstack]
  8194  1142  1683               	bsf	3,5	;RP0=1, select bank1
  8195  1143  1303               	bcf	3,6	;RP1=0, select bank1
  8196  1144  0186               	clrf	6	;volatile
  8197                           
  8198                           ;./lcd.h: 75:     PORTB = 0;
  8199  1145  1283               	bcf	3,5	;RP0=0, select bank0
  8200  1146  1303               	bcf	3,6	;RP1=0, select bank0
  8201  1147  0186               	clrf	6	;volatile
  8202                           
  8203                           ;./lcd.h: 76:     lcdPort(0x00);
  8204  1148  3000               	movlw	0
  8205  1149  160A  158A  2507  160A  118A  	fcall	_lcdPort
  8206                           
  8207                           ;./lcd.h: 77:     _delay((unsigned long)((20)*(4000000/4000.0)));
  8208  114E  301A               	movlw	26
  8209  114F  00F5               	movwf	??_lcdInit+1
  8210  1150  30F8               	movlw	248
  8211  1151  00F4               	movwf	??_lcdInit
  8212  1152                     u6067:	
  8213  1152  0BF4               	decfsz	??_lcdInit,f
  8214  1153  2952               	goto	u6067
  8215  1154  0BF5               	decfsz	??_lcdInit+1,f
  8216  1155  2952               	goto	u6067
  8217  1156  0000               	nop
  8218                           
  8219                           ;./lcd.h: 78:     lcdCmd(0x03);
  8220  1157  3003               	movlw	3
  8221  1158  120A  158A  2006  160A  118A  	fcall	_lcdCmd
  8222                           
  8223                           ;./lcd.h: 79:     _delay((unsigned long)((5)*(4000000/4000.0)));
  8224  115D  3007               	movlw	7
  8225  115E  00F5               	movwf	??_lcdInit+1
  8226  115F  307D               	movlw	125
  8227  1160  00F4               	movwf	??_lcdInit
  8228  1161                     u6077:	
  8229  1161  0BF4               	decfsz	??_lcdInit,f
  8230  1162  2961               	goto	u6077
  8231  1163  0BF5               	decfsz	??_lcdInit+1,f
  8232  1164  2961               	goto	u6077
  8233                           
  8234                           ;./lcd.h: 80:     lcdCmd(0x03);
  8235  1165  3003               	movlw	3
  8236  1166  120A  158A  2006  160A  118A  	fcall	_lcdCmd
  8237                           
  8238                           ;./lcd.h: 81:     _delay((unsigned long)((11)*(4000000/4000.0)));
  8239  116B  300F               	movlw	15
  8240  116C  00F5               	movwf	??_lcdInit+1
  8241  116D  3047               	movlw	71
  8242  116E  00F4               	movwf	??_lcdInit
  8243  116F                     u6087:	
  8244  116F  0BF4               	decfsz	??_lcdInit,f
  8245  1170  296F               	goto	u6087
  8246  1171  0BF5               	decfsz	??_lcdInit+1,f
  8247  1172  296F               	goto	u6087
  8248  1173  2974               	nop2
  8249                           
  8250                           ;./lcd.h: 82:     lcdCmd(0x03);
  8251  1174  3003               	movlw	3
  8252  1175  120A  158A  2006  160A  118A  	fcall	_lcdCmd
  8253                           
  8254                           ;./lcd.h: 84:     lcdCmd(0x02);
  8255  117A  3002               	movlw	2
  8256  117B  120A  158A  2006  160A  118A  	fcall	_lcdCmd
  8257                           
  8258                           ;./lcd.h: 85:     lcdCmd(0x02);
  8259  1180  3002               	movlw	2
  8260  1181  120A  158A  2006  160A  118A  	fcall	_lcdCmd
  8261                           
  8262                           ;./lcd.h: 86:     lcdCmd(0x08);
  8263  1186  3008               	movlw	8
  8264  1187  120A  158A  2006  160A  118A  	fcall	_lcdCmd
  8265                           
  8266                           ;./lcd.h: 87:     lcdCmd(0x00);
  8267  118C  3000               	movlw	0
  8268  118D  120A  158A  2006  160A  118A  	fcall	_lcdCmd
  8269                           
  8270                           ;./lcd.h: 88:     lcdCmd(0x0C);
  8271  1192  300C               	movlw	12
  8272  1193  120A  158A  2006  160A  118A  	fcall	_lcdCmd
  8273                           
  8274                           ;./lcd.h: 89:     lcdCmd(0x00);
  8275  1198  3000               	movlw	0
  8276  1199  120A  158A  2006  160A  118A  	fcall	_lcdCmd
  8277                           
  8278                           ;./lcd.h: 90:     lcdCmd(0x06);
  8279  119E  3006               	movlw	6
  8280  119F  120A  158A  2006   	fcall	_lcdCmd
  8281  11A2  0008               	return
  8282  11A3                     __end_of_lcdInit:	
  8283                           
  8284                           	psect	text27
  8285  1CEE                     __ptext27:	
  8286 ;; *************** function _lcdClear *****************
  8287 ;; Defined at:
  8288 ;;		line 51 in file "./lcd.h"
  8289 ;; Parameters:    Size  Location     Type
  8290 ;;		None
  8291 ;; Auto vars:     Size  Location     Type
  8292 ;;		None
  8293 ;; Return value:  Size  Location     Type
  8294 ;;                  1    wreg      void 
  8295 ;; Registers used:
  8296 ;;		wreg, status,2, status,0, pclath, cstack
  8297 ;; Tracked objects:
  8298 ;;		On entry : 0/0
  8299 ;;		On exit  : 0/0
  8300 ;;		Unchanged: 0/0
  8301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8302 ;;      Params:         0       0       0       0       0
  8303 ;;      Locals:         0       0       0       0       0
  8304 ;;      Temps:          0       0       0       0       0
  8305 ;;      Totals:         0       0       0       0       0
  8306 ;;Total ram usage:        0 bytes
  8307 ;; Hardware stack levels used:    1
  8308 ;; Hardware stack levels required when called:    2
  8309 ;; This function calls:
  8310 ;;		_lcdCmd
  8311 ;; This function is called by:
  8312 ;;		_main
  8313 ;; This function uses a non-reentrant model
  8314 ;;
  8315                           
  8316                           
  8317                           ;psect for function _lcdClear
  8318  1CEE                     _lcdClear:	
  8319                           
  8320                           ;./lcd.h: 52:     lcdCmd(0);
  8321                           
  8322                           ;incstack = 0
  8323                           ; Regs used in _lcdClear: [wreg+status,2+status,0+pclath+cstack]
  8324  1CEE  3000               	movlw	0
  8325  1CEF  120A  158A  2006  160A  158A  	fcall	_lcdCmd
  8326                           
  8327                           ;./lcd.h: 53:     lcdCmd(1);
  8328  1CF4  3001               	movlw	1
  8329  1CF5  120A  158A  2006   	fcall	_lcdCmd
  8330  1CF8  0008               	return
  8331  1CF9                     __end_of_lcdClear:	
  8332                           
  8333                           	psect	text28
  8334  0806                     __ptext28:	
  8335 ;; *************** function _lcdCmd *****************
  8336 ;; Defined at:
  8337 ;;		line 43 in file "./lcd.h"
  8338 ;; Parameters:    Size  Location     Type
  8339 ;;  a               1    wreg     unsigned char 
  8340 ;; Auto vars:     Size  Location     Type
  8341 ;;  a               1    3[COMMON] unsigned char 
  8342 ;; Return value:  Size  Location     Type
  8343 ;;                  1    wreg      void 
  8344 ;; Registers used:
  8345 ;;		wreg, status,2, status,0, pclath, cstack
  8346 ;; Tracked objects:
  8347 ;;		On entry : 0/0
  8348 ;;		On exit  : 0/0
  8349 ;;		Unchanged: 0/0
  8350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8351 ;;      Params:         0       0       0       0       0
  8352 ;;      Locals:         1       0       0       0       0
  8353 ;;      Temps:          2       0       0       0       0
  8354 ;;      Totals:         3       0       0       0       0
  8355 ;;Total ram usage:        3 bytes
  8356 ;; Hardware stack levels used:    1
  8357 ;; Hardware stack levels required when called:    1
  8358 ;; This function calls:
  8359 ;;		_lcdPort
  8360 ;; This function is called by:
  8361 ;;		_lcdClear
  8362 ;;		_lcdSetCursor
  8363 ;;		_lcdInit
  8364 ;; This function uses a non-reentrant model
  8365 ;;
  8366                           
  8367                           
  8368                           ;psect for function _lcdCmd
  8369  0806                     _lcdCmd:	
  8370                           
  8371                           ;incstack = 0
  8372                           ; Regs used in _lcdCmd: [wreg+status,2+status,0+pclath+cstack]
  8373                           ;lcdCmd@a stored from wreg
  8374  0806  00F3               	movwf	lcdCmd@a
  8375                           
  8376                           ;./lcd.h: 44:     RB2 = 0;
  8377  0807  1283               	bcf	3,5	;RP0=0, select bank0
  8378  0808  1303               	bcf	3,6	;RP1=0, select bank0
  8379  0809  1106               	bcf	6,2	;volatile
  8380                           
  8381                           ;./lcd.h: 45:     lcdPort(a);
  8382  080A  0873               	movf	lcdCmd@a,w
  8383  080B  160A  158A  2507  120A  158A  	fcall	_lcdPort
  8384                           
  8385                           ;./lcd.h: 46:     RB3 = 1;
  8386  0810  1283               	bcf	3,5	;RP0=0, select bank0
  8387  0811  1303               	bcf	3,6	;RP1=0, select bank0
  8388  0812  1586               	bsf	6,3	;volatile
  8389                           
  8390                           ;./lcd.h: 47:     _delay((unsigned long)((4)*(4000000/4000.0)));
  8391  0813  3006               	movlw	6
  8392  0814  00F2               	movwf	??_lcdCmd+1
  8393  0815  3030               	movlw	48
  8394  0816  00F1               	movwf	??_lcdCmd
  8395  0817                     u6097:	
  8396  0817  0BF1               	decfsz	??_lcdCmd,f
  8397  0818  2817               	goto	u6097
  8398  0819  0BF2               	decfsz	??_lcdCmd+1,f
  8399  081A  2817               	goto	u6097
  8400  081B  0000               	nop
  8401                           
  8402                           ;./lcd.h: 48:     RB3 = 0;
  8403  081C  1283               	bcf	3,5	;RP0=0, select bank0
  8404  081D  1303               	bcf	3,6	;RP1=0, select bank0
  8405  081E  1186               	bcf	6,3	;volatile
  8406  081F  0008               	return
  8407  0820                     __end_of_lcdCmd:	
  8408                           
  8409                           	psect	text29
  8410  1D07                     __ptext29:	
  8411 ;; *************** function _lcdPort *****************
  8412 ;; Defined at:
  8413 ;;		line 21 in file "./lcd.h"
  8414 ;; Parameters:    Size  Location     Type
  8415 ;;  a               1    wreg     unsigned char 
  8416 ;; Auto vars:     Size  Location     Type
  8417 ;;  a               1    0[COMMON] unsigned char 
  8418 ;; Return value:  Size  Location     Type
  8419 ;;                  1    wreg      void 
  8420 ;; Registers used:
  8421 ;;		wreg
  8422 ;; Tracked objects:
  8423 ;;		On entry : 0/0
  8424 ;;		On exit  : 0/0
  8425 ;;		Unchanged: 0/0
  8426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8427 ;;      Params:         0       0       0       0       0
  8428 ;;      Locals:         1       0       0       0       0
  8429 ;;      Temps:          0       0       0       0       0
  8430 ;;      Totals:         1       0       0       0       0
  8431 ;;Total ram usage:        1 bytes
  8432 ;; Hardware stack levels used:    1
  8433 ;; This function calls:
  8434 ;;		Nothing
  8435 ;; This function is called by:
  8436 ;;		_lcdCmd
  8437 ;;		_lcdInit
  8438 ;;		_lcdWriteChar
  8439 ;; This function uses a non-reentrant model
  8440 ;;
  8441                           
  8442                           
  8443                           ;psect for function _lcdPort
  8444  1D07                     _lcdPort:	
  8445                           
  8446                           ;incstack = 0
  8447                           ; Regs used in _lcdPort: [wreg]
  8448                           ;lcdPort@a stored from wreg
  8449  1D07  00F0               	movwf	lcdPort@a
  8450                           
  8451                           ;./lcd.h: 22:     if (a & 1)
  8452  1D08  1C70               	btfss	lcdPort@a,0
  8453  1D09  2D0E               	goto	l35
  8454                           
  8455                           ;./lcd.h: 23:         RB4 = 1;
  8456  1D0A  1283               	bcf	3,5	;RP0=0, select bank0
  8457  1D0B  1303               	bcf	3,6	;RP1=0, select bank0
  8458  1D0C  1606               	bsf	6,4	;volatile
  8459  1D0D  2D11               	goto	l36
  8460  1D0E                     l35:	
  8461                           ;./lcd.h: 24:     else
  8462                           
  8463                           
  8464                           ;./lcd.h: 25:         RB4 = 0;
  8465  1D0E  1283               	bcf	3,5	;RP0=0, select bank0
  8466  1D0F  1303               	bcf	3,6	;RP1=0, select bank0
  8467  1D10  1206               	bcf	6,4	;volatile
  8468  1D11                     l36:	
  8469                           
  8470                           ;./lcd.h: 27:     if (a & 2)
  8471  1D11  1CF0               	btfss	lcdPort@a,1
  8472  1D12  2D15               	goto	l37
  8473                           
  8474                           ;./lcd.h: 28:         RB5 = 1;
  8475  1D13  1686               	bsf	6,5	;volatile
  8476  1D14  2D16               	goto	l38
  8477  1D15                     l37:	
  8478                           ;./lcd.h: 29:     else
  8479                           
  8480                           
  8481                           ;./lcd.h: 30:         RB5 = 0;
  8482  1D15  1286               	bcf	6,5	;volatile
  8483  1D16                     l38:	
  8484                           
  8485                           ;./lcd.h: 32:     if (a & 4)
  8486  1D16  1D70               	btfss	lcdPort@a,2
  8487  1D17  2D1A               	goto	l39
  8488                           
  8489                           ;./lcd.h: 33:         RB6 = 1;
  8490  1D18  1706               	bsf	6,6	;volatile
  8491  1D19  2D1B               	goto	l40
  8492  1D1A                     l39:	
  8493                           ;./lcd.h: 34:     else
  8494                           
  8495                           
  8496                           ;./lcd.h: 35:         RB6 = 0;
  8497  1D1A  1306               	bcf	6,6	;volatile
  8498  1D1B                     l40:	
  8499                           
  8500                           ;./lcd.h: 37:     if (a & 8)
  8501  1D1B  1DF0               	btfss	lcdPort@a,3
  8502  1D1C  2D1F               	goto	l41
  8503                           
  8504                           ;./lcd.h: 38:         RB7 = 1;
  8505  1D1D  1786               	bsf	6,7	;volatile
  8506  1D1E  0008               	return
  8507  1D1F                     l41:	
  8508                           ;./lcd.h: 39:     else
  8509                           
  8510                           
  8511                           ;./lcd.h: 40:         RB7 = 0;
  8512  1D1F  1386               	bcf	6,7	;volatile
  8513  1D20  0008               	return
  8514  1D21                     __end_of_lcdPort:	
  8515                           
  8516                           	psect	text30
  8517  1D42                     __ptext30:	
  8518 ;; *************** function _adcRead *****************
  8519 ;; Defined at:
  8520 ;;		line 35 in file "./adc.h"
  8521 ;; Parameters:    Size  Location     Type
  8522 ;;  adcChannel      2    0[COMMON] const int 
  8523 ;; Auto vars:     Size  Location     Type
  8524 ;;		None
  8525 ;; Return value:  Size  Location     Type
  8526 ;;                  2    0[COMMON] int 
  8527 ;; Registers used:
  8528 ;;		wreg, status,2, status,0
  8529 ;; Tracked objects:
  8530 ;;		On entry : 0/0
  8531 ;;		On exit  : 0/0
  8532 ;;		Unchanged: 0/0
  8533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8534 ;;      Params:         2       0       0       0       0
  8535 ;;      Locals:         0       0       0       0       0
  8536 ;;      Temps:          2       0       0       0       0
  8537 ;;      Totals:         4       0       0       0       0
  8538 ;;Total ram usage:        4 bytes
  8539 ;; Hardware stack levels used:    1
  8540 ;; This function calls:
  8541 ;;		Nothing
  8542 ;; This function is called by:
  8543 ;;		_main
  8544 ;; This function uses a non-reentrant model
  8545 ;;
  8546                           
  8547                           
  8548                           ;psect for function _adcRead
  8549  1D42                     _adcRead:	
  8550                           
  8551                           ;./adc.h: 36:     ADCON0bits.ADON = 1;
  8552                           
  8553                           ;incstack = 0
  8554                           ; Regs used in _adcRead: [wreg+status,2+status,0]
  8555  1D42  1283               	bcf	3,5	;RP0=0, select bank0
  8556  1D43  1303               	bcf	3,6	;RP1=0, select bank0
  8557  1D44  141F               	bsf	31,0	;volatile
  8558                           
  8559                           ;./adc.h: 37:     ADCON0bits.CHS = adcChannel;
  8560  1D45  0870               	movf	adcRead@adcChannel,w
  8561  1D46  00F2               	movwf	??_adcRead
  8562  1D47  0DF2               	rlf	??_adcRead,f
  8563  1D48  0DF2               	rlf	??_adcRead,f
  8564  1D49  0DF2               	rlf	??_adcRead,f
  8565  1D4A  081F               	movf	31,w	;volatile
  8566  1D4B  0672               	xorwf	??_adcRead,w
  8567  1D4C  39C7               	andlw	-57
  8568  1D4D  0672               	xorwf	??_adcRead,w
  8569  1D4E  009F               	movwf	31	;volatile
  8570                           
  8571                           ;./adc.h: 38:     _delay((unsigned long)((10)*(4000000/4000.0)));
  8572  1D4F  300D               	movlw	13
  8573  1D50  00F3               	movwf	??_adcRead+1
  8574  1D51  30FB               	movlw	251
  8575  1D52  00F2               	movwf	??_adcRead
  8576  1D53                     u6107:	
  8577  1D53  0BF2               	decfsz	??_adcRead,f
  8578  1D54  2D53               	goto	u6107
  8579  1D55  0BF3               	decfsz	??_adcRead+1,f
  8580  1D56  2D53               	goto	u6107
  8581  1D57  2D58               	nop2
  8582                           
  8583                           ;./adc.h: 39:     ADCON0bits.GO = 1;
  8584  1D58  1283               	bcf	3,5	;RP0=0, select bank0
  8585  1D59  1303               	bcf	3,6	;RP1=0, select bank0
  8586  1D5A  151F               	bsf	31,2	;volatile
  8587  1D5B                     l75:	
  8588                           ;./adc.h: 40:     while (ADCON0bits.GO_DONE);
  8589                           
  8590  1D5B  191F               	btfsc	31,2	;volatile
  8591  1D5C  2D5B               	goto	l75
  8592                           
  8593                           ;./adc.h: 42:     return (ADRESH << 8) + (ADRESL);
  8594  1D5D  081E               	movf	30,w	;volatile
  8595  1D5E  00F1               	movwf	?_adcRead+1
  8596  1D5F  1683               	bsf	3,5	;RP0=1, select bank1
  8597  1D60  1303               	bcf	3,6	;RP1=0, select bank1
  8598  1D61  081E               	movf	30,w	;volatile
  8599  1D62  00F0               	movwf	?_adcRead
  8600  1D63  0008               	return
  8601  1D64                     __end_of_adcRead:	
  8602                           
  8603                           	psect	text31
  8604  10D4                     __ptext31:	
  8605 ;; *************** function _adcInit *****************
  8606 ;; Defined at:
  8607 ;;		line 1 in file "./adc.h"
  8608 ;; Parameters:    Size  Location     Type
  8609 ;;		None
  8610 ;; Auto vars:     Size  Location     Type
  8611 ;;		None
  8612 ;; Return value:  Size  Location     Type
  8613 ;;                  1    wreg      void 
  8614 ;; Registers used:
  8615 ;;		wreg, status,2, status,0
  8616 ;; Tracked objects:
  8617 ;;		On entry : 0/0
  8618 ;;		On exit  : 0/0
  8619 ;;		Unchanged: 0/0
  8620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8621 ;;      Params:         0       0       0       0       0
  8622 ;;      Locals:         0       0       0       0       0
  8623 ;;      Temps:          0       0       0       0       0
  8624 ;;      Totals:         0       0       0       0       0
  8625 ;;Total ram usage:        0 bytes
  8626 ;; Hardware stack levels used:    1
  8627 ;; This function calls:
  8628 ;;		Nothing
  8629 ;; This function is called by:
  8630 ;;		_main
  8631 ;; This function uses a non-reentrant model
  8632 ;;
  8633                           
  8634                           
  8635                           ;psect for function _adcInit
  8636  10D4                     _adcInit:	
  8637                           
  8638                           ;./adc.h: 11:     ADCON0bits.ADCS = 0b01;
  8639                           
  8640                           ;incstack = 0
  8641                           ; Regs used in _adcInit: [wreg+status,2+status,0]
  8642  10D4  1283               	bcf	3,5	;RP0=0, select bank0
  8643  10D5  1303               	bcf	3,6	;RP1=0, select bank0
  8644  10D6  081F               	movf	31,w	;volatile
  8645  10D7  393F               	andlw	-193
  8646  10D8  3840               	iorlw	64
  8647  10D9  009F               	movwf	31	;volatile
  8648                           
  8649                           ;./adc.h: 12:     ADCON0bits.CHS = 0b000;
  8650  10DA  30C7               	movlw	-57
  8651  10DB  059F               	andwf	31,f	;volatile
  8652                           
  8653                           ;./adc.h: 13:     ADCON0bits.ADON = 0;
  8654  10DC  101F               	bcf	31,0	;volatile
  8655                           
  8656                           ;./adc.h: 24:     ADCON1bits.ADFM = 1;
  8657  10DD  1683               	bsf	3,5	;RP0=1, select bank1
  8658  10DE  1303               	bcf	3,6	;RP1=0, select bank1
  8659  10DF  179F               	bsf	31,7	;volatile
  8660                           
  8661                           ;./adc.h: 25:     ADCON1bits.ADCS2 = 1;
  8662  10E0  171F               	bsf	31,6	;volatile
  8663                           
  8664                           ;./adc.h: 26:     ADCON1bits.PCFG = 0b0000;
  8665  10E1  30F0               	movlw	-16
  8666  10E2  059F               	andwf	31,f	;volatile
  8667  10E3  0008               	return
  8668  10E4                     __end_of_adcInit:	
  8669                           
  8670                           	psect	text32
  8671  142E                     __ptext32:	
  8672 ;; *************** function ___fldiv *****************
  8673 ;; Defined at:
  8674 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  8675 ;; Parameters:    Size  Location     Type
  8676 ;;  a               4   32[BANK0 ] void 
  8677 ;;  b               4   36[BANK0 ] void 
  8678 ;; Auto vars:     Size  Location     Type
  8679 ;;  grs             4   52[BANK0 ] unsigned long 
  8680 ;;  rem             4   45[BANK0 ] unsigned long 
  8681 ;;  new_exp         2   50[BANK0 ] int 
  8682 ;;  aexp            1   57[BANK0 ] unsigned char 
  8683 ;;  bexp            1   56[BANK0 ] unsigned char 
  8684 ;;  sign            1   49[BANK0 ] unsigned char 
  8685 ;; Return value:  Size  Location     Type
  8686 ;;                  4   32[BANK0 ] unsigned char 
  8687 ;; Registers used:
  8688 ;;		wreg, status,2, status,0, btemp+1
  8689 ;; Tracked objects:
  8690 ;;		On entry : 0/0
  8691 ;;		On exit  : 0/0
  8692 ;;		Unchanged: 0/0
  8693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8694 ;;      Params:         0       8       0       0       0
  8695 ;;      Locals:         0      13       0       0       0
  8696 ;;      Temps:          0       5       0       0       0
  8697 ;;      Totals:         0      26       0       0       0
  8698 ;;Total ram usage:       26 bytes
  8699 ;; Hardware stack levels used:    1
  8700 ;; This function calls:
  8701 ;;		Nothing
  8702 ;; This function is called by:
  8703 ;;		_main
  8704 ;; This function uses a non-reentrant model
  8705 ;;
  8706                           
  8707                           
  8708                           ;psect for function ___fldiv
  8709  142E                     ___fldiv:	
  8710                           
  8711                           ;incstack = 0
  8712                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8713  142E  1283               	bcf	3,5	;RP0=0, select bank0
  8714  142F  1303               	bcf	3,6	;RP1=0, select bank0
  8715  1430  0847               	movf	___fldiv@b+3,w
  8716  1431  3980               	andlw	128
  8717  1432  00C8               	movwf	??___fldiv
  8718  1433  0848               	movf	??___fldiv,w
  8719  1434  00D1               	movwf	___fldiv@sign
  8720  1435  0847               	movf	___fldiv@b+3,w
  8721  1436  00C8               	movwf	??___fldiv
  8722  1437  0748               	addwf	??___fldiv,w
  8723  1438  00C9               	movwf	??___fldiv+1
  8724  1439  0849               	movf	??___fldiv+1,w
  8725  143A  00D8               	movwf	___fldiv@bexp
  8726  143B  1BC6               	btfsc	___fldiv@b+2,7
  8727  143C  1458               	bsf	___fldiv@bexp,0
  8728  143D  0858               	movf	___fldiv@bexp,w
  8729  143E  1903               	btfsc	3,2
  8730  143F  2C4E               	goto	l3401
  8731  1440  0A58               	incf	___fldiv@bexp,w
  8732  1441  1D03               	btfss	3,2
  8733  1442  2C4B               	goto	l3397
  8734  1443  3000               	movlw	0
  8735  1444  00C7               	movwf	___fldiv@b+3
  8736  1445  3000               	movlw	0
  8737  1446  00C6               	movwf	___fldiv@b+2
  8738  1447  3000               	movlw	0
  8739  1448  00C5               	movwf	___fldiv@b+1
  8740  1449  3000               	movlw	0
  8741  144A  00C4               	movwf	___fldiv@b
  8742  144B                     l3397:	
  8743  144B  17C6               	bsf	___fldiv@b+2,7
  8744  144C  01C7               	clrf	___fldiv@b+3
  8745  144D  2C56               	goto	l3403
  8746  144E                     l3401:	
  8747  144E  3000               	movlw	0
  8748  144F  00C7               	movwf	___fldiv@b+3
  8749  1450  3000               	movlw	0
  8750  1451  00C6               	movwf	___fldiv@b+2
  8751  1452  3000               	movlw	0
  8752  1453  00C5               	movwf	___fldiv@b+1
  8753  1454  3000               	movlw	0
  8754  1455  00C4               	movwf	___fldiv@b
  8755  1456                     l3403:	
  8756  1456  0843               	movf	___fldiv@a+3,w
  8757  1457  3980               	andlw	128
  8758  1458  00C8               	movwf	??___fldiv
  8759  1459  0848               	movf	??___fldiv,w
  8760  145A  06D1               	xorwf	___fldiv@sign,f
  8761  145B  0843               	movf	___fldiv@a+3,w
  8762  145C  00C8               	movwf	??___fldiv
  8763  145D  0748               	addwf	??___fldiv,w
  8764  145E  00C9               	movwf	??___fldiv+1
  8765  145F  0849               	movf	??___fldiv+1,w
  8766  1460  00D9               	movwf	___fldiv@aexp
  8767  1461  1BC2               	btfsc	___fldiv@a+2,7
  8768  1462  1459               	bsf	___fldiv@aexp,0
  8769  1463  0859               	movf	___fldiv@aexp,w
  8770  1464  1903               	btfsc	3,2
  8771  1465  2C74               	goto	l3421
  8772  1466  0A59               	incf	___fldiv@aexp,w
  8773  1467  1D03               	btfss	3,2
  8774  1468  2C71               	goto	l3417
  8775  1469  3000               	movlw	0
  8776  146A  00C3               	movwf	___fldiv@a+3
  8777  146B  3000               	movlw	0
  8778  146C  00C2               	movwf	___fldiv@a+2
  8779  146D  3000               	movlw	0
  8780  146E  00C1               	movwf	___fldiv@a+1
  8781  146F  3000               	movlw	0
  8782  1470  00C0               	movwf	___fldiv@a
  8783  1471                     l3417:	
  8784  1471  17C2               	bsf	___fldiv@a+2,7
  8785  1472  01C3               	clrf	___fldiv@a+3
  8786  1473  2C7C               	goto	l647
  8787  1474                     l3421:	
  8788  1474  3000               	movlw	0
  8789  1475  00C3               	movwf	___fldiv@a+3
  8790  1476  3000               	movlw	0
  8791  1477  00C2               	movwf	___fldiv@a+2
  8792  1478  3000               	movlw	0
  8793  1479  00C1               	movwf	___fldiv@a+1
  8794  147A  3000               	movlw	0
  8795  147B  00C0               	movwf	___fldiv@a
  8796  147C                     l647:	
  8797  147C  0843               	movf	___fldiv@a+3,w
  8798  147D  0442               	iorwf	___fldiv@a+2,w
  8799  147E  0441               	iorwf	___fldiv@a+1,w
  8800  147F  0440               	iorwf	___fldiv@a,w
  8801  1480  1D03               	skipz
  8802  1481  2C9B               	goto	l3431
  8803  1482  3000               	movlw	0
  8804  1483  00C7               	movwf	___fldiv@b+3
  8805  1484  3000               	movlw	0
  8806  1485  00C6               	movwf	___fldiv@b+2
  8807  1486  3000               	movlw	0
  8808  1487  00C5               	movwf	___fldiv@b+1
  8809  1488  3000               	movlw	0
  8810  1489  00C4               	movwf	___fldiv@b
  8811  148A  3080               	movlw	128
  8812  148B  04C6               	iorwf	___fldiv@b+2,f
  8813  148C  307F               	movlw	127
  8814  148D  04C7               	iorwf	___fldiv@b+3,f
  8815  148E                     L10:	
  8816  148E  0851               	movf	___fldiv@sign,w
  8817  148F  00C8               	movwf	??___fldiv
  8818  1490  0848               	movf	??___fldiv,w
  8819  1491  04C7               	iorwf	___fldiv@b+3,f
  8820  1492  0847               	movf	___fldiv@b+3,w
  8821  1493  00C3               	movwf	?___fldiv+3
  8822  1494  0846               	movf	___fldiv@b+2,w
  8823  1495  00C2               	movwf	?___fldiv+2
  8824  1496  0845               	movf	___fldiv@b+1,w
  8825  1497  00C1               	movwf	?___fldiv+1
  8826  1498  0844               	movf	___fldiv@b,w
  8827  1499  00C0               	movwf	?___fldiv
  8828  149A  0008               	return
  8829  149B                     l3431:	
  8830  149B  0858               	movf	___fldiv@bexp,w
  8831  149C  1D03               	btfss	3,2
  8832  149D  2CA7               	goto	l3437
  8833  149E  3000               	movlw	0
  8834  149F  00C3               	movwf	?___fldiv+3
  8835  14A0  3000               	movlw	0
  8836  14A1  00C2               	movwf	?___fldiv+2
  8837  14A2  3000               	movlw	0
  8838  14A3  00C1               	movwf	?___fldiv+1
  8839  14A4  3000               	movlw	0
  8840  14A5  00C0               	movwf	?___fldiv
  8841  14A6  0008               	return
  8842  14A7                     l3437:	
  8843  14A7  0858               	movf	___fldiv@bexp,w
  8844  14A8  00C8               	movwf	??___fldiv
  8845  14A9  01C9               	clrf	??___fldiv+1
  8846  14AA  0849               	movf	??___fldiv+1,w
  8847  14AB  00CB               	movwf	??___fldiv+3
  8848  14AC  0859               	movf	___fldiv@aexp,w
  8849  14AD  0248               	subwf	??___fldiv,w
  8850  14AE  00CA               	movwf	??___fldiv+2
  8851  14AF  1C03               	skipc
  8852  14B0  03CB               	decf	??___fldiv+3,f
  8853  14B1  084A               	movf	??___fldiv+2,w
  8854  14B2  3E7F               	addlw	127
  8855  14B3  00D2               	movwf	___fldiv@new_exp
  8856  14B4  084B               	movf	??___fldiv+3,w
  8857  14B5  1803               	skipnc
  8858  14B6  3E01               	addlw	1
  8859  14B7  3E00               	addlw	0
  8860  14B8  00D3               	movwf	___fldiv@new_exp+1
  8861  14B9  0847               	movf	___fldiv@b+3,w
  8862  14BA  00D0               	movwf	___fldiv@rem+3
  8863  14BB  0846               	movf	___fldiv@b+2,w
  8864  14BC  00CF               	movwf	___fldiv@rem+2
  8865  14BD  0845               	movf	___fldiv@b+1,w
  8866  14BE  00CE               	movwf	___fldiv@rem+1
  8867  14BF  0844               	movf	___fldiv@b,w
  8868  14C0  00CD               	movwf	___fldiv@rem
  8869  14C1  3000               	movlw	0
  8870  14C2  00C7               	movwf	___fldiv@b+3
  8871  14C3  3000               	movlw	0
  8872  14C4  00C6               	movwf	___fldiv@b+2
  8873  14C5  3000               	movlw	0
  8874  14C6  00C5               	movwf	___fldiv@b+1
  8875  14C7  3000               	movlw	0
  8876  14C8  00C4               	movwf	___fldiv@b
  8877  14C9  3000               	movlw	0
  8878  14CA  00D7               	movwf	___fldiv@grs+3
  8879  14CB  3000               	movlw	0
  8880  14CC  00D6               	movwf	___fldiv@grs+2
  8881  14CD  3000               	movlw	0
  8882  14CE  00D5               	movwf	___fldiv@grs+1
  8883  14CF  3000               	movlw	0
  8884  14D0  00D4               	movwf	___fldiv@grs
  8885  14D1  01D9               	clrf	___fldiv@aexp
  8886  14D2                     l3465:	
  8887  14D2  301A               	movlw	26
  8888  14D3  0259               	subwf	___fldiv@aexp,w
  8889  14D4  1803               	btfsc	3,0
  8890  14D5  2D1A               	goto	l3467
  8891  14D6  0859               	movf	___fldiv@aexp,w
  8892  14D7  1903               	btfsc	3,2
  8893  14D8  2CF6               	goto	l3457
  8894  14D9  3001               	movlw	1
  8895  14DA  00C8               	movwf	??___fldiv
  8896  14DB                     u5815:	
  8897  14DB  1003               	clrc
  8898  14DC  0DCD               	rlf	___fldiv@rem,f
  8899  14DD  0DCE               	rlf	___fldiv@rem+1,f
  8900  14DE  0DCF               	rlf	___fldiv@rem+2,f
  8901  14DF  0DD0               	rlf	___fldiv@rem+3,f
  8902  14E0  0BC8               	decfsz	??___fldiv,f
  8903  14E1  2CDB               	goto	u5815
  8904  14E2  3001               	movlw	1
  8905  14E3  00C8               	movwf	??___fldiv
  8906  14E4                     u5825:	
  8907  14E4  1003               	clrc
  8908  14E5  0DC4               	rlf	___fldiv@b,f
  8909  14E6  0DC5               	rlf	___fldiv@b+1,f
  8910  14E7  0DC6               	rlf	___fldiv@b+2,f
  8911  14E8  0DC7               	rlf	___fldiv@b+3,f
  8912  14E9  0BC8               	decfsz	??___fldiv,f
  8913  14EA  2CE4               	goto	u5825
  8914  14EB  1BD7               	btfsc	___fldiv@grs+3,7
  8915  14EC  1444               	bsf	___fldiv@b,0
  8916  14ED  3001               	movlw	1
  8917  14EE  00C8               	movwf	??___fldiv
  8918  14EF                     u5845:	
  8919  14EF  1003               	clrc
  8920  14F0  0DD4               	rlf	___fldiv@grs,f
  8921  14F1  0DD5               	rlf	___fldiv@grs+1,f
  8922  14F2  0DD6               	rlf	___fldiv@grs+2,f
  8923  14F3  0DD7               	rlf	___fldiv@grs+3,f
  8924  14F4  0BC8               	decfsz	??___fldiv,f
  8925  14F5  2CEF               	goto	u5845
  8926  14F6                     l3457:	
  8927  14F6  0843               	movf	___fldiv@a+3,w
  8928  14F7  0250               	subwf	___fldiv@rem+3,w
  8929  14F8  1D03               	skipz
  8930  14F9  2D04               	goto	u5855
  8931  14FA  0842               	movf	___fldiv@a+2,w
  8932  14FB  024F               	subwf	___fldiv@rem+2,w
  8933  14FC  1D03               	skipz
  8934  14FD  2D04               	goto	u5855
  8935  14FE  0841               	movf	___fldiv@a+1,w
  8936  14FF  024E               	subwf	___fldiv@rem+1,w
  8937  1500  1D03               	skipz
  8938  1501  2D04               	goto	u5855
  8939  1502  0840               	movf	___fldiv@a,w
  8940  1503  024D               	subwf	___fldiv@rem,w
  8941  1504                     u5855:	
  8942  1504  1C03               	skipc
  8943  1505  2D15               	goto	l3463
  8944  1506  1757               	bsf	___fldiv@grs+3,6
  8945  1507  0840               	movf	___fldiv@a,w
  8946  1508  02CD               	subwf	___fldiv@rem,f
  8947  1509  0841               	movf	___fldiv@a+1,w
  8948  150A  1C03               	skipc
  8949  150B  0F41               	incfsz	___fldiv@a+1,w
  8950  150C  02CE               	subwf	___fldiv@rem+1,f
  8951  150D  0842               	movf	___fldiv@a+2,w
  8952  150E  1C03               	skipc
  8953  150F  0F42               	incfsz	___fldiv@a+2,w
  8954  1510  02CF               	subwf	___fldiv@rem+2,f
  8955  1511  0843               	movf	___fldiv@a+3,w
  8956  1512  1C03               	skipc
  8957  1513  0F43               	incfsz	___fldiv@a+3,w
  8958  1514  02D0               	subwf	___fldiv@rem+3,f
  8959  1515                     l3463:	
  8960  1515  3001               	movlw	1
  8961  1516  00C8               	movwf	??___fldiv
  8962  1517  0848               	movf	??___fldiv,w
  8963  1518  07D9               	addwf	___fldiv@aexp,f
  8964  1519  2CD2               	goto	l3465
  8965  151A                     l3467:	
  8966  151A  0850               	movf	___fldiv@rem+3,w
  8967  151B  044F               	iorwf	___fldiv@rem+2,w
  8968  151C  044E               	iorwf	___fldiv@rem+1,w
  8969  151D  044D               	iorwf	___fldiv@rem,w
  8970  151E  1D03               	btfss	3,2
  8971  151F  1454               	bsf	___fldiv@grs,0
  8972  1520                     l3481:	
  8973  1520  1BC6               	btfsc	___fldiv@b+2,7
  8974  1521  2D3D               	goto	l3483
  8975  1522  3001               	movlw	1
  8976  1523  00C8               	movwf	??___fldiv
  8977  1524                     u5885:	
  8978  1524  1003               	clrc
  8979  1525  0DC4               	rlf	___fldiv@b,f
  8980  1526  0DC5               	rlf	___fldiv@b+1,f
  8981  1527  0DC6               	rlf	___fldiv@b+2,f
  8982  1528  0DC7               	rlf	___fldiv@b+3,f
  8983  1529  0BC8               	decfsz	??___fldiv,f
  8984  152A  2D24               	goto	u5885
  8985  152B  1BD7               	btfsc	___fldiv@grs+3,7
  8986  152C  1444               	bsf	___fldiv@b,0
  8987  152D  3001               	movlw	1
  8988  152E  00C8               	movwf	??___fldiv
  8989  152F                     u5905:	
  8990  152F  1003               	clrc
  8991  1530  0DD4               	rlf	___fldiv@grs,f
  8992  1531  0DD5               	rlf	___fldiv@grs+1,f
  8993  1532  0DD6               	rlf	___fldiv@grs+2,f
  8994  1533  0DD7               	rlf	___fldiv@grs+3,f
  8995  1534  0BC8               	decfsz	??___fldiv,f
  8996  1535  2D2F               	goto	u5905
  8997  1536  30FF               	movlw	255
  8998  1537  07D2               	addwf	___fldiv@new_exp,f
  8999  1538  1803               	skipnc
  9000  1539  0AD3               	incf	___fldiv@new_exp+1,f
  9001  153A  30FF               	movlw	255
  9002  153B  07D3               	addwf	___fldiv@new_exp+1,f
  9003  153C  2D20               	goto	l3481
  9004  153D                     l3483:	
  9005  153D  01D9               	clrf	___fldiv@aexp
  9006  153E  1FD7               	btfss	___fldiv@grs+3,7
  9007  153F  2D56               	goto	l3493
  9008  1540  30FF               	movlw	255
  9009  1541  0554               	andwf	___fldiv@grs,w
  9010  1542  00C8               	movwf	??___fldiv
  9011  1543  30FF               	movlw	255
  9012  1544  0555               	andwf	___fldiv@grs+1,w
  9013  1545  00C9               	movwf	??___fldiv+1
  9014  1546  30FF               	movlw	255
  9015  1547  0556               	andwf	___fldiv@grs+2,w
  9016  1548  00CA               	movwf	??___fldiv+2
  9017  1549  307F               	movlw	127
  9018  154A  0557               	andwf	___fldiv@grs+3,w
  9019  154B  00CB               	movwf	??___fldiv+3
  9020  154C  084B               	movf	??___fldiv+3,w
  9021  154D  044A               	iorwf	??___fldiv+2,w
  9022  154E  0449               	iorwf	??___fldiv+1,w
  9023  154F  0448               	iorwf	??___fldiv,w
  9024  1550  1903               	skipnz
  9025  1551  1844               	btfsc	___fldiv@b,0
  9026  1552  2D54               	goto	l3489
  9027  1553  2D56               	goto	l3493
  9028  1554                     l3489:	
  9029  1554  01D9               	clrf	___fldiv@aexp
  9030  1555  0AD9               	incf	___fldiv@aexp,f
  9031  1556                     l3493:	
  9032  1556  0859               	movf	___fldiv@aexp,w
  9033  1557  1903               	btfsc	3,2
  9034  1558  2D88               	goto	l3503
  9035  1559  3001               	movlw	1
  9036  155A  07C4               	addwf	___fldiv@b,f
  9037  155B  3000               	movlw	0
  9038  155C  1803               	skipnc
  9039  155D  3001               	movlw	1
  9040  155E  07C5               	addwf	___fldiv@b+1,f
  9041  155F  3000               	movlw	0
  9042  1560  1803               	skipnc
  9043  1561  3001               	movlw	1
  9044  1562  07C6               	addwf	___fldiv@b+2,f
  9045  1563  3000               	movlw	0
  9046  1564  1803               	skipnc
  9047  1565  3001               	movlw	1
  9048  1566  07C7               	addwf	___fldiv@b+3,f
  9049  1567  1C47               	btfss	___fldiv@b+3,0
  9050  1568  2D88               	goto	l3503
  9051  1569  0844               	movf	___fldiv@b,w
  9052  156A  00C8               	movwf	??___fldiv
  9053  156B  0845               	movf	___fldiv@b+1,w
  9054  156C  00C9               	movwf	??___fldiv+1
  9055  156D  0846               	movf	___fldiv@b+2,w
  9056  156E  00CA               	movwf	??___fldiv+2
  9057  156F  0847               	movf	___fldiv@b+3,w
  9058  1570  00CB               	movwf	??___fldiv+3
  9059  1571  3001               	movlw	1
  9060  1572  00CC               	movwf	??___fldiv+4
  9061  1573                     u5975:	
  9062  1573  0D4B               	rlf	??___fldiv+3,w
  9063  1574  0CCB               	rrf	??___fldiv+3,f
  9064  1575  0CCA               	rrf	??___fldiv+2,f
  9065  1576  0CC9               	rrf	??___fldiv+1,f
  9066  1577  0CC8               	rrf	??___fldiv,f
  9067  1578  0BCC               	decfsz	??___fldiv+4,f
  9068  1579  2D73               	goto	u5975
  9069  157A  084B               	movf	??___fldiv+3,w
  9070  157B  00C7               	movwf	___fldiv@b+3
  9071  157C  084A               	movf	??___fldiv+2,w
  9072  157D  00C6               	movwf	___fldiv@b+2
  9073  157E  0849               	movf	??___fldiv+1,w
  9074  157F  00C5               	movwf	___fldiv@b+1
  9075  1580  0848               	movf	??___fldiv,w
  9076  1581  00C4               	movwf	___fldiv@b
  9077  1582  3001               	movlw	1
  9078  1583  07D2               	addwf	___fldiv@new_exp,f
  9079  1584  1803               	skipnc
  9080  1585  0AD3               	incf	___fldiv@new_exp+1,f
  9081  1586  3000               	movlw	0
  9082  1587  07D3               	addwf	___fldiv@new_exp+1,f
  9083  1588                     l3503:	
  9084  1588  0853               	movf	___fldiv@new_exp+1,w
  9085  1589  3A80               	xorlw	128
  9086  158A  00FF               	movwf	127
  9087  158B  3080               	movlw	128
  9088  158C  027F               	subwf	127,w
  9089  158D  1D03               	skipz
  9090  158E  2D91               	goto	u5985
  9091  158F  30FF               	movlw	255
  9092  1590  0252               	subwf	___fldiv@new_exp,w
  9093  1591                     u5985:	
  9094  1591  1C03               	skipc
  9095  1592  2DA1               	goto	l3507
  9096  1593  30FF               	movlw	255
  9097  1594  1283               	bcf	3,5	;RP0=0, select bank0
  9098  1595  1303               	bcf	3,6	;RP1=0, select bank0
  9099  1596  00D2               	movwf	___fldiv@new_exp
  9100  1597  3000               	movlw	0
  9101  1598  00D3               	movwf	___fldiv@new_exp+1
  9102  1599  3000               	movlw	0
  9103  159A  00C7               	movwf	___fldiv@b+3
  9104  159B  3000               	movlw	0
  9105  159C  00C6               	movwf	___fldiv@b+2
  9106  159D  3000               	movlw	0
  9107  159E  00C5               	movwf	___fldiv@b+1
  9108  159F  3000               	movlw	0
  9109  15A0  00C4               	movwf	___fldiv@b
  9110  15A1                     l3507:	
  9111  15A1  1283               	bcf	3,5	;RP0=0, select bank0
  9112  15A2  1303               	bcf	3,6	;RP1=0, select bank0
  9113  15A3  0853               	movf	___fldiv@new_exp+1,w
  9114  15A4  3A80               	xorlw	128
  9115  15A5  00FF               	movwf	127
  9116  15A6  3080               	movlw	128
  9117  15A7  027F               	subwf	127,w
  9118  15A8  1D03               	skipz
  9119  15A9  2DAC               	goto	u5995
  9120  15AA  3001               	movlw	1
  9121  15AB  0252               	subwf	___fldiv@new_exp,w
  9122  15AC                     u5995:	
  9123  15AC  1803               	skipnc
  9124  15AD  2DBB               	goto	l669
  9125  15AE  1283               	bcf	3,5	;RP0=0, select bank0
  9126  15AF  1303               	bcf	3,6	;RP1=0, select bank0
  9127  15B0  01D2               	clrf	___fldiv@new_exp
  9128  15B1  01D3               	clrf	___fldiv@new_exp+1
  9129  15B2  3000               	movlw	0
  9130  15B3  00C7               	movwf	___fldiv@b+3
  9131  15B4  3000               	movlw	0
  9132  15B5  00C6               	movwf	___fldiv@b+2
  9133  15B6  3000               	movlw	0
  9134  15B7  00C5               	movwf	___fldiv@b+1
  9135  15B8  3000               	movlw	0
  9136  15B9  00C4               	movwf	___fldiv@b
  9137  15BA  01D1               	clrf	___fldiv@sign
  9138  15BB                     l669:	
  9139  15BB  1283               	bcf	3,5	;RP0=0, select bank0
  9140  15BC  1303               	bcf	3,6	;RP1=0, select bank0
  9141  15BD  0852               	movf	___fldiv@new_exp,w
  9142  15BE  00C8               	movwf	??___fldiv
  9143  15BF  0848               	movf	??___fldiv,w
  9144  15C0  00D8               	movwf	___fldiv@bexp
  9145  15C1  1C58               	btfss	___fldiv@bexp,0
  9146  15C2  2DC5               	goto	l3519
  9147  15C3  17C6               	bsf	___fldiv@b+2,7
  9148  15C4  2DC9               	goto	l671
  9149  15C5                     l3519:	
  9150  15C5  307F               	movlw	127
  9151  15C6  00C8               	movwf	??___fldiv
  9152  15C7  0848               	movf	??___fldiv,w
  9153  15C8  05C6               	andwf	___fldiv@b+2,f
  9154  15C9                     l671:	
  9155  15C9  0858               	movf	___fldiv@bexp,w
  9156  15CA  00C8               	movwf	??___fldiv
  9157  15CB  1003               	clrc
  9158  15CC  0C48               	rrf	??___fldiv,w
  9159  15CD  00C9               	movwf	??___fldiv+1
  9160  15CE  0849               	movf	??___fldiv+1,w
  9161  15CF  00C7               	movwf	___fldiv@b+3
  9162  15D0  2C8E               	goto	L10
  9163  15D1                     __end_of___fldiv:	
  9164  007E                     btemp	set	126	;btemp
  9165  007E                     wtemp0	set	126


Data Sizes:
    Strings     52
    Constant    144
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     58      58
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_6(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@mensaje(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    lcdPrint@a	PTR const unsigned char  size(2) Largest target is 16
		 -> main@mensaje(BANK1[16]), STR_5(CODE[6]), STR_4(CODE[9]), STR_3(CODE[8]), 
		 -> STR_2(CODE[12]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___xxtofl->_adcRead
    _lcdSetCursor->_lcdCmd
    _lcdPrint->_lcdWriteChar
    _lcdWriteChar->_lcdPort
    _lcdInit->_lcdCmd
    _lcdClear->_lcdCmd
    _lcdCmd->_lcdPort

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___xxtofl
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0   39233
                                             35 BANK1     23    23      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _adcInit
                            _adcRead
                           _lcdClear
                            _lcdInit
                           _lcdPrint
                       _lcdSetCursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   30953
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             32 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             32 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              6 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              4 COMMON     8     4      4
                                              0 BANK0      6     6      0
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             51 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             72 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             52 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _lcdSetCursor                                         8     7      1     771
                                              4 COMMON     8     7      1
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             7     5      2     724
                                              5 COMMON     7     5      2
                       _lcdWriteChar
 ---------------------------------------------------------------------------------
 (2) _lcdWriteChar                                         4     4      0     178
                                              1 COMMON     4     4      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              2     2      0     198
                                              4 COMMON     2     2      0
                             _lcdCmd
                            _lcdPort
 ---------------------------------------------------------------------------------
 (1) _lcdClear                                             0     0      0     110
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (2) _lcdCmd                                               3     3      0     110
                                              1 COMMON     3     3      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (3) _lcdPort                                              1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adcRead                                              4     2      2      98
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
       _adcRead (ARG)
     ___xxtofl (ARG)
       _adcRead (ARG)
     _adcRead (ARG)
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
       _adcRead (ARG)
     _adcRead (ARG)
   ___xxtofl
     _adcRead (ARG)
   _adcInit
   _adcRead
   _lcdClear
     _lcdCmd
       _lcdPort
   _lcdInit
     _lcdCmd
       _lcdPort
     _lcdPort
   _lcdPrint
     _lcdWriteChar
       _lcdPort
   _lcdSetCursor
     _lcdCmd
       _lcdPort
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _adcRead (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
       _adcRead (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _adcRead (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _adcRead (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _adcRead (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
       _adcRead (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _adcRead (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _adcRead (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     3A      3A       7       72.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue May 07 13:33:51 2019

           ___fldiv@aexp 0059             ___fldiv@bexp 0058                        pc 0002  
           ___fldiv@sign 0051              __CFG_CP$OFF 0000                       l40 1D1B  
                     l41 1D1F                       l35 1D0E                       l36 1D11  
                     l37 1D15                       l53 1E2B                       l38 1D16  
                     l39 1D1A                       l75 1D5B             ___awdiv@sign 0021  
                     fsr 0004      ___wmul@multiplicand 0072      __Umul8_16@word_mpld 0076  
                    l213 0273                      l254 07C9                      l239 05D7  
                    l264 1D2B                      l450 1EE0                      l451 1EFA  
                    l612 1775                      l445 1416                      l455 11BD  
                    l633 17F5                      l625 17DD                      l458 1223  
                    l474 086F                      l731 1295                      l492 136C  
                    l725 1255                      l671 15C9                      l647 147C  
                    l591 1623                      l753 1D98                      l738 12AB  
                    l595 16BC                      l739 12B5                      l669 15BB  
                    l597 169A                      l699 0CAA                      _RB2 0032  
                    _RB3 0033                      _RB4 0034                      _RB5 0035  
                    _RB6 0036                      _RB7 0037             __CFG_CPD$OFF 0000  
                    fsr0 0004                      indf 0000             ___awmod@sign 0076  
           __CFG_FOSC$XT 0000             ___flmul@aexp 0038             ___flmul@bexp 0039  
            _sprintf$876 00AA             ___flmul@sign 0033             ___flmul@temp 003E  
           ___flmul@prod 003A           ??_lcdWriteChar 0071            lcdWriteChar@a 0074  
          lcdWriteChar@y 0073             __CFG_LVP$OFF 0000             ___fltol@exp1 005D  
                   l3111 1E23                     l3015 085B                     l2311 1F25  
                   l2303 1F1F                     l3025 087E                     l3017 086B  
                   l3041 1F8F                     l2313 1F33                     l2321 1F4C  
                   l3201 0235                     l3107 1E1D                     l3035 1F61  
                   l2227 1D90                     l3211 0291                     l3203 026F  
                   l3037 1F71                     l3045 1F9C                     l3061 124D  
                   l2341 1E63                     l2261 1FBC                     l2325 1F54  
                   l2317 1F41                     l2415 1618                     l3071 1268  
                   l2351 1E84                     l2271 1FC4                     l2255 1FB1  
                   l3311 0639                     l3401 144E                     l2425 162D  
                   l3081 12A9                     l3073 127A                     l2273 1FD2  
                   l3217 02A1                     l3209 0275                     l3403 1456  
                   l2531 179D                     l2419 161B                     l3083 129A  
                   l3067 1264                     l2603 09E4                     l2347 1E79  
                   l2339 1E55                     l2363 1DAF                     l2283 1FF3  
                   l3331 0685                     l3323 0668                     l3251 03CA  
                   l3243 0341                     l3227 02E7                     l3421 1474  
                   l3157 1E8B                     l2525 1796                     l2517 1787  
                   l2509 1767                     l2533 179F                     l2605 09E6  
                   l2365 1DBD                     l2373 1DD6                     l3317 064C  
                   l3503 1588                     l3431 149B                     l2543 17AA  
                   l2463 16A5                     l2455 1669                     l2391 15EE  
                   l3095 12D2                     l2615 09FC                     l2607 09EE  
                   l2287 1FFB                     l2279 1FE8                     l3351 07B4  
                   l3271 04B2                     l3255 03EB                     l3417 1471  
                   l2561 17ED                     l2481 16CA                     l2465 16A7  
                   l2473 16B6                     l2369 1DCB                     l3345 07A3  
                   l3281 0500                     l3353 07B9                     l3601 0289  
                   l3507 15A1                     l2539 17A8                     l2491 16ED  
                   l2395 15F1                     l2299 1F18                     l3267 0497  
                   l3259 043F                     l3187 0222                     l3371 020C  
                   l3437 14A7                     l2565 17F1                     l2397 15F9  
                   l2901 1402                     l2813 12EC                     l3365 07DF  
                   l3293 0586                     l3373 07F7                     l3519 15C5  
                   l3463 1515                     l2911 1425                     l2903 1412  
                   l2831 1325                     l2807 1D05                     l3287 0584  
                   l3481 1520                     l3457 14F6                     l3465 14D2  
                   l2489 16EB                     l2817 12F5                     l2585 09BF  
                   l3561 0915                     l3483 153D                     l3467 151A  
                   l2499 16FD                     l2851 1368                     l2675 0C30  
                   l2667 0BFC                     l2587 09C1                     l2755 01C3  
                   l2771 0DA9                     l3299 05C2                     l3493 1556  
                   l3397 144B                     l2917 1D23                     l2693 0C7A  
                   l2669 0C19                     l2589 09C9                     l2749 0116  
                   l2781 0E5F                     l2935 10F4                     l2839 1345  
                   l2679 0C32                     l3489 1554                     l2961 1F0C  
                   l2945 112C                     l2937 1104                     l2865 138F  
                   l2849 1358                     l2689 0C64                     l2777 0E34  
                   l2971 11D7                     l2891 13EE                     l2883 13C6  
                   l2859 137B                     l2699 0C93                     l2795 0FD5  
                   l2949 1139                     l2869 1398                     l2789 0F4A  
                   l2975 11FD                     l2995 082B                     l2999 0834  
                   STR_1 10AC                     STR_2 10A0                     STR_3 10C0  
                   STR_4 10B7                     STR_5 10C8                     STR_6 10CE  
                   u3025 1D99                     u3115 1FC7                     u4015 0B09  
                   u3135 1FD3                     u3215 1F28                     u4105 0C00  
                   u3305 1E64                     u3145 1FDF                     u3315 1E70  
                   u3155 1FE9                     u3235 1F39                     u3500 1689  
                   u5005 083D                     u4205 0C6D                     u4125 0C0B  
                   u3325 1E7A                     u3245 1F42                     u3510 168A  
                   u4215 0C85                     u4055 0BA5                     u5105 1F65  
                   u4305 0184                     u4235 1DEC                     u5035 085C  
                   u4075 0BCA                     u3355 1DB2                     u4315 01CE  
                   u5125 1F7F                     u5205 128D                     u3285 1E58  
                   u4405 0E37                     u5135 1F90                     u4095 0BE8  
                   u3375 1DC3                     u4255 0028                     u3641 1728  
                   u3633 170F                     u3625 16F1                     u3545 16AB  
                   u5065 0874                     u5225 12A2                     u3385 1DCC  
                   u4265 0082                     u4425 0E84                     u4345 0CE3  
                   u6017 089F                     u3650 173C                     u3642 1729  
                   u6107 1D53                     u3651 173D                     u3643 172E  
                   u4195 0C4F                     u4275 00D7                     u4435 0EC0  
                   u4355 0D1F                     u6027 08D7                     u3652 1742  
                   u3644 172F                     u5325 1E34                     u3653 1743  
                   u3645 1734                     u4445 0F0B                     u4365 0D6A  
                   u6037 099D                     u3646 1735                     u6047 1DFC  
                   u3495 167D                     u4535 1327                     u4295 0137  
                   u6057 1E0C                     u5265 12BD                     u5185 1271  
                   u4625 1371                     u4545 1338                     u4465 0F62  
                   u4385 0DC1                     u6067 1152                     u4555 1346  
                   u4475 0F9E                     u4395 0DFD                     u5515 0495  
                   u6077 1161                     u4725 1403                     u4485 0FD8  
                   u5605 0662                     u6087 116F                     u3695 1789  
                   u5535 0589                     u6097 0817                     u4905 1F08  
                   u4825 10F8                     u4665 13C8                     u5625 0705  
                   u5545 05B8                     u3795 17C7                     u4755 141B  
                   u4675 13DD                     u4595 1359                     u5635 076B  
                   u5475 03F6                     u4941 11E8                     u4845 1106  
                   u4685 13F0                     u5485 044A                     u4942 11E9  
                   u5815 14DB                     u4943 11EE                     u4855 111B  
                   u5575 05DF                     u4944 11EF                     u5905 152F  
                   u5825 14E4                     u4961 120E                     u4945 11F4  
                   u4865 112D                     u4785 1D2C                     u3985 0AAC  
                   u4962 120F                     u4946 11F5                     u4963 1214  
                   u4795 1D33                     u5595 0655                     u4964 1215  
                   u5845 14EF                     u4965 121A                     u5685 07D0  
                   u4966 121B                     u5855 1504                     u5695 07DD  
                   u5885 1524                     u5975 1573                     u5985 1591  
                   u5995 15AC              main@mensaje 00C6             __CFG_WRT$OFF 0000  
                   _main 088D                     btemp 007E                     start 0000  
        ___fldiv@new_exp 0052            ___fltol@sign1 005C          __end_of___fladd 1800  
                  ?_main 0070          __end_of_adcInit 10E4          __end_of___fldiv 15D1  
        __end_of_adcRead 1D64          __end_of___awdiv 2000          __end_of___flneg 1CEE  
          __CFG_WDTE$OFF 0000          __end_of___awmod 1F59          __end_of___flmul 0CB7  
        __end_of___flsub 1D86          __end_of___fltol 088D          __end_of___lldiv 1142  
        ___awdiv@divisor 0077          __end_of___llmod 1FA5          __end_of___lwdiv 1E89  
        __end_of___lwmod 1DDB          ___awdiv@counter 0020                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
        __end_of_lcdInit 11A3          __end_of_lcdPort 1D21          __end_of_dpowers 10A0  
                  _scale 0CB7          __end_of_isdigit 1D07           __CFG_BOREN$OFF 0000  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __end_of_sprintf 07FC          __initialization 07FC             __end_of_main 09A2  
                 ??_main 00C3     __end_of_lcdSetCursor 1E4D     __size_of__tdiv_to_l_ 00A9  
       ___llmod@dividend 0074                   ?_scale 0040                   _ADRESH 001E  
                 _ADRESL 009E         ___awdiv@dividend 0079         __end_of___xxtofl 12DB  
       __end_of_lcdClear 1CF9           __CFG_PWRTE$OFF 0000         __end_of_lcdPrint 1EC6  
       __end_of__powers_ 1044                   ___flge 11A3                   ___fleq 1EC6  
              ??___fladd 005C                   ___wmul 1D21                ??_adcInit 0070  
              ??___fldiv 0048                ??_adcRead 0072                ??___awdiv 007B  
   __end_of_lcdWriteChar 1E12                ??___flneg 0074                ??___awmod 0074  
              ??___flmul 002E                ??___flsub 007E                ??___fltol 0057  
              ??___lldiv 0078                   _lcdCmd 0806                ??___llmod 0078  
              ??___lwdiv 007A                ??___lwmod 0074                   _fround 0004  
       ___awdiv@quotient 0022          ___awmod@divisor 0070                ??_lcdInit 0074  
        ___awmod@counter 0075                ??_lcdPort 0070                ??_isdigit 0070  
     __size_of__Umul8_16 0023                ??_sprintf 00A5               ___flge@ff1 0070  
             ___flge@ff2 0074             ___xxtofl@arg 0022             ___xxtofl@exp 0021  
           ___xxtofl@val 0074               ___fleq@ff1 0070               ___fleq@ff2 0074  
__end_of__initialization 07FC               ___flneg@f1 0070               ___fltol@f1 0053  
         __pcstackCOMMON 0070            __end_of_scale 1000               __div_to_l_ 1384  
       lcdWriteChar@temp 0072          __div_to_l_@exp1 0025          __div_to_l_@cntr 0024  
                ??_scale 0044          __div_to_l_@quot 0020            __div_to_l_@f1 0070  
          __div_to_l_@f2 0074        __end_of__Umul8_16 1DA9               __pmaintext 088D  
                ?___flge 0070                  ?___fleq 0070                  ?___wmul 0070  
                ?_lcdCmd 0070    __size_of_lcdSetCursor 003B                  ?_fround 0040  
              ?___xxtofl 0074                ?_lcdClear 0070                ?_lcdPrint 0075  
             __stringtab 1000    __size_of_lcdWriteChar 0037             _lcdSetCursor 1E12  
      __end_of__npowers_ 1078          lcdSetCursor@row 0079          __size_of___flge 0093  
        __size_of___fleq 0048                  ___fladd 15D1                  _adcInit 10D4  
                ___fldiv 142E                  _adcRead 1D42                  ___awdiv 1FA5  
                ___flneg 1CE5                  ___awmod 1F0E                  ___flmul 09A2  
                ___flsub 1D64                  ___fltol 0820                  ___lldiv 10E4  
        __size_of___wmul 0021                  ___llmod 1F59                  ___lwdiv 1E4D  
             _fround$873 004F               _fround$874 004B                  ___lwmod 1DA9  
        __size_of_lcdCmd 001A          __size_of_fround 0201                  _lcdInit 1142  
                __ptext1 0205                  __ptext2 0CB7                  __ptext3 1F0E  
                __ptext4 1FA5                  __ptext5 1CF9                  __ptext6 0004  
                __ptext7 1DA9                  __ptext8 1E4D                  __ptext9 09A2  
                _lcdPort 1D07              ?__div_to_l_ 0070                  _dpowers 1078  
                _isdigit 1CF9               ??___xxtofl 0078         ___awmod@dividend 0072  
                lcdCmd@a 0073               ??_lcdClear 0074               ??_lcdPrint 0077  
                _sprintf 0205             _lcdWriteChar 1DDB     end_of_initialization 07FC  
        ___lldiv@divisor 0070          ___lldiv@counter 007D           __tdiv_to_l_@f1 0070  
         __tdiv_to_l_@f2 0074            ??__tdiv_to_l_ 0078              ___fladd@grs 0067  
          ___xxtofl@sign 0020              ___fldiv@grs 0054              ___fldiv@rem 004D  
            ___flmul@grs 0034      __size_of__div_to_l_ 00AA           __end_of___flge 1236  
         __end_of___fleq 1F0E           __end_of___wmul 1D42           __end_of_lcdCmd 0820  
         __end_of_fround 0205      start_initialization 07FC      __end_of__tdiv_to_l_ 1384  
        ___llmod@divisor 0070          ___llmod@counter 0079                 ??___flge 0078  
               ??___fleq 0078                 ??___wmul 0074                 ??_lcdCmd 0071  
              __Umul8_16 1D86                 ??_fround 0044            sprintf@tmpval 00B7  
              ___fladd@a 0058                ___fladd@b 0054               fround@prec 0053  
              ___fldiv@a 0040                ___fldiv@b 0044                ___flmul@a 002A  
              ___flmul@b 0026                ___flsub@a 0068                ___flsub@b 006C  
              ___latbits 0002            __pcstackBANK0 0020            __pcstackBANK1 00A0  
      __size_of___xxtofl 00A5        __size_of_lcdClear 000B        __size_of_lcdPrint 003D  
            sprintf@flag 00AF              sprintf@eexp 00B5              sprintf@fval 00BE  
            sprintf@prec 00BC         ___lwdiv@dividend 0078                 ?___fladd 0054  
               ?_adcInit 0070                 ?___fldiv 0040                 ?_adcRead 0070  
               ?___awdiv 0077                 ?___flneg 0070                 ?___awmod 0070  
               ?___flmul 0026                 ?___flsub 0068                 ?___fltol 0053  
               ?___lldiv 0070                 ?___llmod 0070                __npowers_ 1044  
             ?__Umul8_16 0070                 ?___lwdiv 0076                 ?___lwmod 0070  
              __pstrings 1000                 ?_lcdInit 0070              __tdiv_to_l_ 12DB  
               ?_lcdPort 0070             ??__div_to_l_ 0078        adcRead@adcChannel 0070  
               ?_isdigit 0070           lcdSetCursor@yy 0078                _scale$875 004E  
       ___lwdiv@quotient 007B                 ?_sprintf 00A0           __size_of_scale 0349  
         ___wmul@product 0074       __end_of__div_to_l_ 142E                lcdPrint@a 0075  
              lcdPrint@i 007A               _ADCON0bits 001F              __stringbase 100F  
             _ADCON1bits 009F        ___wmul@multiplier 0070         lcdSetCursor@temp 007A  
            ??__Umul8_16 0072         __size_of___fladd 022F         __size_of_adcInit 0010  
       __size_of___fldiv 01A3         __size_of_adcRead 0022         __size_of___awdiv 005B  
       __size_of___flneg 0009         __size_of___awmod 004B         __size_of___flmul 0315  
       __size_of___flsub 0022         __size_of___fltol 006D         __size_of___lldiv 005E  
       __size_of___llmod 004C         __size_of___lwdiv 003C         __size_of___lwmod 0032  
     __end_of__stringtab 1010              _isdigit$684 0070         __size_of_lcdInit 0061  
       __size_of_lcdPort 001A               sprintf@val 00B1                 ___xxtofl 1236  
       __size_of_isdigit 000E                 _lcdClear 1CEE          ___lwdiv@divisor 0076  
        ___lwdiv@counter 007D                 __ptext10 1D86                 __ptext11 12DB  
               __ptext20 1CE5                 __ptext12 1384                 __ptext21 11A3  
               __ptext13 1236                 __ptext30 1D42                 __ptext22 1EC6  
               __ptext14 1D21                 __ptext31 10D4                 __ptext23 1E12  
               __ptext15 1F59                 __ptext32 142E                 __ptext24 1E89  
               __ptext16 10E4                 __ptext25 1DDB                 __ptext17 0820  
               __ptext26 1142                 __ptext18 1D64                 __ptext27 1CEE  
               __ptext19 15D1                 __ptext28 0806                 __ptext29 1D07  
               _lcdPrint 1E89                 __powers_ 1010         __size_of_sprintf 05F7  
          lcdSetCursor@x 0074            lcdSetCursor@y 007B            lcdSetCursor@z 0077  
          __size_of_main 0115                 lcdPort@a 0070                 main@volt 00D6  
               isdigit@c 0071                 scale@scl 0052                sprintf@ap 00AE  
       __tdiv_to_l_@exp1 0025         __tdiv_to_l_@cntr 0024                sprintf@sp 00BB  
       __tdiv_to_l_@quot 0020         ___lwmod@dividend 0072         ___lldiv@dividend 0074  
          ?_lcdSetCursor 0074                stringcode 100A             ?__tdiv_to_l_ 0070  
 __Umul8_16@multiplicand 0070                 sprintf@c 00C2                 sprintf@f 00A0  
       ___lldiv@quotient 0079          ___lwmod@divisor 0070          ___lwmod@counter 0075  
               stringdir 100A                 stringtab 1000            ?_lcdWriteChar 0070  
          ___fladd@signs 0064             ___fladd@aexp 0065             ___fladd@bexp 0066  
   __Umul8_16@multiplier 0078           ??_lcdSetCursor 0075        __Umul8_16@product 0074  
