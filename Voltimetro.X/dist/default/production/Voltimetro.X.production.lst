

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Apr 26 11:12:45 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,merge=1,delta=2
    37                           	psect	text28,local,class=CODE,merge=1,delta=2
    38                           	psect	text29,local,class=CODE,merge=1,delta=2
    39                           	psect	text30,local,class=CODE,merge=1,delta=2
    40                           	psect	text31,local,class=CODE,merge=1,delta=2
    41                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.05
    45                           ; Generated 20/12/2018 GMT
    46                           ; 
    47                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F877A Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  018C                     	;# 
   197  018D                     	;# 
   198                           
   199                           	psect	strings
   200  1000                     __pstrings:	
   201  1000                     stringtab:	
   202  1000                     __stringtab:	
   203                           
   204                           ;	String table - string pointers are 1 byte each
   205  1000  1BFF               	btfsc	btemp+1,7
   206  1001  280A               	ljmp	stringcode
   207  1002  1383               	bcf	3,7
   208  1003  187F               	btfsc	btemp+1,0
   209  1004  1783               	bsf	3,7
   210  1005  0800               	movf	0,w
   211  1006  0A84               	incf	4,f
   212  1007  1903               	skipnz
   213  1008  0AFF               	incf	btemp+1,f
   214  1009  0008               	return
   215  100A                     stringcode:	
   216  100A                     stringdir:	
   217  100A  3010               	movlw	high stringdir
   218  100B  008A               	movwf	10
   219  100C  0804               	movf	4,w
   220  100D  0A84               	incf	4,f
   221  100E  0782               	addwf	2,f
   222  100F                     __stringbase:	
   223  100F  3400               	retlw	0
   224  1010                     __end_of__stringtab:	
   225  1010                     __powers_:	
   226  1010  3400               	retlw	0
   227  1011  3400               	retlw	0
   228  1012  3480               	retlw	128
   229  1013  343F               	retlw	63
   230  1014  3400               	retlw	0
   231  1015  3400               	retlw	0
   232  1016  3420               	retlw	32
   233  1017  3441               	retlw	65
   234  1018  3400               	retlw	0
   235  1019  3400               	retlw	0
   236  101A  34C8               	retlw	200
   237  101B  3442               	retlw	66
   238  101C  3400               	retlw	0
   239  101D  3400               	retlw	0
   240  101E  347A               	retlw	122
   241  101F  3444               	retlw	68
   242  1020  3400               	retlw	0
   243  1021  3440               	retlw	64
   244  1022  341C               	retlw	28
   245  1023  3446               	retlw	70
   246  1024  3400               	retlw	0
   247  1025  3450               	retlw	80
   248  1026  34C3               	retlw	195
   249  1027  3447               	retlw	71
   250  1028  3400               	retlw	0
   251  1029  3424               	retlw	36
   252  102A  3474               	retlw	116
   253  102B  3449               	retlw	73
   254  102C  3480               	retlw	128
   255  102D  3496               	retlw	150
   256  102E  3418               	retlw	24
   257  102F  344B               	retlw	75
   258  1030  3420               	retlw	32
   259  1031  34BC               	retlw	188
   260  1032  34BE               	retlw	190
   261  1033  344C               	retlw	76
   262  1034  3428               	retlw	40
   263  1035  346B               	retlw	107
   264  1036  346E               	retlw	110
   265  1037  344E               	retlw	78
   266  1038  34F9               	retlw	249
   267  1039  3402               	retlw	2
   268  103A  3415               	retlw	21
   269  103B  3450               	retlw	80
   270  103C  34EC               	retlw	236
   271  103D  3478               	retlw	120
   272  103E  34AD               	retlw	173
   273  103F  3460               	retlw	96
   274  1040  34CA               	retlw	202
   275  1041  34F2               	retlw	242
   276  1042  3449               	retlw	73
   277  1043  3471               	retlw	113
   278  1044                     __end_of__powers_:	
   279  1044                     __npowers_:	
   280  1044  3400               	retlw	0
   281  1045  3400               	retlw	0
   282  1046  3480               	retlw	128
   283  1047  343F               	retlw	63
   284  1048  34CD               	retlw	205
   285  1049  34CC               	retlw	204
   286  104A  34CC               	retlw	204
   287  104B  343D               	retlw	61
   288  104C  340A               	retlw	10
   289  104D  34D7               	retlw	215
   290  104E  3423               	retlw	35
   291  104F  343C               	retlw	60
   292  1050  346F               	retlw	111
   293  1051  3412               	retlw	18
   294  1052  3483               	retlw	131
   295  1053  343A               	retlw	58
   296  1054  3417               	retlw	23
   297  1055  34B7               	retlw	183
   298  1056  34D1               	retlw	209
   299  1057  3438               	retlw	56
   300  1058  34AC               	retlw	172
   301  1059  34C5               	retlw	197
   302  105A  3427               	retlw	39
   303  105B  3437               	retlw	55
   304  105C  34BD               	retlw	189
   305  105D  3437               	retlw	55
   306  105E  3486               	retlw	134
   307  105F  3435               	retlw	53
   308  1060  3495               	retlw	149
   309  1061  34BF               	retlw	191
   310  1062  34D6               	retlw	214
   311  1063  3433               	retlw	51
   312  1064  3477               	retlw	119
   313  1065  34CC               	retlw	204
   314  1066  342B               	retlw	43
   315  1067  3432               	retlw	50
   316  1068  345F               	retlw	95
   317  1069  3470               	retlw	112
   318  106A  3489               	retlw	137
   319  106B  3430               	retlw	48
   320  106C  34FF               	retlw	255
   321  106D  34E6               	retlw	230
   322  106E  34DB               	retlw	219
   323  106F  342E               	retlw	46
   324  1070  3408               	retlw	8
   325  1071  34E5               	retlw	229
   326  1072  343C               	retlw	60
   327  1073  341E               	retlw	30
   328  1074  3460               	retlw	96
   329  1075  3442               	retlw	66
   330  1076  34A2               	retlw	162
   331  1077  340D               	retlw	13
   332  1078                     __end_of__npowers_:	
   333  1078                     _dpowers:	
   334  1078  3401               	retlw	1
   335  1079  3400               	retlw	0
   336  107A  3400               	retlw	0
   337  107B  3400               	retlw	0
   338  107C  340A               	retlw	10
   339  107D  3400               	retlw	0
   340  107E  3400               	retlw	0
   341  107F  3400               	retlw	0
   342  1080  3464               	retlw	100
   343  1081  3400               	retlw	0
   344  1082  3400               	retlw	0
   345  1083  3400               	retlw	0
   346  1084  34E8               	retlw	232
   347  1085  3403               	retlw	3
   348  1086  3400               	retlw	0
   349  1087  3400               	retlw	0
   350  1088  3410               	retlw	16
   351  1089  3427               	retlw	39
   352  108A  3400               	retlw	0
   353  108B  3400               	retlw	0
   354  108C  34A0               	retlw	160
   355  108D  3486               	retlw	134
   356  108E  3401               	retlw	1
   357  108F  3400               	retlw	0
   358  1090  3440               	retlw	64
   359  1091  3442               	retlw	66
   360  1092  340F               	retlw	15
   361  1093  3400               	retlw	0
   362  1094  3480               	retlw	128
   363  1095  3496               	retlw	150
   364  1096  3498               	retlw	152
   365  1097  3400               	retlw	0
   366  1098  3400               	retlw	0
   367  1099  34E1               	retlw	225
   368  109A  34F5               	retlw	245
   369  109B  3405               	retlw	5
   370  109C  3400               	retlw	0
   371  109D  34CA               	retlw	202
   372  109E  349A               	retlw	154
   373  109F  343B               	retlw	59
   374  10A0                     __end_of_dpowers:	
   375  0005                     _PORTA	set	5
   376  001E                     _ADRESH	set	30
   377  001F                     _ADCON0bits	set	31
   378  0006                     _PORTB	set	6
   379  0033                     _RB3	set	51
   380  0032                     _RB2	set	50
   381  0037                     _RB7	set	55
   382  0036                     _RB6	set	54
   383  0035                     _RB5	set	53
   384  0034                     _RB4	set	52
   385  0085                     _TRISA	set	133
   386  009E                     _ADRESL	set	158
   387  009F                     _ADCON1bits	set	159
   388  0086                     _TRISB	set	134
   389  10A0                     STR_2:	
   390  10A0  3443               	retlw	67	;'C'
   391  10A1  3461               	retlw	97	;'a'
   392  10A2  3472               	retlw	114	;'r'
   393  10A3  3467               	retlw	103	;'g'
   394  10A4  3461               	retlw	97	;'a'
   395  10A5  346E               	retlw	110	;'n'
   396  10A6  3464               	retlw	100	;'d'
   397  10A7  346F               	retlw	111	;'o'
   398  10A8  342E               	retlw	46	;'.'
   399  10A9  342E               	retlw	46	;'.'
   400  10AA  342E               	retlw	46	;'.'
   401  10AB  3400               	retlw	0
   402  10AC                     STR_1:	
   403  10AC  3456               	retlw	86	;'V'
   404  10AD  346F               	retlw	111	;'o'
   405  10AE  346C               	retlw	108	;'l'
   406  10AF  3474               	retlw	116	;'t'
   407  10B0  3469               	retlw	105	;'i'
   408  10B1  346D               	retlw	109	;'m'
   409  10B2  3465               	retlw	101	;'e'
   410  10B3  3474               	retlw	116	;'t'
   411  10B4  3472               	retlw	114	;'r'
   412  10B5  346F               	retlw	111	;'o'
   413  10B6  3400               	retlw	0
   414  10B7                     STR_4:	
   415  10B7  3443               	retlw	67	;'C'
   416  10B8  3442               	retlw	66	;'B'
   417  10B9  3454               	retlw	84	;'T'
   418  10BA  3449               	retlw	73	;'I'
   419  10BB  3453               	retlw	83	;'S'
   420  10BC  3420               	retlw	32	;' '
   421  10BD  3438               	retlw	56	;'8'
   422  10BE  3435               	retlw	53	;'5'
   423  10BF  3400               	retlw	0
   424  10C0                     STR_3:	
   425  10C0  3456               	retlw	86	;'V'
   426  10C1  346F               	retlw	111	;'o'
   427  10C2  346C               	retlw	108	;'l'
   428  10C3  3474               	retlw	116	;'t'
   429  10C4  3461               	retlw	97	;'a'
   430  10C5  346A               	retlw	106	;'j'
   431  10C6  3465               	retlw	101	;'e'
   432  10C7  3400               	retlw	0
   433  10C8                     STR_5:	
   434  10C8  344D               	retlw	77	;'M'
   435  10C9  3449               	retlw	73	;'I'
   436  10CA  3443               	retlw	67	;'C'
   437  10CB  3452               	retlw	82	;'R'
   438  10CC  344F               	retlw	79	;'O'
   439  10CD  3400               	retlw	0
   440  10CE                     STR_6:	
   441  10CE  3425               	retlw	37	;'%'
   442  10CF  342E               	retlw	46	;'.'
   443  10D0  3436               	retlw	54	;'6'
   444  10D1  3466               	retlw	102	;'f'
   445  10D2  3456               	retlw	86	;'V'
   446  10D3  3400               	retlw	0
   447                           
   448                           ; #config settings
   449  0000                     
   450                           	psect	cinit
   451  07FC                     start_initialization:	
   452  07FC                     __initialization:	
   453  07FC                     end_of_initialization:	
   454                           ;End of C runtime variable initialization code
   455                           
   456  07FC                     __end_of__initialization:	
   457  07FC  0183               	clrf	3
   458  07FD  120A  158A  288C   	ljmp	_main	;jump to C main() function
   459                           
   460                           	psect	cstackBANK1
   461  00A0                     __pcstackBANK1:	
   462  00A0                     ?_sprintf:	
   463  00A0                     sprintf@f:	
   464                           ; 2 bytes @ 0x0
   465                           
   466                           
   467                           ; 1 bytes @ 0x0
   468  00A0                     	ds	5
   469  00A5                     ??_sprintf:	
   470                           
   471                           ; 1 bytes @ 0x5
   472  00A5                     	ds	5
   473  00AA                     _sprintf$876:	
   474                           
   475                           ; 4 bytes @ 0xA
   476  00AA                     	ds	4
   477  00AE                     sprintf@ap:	
   478                           
   479                           ; 1 bytes @ 0xE
   480  00AE                     	ds	1
   481  00AF                     sprintf@flag:	
   482                           
   483                           ; 2 bytes @ 0xF
   484  00AF                     	ds	2
   485  00B1                     sprintf@val:	
   486                           
   487                           ; 4 bytes @ 0x11
   488  00B1                     	ds	4
   489  00B5                     sprintf@eexp:	
   490                           
   491                           ; 2 bytes @ 0x15
   492  00B5                     	ds	2
   493  00B7                     sprintf@tmpval:	
   494                           
   495                           ; 4 bytes @ 0x17
   496  00B7                     	ds	4
   497  00BB                     sprintf@sp:	
   498                           
   499                           ; 1 bytes @ 0x1B
   500  00BB                     	ds	1
   501  00BC                     sprintf@prec:	
   502                           
   503                           ; 2 bytes @ 0x1C
   504  00BC                     	ds	2
   505  00BE                     sprintf@fval:	
   506                           
   507                           ; 4 bytes @ 0x1E
   508  00BE                     	ds	4
   509  00C2                     sprintf@c:	
   510                           
   511                           ; 1 bytes @ 0x22
   512  00C2                     	ds	1
   513  00C3                     ??_main:	
   514                           
   515                           ; 1 bytes @ 0x23
   516  00C3                     	ds	3
   517  00C6                     main@mensaje:	
   518                           
   519                           ; 16 bytes @ 0x26
   520  00C6                     	ds	16
   521  00D6                     main@volt:	
   522                           
   523                           ; 4 bytes @ 0x36
   524  00D6                     	ds	4
   525                           
   526                           	psect	cstackCOMMON
   527  0070                     __pcstackCOMMON:	
   528  0070                     ?_isdigit:	
   529  0070                     ?___fleq:	
   530                           ; 1 bit 
   531                           
   532  0070                     ?___flge:	
   533                           ; 1 bit 
   534                           
   535  0070                     ??_isdigit:	
   536                           ; 1 bit 
   537                           
   538  0070                     ?_lcdPort:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ??_lcdPort:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_lcdCmd:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_lcdClear:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_lcdInit:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_lcdWriteChar:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_adcInit:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ??_adcInit:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_main:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?__Umul8_16:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_adcRead:	
   569                           ; 2 bytes @ 0x0
   570                           
   571  0070                     ?___wmul:	
   572                           ; 2 bytes @ 0x0
   573                           
   574  0070                     ?___awmod:	
   575                           ; 2 bytes @ 0x0
   576                           
   577  0070                     ?___lwmod:	
   578                           ; 2 bytes @ 0x0
   579                           
   580  0070                     ?__tdiv_to_l_:	
   581                           ; 2 bytes @ 0x0
   582                           
   583  0070                     ?__div_to_l_:	
   584                           ; 4 bytes @ 0x0
   585                           
   586  0070                     ?___lldiv:	
   587                           ; 4 bytes @ 0x0
   588                           
   589  0070                     ?___flneg:	
   590                           ; 4 bytes @ 0x0
   591                           
   592  0070                     ?___llmod:	
   593                           ; 4 bytes @ 0x0
   594                           
   595  0070                     lcdPort@a:	
   596                           ; 4 bytes @ 0x0
   597                           
   598  0070                     _isdigit$684:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     __Umul8_16@multiplicand:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     adcRead@adcChannel:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ___wmul@multiplier:	
   608                           ; 2 bytes @ 0x0
   609                           
   610  0070                     ___awmod@divisor:	
   611                           ; 2 bytes @ 0x0
   612                           
   613  0070                     ___lwmod@divisor:	
   614                           ; 2 bytes @ 0x0
   615                           
   616  0070                     ___lldiv@divisor:	
   617                           ; 2 bytes @ 0x0
   618                           
   619  0070                     __div_to_l_@f1:	
   620                           ; 4 bytes @ 0x0
   621                           
   622  0070                     ___fleq@ff1:	
   623                           ; 4 bytes @ 0x0
   624                           
   625  0070                     ___flge@ff1:	
   626                           ; 4 bytes @ 0x0
   627                           
   628  0070                     ___flneg@f1:	
   629                           ; 4 bytes @ 0x0
   630                           
   631  0070                     __tdiv_to_l_@f1:	
   632                           ; 4 bytes @ 0x0
   633                           
   634  0070                     ___llmod@divisor:	
   635                           ; 4 bytes @ 0x0
   636                           
   637                           
   638                           ; 4 bytes @ 0x0
   639  0070                     	ds	1
   640  0071                     ??_lcdCmd:	
   641  0071                     ??_lcdWriteChar:	
   642                           ; 1 bytes @ 0x1
   643                           
   644  0071                     isdigit@c:	
   645                           ; 1 bytes @ 0x1
   646                           
   647                           
   648                           ; 1 bytes @ 0x1
   649  0071                     	ds	1
   650  0072                     ??__Umul8_16:	
   651  0072                     ??_adcRead:	
   652                           ; 1 bytes @ 0x2
   653                           
   654  0072                     lcdWriteChar@temp:	
   655                           ; 1 bytes @ 0x2
   656                           
   657  0072                     ___wmul@multiplicand:	
   658                           ; 1 bytes @ 0x2
   659                           
   660  0072                     ___awmod@dividend:	
   661                           ; 2 bytes @ 0x2
   662                           
   663  0072                     ___lwmod@dividend:	
   664                           ; 2 bytes @ 0x2
   665                           
   666                           
   667                           ; 2 bytes @ 0x2
   668  0072                     	ds	1
   669  0073                     lcdCmd@a:	
   670  0073                     lcdWriteChar@y:	
   671                           ; 1 bytes @ 0x3
   672                           
   673                           
   674                           ; 1 bytes @ 0x3
   675  0073                     	ds	1
   676  0074                     ??_lcdClear:	
   677  0074                     ?_lcdSetCursor:	
   678                           ; 1 bytes @ 0x4
   679                           
   680  0074                     ??_lcdInit:	
   681                           ; 1 bytes @ 0x4
   682                           
   683  0074                     ??___wmul:	
   684                           ; 1 bytes @ 0x4
   685                           
   686  0074                     ??___awmod:	
   687                           ; 1 bytes @ 0x4
   688                           
   689  0074                     ??___flneg:	
   690                           ; 1 bytes @ 0x4
   691                           
   692  0074                     ??___lwmod:	
   693                           ; 1 bytes @ 0x4
   694                           
   695  0074                     ?___xxtofl:	
   696                           ; 1 bytes @ 0x4
   697                           
   698  0074                     lcdSetCursor@x:	
   699                           ; 4 bytes @ 0x4
   700                           
   701  0074                     lcdWriteChar@a:	
   702                           ; 1 bytes @ 0x4
   703                           
   704  0074                     ___wmul@product:	
   705                           ; 1 bytes @ 0x4
   706                           
   707  0074                     __Umul8_16@product:	
   708                           ; 2 bytes @ 0x4
   709                           
   710  0074                     ___lldiv@dividend:	
   711                           ; 2 bytes @ 0x4
   712                           
   713  0074                     __div_to_l_@f2:	
   714                           ; 4 bytes @ 0x4
   715                           
   716  0074                     ___fleq@ff2:	
   717                           ; 4 bytes @ 0x4
   718                           
   719  0074                     ___flge@ff2:	
   720                           ; 4 bytes @ 0x4
   721                           
   722  0074                     __tdiv_to_l_@f2:	
   723                           ; 4 bytes @ 0x4
   724                           
   725  0074                     ___llmod@dividend:	
   726                           ; 4 bytes @ 0x4
   727                           
   728  0074                     ___xxtofl@val:	
   729                           ; 4 bytes @ 0x4
   730                           
   731                           
   732                           ; 4 bytes @ 0x4
   733  0074                     	ds	1
   734  0075                     ??_lcdSetCursor:	
   735  0075                     ?_lcdPrint:	
   736                           ; 1 bytes @ 0x5
   737                           
   738  0075                     ___awmod@counter:	
   739                           ; 1 bytes @ 0x5
   740                           
   741  0075                     ___lwmod@counter:	
   742                           ; 1 bytes @ 0x5
   743                           
   744  0075                     lcdPrint@a:	
   745                           ; 1 bytes @ 0x5
   746                           
   747                           
   748                           ; 2 bytes @ 0x5
   749  0075                     	ds	1
   750  0076                     ?___lwdiv:	
   751  0076                     ___awmod@sign:	
   752                           ; 2 bytes @ 0x6
   753                           
   754  0076                     ___lwdiv@divisor:	
   755                           ; 1 bytes @ 0x6
   756                           
   757  0076                     __Umul8_16@word_mpld:	
   758                           ; 2 bytes @ 0x6
   759                           
   760                           
   761                           ; 2 bytes @ 0x6
   762  0076                     	ds	1
   763  0077                     ??_lcdPrint:	
   764  0077                     ?___awdiv:	
   765                           ; 1 bytes @ 0x7
   766                           
   767  0077                     lcdSetCursor@z:	
   768                           ; 2 bytes @ 0x7
   769                           
   770  0077                     ___awdiv@divisor:	
   771                           ; 1 bytes @ 0x7
   772                           
   773                           
   774                           ; 2 bytes @ 0x7
   775  0077                     	ds	1
   776  0078                     ??__tdiv_to_l_:	
   777  0078                     ??__div_to_l_:	
   778                           ; 1 bytes @ 0x8
   779                           
   780  0078                     ??___lldiv:	
   781                           ; 1 bytes @ 0x8
   782                           
   783  0078                     ??___fleq:	
   784                           ; 1 bytes @ 0x8
   785                           
   786  0078                     ??___flge:	
   787                           ; 1 bytes @ 0x8
   788                           
   789  0078                     ??___llmod:	
   790                           ; 1 bytes @ 0x8
   791                           
   792  0078                     ??___xxtofl:	
   793                           ; 1 bytes @ 0x8
   794                           
   795  0078                     lcdSetCursor@yy:	
   796                           ; 1 bytes @ 0x8
   797                           
   798  0078                     __Umul8_16@multiplier:	
   799                           ; 1 bytes @ 0x8
   800                           
   801  0078                     ___lwdiv@dividend:	
   802                           ; 1 bytes @ 0x8
   803                           
   804                           
   805                           ; 2 bytes @ 0x8
   806  0078                     	ds	1
   807  0079                     lcdSetCursor@row:	
   808  0079                     ___llmod@counter:	
   809                           ; 1 bytes @ 0x9
   810                           
   811  0079                     ___awdiv@dividend:	
   812                           ; 1 bytes @ 0x9
   813                           
   814  0079                     ___lldiv@quotient:	
   815                           ; 2 bytes @ 0x9
   816                           
   817                           
   818                           ; 4 bytes @ 0x9
   819  0079                     	ds	1
   820  007A                     ??___lwdiv:	
   821  007A                     lcdSetCursor@temp:	
   822                           ; 1 bytes @ 0xA
   823                           
   824  007A                     lcdPrint@i:	
   825                           ; 1 bytes @ 0xA
   826                           
   827                           
   828                           ; 2 bytes @ 0xA
   829  007A                     	ds	1
   830  007B                     ??___awdiv:	
   831  007B                     lcdSetCursor@y:	
   832                           ; 1 bytes @ 0xB
   833                           
   834  007B                     ___lwdiv@quotient:	
   835                           ; 1 bytes @ 0xB
   836                           
   837                           
   838                           ; 2 bytes @ 0xB
   839  007B                     	ds	2
   840  007D                     ___lldiv@counter:	
   841  007D                     ___lwdiv@counter:	
   842                           ; 1 bytes @ 0xD
   843                           
   844                           
   845                           ; 1 bytes @ 0xD
   846  007D                     	ds	1
   847  007E                     ??___flsub:	
   848                           
   849                           	psect	cstackBANK0
   850  0020                     __pcstackBANK0:	
   851                           ; 1 bytes @ 0xE
   852                           
   853  0020                     ___awdiv@counter:	
   854  0020                     ___xxtofl@sign:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0020                     __div_to_l_@quot:	
   858                           ; 1 bytes @ 0x0
   859                           
   860  0020                     __tdiv_to_l_@quot:	
   861                           ; 4 bytes @ 0x0
   862                           
   863                           
   864                           ; 4 bytes @ 0x0
   865  0020                     	ds	1
   866  0021                     ___awdiv@sign:	
   867  0021                     ___xxtofl@exp:	
   868                           ; 1 bytes @ 0x1
   869                           
   870                           
   871                           ; 1 bytes @ 0x1
   872  0021                     	ds	1
   873  0022                     ___awdiv@quotient:	
   874  0022                     ___xxtofl@arg:	
   875                           ; 2 bytes @ 0x2
   876                           
   877                           
   878                           ; 4 bytes @ 0x2
   879  0022                     	ds	2
   880  0024                     __div_to_l_@cntr:	
   881  0024                     __tdiv_to_l_@cntr:	
   882                           ; 1 bytes @ 0x4
   883                           
   884                           
   885                           ; 1 bytes @ 0x4
   886  0024                     	ds	1
   887  0025                     __div_to_l_@exp1:	
   888  0025                     __tdiv_to_l_@exp1:	
   889                           ; 1 bytes @ 0x5
   890                           
   891                           
   892                           ; 1 bytes @ 0x5
   893  0025                     	ds	1
   894  0026                     ?___flmul:	
   895  0026                     ___flmul@b:	
   896                           ; 4 bytes @ 0x6
   897                           
   898                           
   899                           ; 4 bytes @ 0x6
   900  0026                     	ds	4
   901  002A                     ___flmul@a:	
   902                           
   903                           ; 4 bytes @ 0xA
   904  002A                     	ds	4
   905  002E                     ??___flmul:	
   906                           
   907                           ; 1 bytes @ 0xE
   908  002E                     	ds	5
   909  0033                     ___flmul@sign:	
   910                           
   911                           ; 1 bytes @ 0x13
   912  0033                     	ds	1
   913  0034                     ___flmul@grs:	
   914                           
   915                           ; 4 bytes @ 0x14
   916  0034                     	ds	4
   917  0038                     ___flmul@aexp:	
   918                           
   919                           ; 1 bytes @ 0x18
   920  0038                     	ds	1
   921  0039                     ___flmul@bexp:	
   922                           
   923                           ; 1 bytes @ 0x19
   924  0039                     	ds	1
   925  003A                     ___flmul@prod:	
   926                           
   927                           ; 4 bytes @ 0x1A
   928  003A                     	ds	4
   929  003E                     ___flmul@temp:	
   930                           
   931                           ; 2 bytes @ 0x1E
   932  003E                     	ds	2
   933  0040                     ?_fround:	
   934  0040                     ?_scale:	
   935                           ; 4 bytes @ 0x20
   936                           
   937  0040                     ?___fldiv:	
   938                           ; 4 bytes @ 0x20
   939                           
   940  0040                     ___fldiv@a:	
   941                           ; 4 bytes @ 0x20
   942                           
   943                           
   944                           ; 4 bytes @ 0x20
   945  0040                     	ds	4
   946  0044                     ??_fround:	
   947  0044                     ??_scale:	
   948                           ; 1 bytes @ 0x24
   949                           
   950  0044                     ___fldiv@b:	
   951                           ; 1 bytes @ 0x24
   952                           
   953                           
   954                           ; 4 bytes @ 0x24
   955  0044                     	ds	4
   956  0048                     ??___fldiv:	
   957                           
   958                           ; 1 bytes @ 0x28
   959  0048                     	ds	3
   960  004B                     _fround$874:	
   961                           
   962                           ; 4 bytes @ 0x2B
   963  004B                     	ds	2
   964  004D                     ___fldiv@rem:	
   965                           
   966                           ; 4 bytes @ 0x2D
   967  004D                     	ds	1
   968  004E                     _scale$875:	
   969                           
   970                           ; 4 bytes @ 0x2E
   971  004E                     	ds	1
   972  004F                     _fround$873:	
   973                           
   974                           ; 4 bytes @ 0x2F
   975  004F                     	ds	2
   976  0051                     ___fldiv@sign:	
   977                           
   978                           ; 1 bytes @ 0x31
   979  0051                     	ds	1
   980  0052                     scale@scl:	
   981  0052                     ___fldiv@new_exp:	
   982                           ; 1 bytes @ 0x32
   983                           
   984                           
   985                           ; 2 bytes @ 0x32
   986  0052                     	ds	1
   987  0053                     ?___fltol:	
   988  0053                     fround@prec:	
   989                           ; 4 bytes @ 0x33
   990                           
   991  0053                     ___fltol@f1:	
   992                           ; 1 bytes @ 0x33
   993                           
   994                           
   995                           ; 4 bytes @ 0x33
   996  0053                     	ds	1
   997  0054                     ?___fladd:	
   998  0054                     ___fladd@b:	
   999                           ; 4 bytes @ 0x34
  1000                           
  1001  0054                     ___fldiv@grs:	
  1002                           ; 4 bytes @ 0x34
  1003                           
  1004                           
  1005                           ; 4 bytes @ 0x34
  1006  0054                     	ds	3
  1007  0057                     ??___fltol:	
  1008                           
  1009                           ; 1 bytes @ 0x37
  1010  0057                     	ds	1
  1011  0058                     ___fldiv@bexp:	
  1012  0058                     ___fladd@a:	
  1013                           ; 1 bytes @ 0x38
  1014                           
  1015                           
  1016                           ; 4 bytes @ 0x38
  1017  0058                     	ds	1
  1018  0059                     ___fldiv@aexp:	
  1019                           
  1020                           ; 1 bytes @ 0x39
  1021  0059                     	ds	3
  1022  005C                     ??___fladd:	
  1023  005C                     ___fltol@sign1:	
  1024                           ; 1 bytes @ 0x3C
  1025                           
  1026                           
  1027                           ; 1 bytes @ 0x3C
  1028  005C                     	ds	1
  1029  005D                     ___fltol@exp1:	
  1030                           
  1031                           ; 1 bytes @ 0x3D
  1032  005D                     	ds	7
  1033  0064                     ___fladd@signs:	
  1034                           
  1035                           ; 1 bytes @ 0x44
  1036  0064                     	ds	1
  1037  0065                     ___fladd@aexp:	
  1038                           
  1039                           ; 1 bytes @ 0x45
  1040  0065                     	ds	1
  1041  0066                     ___fladd@bexp:	
  1042                           
  1043                           ; 1 bytes @ 0x46
  1044  0066                     	ds	1
  1045  0067                     ___fladd@grs:	
  1046                           
  1047                           ; 1 bytes @ 0x47
  1048  0067                     	ds	1
  1049  0068                     ?___flsub:	
  1050  0068                     ___flsub@a:	
  1051                           ; 4 bytes @ 0x48
  1052                           
  1053                           
  1054                           ; 4 bytes @ 0x48
  1055  0068                     	ds	4
  1056  006C                     ___flsub@b:	
  1057                           
  1058                           ; 4 bytes @ 0x4C
  1059  006C                     	ds	4
  1060                           
  1061                           	psect	maintext
  1062  088C                     __pmaintext:	
  1063 ;;
  1064 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1065 ;;
  1066 ;; *************** function _main *****************
  1067 ;; Defined at:
  1068 ;;		line 18 in file "main.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;		None
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;  mensaje        16   38[BANK1 ] unsigned char [16]
  1073 ;;  volt            4   54[BANK1 ] float 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1078 ;; Tracked objects:
  1079 ;;		On entry : B00/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1083 ;;      Params:         0       0       0       0       0
  1084 ;;      Locals:         0       0      20       0       0
  1085 ;;      Temps:          0       0       3       0       0
  1086 ;;      Totals:         0       0      23       0       0
  1087 ;;Total ram usage:       23 bytes
  1088 ;; Hardware stack levels required when called:    4
  1089 ;; This function calls:
  1090 ;;		___fldiv
  1091 ;;		___flmul
  1092 ;;		___xxtofl
  1093 ;;		_adcInit
  1094 ;;		_adcRead
  1095 ;;		_lcdClear
  1096 ;;		_lcdInit
  1097 ;;		_lcdPrint
  1098 ;;		_lcdSetCursor
  1099 ;;		_sprintf
  1100 ;; This function is called by:
  1101 ;;		Startup code after reset
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           
  1106                           ;psect for function _main
  1107  088C                     _main:	
  1108                           
  1109                           ;main.c: 19:     TRISA = 255;
  1110                           
  1111                           ;incstack = 0
  1112                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1113  088C  30FF               	movlw	255
  1114  088D  1683               	bsf	3,5	;RP0=1, select bank1
  1115  088E  1303               	bcf	3,6	;RP1=0, select bank1
  1116  088F  0085               	movwf	5	;volatile
  1117                           
  1118                           ;main.c: 20:     PORTA = 0;
  1119  0890  1283               	bcf	3,5	;RP0=0, select bank0
  1120  0891  1303               	bcf	3,6	;RP1=0, select bank0
  1121  0892  0185               	clrf	5	;volatile
  1122                           
  1123                           ;main.c: 21:     lcdInit();
  1124  0893  160A  118A  2142  120A  158A  	fcall	_lcdInit
  1125                           
  1126                           ;main.c: 22:     _delay((unsigned long)((10)*(4000000/4000.0)));
  1127  0898  300D               	movlw	13
  1128  0899  1683               	bsf	3,5	;RP0=1, select bank1
  1129  089A  1303               	bcf	3,6	;RP1=0, select bank1
  1130  089B  00C4               	movwf	(??_main^(0+128)+1)
  1131  089C  30FB               	movlw	251
  1132  089D  00C3               	movwf	??_main^(0+128)
  1133  089E                     u6017:	
  1134  089E  0BC3               	decfsz	??_main^(0+128),f
  1135  089F  289E               	goto	u6017
  1136  08A0  0BC4               	decfsz	(??_main^(0+128)+1),f
  1137  08A1  289E               	goto	u6017
  1138                           
  1139                           ;main.c: 23:     lcdClear();
  1140  08A2  160A  158A  24EE  120A  158A  	fcall	_lcdClear
  1141                           
  1142                           ;main.c: 25:     adcInit();
  1143  08A7  160A  118A  20D4  120A  158A  	fcall	_adcInit
  1144                           
  1145                           ;main.c: 26:     lcdSetCursor(1, 1);
  1146  08AC  01F4               	clrf	lcdSetCursor@x
  1147  08AD  0AF4               	incf	lcdSetCursor@x,f
  1148  08AE  3001               	movlw	1
  1149  08AF  160A  158A  2612  120A  158A  	fcall	_lcdSetCursor
  1150                           
  1151                           ;main.c: 27:     lcdPrint("Voltimetro");
  1152  08B4  309D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1153  08B5  00F5               	movwf	lcdPrint@a
  1154  08B6  3080               	movlw	128
  1155  08B7  00F6               	movwf	lcdPrint@a+1
  1156  08B8  160A  158A  2689  120A  158A  	fcall	_lcdPrint
  1157                           
  1158                           ;main.c: 28:     lcdSetCursor(2, 1);
  1159  08BD  01F4               	clrf	lcdSetCursor@x
  1160  08BE  0AF4               	incf	lcdSetCursor@x,f
  1161  08BF  3002               	movlw	2
  1162  08C0  160A  158A  2612  120A  158A  	fcall	_lcdSetCursor
  1163                           
  1164                           ;main.c: 29:     lcdPrint("Cargando...");
  1165  08C5  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1166  08C6  00F5               	movwf	lcdPrint@a
  1167  08C7  3080               	movlw	128
  1168  08C8  00F6               	movwf	lcdPrint@a+1
  1169  08C9  160A  158A  2689  120A  158A  	fcall	_lcdPrint
  1170                           
  1171                           ;main.c: 30:     _delay((unsigned long)((300)*(4000000/4000.0)));
  1172  08CE  3002               	movlw	2
  1173  08CF  1683               	bsf	3,5	;RP0=1, select bank1
  1174  08D0  1303               	bcf	3,6	;RP1=0, select bank1
  1175  08D1  00C5               	movwf	(??_main^(0+128)+2)
  1176  08D2  3086               	movlw	134
  1177  08D3  00C4               	movwf	(??_main^(0+128)+1)
  1178  08D4  3098               	movlw	152
  1179  08D5  00C3               	movwf	??_main^(0+128)
  1180  08D6                     u6027:	
  1181  08D6  0BC3               	decfsz	??_main^(0+128),f
  1182  08D7  28D6               	goto	u6027
  1183  08D8  0BC4               	decfsz	(??_main^(0+128)+1),f
  1184  08D9  28D6               	goto	u6027
  1185  08DA  0BC5               	decfsz	(??_main^(0+128)+2),f
  1186  08DB  28D6               	goto	u6027
  1187  08DC  0000               	nop
  1188                           
  1189                           ;main.c: 32:     lcdClear();
  1190  08DD  160A  158A  24EE  120A  158A  	fcall	_lcdClear
  1191                           
  1192                           ;main.c: 33:     lcdSetCursor(1, 1);
  1193  08E2  01F4               	clrf	lcdSetCursor@x
  1194  08E3  0AF4               	incf	lcdSetCursor@x,f
  1195  08E4  3001               	movlw	1
  1196  08E5  160A  158A  2612  120A  158A  	fcall	_lcdSetCursor
  1197                           
  1198                           ;main.c: 34:     lcdPrint("Voltaje");
  1199  08EA  30B1               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1200  08EB  00F5               	movwf	lcdPrint@a
  1201  08EC  3080               	movlw	128
  1202  08ED  00F6               	movwf	lcdPrint@a+1
  1203  08EE  160A  158A  2689  120A  158A  	fcall	_lcdPrint
  1204                           
  1205                           ;main.c: 36:     lcdSetCursor(3, 1);
  1206  08F3  01F4               	clrf	lcdSetCursor@x
  1207  08F4  0AF4               	incf	lcdSetCursor@x,f
  1208  08F5  3003               	movlw	3
  1209  08F6  160A  158A  2612  120A  158A  	fcall	_lcdSetCursor
  1210                           
  1211                           ;main.c: 37:     lcdPrint("CBTIS 85");
  1212  08FB  30A8               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1213  08FC  00F5               	movwf	lcdPrint@a
  1214  08FD  3080               	movlw	128
  1215  08FE  00F6               	movwf	lcdPrint@a+1
  1216  08FF  160A  158A  2689  120A  158A  	fcall	_lcdPrint
  1217                           
  1218                           ;main.c: 38:     lcdSetCursor(4, 1);
  1219  0904  01F4               	clrf	lcdSetCursor@x
  1220  0905  0AF4               	incf	lcdSetCursor@x,f
  1221  0906  3004               	movlw	4
  1222  0907  160A  158A  2612  120A  158A  	fcall	_lcdSetCursor
  1223                           
  1224                           ;main.c: 39:     lcdPrint("MICRO");
  1225  090C  30B9               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1226  090D  00F5               	movwf	lcdPrint@a
  1227  090E  3080               	movlw	128
  1228  090F  00F6               	movwf	lcdPrint@a+1
  1229  0910  160A  158A  2689  120A  158A  	fcall	_lcdPrint
  1230  0915                     l3561:	
  1231                           
  1232                           ;main.c: 42:         float volt = (5 * (float) adcRead(0)) / 1023;
  1233  0915  3044               	movlw	68
  1234  0916  1283               	bcf	3,5	;RP0=0, select bank0
  1235  0917  1303               	bcf	3,6	;RP1=0, select bank0
  1236  0918  00C3               	movwf	___fldiv@a+3
  1237  0919  307F               	movlw	127
  1238  091A  00C2               	movwf	___fldiv@a+2
  1239  091B  30C0               	movlw	192
  1240  091C  00C1               	movwf	___fldiv@a+1
  1241  091D  3000               	movlw	0
  1242  091E  00C0               	movwf	___fldiv@a
  1243  091F  3040               	movlw	64
  1244  0920  00A9               	movwf	___flmul@b+3
  1245  0921  30A0               	movlw	160
  1246  0922  00A8               	movwf	___flmul@b+2
  1247  0923  3000               	movlw	0
  1248  0924  00A7               	movwf	___flmul@b+1
  1249  0925  3000               	movlw	0
  1250  0926  00A6               	movwf	___flmul@b
  1251  0927  3000               	movlw	0
  1252  0928  00F0               	movwf	adcRead@adcChannel
  1253  0929  00F1               	movwf	adcRead@adcChannel+1
  1254  092A  160A  158A  2542  120A  158A  	fcall	_adcRead
  1255  092F  0870               	movf	?_adcRead,w
  1256  0930  00F4               	movwf	___xxtofl@val
  1257  0931  0871               	movf	?_adcRead+1,w
  1258  0932  00F5               	movwf	___xxtofl@val+1
  1259  0933  3000               	movlw	0
  1260  0934  1BF5               	btfsc	___xxtofl@val+1,7
  1261  0935  30FF               	movlw	255
  1262  0936  00F6               	movwf	___xxtofl@val+2
  1263  0937  00F7               	movwf	___xxtofl@val+3
  1264  0938  3001               	movlw	1
  1265  0939  160A  118A  2236  120A  158A  	fcall	___xxtofl
  1266  093E  0877               	movf	?___xxtofl+3,w
  1267  093F  1283               	bcf	3,5	;RP0=0, select bank0
  1268  0940  1303               	bcf	3,6	;RP1=0, select bank0
  1269  0941  00AD               	movwf	___flmul@a+3
  1270  0942  0876               	movf	?___xxtofl+2,w
  1271  0943  00AC               	movwf	___flmul@a+2
  1272  0944  0875               	movf	?___xxtofl+1,w
  1273  0945  00AB               	movwf	___flmul@a+1
  1274  0946  0874               	movf	?___xxtofl,w
  1275  0947  00AA               	movwf	___flmul@a
  1276  0948  120A  158A  21A2  120A  158A  	fcall	___flmul
  1277  094D  1283               	bcf	3,5	;RP0=0, select bank0
  1278  094E  1303               	bcf	3,6	;RP1=0, select bank0
  1279  094F  0829               	movf	?___flmul+3,w
  1280  0950  00C7               	movwf	___fldiv@b+3
  1281  0951  0828               	movf	?___flmul+2,w
  1282  0952  00C6               	movwf	___fldiv@b+2
  1283  0953  0827               	movf	?___flmul+1,w
  1284  0954  00C5               	movwf	___fldiv@b+1
  1285  0955  0826               	movf	?___flmul,w
  1286  0956  00C4               	movwf	___fldiv@b
  1287  0957  160A  118A  242E  120A  158A  	fcall	___fldiv
  1288  095C  1283               	bcf	3,5	;RP0=0, select bank0
  1289  095D  1303               	bcf	3,6	;RP1=0, select bank0
  1290  095E  0843               	movf	?___fldiv+3,w
  1291  095F  1683               	bsf	3,5	;RP0=1, select bank1
  1292  0960  1303               	bcf	3,6	;RP1=0, select bank1
  1293  0961  00D9               	movwf	(main@volt+3)^(0+128)
  1294  0962  1283               	bcf	3,5	;RP0=0, select bank0
  1295  0963  1303               	bcf	3,6	;RP1=0, select bank0
  1296  0964  0842               	movf	?___fldiv+2,w
  1297  0965  1683               	bsf	3,5	;RP0=1, select bank1
  1298  0966  1303               	bcf	3,6	;RP1=0, select bank1
  1299  0967  00D8               	movwf	(main@volt+2)^(0+128)
  1300  0968  1283               	bcf	3,5	;RP0=0, select bank0
  1301  0969  1303               	bcf	3,6	;RP1=0, select bank0
  1302  096A  0841               	movf	?___fldiv+1,w
  1303  096B  1683               	bsf	3,5	;RP0=1, select bank1
  1304  096C  1303               	bcf	3,6	;RP1=0, select bank1
  1305  096D  00D7               	movwf	(main@volt+1)^(0+128)
  1306  096E  1283               	bcf	3,5	;RP0=0, select bank0
  1307  096F  1303               	bcf	3,6	;RP1=0, select bank0
  1308  0970  0840               	movf	?___fldiv,w
  1309  0971  1683               	bsf	3,5	;RP0=1, select bank1
  1310  0972  1303               	bcf	3,6	;RP1=0, select bank1
  1311  0973  00D6               	movwf	main@volt^(0+128)
  1312                           
  1313                           ;main.c: 43:         char mensaje[16];;main.c: 44:         sprintf(mensaje, "%.6fV", vol
      +                          t);
  1314  0974  30BF               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1315  0975  00C3               	movwf	??_main^(0+128)
  1316  0976  0843               	movf	??_main^(0+128),w
  1317  0977  00A0               	movwf	sprintf@f^(0+128)
  1318  0978  0859               	movf	(main@volt+3)^(0+128),w
  1319  0979  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1320  097A  0858               	movf	(main@volt+2)^(0+128),w
  1321  097B  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1322  097C  0857               	movf	(main@volt+1)^(0+128),w
  1323  097D  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1324  097E  0856               	movf	main@volt^(0+128),w
  1325  097F  00A1               	movwf	(?_sprintf^(0+128)+1)
  1326  0980  30C6               	movlw	(low (main@mensaje| 0))& (0+255)
  1327  0981  120A  118A  2205  120A  158A  	fcall	_sprintf
  1328                           
  1329                           ;main.c: 45:         lcdSetCursor(2,1);
  1330  0986  01F4               	clrf	lcdSetCursor@x
  1331  0987  0AF4               	incf	lcdSetCursor@x,f
  1332  0988  3002               	movlw	2
  1333  0989  160A  158A  2612  120A  158A  	fcall	_lcdSetCursor
  1334                           
  1335                           ;main.c: 46:         lcdPrint(mensaje);
  1336  098E  30C6               	movlw	(low (main@mensaje| 0))& (0+255)
  1337  098F  00F5               	movwf	lcdPrint@a
  1338  0990  3000               	movlw	0
  1339  0991  00F6               	movwf	lcdPrint@a+1
  1340  0992  160A  158A  2689  120A  158A  	fcall	_lcdPrint
  1341                           
  1342                           ;main.c: 47:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1343  0997  300D               	movlw	13
  1344  0998  1683               	bsf	3,5	;RP0=1, select bank1
  1345  0999  1303               	bcf	3,6	;RP1=0, select bank1
  1346  099A  00C4               	movwf	(??_main^(0+128)+1)
  1347  099B  30FB               	movlw	251
  1348  099C  00C3               	movwf	??_main^(0+128)
  1349  099D                     u6037:	
  1350  099D  0BC3               	decfsz	??_main^(0+128),f
  1351  099E  299D               	goto	u6037
  1352  099F  0BC4               	decfsz	(??_main^(0+128)+1),f
  1353  09A0  299D               	goto	u6037
  1354                           
  1355                           ;main.c: 48:     }
  1356  09A1  2915               	goto	l3561
  1357  09A2                     __end_of_main:	
  1358                           
  1359                           	psect	text1
  1360  0205                     __ptext1:	
  1361 ;; *************** function _sprintf *****************
  1362 ;; Defined at:
  1363 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;  sp              1    wreg     PTR unsigned char 
  1366 ;;		 -> main@mensaje(16), 
  1367 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1368 ;;		 -> STR_6(6), 
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  1371 ;;		 -> main@mensaje(16), 
  1372 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  1373 ;;  tmpval          4   23[BANK1 ] struct .
  1374 ;;  val             4   17[BANK1 ] unsigned long 
  1375 ;;  prec            2   28[BANK1 ] int 
  1376 ;;  eexp            2   21[BANK1 ] int 
  1377 ;;  flag            2   15[BANK1 ] unsigned short 
  1378 ;;  cp              2    0        PTR const unsigned char 
  1379 ;;  len             2    0        unsigned int 
  1380 ;;  width           2    0        int 
  1381 ;;  c               1   34[BANK1 ] unsigned char 
  1382 ;;  ap              1   14[BANK1 ] PTR void [1]
  1383 ;;		 -> ?_sprintf(2), 
  1384 ;;  d               1    0        unsigned char 
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  2    0[BANK1 ] int 
  1387 ;; Registers used:
  1388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1394 ;;      Params:         0       0       5       0       0
  1395 ;;      Locals:         0       0      25       0       0
  1396 ;;      Temps:          0       0       5       0       0
  1397 ;;      Totals:         0       0      35       0       0
  1398 ;;Total ram usage:       35 bytes
  1399 ;; Hardware stack levels used:    1
  1400 ;; Hardware stack levels required when called:    3
  1401 ;; This function calls:
  1402 ;;		___awdiv
  1403 ;;		___fladd
  1404 ;;		___fleq
  1405 ;;		___flge
  1406 ;;		___flmul
  1407 ;;		___flneg
  1408 ;;		___flsub
  1409 ;;		___fltol
  1410 ;;		___lldiv
  1411 ;;		___llmod
  1412 ;;		___wmul
  1413 ;;		___xxtofl
  1414 ;;		__div_to_l_
  1415 ;;		__tdiv_to_l_
  1416 ;;		_fround
  1417 ;;		_isdigit
  1418 ;;		_scale
  1419 ;; This function is called by:
  1420 ;;		_main
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           
  1425                           ;psect for function _sprintf
  1426  0205                     _sprintf:	
  1427                           
  1428                           ;incstack = 0
  1429                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1430                           ;sprintf@sp stored from wreg
  1431  0205  1683               	bsf	3,5	;RP0=1, select bank1
  1432  0206  1303               	bcf	3,6	;RP1=0, select bank1
  1433  0207  00BB               	movwf	sprintf@sp^(0+128)
  1434                           
  1435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 509:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c90\common\doprnt.c: 512:  int prec;
  1436  0208  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1437  0209  00A5               	movwf	??_sprintf^(0+128)
  1438  020A  0825               	movf	??_sprintf^(0+128),w
  1439  020B  00AE               	movwf	sprintf@ap^(0+128)
  1440  020C                     l3371:	
  1441                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1442                           
  1443                           
  1444                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1445  020C  3001               	movlw	1
  1446  020D  07A0               	addwf	sprintf@f^(0+128),f
  1447  020E  30FF               	movlw	-1
  1448  020F  0720               	addwf	sprintf@f^(0+128),w
  1449  0210  0084               	movwf	4
  1450  0211  160A  118A  200A  120A  118A  	fcall	stringdir
  1451  0216  00A5               	movwf	??_sprintf^(0+128)
  1452  0217  0825               	movf	??_sprintf^(0+128),w
  1453  0218  00C2               	movwf	sprintf@c^(0+128)
  1454  0219  0842               	movf	sprintf@c^(0+128),w
  1455  021A  1903               	btfsc	3,2
  1456  021B  2FF7               	goto	l3373
  1457                           
  1458                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  1459  021C  3025               	movlw	37
  1460  021D  0642               	xorwf	sprintf@c^(0+128),w
  1461  021E  1903               	btfsc	3,2
  1462  021F  2A22               	goto	l3187
  1463                           
  1464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  1465  0220  0842               	movf	sprintf@c^(0+128),w
  1466  0221  2FEC               	goto	L6
  1467  0222                     l3187:	
  1468                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  1469                           
  1470                           
  1471                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  1472  0222  01AF               	clrf	sprintf@flag^(0+128)
  1473  0223  01B0               	clrf	(sprintf@flag+1)^(0+128)
  1474                           
  1475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 623:   if(*
      +                          f == '.') {
  1476  0224  0820               	movf	sprintf@f^(0+128),w
  1477  0225  0084               	movwf	4
  1478  0226  160A  118A  200A  120A  118A  	fcall	stringdir
  1479  022B  3A2E               	xorlw	46
  1480  022C  1D03               	skipz
  1481  022D  2A6F               	goto	l3203
  1482                           
  1483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 624:    fla
      +                          g |= 0x4000;
  1484  022E  1730               	bsf	(sprintf@flag^(0+128)+1),6
  1485                           
  1486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 625:    f++
      +                          ;
  1487  022F  3001               	movlw	1
  1488  0230  00A5               	movwf	??_sprintf^(0+128)
  1489  0231  0825               	movf	??_sprintf^(0+128),w
  1490  0232  07A0               	addwf	sprintf@f^(0+128),f
  1491                           
  1492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 639:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 640:     prec
      +                           = 0;
  1493  0233  01BC               	clrf	sprintf@prec^(0+128)
  1494  0234  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1495  0235                     l3201:	
  1496                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     wh
      +                          ile(isdigit((unsigned)*f))
  1497                           
  1498                           
  1499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     wh
      +                          ile(isdigit((unsigned)*f))
  1500  0235  0820               	movf	sprintf@f^(0+128),w
  1501  0236  0084               	movwf	4
  1502  0237  160A  118A  200A  120A  118A  	fcall	stringdir
  1503  023C  160A  158A  24F9  120A  118A  	fcall	_isdigit
  1504  0241  1C03               	btfss	3,0
  1505  0242  2A75               	goto	l3209
  1506                           
  1507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 642:      p
      +                          rec = prec*10 + *f++ - '0';
  1508  0243  1683               	bsf	3,5	;RP0=1, select bank1
  1509  0244  1303               	bcf	3,6	;RP1=0, select bank1
  1510  0245  083D               	movf	(sprintf@prec+1)^(0+128),w
  1511  0246  00F1               	movwf	___wmul@multiplier+1
  1512  0247  083C               	movf	sprintf@prec^(0+128),w
  1513  0248  00F0               	movwf	___wmul@multiplier
  1514  0249  300A               	movlw	10
  1515  024A  00F2               	movwf	___wmul@multiplicand
  1516  024B  3000               	movlw	0
  1517  024C  00F3               	movwf	___wmul@multiplicand+1
  1518  024D  160A  158A  2521  120A  118A  	fcall	___wmul
  1519  0252  1683               	bsf	3,5	;RP0=1, select bank1
  1520  0253  1303               	bcf	3,6	;RP1=0, select bank1
  1521  0254  0820               	movf	sprintf@f^(0+128),w
  1522  0255  0084               	movwf	4
  1523  0256  160A  118A  200A  120A  118A  	fcall	stringdir
  1524  025B  0770               	addwf	?___wmul,w
  1525  025C  00A5               	movwf	??_sprintf^(0+128)
  1526  025D  3000               	movlw	0
  1527  025E  1803               	skipnc
  1528  025F  3001               	movlw	1
  1529  0260  0771               	addwf	?___wmul+1,w
  1530  0261  00A6               	movwf	(??_sprintf+1)^(0+128)
  1531  0262  0825               	movf	??_sprintf^(0+128),w
  1532  0263  3ED0               	addlw	208
  1533  0264  00BC               	movwf	sprintf@prec^(0+128)
  1534  0265  0826               	movf	(??_sprintf+1)^(0+128),w
  1535  0266  1803               	skipnc
  1536  0267  3E01               	addlw	1
  1537  0268  3EFF               	addlw	255
  1538  0269  00BD               	movwf	(sprintf@prec+1)^(0+128)
  1539  026A  3001               	movlw	1
  1540  026B  00A5               	movwf	??_sprintf^(0+128)
  1541  026C  0825               	movf	??_sprintf^(0+128),w
  1542  026D  07A0               	addwf	sprintf@f^(0+128),f
  1543  026E  2A35               	goto	l3201
  1544  026F                     l3203:	
  1545                           
  1546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 645:    pre
      +                          c = 0;
  1547  026F  01BC               	clrf	sprintf@prec^(0+128)
  1548  0270  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1549                           
  1550                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 647:    fla
      +                          g |= 0x1000;
  1551  0271  1630               	bsf	(sprintf@flag^(0+128)+1),4
  1552  0272  2A75               	goto	l3209
  1553  0273                     l213:	
  1554                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 681:   case
      +                           'f':
  1555                           
  1556                           
  1557                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 682:    fla
      +                          g |= 0x400;
  1558  0273  1530               	bsf	(sprintf@flag^(0+128)+1),2
  1559                           
  1560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 683:    bre
      +                          ak;
  1561  0274  2A91               	goto	l3211
  1562  0275                     l3209:	
  1563  0275  3001               	movlw	1
  1564  0276  1683               	bsf	3,5	;RP0=1, select bank1
  1565  0277  1303               	bcf	3,6	;RP1=0, select bank1
  1566  0278  07A0               	addwf	sprintf@f^(0+128),f
  1567  0279  30FF               	movlw	-1
  1568  027A  0720               	addwf	sprintf@f^(0+128),w
  1569  027B  0084               	movwf	4
  1570  027C  160A  118A  200A  120A  118A  	fcall	stringdir
  1571  0281  00C2               	movwf	sprintf@c^(0+128)
  1572  0282  00A5               	movwf	??_sprintf^(0+128)
  1573  0283  01A6               	clrf	(??_sprintf^(0+128)+1)
  1574                           
  1575                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1576                           ; Switch size 1, requested type "simple"
  1577                           ; Number of cases is 1, Range of values is 0 to 0
  1578                           ; switch strategies available:
  1579                           ; Name         Instructions Cycles
  1580                           ; simple_byte            4     3 (average)
  1581                           ; direct_byte           11     8 (fixed)
  1582                           ; jumptable            260     6 (fixed)
  1583                           ;	Chosen strategy is simple_byte
  1584  0284  0826               	movf	(??_sprintf+1)^(0+128),w
  1585  0285  3A00               	xorlw	0	; case 0
  1586  0286  1903               	skipnz
  1587  0287  2A89               	goto	l3601
  1588  0288  2A0C               	goto	l3371
  1589  0289                     l3601:	
  1590                           
  1591                           ; Switch size 1, requested type "simple"
  1592                           ; Number of cases is 2, Range of values is 0 to 102
  1593                           ; switch strategies available:
  1594                           ; Name         Instructions Cycles
  1595                           ; simple_byte            7     4 (average)
  1596                           ; jumptable            260     6 (fixed)
  1597                           ;	Chosen strategy is simple_byte
  1598  0289  0825               	movf	??_sprintf^(0+128),w
  1599  028A  3A00               	xorlw	0	; case 0
  1600  028B  1903               	skipnz
  1601  028C  2FF7               	goto	l3373
  1602  028D  3A66               	xorlw	102	; case 102
  1603  028E  1903               	skipnz
  1604  028F  2A73               	goto	l213
  1605  0290  2A0C               	goto	l3371
  1606  0291                     l3211:	
  1607                           
  1608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 844:   if(f
      +                          lag & (0x700)) {
  1609  0291  3000               	movlw	0
  1610  0292  052F               	andwf	sprintf@flag^(0+128),w
  1611  0293  00A5               	movwf	??_sprintf^(0+128)
  1612  0294  3007               	movlw	7
  1613  0295  0530               	andwf	(sprintf@flag+1)^(0+128),w
  1614  0296  00A6               	movwf	(??_sprintf+1)^(0+128)
  1615  0297  0825               	movf	??_sprintf^(0+128),w
  1616  0298  0426               	iorwf	(??_sprintf^(0+128)+1),w
  1617  0299  1903               	btfsc	3,2
  1618  029A  2FB9               	goto	l3353
  1619                           
  1620                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 846:    if(
      +                          flag & 0x1000)
  1621  029B  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  1622  029C  2AA1               	goto	l3217
  1623                           
  1624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 848:     pr
      +                          ec = 6;
  1625  029D  3006               	movlw	6
  1626  029E  00BC               	movwf	sprintf@prec^(0+128)
  1627  029F  3000               	movlw	0
  1628  02A0  00BD               	movwf	(sprintf@prec^(0+128)+1)
  1629  02A1                     l3217:	
  1630                           
  1631                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 849:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  1632  02A1  082E               	movf	sprintf@ap^(0+128),w
  1633  02A2  0084               	movwf	4
  1634  02A3  1383               	bcf	3,7	;select IRP bank0
  1635  02A4  0800               	movf	0,w
  1636  02A5  00BE               	movwf	sprintf@fval^(0+128)
  1637  02A6  0A84               	incf	4,f
  1638  02A7  0800               	movf	0,w
  1639  02A8  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1640  02A9  0A84               	incf	4,f
  1641  02AA  0800               	movf	0,w
  1642  02AB  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1643  02AC  0A84               	incf	4,f
  1644  02AD  0800               	movf	0,w
  1645  02AE  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1646  02AF  3004               	movlw	4
  1647  02B0  00A5               	movwf	??_sprintf^(0+128)
  1648  02B1  0825               	movf	??_sprintf^(0+128),w
  1649  02B2  07AE               	addwf	sprintf@ap^(0+128),f
  1650                           
  1651                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 850:    if(
      +                          fval < 0.0) {
  1652  02B3  0841               	movf	(sprintf@fval+3)^(0+128),w
  1653  02B4  00F3               	movwf	___flge@ff1+3
  1654  02B5  0840               	movf	(sprintf@fval+2)^(0+128),w
  1655  02B6  00F2               	movwf	___flge@ff1+2
  1656  02B7  083F               	movf	(sprintf@fval+1)^(0+128),w
  1657  02B8  00F1               	movwf	___flge@ff1+1
  1658  02B9  083E               	movf	sprintf@fval^(0+128),w
  1659  02BA  00F0               	movwf	___flge@ff1
  1660  02BB  3000               	movlw	0
  1661  02BC  00F7               	movwf	___flge@ff2+3
  1662  02BD  3000               	movlw	0
  1663  02BE  00F6               	movwf	___flge@ff2+2
  1664  02BF  3000               	movlw	0
  1665  02C0  00F5               	movwf	___flge@ff2+1
  1666  02C1  3000               	movlw	0
  1667  02C2  00F4               	movwf	___flge@ff2
  1668  02C3  160A  118A  21A3  120A  118A  	fcall	___flge
  1669  02C8  1803               	btfsc	3,0
  1670  02C9  2AE7               	goto	l3227
  1671                           
  1672                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 851:     fv
      +                          al = -fval;
  1673  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  1674  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  1675  02CC  0841               	movf	(sprintf@fval+3)^(0+128),w
  1676  02CD  00F3               	movwf	___flneg@f1+3
  1677  02CE  0840               	movf	(sprintf@fval+2)^(0+128),w
  1678  02CF  00F2               	movwf	___flneg@f1+2
  1679  02D0  083F               	movf	(sprintf@fval+1)^(0+128),w
  1680  02D1  00F1               	movwf	___flneg@f1+1
  1681  02D2  083E               	movf	sprintf@fval^(0+128),w
  1682  02D3  00F0               	movwf	___flneg@f1
  1683  02D4  160A  158A  24E5  120A  118A  	fcall	___flneg
  1684  02D9  0873               	movf	?___flneg+3,w
  1685  02DA  1683               	bsf	3,5	;RP0=1, select bank1
  1686  02DB  1303               	bcf	3,6	;RP1=0, select bank1
  1687  02DC  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1688  02DD  0872               	movf	?___flneg+2,w
  1689  02DE  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1690  02DF  0871               	movf	?___flneg+1,w
  1691  02E0  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1692  02E1  0870               	movf	?___flneg,w
  1693  02E2  00BE               	movwf	sprintf@fval^(0+128)
  1694                           
  1695                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 852:     fl
      +                          ag |= 0x03;
  1696  02E3  3003               	movlw	3
  1697  02E4  04AF               	iorwf	sprintf@flag^(0+128),f
  1698  02E5  3000               	movlw	0
  1699  02E6  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  1700  02E7                     l3227:	
  1701                           
  1702                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 854:    eex
      +                          p = 0;
  1703  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  1704  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  1705  02E9  01B5               	clrf	sprintf@eexp^(0+128)
  1706  02EA  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  1707                           
  1708                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 855:    if(
      +                           fval!=0) {
  1709  02EB  0841               	movf	(sprintf@fval+3)^(0+128),w
  1710  02EC  00F3               	movwf	___fleq@ff1+3
  1711  02ED  0840               	movf	(sprintf@fval+2)^(0+128),w
  1712  02EE  00F2               	movwf	___fleq@ff1+2
  1713  02EF  083F               	movf	(sprintf@fval+1)^(0+128),w
  1714  02F0  00F1               	movwf	___fleq@ff1+1
  1715  02F1  083E               	movf	sprintf@fval^(0+128),w
  1716  02F2  00F0               	movwf	___fleq@ff1
  1717  02F3  3000               	movlw	0
  1718  02F4  00F7               	movwf	___fleq@ff2+3
  1719  02F5  3000               	movlw	0
  1720  02F6  00F6               	movwf	___fleq@ff2+2
  1721  02F7  3000               	movlw	0
  1722  02F8  00F5               	movwf	___fleq@ff2+1
  1723  02F9  3000               	movlw	0
  1724  02FA  00F4               	movwf	___fleq@ff2
  1725  02FB  160A  158A  26C6  120A  118A  	fcall	___fleq
  1726  0300  1803               	btfsc	3,0
  1727  0301  2BEB               	goto	l3255
  1728                           
  1729                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 856:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1730  0302  1003               	clrc
  1731  0303  1683               	bsf	3,5	;RP0=1, select bank1
  1732  0304  1303               	bcf	3,6	;RP1=0, select bank1
  1733  0305  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  1734  0306  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  1735  0307  3E82               	addlw	130
  1736  0308  00B5               	movwf	sprintf@eexp^(0+128)
  1737  0309  30FF               	movlw	255
  1738  030A  1803               	skipnc
  1739  030B  3000               	movlw	0
  1740  030C  00B6               	movwf	(sprintf@eexp^(0+128)+1)
  1741                           
  1742                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 857:     ee
      +                          xp--;
  1743  030D  30FF               	movlw	255
  1744  030E  07B5               	addwf	sprintf@eexp^(0+128),f
  1745  030F  1803               	skipnc
  1746  0310  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1747  0311  30FF               	movlw	255
  1748  0312  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  1749                           
  1750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 858:     ee
      +                          xp *= 3;
  1751  0313  3003               	movlw	3
  1752  0314  00F0               	movwf	___wmul@multiplier
  1753  0315  3000               	movlw	0
  1754  0316  00F1               	movwf	___wmul@multiplier+1
  1755  0317  0836               	movf	(sprintf@eexp+1)^(0+128),w
  1756  0318  00F3               	movwf	___wmul@multiplicand+1
  1757  0319  0835               	movf	sprintf@eexp^(0+128),w
  1758  031A  00F2               	movwf	___wmul@multiplicand
  1759  031B  160A  158A  2521  120A  118A  	fcall	___wmul
  1760  0320  0871               	movf	?___wmul+1,w
  1761  0321  1683               	bsf	3,5	;RP0=1, select bank1
  1762  0322  1303               	bcf	3,6	;RP1=0, select bank1
  1763  0323  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  1764  0324  0870               	movf	?___wmul,w
  1765  0325  00B5               	movwf	sprintf@eexp^(0+128)
  1766                           
  1767                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 859:     ee
      +                          xp /= 10;
  1768  0326  300A               	movlw	10
  1769  0327  00F7               	movwf	___awdiv@divisor
  1770  0328  3000               	movlw	0
  1771  0329  00F8               	movwf	___awdiv@divisor+1
  1772  032A  0836               	movf	(sprintf@eexp+1)^(0+128),w
  1773  032B  00FA               	movwf	___awdiv@dividend+1
  1774  032C  0835               	movf	sprintf@eexp^(0+128),w
  1775  032D  00F9               	movwf	___awdiv@dividend
  1776  032E  160A  158A  27A5  120A  118A  	fcall	___awdiv
  1777  0333  0878               	movf	?___awdiv+1,w
  1778  0334  1683               	bsf	3,5	;RP0=1, select bank1
  1779  0335  1303               	bcf	3,6	;RP1=0, select bank1
  1780  0336  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  1781  0337  0877               	movf	?___awdiv,w
  1782  0338  00B5               	movwf	sprintf@eexp^(0+128)
  1783                           
  1784                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 860:     if
      +                          (eexp < 0)
  1785  0339  1FB6               	btfss	(sprintf@eexp+1)^(0+128),7
  1786  033A  2B41               	goto	l3243
  1787                           
  1788                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 861:      e
      +                          exp--;
  1789  033B  30FF               	movlw	255
  1790  033C  07B5               	addwf	sprintf@eexp^(0+128),f
  1791  033D  1803               	skipnc
  1792  033E  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1793  033F  30FF               	movlw	255
  1794  0340  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  1795  0341                     l3243:	
  1796                           
  1797                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 865:     tm
      +                          pval.integ = scale(-eexp);
  1798  0341  0335               	decf	sprintf@eexp^(0+128),w
  1799  0342  3AFF               	xorlw	255
  1800  0343  120A  158A  24B7  120A  118A  	fcall	_scale
  1801  0348  1283               	bcf	3,5	;RP0=0, select bank0
  1802  0349  1303               	bcf	3,6	;RP1=0, select bank0
  1803  034A  0843               	movf	?_scale+3,w
  1804  034B  1683               	bsf	3,5	;RP0=1, select bank1
  1805  034C  1303               	bcf	3,6	;RP1=0, select bank1
  1806  034D  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  1807  034E  1283               	bcf	3,5	;RP0=0, select bank0
  1808  034F  1303               	bcf	3,6	;RP1=0, select bank0
  1809  0350  0842               	movf	?_scale+2,w
  1810  0351  1683               	bsf	3,5	;RP0=1, select bank1
  1811  0352  1303               	bcf	3,6	;RP1=0, select bank1
  1812  0353  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  1813  0354  1283               	bcf	3,5	;RP0=0, select bank0
  1814  0355  1303               	bcf	3,6	;RP1=0, select bank0
  1815  0356  0841               	movf	?_scale+1,w
  1816  0357  1683               	bsf	3,5	;RP0=1, select bank1
  1817  0358  1303               	bcf	3,6	;RP1=0, select bank1
  1818  0359  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  1819  035A  1283               	bcf	3,5	;RP0=0, select bank0
  1820  035B  1303               	bcf	3,6	;RP1=0, select bank0
  1821  035C  0840               	movf	?_scale,w
  1822  035D  1683               	bsf	3,5	;RP0=1, select bank1
  1823  035E  1303               	bcf	3,6	;RP1=0, select bank1
  1824  035F  00B7               	movwf	sprintf@tmpval^(0+128)
  1825                           
  1826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 866:     tm
      +                          pval.integ *= fval;
  1827  0360  0841               	movf	(sprintf@fval+3)^(0+128),w
  1828  0361  1283               	bcf	3,5	;RP0=0, select bank0
  1829  0362  1303               	bcf	3,6	;RP1=0, select bank0
  1830  0363  00A9               	movwf	___flmul@b+3
  1831  0364  1683               	bsf	3,5	;RP0=1, select bank1
  1832  0365  1303               	bcf	3,6	;RP1=0, select bank1
  1833  0366  0840               	movf	(sprintf@fval+2)^(0+128),w
  1834  0367  1283               	bcf	3,5	;RP0=0, select bank0
  1835  0368  1303               	bcf	3,6	;RP1=0, select bank0
  1836  0369  00A8               	movwf	___flmul@b+2
  1837  036A  1683               	bsf	3,5	;RP0=1, select bank1
  1838  036B  1303               	bcf	3,6	;RP1=0, select bank1
  1839  036C  083F               	movf	(sprintf@fval+1)^(0+128),w
  1840  036D  1283               	bcf	3,5	;RP0=0, select bank0
  1841  036E  1303               	bcf	3,6	;RP1=0, select bank0
  1842  036F  00A7               	movwf	___flmul@b+1
  1843  0370  1683               	bsf	3,5	;RP0=1, select bank1
  1844  0371  1303               	bcf	3,6	;RP1=0, select bank1
  1845  0372  083E               	movf	sprintf@fval^(0+128),w
  1846  0373  1283               	bcf	3,5	;RP0=0, select bank0
  1847  0374  1303               	bcf	3,6	;RP1=0, select bank0
  1848  0375  00A6               	movwf	___flmul@b
  1849  0376  1683               	bsf	3,5	;RP0=1, select bank1
  1850  0377  1303               	bcf	3,6	;RP1=0, select bank1
  1851  0378  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  1852  0379  1283               	bcf	3,5	;RP0=0, select bank0
  1853  037A  1303               	bcf	3,6	;RP1=0, select bank0
  1854  037B  00AD               	movwf	___flmul@a+3
  1855  037C  1683               	bsf	3,5	;RP0=1, select bank1
  1856  037D  1303               	bcf	3,6	;RP1=0, select bank1
  1857  037E  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  1858  037F  1283               	bcf	3,5	;RP0=0, select bank0
  1859  0380  1303               	bcf	3,6	;RP1=0, select bank0
  1860  0381  00AC               	movwf	___flmul@a+2
  1861  0382  1683               	bsf	3,5	;RP0=1, select bank1
  1862  0383  1303               	bcf	3,6	;RP1=0, select bank1
  1863  0384  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  1864  0385  1283               	bcf	3,5	;RP0=0, select bank0
  1865  0386  1303               	bcf	3,6	;RP1=0, select bank0
  1866  0387  00AB               	movwf	___flmul@a+1
  1867  0388  1683               	bsf	3,5	;RP0=1, select bank1
  1868  0389  1303               	bcf	3,6	;RP1=0, select bank1
  1869  038A  0837               	movf	sprintf@tmpval^(0+128),w
  1870  038B  1283               	bcf	3,5	;RP0=0, select bank0
  1871  038C  1303               	bcf	3,6	;RP1=0, select bank0
  1872  038D  00AA               	movwf	___flmul@a
  1873  038E  120A  158A  21A2  120A  118A  	fcall	___flmul
  1874  0393  1283               	bcf	3,5	;RP0=0, select bank0
  1875  0394  1303               	bcf	3,6	;RP1=0, select bank0
  1876  0395  0829               	movf	?___flmul+3,w
  1877  0396  1683               	bsf	3,5	;RP0=1, select bank1
  1878  0397  1303               	bcf	3,6	;RP1=0, select bank1
  1879  0398  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  1880  0399  1283               	bcf	3,5	;RP0=0, select bank0
  1881  039A  1303               	bcf	3,6	;RP1=0, select bank0
  1882  039B  0828               	movf	?___flmul+2,w
  1883  039C  1683               	bsf	3,5	;RP0=1, select bank1
  1884  039D  1303               	bcf	3,6	;RP1=0, select bank1
  1885  039E  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  1886  039F  1283               	bcf	3,5	;RP0=0, select bank0
  1887  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  1888  03A1  0827               	movf	?___flmul+1,w
  1889  03A2  1683               	bsf	3,5	;RP0=1, select bank1
  1890  03A3  1303               	bcf	3,6	;RP1=0, select bank1
  1891  03A4  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  1892  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  1893  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  1894  03A7  0826               	movf	?___flmul,w
  1895  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  1896  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  1897  03AA  00B7               	movwf	sprintf@tmpval^(0+128)
  1898                           
  1899                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (tmpval.integ < 1.0)
  1900  03AB  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  1901  03AC  00F3               	movwf	___flge@ff1+3
  1902  03AD  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  1903  03AE  00F2               	movwf	___flge@ff1+2
  1904  03AF  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  1905  03B0  00F1               	movwf	___flge@ff1+1
  1906  03B1  0837               	movf	sprintf@tmpval^(0+128),w
  1907  03B2  00F0               	movwf	___flge@ff1
  1908  03B3  303F               	movlw	63
  1909  03B4  00F7               	movwf	___flge@ff2+3
  1910  03B5  3080               	movlw	128
  1911  03B6  00F6               	movwf	___flge@ff2+2
  1912  03B7  3000               	movlw	0
  1913  03B8  00F5               	movwf	___flge@ff2+1
  1914  03B9  3000               	movlw	0
  1915  03BA  00F4               	movwf	___flge@ff2
  1916  03BB  160A  118A  21A3  120A  118A  	fcall	___flge
  1917  03C0  1803               	btfsc	3,0
  1918  03C1  2BCA               	goto	l3251
  1919                           
  1920                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  1921  03C2  30FF               	movlw	255
  1922  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  1923  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  1924  03C5  07B5               	addwf	sprintf@eexp^(0+128),f
  1925  03C6  1803               	skipnc
  1926  03C7  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1927  03C8  30FF               	movlw	255
  1928  03C9  2BEA               	goto	L1
  1929  03CA                     l3251:	
  1930  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  1931  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  1932  03CC  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  1933  03CD  00F3               	movwf	___flge@ff1+3
  1934  03CE  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  1935  03CF  00F2               	movwf	___flge@ff1+2
  1936  03D0  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  1937  03D1  00F1               	movwf	___flge@ff1+1
  1938  03D2  0837               	movf	sprintf@tmpval^(0+128),w
  1939  03D3  00F0               	movwf	___flge@ff1
  1940  03D4  3041               	movlw	65
  1941  03D5  00F7               	movwf	___flge@ff2+3
  1942  03D6  3020               	movlw	32
  1943  03D7  00F6               	movwf	___flge@ff2+2
  1944  03D8  3000               	movlw	0
  1945  03D9  00F5               	movwf	___flge@ff2+1
  1946  03DA  3000               	movlw	0
  1947  03DB  00F4               	movwf	___flge@ff2
  1948  03DC  160A  118A  21A3  120A  118A  	fcall	___flge
  1949  03E1  1C03               	btfss	3,0
  1950  03E2  2BEB               	goto	l3255
  1951                           
  1952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 870:      e
      +                          exp++;
  1953  03E3  3001               	movlw	1
  1954  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  1955  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  1956  03E6  07B5               	addwf	sprintf@eexp^(0+128),f
  1957  03E7  1803               	skipnc
  1958  03E8  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1959  03E9  3000               	movlw	0
  1960  03EA                     L1:	
  1961  03EA  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  1962  03EB                     l3255:	
  1963                           
  1964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1131:      
      +                          if(prec <= 12)
  1965  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  1966  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  1967  03ED  083D               	movf	(sprintf@prec+1)^(0+128),w
  1968  03EE  3A80               	xorlw	128
  1969  03EF  00FF               	movwf	127
  1970  03F0  3080               	movlw	128
  1971  03F1  027F               	subwf	127,w
  1972  03F2  1D03               	skipz
  1973  03F3  2BF6               	goto	u5475
  1974  03F4  300D               	movlw	13
  1975  03F5  023C               	subwf	sprintf@prec^(0+128),w
  1976  03F6                     u5475:	
  1977  03F6  1803               	skipnc
  1978  03F7  2C3F               	goto	l3259
  1979                           
  1980                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1132:      
      +                           fval += fround((unsigned int)prec);
  1981  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  1982  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  1983  03FA  083C               	movf	sprintf@prec^(0+128),w
  1984  03FB  120A  118A  2004  120A  118A  	fcall	_fround
  1985  0400  1283               	bcf	3,5	;RP0=0, select bank0
  1986  0401  1303               	bcf	3,6	;RP1=0, select bank0
  1987  0402  0843               	movf	?_fround+3,w
  1988  0403  00D7               	movwf	___fladd@b+3
  1989  0404  0842               	movf	?_fround+2,w
  1990  0405  00D6               	movwf	___fladd@b+2
  1991  0406  0841               	movf	?_fround+1,w
  1992  0407  00D5               	movwf	___fladd@b+1
  1993  0408  0840               	movf	?_fround,w
  1994  0409  00D4               	movwf	___fladd@b
  1995  040A  1683               	bsf	3,5	;RP0=1, select bank1
  1996  040B  1303               	bcf	3,6	;RP1=0, select bank1
  1997  040C  0841               	movf	(sprintf@fval+3)^(0+128),w
  1998  040D  1283               	bcf	3,5	;RP0=0, select bank0
  1999  040E  1303               	bcf	3,6	;RP1=0, select bank0
  2000  040F  00DB               	movwf	___fladd@a+3
  2001  0410  1683               	bsf	3,5	;RP0=1, select bank1
  2002  0411  1303               	bcf	3,6	;RP1=0, select bank1
  2003  0412  0840               	movf	(sprintf@fval+2)^(0+128),w
  2004  0413  1283               	bcf	3,5	;RP0=0, select bank0
  2005  0414  1303               	bcf	3,6	;RP1=0, select bank0
  2006  0415  00DA               	movwf	___fladd@a+2
  2007  0416  1683               	bsf	3,5	;RP0=1, select bank1
  2008  0417  1303               	bcf	3,6	;RP1=0, select bank1
  2009  0418  083F               	movf	(sprintf@fval+1)^(0+128),w
  2010  0419  1283               	bcf	3,5	;RP0=0, select bank0
  2011  041A  1303               	bcf	3,6	;RP1=0, select bank0
  2012  041B  00D9               	movwf	___fladd@a+1
  2013  041C  1683               	bsf	3,5	;RP0=1, select bank1
  2014  041D  1303               	bcf	3,6	;RP1=0, select bank1
  2015  041E  083E               	movf	sprintf@fval^(0+128),w
  2016  041F  1283               	bcf	3,5	;RP0=0, select bank0
  2017  0420  1303               	bcf	3,6	;RP1=0, select bank0
  2018  0421  00D8               	movwf	___fladd@a
  2019  0422  160A  118A  25D1  120A  118A  	fcall	___fladd
  2020  0427  1283               	bcf	3,5	;RP0=0, select bank0
  2021  0428  1303               	bcf	3,6	;RP1=0, select bank0
  2022  0429  0857               	movf	?___fladd+3,w
  2023  042A  1683               	bsf	3,5	;RP0=1, select bank1
  2024  042B  1303               	bcf	3,6	;RP1=0, select bank1
  2025  042C  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2026  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2027  042E  1303               	bcf	3,6	;RP1=0, select bank0
  2028  042F  0856               	movf	?___fladd+2,w
  2029  0430  1683               	bsf	3,5	;RP0=1, select bank1
  2030  0431  1303               	bcf	3,6	;RP1=0, select bank1
  2031  0432  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2032  0433  1283               	bcf	3,5	;RP0=0, select bank0
  2033  0434  1303               	bcf	3,6	;RP1=0, select bank0
  2034  0435  0855               	movf	?___fladd+1,w
  2035  0436  1683               	bsf	3,5	;RP0=1, select bank1
  2036  0437  1303               	bcf	3,6	;RP1=0, select bank1
  2037  0438  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2038  0439  1283               	bcf	3,5	;RP0=0, select bank0
  2039  043A  1303               	bcf	3,6	;RP1=0, select bank0
  2040  043B  0854               	movf	?___fladd,w
  2041  043C  1683               	bsf	3,5	;RP0=1, select bank1
  2042  043D  1303               	bcf	3,6	;RP1=0, select bank1
  2043  043E  00BE               	movwf	sprintf@fval^(0+128)
  2044  043F                     l3259:	
  2045                           
  2046                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1135:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2047  043F  1683               	bsf	3,5	;RP0=1, select bank1
  2048  0440  1303               	bcf	3,6	;RP1=0, select bank1
  2049  0441  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2050  0442  3A80               	xorlw	128
  2051  0443  00FF               	movwf	127
  2052  0444  3080               	movlw	128
  2053  0445  027F               	subwf	127,w
  2054  0446  1D03               	skipz
  2055  0447  2C4A               	goto	u5485
  2056  0448  300A               	movlw	10
  2057  0449  0235               	subwf	sprintf@eexp^(0+128),w
  2058  044A                     u5485:	
  2059  044A  1803               	skipnc
  2060  044B  2C97               	goto	l3267
  2061  044C  1683               	bsf	3,5	;RP0=1, select bank1
  2062  044D  1303               	bcf	3,6	;RP1=0, select bank1
  2063  044E  0841               	movf	(sprintf@fval+3)^(0+128),w
  2064  044F  00F3               	movwf	___fleq@ff1+3
  2065  0450  0840               	movf	(sprintf@fval+2)^(0+128),w
  2066  0451  00F2               	movwf	___fleq@ff1+2
  2067  0452  083F               	movf	(sprintf@fval+1)^(0+128),w
  2068  0453  00F1               	movwf	___fleq@ff1+1
  2069  0454  083E               	movf	sprintf@fval^(0+128),w
  2070  0455  00F0               	movwf	___fleq@ff1
  2071  0456  3000               	movlw	0
  2072  0457  00F7               	movwf	___fleq@ff2+3
  2073  0458  3000               	movlw	0
  2074  0459  00F6               	movwf	___fleq@ff2+2
  2075  045A  3000               	movlw	0
  2076  045B  00F5               	movwf	___fleq@ff2+1
  2077  045C  3000               	movlw	0
  2078  045D  00F4               	movwf	___fleq@ff2
  2079  045E  160A  158A  26C6  120A  118A  	fcall	___fleq
  2080  0463  1803               	btfsc	3,0
  2081  0464  2D00               	goto	l3281
  2082  0465  1683               	bsf	3,5	;RP0=1, select bank1
  2083  0466  1303               	bcf	3,6	;RP1=0, select bank1
  2084  0467  0841               	movf	(sprintf@fval+3)^(0+128),w
  2085  0468  1283               	bcf	3,5	;RP0=0, select bank0
  2086  0469  1303               	bcf	3,6	;RP1=0, select bank0
  2087  046A  00D6               	movwf	___fltol@f1+3
  2088  046B  1683               	bsf	3,5	;RP0=1, select bank1
  2089  046C  1303               	bcf	3,6	;RP1=0, select bank1
  2090  046D  0840               	movf	(sprintf@fval+2)^(0+128),w
  2091  046E  1283               	bcf	3,5	;RP0=0, select bank0
  2092  046F  1303               	bcf	3,6	;RP1=0, select bank0
  2093  0470  00D5               	movwf	___fltol@f1+2
  2094  0471  1683               	bsf	3,5	;RP0=1, select bank1
  2095  0472  1303               	bcf	3,6	;RP1=0, select bank1
  2096  0473  083F               	movf	(sprintf@fval+1)^(0+128),w
  2097  0474  1283               	bcf	3,5	;RP0=0, select bank0
  2098  0475  1303               	bcf	3,6	;RP1=0, select bank0
  2099  0476  00D4               	movwf	___fltol@f1+1
  2100  0477  1683               	bsf	3,5	;RP0=1, select bank1
  2101  0478  1303               	bcf	3,6	;RP1=0, select bank1
  2102  0479  083E               	movf	sprintf@fval^(0+128),w
  2103  047A  1283               	bcf	3,5	;RP0=0, select bank0
  2104  047B  1303               	bcf	3,6	;RP1=0, select bank0
  2105  047C  00D3               	movwf	___fltol@f1
  2106  047D  120A  158A  201F  120A  118A  	fcall	___fltol
  2107  0482  1283               	bcf	3,5	;RP0=0, select bank0
  2108  0483  1303               	bcf	3,6	;RP1=0, select bank0
  2109  0484  0856               	movf	?___fltol+3,w
  2110  0485  0455               	iorwf	?___fltol+2,w
  2111  0486  0454               	iorwf	?___fltol+1,w
  2112  0487  0453               	iorwf	?___fltol,w
  2113  0488  1D03               	skipz
  2114  0489  2D00               	goto	l3281
  2115  048A  1683               	bsf	3,5	;RP0=1, select bank1
  2116  048B  1303               	bcf	3,6	;RP1=0, select bank1
  2117  048C  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2118  048D  3A80               	xorlw	128
  2119  048E  00FF               	movwf	127
  2120  048F  3080               	movlw	128
  2121  0490  027F               	subwf	127,w
  2122  0491  1D03               	skipz
  2123  0492  2C95               	goto	u5515
  2124  0493  3002               	movlw	2
  2125  0494  0235               	subwf	sprintf@eexp^(0+128),w
  2126  0495                     u5515:	
  2127  0495  1C03               	skipc
  2128  0496  2D00               	goto	l3281
  2129  0497                     l3267:	
  2130                           
  2131                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1139:      
      +                          if(tmpval.integ < 4.294967296){
  2132  0497  1683               	bsf	3,5	;RP0=1, select bank1
  2133  0498  1303               	bcf	3,6	;RP1=0, select bank1
  2134  0499  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2135  049A  00F3               	movwf	___flge@ff1+3
  2136  049B  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2137  049C  00F2               	movwf	___flge@ff1+2
  2138  049D  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2139  049E  00F1               	movwf	___flge@ff1+1
  2140  049F  0837               	movf	sprintf@tmpval^(0+128),w
  2141  04A0  00F0               	movwf	___flge@ff1
  2142  04A1  3040               	movlw	64
  2143  04A2  00F7               	movwf	___flge@ff2+3
  2144  04A3  3089               	movlw	137
  2145  04A4  00F6               	movwf	___flge@ff2+2
  2146  04A5  3070               	movlw	112
  2147  04A6  00F5               	movwf	___flge@ff2+1
  2148  04A7  305F               	movlw	95
  2149  04A8  00F4               	movwf	___flge@ff2
  2150  04A9  160A  118A  21A3  120A  118A  	fcall	___flge
  2151  04AE  1803               	btfsc	3,0
  2152  04AF  2CB2               	goto	l3271
  2153                           
  2154                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1140:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2155  04B0  30F7               	movlw	247
  2156  04B1  2CB3               	goto	L2
  2157  04B2                     l3271:	
  2158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1141:      
      +                          }else{
  2159                           
  2160                           
  2161                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1142:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2162  04B2  30F8               	movlw	248
  2163  04B3                     L2:	
  2164  04B3  1683               	bsf	3,5	;RP0=1, select bank1
  2165  04B4  1303               	bcf	3,6	;RP1=0, select bank1
  2166  04B5  07B5               	addwf	sprintf@eexp^(0+128),f
  2167  04B6  1803               	skipnc
  2168  04B7  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2169  04B8  30FF               	movlw	255
  2170  04B9  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2171                           
  2172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1145:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  2173  04BA  0835               	movf	sprintf@eexp^(0+128),w
  2174  04BB  120A  158A  24B7  120A  118A  	fcall	_scale
  2175  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2176  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  2177  04C2  0843               	movf	?_scale+3,w
  2178  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  2179  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  2180  04C5  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2181  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2182  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  2183  04C8  0842               	movf	?_scale+2,w
  2184  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  2185  04CA  1303               	bcf	3,6	;RP1=0, select bank1
  2186  04CB  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2187  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  2188  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  2189  04CE  0841               	movf	?_scale+1,w
  2190  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  2191  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  2192  04D1  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2193  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  2194  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  2195  04D4  0840               	movf	?_scale,w
  2196  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  2197  04D6  1303               	bcf	3,6	;RP1=0, select bank1
  2198  04D7  00B7               	movwf	sprintf@tmpval^(0+128)
  2199  04D8  0841               	movf	(sprintf@fval+3)^(0+128),w
  2200  04D9  00F3               	movwf	__div_to_l_@f1+3
  2201  04DA  0840               	movf	(sprintf@fval+2)^(0+128),w
  2202  04DB  00F2               	movwf	__div_to_l_@f1+2
  2203  04DC  083F               	movf	(sprintf@fval+1)^(0+128),w
  2204  04DD  00F1               	movwf	__div_to_l_@f1+1
  2205  04DE  083E               	movf	sprintf@fval^(0+128),w
  2206  04DF  00F0               	movwf	__div_to_l_@f1
  2207  04E0  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2208  04E1  00F7               	movwf	__div_to_l_@f2+3
  2209  04E2  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2210  04E3  00F6               	movwf	__div_to_l_@f2+2
  2211  04E4  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2212  04E5  00F5               	movwf	__div_to_l_@f2+1
  2213  04E6  0837               	movf	sprintf@tmpval^(0+128),w
  2214  04E7  00F4               	movwf	__div_to_l_@f2
  2215  04E8  160A  118A  2384  120A  118A  	fcall	__div_to_l_
  2216  04ED  0873               	movf	?__div_to_l_+3,w
  2217  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  2218  04EF  1303               	bcf	3,6	;RP1=0, select bank1
  2219  04F0  00B4               	movwf	(sprintf@val+3)^(0+128)
  2220  04F1  0872               	movf	?__div_to_l_+2,w
  2221  04F2  00B3               	movwf	(sprintf@val+2)^(0+128)
  2222  04F3  0871               	movf	?__div_to_l_+1,w
  2223  04F4  00B2               	movwf	(sprintf@val+1)^(0+128)
  2224  04F5  0870               	movf	?__div_to_l_,w
  2225  04F6  00B1               	movwf	sprintf@val^(0+128)
  2226                           
  2227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1148:      
      +                          fval = 0.0;
  2228  04F7  3000               	movlw	0
  2229  04F8  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2230  04F9  3000               	movlw	0
  2231  04FA  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2232  04FB  3000               	movlw	0
  2233  04FC  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2234  04FD  3000               	movlw	0
  2235  04FE  00BE               	movwf	sprintf@fval^(0+128)
  2236                           
  2237                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1149:     }
      +                           else {
  2238  04FF  2D84               	goto	l3287
  2239  0500                     l3281:	
  2240                           
  2241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1150:      
      +                          val = (unsigned long)fval;
  2242  0500  1683               	bsf	3,5	;RP0=1, select bank1
  2243  0501  1303               	bcf	3,6	;RP1=0, select bank1
  2244  0502  0841               	movf	(sprintf@fval+3)^(0+128),w
  2245  0503  1283               	bcf	3,5	;RP0=0, select bank0
  2246  0504  1303               	bcf	3,6	;RP1=0, select bank0
  2247  0505  00D6               	movwf	___fltol@f1+3
  2248  0506  1683               	bsf	3,5	;RP0=1, select bank1
  2249  0507  1303               	bcf	3,6	;RP1=0, select bank1
  2250  0508  0840               	movf	(sprintf@fval+2)^(0+128),w
  2251  0509  1283               	bcf	3,5	;RP0=0, select bank0
  2252  050A  1303               	bcf	3,6	;RP1=0, select bank0
  2253  050B  00D5               	movwf	___fltol@f1+2
  2254  050C  1683               	bsf	3,5	;RP0=1, select bank1
  2255  050D  1303               	bcf	3,6	;RP1=0, select bank1
  2256  050E  083F               	movf	(sprintf@fval+1)^(0+128),w
  2257  050F  1283               	bcf	3,5	;RP0=0, select bank0
  2258  0510  1303               	bcf	3,6	;RP1=0, select bank0
  2259  0511  00D4               	movwf	___fltol@f1+1
  2260  0512  1683               	bsf	3,5	;RP0=1, select bank1
  2261  0513  1303               	bcf	3,6	;RP1=0, select bank1
  2262  0514  083E               	movf	sprintf@fval^(0+128),w
  2263  0515  1283               	bcf	3,5	;RP0=0, select bank0
  2264  0516  1303               	bcf	3,6	;RP1=0, select bank0
  2265  0517  00D3               	movwf	___fltol@f1
  2266  0518  120A  158A  201F  120A  118A  	fcall	___fltol
  2267  051D  1283               	bcf	3,5	;RP0=0, select bank0
  2268  051E  1303               	bcf	3,6	;RP1=0, select bank0
  2269  051F  0856               	movf	?___fltol+3,w
  2270  0520  1683               	bsf	3,5	;RP0=1, select bank1
  2271  0521  1303               	bcf	3,6	;RP1=0, select bank1
  2272  0522  00B4               	movwf	(sprintf@val+3)^(0+128)
  2273  0523  1283               	bcf	3,5	;RP0=0, select bank0
  2274  0524  1303               	bcf	3,6	;RP1=0, select bank0
  2275  0525  0855               	movf	?___fltol+2,w
  2276  0526  1683               	bsf	3,5	;RP0=1, select bank1
  2277  0527  1303               	bcf	3,6	;RP1=0, select bank1
  2278  0528  00B3               	movwf	(sprintf@val+2)^(0+128)
  2279  0529  1283               	bcf	3,5	;RP0=0, select bank0
  2280  052A  1303               	bcf	3,6	;RP1=0, select bank0
  2281  052B  0854               	movf	?___fltol+1,w
  2282  052C  1683               	bsf	3,5	;RP0=1, select bank1
  2283  052D  1303               	bcf	3,6	;RP1=0, select bank1
  2284  052E  00B2               	movwf	(sprintf@val+1)^(0+128)
  2285  052F  1283               	bcf	3,5	;RP0=0, select bank0
  2286  0530  1303               	bcf	3,6	;RP1=0, select bank0
  2287  0531  0853               	movf	?___fltol,w
  2288  0532  1683               	bsf	3,5	;RP0=1, select bank1
  2289  0533  1303               	bcf	3,6	;RP1=0, select bank1
  2290  0534  00B1               	movwf	sprintf@val^(0+128)
  2291                           
  2292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1151:      
      +                          fval -= (double)val;
  2293  0535  0834               	movf	(sprintf@val+3)^(0+128),w
  2294  0536  00F7               	movwf	___xxtofl@val+3
  2295  0537  0833               	movf	(sprintf@val+2)^(0+128),w
  2296  0538  00F6               	movwf	___xxtofl@val+2
  2297  0539  0832               	movf	(sprintf@val+1)^(0+128),w
  2298  053A  00F5               	movwf	___xxtofl@val+1
  2299  053B  0831               	movf	sprintf@val^(0+128),w
  2300  053C  00F4               	movwf	___xxtofl@val
  2301  053D  3000               	movlw	0
  2302  053E  160A  118A  2236  120A  118A  	fcall	___xxtofl
  2303  0543  0877               	movf	?___xxtofl+3,w
  2304  0544  1283               	bcf	3,5	;RP0=0, select bank0
  2305  0545  1303               	bcf	3,6	;RP1=0, select bank0
  2306  0546  00EB               	movwf	___flsub@a+3
  2307  0547  0876               	movf	?___xxtofl+2,w
  2308  0548  00EA               	movwf	___flsub@a+2
  2309  0549  0875               	movf	?___xxtofl+1,w
  2310  054A  00E9               	movwf	___flsub@a+1
  2311  054B  0874               	movf	?___xxtofl,w
  2312  054C  00E8               	movwf	___flsub@a
  2313  054D  1683               	bsf	3,5	;RP0=1, select bank1
  2314  054E  1303               	bcf	3,6	;RP1=0, select bank1
  2315  054F  0841               	movf	(sprintf@fval+3)^(0+128),w
  2316  0550  1283               	bcf	3,5	;RP0=0, select bank0
  2317  0551  1303               	bcf	3,6	;RP1=0, select bank0
  2318  0552  00EF               	movwf	___flsub@b+3
  2319  0553  1683               	bsf	3,5	;RP0=1, select bank1
  2320  0554  1303               	bcf	3,6	;RP1=0, select bank1
  2321  0555  0840               	movf	(sprintf@fval+2)^(0+128),w
  2322  0556  1283               	bcf	3,5	;RP0=0, select bank0
  2323  0557  1303               	bcf	3,6	;RP1=0, select bank0
  2324  0558  00EE               	movwf	___flsub@b+2
  2325  0559  1683               	bsf	3,5	;RP0=1, select bank1
  2326  055A  1303               	bcf	3,6	;RP1=0, select bank1
  2327  055B  083F               	movf	(sprintf@fval+1)^(0+128),w
  2328  055C  1283               	bcf	3,5	;RP0=0, select bank0
  2329  055D  1303               	bcf	3,6	;RP1=0, select bank0
  2330  055E  00ED               	movwf	___flsub@b+1
  2331  055F  1683               	bsf	3,5	;RP0=1, select bank1
  2332  0560  1303               	bcf	3,6	;RP1=0, select bank1
  2333  0561  083E               	movf	sprintf@fval^(0+128),w
  2334  0562  1283               	bcf	3,5	;RP0=0, select bank0
  2335  0563  1303               	bcf	3,6	;RP1=0, select bank0
  2336  0564  00EC               	movwf	___flsub@b
  2337  0565  160A  158A  2564  120A  118A  	fcall	___flsub
  2338  056A  1283               	bcf	3,5	;RP0=0, select bank0
  2339  056B  1303               	bcf	3,6	;RP1=0, select bank0
  2340  056C  086B               	movf	?___flsub+3,w
  2341  056D  1683               	bsf	3,5	;RP0=1, select bank1
  2342  056E  1303               	bcf	3,6	;RP1=0, select bank1
  2343  056F  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2344  0570  1283               	bcf	3,5	;RP0=0, select bank0
  2345  0571  1303               	bcf	3,6	;RP1=0, select bank0
  2346  0572  086A               	movf	?___flsub+2,w
  2347  0573  1683               	bsf	3,5	;RP0=1, select bank1
  2348  0574  1303               	bcf	3,6	;RP1=0, select bank1
  2349  0575  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2350  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2351  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2352  0578  0869               	movf	?___flsub+1,w
  2353  0579  1683               	bsf	3,5	;RP0=1, select bank1
  2354  057A  1303               	bcf	3,6	;RP1=0, select bank1
  2355  057B  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2356  057C  1283               	bcf	3,5	;RP0=0, select bank0
  2357  057D  1303               	bcf	3,6	;RP1=0, select bank0
  2358  057E  0868               	movf	?___flsub,w
  2359  057F  1683               	bsf	3,5	;RP0=1, select bank1
  2360  0580  1303               	bcf	3,6	;RP1=0, select bank1
  2361  0581  00BE               	movwf	sprintf@fval^(0+128)
  2362                           
  2363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1152:      
      +                          eexp = 0;
  2364  0582  01B5               	clrf	sprintf@eexp^(0+128)
  2365  0583  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2366  0584                     l3287:	
  2367                           
  2368                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1155:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2369  0584  01C2               	clrf	sprintf@c^(0+128)
  2370  0585  0AC2               	incf	sprintf@c^(0+128),f
  2371  0586                     l3293:	
  2372                           
  2373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1156:      
      +                          if(val < dpowers[c])
  2374  0586  0842               	movf	sprintf@c^(0+128),w
  2375  0587  00A5               	movwf	??_sprintf^(0+128)
  2376  0588  3001               	movlw	1
  2377  0589                     u5535:	
  2378  0589  1003               	clrc
  2379  058A  0DA5               	rlf	??_sprintf^(0+128),f
  2380  058B  3EFF               	addlw	-1
  2381  058C  1D03               	skipz
  2382  058D  2D89               	goto	u5535
  2383  058E  1003               	clrc
  2384  058F  0D25               	rlf	??_sprintf^(0+128),w
  2385  0590  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2386  0591  0084               	movwf	4
  2387  0592  160A  118A  200A  120A  118A  	fcall	stringdir
  2388  0597  00A6               	movwf	(??_sprintf+1)^(0+128)
  2389  0598  160A  118A  200A  120A  118A  	fcall	stringdir
  2390  059D  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2391  059E  160A  118A  200A  120A  118A  	fcall	stringdir
  2392  05A3  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2393  05A4  160A  118A  200A  120A  118A  	fcall	stringdir
  2394  05A9  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2395  05AA  0829               	movf	(??_sprintf+4)^(0+128),w
  2396  05AB  0234               	subwf	(sprintf@val+3)^(0+128),w
  2397  05AC  1D03               	skipz
  2398  05AD  2DB8               	goto	u5545
  2399  05AE  0828               	movf	(??_sprintf+3)^(0+128),w
  2400  05AF  0233               	subwf	(sprintf@val+2)^(0+128),w
  2401  05B0  1D03               	skipz
  2402  05B1  2DB8               	goto	u5545
  2403  05B2  0827               	movf	(??_sprintf+2)^(0+128),w
  2404  05B3  0232               	subwf	(sprintf@val+1)^(0+128),w
  2405  05B4  1D03               	skipz
  2406  05B5  2DB8               	goto	u5545
  2407  05B6  0826               	movf	(??_sprintf+1)^(0+128),w
  2408  05B7  0231               	subwf	sprintf@val^(0+128),w
  2409  05B8                     u5545:	
  2410  05B8  1C03               	btfss	3,0
  2411  05B9  2DC2               	goto	l3299
  2412  05BA  3001               	movlw	1
  2413  05BB  00A5               	movwf	??_sprintf^(0+128)
  2414  05BC  0825               	movf	??_sprintf^(0+128),w
  2415  05BD  07C2               	addwf	sprintf@c^(0+128),f
  2416  05BE  300A               	movlw	10
  2417  05BF  0642               	xorwf	sprintf@c^(0+128),w
  2418  05C0  1D03               	btfss	3,2
  2419  05C1  2D86               	goto	l3293
  2420  05C2                     l3299:	
  2421                           
  2422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1194:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1207:     i
      +                          f(flag & 0x03)
  2423  05C2  3003               	movlw	3
  2424  05C3  052F               	andwf	sprintf@flag^(0+128),w
  2425  05C4  00A5               	movwf	??_sprintf^(0+128)
  2426  05C5  3000               	movlw	0
  2427  05C6  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2428  05C7  00A6               	movwf	(??_sprintf+1)^(0+128)
  2429  05C8  0825               	movf	??_sprintf^(0+128),w
  2430  05C9  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2431  05CA  1903               	btfsc	3,2
  2432  05CB  2DD7               	goto	l239
  2433                           
  2434                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1209:      
      +                          ((*sp++ = ('-')));
  2435  05CC  302D               	movlw	45
  2436  05CD                     L3:	
  2437  05CD  00A5               	movwf	??_sprintf^(0+128)
  2438  05CE  083B               	movf	sprintf@sp^(0+128),w
  2439  05CF  0084               	movwf	4
  2440  05D0  0825               	movf	??_sprintf^(0+128),w
  2441  05D1  1383               	bcf	3,7	;select IRP bank0
  2442  05D2  0080               	movwf	0
  2443  05D3  3001               	movlw	1
  2444  05D4  00A5               	movwf	??_sprintf^(0+128)
  2445  05D5  0825               	movf	??_sprintf^(0+128),w
  2446  05D6  07BB               	addwf	sprintf@sp^(0+128),f
  2447  05D7                     l239:	
  2448                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1223:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1225:    }
  2449                           
  2450                           
  2451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1215:    wh
      +                          ile(c--) {
  2452  05D7  3001               	movlw	1
  2453  05D8  02C2               	subwf	sprintf@c^(0+128),f
  2454  05D9  0A42               	incf	sprintf@c^(0+128),w
  2455  05DA  1903               	btfsc	3,2
  2456  05DB  2E4C               	goto	l3317
  2457                           
  2458                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1219:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1220:      
      +                          tmpval.vd = val/dpowers[c];
  2459  05DC  0842               	movf	sprintf@c^(0+128),w
  2460  05DD  00A5               	movwf	??_sprintf^(0+128)
  2461  05DE  3001               	movlw	1
  2462  05DF                     u5575:	
  2463  05DF  1003               	clrc
  2464  05E0  0DA5               	rlf	??_sprintf^(0+128),f
  2465  05E1  3EFF               	addlw	-1
  2466  05E2  1D03               	skipz
  2467  05E3  2DDF               	goto	u5575
  2468  05E4  1003               	clrc
  2469  05E5  0D25               	rlf	??_sprintf^(0+128),w
  2470  05E6  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2471  05E7  0084               	movwf	4
  2472  05E8  160A  118A  200A  120A  118A  	fcall	stringdir
  2473  05ED  00F0               	movwf	___lldiv@divisor
  2474  05EE  160A  118A  200A  120A  118A  	fcall	stringdir
  2475  05F3  00F1               	movwf	___lldiv@divisor+1
  2476  05F4  160A  118A  200A  120A  118A  	fcall	stringdir
  2477  05F9  00F2               	movwf	___lldiv@divisor+2
  2478  05FA  160A  118A  200A  120A  118A  	fcall	stringdir
  2479  05FF  00F3               	movwf	___lldiv@divisor+3
  2480  0600  0834               	movf	(sprintf@val+3)^(0+128),w
  2481  0601  00F7               	movwf	___lldiv@dividend+3
  2482  0602  0833               	movf	(sprintf@val+2)^(0+128),w
  2483  0603  00F6               	movwf	___lldiv@dividend+2
  2484  0604  0832               	movf	(sprintf@val+1)^(0+128),w
  2485  0605  00F5               	movwf	___lldiv@dividend+1
  2486  0606  0831               	movf	sprintf@val^(0+128),w
  2487  0607  00F4               	movwf	___lldiv@dividend
  2488  0608  160A  118A  20E4  120A  118A  	fcall	___lldiv
  2489  060D  0873               	movf	?___lldiv+3,w
  2490  060E  1683               	bsf	3,5	;RP0=1, select bank1
  2491  060F  1303               	bcf	3,6	;RP1=0, select bank1
  2492  0610  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2493  0611  0872               	movf	?___lldiv+2,w
  2494  0612  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2495  0613  0871               	movf	?___lldiv+1,w
  2496  0614  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2497  0615  0870               	movf	?___lldiv,w
  2498  0616  00B7               	movwf	sprintf@tmpval^(0+128)
  2499                           
  2500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1221:      
      +                          tmpval.vd %= 10;
  2501  0617  3000               	movlw	0
  2502  0618  00F3               	movwf	___llmod@divisor+3
  2503  0619  3000               	movlw	0
  2504  061A  00F2               	movwf	___llmod@divisor+2
  2505  061B  3000               	movlw	0
  2506  061C  00F1               	movwf	___llmod@divisor+1
  2507  061D  300A               	movlw	10
  2508  061E  00F0               	movwf	___llmod@divisor
  2509  061F  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2510  0620  00F7               	movwf	___llmod@dividend+3
  2511  0621  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2512  0622  00F6               	movwf	___llmod@dividend+2
  2513  0623  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2514  0624  00F5               	movwf	___llmod@dividend+1
  2515  0625  0837               	movf	sprintf@tmpval^(0+128),w
  2516  0626  00F4               	movwf	___llmod@dividend
  2517  0627  160A  158A  2759  120A  118A  	fcall	___llmod
  2518  062C  0873               	movf	?___llmod+3,w
  2519  062D  1683               	bsf	3,5	;RP0=1, select bank1
  2520  062E  1303               	bcf	3,6	;RP1=0, select bank1
  2521  062F  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2522  0630  0872               	movf	?___llmod+2,w
  2523  0631  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2524  0632  0871               	movf	?___llmod+1,w
  2525  0633  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2526  0634  0870               	movf	?___llmod,w
  2527  0635  00B7               	movwf	sprintf@tmpval^(0+128)
  2528                           
  2529                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1222:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
  2530  0636  0837               	movf	sprintf@tmpval^(0+128),w
  2531  0637  3E30               	addlw	48
  2532  0638  2DCD               	goto	L3
  2533  0639                     l3311:	
  2534                           
  2535                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1227:     (
      +                          (*sp++ = ('0')));
  2536  0639  3030               	movlw	48
  2537  063A  1683               	bsf	3,5	;RP0=1, select bank1
  2538  063B  1303               	bcf	3,6	;RP1=0, select bank1
  2539  063C  00A5               	movwf	??_sprintf^(0+128)
  2540  063D  083B               	movf	sprintf@sp^(0+128),w
  2541  063E  0084               	movwf	4
  2542  063F  0825               	movf	??_sprintf^(0+128),w
  2543  0640  1383               	bcf	3,7	;select IRP bank0
  2544  0641  0080               	movwf	0
  2545  0642  3001               	movlw	1
  2546  0643  00A5               	movwf	??_sprintf^(0+128)
  2547  0644  0825               	movf	??_sprintf^(0+128),w
  2548  0645  07BB               	addwf	sprintf@sp^(0+128),f
  2549                           
  2550                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1228:     e
      +                          exp--;
  2551  0646  30FF               	movlw	255
  2552  0647  07B5               	addwf	sprintf@eexp^(0+128),f
  2553  0648  1803               	skipnc
  2554  0649  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2555  064A  30FF               	movlw	255
  2556  064B  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2557  064C                     l3317:	
  2558                           
  2559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1226:    wh
      +                          ile(eexp > 0) {
  2560  064C  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2561  064D  3A80               	xorlw	128
  2562  064E  00FF               	movwf	127
  2563  064F  3080               	movlw	128
  2564  0650  027F               	subwf	127,w
  2565  0651  1D03               	skipz
  2566  0652  2E55               	goto	u5595
  2567  0653  3001               	movlw	1
  2568  0654  0235               	subwf	sprintf@eexp^(0+128),w
  2569  0655                     u5595:	
  2570  0655  1803               	skipnc
  2571  0656  2E39               	goto	l3311
  2572                           
  2573                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1230:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2574  0657  1683               	bsf	3,5	;RP0=1, select bank1
  2575  0658  1303               	bcf	3,6	;RP1=0, select bank1
  2576  0659  083D               	movf	(sprintf@prec+1)^(0+128),w
  2577  065A  3A80               	xorlw	128
  2578  065B  00FF               	movwf	127
  2579  065C  3080               	movlw	128
  2580  065D  027F               	subwf	127,w
  2581  065E  1D03               	skipz
  2582  065F  2E62               	goto	u5605
  2583  0660  3009               	movlw	9
  2584  0661  023C               	subwf	sprintf@prec^(0+128),w
  2585  0662                     u5605:	
  2586  0662  1C03               	skipc
  2587  0663  2E68               	goto	l3323
  2588                           
  2589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1231:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
  2590  0664  3008               	movlw	8
  2591  0665  1683               	bsf	3,5	;RP0=1, select bank1
  2592  0666  1303               	bcf	3,6	;RP1=0, select bank1
  2593  0667  2E6B               	goto	L4
  2594  0668                     l3323:	
  2595                           
  2596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1233:     c
      +                           = (char)prec;
  2597  0668  1683               	bsf	3,5	;RP0=1, select bank1
  2598  0669  1303               	bcf	3,6	;RP1=0, select bank1
  2599  066A  083C               	movf	sprintf@prec^(0+128),w
  2600  066B                     L4:	
  2601  066B  00A5               	movwf	??_sprintf^(0+128)
  2602  066C  0825               	movf	??_sprintf^(0+128),w
  2603  066D  00C2               	movwf	sprintf@c^(0+128)
  2604                           
  2605                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1234:    pr
      +                          ec -= (int)c;
  2606  066E  0842               	movf	sprintf@c^(0+128),w
  2607  066F  00A5               	movwf	??_sprintf^(0+128)
  2608  0670  01A6               	clrf	(??_sprintf^(0+128)+1)
  2609  0671  0825               	movf	??_sprintf^(0+128),w
  2610  0672  02BC               	subwf	sprintf@prec^(0+128),f
  2611  0673  0826               	movf	(??_sprintf+1)^(0+128),w
  2612  0674  1C03               	skipc
  2613  0675  03BD               	decf	(sprintf@prec+1)^(0+128),f
  2614  0676  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  2615                           
  2616                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1238:    if
      +                          (c)
  2617  0677  0842               	movf	sprintf@c^(0+128),w
  2618  0678  1903               	btfsc	3,2
  2619  0679  2E85               	goto	l3331
  2620                           
  2621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1240:     (
      +                          (*sp++ = ('.')));
  2622  067A  302E               	movlw	46
  2623  067B  00A5               	movwf	??_sprintf^(0+128)
  2624  067C  083B               	movf	sprintf@sp^(0+128),w
  2625  067D  0084               	movwf	4
  2626  067E  0825               	movf	??_sprintf^(0+128),w
  2627  067F  1383               	bcf	3,7	;select IRP bank0
  2628  0680  0080               	movwf	0
  2629  0681  3001               	movlw	1
  2630  0682  00A5               	movwf	??_sprintf^(0+128)
  2631  0683  0825               	movf	??_sprintf^(0+128),w
  2632  0684  07BB               	addwf	sprintf@sp^(0+128),f
  2633  0685                     l3331:	
  2634                           
  2635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2636  0685  0842               	movf	sprintf@c^(0+128),w
  2637  0686  120A  158A  24B7  120A  118A  	fcall	_scale
  2638  068B  1283               	bcf	3,5	;RP0=0, select bank0
  2639  068C  1303               	bcf	3,6	;RP1=0, select bank0
  2640  068D  0843               	movf	?_scale+3,w
  2641  068E  1683               	bsf	3,5	;RP0=1, select bank1
  2642  068F  1303               	bcf	3,6	;RP1=0, select bank1
  2643  0690  00AD               	movwf	(_sprintf$876+3)^(0+128)
  2644  0691  1283               	bcf	3,5	;RP0=0, select bank0
  2645  0692  1303               	bcf	3,6	;RP1=0, select bank0
  2646  0693  0842               	movf	?_scale+2,w
  2647  0694  1683               	bsf	3,5	;RP0=1, select bank1
  2648  0695  1303               	bcf	3,6	;RP1=0, select bank1
  2649  0696  00AC               	movwf	(_sprintf$876+2)^(0+128)
  2650  0697  1283               	bcf	3,5	;RP0=0, select bank0
  2651  0698  1303               	bcf	3,6	;RP1=0, select bank0
  2652  0699  0841               	movf	?_scale+1,w
  2653  069A  1683               	bsf	3,5	;RP0=1, select bank1
  2654  069B  1303               	bcf	3,6	;RP1=0, select bank1
  2655  069C  00AB               	movwf	(_sprintf$876+1)^(0+128)
  2656  069D  1283               	bcf	3,5	;RP0=0, select bank0
  2657  069E  1303               	bcf	3,6	;RP1=0, select bank0
  2658  069F  0840               	movf	?_scale,w
  2659  06A0  1683               	bsf	3,5	;RP0=1, select bank1
  2660  06A1  1303               	bcf	3,6	;RP1=0, select bank1
  2661  06A2  00AA               	movwf	_sprintf$876^(0+128)
  2662                           
  2663                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2664  06A3  082D               	movf	(_sprintf$876+3)^(0+128),w
  2665  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  2666  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  2667  06A6  00AD               	movwf	___flmul@a+3
  2668  06A7  1683               	bsf	3,5	;RP0=1, select bank1
  2669  06A8  1303               	bcf	3,6	;RP1=0, select bank1
  2670  06A9  082C               	movf	(_sprintf$876+2)^(0+128),w
  2671  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  2672  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  2673  06AC  00AC               	movwf	___flmul@a+2
  2674  06AD  1683               	bsf	3,5	;RP0=1, select bank1
  2675  06AE  1303               	bcf	3,6	;RP1=0, select bank1
  2676  06AF  082B               	movf	(_sprintf$876+1)^(0+128),w
  2677  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  2678  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  2679  06B2  00AB               	movwf	___flmul@a+1
  2680  06B3  1683               	bsf	3,5	;RP0=1, select bank1
  2681  06B4  1303               	bcf	3,6	;RP1=0, select bank1
  2682  06B5  082A               	movf	_sprintf$876^(0+128),w
  2683  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  2684  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  2685  06B8  00AA               	movwf	___flmul@a
  2686  06B9  1683               	bsf	3,5	;RP0=1, select bank1
  2687  06BA  1303               	bcf	3,6	;RP1=0, select bank1
  2688  06BB  0841               	movf	(sprintf@fval+3)^(0+128),w
  2689  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  2690  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  2691  06BE  00A9               	movwf	___flmul@b+3
  2692  06BF  1683               	bsf	3,5	;RP0=1, select bank1
  2693  06C0  1303               	bcf	3,6	;RP1=0, select bank1
  2694  06C1  0840               	movf	(sprintf@fval+2)^(0+128),w
  2695  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  2696  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  2697  06C4  00A8               	movwf	___flmul@b+2
  2698  06C5  1683               	bsf	3,5	;RP0=1, select bank1
  2699  06C6  1303               	bcf	3,6	;RP1=0, select bank1
  2700  06C7  083F               	movf	(sprintf@fval+1)^(0+128),w
  2701  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  2702  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  2703  06CA  00A7               	movwf	___flmul@b+1
  2704  06CB  1683               	bsf	3,5	;RP0=1, select bank1
  2705  06CC  1303               	bcf	3,6	;RP1=0, select bank1
  2706  06CD  083E               	movf	sprintf@fval^(0+128),w
  2707  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  2708  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  2709  06D0  00A6               	movwf	___flmul@b
  2710  06D1  120A  158A  21A2  120A  118A  	fcall	___flmul
  2711  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  2712  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  2713  06D8  0829               	movf	?___flmul+3,w
  2714  06D9  00D6               	movwf	___fltol@f1+3
  2715  06DA  0828               	movf	?___flmul+2,w
  2716  06DB  00D5               	movwf	___fltol@f1+2
  2717  06DC  0827               	movf	?___flmul+1,w
  2718  06DD  00D4               	movwf	___fltol@f1+1
  2719  06DE  0826               	movf	?___flmul,w
  2720  06DF  00D3               	movwf	___fltol@f1
  2721  06E0  120A  158A  201F  120A  118A  	fcall	___fltol
  2722  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  2723  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  2724  06E7  0856               	movf	?___fltol+3,w
  2725  06E8  1683               	bsf	3,5	;RP0=1, select bank1
  2726  06E9  1303               	bcf	3,6	;RP1=0, select bank1
  2727  06EA  00B4               	movwf	(sprintf@val+3)^(0+128)
  2728  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  2729  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  2730  06ED  0855               	movf	?___fltol+2,w
  2731  06EE  1683               	bsf	3,5	;RP0=1, select bank1
  2732  06EF  1303               	bcf	3,6	;RP1=0, select bank1
  2733  06F0  00B3               	movwf	(sprintf@val+2)^(0+128)
  2734  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  2735  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  2736  06F3  0854               	movf	?___fltol+1,w
  2737  06F4  1683               	bsf	3,5	;RP0=1, select bank1
  2738  06F5  1303               	bcf	3,6	;RP1=0, select bank1
  2739  06F6  00B2               	movwf	(sprintf@val+1)^(0+128)
  2740  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  2741  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  2742  06F9  0853               	movf	?___fltol,w
  2743  06FA  1683               	bsf	3,5	;RP0=1, select bank1
  2744  06FB  1303               	bcf	3,6	;RP1=0, select bank1
  2745  06FC                     L5:	
  2746  06FC  00B1               	movwf	sprintf@val^(0+128)
  2747                           
  2748                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  2749  06FD  3001               	movlw	1
  2750  06FE  02C2               	subwf	sprintf@c^(0+128),f
  2751  06FF  0A42               	incf	sprintf@c^(0+128),w
  2752  0700  1903               	btfsc	3,2
  2753  0701  2FB4               	goto	l3351
  2754                           
  2755                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1248:     t
      +                          mpval.vd = val/dpowers[c];
  2756                           
  2757                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  2758  0702  0842               	movf	sprintf@c^(0+128),w
  2759  0703  00A5               	movwf	??_sprintf^(0+128)
  2760  0704  3001               	movlw	1
  2761  0705                     u5625:	
  2762  0705  1003               	clrc
  2763  0706  0DA5               	rlf	??_sprintf^(0+128),f
  2764  0707  3EFF               	addlw	-1
  2765  0708  1D03               	skipz
  2766  0709  2F05               	goto	u5625
  2767  070A  1003               	clrc
  2768  070B  0D25               	rlf	??_sprintf^(0+128),w
  2769  070C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2770  070D  0084               	movwf	4
  2771  070E  160A  118A  200A  120A  118A  	fcall	stringdir
  2772  0713  00F0               	movwf	___lldiv@divisor
  2773  0714  160A  118A  200A  120A  118A  	fcall	stringdir
  2774  0719  00F1               	movwf	___lldiv@divisor+1
  2775  071A  160A  118A  200A  120A  118A  	fcall	stringdir
  2776  071F  00F2               	movwf	___lldiv@divisor+2
  2777  0720  160A  118A  200A  120A  118A  	fcall	stringdir
  2778  0725  00F3               	movwf	___lldiv@divisor+3
  2779  0726  0834               	movf	(sprintf@val+3)^(0+128),w
  2780  0727  00F7               	movwf	___lldiv@dividend+3
  2781  0728  0833               	movf	(sprintf@val+2)^(0+128),w
  2782  0729  00F6               	movwf	___lldiv@dividend+2
  2783  072A  0832               	movf	(sprintf@val+1)^(0+128),w
  2784  072B  00F5               	movwf	___lldiv@dividend+1
  2785  072C  0831               	movf	sprintf@val^(0+128),w
  2786  072D  00F4               	movwf	___lldiv@dividend
  2787  072E  160A  118A  20E4  120A  118A  	fcall	___lldiv
  2788  0733  0873               	movf	?___lldiv+3,w
  2789  0734  1683               	bsf	3,5	;RP0=1, select bank1
  2790  0735  1303               	bcf	3,6	;RP1=0, select bank1
  2791  0736  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2792  0737  0872               	movf	?___lldiv+2,w
  2793  0738  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2794  0739  0871               	movf	?___lldiv+1,w
  2795  073A  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2796  073B  0870               	movf	?___lldiv,w
  2797  073C  00B7               	movwf	sprintf@tmpval^(0+128)
  2798                           
  2799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1249:     t
      +                          mpval.vd %= 10;
  2800  073D  3000               	movlw	0
  2801  073E  00F3               	movwf	___llmod@divisor+3
  2802  073F  3000               	movlw	0
  2803  0740  00F2               	movwf	___llmod@divisor+2
  2804  0741  3000               	movlw	0
  2805  0742  00F1               	movwf	___llmod@divisor+1
  2806  0743  300A               	movlw	10
  2807  0744  00F0               	movwf	___llmod@divisor
  2808  0745  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2809  0746  00F7               	movwf	___llmod@dividend+3
  2810  0747  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2811  0748  00F6               	movwf	___llmod@dividend+2
  2812  0749  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2813  074A  00F5               	movwf	___llmod@dividend+1
  2814  074B  0837               	movf	sprintf@tmpval^(0+128),w
  2815  074C  00F4               	movwf	___llmod@dividend
  2816  074D  160A  158A  2759  120A  118A  	fcall	___llmod
  2817  0752  0873               	movf	?___llmod+3,w
  2818  0753  1683               	bsf	3,5	;RP0=1, select bank1
  2819  0754  1303               	bcf	3,6	;RP1=0, select bank1
  2820  0755  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2821  0756  0872               	movf	?___llmod+2,w
  2822  0757  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2823  0758  0871               	movf	?___llmod+1,w
  2824  0759  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2825  075A  0870               	movf	?___llmod,w
  2826  075B  00B7               	movwf	sprintf@tmpval^(0+128)
  2827                           
  2828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1250:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
  2829  075C  0837               	movf	sprintf@tmpval^(0+128),w
  2830  075D  3E30               	addlw	48
  2831  075E  00A5               	movwf	??_sprintf^(0+128)
  2832  075F  083B               	movf	sprintf@sp^(0+128),w
  2833  0760  0084               	movwf	4
  2834  0761  0825               	movf	??_sprintf^(0+128),w
  2835  0762  1383               	bcf	3,7	;select IRP bank0
  2836  0763  0080               	movwf	0
  2837  0764  3001               	movlw	1
  2838  0765  00A5               	movwf	??_sprintf^(0+128)
  2839  0766  0825               	movf	??_sprintf^(0+128),w
  2840  0767  07BB               	addwf	sprintf@sp^(0+128),f
  2841                           
  2842                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1251:     v
      +                          al %= dpowers[c];
  2843  0768  0842               	movf	sprintf@c^(0+128),w
  2844  0769  00A5               	movwf	??_sprintf^(0+128)
  2845  076A  3001               	movlw	1
  2846  076B                     u5635:	
  2847  076B  1003               	clrc
  2848  076C  0DA5               	rlf	??_sprintf^(0+128),f
  2849  076D  3EFF               	addlw	-1
  2850  076E  1D03               	skipz
  2851  076F  2F6B               	goto	u5635
  2852  0770  1003               	clrc
  2853  0771  0D25               	rlf	??_sprintf^(0+128),w
  2854  0772  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2855  0773  0084               	movwf	4
  2856  0774  160A  118A  200A  120A  118A  	fcall	stringdir
  2857  0779  00F0               	movwf	___llmod@divisor
  2858  077A  160A  118A  200A  120A  118A  	fcall	stringdir
  2859  077F  00F1               	movwf	___llmod@divisor+1
  2860  0780  160A  118A  200A  120A  118A  	fcall	stringdir
  2861  0785  00F2               	movwf	___llmod@divisor+2
  2862  0786  160A  118A  200A  120A  118A  	fcall	stringdir
  2863  078B  00F3               	movwf	___llmod@divisor+3
  2864  078C  0834               	movf	(sprintf@val+3)^(0+128),w
  2865  078D  00F7               	movwf	___llmod@dividend+3
  2866  078E  0833               	movf	(sprintf@val+2)^(0+128),w
  2867  078F  00F6               	movwf	___llmod@dividend+2
  2868  0790  0832               	movf	(sprintf@val+1)^(0+128),w
  2869  0791  00F5               	movwf	___llmod@dividend+1
  2870  0792  0831               	movf	sprintf@val^(0+128),w
  2871  0793  00F4               	movwf	___llmod@dividend
  2872  0794  160A  158A  2759  120A  118A  	fcall	___llmod
  2873  0799  0873               	movf	?___llmod+3,w
  2874  079A  1683               	bsf	3,5	;RP0=1, select bank1
  2875  079B  1303               	bcf	3,6	;RP1=0, select bank1
  2876  079C  00B4               	movwf	(sprintf@val+3)^(0+128)
  2877  079D  0872               	movf	?___llmod+2,w
  2878  079E  00B3               	movwf	(sprintf@val+2)^(0+128)
  2879  079F  0871               	movf	?___llmod+1,w
  2880  07A0  00B2               	movwf	(sprintf@val+1)^(0+128)
  2881  07A1  0870               	movf	?___llmod,w
  2882  07A2  2EFC               	goto	L5
  2883  07A3                     l3345:	
  2884                           
  2885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1255:     (
      +                          (*sp++ = ('0')));
  2886  07A3  3030               	movlw	48
  2887  07A4  00A5               	movwf	??_sprintf^(0+128)
  2888  07A5  083B               	movf	sprintf@sp^(0+128),w
  2889  07A6  0084               	movwf	4
  2890  07A7  0825               	movf	??_sprintf^(0+128),w
  2891  07A8  1383               	bcf	3,7	;select IRP bank0
  2892  07A9  0080               	movwf	0
  2893  07AA  3001               	movlw	1
  2894  07AB  00A5               	movwf	??_sprintf^(0+128)
  2895  07AC  0825               	movf	??_sprintf^(0+128),w
  2896  07AD  07BB               	addwf	sprintf@sp^(0+128),f
  2897                           
  2898                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1256:     p
      +                          rec--;
  2899  07AE  30FF               	movlw	255
  2900  07AF  07BC               	addwf	sprintf@prec^(0+128),f
  2901  07B0  1803               	skipnc
  2902  07B1  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  2903  07B2  30FF               	movlw	255
  2904  07B3  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  2905  07B4                     l3351:	
  2906                           
  2907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(prec) {
  2908  07B4  083C               	movf	sprintf@prec^(0+128),w
  2909  07B5  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  2910  07B6  1903               	btfsc	3,2
  2911  07B7  2A0C               	goto	l3371
  2912  07B8  2FA3               	goto	l3345
  2913  07B9                     l3353:	
  2914                           
  2915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1309:   if(
      +                          prec == 0 && val == 0)
  2916  07B9  083C               	movf	sprintf@prec^(0+128),w
  2917  07BA  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  2918  07BB  1D03               	btfss	3,2
  2919  07BC  2FC9               	goto	l254
  2920  07BD  0834               	movf	(sprintf@val+3)^(0+128),w
  2921  07BE  0433               	iorwf	(sprintf@val+2)^(0+128),w
  2922  07BF  0432               	iorwf	(sprintf@val+1)^(0+128),w
  2923  07C0  0431               	iorwf	sprintf@val^(0+128),w
  2924  07C1  1D03               	skipz
  2925  07C2  2FC9               	goto	l254
  2926                           
  2927                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1310:    pr
      +                          ec++;
  2928  07C3  3001               	movlw	1
  2929  07C4  07BC               	addwf	sprintf@prec^(0+128),f
  2930  07C5  1803               	skipnc
  2931  07C6  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  2932  07C7  3000               	movlw	0
  2933  07C8  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  2934  07C9                     l254:	
  2935                           
  2936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1358:   if(
      +                          c < prec)
  2937  07C9  083D               	movf	(sprintf@prec+1)^(0+128),w
  2938  07CA  3A80               	xorlw	128
  2939  07CB  3C80               	sublw	128
  2940  07CC  1D03               	skipz
  2941  07CD  2FD0               	goto	u5685
  2942  07CE  083C               	movf	sprintf@prec^(0+128),w
  2943  07CF  0242               	subwf	sprintf@c^(0+128),w
  2944  07D0                     u5685:	
  2945  07D0  1C03               	btfss	3,0
  2946  07D1  2FDF               	goto	l3365
  2947  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  2948  07D3  1303               	bcf	3,6	;RP1=0, select bank1
  2949  07D4  083D               	movf	(sprintf@prec+1)^(0+128),w
  2950  07D5  3A80               	xorlw	128
  2951  07D6  00A5               	movwf	??_sprintf^(0+128)
  2952  07D7  3080               	movlw	128
  2953  07D8  0225               	subwf	??_sprintf^(0+128),w
  2954  07D9  1D03               	skipz
  2955  07DA  2FDD               	goto	u5695
  2956  07DB  0842               	movf	sprintf@c^(0+128),w
  2957  07DC  023C               	subwf	sprintf@prec^(0+128),w
  2958  07DD                     u5695:	
  2959  07DD  1C03               	btfss	3,0
  2960  07DE  2FDF               	goto	l3365
  2961  07DF                     l3365:	
  2962                           
  2963                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  2964  07DF  3003               	movlw	3
  2965  07E0  1683               	bsf	3,5	;RP0=1, select bank1
  2966  07E1  1303               	bcf	3,6	;RP1=0, select bank1
  2967  07E2  052F               	andwf	sprintf@flag^(0+128),w
  2968  07E3  00A5               	movwf	??_sprintf^(0+128)
  2969  07E4  3000               	movlw	0
  2970  07E5  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2971  07E6  00A6               	movwf	(??_sprintf+1)^(0+128)
  2972  07E7  0825               	movf	??_sprintf^(0+128),w
  2973  07E8  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2974  07E9  1903               	btfsc	3,2
  2975  07EA  2A0C               	goto	l3371
  2976                           
  2977                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  2978  07EB  302D               	movlw	45
  2979  07EC                     L6:	
  2980  07EC  00A5               	movwf	??_sprintf^(0+128)
  2981  07ED  083B               	movf	sprintf@sp^(0+128),w
  2982  07EE  0084               	movwf	4
  2983  07EF  0825               	movf	??_sprintf^(0+128),w
  2984  07F0  1383               	bcf	3,7	;select IRP bank0
  2985  07F1  0080               	movwf	0
  2986  07F2  3001               	movlw	1
  2987  07F3  00A5               	movwf	??_sprintf^(0+128)
  2988  07F4  0825               	movf	??_sprintf^(0+128),w
  2989  07F5  07BB               	addwf	sprintf@sp^(0+128),f
  2990  07F6  2A0C               	goto	l3371
  2991  07F7                     l3373:	
  2992                           
  2993                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  2994  07F7  083B               	movf	sprintf@sp^(0+128),w
  2995  07F8  0084               	movwf	4
  2996  07F9  1383               	bcf	3,7	;select IRP bank0
  2997  07FA  0180               	clrf	0
  2998  07FB  0008               	return
  2999  07FC                     __end_of_sprintf:	
  3000                           
  3001                           	psect	text2
  3002  0CB7                     __ptext2:	
  3003 ;; *************** function _scale *****************
  3004 ;; Defined at:
  3005 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;  scl             1    wreg     char 
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;  scl             1   50[BANK0 ] char 
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  4   32[BANK0 ] char 
  3012 ;; Registers used:
  3013 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3019 ;;      Params:         0       4       0       0       0
  3020 ;;      Locals:         0       5       0       0       0
  3021 ;;      Temps:          0      10       0       0       0
  3022 ;;      Totals:         0      19       0       0       0
  3023 ;;Total ram usage:       19 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; Hardware stack levels required when called:    2
  3026 ;; This function calls:
  3027 ;;		___awdiv
  3028 ;;		___awmod
  3029 ;;		___flmul
  3030 ;; This function is called by:
  3031 ;;		_sprintf
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           
  3036                           ;psect for function _scale
  3037  0CB7                     _scale:	
  3038                           
  3039                           ;incstack = 0
  3040                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3041                           ;scale@scl stored from wreg
  3042  0CB7  1283               	bcf	3,5	;RP0=0, select bank0
  3043  0CB8  1303               	bcf	3,6	;RP1=0, select bank0
  3044  0CB9  00D2               	movwf	scale@scl
  3045                           
  3046                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  3047  0CBA  1FD2               	btfss	scale@scl,7
  3048  0CBB  2E5F               	goto	l2781
  3049                           
  3050                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  3051  0CBC  09D2               	comf	scale@scl,f
  3052  0CBD  0AD2               	incf	scale@scl,f
  3053                           
  3054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  3055  0CBE  0852               	movf	scale@scl,w
  3056  0CBF  3A80               	xorlw	128
  3057  0CC0  3E12               	addlw	-238
  3058  0CC1  1C03               	skipc
  3059  0CC2  2DA9               	goto	l2771
  3060                           
  3061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3062  0CC3  300A               	movlw	10
  3063  0CC4  00F7               	movwf	___awdiv@divisor
  3064  0CC5  3000               	movlw	0
  3065  0CC6  00F8               	movwf	___awdiv@divisor+1
  3066  0CC7  0852               	movf	scale@scl,w
  3067  0CC8  00F2               	movwf	___awmod@dividend
  3068  0CC9  01F3               	clrf	___awmod@dividend+1
  3069  0CCA  1BF2               	btfsc	___awmod@dividend,7
  3070  0CCB  03F3               	decf	___awmod@dividend+1,f
  3071  0CCC  3064               	movlw	100
  3072  0CCD  00F0               	movwf	___awmod@divisor
  3073  0CCE  3000               	movlw	0
  3074  0CCF  00F1               	movwf	___awmod@divisor+1
  3075  0CD0  160A  158A  270E  120A  158A  	fcall	___awmod
  3076  0CD5  0871               	movf	?___awmod+1,w
  3077  0CD6  00FA               	movwf	___awdiv@dividend+1
  3078  0CD7  0870               	movf	?___awmod,w
  3079  0CD8  00F9               	movwf	___awdiv@dividend
  3080  0CD9  160A  158A  27A5  120A  158A  	fcall	___awdiv
  3081  0CDE  0877               	movf	?___awdiv,w
  3082  0CDF  1283               	bcf	3,5	;RP0=0, select bank0
  3083  0CE0  1303               	bcf	3,6	;RP1=0, select bank0
  3084  0CE1  00C4               	movwf	??_scale
  3085  0CE2  3001               	movlw	1
  3086  0CE3                     u4345:	
  3087  0CE3  1003               	clrc
  3088  0CE4  0DC4               	rlf	??_scale,f
  3089  0CE5  3EFF               	addlw	-1
  3090  0CE6  1D03               	skipz
  3091  0CE7  2CE3               	goto	u4345
  3092  0CE8  1003               	clrc
  3093  0CE9  0D44               	rlf	??_scale,w
  3094  0CEA  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3095  0CEB  0084               	movwf	4
  3096  0CEC  160A  118A  200A  120A  158A  	fcall	stringdir
  3097  0CF1  00C5               	movwf	??_scale+1
  3098  0CF2  160A  118A  200A  120A  158A  	fcall	stringdir
  3099  0CF7  00C6               	movwf	??_scale+2
  3100  0CF8  160A  118A  200A  120A  158A  	fcall	stringdir
  3101  0CFD  00C7               	movwf	??_scale+3
  3102  0CFE  160A  118A  200A  120A  158A  	fcall	stringdir
  3103  0D03  00C8               	movwf	??_scale+4
  3104  0D04  0848               	movf	??_scale+4,w
  3105  0D05  00A9               	movwf	___flmul@b+3
  3106  0D06  0847               	movf	??_scale+3,w
  3107  0D07  00A8               	movwf	___flmul@b+2
  3108  0D08  0846               	movf	??_scale+2,w
  3109  0D09  00A7               	movwf	___flmul@b+1
  3110  0D0A  0845               	movf	??_scale+1,w
  3111  0D0B  00A6               	movwf	___flmul@b
  3112  0D0C  3064               	movlw	100
  3113  0D0D  00F7               	movwf	___awdiv@divisor
  3114  0D0E  3000               	movlw	0
  3115  0D0F  00F8               	movwf	___awdiv@divisor+1
  3116  0D10  0852               	movf	scale@scl,w
  3117  0D11  00F9               	movwf	___awdiv@dividend
  3118  0D12  01FA               	clrf	___awdiv@dividend+1
  3119  0D13  1BF9               	btfsc	___awdiv@dividend,7
  3120  0D14  03FA               	decf	___awdiv@dividend+1,f
  3121  0D15  160A  158A  27A5  120A  158A  	fcall	___awdiv
  3122  0D1A  0877               	movf	?___awdiv,w
  3123  0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  3124  0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  3125  0D1D  00C9               	movwf	??_scale+5
  3126  0D1E  3001               	movlw	1
  3127  0D1F                     u4355:	
  3128  0D1F  1003               	clrc
  3129  0D20  0DC9               	rlf	??_scale+5,f
  3130  0D21  3EFF               	addlw	-1
  3131  0D22  1D03               	skipz
  3132  0D23  2D1F               	goto	u4355
  3133  0D24  1003               	clrc
  3134  0D25  0D49               	rlf	??_scale+5,w
  3135  0D26  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3136  0D27  0084               	movwf	4
  3137  0D28  160A  118A  200A  120A  158A  	fcall	stringdir
  3138  0D2D  00CA               	movwf	??_scale+6
  3139  0D2E  160A  118A  200A  120A  158A  	fcall	stringdir
  3140  0D33  00CB               	movwf	??_scale+7
  3141  0D34  160A  118A  200A  120A  158A  	fcall	stringdir
  3142  0D39  00CC               	movwf	??_scale+8
  3143  0D3A  160A  118A  200A  120A  158A  	fcall	stringdir
  3144  0D3F  00CD               	movwf	??_scale+9
  3145  0D40  084D               	movf	??_scale+9,w
  3146  0D41  00AD               	movwf	___flmul@a+3
  3147  0D42  084C               	movf	??_scale+8,w
  3148  0D43  00AC               	movwf	___flmul@a+2
  3149  0D44  084B               	movf	??_scale+7,w
  3150  0D45  00AB               	movwf	___flmul@a+1
  3151  0D46  084A               	movf	??_scale+6,w
  3152  0D47  00AA               	movwf	___flmul@a
  3153  0D48  120A  158A  21A2  120A  158A  	fcall	___flmul
  3154  0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  3155  0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  3156  0D4F  0829               	movf	?___flmul+3,w
  3157  0D50  00D1               	movwf	_scale$875+3
  3158  0D51  0828               	movf	?___flmul+2,w
  3159  0D52  00D0               	movwf	_scale$875+2
  3160  0D53  0827               	movf	?___flmul+1,w
  3161  0D54  00CF               	movwf	_scale$875+1
  3162  0D55  0826               	movf	?___flmul,w
  3163  0D56  00CE               	movwf	_scale$875
  3164                           
  3165                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3166  0D57  300A               	movlw	10
  3167  0D58  00F0               	movwf	___awmod@divisor
  3168  0D59  3000               	movlw	0
  3169  0D5A  00F1               	movwf	___awmod@divisor+1
  3170  0D5B  0852               	movf	scale@scl,w
  3171  0D5C  00F2               	movwf	___awmod@dividend
  3172  0D5D  01F3               	clrf	___awmod@dividend+1
  3173  0D5E  1BF2               	btfsc	___awmod@dividend,7
  3174  0D5F  03F3               	decf	___awmod@dividend+1,f
  3175  0D60  160A  158A  270E  120A  158A  	fcall	___awmod
  3176  0D65  0870               	movf	?___awmod,w
  3177  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  3178  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  3179  0D68  00C4               	movwf	??_scale
  3180  0D69  3001               	movlw	1
  3181  0D6A                     u4365:	
  3182  0D6A  1003               	clrc
  3183  0D6B  0DC4               	rlf	??_scale,f
  3184  0D6C  3EFF               	addlw	-1
  3185  0D6D  1D03               	skipz
  3186  0D6E  2D6A               	goto	u4365
  3187  0D6F  1003               	clrc
  3188  0D70  0D44               	rlf	??_scale,w
  3189  0D71  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3190  0D72  0084               	movwf	4
  3191  0D73  160A  118A  200A  120A  158A  	fcall	stringdir
  3192  0D78  00C5               	movwf	??_scale+1
  3193  0D79  160A  118A  200A  120A  158A  	fcall	stringdir
  3194  0D7E  00C6               	movwf	??_scale+2
  3195  0D7F  160A  118A  200A  120A  158A  	fcall	stringdir
  3196  0D84  00C7               	movwf	??_scale+3
  3197  0D85  160A  118A  200A  120A  158A  	fcall	stringdir
  3198  0D8A  00C8               	movwf	??_scale+4
  3199  0D8B  0848               	movf	??_scale+4,w
  3200  0D8C  00A9               	movwf	___flmul@b+3
  3201  0D8D  0847               	movf	??_scale+3,w
  3202  0D8E  00A8               	movwf	___flmul@b+2
  3203  0D8F  0846               	movf	??_scale+2,w
  3204  0D90  00A7               	movwf	___flmul@b+1
  3205  0D91  0845               	movf	??_scale+1,w
  3206  0D92  00A6               	movwf	___flmul@b
  3207  0D93  0851               	movf	_scale$875+3,w
  3208  0D94  00AD               	movwf	___flmul@a+3
  3209  0D95  0850               	movf	_scale$875+2,w
  3210  0D96  00AC               	movwf	___flmul@a+2
  3211  0D97  084F               	movf	_scale$875+1,w
  3212  0D98  00AB               	movwf	___flmul@a+1
  3213  0D99  084E               	movf	_scale$875,w
  3214  0D9A  00AA               	movwf	___flmul@a
  3215  0D9B  120A  158A  21A2   	fcall	___flmul
  3216  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  3217  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  3218  0DA0  0829               	movf	?___flmul+3,w
  3219  0DA1  00C3               	movwf	?_scale+3
  3220  0DA2  0828               	movf	?___flmul+2,w
  3221  0DA3  00C2               	movwf	?_scale+2
  3222  0DA4  0827               	movf	?___flmul+1,w
  3223  0DA5  00C1               	movwf	?_scale+1
  3224  0DA6  0826               	movf	?___flmul,w
  3225  0DA7  00C0               	movwf	?_scale
  3226  0DA8  0008               	return
  3227  0DA9                     l2771:	
  3228  0DA9  0852               	movf	scale@scl,w
  3229  0DAA  3A80               	xorlw	128
  3230  0DAB  3E75               	addlw	-139
  3231  0DAC  1C03               	skipc
  3232  0DAD  2E34               	goto	l2777
  3233                           
  3234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3235  0DAE  300A               	movlw	10
  3236  0DAF  00F0               	movwf	___awmod@divisor
  3237  0DB0  3000               	movlw	0
  3238  0DB1  00F1               	movwf	___awmod@divisor+1
  3239  0DB2  0852               	movf	scale@scl,w
  3240  0DB3  00F2               	movwf	___awmod@dividend
  3241  0DB4  01F3               	clrf	___awmod@dividend+1
  3242  0DB5  1BF2               	btfsc	___awmod@dividend,7
  3243  0DB6  03F3               	decf	___awmod@dividend+1,f
  3244  0DB7  160A  158A  270E  120A  158A  	fcall	___awmod
  3245  0DBC  0870               	movf	?___awmod,w
  3246  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  3247  0DBE  1303               	bcf	3,6	;RP1=0, select bank0
  3248  0DBF  00C4               	movwf	??_scale
  3249  0DC0  3001               	movlw	1
  3250  0DC1                     u4385:	
  3251  0DC1  1003               	clrc
  3252  0DC2  0DC4               	rlf	??_scale,f
  3253  0DC3  3EFF               	addlw	-1
  3254  0DC4  1D03               	skipz
  3255  0DC5  2DC1               	goto	u4385
  3256  0DC6  1003               	clrc
  3257  0DC7  0D44               	rlf	??_scale,w
  3258  0DC8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3259  0DC9  0084               	movwf	4
  3260  0DCA  160A  118A  200A  120A  158A  	fcall	stringdir
  3261  0DCF  00C5               	movwf	??_scale+1
  3262  0DD0  160A  118A  200A  120A  158A  	fcall	stringdir
  3263  0DD5  00C6               	movwf	??_scale+2
  3264  0DD6  160A  118A  200A  120A  158A  	fcall	stringdir
  3265  0DDB  00C7               	movwf	??_scale+3
  3266  0DDC  160A  118A  200A  120A  158A  	fcall	stringdir
  3267  0DE1  00C8               	movwf	??_scale+4
  3268  0DE2  0848               	movf	??_scale+4,w
  3269  0DE3  00A9               	movwf	___flmul@b+3
  3270  0DE4  0847               	movf	??_scale+3,w
  3271  0DE5  00A8               	movwf	___flmul@b+2
  3272  0DE6  0846               	movf	??_scale+2,w
  3273  0DE7  00A7               	movwf	___flmul@b+1
  3274  0DE8  0845               	movf	??_scale+1,w
  3275  0DE9  00A6               	movwf	___flmul@b
  3276  0DEA  300A               	movlw	10
  3277  0DEB  00F7               	movwf	___awdiv@divisor
  3278  0DEC  3000               	movlw	0
  3279  0DED  00F8               	movwf	___awdiv@divisor+1
  3280  0DEE  0852               	movf	scale@scl,w
  3281  0DEF  00F9               	movwf	___awdiv@dividend
  3282  0DF0  01FA               	clrf	___awdiv@dividend+1
  3283  0DF1  1BF9               	btfsc	___awdiv@dividend,7
  3284  0DF2  03FA               	decf	___awdiv@dividend+1,f
  3285  0DF3  160A  158A  27A5  120A  158A  	fcall	___awdiv
  3286  0DF8  0877               	movf	?___awdiv,w
  3287  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  3288  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  3289  0DFB  00C9               	movwf	??_scale+5
  3290  0DFC  3001               	movlw	1
  3291  0DFD                     u4395:	
  3292  0DFD  1003               	clrc
  3293  0DFE  0DC9               	rlf	??_scale+5,f
  3294  0DFF  3EFF               	addlw	-1
  3295  0E00  1D03               	skipz
  3296  0E01  2DFD               	goto	u4395
  3297  0E02  1003               	clrc
  3298  0E03  0D49               	rlf	??_scale+5,w
  3299  0E04  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3300  0E05  0084               	movwf	4
  3301  0E06  160A  118A  200A  120A  158A  	fcall	stringdir
  3302  0E0B  00CA               	movwf	??_scale+6
  3303  0E0C  160A  118A  200A  120A  158A  	fcall	stringdir
  3304  0E11  00CB               	movwf	??_scale+7
  3305  0E12  160A  118A  200A  120A  158A  	fcall	stringdir
  3306  0E17  00CC               	movwf	??_scale+8
  3307  0E18  160A  118A  200A  120A  158A  	fcall	stringdir
  3308  0E1D  00CD               	movwf	??_scale+9
  3309  0E1E  084D               	movf	??_scale+9,w
  3310  0E1F  00AD               	movwf	___flmul@a+3
  3311  0E20  084C               	movf	??_scale+8,w
  3312  0E21  00AC               	movwf	___flmul@a+2
  3313  0E22  084B               	movf	??_scale+7,w
  3314  0E23  00AB               	movwf	___flmul@a+1
  3315  0E24  084A               	movf	??_scale+6,w
  3316  0E25  00AA               	movwf	___flmul@a
  3317  0E26  120A  158A  21A2   	fcall	___flmul
  3318  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  3319  0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  3320  0E2B  0829               	movf	?___flmul+3,w
  3321  0E2C  00C3               	movwf	?_scale+3
  3322  0E2D  0828               	movf	?___flmul+2,w
  3323  0E2E  00C2               	movwf	?_scale+2
  3324  0E2F  0827               	movf	?___flmul+1,w
  3325  0E30  00C1               	movwf	?_scale+1
  3326  0E31  0826               	movf	?___flmul,w
  3327  0E32  00C0               	movwf	?_scale
  3328  0E33  0008               	return
  3329  0E34                     l2777:	
  3330                           
  3331                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  3332  0E34  0852               	movf	scale@scl,w
  3333  0E35  00C4               	movwf	??_scale
  3334  0E36  3001               	movlw	1
  3335  0E37                     u4405:	
  3336  0E37  1003               	clrc
  3337  0E38  0DC4               	rlf	??_scale,f
  3338  0E39  3EFF               	addlw	-1
  3339  0E3A  1D03               	skipz
  3340  0E3B  2E37               	goto	u4405
  3341  0E3C  1003               	clrc
  3342  0E3D  0D44               	rlf	??_scale,w
  3343  0E3E  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3344  0E3F  0084               	movwf	4
  3345  0E40  160A  118A  200A  120A  158A  	fcall	stringdir
  3346  0E45  00C5               	movwf	??_scale+1
  3347  0E46  160A  118A  200A  120A  158A  	fcall	stringdir
  3348  0E4B  00C6               	movwf	??_scale+2
  3349  0E4C  160A  118A  200A  120A  158A  	fcall	stringdir
  3350  0E51  00C7               	movwf	??_scale+3
  3351  0E52  160A  118A  200A   	fcall	stringdir
  3352  0E55  00C8               	movwf	??_scale+4
  3353  0E56  0848               	movf	??_scale+4,w
  3354  0E57  00C3               	movwf	?_scale+3
  3355  0E58  0847               	movf	??_scale+3,w
  3356  0E59  00C2               	movwf	?_scale+2
  3357  0E5A  0846               	movf	??_scale+2,w
  3358  0E5B  00C1               	movwf	?_scale+1
  3359  0E5C  0845               	movf	??_scale+1,w
  3360  0E5D  00C0               	movwf	?_scale
  3361  0E5E  0008               	return
  3362  0E5F                     l2781:	
  3363                           
  3364                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  3365  0E5F  0852               	movf	scale@scl,w
  3366  0E60  3A80               	xorlw	128
  3367  0E61  3E12               	addlw	-238
  3368  0E62  1C03               	skipc
  3369  0E63  2F4A               	goto	l2789
  3370                           
  3371                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3372  0E64  300A               	movlw	10
  3373  0E65  00F7               	movwf	___awdiv@divisor
  3374  0E66  3000               	movlw	0
  3375  0E67  00F8               	movwf	___awdiv@divisor+1
  3376  0E68  0852               	movf	scale@scl,w
  3377  0E69  00F2               	movwf	___awmod@dividend
  3378  0E6A  01F3               	clrf	___awmod@dividend+1
  3379  0E6B  1BF2               	btfsc	___awmod@dividend,7
  3380  0E6C  03F3               	decf	___awmod@dividend+1,f
  3381  0E6D  3064               	movlw	100
  3382  0E6E  00F0               	movwf	___awmod@divisor
  3383  0E6F  3000               	movlw	0
  3384  0E70  00F1               	movwf	___awmod@divisor+1
  3385  0E71  160A  158A  270E  120A  158A  	fcall	___awmod
  3386  0E76  0871               	movf	?___awmod+1,w
  3387  0E77  00FA               	movwf	___awdiv@dividend+1
  3388  0E78  0870               	movf	?___awmod,w
  3389  0E79  00F9               	movwf	___awdiv@dividend
  3390  0E7A  160A  158A  27A5  120A  158A  	fcall	___awdiv
  3391  0E7F  0877               	movf	?___awdiv,w
  3392  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  3393  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  3394  0E82  00C4               	movwf	??_scale
  3395  0E83  3001               	movlw	1
  3396  0E84                     u4425:	
  3397  0E84  1003               	clrc
  3398  0E85  0DC4               	rlf	??_scale,f
  3399  0E86  3EFF               	addlw	-1
  3400  0E87  1D03               	skipz
  3401  0E88  2E84               	goto	u4425
  3402  0E89  1003               	clrc
  3403  0E8A  0D44               	rlf	??_scale,w
  3404  0E8B  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3405  0E8C  0084               	movwf	4
  3406  0E8D  160A  118A  200A  120A  158A  	fcall	stringdir
  3407  0E92  00C5               	movwf	??_scale+1
  3408  0E93  160A  118A  200A  120A  158A  	fcall	stringdir
  3409  0E98  00C6               	movwf	??_scale+2
  3410  0E99  160A  118A  200A  120A  158A  	fcall	stringdir
  3411  0E9E  00C7               	movwf	??_scale+3
  3412  0E9F  160A  118A  200A  120A  158A  	fcall	stringdir
  3413  0EA4  00C8               	movwf	??_scale+4
  3414  0EA5  0848               	movf	??_scale+4,w
  3415  0EA6  00A9               	movwf	___flmul@b+3
  3416  0EA7  0847               	movf	??_scale+3,w
  3417  0EA8  00A8               	movwf	___flmul@b+2
  3418  0EA9  0846               	movf	??_scale+2,w
  3419  0EAA  00A7               	movwf	___flmul@b+1
  3420  0EAB  0845               	movf	??_scale+1,w
  3421  0EAC  00A6               	movwf	___flmul@b
  3422  0EAD  3064               	movlw	100
  3423  0EAE  00F7               	movwf	___awdiv@divisor
  3424  0EAF  3000               	movlw	0
  3425  0EB0  00F8               	movwf	___awdiv@divisor+1
  3426  0EB1  0852               	movf	scale@scl,w
  3427  0EB2  00F9               	movwf	___awdiv@dividend
  3428  0EB3  01FA               	clrf	___awdiv@dividend+1
  3429  0EB4  1BF9               	btfsc	___awdiv@dividend,7
  3430  0EB5  03FA               	decf	___awdiv@dividend+1,f
  3431  0EB6  160A  158A  27A5  120A  158A  	fcall	___awdiv
  3432  0EBB  0877               	movf	?___awdiv,w
  3433  0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  3434  0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  3435  0EBE  00C9               	movwf	??_scale+5
  3436  0EBF  3001               	movlw	1
  3437  0EC0                     u4435:	
  3438  0EC0  1003               	clrc
  3439  0EC1  0DC9               	rlf	??_scale+5,f
  3440  0EC2  3EFF               	addlw	-1
  3441  0EC3  1D03               	skipz
  3442  0EC4  2EC0               	goto	u4435
  3443  0EC5  1003               	clrc
  3444  0EC6  0D49               	rlf	??_scale+5,w
  3445  0EC7  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3446  0EC8  0084               	movwf	4
  3447  0EC9  160A  118A  200A  120A  158A  	fcall	stringdir
  3448  0ECE  00CA               	movwf	??_scale+6
  3449  0ECF  160A  118A  200A  120A  158A  	fcall	stringdir
  3450  0ED4  00CB               	movwf	??_scale+7
  3451  0ED5  160A  118A  200A  120A  158A  	fcall	stringdir
  3452  0EDA  00CC               	movwf	??_scale+8
  3453  0EDB  160A  118A  200A  120A  158A  	fcall	stringdir
  3454  0EE0  00CD               	movwf	??_scale+9
  3455  0EE1  084D               	movf	??_scale+9,w
  3456  0EE2  00AD               	movwf	___flmul@a+3
  3457  0EE3  084C               	movf	??_scale+8,w
  3458  0EE4  00AC               	movwf	___flmul@a+2
  3459  0EE5  084B               	movf	??_scale+7,w
  3460  0EE6  00AB               	movwf	___flmul@a+1
  3461  0EE7  084A               	movf	??_scale+6,w
  3462  0EE8  00AA               	movwf	___flmul@a
  3463  0EE9  120A  158A  21A2  120A  158A  	fcall	___flmul
  3464  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  3465  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  3466  0EF0  0829               	movf	?___flmul+3,w
  3467  0EF1  00D1               	movwf	_scale$875+3
  3468  0EF2  0828               	movf	?___flmul+2,w
  3469  0EF3  00D0               	movwf	_scale$875+2
  3470  0EF4  0827               	movf	?___flmul+1,w
  3471  0EF5  00CF               	movwf	_scale$875+1
  3472  0EF6  0826               	movf	?___flmul,w
  3473  0EF7  00CE               	movwf	_scale$875
  3474                           
  3475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3476  0EF8  300A               	movlw	10
  3477  0EF9  00F0               	movwf	___awmod@divisor
  3478  0EFA  3000               	movlw	0
  3479  0EFB  00F1               	movwf	___awmod@divisor+1
  3480  0EFC  0852               	movf	scale@scl,w
  3481  0EFD  00F2               	movwf	___awmod@dividend
  3482  0EFE  01F3               	clrf	___awmod@dividend+1
  3483  0EFF  1BF2               	btfsc	___awmod@dividend,7
  3484  0F00  03F3               	decf	___awmod@dividend+1,f
  3485  0F01  160A  158A  270E  120A  158A  	fcall	___awmod
  3486  0F06  0870               	movf	?___awmod,w
  3487  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  3488  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  3489  0F09  00C4               	movwf	??_scale
  3490  0F0A  3001               	movlw	1
  3491  0F0B                     u4445:	
  3492  0F0B  1003               	clrc
  3493  0F0C  0DC4               	rlf	??_scale,f
  3494  0F0D  3EFF               	addlw	-1
  3495  0F0E  1D03               	skipz
  3496  0F0F  2F0B               	goto	u4445
  3497  0F10  1003               	clrc
  3498  0F11  0D44               	rlf	??_scale,w
  3499  0F12  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3500  0F13  0084               	movwf	4
  3501  0F14  160A  118A  200A  120A  158A  	fcall	stringdir
  3502  0F19  00C5               	movwf	??_scale+1
  3503  0F1A  160A  118A  200A  120A  158A  	fcall	stringdir
  3504  0F1F  00C6               	movwf	??_scale+2
  3505  0F20  160A  118A  200A  120A  158A  	fcall	stringdir
  3506  0F25  00C7               	movwf	??_scale+3
  3507  0F26  160A  118A  200A  120A  158A  	fcall	stringdir
  3508  0F2B  00C8               	movwf	??_scale+4
  3509  0F2C  0848               	movf	??_scale+4,w
  3510  0F2D  00A9               	movwf	___flmul@b+3
  3511  0F2E  0847               	movf	??_scale+3,w
  3512  0F2F  00A8               	movwf	___flmul@b+2
  3513  0F30  0846               	movf	??_scale+2,w
  3514  0F31  00A7               	movwf	___flmul@b+1
  3515  0F32  0845               	movf	??_scale+1,w
  3516  0F33  00A6               	movwf	___flmul@b
  3517  0F34  0851               	movf	_scale$875+3,w
  3518  0F35  00AD               	movwf	___flmul@a+3
  3519  0F36  0850               	movf	_scale$875+2,w
  3520  0F37  00AC               	movwf	___flmul@a+2
  3521  0F38  084F               	movf	_scale$875+1,w
  3522  0F39  00AB               	movwf	___flmul@a+1
  3523  0F3A  084E               	movf	_scale$875,w
  3524  0F3B  00AA               	movwf	___flmul@a
  3525  0F3C  120A  158A  21A2   	fcall	___flmul
  3526  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  3527  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  3528  0F41  0829               	movf	?___flmul+3,w
  3529  0F42  00C3               	movwf	?_scale+3
  3530  0F43  0828               	movf	?___flmul+2,w
  3531  0F44  00C2               	movwf	?_scale+2
  3532  0F45  0827               	movf	?___flmul+1,w
  3533  0F46  00C1               	movwf	?_scale+1
  3534  0F47  0826               	movf	?___flmul,w
  3535  0F48  00C0               	movwf	?_scale
  3536  0F49  0008               	return
  3537  0F4A                     l2789:	
  3538  0F4A  0852               	movf	scale@scl,w
  3539  0F4B  3A80               	xorlw	128
  3540  0F4C  3E75               	addlw	-139
  3541  0F4D  1C03               	skipc
  3542  0F4E  2FD5               	goto	l2795
  3543                           
  3544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3545  0F4F  300A               	movlw	10
  3546  0F50  00F0               	movwf	___awmod@divisor
  3547  0F51  3000               	movlw	0
  3548  0F52  00F1               	movwf	___awmod@divisor+1
  3549  0F53  0852               	movf	scale@scl,w
  3550  0F54  00F2               	movwf	___awmod@dividend
  3551  0F55  01F3               	clrf	___awmod@dividend+1
  3552  0F56  1BF2               	btfsc	___awmod@dividend,7
  3553  0F57  03F3               	decf	___awmod@dividend+1,f
  3554  0F58  160A  158A  270E  120A  158A  	fcall	___awmod
  3555  0F5D  0870               	movf	?___awmod,w
  3556  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  3557  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  3558  0F60  00C4               	movwf	??_scale
  3559  0F61  3001               	movlw	1
  3560  0F62                     u4465:	
  3561  0F62  1003               	clrc
  3562  0F63  0DC4               	rlf	??_scale,f
  3563  0F64  3EFF               	addlw	-1
  3564  0F65  1D03               	skipz
  3565  0F66  2F62               	goto	u4465
  3566  0F67  1003               	clrc
  3567  0F68  0D44               	rlf	??_scale,w
  3568  0F69  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3569  0F6A  0084               	movwf	4
  3570  0F6B  160A  118A  200A  120A  158A  	fcall	stringdir
  3571  0F70  00C5               	movwf	??_scale+1
  3572  0F71  160A  118A  200A  120A  158A  	fcall	stringdir
  3573  0F76  00C6               	movwf	??_scale+2
  3574  0F77  160A  118A  200A  120A  158A  	fcall	stringdir
  3575  0F7C  00C7               	movwf	??_scale+3
  3576  0F7D  160A  118A  200A  120A  158A  	fcall	stringdir
  3577  0F82  00C8               	movwf	??_scale+4
  3578  0F83  0848               	movf	??_scale+4,w
  3579  0F84  00A9               	movwf	___flmul@b+3
  3580  0F85  0847               	movf	??_scale+3,w
  3581  0F86  00A8               	movwf	___flmul@b+2
  3582  0F87  0846               	movf	??_scale+2,w
  3583  0F88  00A7               	movwf	___flmul@b+1
  3584  0F89  0845               	movf	??_scale+1,w
  3585  0F8A  00A6               	movwf	___flmul@b
  3586  0F8B  300A               	movlw	10
  3587  0F8C  00F7               	movwf	___awdiv@divisor
  3588  0F8D  3000               	movlw	0
  3589  0F8E  00F8               	movwf	___awdiv@divisor+1
  3590  0F8F  0852               	movf	scale@scl,w
  3591  0F90  00F9               	movwf	___awdiv@dividend
  3592  0F91  01FA               	clrf	___awdiv@dividend+1
  3593  0F92  1BF9               	btfsc	___awdiv@dividend,7
  3594  0F93  03FA               	decf	___awdiv@dividend+1,f
  3595  0F94  160A  158A  27A5  120A  158A  	fcall	___awdiv
  3596  0F99  0877               	movf	?___awdiv,w
  3597  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  3598  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  3599  0F9C  00C9               	movwf	??_scale+5
  3600  0F9D  3001               	movlw	1
  3601  0F9E                     u4475:	
  3602  0F9E  1003               	clrc
  3603  0F9F  0DC9               	rlf	??_scale+5,f
  3604  0FA0  3EFF               	addlw	-1
  3605  0FA1  1D03               	skipz
  3606  0FA2  2F9E               	goto	u4475
  3607  0FA3  1003               	clrc
  3608  0FA4  0D49               	rlf	??_scale+5,w
  3609  0FA5  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3610  0FA6  0084               	movwf	4
  3611  0FA7  160A  118A  200A  120A  158A  	fcall	stringdir
  3612  0FAC  00CA               	movwf	??_scale+6
  3613  0FAD  160A  118A  200A  120A  158A  	fcall	stringdir
  3614  0FB2  00CB               	movwf	??_scale+7
  3615  0FB3  160A  118A  200A  120A  158A  	fcall	stringdir
  3616  0FB8  00CC               	movwf	??_scale+8
  3617  0FB9  160A  118A  200A  120A  158A  	fcall	stringdir
  3618  0FBE  00CD               	movwf	??_scale+9
  3619  0FBF  084D               	movf	??_scale+9,w
  3620  0FC0  00AD               	movwf	___flmul@a+3
  3621  0FC1  084C               	movf	??_scale+8,w
  3622  0FC2  00AC               	movwf	___flmul@a+2
  3623  0FC3  084B               	movf	??_scale+7,w
  3624  0FC4  00AB               	movwf	___flmul@a+1
  3625  0FC5  084A               	movf	??_scale+6,w
  3626  0FC6  00AA               	movwf	___flmul@a
  3627  0FC7  120A  158A  21A2   	fcall	___flmul
  3628  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  3629  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  3630  0FCC  0829               	movf	?___flmul+3,w
  3631  0FCD  00C3               	movwf	?_scale+3
  3632  0FCE  0828               	movf	?___flmul+2,w
  3633  0FCF  00C2               	movwf	?_scale+2
  3634  0FD0  0827               	movf	?___flmul+1,w
  3635  0FD1  00C1               	movwf	?_scale+1
  3636  0FD2  0826               	movf	?___flmul,w
  3637  0FD3  00C0               	movwf	?_scale
  3638  0FD4  0008               	return
  3639  0FD5                     l2795:	
  3640                           
  3641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  3642  0FD5  0852               	movf	scale@scl,w
  3643  0FD6  00C4               	movwf	??_scale
  3644  0FD7  3001               	movlw	1
  3645  0FD8                     u4485:	
  3646  0FD8  1003               	clrc
  3647  0FD9  0DC4               	rlf	??_scale,f
  3648  0FDA  3EFF               	addlw	-1
  3649  0FDB  1D03               	skipz
  3650  0FDC  2FD8               	goto	u4485
  3651  0FDD  1003               	clrc
  3652  0FDE  0D44               	rlf	??_scale,w
  3653  0FDF  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3654  0FE0  0084               	movwf	4
  3655  0FE1  160A  118A  200A  120A  158A  	fcall	stringdir
  3656  0FE6  00C5               	movwf	??_scale+1
  3657  0FE7  160A  118A  200A  120A  158A  	fcall	stringdir
  3658  0FEC  00C6               	movwf	??_scale+2
  3659  0FED  160A  118A  200A  120A  158A  	fcall	stringdir
  3660  0FF2  00C7               	movwf	??_scale+3
  3661  0FF3  160A  118A  200A   	fcall	stringdir
  3662  0FF6  00C8               	movwf	??_scale+4
  3663  0FF7  0848               	movf	??_scale+4,w
  3664  0FF8  00C3               	movwf	?_scale+3
  3665  0FF9  0847               	movf	??_scale+3,w
  3666  0FFA  00C2               	movwf	?_scale+2
  3667  0FFB  0846               	movf	??_scale+2,w
  3668  0FFC  00C1               	movwf	?_scale+1
  3669  0FFD  0845               	movf	??_scale+1,w
  3670  0FFE  00C0               	movwf	?_scale
  3671  0FFF  0008               	return
  3672  1000                     __end_of_scale:	
  3673                           
  3674                           	psect	text3
  3675  1F0E                     __ptext3:	
  3676 ;; *************** function ___awmod *****************
  3677 ;; Defined at:
  3678 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;  divisor         2    0[COMMON] int 
  3681 ;;  dividend        2    2[COMMON] int 
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;  sign            1    6[COMMON] unsigned char 
  3684 ;;  counter         1    5[COMMON] unsigned char 
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  2    0[COMMON] int 
  3687 ;; Registers used:
  3688 ;;		wreg, status,2, status,0
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3694 ;;      Params:         4       0       0       0       0
  3695 ;;      Locals:         2       0       0       0       0
  3696 ;;      Temps:          1       0       0       0       0
  3697 ;;      Totals:         7       0       0       0       0
  3698 ;;Total ram usage:        7 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; This function calls:
  3701 ;;		Nothing
  3702 ;; This function is called by:
  3703 ;;		_scale
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           
  3708                           ;psect for function ___awmod
  3709  1F0E                     ___awmod:	
  3710                           
  3711                           ;incstack = 0
  3712                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3713  1F0E  01F6               	clrf	___awmod@sign
  3714  1F0F  1FF3               	btfss	___awmod@dividend+1,7
  3715  1F10  2F18               	goto	l2299
  3716  1F11  09F2               	comf	___awmod@dividend,f
  3717  1F12  09F3               	comf	___awmod@dividend+1,f
  3718  1F13  0AF2               	incf	___awmod@dividend,f
  3719  1F14  1903               	skipnz
  3720  1F15  0AF3               	incf	___awmod@dividend+1,f
  3721  1F16  01F6               	clrf	___awmod@sign
  3722  1F17  0AF6               	incf	___awmod@sign,f
  3723  1F18                     l2299:	
  3724  1F18  1FF1               	btfss	___awmod@divisor+1,7
  3725  1F19  2F1F               	goto	l2303
  3726  1F1A  09F0               	comf	___awmod@divisor,f
  3727  1F1B  09F1               	comf	___awmod@divisor+1,f
  3728  1F1C  0AF0               	incf	___awmod@divisor,f
  3729  1F1D  1903               	skipnz
  3730  1F1E  0AF1               	incf	___awmod@divisor+1,f
  3731  1F1F                     l2303:	
  3732  1F1F  0870               	movf	___awmod@divisor,w
  3733  1F20  0471               	iorwf	___awmod@divisor+1,w
  3734  1F21  1903               	btfsc	3,2
  3735  1F22  2F4C               	goto	l2321
  3736  1F23  01F5               	clrf	___awmod@counter
  3737  1F24  0AF5               	incf	___awmod@counter,f
  3738  1F25                     l2311:	
  3739  1F25  1BF1               	btfsc	___awmod@divisor+1,7
  3740  1F26  2F33               	goto	l2313
  3741  1F27  3001               	movlw	1
  3742  1F28                     u3215:	
  3743  1F28  1003               	clrc
  3744  1F29  0DF0               	rlf	___awmod@divisor,f
  3745  1F2A  0DF1               	rlf	___awmod@divisor+1,f
  3746  1F2B  3EFF               	addlw	-1
  3747  1F2C  1D03               	skipz
  3748  1F2D  2F28               	goto	u3215
  3749  1F2E  3001               	movlw	1
  3750  1F2F  00F4               	movwf	??___awmod
  3751  1F30  0874               	movf	??___awmod,w
  3752  1F31  07F5               	addwf	___awmod@counter,f
  3753  1F32  2F25               	goto	l2311
  3754  1F33                     l2313:	
  3755  1F33  0871               	movf	___awmod@divisor+1,w
  3756  1F34  0273               	subwf	___awmod@dividend+1,w
  3757  1F35  1D03               	skipz
  3758  1F36  2F39               	goto	u3235
  3759  1F37  0870               	movf	___awmod@divisor,w
  3760  1F38  0272               	subwf	___awmod@dividend,w
  3761  1F39                     u3235:	
  3762  1F39  1C03               	skipc
  3763  1F3A  2F41               	goto	l2317
  3764  1F3B  0870               	movf	___awmod@divisor,w
  3765  1F3C  02F2               	subwf	___awmod@dividend,f
  3766  1F3D  0871               	movf	___awmod@divisor+1,w
  3767  1F3E  1C03               	skipc
  3768  1F3F  03F3               	decf	___awmod@dividend+1,f
  3769  1F40  02F3               	subwf	___awmod@dividend+1,f
  3770  1F41                     l2317:	
  3771  1F41  3001               	movlw	1
  3772  1F42                     u3245:	
  3773  1F42  1003               	clrc
  3774  1F43  0CF1               	rrf	___awmod@divisor+1,f
  3775  1F44  0CF0               	rrf	___awmod@divisor,f
  3776  1F45  3EFF               	addlw	-1
  3777  1F46  1D03               	skipz
  3778  1F47  2F42               	goto	u3245
  3779  1F48  3001               	movlw	1
  3780  1F49  02F5               	subwf	___awmod@counter,f
  3781  1F4A  1D03               	btfss	3,2
  3782  1F4B  2F33               	goto	l2313
  3783  1F4C                     l2321:	
  3784  1F4C  0876               	movf	___awmod@sign,w
  3785  1F4D  1903               	btfsc	3,2
  3786  1F4E  2F54               	goto	l2325
  3787  1F4F  09F2               	comf	___awmod@dividend,f
  3788  1F50  09F3               	comf	___awmod@dividend+1,f
  3789  1F51  0AF2               	incf	___awmod@dividend,f
  3790  1F52  1903               	skipnz
  3791  1F53  0AF3               	incf	___awmod@dividend+1,f
  3792  1F54                     l2325:	
  3793  1F54  0873               	movf	___awmod@dividend+1,w
  3794  1F55  00F1               	movwf	?___awmod+1
  3795  1F56  0872               	movf	___awmod@dividend,w
  3796  1F57  00F0               	movwf	?___awmod
  3797  1F58  0008               	return
  3798  1F59                     __end_of___awmod:	
  3799                           
  3800                           	psect	text4
  3801  1FA5                     __ptext4:	
  3802 ;; *************** function ___awdiv *****************
  3803 ;; Defined at:
  3804 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;  divisor         2    7[COMMON] int 
  3807 ;;  dividend        2    9[COMMON] int 
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;  quotient        2    2[BANK0 ] int 
  3810 ;;  sign            1    1[BANK0 ] unsigned char 
  3811 ;;  counter         1    0[BANK0 ] unsigned char 
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  2    7[COMMON] int 
  3814 ;; Registers used:
  3815 ;;		wreg, status,2, status,0
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3821 ;;      Params:         4       0       0       0       0
  3822 ;;      Locals:         0       4       0       0       0
  3823 ;;      Temps:          1       0       0       0       0
  3824 ;;      Totals:         5       4       0       0       0
  3825 ;;Total ram usage:        9 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; This function calls:
  3828 ;;		Nothing
  3829 ;; This function is called by:
  3830 ;;		_scale
  3831 ;;		_sprintf
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           
  3836                           ;psect for function ___awdiv
  3837  1FA5                     ___awdiv:	
  3838                           
  3839                           ;incstack = 0
  3840                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3841  1FA5  1283               	bcf	3,5	;RP0=0, select bank0
  3842  1FA6  1303               	bcf	3,6	;RP1=0, select bank0
  3843  1FA7  01A1               	clrf	___awdiv@sign
  3844  1FA8  1FF8               	btfss	___awdiv@divisor+1,7
  3845  1FA9  2FB1               	goto	l2255
  3846  1FAA  09F7               	comf	___awdiv@divisor,f
  3847  1FAB  09F8               	comf	___awdiv@divisor+1,f
  3848  1FAC  0AF7               	incf	___awdiv@divisor,f
  3849  1FAD  1903               	skipnz
  3850  1FAE  0AF8               	incf	___awdiv@divisor+1,f
  3851  1FAF  01A1               	clrf	___awdiv@sign
  3852  1FB0  0AA1               	incf	___awdiv@sign,f
  3853  1FB1                     l2255:	
  3854  1FB1  1FFA               	btfss	___awdiv@dividend+1,7
  3855  1FB2  2FBC               	goto	l2261
  3856  1FB3  09F9               	comf	___awdiv@dividend,f
  3857  1FB4  09FA               	comf	___awdiv@dividend+1,f
  3858  1FB5  0AF9               	incf	___awdiv@dividend,f
  3859  1FB6  1903               	skipnz
  3860  1FB7  0AFA               	incf	___awdiv@dividend+1,f
  3861  1FB8  3001               	movlw	1
  3862  1FB9  00FB               	movwf	??___awdiv
  3863  1FBA  087B               	movf	??___awdiv,w
  3864  1FBB  06A1               	xorwf	___awdiv@sign,f
  3865  1FBC                     l2261:	
  3866  1FBC  01A2               	clrf	___awdiv@quotient
  3867  1FBD  01A3               	clrf	___awdiv@quotient+1
  3868  1FBE  0877               	movf	___awdiv@divisor,w
  3869  1FBF  0478               	iorwf	___awdiv@divisor+1,w
  3870  1FC0  1903               	btfsc	3,2
  3871  1FC1  2FF3               	goto	l2283
  3872  1FC2  01A0               	clrf	___awdiv@counter
  3873  1FC3  0AA0               	incf	___awdiv@counter,f
  3874  1FC4                     l2271:	
  3875  1FC4  1BF8               	btfsc	___awdiv@divisor+1,7
  3876  1FC5  2FD2               	goto	l2273
  3877  1FC6  3001               	movlw	1
  3878  1FC7                     u3115:	
  3879  1FC7  1003               	clrc
  3880  1FC8  0DF7               	rlf	___awdiv@divisor,f
  3881  1FC9  0DF8               	rlf	___awdiv@divisor+1,f
  3882  1FCA  3EFF               	addlw	-1
  3883  1FCB  1D03               	skipz
  3884  1FCC  2FC7               	goto	u3115
  3885  1FCD  3001               	movlw	1
  3886  1FCE  00FB               	movwf	??___awdiv
  3887  1FCF  087B               	movf	??___awdiv,w
  3888  1FD0  07A0               	addwf	___awdiv@counter,f
  3889  1FD1  2FC4               	goto	l2271
  3890  1FD2                     l2273:	
  3891  1FD2  3001               	movlw	1
  3892  1FD3                     u3135:	
  3893  1FD3  1003               	clrc
  3894  1FD4  0DA2               	rlf	___awdiv@quotient,f
  3895  1FD5  0DA3               	rlf	___awdiv@quotient+1,f
  3896  1FD6  3EFF               	addlw	-1
  3897  1FD7  1D03               	skipz
  3898  1FD8  2FD3               	goto	u3135
  3899  1FD9  0878               	movf	___awdiv@divisor+1,w
  3900  1FDA  027A               	subwf	___awdiv@dividend+1,w
  3901  1FDB  1D03               	skipz
  3902  1FDC  2FDF               	goto	u3145
  3903  1FDD  0877               	movf	___awdiv@divisor,w
  3904  1FDE  0279               	subwf	___awdiv@dividend,w
  3905  1FDF                     u3145:	
  3906  1FDF  1C03               	skipc
  3907  1FE0  2FE8               	goto	l2279
  3908  1FE1  0877               	movf	___awdiv@divisor,w
  3909  1FE2  02F9               	subwf	___awdiv@dividend,f
  3910  1FE3  0878               	movf	___awdiv@divisor+1,w
  3911  1FE4  1C03               	skipc
  3912  1FE5  03FA               	decf	___awdiv@dividend+1,f
  3913  1FE6  02FA               	subwf	___awdiv@dividend+1,f
  3914  1FE7  1422               	bsf	___awdiv@quotient,0
  3915  1FE8                     l2279:	
  3916  1FE8  3001               	movlw	1
  3917  1FE9                     u3155:	
  3918  1FE9  1003               	clrc
  3919  1FEA  0CF8               	rrf	___awdiv@divisor+1,f
  3920  1FEB  0CF7               	rrf	___awdiv@divisor,f
  3921  1FEC  3EFF               	addlw	-1
  3922  1FED  1D03               	skipz
  3923  1FEE  2FE9               	goto	u3155
  3924  1FEF  3001               	movlw	1
  3925  1FF0  02A0               	subwf	___awdiv@counter,f
  3926  1FF1  1D03               	btfss	3,2
  3927  1FF2  2FD2               	goto	l2273
  3928  1FF3                     l2283:	
  3929  1FF3  0821               	movf	___awdiv@sign,w
  3930  1FF4  1903               	btfsc	3,2
  3931  1FF5  2FFB               	goto	l2287
  3932  1FF6  09A2               	comf	___awdiv@quotient,f
  3933  1FF7  09A3               	comf	___awdiv@quotient+1,f
  3934  1FF8  0AA2               	incf	___awdiv@quotient,f
  3935  1FF9  1903               	skipnz
  3936  1FFA  0AA3               	incf	___awdiv@quotient+1,f
  3937  1FFB                     l2287:	
  3938  1FFB  0823               	movf	___awdiv@quotient+1,w
  3939  1FFC  00F8               	movwf	?___awdiv+1
  3940  1FFD  0822               	movf	___awdiv@quotient,w
  3941  1FFE  00F7               	movwf	?___awdiv
  3942  1FFF  0008               	return
  3943  2000                     __end_of___awdiv:	
  3944                           
  3945                           	psect	text5
  3946  1CF9                     __ptext5:	
  3947 ;; *************** function _isdigit *****************
  3948 ;; Defined at:
  3949 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;  c               1    wreg     unsigned char 
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;  c               1    1[COMMON] unsigned char 
  3954 ;; Return value:  Size  Location     Type
  3955 ;;		None               void
  3956 ;; Registers used:
  3957 ;;		wreg, status,2, status,0
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3963 ;;      Params:         0       0       0       0       0
  3964 ;;      Locals:         2       0       0       0       0
  3965 ;;      Temps:          0       0       0       0       0
  3966 ;;      Totals:         2       0       0       0       0
  3967 ;;Total ram usage:        2 bytes
  3968 ;; Hardware stack levels used:    1
  3969 ;; This function calls:
  3970 ;;		Nothing
  3971 ;; This function is called by:
  3972 ;;		_sprintf
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975                           
  3976                           
  3977                           ;psect for function _isdigit
  3978  1CF9                     _isdigit:	
  3979                           
  3980                           ;incstack = 0
  3981                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3982                           ;isdigit@c stored from wreg
  3983  1CF9  00F1               	movwf	isdigit@c
  3984  1CFA  01F0               	clrf	_isdigit$684
  3985  1CFB  303A               	movlw	58
  3986  1CFC  0271               	subwf	isdigit@c,w
  3987  1CFD  1803               	skipnc
  3988  1CFE  2D05               	goto	l2807
  3989  1CFF  3030               	movlw	48
  3990  1D00  0271               	subwf	isdigit@c,w
  3991  1D01  1C03               	skipc
  3992  1D02  2D05               	goto	l2807
  3993  1D03  01F0               	clrf	_isdigit$684
  3994  1D04  0AF0               	incf	_isdigit$684,f
  3995  1D05                     l2807:	
  3996  1D05  0C70               	rrf	_isdigit$684,w
  3997  1D06  0008               	return
  3998  1D07                     __end_of_isdigit:	
  3999                           
  4000                           	psect	text6
  4001  0004                     __ptext6:	
  4002 ;; *************** function _fround *****************
  4003 ;; Defined at:
  4004 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;  prec            1    wreg     unsigned char 
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;  prec            1   51[BANK0 ] unsigned char 
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  4   32[BANK0 ] unsigned char 
  4011 ;; Registers used:
  4012 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4018 ;;      Params:         0       4       0       0       0
  4019 ;;      Locals:         0       9       0       0       0
  4020 ;;      Temps:          0       7       0       0       0
  4021 ;;      Totals:         0      20       0       0       0
  4022 ;;Total ram usage:       20 bytes
  4023 ;; Hardware stack levels used:    1
  4024 ;; Hardware stack levels required when called:    2
  4025 ;; This function calls:
  4026 ;;		___flmul
  4027 ;;		___lwdiv
  4028 ;;		___lwmod
  4029 ;; This function is called by:
  4030 ;;		_sprintf
  4031 ;; This function uses a non-reentrant model
  4032 ;;
  4033                           
  4034                           
  4035                           ;psect for function _fround
  4036  0004                     _fround:	
  4037                           
  4038                           ;incstack = 0
  4039                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4040                           ;fround@prec stored from wreg
  4041  0004  1283               	bcf	3,5	;RP0=0, select bank0
  4042  0005  1303               	bcf	3,6	;RP1=0, select bank0
  4043  0006  00D3               	movwf	fround@prec
  4044                           
  4045                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  4046  0007  306E               	movlw	110
  4047  0008  0253               	subwf	fround@prec,w
  4048  0009  1C03               	skipc
  4049  000A  2916               	goto	l2749
  4050                           
  4051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4052  000B  303F               	movlw	63
  4053  000C  00A9               	movwf	___flmul@b+3
  4054  000D  3000               	movlw	0
  4055  000E  00A8               	movwf	___flmul@b+2
  4056  000F  3000               	movlw	0
  4057  0010  00A7               	movwf	___flmul@b+1
  4058  0011  3000               	movlw	0
  4059  0012  00A6               	movwf	___flmul@b
  4060  0013  3064               	movlw	100
  4061  0014  00F6               	movwf	___lwdiv@divisor
  4062  0015  3000               	movlw	0
  4063  0016  00F7               	movwf	___lwdiv@divisor+1
  4064  0017  0853               	movf	fround@prec,w
  4065  0018  00C4               	movwf	??_fround
  4066  0019  01C5               	clrf	??_fround+1
  4067  001A  0844               	movf	??_fround,w
  4068  001B  00F8               	movwf	___lwdiv@dividend
  4069  001C  0845               	movf	??_fround+1,w
  4070  001D  00F9               	movwf	___lwdiv@dividend+1
  4071  001E  160A  158A  264D  120A  118A  	fcall	___lwdiv
  4072  0023  0876               	movf	?___lwdiv,w
  4073  0024  1283               	bcf	3,5	;RP0=0, select bank0
  4074  0025  1303               	bcf	3,6	;RP1=0, select bank0
  4075  0026  00C6               	movwf	??_fround+2
  4076  0027  3001               	movlw	1
  4077  0028                     u4255:	
  4078  0028  1003               	clrc
  4079  0029  0DC6               	rlf	??_fround+2,f
  4080  002A  3EFF               	addlw	-1
  4081  002B  1D03               	skipz
  4082  002C  2828               	goto	u4255
  4083  002D  1003               	clrc
  4084  002E  0D46               	rlf	??_fround+2,w
  4085  002F  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4086  0030  0084               	movwf	4
  4087  0031  160A  118A  200A  120A  118A  	fcall	stringdir
  4088  0036  00C7               	movwf	??_fround+3
  4089  0037  160A  118A  200A  120A  118A  	fcall	stringdir
  4090  003C  00C8               	movwf	??_fround+4
  4091  003D  160A  118A  200A  120A  118A  	fcall	stringdir
  4092  0042  00C9               	movwf	??_fround+5
  4093  0043  160A  118A  200A  120A  118A  	fcall	stringdir
  4094  0048  00CA               	movwf	??_fround+6
  4095  0049  084A               	movf	??_fround+6,w
  4096  004A  00AD               	movwf	___flmul@a+3
  4097  004B  0849               	movf	??_fround+5,w
  4098  004C  00AC               	movwf	___flmul@a+2
  4099  004D  0848               	movf	??_fround+4,w
  4100  004E  00AB               	movwf	___flmul@a+1
  4101  004F  0847               	movf	??_fround+3,w
  4102  0050  00AA               	movwf	___flmul@a
  4103  0051  120A  158A  21A2  120A  118A  	fcall	___flmul
  4104  0056  1283               	bcf	3,5	;RP0=0, select bank0
  4105  0057  1303               	bcf	3,6	;RP1=0, select bank0
  4106  0058  0829               	movf	?___flmul+3,w
  4107  0059  00D2               	movwf	_fround$873+3
  4108  005A  0828               	movf	?___flmul+2,w
  4109  005B  00D1               	movwf	_fround$873+2
  4110  005C  0827               	movf	?___flmul+1,w
  4111  005D  00D0               	movwf	_fround$873+1
  4112  005E  0826               	movf	?___flmul,w
  4113  005F  00CF               	movwf	_fround$873
  4114                           
  4115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4116  0060  300A               	movlw	10
  4117  0061  00F6               	movwf	___lwdiv@divisor
  4118  0062  3000               	movlw	0
  4119  0063  00F7               	movwf	___lwdiv@divisor+1
  4120  0064  0853               	movf	fround@prec,w
  4121  0065  00C4               	movwf	??_fround
  4122  0066  01C5               	clrf	??_fround+1
  4123  0067  0844               	movf	??_fround,w
  4124  0068  00F2               	movwf	___lwmod@dividend
  4125  0069  0845               	movf	??_fround+1,w
  4126  006A  00F3               	movwf	___lwmod@dividend+1
  4127  006B  3064               	movlw	100
  4128  006C  00F0               	movwf	___lwmod@divisor
  4129  006D  3000               	movlw	0
  4130  006E  00F1               	movwf	___lwmod@divisor+1
  4131  006F  160A  158A  25A9  120A  118A  	fcall	___lwmod
  4132  0074  0871               	movf	?___lwmod+1,w
  4133  0075  00F9               	movwf	___lwdiv@dividend+1
  4134  0076  0870               	movf	?___lwmod,w
  4135  0077  00F8               	movwf	___lwdiv@dividend
  4136  0078  160A  158A  264D  120A  118A  	fcall	___lwdiv
  4137  007D  0876               	movf	?___lwdiv,w
  4138  007E  1283               	bcf	3,5	;RP0=0, select bank0
  4139  007F  1303               	bcf	3,6	;RP1=0, select bank0
  4140  0080  00C6               	movwf	??_fround+2
  4141  0081  3001               	movlw	1
  4142  0082                     u4265:	
  4143  0082  1003               	clrc
  4144  0083  0DC6               	rlf	??_fround+2,f
  4145  0084  3EFF               	addlw	-1
  4146  0085  1D03               	skipz
  4147  0086  2882               	goto	u4265
  4148  0087  1003               	clrc
  4149  0088  0D46               	rlf	??_fround+2,w
  4150  0089  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4151  008A  0084               	movwf	4
  4152  008B  160A  118A  200A  120A  118A  	fcall	stringdir
  4153  0090  00C7               	movwf	??_fround+3
  4154  0091  160A  118A  200A  120A  118A  	fcall	stringdir
  4155  0096  00C8               	movwf	??_fround+4
  4156  0097  160A  118A  200A  120A  118A  	fcall	stringdir
  4157  009C  00C9               	movwf	??_fround+5
  4158  009D  160A  118A  200A  120A  118A  	fcall	stringdir
  4159  00A2  00CA               	movwf	??_fround+6
  4160  00A3  084A               	movf	??_fround+6,w
  4161  00A4  00A9               	movwf	___flmul@b+3
  4162  00A5  0849               	movf	??_fround+5,w
  4163  00A6  00A8               	movwf	___flmul@b+2
  4164  00A7  0848               	movf	??_fround+4,w
  4165  00A8  00A7               	movwf	___flmul@b+1
  4166  00A9  0847               	movf	??_fround+3,w
  4167  00AA  00A6               	movwf	___flmul@b
  4168  00AB  0852               	movf	_fround$873+3,w
  4169  00AC  00AD               	movwf	___flmul@a+3
  4170  00AD  0851               	movf	_fround$873+2,w
  4171  00AE  00AC               	movwf	___flmul@a+2
  4172  00AF  0850               	movf	_fround$873+1,w
  4173  00B0  00AB               	movwf	___flmul@a+1
  4174  00B1  084F               	movf	_fround$873,w
  4175  00B2  00AA               	movwf	___flmul@a
  4176  00B3  120A  158A  21A2  120A  118A  	fcall	___flmul
  4177  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  4178  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  4179  00BA  0829               	movf	?___flmul+3,w
  4180  00BB  00CE               	movwf	_fround$874+3
  4181  00BC  0828               	movf	?___flmul+2,w
  4182  00BD  00CD               	movwf	_fround$874+2
  4183  00BE  0827               	movf	?___flmul+1,w
  4184  00BF  00CC               	movwf	_fround$874+1
  4185  00C0  0826               	movf	?___flmul,w
  4186  00C1  00CB               	movwf	_fround$874
  4187                           
  4188                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4189  00C2  300A               	movlw	10
  4190  00C3  00F0               	movwf	___lwmod@divisor
  4191  00C4  3000               	movlw	0
  4192  00C5  00F1               	movwf	___lwmod@divisor+1
  4193  00C6  0853               	movf	fround@prec,w
  4194  00C7  00C4               	movwf	??_fround
  4195  00C8  01C5               	clrf	??_fround+1
  4196  00C9  0844               	movf	??_fround,w
  4197  00CA  00F2               	movwf	___lwmod@dividend
  4198  00CB  0845               	movf	??_fround+1,w
  4199  00CC  00F3               	movwf	___lwmod@dividend+1
  4200  00CD  160A  158A  25A9  120A  118A  	fcall	___lwmod
  4201  00D2  0870               	movf	?___lwmod,w
  4202  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  4203  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  4204  00D5  00C6               	movwf	??_fround+2
  4205  00D6  3001               	movlw	1
  4206  00D7                     u4275:	
  4207  00D7  1003               	clrc
  4208  00D8  0DC6               	rlf	??_fround+2,f
  4209  00D9  3EFF               	addlw	-1
  4210  00DA  1D03               	skipz
  4211  00DB  28D7               	goto	u4275
  4212  00DC  1003               	clrc
  4213  00DD  0D46               	rlf	??_fround+2,w
  4214  00DE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4215  00DF  0084               	movwf	4
  4216  00E0  160A  118A  200A  120A  118A  	fcall	stringdir
  4217  00E5  00C7               	movwf	??_fround+3
  4218  00E6  160A  118A  200A  120A  118A  	fcall	stringdir
  4219  00EB  00C8               	movwf	??_fround+4
  4220  00EC  160A  118A  200A  120A  118A  	fcall	stringdir
  4221  00F1  00C9               	movwf	??_fround+5
  4222  00F2  160A  118A  200A  120A  118A  	fcall	stringdir
  4223  00F7  00CA               	movwf	??_fround+6
  4224  00F8  084A               	movf	??_fround+6,w
  4225  00F9  00A9               	movwf	___flmul@b+3
  4226  00FA  0849               	movf	??_fround+5,w
  4227  00FB  00A8               	movwf	___flmul@b+2
  4228  00FC  0848               	movf	??_fround+4,w
  4229  00FD  00A7               	movwf	___flmul@b+1
  4230  00FE  0847               	movf	??_fround+3,w
  4231  00FF  00A6               	movwf	___flmul@b
  4232  0100  084E               	movf	_fround$874+3,w
  4233  0101  00AD               	movwf	___flmul@a+3
  4234  0102  084D               	movf	_fround$874+2,w
  4235  0103  00AC               	movwf	___flmul@a+2
  4236  0104  084C               	movf	_fround$874+1,w
  4237  0105  00AB               	movwf	___flmul@a+1
  4238  0106  084B               	movf	_fround$874,w
  4239  0107  00AA               	movwf	___flmul@a
  4240  0108  120A  158A  21A2   	fcall	___flmul
  4241  010B  1283               	bcf	3,5	;RP0=0, select bank0
  4242  010C  1303               	bcf	3,6	;RP1=0, select bank0
  4243  010D  0829               	movf	?___flmul+3,w
  4244  010E  00C3               	movwf	?_fround+3
  4245  010F  0828               	movf	?___flmul+2,w
  4246  0110  00C2               	movwf	?_fround+2
  4247  0111  0827               	movf	?___flmul+1,w
  4248  0112  00C1               	movwf	?_fround+1
  4249  0113  0826               	movf	?___flmul,w
  4250  0114  00C0               	movwf	?_fround
  4251  0115  0008               	return
  4252  0116                     l2749:	
  4253  0116  300B               	movlw	11
  4254  0117  0253               	subwf	fround@prec,w
  4255  0118  1C03               	skipc
  4256  0119  29C3               	goto	l2755
  4257                           
  4258                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4259  011A  303F               	movlw	63
  4260  011B  00A9               	movwf	___flmul@b+3
  4261  011C  3000               	movlw	0
  4262  011D  00A8               	movwf	___flmul@b+2
  4263  011E  3000               	movlw	0
  4264  011F  00A7               	movwf	___flmul@b+1
  4265  0120  3000               	movlw	0
  4266  0121  00A6               	movwf	___flmul@b
  4267  0122  300A               	movlw	10
  4268  0123  00F6               	movwf	___lwdiv@divisor
  4269  0124  3000               	movlw	0
  4270  0125  00F7               	movwf	___lwdiv@divisor+1
  4271  0126  0853               	movf	fround@prec,w
  4272  0127  00C4               	movwf	??_fround
  4273  0128  01C5               	clrf	??_fround+1
  4274  0129  0844               	movf	??_fround,w
  4275  012A  00F8               	movwf	___lwdiv@dividend
  4276  012B  0845               	movf	??_fround+1,w
  4277  012C  00F9               	movwf	___lwdiv@dividend+1
  4278  012D  160A  158A  264D  120A  118A  	fcall	___lwdiv
  4279  0132  0876               	movf	?___lwdiv,w
  4280  0133  1283               	bcf	3,5	;RP0=0, select bank0
  4281  0134  1303               	bcf	3,6	;RP1=0, select bank0
  4282  0135  00C6               	movwf	??_fround+2
  4283  0136  3001               	movlw	1
  4284  0137                     u4295:	
  4285  0137  1003               	clrc
  4286  0138  0DC6               	rlf	??_fround+2,f
  4287  0139  3EFF               	addlw	-1
  4288  013A  1D03               	skipz
  4289  013B  2937               	goto	u4295
  4290  013C  1003               	clrc
  4291  013D  0D46               	rlf	??_fround+2,w
  4292  013E  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4293  013F  0084               	movwf	4
  4294  0140  160A  118A  200A  120A  118A  	fcall	stringdir
  4295  0145  00C7               	movwf	??_fround+3
  4296  0146  160A  118A  200A  120A  118A  	fcall	stringdir
  4297  014B  00C8               	movwf	??_fround+4
  4298  014C  160A  118A  200A  120A  118A  	fcall	stringdir
  4299  0151  00C9               	movwf	??_fround+5
  4300  0152  160A  118A  200A  120A  118A  	fcall	stringdir
  4301  0157  00CA               	movwf	??_fround+6
  4302  0158  084A               	movf	??_fround+6,w
  4303  0159  00AD               	movwf	___flmul@a+3
  4304  015A  0849               	movf	??_fround+5,w
  4305  015B  00AC               	movwf	___flmul@a+2
  4306  015C  0848               	movf	??_fround+4,w
  4307  015D  00AB               	movwf	___flmul@a+1
  4308  015E  0847               	movf	??_fround+3,w
  4309  015F  00AA               	movwf	___flmul@a
  4310  0160  120A  158A  21A2  120A  118A  	fcall	___flmul
  4311  0165  1283               	bcf	3,5	;RP0=0, select bank0
  4312  0166  1303               	bcf	3,6	;RP1=0, select bank0
  4313  0167  0829               	movf	?___flmul+3,w
  4314  0168  00D2               	movwf	_fround$873+3
  4315  0169  0828               	movf	?___flmul+2,w
  4316  016A  00D1               	movwf	_fround$873+2
  4317  016B  0827               	movf	?___flmul+1,w
  4318  016C  00D0               	movwf	_fround$873+1
  4319  016D  0826               	movf	?___flmul,w
  4320  016E  00CF               	movwf	_fround$873
  4321                           
  4322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4323  016F  300A               	movlw	10
  4324  0170  00F0               	movwf	___lwmod@divisor
  4325  0171  3000               	movlw	0
  4326  0172  00F1               	movwf	___lwmod@divisor+1
  4327  0173  0853               	movf	fround@prec,w
  4328  0174  00C4               	movwf	??_fround
  4329  0175  01C5               	clrf	??_fround+1
  4330  0176  0844               	movf	??_fround,w
  4331  0177  00F2               	movwf	___lwmod@dividend
  4332  0178  0845               	movf	??_fround+1,w
  4333  0179  00F3               	movwf	___lwmod@dividend+1
  4334  017A  160A  158A  25A9  120A  118A  	fcall	___lwmod
  4335  017F  0870               	movf	?___lwmod,w
  4336  0180  1283               	bcf	3,5	;RP0=0, select bank0
  4337  0181  1303               	bcf	3,6	;RP1=0, select bank0
  4338  0182  00C6               	movwf	??_fround+2
  4339  0183  3001               	movlw	1
  4340  0184                     u4305:	
  4341  0184  1003               	clrc
  4342  0185  0DC6               	rlf	??_fround+2,f
  4343  0186  3EFF               	addlw	-1
  4344  0187  1D03               	skipz
  4345  0188  2984               	goto	u4305
  4346  0189  1003               	clrc
  4347  018A  0D46               	rlf	??_fround+2,w
  4348  018B  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4349  018C  0084               	movwf	4
  4350  018D  160A  118A  200A  120A  118A  	fcall	stringdir
  4351  0192  00C7               	movwf	??_fround+3
  4352  0193  160A  118A  200A  120A  118A  	fcall	stringdir
  4353  0198  00C8               	movwf	??_fround+4
  4354  0199  160A  118A  200A  120A  118A  	fcall	stringdir
  4355  019E  00C9               	movwf	??_fround+5
  4356  019F  160A  118A  200A  120A  118A  	fcall	stringdir
  4357  01A4  00CA               	movwf	??_fround+6
  4358  01A5  084A               	movf	??_fround+6,w
  4359  01A6  00A9               	movwf	___flmul@b+3
  4360  01A7  0849               	movf	??_fround+5,w
  4361  01A8  00A8               	movwf	___flmul@b+2
  4362  01A9  0848               	movf	??_fround+4,w
  4363  01AA  00A7               	movwf	___flmul@b+1
  4364  01AB  0847               	movf	??_fround+3,w
  4365  01AC  00A6               	movwf	___flmul@b
  4366  01AD  0852               	movf	_fround$873+3,w
  4367  01AE  00AD               	movwf	___flmul@a+3
  4368  01AF  0851               	movf	_fround$873+2,w
  4369  01B0  00AC               	movwf	___flmul@a+2
  4370  01B1  0850               	movf	_fround$873+1,w
  4371  01B2  00AB               	movwf	___flmul@a+1
  4372  01B3  084F               	movf	_fround$873,w
  4373  01B4  00AA               	movwf	___flmul@a
  4374  01B5  120A  158A  21A2   	fcall	___flmul
  4375  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  4376  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  4377  01BA  0829               	movf	?___flmul+3,w
  4378  01BB  00C3               	movwf	?_fround+3
  4379  01BC  0828               	movf	?___flmul+2,w
  4380  01BD  00C2               	movwf	?_fround+2
  4381  01BE  0827               	movf	?___flmul+1,w
  4382  01BF  00C1               	movwf	?_fround+1
  4383  01C0  0826               	movf	?___flmul,w
  4384  01C1  00C0               	movwf	?_fround
  4385  01C2  0008               	return
  4386  01C3                     l2755:	
  4387                           
  4388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  4389  01C3  303F               	movlw	63
  4390  01C4  00A9               	movwf	___flmul@b+3
  4391  01C5  3000               	movlw	0
  4392  01C6  00A8               	movwf	___flmul@b+2
  4393  01C7  3000               	movlw	0
  4394  01C8  00A7               	movwf	___flmul@b+1
  4395  01C9  3000               	movlw	0
  4396  01CA  00A6               	movwf	___flmul@b
  4397  01CB  0853               	movf	fround@prec,w
  4398  01CC  00C4               	movwf	??_fround
  4399  01CD  3001               	movlw	1
  4400  01CE                     u4315:	
  4401  01CE  1003               	clrc
  4402  01CF  0DC4               	rlf	??_fround,f
  4403  01D0  3EFF               	addlw	-1
  4404  01D1  1D03               	skipz
  4405  01D2  29CE               	goto	u4315
  4406  01D3  1003               	clrc
  4407  01D4  0D44               	rlf	??_fround,w
  4408  01D5  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4409  01D6  0084               	movwf	4
  4410  01D7  160A  118A  200A  120A  118A  	fcall	stringdir
  4411  01DC  00C5               	movwf	??_fround+1
  4412  01DD  160A  118A  200A  120A  118A  	fcall	stringdir
  4413  01E2  00C6               	movwf	??_fround+2
  4414  01E3  160A  118A  200A  120A  118A  	fcall	stringdir
  4415  01E8  00C7               	movwf	??_fround+3
  4416  01E9  160A  118A  200A  120A  118A  	fcall	stringdir
  4417  01EE  00C8               	movwf	??_fround+4
  4418  01EF  0848               	movf	??_fround+4,w
  4419  01F0  00AD               	movwf	___flmul@a+3
  4420  01F1  0847               	movf	??_fround+3,w
  4421  01F2  00AC               	movwf	___flmul@a+2
  4422  01F3  0846               	movf	??_fround+2,w
  4423  01F4  00AB               	movwf	___flmul@a+1
  4424  01F5  0845               	movf	??_fround+1,w
  4425  01F6  00AA               	movwf	___flmul@a
  4426  01F7  120A  158A  21A2   	fcall	___flmul
  4427  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  4428  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  4429  01FC  0829               	movf	?___flmul+3,w
  4430  01FD  00C3               	movwf	?_fround+3
  4431  01FE  0828               	movf	?___flmul+2,w
  4432  01FF  00C2               	movwf	?_fround+2
  4433  0200  0827               	movf	?___flmul+1,w
  4434  0201  00C1               	movwf	?_fround+1
  4435  0202  0826               	movf	?___flmul,w
  4436  0203  00C0               	movwf	?_fround
  4437  0204  0008               	return
  4438  0205                     __end_of_fround:	
  4439                           
  4440                           	psect	text7
  4441  1DA9                     __ptext7:	
  4442 ;; *************** function ___lwmod *****************
  4443 ;; Defined at:
  4444 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;  divisor         2    0[COMMON] unsigned int 
  4447 ;;  dividend        2    2[COMMON] unsigned int 
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;  counter         1    5[COMMON] unsigned char 
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  2    0[COMMON] unsigned int 
  4452 ;; Registers used:
  4453 ;;		wreg, status,2, status,0
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4459 ;;      Params:         4       0       0       0       0
  4460 ;;      Locals:         1       0       0       0       0
  4461 ;;      Temps:          1       0       0       0       0
  4462 ;;      Totals:         6       0       0       0       0
  4463 ;;Total ram usage:        6 bytes
  4464 ;; Hardware stack levels used:    1
  4465 ;; This function calls:
  4466 ;;		Nothing
  4467 ;; This function is called by:
  4468 ;;		_fround
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           
  4473                           ;psect for function ___lwmod
  4474  1DA9                     ___lwmod:	
  4475                           
  4476                           ;incstack = 0
  4477                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4478  1DA9  0870               	movf	___lwmod@divisor,w
  4479  1DAA  0471               	iorwf	___lwmod@divisor+1,w
  4480  1DAB  1903               	btfsc	3,2
  4481  1DAC  2DD6               	goto	l2373
  4482  1DAD  01F5               	clrf	___lwmod@counter
  4483  1DAE  0AF5               	incf	___lwmod@counter,f
  4484  1DAF                     l2363:	
  4485  1DAF  1BF1               	btfsc	___lwmod@divisor+1,7
  4486  1DB0  2DBD               	goto	l2365
  4487  1DB1  3001               	movlw	1
  4488  1DB2                     u3355:	
  4489  1DB2  1003               	clrc
  4490  1DB3  0DF0               	rlf	___lwmod@divisor,f
  4491  1DB4  0DF1               	rlf	___lwmod@divisor+1,f
  4492  1DB5  3EFF               	addlw	-1
  4493  1DB6  1D03               	skipz
  4494  1DB7  2DB2               	goto	u3355
  4495  1DB8  3001               	movlw	1
  4496  1DB9  00F4               	movwf	??___lwmod
  4497  1DBA  0874               	movf	??___lwmod,w
  4498  1DBB  07F5               	addwf	___lwmod@counter,f
  4499  1DBC  2DAF               	goto	l2363
  4500  1DBD                     l2365:	
  4501  1DBD  0871               	movf	___lwmod@divisor+1,w
  4502  1DBE  0273               	subwf	___lwmod@dividend+1,w
  4503  1DBF  1D03               	skipz
  4504  1DC0  2DC3               	goto	u3375
  4505  1DC1  0870               	movf	___lwmod@divisor,w
  4506  1DC2  0272               	subwf	___lwmod@dividend,w
  4507  1DC3                     u3375:	
  4508  1DC3  1C03               	skipc
  4509  1DC4  2DCB               	goto	l2369
  4510  1DC5  0870               	movf	___lwmod@divisor,w
  4511  1DC6  02F2               	subwf	___lwmod@dividend,f
  4512  1DC7  0871               	movf	___lwmod@divisor+1,w
  4513  1DC8  1C03               	skipc
  4514  1DC9  03F3               	decf	___lwmod@dividend+1,f
  4515  1DCA  02F3               	subwf	___lwmod@dividend+1,f
  4516  1DCB                     l2369:	
  4517  1DCB  3001               	movlw	1
  4518  1DCC                     u3385:	
  4519  1DCC  1003               	clrc
  4520  1DCD  0CF1               	rrf	___lwmod@divisor+1,f
  4521  1DCE  0CF0               	rrf	___lwmod@divisor,f
  4522  1DCF  3EFF               	addlw	-1
  4523  1DD0  1D03               	skipz
  4524  1DD1  2DCC               	goto	u3385
  4525  1DD2  3001               	movlw	1
  4526  1DD3  02F5               	subwf	___lwmod@counter,f
  4527  1DD4  1D03               	btfss	3,2
  4528  1DD5  2DBD               	goto	l2365
  4529  1DD6                     l2373:	
  4530  1DD6  0873               	movf	___lwmod@dividend+1,w
  4531  1DD7  00F1               	movwf	?___lwmod+1
  4532  1DD8  0872               	movf	___lwmod@dividend,w
  4533  1DD9  00F0               	movwf	?___lwmod
  4534  1DDA  0008               	return
  4535  1DDB                     __end_of___lwmod:	
  4536                           
  4537                           	psect	text8
  4538  1E4D                     __ptext8:	
  4539 ;; *************** function ___lwdiv *****************
  4540 ;; Defined at:
  4541 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;  divisor         2    6[COMMON] unsigned int 
  4544 ;;  dividend        2    8[COMMON] unsigned int 
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;  quotient        2   11[COMMON] unsigned int 
  4547 ;;  counter         1   13[COMMON] unsigned char 
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  2    6[COMMON] unsigned int 
  4550 ;; Registers used:
  4551 ;;		wreg, status,2, status,0
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4557 ;;      Params:         4       0       0       0       0
  4558 ;;      Locals:         3       0       0       0       0
  4559 ;;      Temps:          1       0       0       0       0
  4560 ;;      Totals:         8       0       0       0       0
  4561 ;;Total ram usage:        8 bytes
  4562 ;; Hardware stack levels used:    1
  4563 ;; This function calls:
  4564 ;;		Nothing
  4565 ;; This function is called by:
  4566 ;;		_fround
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           
  4571                           ;psect for function ___lwdiv
  4572  1E4D                     ___lwdiv:	
  4573                           
  4574                           ;incstack = 0
  4575                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4576  1E4D  01FB               	clrf	___lwdiv@quotient
  4577  1E4E  01FC               	clrf	___lwdiv@quotient+1
  4578  1E4F  0876               	movf	___lwdiv@divisor,w
  4579  1E50  0477               	iorwf	___lwdiv@divisor+1,w
  4580  1E51  1903               	btfsc	3,2
  4581  1E52  2E84               	goto	l2351
  4582  1E53  01FD               	clrf	___lwdiv@counter
  4583  1E54  0AFD               	incf	___lwdiv@counter,f
  4584  1E55                     l2339:	
  4585  1E55  1BF7               	btfsc	___lwdiv@divisor+1,7
  4586  1E56  2E63               	goto	l2341
  4587  1E57  3001               	movlw	1
  4588  1E58                     u3285:	
  4589  1E58  1003               	clrc
  4590  1E59  0DF6               	rlf	___lwdiv@divisor,f
  4591  1E5A  0DF7               	rlf	___lwdiv@divisor+1,f
  4592  1E5B  3EFF               	addlw	-1
  4593  1E5C  1D03               	skipz
  4594  1E5D  2E58               	goto	u3285
  4595  1E5E  3001               	movlw	1
  4596  1E5F  00FA               	movwf	??___lwdiv
  4597  1E60  087A               	movf	??___lwdiv,w
  4598  1E61  07FD               	addwf	___lwdiv@counter,f
  4599  1E62  2E55               	goto	l2339
  4600  1E63                     l2341:	
  4601  1E63  3001               	movlw	1
  4602  1E64                     u3305:	
  4603  1E64  1003               	clrc
  4604  1E65  0DFB               	rlf	___lwdiv@quotient,f
  4605  1E66  0DFC               	rlf	___lwdiv@quotient+1,f
  4606  1E67  3EFF               	addlw	-1
  4607  1E68  1D03               	skipz
  4608  1E69  2E64               	goto	u3305
  4609  1E6A  0877               	movf	___lwdiv@divisor+1,w
  4610  1E6B  0279               	subwf	___lwdiv@dividend+1,w
  4611  1E6C  1D03               	skipz
  4612  1E6D  2E70               	goto	u3315
  4613  1E6E  0876               	movf	___lwdiv@divisor,w
  4614  1E6F  0278               	subwf	___lwdiv@dividend,w
  4615  1E70                     u3315:	
  4616  1E70  1C03               	skipc
  4617  1E71  2E79               	goto	l2347
  4618  1E72  0876               	movf	___lwdiv@divisor,w
  4619  1E73  02F8               	subwf	___lwdiv@dividend,f
  4620  1E74  0877               	movf	___lwdiv@divisor+1,w
  4621  1E75  1C03               	skipc
  4622  1E76  03F9               	decf	___lwdiv@dividend+1,f
  4623  1E77  02F9               	subwf	___lwdiv@dividend+1,f
  4624  1E78  147B               	bsf	___lwdiv@quotient,0
  4625  1E79                     l2347:	
  4626  1E79  3001               	movlw	1
  4627  1E7A                     u3325:	
  4628  1E7A  1003               	clrc
  4629  1E7B  0CF7               	rrf	___lwdiv@divisor+1,f
  4630  1E7C  0CF6               	rrf	___lwdiv@divisor,f
  4631  1E7D  3EFF               	addlw	-1
  4632  1E7E  1D03               	skipz
  4633  1E7F  2E7A               	goto	u3325
  4634  1E80  3001               	movlw	1
  4635  1E81  02FD               	subwf	___lwdiv@counter,f
  4636  1E82  1D03               	btfss	3,2
  4637  1E83  2E63               	goto	l2341
  4638  1E84                     l2351:	
  4639  1E84  087C               	movf	___lwdiv@quotient+1,w
  4640  1E85  00F7               	movwf	?___lwdiv+1
  4641  1E86  087B               	movf	___lwdiv@quotient,w
  4642  1E87  00F6               	movwf	?___lwdiv
  4643  1E88  0008               	return
  4644  1E89                     __end_of___lwdiv:	
  4645                           
  4646                           	psect	text9
  4647  09A2                     __ptext9:	
  4648 ;; *************** function ___flmul *****************
  4649 ;; Defined at:
  4650 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;  b               4    6[BANK0 ] unsigned int 
  4653 ;;  a               4   10[BANK0 ] unsigned int 
  4654 ;; Auto vars:     Size  Location     Type
  4655 ;;  prod            4   26[BANK0 ] struct .
  4656 ;;  grs             4   20[BANK0 ] unsigned long 
  4657 ;;  temp            2   30[BANK0 ] struct .
  4658 ;;  bexp            1   25[BANK0 ] unsigned char 
  4659 ;;  aexp            1   24[BANK0 ] unsigned char 
  4660 ;;  sign            1   19[BANK0 ] unsigned char 
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  4    6[BANK0 ] unsigned char 
  4663 ;; Registers used:
  4664 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4670 ;;      Params:         0       8       0       0       0
  4671 ;;      Locals:         0      13       0       0       0
  4672 ;;      Temps:          0       5       0       0       0
  4673 ;;      Totals:         0      26       0       0       0
  4674 ;;Total ram usage:       26 bytes
  4675 ;; Hardware stack levels used:    1
  4676 ;; Hardware stack levels required when called:    1
  4677 ;; This function calls:
  4678 ;;		__Umul8_16
  4679 ;; This function is called by:
  4680 ;;		_main
  4681 ;;		_fround
  4682 ;;		_scale
  4683 ;;		_sprintf
  4684 ;; This function uses a non-reentrant model
  4685 ;;
  4686                           
  4687                           
  4688                           ;psect for function ___flmul
  4689  09A2                     ___flmul:	
  4690                           
  4691                           ;incstack = 0
  4692                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4693  09A2  1283               	bcf	3,5	;RP0=0, select bank0
  4694  09A3  1303               	bcf	3,6	;RP1=0, select bank0
  4695  09A4  0829               	movf	___flmul@b+3,w
  4696  09A5  3980               	andlw	128
  4697  09A6  00AE               	movwf	??___flmul
  4698  09A7  082E               	movf	??___flmul,w
  4699  09A8  00B3               	movwf	___flmul@sign
  4700  09A9  0829               	movf	___flmul@b+3,w
  4701  09AA  00AE               	movwf	??___flmul
  4702  09AB  072E               	addwf	??___flmul,w
  4703  09AC  00AF               	movwf	??___flmul+1
  4704  09AD  082F               	movf	??___flmul+1,w
  4705  09AE  00B9               	movwf	___flmul@bexp
  4706  09AF  1BA8               	btfsc	___flmul@b+2,7
  4707  09B0  1439               	bsf	___flmul@bexp,0
  4708  09B1  0839               	movf	___flmul@bexp,w
  4709  09B2  1903               	btfsc	3,2
  4710  09B3  29C1               	goto	l2587
  4711  09B4  0A39               	incf	___flmul@bexp,w
  4712  09B5  1D03               	btfss	3,2
  4713  09B6  29BF               	goto	l2585
  4714  09B7  3000               	movlw	0
  4715  09B8  00A9               	movwf	___flmul@b+3
  4716  09B9  3000               	movlw	0
  4717  09BA  00A8               	movwf	___flmul@b+2
  4718  09BB  3000               	movlw	0
  4719  09BC  00A7               	movwf	___flmul@b+1
  4720  09BD  3000               	movlw	0
  4721  09BE  00A6               	movwf	___flmul@b
  4722  09BF                     l2585:	
  4723  09BF  17A8               	bsf	___flmul@b+2,7
  4724  09C0  29C9               	goto	l2589
  4725  09C1                     l2587:	
  4726  09C1  3000               	movlw	0
  4727  09C2  00A9               	movwf	___flmul@b+3
  4728  09C3  3000               	movlw	0
  4729  09C4  00A8               	movwf	___flmul@b+2
  4730  09C5  3000               	movlw	0
  4731  09C6  00A7               	movwf	___flmul@b+1
  4732  09C7  3000               	movlw	0
  4733  09C8  00A6               	movwf	___flmul@b
  4734  09C9                     l2589:	
  4735  09C9  082D               	movf	___flmul@a+3,w
  4736  09CA  3980               	andlw	128
  4737  09CB  00AE               	movwf	??___flmul
  4738  09CC  082E               	movf	??___flmul,w
  4739  09CD  06B3               	xorwf	___flmul@sign,f
  4740  09CE  082D               	movf	___flmul@a+3,w
  4741  09CF  00AE               	movwf	??___flmul
  4742  09D0  072E               	addwf	??___flmul,w
  4743  09D1  00AF               	movwf	??___flmul+1
  4744  09D2  082F               	movf	??___flmul+1,w
  4745  09D3  00B8               	movwf	___flmul@aexp
  4746  09D4  1BAC               	btfsc	___flmul@a+2,7
  4747  09D5  1438               	bsf	___flmul@aexp,0
  4748  09D6  0838               	movf	___flmul@aexp,w
  4749  09D7  1903               	btfsc	3,2
  4750  09D8  29E6               	goto	l2605
  4751  09D9  0A38               	incf	___flmul@aexp,w
  4752  09DA  1D03               	btfss	3,2
  4753  09DB  29E4               	goto	l2603
  4754  09DC  3000               	movlw	0
  4755  09DD  00AD               	movwf	___flmul@a+3
  4756  09DE  3000               	movlw	0
  4757  09DF  00AC               	movwf	___flmul@a+2
  4758  09E0  3000               	movlw	0
  4759  09E1  00AB               	movwf	___flmul@a+1
  4760  09E2  3000               	movlw	0
  4761  09E3  00AA               	movwf	___flmul@a
  4762  09E4                     l2603:	
  4763  09E4  17AC               	bsf	___flmul@a+2,7
  4764  09E5  29EE               	goto	l2607
  4765  09E6                     l2605:	
  4766  09E6  3000               	movlw	0
  4767  09E7  00AD               	movwf	___flmul@a+3
  4768  09E8  3000               	movlw	0
  4769  09E9  00AC               	movwf	___flmul@a+2
  4770  09EA  3000               	movlw	0
  4771  09EB  00AB               	movwf	___flmul@a+1
  4772  09EC  3000               	movlw	0
  4773  09ED  00AA               	movwf	___flmul@a
  4774  09EE                     l2607:	
  4775  09EE  0838               	movf	___flmul@aexp,w
  4776  09EF  1D03               	btfss	3,2
  4777  09F0  0839               	movf	___flmul@bexp,w
  4778  09F1  1D03               	btfss	3,2
  4779  09F2  29FC               	goto	l2615
  4780  09F3  3000               	movlw	0
  4781  09F4  00A9               	movwf	?___flmul+3
  4782  09F5  3000               	movlw	0
  4783  09F6  00A8               	movwf	?___flmul+2
  4784  09F7  3000               	movlw	0
  4785  09F8  00A7               	movwf	?___flmul+1
  4786  09F9  3000               	movlw	0
  4787  09FA  00A6               	movwf	?___flmul
  4788  09FB  0008               	return
  4789  09FC                     l2615:	
  4790  09FC  0826               	movf	___flmul@b,w
  4791  09FD  00AE               	movwf	??___flmul
  4792  09FE  082E               	movf	??___flmul,w
  4793  09FF  00F0               	movwf	__Umul8_16@multiplicand
  4794  0A00  082C               	movf	___flmul@a+2,w
  4795  0A01  160A  158A  2586  120A  158A  	fcall	__Umul8_16
  4796  0A06  0871               	movf	?__Umul8_16+1,w
  4797  0A07  1283               	bcf	3,5	;RP0=0, select bank0
  4798  0A08  1303               	bcf	3,6	;RP1=0, select bank0
  4799  0A09  00BF               	movwf	___flmul@temp+1
  4800  0A0A  0870               	movf	?__Umul8_16,w
  4801  0A0B  00BE               	movwf	___flmul@temp
  4802  0A0C  083E               	movf	___flmul@temp,w
  4803  0A0D  00AE               	movwf	??___flmul
  4804  0A0E  01AF               	clrf	??___flmul+1
  4805  0A0F  01B0               	clrf	??___flmul+2
  4806  0A10  01B1               	clrf	??___flmul+3
  4807  0A11  0831               	movf	??___flmul+3,w
  4808  0A12  00B7               	movwf	___flmul@grs+3
  4809  0A13  0830               	movf	??___flmul+2,w
  4810  0A14  00B6               	movwf	___flmul@grs+2
  4811  0A15  082F               	movf	??___flmul+1,w
  4812  0A16  00B5               	movwf	___flmul@grs+1
  4813  0A17  082E               	movf	??___flmul,w
  4814  0A18  00B4               	movwf	___flmul@grs
  4815  0A19  083F               	movf	___flmul@temp+1,w
  4816  0A1A  00AE               	movwf	??___flmul
  4817  0A1B  01AF               	clrf	??___flmul+1
  4818  0A1C  01B0               	clrf	??___flmul+2
  4819  0A1D  01B1               	clrf	??___flmul+3
  4820  0A1E  0831               	movf	??___flmul+3,w
  4821  0A1F  00BD               	movwf	___flmul@prod+3
  4822  0A20  0830               	movf	??___flmul+2,w
  4823  0A21  00BC               	movwf	___flmul@prod+2
  4824  0A22  082F               	movf	??___flmul+1,w
  4825  0A23  00BB               	movwf	___flmul@prod+1
  4826  0A24  082E               	movf	??___flmul,w
  4827  0A25  00BA               	movwf	___flmul@prod
  4828  0A26  0827               	movf	___flmul@b+1,w
  4829  0A27  00AE               	movwf	??___flmul
  4830  0A28  082E               	movf	??___flmul,w
  4831  0A29  00F0               	movwf	__Umul8_16@multiplicand
  4832  0A2A  082B               	movf	___flmul@a+1,w
  4833  0A2B  160A  158A  2586  120A  158A  	fcall	__Umul8_16
  4834  0A30  0871               	movf	?__Umul8_16+1,w
  4835  0A31  1283               	bcf	3,5	;RP0=0, select bank0
  4836  0A32  1303               	bcf	3,6	;RP1=0, select bank0
  4837  0A33  00BF               	movwf	___flmul@temp+1
  4838  0A34  0870               	movf	?__Umul8_16,w
  4839  0A35  00BE               	movwf	___flmul@temp
  4840  0A36  083E               	movf	___flmul@temp,w
  4841  0A37  00AE               	movwf	??___flmul
  4842  0A38  01AF               	clrf	??___flmul+1
  4843  0A39  01B0               	clrf	??___flmul+2
  4844  0A3A  01B1               	clrf	??___flmul+3
  4845  0A3B  082E               	movf	??___flmul,w
  4846  0A3C  07B4               	addwf	___flmul@grs,f
  4847  0A3D  082F               	movf	??___flmul+1,w
  4848  0A3E  1103               	clrz
  4849  0A3F  1803               	skipnc
  4850  0A40  3E01               	addlw	1
  4851  0A41  1D03               	btfss	3,2
  4852  0A42  07B5               	addwf	___flmul@grs+1,f
  4853  0A43  0830               	movf	??___flmul+2,w
  4854  0A44  1103               	clrz
  4855  0A45  1803               	skipnc
  4856  0A46  3E01               	addlw	1
  4857  0A47  1D03               	btfss	3,2
  4858  0A48  07B6               	addwf	___flmul@grs+2,f
  4859  0A49  0831               	movf	??___flmul+3,w
  4860  0A4A  1103               	clrz
  4861  0A4B  1803               	skipnc
  4862  0A4C  3E01               	addlw	1
  4863  0A4D  1D03               	btfss	3,2
  4864  0A4E  07B7               	addwf	___flmul@grs+3,f
  4865  0A4F  083F               	movf	___flmul@temp+1,w
  4866  0A50  00AE               	movwf	??___flmul
  4867  0A51  01AF               	clrf	??___flmul+1
  4868  0A52  01B0               	clrf	??___flmul+2
  4869  0A53  01B1               	clrf	??___flmul+3
  4870  0A54  082E               	movf	??___flmul,w
  4871  0A55  07BA               	addwf	___flmul@prod,f
  4872  0A56  082F               	movf	??___flmul+1,w
  4873  0A57  1103               	clrz
  4874  0A58  1803               	skipnc
  4875  0A59  3E01               	addlw	1
  4876  0A5A  1D03               	btfss	3,2
  4877  0A5B  07BB               	addwf	___flmul@prod+1,f
  4878  0A5C  0830               	movf	??___flmul+2,w
  4879  0A5D  1103               	clrz
  4880  0A5E  1803               	skipnc
  4881  0A5F  3E01               	addlw	1
  4882  0A60  1D03               	btfss	3,2
  4883  0A61  07BC               	addwf	___flmul@prod+2,f
  4884  0A62  0831               	movf	??___flmul+3,w
  4885  0A63  1103               	clrz
  4886  0A64  1803               	skipnc
  4887  0A65  3E01               	addlw	1
  4888  0A66  1D03               	btfss	3,2
  4889  0A67  07BD               	addwf	___flmul@prod+3,f
  4890  0A68  0828               	movf	___flmul@b+2,w
  4891  0A69  00AE               	movwf	??___flmul
  4892  0A6A  082E               	movf	??___flmul,w
  4893  0A6B  00F0               	movwf	__Umul8_16@multiplicand
  4894  0A6C  082A               	movf	___flmul@a,w
  4895  0A6D  160A  158A  2586  120A  158A  	fcall	__Umul8_16
  4896  0A72  0871               	movf	?__Umul8_16+1,w
  4897  0A73  1283               	bcf	3,5	;RP0=0, select bank0
  4898  0A74  1303               	bcf	3,6	;RP1=0, select bank0
  4899  0A75  00BF               	movwf	___flmul@temp+1
  4900  0A76  0870               	movf	?__Umul8_16,w
  4901  0A77  00BE               	movwf	___flmul@temp
  4902  0A78  083E               	movf	___flmul@temp,w
  4903  0A79  00AE               	movwf	??___flmul
  4904  0A7A  01AF               	clrf	??___flmul+1
  4905  0A7B  01B0               	clrf	??___flmul+2
  4906  0A7C  01B1               	clrf	??___flmul+3
  4907  0A7D  082E               	movf	??___flmul,w
  4908  0A7E  07B4               	addwf	___flmul@grs,f
  4909  0A7F  082F               	movf	??___flmul+1,w
  4910  0A80  1103               	clrz
  4911  0A81  1803               	skipnc
  4912  0A82  3E01               	addlw	1
  4913  0A83  1D03               	btfss	3,2
  4914  0A84  07B5               	addwf	___flmul@grs+1,f
  4915  0A85  0830               	movf	??___flmul+2,w
  4916  0A86  1103               	clrz
  4917  0A87  1803               	skipnc
  4918  0A88  3E01               	addlw	1
  4919  0A89  1D03               	btfss	3,2
  4920  0A8A  07B6               	addwf	___flmul@grs+2,f
  4921  0A8B  0831               	movf	??___flmul+3,w
  4922  0A8C  1103               	clrz
  4923  0A8D  1803               	skipnc
  4924  0A8E  3E01               	addlw	1
  4925  0A8F  1D03               	btfss	3,2
  4926  0A90  07B7               	addwf	___flmul@grs+3,f
  4927  0A91  083F               	movf	___flmul@temp+1,w
  4928  0A92  00AE               	movwf	??___flmul
  4929  0A93  01AF               	clrf	??___flmul+1
  4930  0A94  01B0               	clrf	??___flmul+2
  4931  0A95  01B1               	clrf	??___flmul+3
  4932  0A96  082E               	movf	??___flmul,w
  4933  0A97  07BA               	addwf	___flmul@prod,f
  4934  0A98  082F               	movf	??___flmul+1,w
  4935  0A99  1103               	clrz
  4936  0A9A  1803               	skipnc
  4937  0A9B  3E01               	addlw	1
  4938  0A9C  1D03               	btfss	3,2
  4939  0A9D  07BB               	addwf	___flmul@prod+1,f
  4940  0A9E  0830               	movf	??___flmul+2,w
  4941  0A9F  1103               	clrz
  4942  0AA0  1803               	skipnc
  4943  0AA1  3E01               	addlw	1
  4944  0AA2  1D03               	btfss	3,2
  4945  0AA3  07BC               	addwf	___flmul@prod+2,f
  4946  0AA4  0831               	movf	??___flmul+3,w
  4947  0AA5  1103               	clrz
  4948  0AA6  1803               	skipnc
  4949  0AA7  3E01               	addlw	1
  4950  0AA8  1D03               	btfss	3,2
  4951  0AA9  07BD               	addwf	___flmul@prod+3,f
  4952  0AAA  3008               	movlw	8
  4953  0AAB  00AE               	movwf	??___flmul
  4954  0AAC                     u3985:	
  4955  0AAC  1003               	clrc
  4956  0AAD  0DB4               	rlf	___flmul@grs,f
  4957  0AAE  0DB5               	rlf	___flmul@grs+1,f
  4958  0AAF  0DB6               	rlf	___flmul@grs+2,f
  4959  0AB0  0DB7               	rlf	___flmul@grs+3,f
  4960  0AB1  0BAE               	decfsz	??___flmul,f
  4961  0AB2  2AAC               	goto	u3985
  4962  0AB3  0827               	movf	___flmul@b+1,w
  4963  0AB4  00AE               	movwf	??___flmul
  4964  0AB5  082E               	movf	??___flmul,w
  4965  0AB6  00F0               	movwf	__Umul8_16@multiplicand
  4966  0AB7  082A               	movf	___flmul@a,w
  4967  0AB8  160A  158A  2586  120A  158A  	fcall	__Umul8_16
  4968  0ABD  0871               	movf	?__Umul8_16+1,w
  4969  0ABE  1283               	bcf	3,5	;RP0=0, select bank0
  4970  0ABF  1303               	bcf	3,6	;RP1=0, select bank0
  4971  0AC0  00BF               	movwf	___flmul@temp+1
  4972  0AC1  0870               	movf	?__Umul8_16,w
  4973  0AC2  00BE               	movwf	___flmul@temp
  4974  0AC3  083E               	movf	___flmul@temp,w
  4975  0AC4  00AE               	movwf	??___flmul
  4976  0AC5  083F               	movf	___flmul@temp+1,w
  4977  0AC6  00AF               	movwf	??___flmul+1
  4978  0AC7  01B0               	clrf	??___flmul+2
  4979  0AC8  01B1               	clrf	??___flmul+3
  4980  0AC9  082E               	movf	??___flmul,w
  4981  0ACA  07B4               	addwf	___flmul@grs,f
  4982  0ACB  082F               	movf	??___flmul+1,w
  4983  0ACC  1103               	clrz
  4984  0ACD  1803               	skipnc
  4985  0ACE  3E01               	addlw	1
  4986  0ACF  1D03               	btfss	3,2
  4987  0AD0  07B5               	addwf	___flmul@grs+1,f
  4988  0AD1  0830               	movf	??___flmul+2,w
  4989  0AD2  1103               	clrz
  4990  0AD3  1803               	skipnc
  4991  0AD4  3E01               	addlw	1
  4992  0AD5  1D03               	btfss	3,2
  4993  0AD6  07B6               	addwf	___flmul@grs+2,f
  4994  0AD7  0831               	movf	??___flmul+3,w
  4995  0AD8  1103               	clrz
  4996  0AD9  1803               	skipnc
  4997  0ADA  3E01               	addlw	1
  4998  0ADB  1D03               	btfss	3,2
  4999  0ADC  07B7               	addwf	___flmul@grs+3,f
  5000  0ADD  0826               	movf	___flmul@b,w
  5001  0ADE  00AE               	movwf	??___flmul
  5002  0ADF  082E               	movf	??___flmul,w
  5003  0AE0  00F0               	movwf	__Umul8_16@multiplicand
  5004  0AE1  082B               	movf	___flmul@a+1,w
  5005  0AE2  160A  158A  2586  120A  158A  	fcall	__Umul8_16
  5006  0AE7  0871               	movf	?__Umul8_16+1,w
  5007  0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  5008  0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  5009  0AEA  00BF               	movwf	___flmul@temp+1
  5010  0AEB  0870               	movf	?__Umul8_16,w
  5011  0AEC  00BE               	movwf	___flmul@temp
  5012  0AED  083E               	movf	___flmul@temp,w
  5013  0AEE  00AE               	movwf	??___flmul
  5014  0AEF  083F               	movf	___flmul@temp+1,w
  5015  0AF0  00AF               	movwf	??___flmul+1
  5016  0AF1  01B0               	clrf	??___flmul+2
  5017  0AF2  01B1               	clrf	??___flmul+3
  5018  0AF3  082E               	movf	??___flmul,w
  5019  0AF4  07B4               	addwf	___flmul@grs,f
  5020  0AF5  082F               	movf	??___flmul+1,w
  5021  0AF6  1103               	clrz
  5022  0AF7  1803               	skipnc
  5023  0AF8  3E01               	addlw	1
  5024  0AF9  1D03               	btfss	3,2
  5025  0AFA  07B5               	addwf	___flmul@grs+1,f
  5026  0AFB  0830               	movf	??___flmul+2,w
  5027  0AFC  1103               	clrz
  5028  0AFD  1803               	skipnc
  5029  0AFE  3E01               	addlw	1
  5030  0AFF  1D03               	btfss	3,2
  5031  0B00  07B6               	addwf	___flmul@grs+2,f
  5032  0B01  0831               	movf	??___flmul+3,w
  5033  0B02  1103               	clrz
  5034  0B03  1803               	skipnc
  5035  0B04  3E01               	addlw	1
  5036  0B05  1D03               	btfss	3,2
  5037  0B06  07B7               	addwf	___flmul@grs+3,f
  5038  0B07  3008               	movlw	8
  5039  0B08  00AE               	movwf	??___flmul
  5040  0B09                     u4015:	
  5041  0B09  1003               	clrc
  5042  0B0A  0DB4               	rlf	___flmul@grs,f
  5043  0B0B  0DB5               	rlf	___flmul@grs+1,f
  5044  0B0C  0DB6               	rlf	___flmul@grs+2,f
  5045  0B0D  0DB7               	rlf	___flmul@grs+3,f
  5046  0B0E  0BAE               	decfsz	??___flmul,f
  5047  0B0F  2B09               	goto	u4015
  5048  0B10  0826               	movf	___flmul@b,w
  5049  0B11  00AE               	movwf	??___flmul
  5050  0B12  082E               	movf	??___flmul,w
  5051  0B13  00F0               	movwf	__Umul8_16@multiplicand
  5052  0B14  082A               	movf	___flmul@a,w
  5053  0B15  160A  158A  2586  120A  158A  	fcall	__Umul8_16
  5054  0B1A  0871               	movf	?__Umul8_16+1,w
  5055  0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  5056  0B1C  1303               	bcf	3,6	;RP1=0, select bank0
  5057  0B1D  00BF               	movwf	___flmul@temp+1
  5058  0B1E  0870               	movf	?__Umul8_16,w
  5059  0B1F  00BE               	movwf	___flmul@temp
  5060  0B20  083E               	movf	___flmul@temp,w
  5061  0B21  00AE               	movwf	??___flmul
  5062  0B22  083F               	movf	___flmul@temp+1,w
  5063  0B23  00AF               	movwf	??___flmul+1
  5064  0B24  01B0               	clrf	??___flmul+2
  5065  0B25  01B1               	clrf	??___flmul+3
  5066  0B26  082E               	movf	??___flmul,w
  5067  0B27  07B4               	addwf	___flmul@grs,f
  5068  0B28  082F               	movf	??___flmul+1,w
  5069  0B29  1103               	clrz
  5070  0B2A  1803               	skipnc
  5071  0B2B  3E01               	addlw	1
  5072  0B2C  1D03               	btfss	3,2
  5073  0B2D  07B5               	addwf	___flmul@grs+1,f
  5074  0B2E  0830               	movf	??___flmul+2,w
  5075  0B2F  1103               	clrz
  5076  0B30  1803               	skipnc
  5077  0B31  3E01               	addlw	1
  5078  0B32  1D03               	btfss	3,2
  5079  0B33  07B6               	addwf	___flmul@grs+2,f
  5080  0B34  0831               	movf	??___flmul+3,w
  5081  0B35  1103               	clrz
  5082  0B36  1803               	skipnc
  5083  0B37  3E01               	addlw	1
  5084  0B38  1D03               	btfss	3,2
  5085  0B39  07B7               	addwf	___flmul@grs+3,f
  5086  0B3A  0827               	movf	___flmul@b+1,w
  5087  0B3B  00AE               	movwf	??___flmul
  5088  0B3C  082E               	movf	??___flmul,w
  5089  0B3D  00F0               	movwf	__Umul8_16@multiplicand
  5090  0B3E  082C               	movf	___flmul@a+2,w
  5091  0B3F  160A  158A  2586  120A  158A  	fcall	__Umul8_16
  5092  0B44  0871               	movf	?__Umul8_16+1,w
  5093  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  5094  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  5095  0B47  00BF               	movwf	___flmul@temp+1
  5096  0B48  0870               	movf	?__Umul8_16,w
  5097  0B49  00BE               	movwf	___flmul@temp
  5098  0B4A  083E               	movf	___flmul@temp,w
  5099  0B4B  00AE               	movwf	??___flmul
  5100  0B4C  083F               	movf	___flmul@temp+1,w
  5101  0B4D  00AF               	movwf	??___flmul+1
  5102  0B4E  01B0               	clrf	??___flmul+2
  5103  0B4F  01B1               	clrf	??___flmul+3
  5104  0B50  082E               	movf	??___flmul,w
  5105  0B51  07BA               	addwf	___flmul@prod,f
  5106  0B52  082F               	movf	??___flmul+1,w
  5107  0B53  1103               	clrz
  5108  0B54  1803               	skipnc
  5109  0B55  3E01               	addlw	1
  5110  0B56  1D03               	btfss	3,2
  5111  0B57  07BB               	addwf	___flmul@prod+1,f
  5112  0B58  0830               	movf	??___flmul+2,w
  5113  0B59  1103               	clrz
  5114  0B5A  1803               	skipnc
  5115  0B5B  3E01               	addlw	1
  5116  0B5C  1D03               	btfss	3,2
  5117  0B5D  07BC               	addwf	___flmul@prod+2,f
  5118  0B5E  0831               	movf	??___flmul+3,w
  5119  0B5F  1103               	clrz
  5120  0B60  1803               	skipnc
  5121  0B61  3E01               	addlw	1
  5122  0B62  1D03               	btfss	3,2
  5123  0B63  07BD               	addwf	___flmul@prod+3,f
  5124  0B64  0828               	movf	___flmul@b+2,w
  5125  0B65  00AE               	movwf	??___flmul
  5126  0B66  082E               	movf	??___flmul,w
  5127  0B67  00F0               	movwf	__Umul8_16@multiplicand
  5128  0B68  082B               	movf	___flmul@a+1,w
  5129  0B69  160A  158A  2586  120A  158A  	fcall	__Umul8_16
  5130  0B6E  0871               	movf	?__Umul8_16+1,w
  5131  0B6F  1283               	bcf	3,5	;RP0=0, select bank0
  5132  0B70  1303               	bcf	3,6	;RP1=0, select bank0
  5133  0B71  00BF               	movwf	___flmul@temp+1
  5134  0B72  0870               	movf	?__Umul8_16,w
  5135  0B73  00BE               	movwf	___flmul@temp
  5136  0B74  083E               	movf	___flmul@temp,w
  5137  0B75  00AE               	movwf	??___flmul
  5138  0B76  083F               	movf	___flmul@temp+1,w
  5139  0B77  00AF               	movwf	??___flmul+1
  5140  0B78  01B0               	clrf	??___flmul+2
  5141  0B79  01B1               	clrf	??___flmul+3
  5142  0B7A  082E               	movf	??___flmul,w
  5143  0B7B  07BA               	addwf	___flmul@prod,f
  5144  0B7C  082F               	movf	??___flmul+1,w
  5145  0B7D  1103               	clrz
  5146  0B7E  1803               	skipnc
  5147  0B7F  3E01               	addlw	1
  5148  0B80  1D03               	btfss	3,2
  5149  0B81  07BB               	addwf	___flmul@prod+1,f
  5150  0B82  0830               	movf	??___flmul+2,w
  5151  0B83  1103               	clrz
  5152  0B84  1803               	skipnc
  5153  0B85  3E01               	addlw	1
  5154  0B86  1D03               	btfss	3,2
  5155  0B87  07BC               	addwf	___flmul@prod+2,f
  5156  0B88  0831               	movf	??___flmul+3,w
  5157  0B89  1103               	clrz
  5158  0B8A  1803               	skipnc
  5159  0B8B  3E01               	addlw	1
  5160  0B8C  1D03               	btfss	3,2
  5161  0B8D  07BD               	addwf	___flmul@prod+3,f
  5162  0B8E  0828               	movf	___flmul@b+2,w
  5163  0B8F  00AE               	movwf	??___flmul
  5164  0B90  082E               	movf	??___flmul,w
  5165  0B91  00F0               	movwf	__Umul8_16@multiplicand
  5166  0B92  082C               	movf	___flmul@a+2,w
  5167  0B93  160A  158A  2586  120A  158A  	fcall	__Umul8_16
  5168  0B98  0871               	movf	?__Umul8_16+1,w
  5169  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  5170  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  5171  0B9B  00BF               	movwf	___flmul@temp+1
  5172  0B9C  0870               	movf	?__Umul8_16,w
  5173  0B9D  00BE               	movwf	___flmul@temp
  5174  0B9E  083E               	movf	___flmul@temp,w
  5175  0B9F  00AE               	movwf	??___flmul
  5176  0BA0  083F               	movf	___flmul@temp+1,w
  5177  0BA1  00AF               	movwf	??___flmul+1
  5178  0BA2  01B0               	clrf	??___flmul+2
  5179  0BA3  01B1               	clrf	??___flmul+3
  5180  0BA4  3008               	movlw	8
  5181  0BA5                     u4055:	
  5182  0BA5  1003               	clrc
  5183  0BA6  0DAE               	rlf	??___flmul,f
  5184  0BA7  0DAF               	rlf	??___flmul+1,f
  5185  0BA8  0DB0               	rlf	??___flmul+2,f
  5186  0BA9  0DB1               	rlf	??___flmul+3,f
  5187  0BAA  3EFF               	addlw	-1
  5188  0BAB  1D03               	skipz
  5189  0BAC  2BA5               	goto	u4055
  5190  0BAD  082E               	movf	??___flmul,w
  5191  0BAE  07BA               	addwf	___flmul@prod,f
  5192  0BAF  082F               	movf	??___flmul+1,w
  5193  0BB0  1103               	clrz
  5194  0BB1  1803               	skipnc
  5195  0BB2  3E01               	addlw	1
  5196  0BB3  1D03               	btfss	3,2
  5197  0BB4  07BB               	addwf	___flmul@prod+1,f
  5198  0BB5  0830               	movf	??___flmul+2,w
  5199  0BB6  1103               	clrz
  5200  0BB7  1803               	skipnc
  5201  0BB8  3E01               	addlw	1
  5202  0BB9  1D03               	btfss	3,2
  5203  0BBA  07BC               	addwf	___flmul@prod+2,f
  5204  0BBB  0831               	movf	??___flmul+3,w
  5205  0BBC  1103               	clrz
  5206  0BBD  1803               	skipnc
  5207  0BBE  3E01               	addlw	1
  5208  0BBF  1D03               	btfss	3,2
  5209  0BC0  07BD               	addwf	___flmul@prod+3,f
  5210  0BC1  0834               	movf	___flmul@grs,w
  5211  0BC2  00AE               	movwf	??___flmul
  5212  0BC3  0835               	movf	___flmul@grs+1,w
  5213  0BC4  00AF               	movwf	??___flmul+1
  5214  0BC5  0836               	movf	___flmul@grs+2,w
  5215  0BC6  00B0               	movwf	??___flmul+2
  5216  0BC7  0837               	movf	___flmul@grs+3,w
  5217  0BC8  00B1               	movwf	??___flmul+3
  5218  0BC9  3018               	movlw	24
  5219  0BCA                     u4075:	
  5220  0BCA  1003               	clrc
  5221  0BCB  0CB1               	rrf	??___flmul+3,f
  5222  0BCC  0CB0               	rrf	??___flmul+2,f
  5223  0BCD  0CAF               	rrf	??___flmul+1,f
  5224  0BCE  0CAE               	rrf	??___flmul,f
  5225  0BCF  3EFF               	addlw	-1
  5226  0BD0  1D03               	skipz
  5227  0BD1  2BCA               	goto	u4075
  5228  0BD2  082E               	movf	??___flmul,w
  5229  0BD3  07BA               	addwf	___flmul@prod,f
  5230  0BD4  082F               	movf	??___flmul+1,w
  5231  0BD5  1103               	clrz
  5232  0BD6  1803               	skipnc
  5233  0BD7  3E01               	addlw	1
  5234  0BD8  1D03               	btfss	3,2
  5235  0BD9  07BB               	addwf	___flmul@prod+1,f
  5236  0BDA  0830               	movf	??___flmul+2,w
  5237  0BDB  1103               	clrz
  5238  0BDC  1803               	skipnc
  5239  0BDD  3E01               	addlw	1
  5240  0BDE  1D03               	btfss	3,2
  5241  0BDF  07BC               	addwf	___flmul@prod+2,f
  5242  0BE0  0831               	movf	??___flmul+3,w
  5243  0BE1  1103               	clrz
  5244  0BE2  1803               	skipnc
  5245  0BE3  3E01               	addlw	1
  5246  0BE4  1D03               	btfss	3,2
  5247  0BE5  07BD               	addwf	___flmul@prod+3,f
  5248  0BE6  3008               	movlw	8
  5249  0BE7  00AE               	movwf	??___flmul
  5250  0BE8                     u4095:	
  5251  0BE8  1003               	clrc
  5252  0BE9  0DB4               	rlf	___flmul@grs,f
  5253  0BEA  0DB5               	rlf	___flmul@grs+1,f
  5254  0BEB  0DB6               	rlf	___flmul@grs+2,f
  5255  0BEC  0DB7               	rlf	___flmul@grs+3,f
  5256  0BED  0BAE               	decfsz	??___flmul,f
  5257  0BEE  2BE8               	goto	u4095
  5258  0BEF  0839               	movf	___flmul@bexp,w
  5259  0BF0  0738               	addwf	___flmul@aexp,w
  5260  0BF1  00AE               	movwf	??___flmul
  5261  0BF2  01AF               	clrf	??___flmul+1
  5262  0BF3  0DAF               	rlf	??___flmul+1,f
  5263  0BF4  082E               	movf	??___flmul,w
  5264  0BF5  3E82               	addlw	130
  5265  0BF6  00BE               	movwf	___flmul@temp
  5266  0BF7  082F               	movf	??___flmul+1,w
  5267  0BF8  1803               	skipnc
  5268  0BF9  3E01               	addlw	1
  5269  0BFA  3EFF               	addlw	255
  5270  0BFB  00BF               	movwf	___flmul@temp+1
  5271  0BFC                     l2667:	
  5272  0BFC  1BBC               	btfsc	___flmul@prod+2,7
  5273  0BFD  2C19               	goto	l2669
  5274  0BFE  3001               	movlw	1
  5275  0BFF  00AE               	movwf	??___flmul
  5276  0C00                     u4105:	
  5277  0C00  1003               	clrc
  5278  0C01  0DBA               	rlf	___flmul@prod,f
  5279  0C02  0DBB               	rlf	___flmul@prod+1,f
  5280  0C03  0DBC               	rlf	___flmul@prod+2,f
  5281  0C04  0DBD               	rlf	___flmul@prod+3,f
  5282  0C05  0BAE               	decfsz	??___flmul,f
  5283  0C06  2C00               	goto	u4105
  5284  0C07  1BB7               	btfsc	___flmul@grs+3,7
  5285  0C08  143A               	bsf	___flmul@prod,0
  5286  0C09  3001               	movlw	1
  5287  0C0A  00AE               	movwf	??___flmul
  5288  0C0B                     u4125:	
  5289  0C0B  1003               	clrc
  5290  0C0C  0DB4               	rlf	___flmul@grs,f
  5291  0C0D  0DB5               	rlf	___flmul@grs+1,f
  5292  0C0E  0DB6               	rlf	___flmul@grs+2,f
  5293  0C0F  0DB7               	rlf	___flmul@grs+3,f
  5294  0C10  0BAE               	decfsz	??___flmul,f
  5295  0C11  2C0B               	goto	u4125
  5296  0C12  30FF               	movlw	255
  5297  0C13  07BE               	addwf	___flmul@temp,f
  5298  0C14  1803               	skipnc
  5299  0C15  0ABF               	incf	___flmul@temp+1,f
  5300  0C16  30FF               	movlw	255
  5301  0C17  07BF               	addwf	___flmul@temp+1,f
  5302  0C18  2BFC               	goto	l2667
  5303  0C19                     l2669:	
  5304  0C19  01B8               	clrf	___flmul@aexp
  5305  0C1A  1FB7               	btfss	___flmul@grs+3,7
  5306  0C1B  2C32               	goto	l2679
  5307  0C1C  30FF               	movlw	255
  5308  0C1D  0534               	andwf	___flmul@grs,w
  5309  0C1E  00AE               	movwf	??___flmul
  5310  0C1F  30FF               	movlw	255
  5311  0C20  0535               	andwf	___flmul@grs+1,w
  5312  0C21  00AF               	movwf	??___flmul+1
  5313  0C22  30FF               	movlw	255
  5314  0C23  0536               	andwf	___flmul@grs+2,w
  5315  0C24  00B0               	movwf	??___flmul+2
  5316  0C25  307F               	movlw	127
  5317  0C26  0537               	andwf	___flmul@grs+3,w
  5318  0C27  00B1               	movwf	??___flmul+3
  5319  0C28  0831               	movf	??___flmul+3,w
  5320  0C29  0430               	iorwf	??___flmul+2,w
  5321  0C2A  042F               	iorwf	??___flmul+1,w
  5322  0C2B  042E               	iorwf	??___flmul,w
  5323  0C2C  1903               	skipnz
  5324  0C2D  183A               	btfsc	___flmul@prod,0
  5325  0C2E  2C30               	goto	l2675
  5326  0C2F  2C32               	goto	l2679
  5327  0C30                     l2675:	
  5328  0C30  01B8               	clrf	___flmul@aexp
  5329  0C31  0AB8               	incf	___flmul@aexp,f
  5330  0C32                     l2679:	
  5331  0C32  0838               	movf	___flmul@aexp,w
  5332  0C33  1903               	btfsc	3,2
  5333  0C34  2C64               	goto	l2689
  5334  0C35  3001               	movlw	1
  5335  0C36  07BA               	addwf	___flmul@prod,f
  5336  0C37  3000               	movlw	0
  5337  0C38  1803               	skipnc
  5338  0C39  3001               	movlw	1
  5339  0C3A  07BB               	addwf	___flmul@prod+1,f
  5340  0C3B  3000               	movlw	0
  5341  0C3C  1803               	skipnc
  5342  0C3D  3001               	movlw	1
  5343  0C3E  07BC               	addwf	___flmul@prod+2,f
  5344  0C3F  3000               	movlw	0
  5345  0C40  1803               	skipnc
  5346  0C41  3001               	movlw	1
  5347  0C42  07BD               	addwf	___flmul@prod+3,f
  5348  0C43  1C3D               	btfss	___flmul@prod+3,0
  5349  0C44  2C64               	goto	l2689
  5350  0C45  083A               	movf	___flmul@prod,w
  5351  0C46  00AE               	movwf	??___flmul
  5352  0C47  083B               	movf	___flmul@prod+1,w
  5353  0C48  00AF               	movwf	??___flmul+1
  5354  0C49  083C               	movf	___flmul@prod+2,w
  5355  0C4A  00B0               	movwf	??___flmul+2
  5356  0C4B  083D               	movf	___flmul@prod+3,w
  5357  0C4C  00B1               	movwf	??___flmul+3
  5358  0C4D  3001               	movlw	1
  5359  0C4E  00B2               	movwf	??___flmul+4
  5360  0C4F                     u4195:	
  5361  0C4F  0D31               	rlf	??___flmul+3,w
  5362  0C50  0CB1               	rrf	??___flmul+3,f
  5363  0C51  0CB0               	rrf	??___flmul+2,f
  5364  0C52  0CAF               	rrf	??___flmul+1,f
  5365  0C53  0CAE               	rrf	??___flmul,f
  5366  0C54  0BB2               	decfsz	??___flmul+4,f
  5367  0C55  2C4F               	goto	u4195
  5368  0C56  0831               	movf	??___flmul+3,w
  5369  0C57  00BD               	movwf	___flmul@prod+3
  5370  0C58  0830               	movf	??___flmul+2,w
  5371  0C59  00BC               	movwf	___flmul@prod+2
  5372  0C5A  082F               	movf	??___flmul+1,w
  5373  0C5B  00BB               	movwf	___flmul@prod+1
  5374  0C5C  082E               	movf	??___flmul,w
  5375  0C5D  00BA               	movwf	___flmul@prod
  5376  0C5E  3001               	movlw	1
  5377  0C5F  07BE               	addwf	___flmul@temp,f
  5378  0C60  1803               	skipnc
  5379  0C61  0ABF               	incf	___flmul@temp+1,f
  5380  0C62  3000               	movlw	0
  5381  0C63  07BF               	addwf	___flmul@temp+1,f
  5382  0C64                     l2689:	
  5383  0C64  083F               	movf	___flmul@temp+1,w
  5384  0C65  3A80               	xorlw	128
  5385  0C66  00FF               	movwf	127
  5386  0C67  3080               	movlw	128
  5387  0C68  027F               	subwf	127,w
  5388  0C69  1D03               	skipz
  5389  0C6A  2C6D               	goto	u4205
  5390  0C6B  30FF               	movlw	255
  5391  0C6C  023E               	subwf	___flmul@temp,w
  5392  0C6D                     u4205:	
  5393  0C6D  1C03               	skipc
  5394  0C6E  2C7A               	goto	l2693
  5395  0C6F  307F               	movlw	127
  5396  0C70  1283               	bcf	3,5	;RP0=0, select bank0
  5397  0C71  1303               	bcf	3,6	;RP1=0, select bank0
  5398  0C72  00BD               	movwf	___flmul@prod+3
  5399  0C73  3080               	movlw	128
  5400  0C74  00BC               	movwf	___flmul@prod+2
  5401  0C75  3000               	movlw	0
  5402  0C76  00BB               	movwf	___flmul@prod+1
  5403  0C77  3000               	movlw	0
  5404  0C78  00BA               	movwf	___flmul@prod
  5405  0C79  2CAA               	goto	l699
  5406  0C7A                     l2693:	
  5407  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  5408  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  5409  0C7C  083F               	movf	___flmul@temp+1,w
  5410  0C7D  3A80               	xorlw	128
  5411  0C7E  00FF               	movwf	127
  5412  0C7F  3080               	movlw	128
  5413  0C80  027F               	subwf	127,w
  5414  0C81  1D03               	skipz
  5415  0C82  2C85               	goto	u4215
  5416  0C83  3001               	movlw	1
  5417  0C84  023E               	subwf	___flmul@temp,w
  5418  0C85                     u4215:	
  5419  0C85  1803               	skipnc
  5420  0C86  2C93               	goto	l2699
  5421  0C87  3000               	movlw	0
  5422  0C88  1283               	bcf	3,5	;RP0=0, select bank0
  5423  0C89  1303               	bcf	3,6	;RP1=0, select bank0
  5424  0C8A  00BD               	movwf	___flmul@prod+3
  5425  0C8B  3000               	movlw	0
  5426  0C8C  00BC               	movwf	___flmul@prod+2
  5427  0C8D  3000               	movlw	0
  5428  0C8E  00BB               	movwf	___flmul@prod+1
  5429  0C8F  3000               	movlw	0
  5430  0C90  00BA               	movwf	___flmul@prod
  5431  0C91  01B3               	clrf	___flmul@sign
  5432  0C92  2CAA               	goto	l699
  5433  0C93                     l2699:	
  5434  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  5435  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  5436  0C95  083E               	movf	___flmul@temp,w
  5437  0C96  00AE               	movwf	??___flmul
  5438  0C97  082E               	movf	??___flmul,w
  5439  0C98  00B9               	movwf	___flmul@bexp
  5440  0C99  30FF               	movlw	255
  5441  0C9A  05BA               	andwf	___flmul@prod,f
  5442  0C9B  30FF               	movlw	255
  5443  0C9C  05BB               	andwf	___flmul@prod+1,f
  5444  0C9D  307F               	movlw	127
  5445  0C9E  05BC               	andwf	___flmul@prod+2,f
  5446  0C9F  3000               	movlw	0
  5447  0CA0  05BD               	andwf	___flmul@prod+3,f
  5448  0CA1  1839               	btfsc	___flmul@bexp,0
  5449  0CA2  17BC               	bsf	___flmul@prod+2,7
  5450  0CA3  0839               	movf	___flmul@bexp,w
  5451  0CA4  00AE               	movwf	??___flmul
  5452  0CA5  1003               	clrc
  5453  0CA6  0C2E               	rrf	??___flmul,w
  5454  0CA7  00AF               	movwf	??___flmul+1
  5455  0CA8  082F               	movf	??___flmul+1,w
  5456  0CA9  00BD               	movwf	___flmul@prod+3
  5457  0CAA                     l699:	
  5458  0CAA  0833               	movf	___flmul@sign,w
  5459  0CAB  00AE               	movwf	??___flmul
  5460  0CAC  082E               	movf	??___flmul,w
  5461  0CAD  04BD               	iorwf	___flmul@prod+3,f
  5462  0CAE  083D               	movf	___flmul@prod+3,w
  5463  0CAF  00A9               	movwf	?___flmul+3
  5464  0CB0  083C               	movf	___flmul@prod+2,w
  5465  0CB1  00A8               	movwf	?___flmul+2
  5466  0CB2  083B               	movf	___flmul@prod+1,w
  5467  0CB3  00A7               	movwf	?___flmul+1
  5468  0CB4  083A               	movf	___flmul@prod,w
  5469  0CB5  00A6               	movwf	?___flmul
  5470  0CB6  0008               	return
  5471  0CB7                     __end_of___flmul:	
  5472                           
  5473                           	psect	text10
  5474  1D86                     __ptext10:	
  5475 ;; *************** function __Umul8_16 *****************
  5476 ;; Defined at:
  5477 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;  multiplier      1    wreg     unsigned char 
  5480 ;;  multiplicand    1    0[COMMON] unsigned char 
  5481 ;; Auto vars:     Size  Location     Type
  5482 ;;  multiplier      1    8[COMMON] unsigned char 
  5483 ;;  word_mpld       2    6[COMMON] unsigned int 
  5484 ;;  product         2    4[COMMON] unsigned int 
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  2    0[COMMON] unsigned int 
  5487 ;; Registers used:
  5488 ;;		wreg, status,2, status,0
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5494 ;;      Params:         2       0       0       0       0
  5495 ;;      Locals:         5       0       0       0       0
  5496 ;;      Temps:          2       0       0       0       0
  5497 ;;      Totals:         9       0       0       0       0
  5498 ;;Total ram usage:        9 bytes
  5499 ;; Hardware stack levels used:    1
  5500 ;; This function calls:
  5501 ;;		Nothing
  5502 ;; This function is called by:
  5503 ;;		___flmul
  5504 ;; This function uses a non-reentrant model
  5505 ;;
  5506                           
  5507                           
  5508                           ;psect for function __Umul8_16
  5509  1D86                     __Umul8_16:	
  5510                           
  5511                           ;incstack = 0
  5512                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5513                           ;__Umul8_16@multiplier stored from wreg
  5514  1D86  00F8               	movwf	__Umul8_16@multiplier
  5515  1D87  01F4               	clrf	__Umul8_16@product
  5516  1D88  01F5               	clrf	__Umul8_16@product+1
  5517  1D89  0870               	movf	__Umul8_16@multiplicand,w
  5518  1D8A  00F2               	movwf	??__Umul8_16
  5519  1D8B  01F3               	clrf	??__Umul8_16+1
  5520  1D8C  0872               	movf	??__Umul8_16,w
  5521  1D8D  00F6               	movwf	__Umul8_16@word_mpld
  5522  1D8E  0873               	movf	??__Umul8_16+1,w
  5523  1D8F  00F7               	movwf	__Umul8_16@word_mpld+1
  5524  1D90                     l2227:	
  5525  1D90  1C78               	btfss	__Umul8_16@multiplier,0
  5526  1D91  2D98               	goto	l753
  5527  1D92  0876               	movf	__Umul8_16@word_mpld,w
  5528  1D93  07F4               	addwf	__Umul8_16@product,f
  5529  1D94  1803               	skipnc
  5530  1D95  0AF5               	incf	__Umul8_16@product+1,f
  5531  1D96  0877               	movf	__Umul8_16@word_mpld+1,w
  5532  1D97  07F5               	addwf	__Umul8_16@product+1,f
  5533  1D98                     l753:	
  5534  1D98  3001               	movlw	1
  5535  1D99                     u3025:	
  5536  1D99  1003               	clrc
  5537  1D9A  0DF6               	rlf	__Umul8_16@word_mpld,f
  5538  1D9B  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5539  1D9C  3EFF               	addlw	-1
  5540  1D9D  1D03               	skipz
  5541  1D9E  2D99               	goto	u3025
  5542  1D9F  1003               	clrc
  5543  1DA0  0CF8               	rrf	__Umul8_16@multiplier,f
  5544  1DA1  0878               	movf	__Umul8_16@multiplier,w
  5545  1DA2  1D03               	btfss	3,2
  5546  1DA3  2D90               	goto	l2227
  5547  1DA4  0875               	movf	__Umul8_16@product+1,w
  5548  1DA5  00F1               	movwf	?__Umul8_16+1
  5549  1DA6  0874               	movf	__Umul8_16@product,w
  5550  1DA7  00F0               	movwf	?__Umul8_16
  5551  1DA8  0008               	return
  5552  1DA9                     __end_of__Umul8_16:	
  5553                           
  5554                           	psect	text11
  5555  12DB                     __ptext11:	
  5556 ;; *************** function __tdiv_to_l_ *****************
  5557 ;; Defined at:
  5558 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;  f1              4    0[COMMON] float 
  5561 ;;  f2              4    4[COMMON] float 
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;  quot            4    0[BANK0 ] unsigned long 
  5564 ;;  exp1            1    5[BANK0 ] unsigned char 
  5565 ;;  cntr            1    4[BANK0 ] unsigned char 
  5566 ;; Return value:  Size  Location     Type
  5567 ;;                  4    0[COMMON] unsigned long 
  5568 ;; Registers used:
  5569 ;;		wreg, status,2, status,0
  5570 ;; Tracked objects:
  5571 ;;		On entry : 0/0
  5572 ;;		On exit  : 0/0
  5573 ;;		Unchanged: 0/0
  5574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5575 ;;      Params:         8       0       0       0       0
  5576 ;;      Locals:         0       6       0       0       0
  5577 ;;      Temps:          4       0       0       0       0
  5578 ;;      Totals:        12       6       0       0       0
  5579 ;;Total ram usage:       18 bytes
  5580 ;; Hardware stack levels used:    1
  5581 ;; This function calls:
  5582 ;;		Nothing
  5583 ;; This function is called by:
  5584 ;;		_sprintf
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           
  5589                           ;psect for function __tdiv_to_l_
  5590  12DB                     __tdiv_to_l_:	
  5591                           
  5592                           ;incstack = 0
  5593                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5594  12DB  0870               	movf	__tdiv_to_l_@f1,w
  5595  12DC  00F8               	movwf	??__tdiv_to_l_
  5596  12DD  0871               	movf	__tdiv_to_l_@f1+1,w
  5597  12DE  00F9               	movwf	??__tdiv_to_l_+1
  5598  12DF  0872               	movf	__tdiv_to_l_@f1+2,w
  5599  12E0  00FA               	movwf	??__tdiv_to_l_+2
  5600  12E1  1003               	clrc
  5601  12E2  0D79               	rlf	??__tdiv_to_l_+1,w
  5602  12E3  0D7A               	rlf	??__tdiv_to_l_+2,w
  5603  12E4  00FB               	movwf	??__tdiv_to_l_+3
  5604  12E5  087B               	movf	??__tdiv_to_l_+3,w
  5605  12E6  1283               	bcf	3,5	;RP0=0, select bank0
  5606  12E7  1303               	bcf	3,6	;RP1=0, select bank0
  5607  12E8  00A5               	movwf	__tdiv_to_l_@exp1
  5608  12E9  0825               	movf	__tdiv_to_l_@exp1,w
  5609  12EA  1D03               	btfss	3,2
  5610  12EB  2AF5               	goto	l2817
  5611  12EC                     l2813:	
  5612  12EC  3000               	movlw	0
  5613  12ED  00F3               	movwf	?__tdiv_to_l_+3
  5614  12EE  3000               	movlw	0
  5615  12EF  00F2               	movwf	?__tdiv_to_l_+2
  5616  12F0  3000               	movlw	0
  5617  12F1  00F1               	movwf	?__tdiv_to_l_+1
  5618  12F2  3000               	movlw	0
  5619  12F3  00F0               	movwf	?__tdiv_to_l_
  5620  12F4  0008               	return
  5621  12F5                     l2817:	
  5622  12F5  0874               	movf	__tdiv_to_l_@f2,w
  5623  12F6  00F8               	movwf	??__tdiv_to_l_
  5624  12F7  0875               	movf	__tdiv_to_l_@f2+1,w
  5625  12F8  00F9               	movwf	??__tdiv_to_l_+1
  5626  12F9  0876               	movf	__tdiv_to_l_@f2+2,w
  5627  12FA  00FA               	movwf	??__tdiv_to_l_+2
  5628  12FB  1003               	clrc
  5629  12FC  0D79               	rlf	??__tdiv_to_l_+1,w
  5630  12FD  0D7A               	rlf	??__tdiv_to_l_+2,w
  5631  12FE  00FB               	movwf	??__tdiv_to_l_+3
  5632  12FF  087B               	movf	??__tdiv_to_l_+3,w
  5633  1300  00A4               	movwf	__tdiv_to_l_@cntr
  5634  1301  0824               	movf	__tdiv_to_l_@cntr,w
  5635  1302  1903               	btfsc	3,2
  5636  1303  2AEC               	goto	l2813
  5637  1304  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5638  1305  30FF               	movlw	255
  5639  1306  05F0               	andwf	__tdiv_to_l_@f1,f
  5640  1307  30FF               	movlw	255
  5641  1308  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5642  1309  3000               	movlw	0
  5643  130A  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5644  130B  17F5               	bsf	__tdiv_to_l_@f2+1,7
  5645  130C  30FF               	movlw	255
  5646  130D  05F4               	andwf	__tdiv_to_l_@f2,f
  5647  130E  30FF               	movlw	255
  5648  130F  05F5               	andwf	__tdiv_to_l_@f2+1,f
  5649  1310  3000               	movlw	0
  5650  1311  05F6               	andwf	__tdiv_to_l_@f2+2,f
  5651  1312  3000               	movlw	0
  5652  1313  00A3               	movwf	__tdiv_to_l_@quot+3
  5653  1314  3000               	movlw	0
  5654  1315  00A2               	movwf	__tdiv_to_l_@quot+2
  5655  1316  3000               	movlw	0
  5656  1317  00A1               	movwf	__tdiv_to_l_@quot+1
  5657  1318  3000               	movlw	0
  5658  1319  00A0               	movwf	__tdiv_to_l_@quot
  5659  131A  307F               	movlw	127
  5660  131B  02A5               	subwf	__tdiv_to_l_@exp1,f
  5661  131C  3098               	movlw	152
  5662  131D  0724               	addwf	__tdiv_to_l_@cntr,w
  5663  131E  00F8               	movwf	??__tdiv_to_l_
  5664  131F  0878               	movf	??__tdiv_to_l_,w
  5665  1320  02A5               	subwf	__tdiv_to_l_@exp1,f
  5666  1321  3018               	movlw	24
  5667  1322  00F8               	movwf	??__tdiv_to_l_
  5668  1323  0878               	movf	??__tdiv_to_l_,w
  5669  1324  00A4               	movwf	__tdiv_to_l_@cntr
  5670  1325                     l2831:	
  5671  1325  3001               	movlw	1
  5672  1326  00F8               	movwf	??__tdiv_to_l_
  5673  1327                     u4535:	
  5674  1327  1003               	clrc
  5675  1328  0DA0               	rlf	__tdiv_to_l_@quot,f
  5676  1329  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5677  132A  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5678  132B  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5679  132C  0BF8               	decfsz	??__tdiv_to_l_,f
  5680  132D  2B27               	goto	u4535
  5681  132E  0876               	movf	__tdiv_to_l_@f2+2,w
  5682  132F  0272               	subwf	__tdiv_to_l_@f1+2,w
  5683  1330  1D03               	skipz
  5684  1331  2B38               	goto	u4545
  5685  1332  0875               	movf	__tdiv_to_l_@f2+1,w
  5686  1333  0271               	subwf	__tdiv_to_l_@f1+1,w
  5687  1334  1D03               	skipz
  5688  1335  2B38               	goto	u4545
  5689  1336  0874               	movf	__tdiv_to_l_@f2,w
  5690  1337  0270               	subwf	__tdiv_to_l_@f1,w
  5691  1338                     u4545:	
  5692  1338  1C03               	skipc
  5693  1339  2B45               	goto	l2839
  5694  133A  0874               	movf	__tdiv_to_l_@f2,w
  5695  133B  02F0               	subwf	__tdiv_to_l_@f1,f
  5696  133C  0875               	movf	__tdiv_to_l_@f2+1,w
  5697  133D  1C03               	skipc
  5698  133E  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  5699  133F  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5700  1340  0876               	movf	__tdiv_to_l_@f2+2,w
  5701  1341  1C03               	skipc
  5702  1342  0A76               	incf	__tdiv_to_l_@f2+2,w
  5703  1343  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5704  1344  1420               	bsf	__tdiv_to_l_@quot,0
  5705  1345                     l2839:	
  5706  1345  3001               	movlw	1
  5707  1346                     u4555:	
  5708  1346  1003               	clrc
  5709  1347  0DF0               	rlf	__tdiv_to_l_@f1,f
  5710  1348  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5711  1349  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5712  134A  3EFF               	addlw	-1
  5713  134B  1D03               	skipz
  5714  134C  2B46               	goto	u4555
  5715  134D  3001               	movlw	1
  5716  134E  02A4               	subwf	__tdiv_to_l_@cntr,f
  5717  134F  1D03               	btfss	3,2
  5718  1350  2B25               	goto	l2831
  5719  1351  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5720  1352  2B68               	goto	l2851
  5721  1353  0825               	movf	__tdiv_to_l_@exp1,w
  5722  1354  3A80               	xorlw	128
  5723  1355  3E97               	addlw	151
  5724  1356  1C03               	btfss	3,0
  5725  1357  2AEC               	goto	l2813
  5726  1358                     l2849:	
  5727  1358  3001               	movlw	1
  5728  1359                     u4595:	
  5729  1359  1003               	clrc
  5730  135A  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5731  135B  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5732  135C  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5733  135D  0CA0               	rrf	__tdiv_to_l_@quot,f
  5734  135E  3EFF               	addlw	-1
  5735  135F  1D03               	skipz
  5736  1360  2B59               	goto	u4595
  5737  1361  3001               	movlw	1
  5738  1362  00F8               	movwf	??__tdiv_to_l_
  5739  1363  0878               	movf	??__tdiv_to_l_,w
  5740  1364  07A5               	addwf	__tdiv_to_l_@exp1,f
  5741  1365  1903               	btfsc	3,2
  5742  1366  2B7B               	goto	l2859
  5743  1367  2B58               	goto	l2849
  5744  1368                     l2851:	
  5745  1368  3018               	movlw	24
  5746  1369  0225               	subwf	__tdiv_to_l_@exp1,w
  5747  136A  1803               	btfsc	3,0
  5748  136B  2AEC               	goto	l2813
  5749  136C                     l492:	
  5750  136C  0825               	movf	__tdiv_to_l_@exp1,w
  5751  136D  1903               	btfsc	3,2
  5752  136E  2B7B               	goto	l2859
  5753  136F  3001               	movlw	1
  5754  1370  00F8               	movwf	??__tdiv_to_l_
  5755  1371                     u4625:	
  5756  1371  1003               	clrc
  5757  1372  0DA0               	rlf	__tdiv_to_l_@quot,f
  5758  1373  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5759  1374  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5760  1375  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5761  1376  0BF8               	decfsz	??__tdiv_to_l_,f
  5762  1377  2B71               	goto	u4625
  5763  1378  3001               	movlw	1
  5764  1379  02A5               	subwf	__tdiv_to_l_@exp1,f
  5765  137A  2B6C               	goto	l492
  5766  137B                     l2859:	
  5767  137B  0823               	movf	__tdiv_to_l_@quot+3,w
  5768  137C  00F3               	movwf	?__tdiv_to_l_+3
  5769  137D  0822               	movf	__tdiv_to_l_@quot+2,w
  5770  137E  00F2               	movwf	?__tdiv_to_l_+2
  5771  137F  0821               	movf	__tdiv_to_l_@quot+1,w
  5772  1380  00F1               	movwf	?__tdiv_to_l_+1
  5773  1381  0820               	movf	__tdiv_to_l_@quot,w
  5774  1382  00F0               	movwf	?__tdiv_to_l_
  5775  1383  0008               	return
  5776  1384                     __end_of__tdiv_to_l_:	
  5777                           
  5778                           	psect	text12
  5779  1384                     __ptext12:	
  5780 ;; *************** function __div_to_l_ *****************
  5781 ;; Defined at:
  5782 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
  5783 ;; Parameters:    Size  Location     Type
  5784 ;;  f1              4    0[COMMON] unsigned long 
  5785 ;;  f2              4    4[COMMON] unsigned long 
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;  quot            4    0[BANK0 ] unsigned long 
  5788 ;;  exp1            1    5[BANK0 ] unsigned char 
  5789 ;;  cntr            1    4[BANK0 ] unsigned char 
  5790 ;; Return value:  Size  Location     Type
  5791 ;;                  4    0[COMMON] unsigned long 
  5792 ;; Registers used:
  5793 ;;		wreg, status,2, status,0
  5794 ;; Tracked objects:
  5795 ;;		On entry : 0/0
  5796 ;;		On exit  : 0/0
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5799 ;;      Params:         8       0       0       0       0
  5800 ;;      Locals:         0       6       0       0       0
  5801 ;;      Temps:          1       0       0       0       0
  5802 ;;      Totals:         9       6       0       0       0
  5803 ;;Total ram usage:       15 bytes
  5804 ;; Hardware stack levels used:    1
  5805 ;; This function calls:
  5806 ;;		Nothing
  5807 ;; This function is called by:
  5808 ;;		_sprintf
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           
  5813                           ;psect for function __div_to_l_
  5814  1384                     __div_to_l_:	
  5815                           
  5816                           ;incstack = 0
  5817                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5818  1384  1003               	clrc
  5819  1385  0D72               	rlf	__div_to_l_@f1+2,w
  5820  1386  0D73               	rlf	__div_to_l_@f1+3,w
  5821  1387  00F8               	movwf	??__div_to_l_
  5822  1388  0878               	movf	??__div_to_l_,w
  5823  1389  1283               	bcf	3,5	;RP0=0, select bank0
  5824  138A  1303               	bcf	3,6	;RP1=0, select bank0
  5825  138B  00A5               	movwf	__div_to_l_@exp1
  5826  138C  0825               	movf	__div_to_l_@exp1,w
  5827  138D  1D03               	btfss	3,2
  5828  138E  2B98               	goto	l2869
  5829  138F                     l2865:	
  5830  138F  3000               	movlw	0
  5831  1390  00F3               	movwf	?__div_to_l_+3
  5832  1391  3000               	movlw	0
  5833  1392  00F2               	movwf	?__div_to_l_+2
  5834  1393  3000               	movlw	0
  5835  1394  00F1               	movwf	?__div_to_l_+1
  5836  1395  3000               	movlw	0
  5837  1396  00F0               	movwf	?__div_to_l_
  5838  1397  0008               	return
  5839  1398                     l2869:	
  5840  1398  1003               	clrc
  5841  1399  0D76               	rlf	__div_to_l_@f2+2,w
  5842  139A  0D77               	rlf	__div_to_l_@f2+3,w
  5843  139B  00F8               	movwf	??__div_to_l_
  5844  139C  0878               	movf	??__div_to_l_,w
  5845  139D  00A4               	movwf	__div_to_l_@cntr
  5846  139E  0824               	movf	__div_to_l_@cntr,w
  5847  139F  1903               	btfsc	3,2
  5848  13A0  2B8F               	goto	l2865
  5849  13A1  17F2               	bsf	__div_to_l_@f1+2,7
  5850  13A2  30FF               	movlw	255
  5851  13A3  05F0               	andwf	__div_to_l_@f1,f
  5852  13A4  30FF               	movlw	255
  5853  13A5  05F1               	andwf	__div_to_l_@f1+1,f
  5854  13A6  30FF               	movlw	255
  5855  13A7  05F2               	andwf	__div_to_l_@f1+2,f
  5856  13A8  3000               	movlw	0
  5857  13A9  05F3               	andwf	__div_to_l_@f1+3,f
  5858  13AA  17F6               	bsf	__div_to_l_@f2+2,7
  5859  13AB  30FF               	movlw	255
  5860  13AC  05F4               	andwf	__div_to_l_@f2,f
  5861  13AD  30FF               	movlw	255
  5862  13AE  05F5               	andwf	__div_to_l_@f2+1,f
  5863  13AF  30FF               	movlw	255
  5864  13B0  05F6               	andwf	__div_to_l_@f2+2,f
  5865  13B1  3000               	movlw	0
  5866  13B2  05F7               	andwf	__div_to_l_@f2+3,f
  5867  13B3  3000               	movlw	0
  5868  13B4  00A3               	movwf	__div_to_l_@quot+3
  5869  13B5  3000               	movlw	0
  5870  13B6  00A2               	movwf	__div_to_l_@quot+2
  5871  13B7  3000               	movlw	0
  5872  13B8  00A1               	movwf	__div_to_l_@quot+1
  5873  13B9  3000               	movlw	0
  5874  13BA  00A0               	movwf	__div_to_l_@quot
  5875  13BB  307F               	movlw	127
  5876  13BC  02A5               	subwf	__div_to_l_@exp1,f
  5877  13BD  30A0               	movlw	160
  5878  13BE  0724               	addwf	__div_to_l_@cntr,w
  5879  13BF  00F8               	movwf	??__div_to_l_
  5880  13C0  0878               	movf	??__div_to_l_,w
  5881  13C1  02A5               	subwf	__div_to_l_@exp1,f
  5882  13C2  3020               	movlw	32
  5883  13C3  00F8               	movwf	??__div_to_l_
  5884  13C4  0878               	movf	??__div_to_l_,w
  5885  13C5  00A4               	movwf	__div_to_l_@cntr
  5886  13C6                     l2883:	
  5887  13C6  3001               	movlw	1
  5888  13C7  00F8               	movwf	??__div_to_l_
  5889  13C8                     u4665:	
  5890  13C8  1003               	clrc
  5891  13C9  0DA0               	rlf	__div_to_l_@quot,f
  5892  13CA  0DA1               	rlf	__div_to_l_@quot+1,f
  5893  13CB  0DA2               	rlf	__div_to_l_@quot+2,f
  5894  13CC  0DA3               	rlf	__div_to_l_@quot+3,f
  5895  13CD  0BF8               	decfsz	??__div_to_l_,f
  5896  13CE  2BC8               	goto	u4665
  5897  13CF  0877               	movf	__div_to_l_@f2+3,w
  5898  13D0  0273               	subwf	__div_to_l_@f1+3,w
  5899  13D1  1D03               	skipz
  5900  13D2  2BDD               	goto	u4675
  5901  13D3  0876               	movf	__div_to_l_@f2+2,w
  5902  13D4  0272               	subwf	__div_to_l_@f1+2,w
  5903  13D5  1D03               	skipz
  5904  13D6  2BDD               	goto	u4675
  5905  13D7  0875               	movf	__div_to_l_@f2+1,w
  5906  13D8  0271               	subwf	__div_to_l_@f1+1,w
  5907  13D9  1D03               	skipz
  5908  13DA  2BDD               	goto	u4675
  5909  13DB  0874               	movf	__div_to_l_@f2,w
  5910  13DC  0270               	subwf	__div_to_l_@f1,w
  5911  13DD                     u4675:	
  5912  13DD  1C03               	skipc
  5913  13DE  2BEE               	goto	l2891
  5914  13DF  0874               	movf	__div_to_l_@f2,w
  5915  13E0  02F0               	subwf	__div_to_l_@f1,f
  5916  13E1  0875               	movf	__div_to_l_@f2+1,w
  5917  13E2  1C03               	skipc
  5918  13E3  0F75               	incfsz	__div_to_l_@f2+1,w
  5919  13E4  02F1               	subwf	__div_to_l_@f1+1,f
  5920  13E5  0876               	movf	__div_to_l_@f2+2,w
  5921  13E6  1C03               	skipc
  5922  13E7  0F76               	incfsz	__div_to_l_@f2+2,w
  5923  13E8  02F2               	subwf	__div_to_l_@f1+2,f
  5924  13E9  0877               	movf	__div_to_l_@f2+3,w
  5925  13EA  1C03               	skipc
  5926  13EB  0F77               	incfsz	__div_to_l_@f2+3,w
  5927  13EC  02F3               	subwf	__div_to_l_@f1+3,f
  5928  13ED  1420               	bsf	__div_to_l_@quot,0
  5929  13EE                     l2891:	
  5930  13EE  3001               	movlw	1
  5931  13EF  00F8               	movwf	??__div_to_l_
  5932  13F0                     u4685:	
  5933  13F0  1003               	clrc
  5934  13F1  0DF0               	rlf	__div_to_l_@f1,f
  5935  13F2  0DF1               	rlf	__div_to_l_@f1+1,f
  5936  13F3  0DF2               	rlf	__div_to_l_@f1+2,f
  5937  13F4  0DF3               	rlf	__div_to_l_@f1+3,f
  5938  13F5  0BF8               	decfsz	??__div_to_l_,f
  5939  13F6  2BF0               	goto	u4685
  5940  13F7  3001               	movlw	1
  5941  13F8  02A4               	subwf	__div_to_l_@cntr,f
  5942  13F9  1D03               	btfss	3,2
  5943  13FA  2BC6               	goto	l2883
  5944  13FB  1FA5               	btfss	__div_to_l_@exp1,7
  5945  13FC  2C12               	goto	l2903
  5946  13FD  0825               	movf	__div_to_l_@exp1,w
  5947  13FE  3A80               	xorlw	128
  5948  13FF  3E9F               	addlw	159
  5949  1400  1C03               	btfss	3,0
  5950  1401  2B8F               	goto	l2865
  5951  1402                     l2901:	
  5952  1402  3001               	movlw	1
  5953  1403                     u4725:	
  5954  1403  1003               	clrc
  5955  1404  0CA3               	rrf	__div_to_l_@quot+3,f
  5956  1405  0CA2               	rrf	__div_to_l_@quot+2,f
  5957  1406  0CA1               	rrf	__div_to_l_@quot+1,f
  5958  1407  0CA0               	rrf	__div_to_l_@quot,f
  5959  1408  3EFF               	addlw	-1
  5960  1409  1D03               	skipz
  5961  140A  2C03               	goto	u4725
  5962  140B  3001               	movlw	1
  5963  140C  00F8               	movwf	??__div_to_l_
  5964  140D  0878               	movf	??__div_to_l_,w
  5965  140E  07A5               	addwf	__div_to_l_@exp1,f
  5966  140F  1903               	btfsc	3,2
  5967  1410  2C25               	goto	l2911
  5968  1411  2C02               	goto	l2901
  5969  1412                     l2903:	
  5970  1412  3020               	movlw	32
  5971  1413  0225               	subwf	__div_to_l_@exp1,w
  5972  1414  1803               	btfsc	3,0
  5973  1415  2B8F               	goto	l2865
  5974  1416                     l445:	
  5975  1416  0825               	movf	__div_to_l_@exp1,w
  5976  1417  1903               	btfsc	3,2
  5977  1418  2C25               	goto	l2911
  5978  1419  3001               	movlw	1
  5979  141A  00F8               	movwf	??__div_to_l_
  5980  141B                     u4755:	
  5981  141B  1003               	clrc
  5982  141C  0DA0               	rlf	__div_to_l_@quot,f
  5983  141D  0DA1               	rlf	__div_to_l_@quot+1,f
  5984  141E  0DA2               	rlf	__div_to_l_@quot+2,f
  5985  141F  0DA3               	rlf	__div_to_l_@quot+3,f
  5986  1420  0BF8               	decfsz	??__div_to_l_,f
  5987  1421  2C1B               	goto	u4755
  5988  1422  3001               	movlw	1
  5989  1423  02A5               	subwf	__div_to_l_@exp1,f
  5990  1424  2C16               	goto	l445
  5991  1425                     l2911:	
  5992  1425  0823               	movf	__div_to_l_@quot+3,w
  5993  1426  00F3               	movwf	?__div_to_l_+3
  5994  1427  0822               	movf	__div_to_l_@quot+2,w
  5995  1428  00F2               	movwf	?__div_to_l_+2
  5996  1429  0821               	movf	__div_to_l_@quot+1,w
  5997  142A  00F1               	movwf	?__div_to_l_+1
  5998  142B  0820               	movf	__div_to_l_@quot,w
  5999  142C  00F0               	movwf	?__div_to_l_
  6000  142D  0008               	return
  6001  142E                     __end_of__div_to_l_:	
  6002                           
  6003                           	psect	text13
  6004  1236                     __ptext13:	
  6005 ;; *************** function ___xxtofl *****************
  6006 ;; Defined at:
  6007 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  6008 ;; Parameters:    Size  Location     Type
  6009 ;;  sign            1    wreg     unsigned char 
  6010 ;;  val             4    4[COMMON] long 
  6011 ;; Auto vars:     Size  Location     Type
  6012 ;;  sign            1    0[BANK0 ] unsigned char 
  6013 ;;  arg             4    2[BANK0 ] unsigned long 
  6014 ;;  exp             1    1[BANK0 ] unsigned char 
  6015 ;; Return value:  Size  Location     Type
  6016 ;;                  4    4[COMMON] unsigned char 
  6017 ;; Registers used:
  6018 ;;		wreg, status,2, status,0
  6019 ;; Tracked objects:
  6020 ;;		On entry : 0/0
  6021 ;;		On exit  : 0/0
  6022 ;;		Unchanged: 0/0
  6023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6024 ;;      Params:         4       0       0       0       0
  6025 ;;      Locals:         0       6       0       0       0
  6026 ;;      Temps:          4       0       0       0       0
  6027 ;;      Totals:         8       6       0       0       0
  6028 ;;Total ram usage:       14 bytes
  6029 ;; Hardware stack levels used:    1
  6030 ;; This function calls:
  6031 ;;		Nothing
  6032 ;; This function is called by:
  6033 ;;		_main
  6034 ;;		_sprintf
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           
  6039                           ;psect for function ___xxtofl
  6040  1236                     ___xxtofl:	
  6041                           
  6042                           ;incstack = 0
  6043                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6044                           ;___xxtofl@sign stored from wreg
  6045  1236  1283               	bcf	3,5	;RP0=0, select bank0
  6046  1237  1303               	bcf	3,6	;RP1=0, select bank0
  6047  1238  00A0               	movwf	___xxtofl@sign
  6048  1239  0820               	movf	___xxtofl@sign,w
  6049  123A  1D03               	btfss	3,2
  6050  123B  1FF7               	btfss	___xxtofl@val+3,7
  6051  123C  2A4D               	goto	l3061
  6052  123D  0974               	comf	___xxtofl@val,w
  6053  123E  00A2               	movwf	___xxtofl@arg
  6054  123F  0975               	comf	___xxtofl@val+1,w
  6055  1240  00A3               	movwf	___xxtofl@arg+1
  6056  1241  0976               	comf	___xxtofl@val+2,w
  6057  1242  00A4               	movwf	___xxtofl@arg+2
  6058  1243  0977               	comf	___xxtofl@val+3,w
  6059  1244  00A5               	movwf	___xxtofl@arg+3
  6060  1245  0AA2               	incf	___xxtofl@arg,f
  6061  1246  1903               	skipnz
  6062  1247  0AA3               	incf	___xxtofl@arg+1,f
  6063  1248  1903               	skipnz
  6064  1249  0AA4               	incf	___xxtofl@arg+2,f
  6065  124A  1903               	skipnz
  6066  124B  0AA5               	incf	___xxtofl@arg+3,f
  6067  124C  2A55               	goto	l725
  6068  124D                     l3061:	
  6069  124D  0877               	movf	___xxtofl@val+3,w
  6070  124E  00A5               	movwf	___xxtofl@arg+3
  6071  124F  0876               	movf	___xxtofl@val+2,w
  6072  1250  00A4               	movwf	___xxtofl@arg+2
  6073  1251  0875               	movf	___xxtofl@val+1,w
  6074  1252  00A3               	movwf	___xxtofl@arg+1
  6075  1253  0874               	movf	___xxtofl@val,w
  6076  1254  00A2               	movwf	___xxtofl@arg
  6077  1255                     l725:	
  6078  1255  0877               	movf	___xxtofl@val+3,w
  6079  1256  0476               	iorwf	___xxtofl@val+2,w
  6080  1257  0475               	iorwf	___xxtofl@val+1,w
  6081  1258  0474               	iorwf	___xxtofl@val,w
  6082  1259  1D03               	skipz
  6083  125A  2A64               	goto	l3067
  6084  125B  3000               	movlw	0
  6085  125C  00F7               	movwf	?___xxtofl+3
  6086  125D  3000               	movlw	0
  6087  125E  00F6               	movwf	?___xxtofl+2
  6088  125F  3000               	movlw	0
  6089  1260  00F5               	movwf	?___xxtofl+1
  6090  1261  3000               	movlw	0
  6091  1262  00F4               	movwf	?___xxtofl
  6092  1263  0008               	return
  6093  1264                     l3067:	
  6094  1264  3096               	movlw	150
  6095  1265  00F8               	movwf	??___xxtofl
  6096  1266  0878               	movf	??___xxtofl,w
  6097  1267  00A1               	movwf	___xxtofl@exp
  6098  1268                     l3071:	
  6099  1268  30FE               	movlw	254
  6100  1269  0525               	andwf	___xxtofl@arg+3,w
  6101  126A  1903               	btfsc	3,2
  6102  126B  2A95               	goto	l731
  6103  126C  3001               	movlw	1
  6104  126D  00F8               	movwf	??___xxtofl
  6105  126E  0878               	movf	??___xxtofl,w
  6106  126F  07A1               	addwf	___xxtofl@exp,f
  6107  1270  3001               	movlw	1
  6108  1271                     u5185:	
  6109  1271  1003               	clrc
  6110  1272  0CA5               	rrf	___xxtofl@arg+3,f
  6111  1273  0CA4               	rrf	___xxtofl@arg+2,f
  6112  1274  0CA3               	rrf	___xxtofl@arg+1,f
  6113  1275  0CA2               	rrf	___xxtofl@arg,f
  6114  1276  3EFF               	addlw	-1
  6115  1277  1D03               	skipz
  6116  1278  2A71               	goto	u5185
  6117  1279  2A68               	goto	l3071
  6118  127A                     l3073:	
  6119  127A  3001               	movlw	1
  6120  127B  00F8               	movwf	??___xxtofl
  6121  127C  0878               	movf	??___xxtofl,w
  6122  127D  07A1               	addwf	___xxtofl@exp,f
  6123  127E  3001               	movlw	1
  6124  127F  07A2               	addwf	___xxtofl@arg,f
  6125  1280  3000               	movlw	0
  6126  1281  1803               	skipnc
  6127  1282  3001               	movlw	1
  6128  1283  07A3               	addwf	___xxtofl@arg+1,f
  6129  1284  3000               	movlw	0
  6130  1285  1803               	skipnc
  6131  1286  3001               	movlw	1
  6132  1287  07A4               	addwf	___xxtofl@arg+2,f
  6133  1288  3000               	movlw	0
  6134  1289  1803               	skipnc
  6135  128A  3001               	movlw	1
  6136  128B  07A5               	addwf	___xxtofl@arg+3,f
  6137  128C  3001               	movlw	1
  6138  128D                     u5205:	
  6139  128D  1003               	clrc
  6140  128E  0CA5               	rrf	___xxtofl@arg+3,f
  6141  128F  0CA4               	rrf	___xxtofl@arg+2,f
  6142  1290  0CA3               	rrf	___xxtofl@arg+1,f
  6143  1291  0CA2               	rrf	___xxtofl@arg,f
  6144  1292  3EFF               	addlw	-1
  6145  1293  1D03               	skipz
  6146  1294  2A8D               	goto	u5205
  6147  1295                     l731:	
  6148  1295  30FF               	movlw	255
  6149  1296  0525               	andwf	___xxtofl@arg+3,w
  6150  1297  1903               	btfsc	3,2
  6151  1298  2AA9               	goto	l3081
  6152  1299  2A7A               	goto	l3073
  6153  129A                     l3083:	
  6154  129A  3002               	movlw	2
  6155  129B  0221               	subwf	___xxtofl@exp,w
  6156  129C  1C03               	btfss	3,0
  6157  129D  2AAB               	goto	l738
  6158  129E  3001               	movlw	1
  6159  129F  02A1               	subwf	___xxtofl@exp,f
  6160  12A0  3001               	movlw	1
  6161  12A1  00F8               	movwf	??___xxtofl
  6162  12A2                     u5225:	
  6163  12A2  1003               	clrc
  6164  12A3  0DA2               	rlf	___xxtofl@arg,f
  6165  12A4  0DA3               	rlf	___xxtofl@arg+1,f
  6166  12A5  0DA4               	rlf	___xxtofl@arg+2,f
  6167  12A6  0DA5               	rlf	___xxtofl@arg+3,f
  6168  12A7  0BF8               	decfsz	??___xxtofl,f
  6169  12A8  2AA2               	goto	u5225
  6170  12A9                     l3081:	
  6171  12A9  1FA4               	btfss	___xxtofl@arg+2,7
  6172  12AA  2A9A               	goto	l3083
  6173  12AB                     l738:	
  6174  12AB  1821               	btfsc	___xxtofl@exp,0
  6175  12AC  2AB5               	goto	l739
  6176  12AD  30FF               	movlw	255
  6177  12AE  05A2               	andwf	___xxtofl@arg,f
  6178  12AF  30FF               	movlw	255
  6179  12B0  05A3               	andwf	___xxtofl@arg+1,f
  6180  12B1  307F               	movlw	127
  6181  12B2  05A4               	andwf	___xxtofl@arg+2,f
  6182  12B3  30FF               	movlw	255
  6183  12B4  05A5               	andwf	___xxtofl@arg+3,f
  6184  12B5                     l739:	
  6185  12B5  1003               	clrc
  6186  12B6  0CA1               	rrf	___xxtofl@exp,f
  6187  12B7  0821               	movf	___xxtofl@exp,w
  6188  12B8  00F8               	movwf	??___xxtofl
  6189  12B9  01F9               	clrf	??___xxtofl+1
  6190  12BA  01FA               	clrf	??___xxtofl+2
  6191  12BB  01FB               	clrf	??___xxtofl+3
  6192  12BC  3018               	movlw	24
  6193  12BD                     u5265:	
  6194  12BD  1003               	clrc
  6195  12BE  0DF8               	rlf	??___xxtofl,f
  6196  12BF  0DF9               	rlf	??___xxtofl+1,f
  6197  12C0  0DFA               	rlf	??___xxtofl+2,f
  6198  12C1  0DFB               	rlf	??___xxtofl+3,f
  6199  12C2  3EFF               	addlw	-1
  6200  12C3  1D03               	skipz
  6201  12C4  2ABD               	goto	u5265
  6202  12C5  0878               	movf	??___xxtofl,w
  6203  12C6  04A2               	iorwf	___xxtofl@arg,f
  6204  12C7  0879               	movf	??___xxtofl+1,w
  6205  12C8  04A3               	iorwf	___xxtofl@arg+1,f
  6206  12C9  087A               	movf	??___xxtofl+2,w
  6207  12CA  04A4               	iorwf	___xxtofl@arg+2,f
  6208  12CB  087B               	movf	??___xxtofl+3,w
  6209  12CC  04A5               	iorwf	___xxtofl@arg+3,f
  6210  12CD  0820               	movf	___xxtofl@sign,w
  6211  12CE  1D03               	btfss	3,2
  6212  12CF  1FF7               	btfss	___xxtofl@val+3,7
  6213  12D0  2AD2               	goto	l3095
  6214  12D1  17A5               	bsf	___xxtofl@arg+3,7
  6215  12D2                     l3095:	
  6216  12D2  0825               	movf	___xxtofl@arg+3,w
  6217  12D3  00F7               	movwf	?___xxtofl+3
  6218  12D4  0824               	movf	___xxtofl@arg+2,w
  6219  12D5  00F6               	movwf	?___xxtofl+2
  6220  12D6  0823               	movf	___xxtofl@arg+1,w
  6221  12D7  00F5               	movwf	?___xxtofl+1
  6222  12D8  0822               	movf	___xxtofl@arg,w
  6223  12D9  00F4               	movwf	?___xxtofl
  6224  12DA  0008               	return
  6225  12DB                     __end_of___xxtofl:	
  6226                           
  6227                           	psect	text14
  6228  1D21                     __ptext14:	
  6229 ;; *************** function ___wmul *****************
  6230 ;; Defined at:
  6231 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  6232 ;; Parameters:    Size  Location     Type
  6233 ;;  multiplier      2    0[COMMON] unsigned int 
  6234 ;;  multiplicand    2    2[COMMON] unsigned int 
  6235 ;; Auto vars:     Size  Location     Type
  6236 ;;  product         2    4[COMMON] unsigned int 
  6237 ;; Return value:  Size  Location     Type
  6238 ;;                  2    0[COMMON] unsigned int 
  6239 ;; Registers used:
  6240 ;;		wreg, status,2, status,0
  6241 ;; Tracked objects:
  6242 ;;		On entry : 0/0
  6243 ;;		On exit  : 0/0
  6244 ;;		Unchanged: 0/0
  6245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6246 ;;      Params:         4       0       0       0       0
  6247 ;;      Locals:         2       0       0       0       0
  6248 ;;      Temps:          0       0       0       0       0
  6249 ;;      Totals:         6       0       0       0       0
  6250 ;;Total ram usage:        6 bytes
  6251 ;; Hardware stack levels used:    1
  6252 ;; This function calls:
  6253 ;;		Nothing
  6254 ;; This function is called by:
  6255 ;;		_sprintf
  6256 ;; This function uses a non-reentrant model
  6257 ;;
  6258                           
  6259                           
  6260                           ;psect for function ___wmul
  6261  1D21                     ___wmul:	
  6262                           
  6263                           ;incstack = 0
  6264                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6265  1D21  01F4               	clrf	___wmul@product
  6266  1D22  01F5               	clrf	___wmul@product+1
  6267  1D23                     l2917:	
  6268  1D23  1C70               	btfss	___wmul@multiplier,0
  6269  1D24  2D2B               	goto	l264
  6270  1D25  0872               	movf	___wmul@multiplicand,w
  6271  1D26  07F4               	addwf	___wmul@product,f
  6272  1D27  1803               	skipnc
  6273  1D28  0AF5               	incf	___wmul@product+1,f
  6274  1D29  0873               	movf	___wmul@multiplicand+1,w
  6275  1D2A  07F5               	addwf	___wmul@product+1,f
  6276  1D2B                     l264:	
  6277  1D2B  3001               	movlw	1
  6278  1D2C                     u4785:	
  6279  1D2C  1003               	clrc
  6280  1D2D  0DF2               	rlf	___wmul@multiplicand,f
  6281  1D2E  0DF3               	rlf	___wmul@multiplicand+1,f
  6282  1D2F  3EFF               	addlw	-1
  6283  1D30  1D03               	skipz
  6284  1D31  2D2C               	goto	u4785
  6285  1D32  3001               	movlw	1
  6286  1D33                     u4795:	
  6287  1D33  1003               	clrc
  6288  1D34  0CF1               	rrf	___wmul@multiplier+1,f
  6289  1D35  0CF0               	rrf	___wmul@multiplier,f
  6290  1D36  3EFF               	addlw	-1
  6291  1D37  1D03               	skipz
  6292  1D38  2D33               	goto	u4795
  6293  1D39  0870               	movf	___wmul@multiplier,w
  6294  1D3A  0471               	iorwf	___wmul@multiplier+1,w
  6295  1D3B  1D03               	btfss	3,2
  6296  1D3C  2D23               	goto	l2917
  6297  1D3D  0875               	movf	___wmul@product+1,w
  6298  1D3E  00F1               	movwf	?___wmul+1
  6299  1D3F  0874               	movf	___wmul@product,w
  6300  1D40  00F0               	movwf	?___wmul
  6301  1D41  0008               	return
  6302  1D42                     __end_of___wmul:	
  6303                           
  6304                           	psect	text15
  6305  1F59                     __ptext15:	
  6306 ;; *************** function ___llmod *****************
  6307 ;; Defined at:
  6308 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  6309 ;; Parameters:    Size  Location     Type
  6310 ;;  divisor         4    0[COMMON] unsigned long 
  6311 ;;  dividend        4    4[COMMON] unsigned long 
  6312 ;; Auto vars:     Size  Location     Type
  6313 ;;  counter         1    9[COMMON] unsigned char 
  6314 ;; Return value:  Size  Location     Type
  6315 ;;                  4    0[COMMON] unsigned long 
  6316 ;; Registers used:
  6317 ;;		wreg, status,2, status,0
  6318 ;; Tracked objects:
  6319 ;;		On entry : 0/0
  6320 ;;		On exit  : 0/0
  6321 ;;		Unchanged: 0/0
  6322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6323 ;;      Params:         8       0       0       0       0
  6324 ;;      Locals:         1       0       0       0       0
  6325 ;;      Temps:          1       0       0       0       0
  6326 ;;      Totals:        10       0       0       0       0
  6327 ;;Total ram usage:       10 bytes
  6328 ;; Hardware stack levels used:    1
  6329 ;; This function calls:
  6330 ;;		Nothing
  6331 ;; This function is called by:
  6332 ;;		_sprintf
  6333 ;; This function uses a non-reentrant model
  6334 ;;
  6335                           
  6336                           
  6337                           ;psect for function ___llmod
  6338  1F59                     ___llmod:	
  6339                           
  6340                           ;incstack = 0
  6341                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6342  1F59  0873               	movf	___llmod@divisor+3,w
  6343  1F5A  0472               	iorwf	___llmod@divisor+2,w
  6344  1F5B  0471               	iorwf	___llmod@divisor+1,w
  6345  1F5C  0470               	iorwf	___llmod@divisor,w
  6346  1F5D  1903               	skipnz
  6347  1F5E  2F9C               	goto	l3045
  6348  1F5F  01F9               	clrf	___llmod@counter
  6349  1F60  0AF9               	incf	___llmod@counter,f
  6350  1F61                     l3035:	
  6351  1F61  1BF3               	btfsc	___llmod@divisor+3,7
  6352  1F62  2F71               	goto	l3037
  6353  1F63  3001               	movlw	1
  6354  1F64  00F8               	movwf	??___llmod
  6355  1F65                     u5105:	
  6356  1F65  1003               	clrc
  6357  1F66  0DF0               	rlf	___llmod@divisor,f
  6358  1F67  0DF1               	rlf	___llmod@divisor+1,f
  6359  1F68  0DF2               	rlf	___llmod@divisor+2,f
  6360  1F69  0DF3               	rlf	___llmod@divisor+3,f
  6361  1F6A  0BF8               	decfsz	??___llmod,f
  6362  1F6B  2F65               	goto	u5105
  6363  1F6C  3001               	movlw	1
  6364  1F6D  00F8               	movwf	??___llmod
  6365  1F6E  0878               	movf	??___llmod,w
  6366  1F6F  07F9               	addwf	___llmod@counter,f
  6367  1F70  2F61               	goto	l3035
  6368  1F71                     l3037:	
  6369  1F71  0873               	movf	___llmod@divisor+3,w
  6370  1F72  0277               	subwf	___llmod@dividend+3,w
  6371  1F73  1D03               	skipz
  6372  1F74  2F7F               	goto	u5125
  6373  1F75  0872               	movf	___llmod@divisor+2,w
  6374  1F76  0276               	subwf	___llmod@dividend+2,w
  6375  1F77  1D03               	skipz
  6376  1F78  2F7F               	goto	u5125
  6377  1F79  0871               	movf	___llmod@divisor+1,w
  6378  1F7A  0275               	subwf	___llmod@dividend+1,w
  6379  1F7B  1D03               	skipz
  6380  1F7C  2F7F               	goto	u5125
  6381  1F7D  0870               	movf	___llmod@divisor,w
  6382  1F7E  0274               	subwf	___llmod@dividend,w
  6383  1F7F                     u5125:	
  6384  1F7F  1C03               	skipc
  6385  1F80  2F8F               	goto	l3041
  6386  1F81  0870               	movf	___llmod@divisor,w
  6387  1F82  02F4               	subwf	___llmod@dividend,f
  6388  1F83  0871               	movf	___llmod@divisor+1,w
  6389  1F84  1C03               	skipc
  6390  1F85  0F71               	incfsz	___llmod@divisor+1,w
  6391  1F86  02F5               	subwf	___llmod@dividend+1,f
  6392  1F87  0872               	movf	___llmod@divisor+2,w
  6393  1F88  1C03               	skipc
  6394  1F89  0F72               	incfsz	___llmod@divisor+2,w
  6395  1F8A  02F6               	subwf	___llmod@dividend+2,f
  6396  1F8B  0873               	movf	___llmod@divisor+3,w
  6397  1F8C  1C03               	skipc
  6398  1F8D  0F73               	incfsz	___llmod@divisor+3,w
  6399  1F8E  02F7               	subwf	___llmod@dividend+3,f
  6400  1F8F                     l3041:	
  6401  1F8F  3001               	movlw	1
  6402  1F90                     u5135:	
  6403  1F90  1003               	clrc
  6404  1F91  0CF3               	rrf	___llmod@divisor+3,f
  6405  1F92  0CF2               	rrf	___llmod@divisor+2,f
  6406  1F93  0CF1               	rrf	___llmod@divisor+1,f
  6407  1F94  0CF0               	rrf	___llmod@divisor,f
  6408  1F95  3EFF               	addlw	-1
  6409  1F96  1D03               	skipz
  6410  1F97  2F90               	goto	u5135
  6411  1F98  3001               	movlw	1
  6412  1F99  02F9               	subwf	___llmod@counter,f
  6413  1F9A  1D03               	btfss	3,2
  6414  1F9B  2F71               	goto	l3037
  6415  1F9C                     l3045:	
  6416  1F9C  0877               	movf	___llmod@dividend+3,w
  6417  1F9D  00F3               	movwf	?___llmod+3
  6418  1F9E  0876               	movf	___llmod@dividend+2,w
  6419  1F9F  00F2               	movwf	?___llmod+2
  6420  1FA0  0875               	movf	___llmod@dividend+1,w
  6421  1FA1  00F1               	movwf	?___llmod+1
  6422  1FA2  0874               	movf	___llmod@dividend,w
  6423  1FA3  00F0               	movwf	?___llmod
  6424  1FA4  0008               	return
  6425  1FA5                     __end_of___llmod:	
  6426                           
  6427                           	psect	text16
  6428  10E4                     __ptext16:	
  6429 ;; *************** function ___lldiv *****************
  6430 ;; Defined at:
  6431 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;  divisor         4    0[COMMON] unsigned long 
  6434 ;;  dividend        4    4[COMMON] unsigned long 
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;  quotient        4    9[COMMON] unsigned long 
  6437 ;;  counter         1   13[COMMON] unsigned char 
  6438 ;; Return value:  Size  Location     Type
  6439 ;;                  4    0[COMMON] unsigned long 
  6440 ;; Registers used:
  6441 ;;		wreg, status,2, status,0
  6442 ;; Tracked objects:
  6443 ;;		On entry : 0/0
  6444 ;;		On exit  : 0/0
  6445 ;;		Unchanged: 0/0
  6446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6447 ;;      Params:         8       0       0       0       0
  6448 ;;      Locals:         5       0       0       0       0
  6449 ;;      Temps:          1       0       0       0       0
  6450 ;;      Totals:        14       0       0       0       0
  6451 ;;Total ram usage:       14 bytes
  6452 ;; Hardware stack levels used:    1
  6453 ;; This function calls:
  6454 ;;		Nothing
  6455 ;; This function is called by:
  6456 ;;		_sprintf
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           
  6461                           ;psect for function ___lldiv
  6462  10E4                     ___lldiv:	
  6463                           
  6464                           ;incstack = 0
  6465                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6466  10E4  3000               	movlw	0
  6467  10E5  00FC               	movwf	___lldiv@quotient+3
  6468  10E6  3000               	movlw	0
  6469  10E7  00FB               	movwf	___lldiv@quotient+2
  6470  10E8  3000               	movlw	0
  6471  10E9  00FA               	movwf	___lldiv@quotient+1
  6472  10EA  3000               	movlw	0
  6473  10EB  00F9               	movwf	___lldiv@quotient
  6474  10EC  0873               	movf	___lldiv@divisor+3,w
  6475  10ED  0472               	iorwf	___lldiv@divisor+2,w
  6476  10EE  0471               	iorwf	___lldiv@divisor+1,w
  6477  10EF  0470               	iorwf	___lldiv@divisor,w
  6478  10F0  1903               	skipnz
  6479  10F1  2939               	goto	l2949
  6480  10F2  01FD               	clrf	___lldiv@counter
  6481  10F3  0AFD               	incf	___lldiv@counter,f
  6482  10F4                     l2935:	
  6483  10F4  1BF3               	btfsc	___lldiv@divisor+3,7
  6484  10F5  2904               	goto	l2937
  6485  10F6  3001               	movlw	1
  6486  10F7  00F8               	movwf	??___lldiv
  6487  10F8                     u4825:	
  6488  10F8  1003               	clrc
  6489  10F9  0DF0               	rlf	___lldiv@divisor,f
  6490  10FA  0DF1               	rlf	___lldiv@divisor+1,f
  6491  10FB  0DF2               	rlf	___lldiv@divisor+2,f
  6492  10FC  0DF3               	rlf	___lldiv@divisor+3,f
  6493  10FD  0BF8               	decfsz	??___lldiv,f
  6494  10FE  28F8               	goto	u4825
  6495  10FF  3001               	movlw	1
  6496  1100  00F8               	movwf	??___lldiv
  6497  1101  0878               	movf	??___lldiv,w
  6498  1102  07FD               	addwf	___lldiv@counter,f
  6499  1103  28F4               	goto	l2935
  6500  1104                     l2937:	
  6501  1104  3001               	movlw	1
  6502  1105  00F8               	movwf	??___lldiv
  6503  1106                     u4845:	
  6504  1106  1003               	clrc
  6505  1107  0DF9               	rlf	___lldiv@quotient,f
  6506  1108  0DFA               	rlf	___lldiv@quotient+1,f
  6507  1109  0DFB               	rlf	___lldiv@quotient+2,f
  6508  110A  0DFC               	rlf	___lldiv@quotient+3,f
  6509  110B  0BF8               	decfsz	??___lldiv,f
  6510  110C  2906               	goto	u4845
  6511  110D  0873               	movf	___lldiv@divisor+3,w
  6512  110E  0277               	subwf	___lldiv@dividend+3,w
  6513  110F  1D03               	skipz
  6514  1110  291B               	goto	u4855
  6515  1111  0872               	movf	___lldiv@divisor+2,w
  6516  1112  0276               	subwf	___lldiv@dividend+2,w
  6517  1113  1D03               	skipz
  6518  1114  291B               	goto	u4855
  6519  1115  0871               	movf	___lldiv@divisor+1,w
  6520  1116  0275               	subwf	___lldiv@dividend+1,w
  6521  1117  1D03               	skipz
  6522  1118  291B               	goto	u4855
  6523  1119  0870               	movf	___lldiv@divisor,w
  6524  111A  0274               	subwf	___lldiv@dividend,w
  6525  111B                     u4855:	
  6526  111B  1C03               	skipc
  6527  111C  292C               	goto	l2945
  6528  111D  0870               	movf	___lldiv@divisor,w
  6529  111E  02F4               	subwf	___lldiv@dividend,f
  6530  111F  0871               	movf	___lldiv@divisor+1,w
  6531  1120  1C03               	skipc
  6532  1121  0F71               	incfsz	___lldiv@divisor+1,w
  6533  1122  02F5               	subwf	___lldiv@dividend+1,f
  6534  1123  0872               	movf	___lldiv@divisor+2,w
  6535  1124  1C03               	skipc
  6536  1125  0F72               	incfsz	___lldiv@divisor+2,w
  6537  1126  02F6               	subwf	___lldiv@dividend+2,f
  6538  1127  0873               	movf	___lldiv@divisor+3,w
  6539  1128  1C03               	skipc
  6540  1129  0F73               	incfsz	___lldiv@divisor+3,w
  6541  112A  02F7               	subwf	___lldiv@dividend+3,f
  6542  112B  1479               	bsf	___lldiv@quotient,0
  6543  112C                     l2945:	
  6544  112C  3001               	movlw	1
  6545  112D                     u4865:	
  6546  112D  1003               	clrc
  6547  112E  0CF3               	rrf	___lldiv@divisor+3,f
  6548  112F  0CF2               	rrf	___lldiv@divisor+2,f
  6549  1130  0CF1               	rrf	___lldiv@divisor+1,f
  6550  1131  0CF0               	rrf	___lldiv@divisor,f
  6551  1132  3EFF               	addlw	-1
  6552  1133  1D03               	skipz
  6553  1134  292D               	goto	u4865
  6554  1135  3001               	movlw	1
  6555  1136  02FD               	subwf	___lldiv@counter,f
  6556  1137  1D03               	btfss	3,2
  6557  1138  2904               	goto	l2937
  6558  1139                     l2949:	
  6559  1139  087C               	movf	___lldiv@quotient+3,w
  6560  113A  00F3               	movwf	?___lldiv+3
  6561  113B  087B               	movf	___lldiv@quotient+2,w
  6562  113C  00F2               	movwf	?___lldiv+2
  6563  113D  087A               	movf	___lldiv@quotient+1,w
  6564  113E  00F1               	movwf	?___lldiv+1
  6565  113F  0879               	movf	___lldiv@quotient,w
  6566  1140  00F0               	movwf	?___lldiv
  6567  1141  0008               	return
  6568  1142                     __end_of___lldiv:	
  6569                           
  6570                           	psect	text17
  6571  081F                     __ptext17:	
  6572 ;; *************** function ___fltol *****************
  6573 ;; Defined at:
  6574 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  6575 ;; Parameters:    Size  Location     Type
  6576 ;;  f1              4   51[BANK0 ] unsigned long 
  6577 ;; Auto vars:     Size  Location     Type
  6578 ;;  exp1            1   61[BANK0 ] unsigned char 
  6579 ;;  sign1           1   60[BANK0 ] unsigned char 
  6580 ;; Return value:  Size  Location     Type
  6581 ;;                  4   51[BANK0 ] long 
  6582 ;; Registers used:
  6583 ;;		wreg, status,2, status,0
  6584 ;; Tracked objects:
  6585 ;;		On entry : 0/0
  6586 ;;		On exit  : 0/0
  6587 ;;		Unchanged: 0/0
  6588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6589 ;;      Params:         0       4       0       0       0
  6590 ;;      Locals:         0       2       0       0       0
  6591 ;;      Temps:          0       5       0       0       0
  6592 ;;      Totals:         0      11       0       0       0
  6593 ;;Total ram usage:       11 bytes
  6594 ;; Hardware stack levels used:    1
  6595 ;; This function calls:
  6596 ;;		Nothing
  6597 ;; This function is called by:
  6598 ;;		_sprintf
  6599 ;; This function uses a non-reentrant model
  6600 ;;
  6601                           
  6602                           
  6603                           ;psect for function ___fltol
  6604  081F                     ___fltol:	
  6605                           
  6606                           ;incstack = 0
  6607                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6608  081F  1003               	clrc
  6609  0820  1283               	bcf	3,5	;RP0=0, select bank0
  6610  0821  1303               	bcf	3,6	;RP1=0, select bank0
  6611  0822  0D55               	rlf	___fltol@f1+2,w
  6612  0823  0D56               	rlf	___fltol@f1+3,w
  6613  0824  00D7               	movwf	??___fltol
  6614  0825  0857               	movf	??___fltol,w
  6615  0826  00DD               	movwf	___fltol@exp1
  6616  0827  085D               	movf	___fltol@exp1,w
  6617  0828  1D03               	btfss	3,2
  6618  0829  2833               	goto	l2999
  6619  082A                     l2995:	
  6620  082A  3000               	movlw	0
  6621  082B  00D6               	movwf	?___fltol+3
  6622  082C  3000               	movlw	0
  6623  082D  00D5               	movwf	?___fltol+2
  6624  082E  3000               	movlw	0
  6625  082F  00D4               	movwf	?___fltol+1
  6626  0830  3000               	movlw	0
  6627  0831  00D3               	movwf	?___fltol
  6628  0832  0008               	return
  6629  0833                     l2999:	
  6630  0833  0853               	movf	___fltol@f1,w
  6631  0834  00D7               	movwf	??___fltol
  6632  0835  0854               	movf	___fltol@f1+1,w
  6633  0836  00D8               	movwf	??___fltol+1
  6634  0837  0855               	movf	___fltol@f1+2,w
  6635  0838  00D9               	movwf	??___fltol+2
  6636  0839  0856               	movf	___fltol@f1+3,w
  6637  083A  00DA               	movwf	??___fltol+3
  6638  083B  301F               	movlw	31
  6639  083C                     u5005:	
  6640  083C  1003               	clrc
  6641  083D  0CDA               	rrf	??___fltol+3,f
  6642  083E  0CD9               	rrf	??___fltol+2,f
  6643  083F  0CD8               	rrf	??___fltol+1,f
  6644  0840  0CD7               	rrf	??___fltol,f
  6645  0841  3EFF               	addlw	-1
  6646  0842  1D03               	skipz
  6647  0843  283C               	goto	u5005
  6648  0844  0857               	movf	??___fltol,w
  6649  0845  00DB               	movwf	??___fltol+4
  6650  0846  085B               	movf	??___fltol+4,w
  6651  0847  00DC               	movwf	___fltol@sign1
  6652  0848  17D5               	bsf	___fltol@f1+2,7
  6653  0849  30FF               	movlw	255
  6654  084A  05D3               	andwf	___fltol@f1,f
  6655  084B  30FF               	movlw	255
  6656  084C  05D4               	andwf	___fltol@f1+1,f
  6657  084D  30FF               	movlw	255
  6658  084E  05D5               	andwf	___fltol@f1+2,f
  6659  084F  3000               	movlw	0
  6660  0850  05D6               	andwf	___fltol@f1+3,f
  6661  0851  3096               	movlw	150
  6662  0852  02DD               	subwf	___fltol@exp1,f
  6663  0853  1FDD               	btfss	___fltol@exp1,7
  6664  0854  286A               	goto	l3017
  6665  0855  085D               	movf	___fltol@exp1,w
  6666  0856  3A80               	xorlw	128
  6667  0857  3E97               	addlw	151
  6668  0858  1C03               	btfss	3,0
  6669  0859  282A               	goto	l2995
  6670  085A                     l3015:	
  6671  085A  3001               	movlw	1
  6672  085B                     u5035:	
  6673  085B  1003               	clrc
  6674  085C  0CD6               	rrf	___fltol@f1+3,f
  6675  085D  0CD5               	rrf	___fltol@f1+2,f
  6676  085E  0CD4               	rrf	___fltol@f1+1,f
  6677  085F  0CD3               	rrf	___fltol@f1,f
  6678  0860  3EFF               	addlw	-1
  6679  0861  1D03               	skipz
  6680  0862  285B               	goto	u5035
  6681  0863  3001               	movlw	1
  6682  0864  00D7               	movwf	??___fltol
  6683  0865  0857               	movf	??___fltol,w
  6684  0866  07DD               	addwf	___fltol@exp1,f
  6685  0867  1903               	btfsc	3,2
  6686  0868  287D               	goto	l3025
  6687  0869  285A               	goto	l3015
  6688  086A                     l3017:	
  6689  086A  3020               	movlw	32
  6690  086B  025D               	subwf	___fltol@exp1,w
  6691  086C  1803               	btfsc	3,0
  6692  086D  282A               	goto	l2995
  6693  086E                     l474:	
  6694  086E  085D               	movf	___fltol@exp1,w
  6695  086F  1903               	btfsc	3,2
  6696  0870  287D               	goto	l3025
  6697  0871  3001               	movlw	1
  6698  0872  00D7               	movwf	??___fltol
  6699  0873                     u5065:	
  6700  0873  1003               	clrc
  6701  0874  0DD3               	rlf	___fltol@f1,f
  6702  0875  0DD4               	rlf	___fltol@f1+1,f
  6703  0876  0DD5               	rlf	___fltol@f1+2,f
  6704  0877  0DD6               	rlf	___fltol@f1+3,f
  6705  0878  0BD7               	decfsz	??___fltol,f
  6706  0879  2873               	goto	u5065
  6707  087A  3001               	movlw	1
  6708  087B  02DD               	subwf	___fltol@exp1,f
  6709  087C  286E               	goto	l474
  6710  087D                     l3025:	
  6711  087D  085C               	movf	___fltol@sign1,w
  6712  087E  1903               	btfsc	3,2
  6713  087F  0008               	return
  6714  0880  09D3               	comf	___fltol@f1,f
  6715  0881  09D4               	comf	___fltol@f1+1,f
  6716  0882  09D5               	comf	___fltol@f1+2,f
  6717  0883  09D6               	comf	___fltol@f1+3,f
  6718  0884  0AD3               	incf	___fltol@f1,f
  6719  0885  1903               	skipnz
  6720  0886  0AD4               	incf	___fltol@f1+1,f
  6721  0887  1903               	skipnz
  6722  0888  0AD5               	incf	___fltol@f1+2,f
  6723  0889  1903               	skipnz
  6724  088A  0AD6               	incf	___fltol@f1+3,f
  6725  088B  0008               	return
  6726  088C                     __end_of___fltol:	
  6727                           
  6728                           	psect	text18
  6729  1D64                     __ptext18:	
  6730 ;; *************** function ___flsub *****************
  6731 ;; Defined at:
  6732 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  6733 ;; Parameters:    Size  Location     Type
  6734 ;;  a               4   72[BANK0 ] long 
  6735 ;;  b               4   76[BANK0 ] long 
  6736 ;; Auto vars:     Size  Location     Type
  6737 ;;		None
  6738 ;; Return value:  Size  Location     Type
  6739 ;;                  4   72[BANK0 ] long 
  6740 ;; Registers used:
  6741 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6742 ;; Tracked objects:
  6743 ;;		On entry : 0/0
  6744 ;;		On exit  : 0/0
  6745 ;;		Unchanged: 0/0
  6746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6747 ;;      Params:         0       8       0       0       0
  6748 ;;      Locals:         0       0       0       0       0
  6749 ;;      Temps:          0       0       0       0       0
  6750 ;;      Totals:         0       8       0       0       0
  6751 ;;Total ram usage:        8 bytes
  6752 ;; Hardware stack levels used:    1
  6753 ;; Hardware stack levels required when called:    1
  6754 ;; This function calls:
  6755 ;;		___fladd
  6756 ;; This function is called by:
  6757 ;;		_sprintf
  6758 ;; This function uses a non-reentrant model
  6759 ;;
  6760                           
  6761                           
  6762                           ;psect for function ___flsub
  6763  1D64                     ___flsub:	
  6764                           
  6765                           ;incstack = 0
  6766                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6767  1D64  3080               	movlw	128
  6768  1D65  1283               	bcf	3,5	;RP0=0, select bank0
  6769  1D66  1303               	bcf	3,6	;RP1=0, select bank0
  6770  1D67  06EB               	xorwf	___flsub@a+3,f
  6771  1D68  086F               	movf	___flsub@b+3,w
  6772  1D69  00D7               	movwf	___fladd@b+3
  6773  1D6A  086E               	movf	___flsub@b+2,w
  6774  1D6B  00D6               	movwf	___fladd@b+2
  6775  1D6C  086D               	movf	___flsub@b+1,w
  6776  1D6D  00D5               	movwf	___fladd@b+1
  6777  1D6E  086C               	movf	___flsub@b,w
  6778  1D6F  00D4               	movwf	___fladd@b
  6779  1D70  086B               	movf	___flsub@a+3,w
  6780  1D71  00DB               	movwf	___fladd@a+3
  6781  1D72  086A               	movf	___flsub@a+2,w
  6782  1D73  00DA               	movwf	___fladd@a+2
  6783  1D74  0869               	movf	___flsub@a+1,w
  6784  1D75  00D9               	movwf	___fladd@a+1
  6785  1D76  0868               	movf	___flsub@a,w
  6786  1D77  00D8               	movwf	___fladd@a
  6787  1D78  160A  118A  25D1   	fcall	___fladd
  6788  1D7B  1283               	bcf	3,5	;RP0=0, select bank0
  6789  1D7C  1303               	bcf	3,6	;RP1=0, select bank0
  6790  1D7D  0857               	movf	?___fladd+3,w
  6791  1D7E  00EB               	movwf	?___flsub+3
  6792  1D7F  0856               	movf	?___fladd+2,w
  6793  1D80  00EA               	movwf	?___flsub+2
  6794  1D81  0855               	movf	?___fladd+1,w
  6795  1D82  00E9               	movwf	?___flsub+1
  6796  1D83  0854               	movf	?___fladd,w
  6797  1D84  00E8               	movwf	?___flsub
  6798  1D85  0008               	return
  6799  1D86                     __end_of___flsub:	
  6800                           
  6801                           	psect	text19
  6802  15D1                     __ptext19:	
  6803 ;; *************** function ___fladd *****************
  6804 ;; Defined at:
  6805 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  6806 ;; Parameters:    Size  Location     Type
  6807 ;;  b               4   52[BANK0 ] long 
  6808 ;;  a               4   56[BANK0 ] long 
  6809 ;; Auto vars:     Size  Location     Type
  6810 ;;  grs             1   71[BANK0 ] unsigned char 
  6811 ;;  bexp            1   70[BANK0 ] unsigned char 
  6812 ;;  aexp            1   69[BANK0 ] unsigned char 
  6813 ;;  signs           1   68[BANK0 ] unsigned char 
  6814 ;; Return value:  Size  Location     Type
  6815 ;;                  4   52[BANK0 ] unsigned char 
  6816 ;; Registers used:
  6817 ;;		wreg, status,2, status,0, btemp+1
  6818 ;; Tracked objects:
  6819 ;;		On entry : 0/0
  6820 ;;		On exit  : 0/0
  6821 ;;		Unchanged: 0/0
  6822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6823 ;;      Params:         0       8       0       0       0
  6824 ;;      Locals:         0       4       0       0       0
  6825 ;;      Temps:          0       8       0       0       0
  6826 ;;      Totals:         0      20       0       0       0
  6827 ;;Total ram usage:       20 bytes
  6828 ;; Hardware stack levels used:    1
  6829 ;; This function calls:
  6830 ;;		Nothing
  6831 ;; This function is called by:
  6832 ;;		_sprintf
  6833 ;;		___flsub
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837                           
  6838                           ;psect for function ___fladd
  6839  15D1                     ___fladd:	
  6840                           
  6841                           ;incstack = 0
  6842                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6843  15D1  1283               	bcf	3,5	;RP0=0, select bank0
  6844  15D2  1303               	bcf	3,6	;RP1=0, select bank0
  6845  15D3  0857               	movf	___fladd@b+3,w
  6846  15D4  3980               	andlw	128
  6847  15D5  00DC               	movwf	??___fladd
  6848  15D6  085C               	movf	??___fladd,w
  6849  15D7  00E4               	movwf	___fladd@signs
  6850  15D8  0857               	movf	___fladd@b+3,w
  6851  15D9  00DC               	movwf	??___fladd
  6852  15DA  075C               	addwf	??___fladd,w
  6853  15DB  00DD               	movwf	??___fladd+1
  6854  15DC  085D               	movf	??___fladd+1,w
  6855  15DD  00E6               	movwf	___fladd@bexp
  6856  15DE  1BD6               	btfsc	___fladd@b+2,7
  6857  15DF  1466               	bsf	___fladd@bexp,0
  6858  15E0  0866               	movf	___fladd@bexp,w
  6859  15E1  1903               	btfsc	3,2
  6860  15E2  2DF1               	goto	l2395
  6861  15E3  0A66               	incf	___fladd@bexp,w
  6862  15E4  1D03               	btfss	3,2
  6863  15E5  2DEE               	goto	l2391
  6864  15E6  3000               	movlw	0
  6865  15E7  00D7               	movwf	___fladd@b+3
  6866  15E8  3000               	movlw	0
  6867  15E9  00D6               	movwf	___fladd@b+2
  6868  15EA  3000               	movlw	0
  6869  15EB  00D5               	movwf	___fladd@b+1
  6870  15EC  3000               	movlw	0
  6871  15ED  00D4               	movwf	___fladd@b
  6872  15EE                     l2391:	
  6873  15EE  17D6               	bsf	___fladd@b+2,7
  6874  15EF  01D7               	clrf	___fladd@b+3
  6875  15F0  2DF9               	goto	l2397
  6876  15F1                     l2395:	
  6877  15F1  3000               	movlw	0
  6878  15F2  00D7               	movwf	___fladd@b+3
  6879  15F3  3000               	movlw	0
  6880  15F4  00D6               	movwf	___fladd@b+2
  6881  15F5  3000               	movlw	0
  6882  15F6  00D5               	movwf	___fladd@b+1
  6883  15F7  3000               	movlw	0
  6884  15F8  00D4               	movwf	___fladd@b
  6885  15F9                     l2397:	
  6886  15F9  085B               	movf	___fladd@a+3,w
  6887  15FA  3980               	andlw	128
  6888  15FB  00DC               	movwf	??___fladd
  6889  15FC  085C               	movf	??___fladd,w
  6890  15FD  00E5               	movwf	___fladd@aexp
  6891  15FE  0865               	movf	___fladd@aexp,w
  6892  15FF  0664               	xorwf	___fladd@signs,w
  6893  1600  1D03               	btfss	3,2
  6894  1601  1764               	bsf	___fladd@signs,6
  6895  1602  085B               	movf	___fladd@a+3,w
  6896  1603  00DC               	movwf	??___fladd
  6897  1604  075C               	addwf	??___fladd,w
  6898  1605  00DD               	movwf	??___fladd+1
  6899  1606  085D               	movf	??___fladd+1,w
  6900  1607  00E5               	movwf	___fladd@aexp
  6901  1608  1BDA               	btfsc	___fladd@a+2,7
  6902  1609  1465               	bsf	___fladd@aexp,0
  6903  160A  0865               	movf	___fladd@aexp,w
  6904  160B  1903               	btfsc	3,2
  6905  160C  2E1B               	goto	l2419
  6906  160D  0A65               	incf	___fladd@aexp,w
  6907  160E  1D03               	btfss	3,2
  6908  160F  2E18               	goto	l2415
  6909  1610  3000               	movlw	0
  6910  1611  00DB               	movwf	___fladd@a+3
  6911  1612  3000               	movlw	0
  6912  1613  00DA               	movwf	___fladd@a+2
  6913  1614  3000               	movlw	0
  6914  1615  00D9               	movwf	___fladd@a+1
  6915  1616  3000               	movlw	0
  6916  1617  00D8               	movwf	___fladd@a
  6917  1618                     l2415:	
  6918  1618  17DA               	bsf	___fladd@a+2,7
  6919  1619  01DB               	clrf	___fladd@a+3
  6920  161A  2E23               	goto	l591
  6921  161B                     l2419:	
  6922  161B  3000               	movlw	0
  6923  161C  00DB               	movwf	___fladd@a+3
  6924  161D  3000               	movlw	0
  6925  161E  00DA               	movwf	___fladd@a+2
  6926  161F  3000               	movlw	0
  6927  1620  00D9               	movwf	___fladd@a+1
  6928  1621  3000               	movlw	0
  6929  1622  00D8               	movwf	___fladd@a
  6930  1623                     l591:	
  6931  1623  0866               	movf	___fladd@bexp,w
  6932  1624  0265               	subwf	___fladd@aexp,w
  6933  1625  1803               	skipnc
  6934  1626  2E69               	goto	l2455
  6935  1627  1F64               	btfss	___fladd@signs,6
  6936  1628  2E2D               	goto	l2425
  6937  1629  3080               	movlw	128
  6938  162A  00DC               	movwf	??___fladd
  6939  162B  085C               	movf	??___fladd,w
  6940  162C  06E4               	xorwf	___fladd@signs,f
  6941  162D                     l2425:	
  6942  162D  0866               	movf	___fladd@bexp,w
  6943  162E  00DC               	movwf	??___fladd
  6944  162F  085C               	movf	??___fladd,w
  6945  1630  00E7               	movwf	___fladd@grs
  6946  1631  0865               	movf	___fladd@aexp,w
  6947  1632  00DC               	movwf	??___fladd
  6948  1633  085C               	movf	??___fladd,w
  6949  1634  00E6               	movwf	___fladd@bexp
  6950  1635  0867               	movf	___fladd@grs,w
  6951  1636  00DC               	movwf	??___fladd
  6952  1637  085C               	movf	??___fladd,w
  6953  1638  00E5               	movwf	___fladd@aexp
  6954  1639  0854               	movf	___fladd@b,w
  6955  163A  00DC               	movwf	??___fladd
  6956  163B  085C               	movf	??___fladd,w
  6957  163C  00E7               	movwf	___fladd@grs
  6958  163D  0858               	movf	___fladd@a,w
  6959  163E  00DC               	movwf	??___fladd
  6960  163F  085C               	movf	??___fladd,w
  6961  1640  00D4               	movwf	___fladd@b
  6962  1641  0867               	movf	___fladd@grs,w
  6963  1642  00DC               	movwf	??___fladd
  6964  1643  085C               	movf	??___fladd,w
  6965  1644  00D8               	movwf	___fladd@a
  6966  1645  0855               	movf	___fladd@b+1,w
  6967  1646  00DC               	movwf	??___fladd
  6968  1647  085C               	movf	??___fladd,w
  6969  1648  00E7               	movwf	___fladd@grs
  6970  1649  0859               	movf	___fladd@a+1,w
  6971  164A  00DC               	movwf	??___fladd
  6972  164B  085C               	movf	??___fladd,w
  6973  164C  00D5               	movwf	___fladd@b+1
  6974  164D  0867               	movf	___fladd@grs,w
  6975  164E  00DC               	movwf	??___fladd
  6976  164F  085C               	movf	??___fladd,w
  6977  1650  00D9               	movwf	___fladd@a+1
  6978  1651  0856               	movf	___fladd@b+2,w
  6979  1652  00DC               	movwf	??___fladd
  6980  1653  085C               	movf	??___fladd,w
  6981  1654  00E7               	movwf	___fladd@grs
  6982  1655  085A               	movf	___fladd@a+2,w
  6983  1656  00DC               	movwf	??___fladd
  6984  1657  085C               	movf	??___fladd,w
  6985  1658  00D6               	movwf	___fladd@b+2
  6986  1659  0867               	movf	___fladd@grs,w
  6987  165A  00DC               	movwf	??___fladd
  6988  165B  085C               	movf	??___fladd,w
  6989  165C  00DA               	movwf	___fladd@a+2
  6990  165D  0857               	movf	___fladd@b+3,w
  6991  165E  00DC               	movwf	??___fladd
  6992  165F  085C               	movf	??___fladd,w
  6993  1660  00E7               	movwf	___fladd@grs
  6994  1661  085B               	movf	___fladd@a+3,w
  6995  1662  00DC               	movwf	??___fladd
  6996  1663  085C               	movf	??___fladd,w
  6997  1664  00D7               	movwf	___fladd@b+3
  6998  1665  0867               	movf	___fladd@grs,w
  6999  1666  00DC               	movwf	??___fladd
  7000  1667  085C               	movf	??___fladd,w
  7001  1668  00DB               	movwf	___fladd@a+3
  7002  1669                     l2455:	
  7003  1669  01E7               	clrf	___fladd@grs
  7004  166A  0865               	movf	___fladd@aexp,w
  7005  166B  00DC               	movwf	??___fladd
  7006  166C  01DD               	clrf	??___fladd+1
  7007  166D  085D               	movf	??___fladd+1,w
  7008  166E  00DF               	movwf	??___fladd+3
  7009  166F  0866               	movf	___fladd@bexp,w
  7010  1670  025C               	subwf	??___fladd,w
  7011  1671  00DE               	movwf	??___fladd+2
  7012  1672  1C03               	skipc
  7013  1673  03DF               	decf	??___fladd+3,f
  7014  1674  085F               	movf	??___fladd+3,w
  7015  1675  3A80               	xorlw	128
  7016  1676  00FF               	movwf	127
  7017  1677  3080               	movlw	128
  7018  1678  027F               	subwf	127,w
  7019  1679  1D03               	skipz
  7020  167A  2E7D               	goto	u3495
  7021  167B  301A               	movlw	26
  7022  167C  025E               	subwf	??___fladd+2,w
  7023  167D                     u3495:	
  7024  167D  1C03               	skipc
  7025  167E  2EB6               	goto	l2473
  7026  167F  1283               	bcf	3,5	;RP0=0, select bank0
  7027  1680  1303               	bcf	3,6	;RP1=0, select bank0
  7028  1681  0857               	movf	___fladd@b+3,w
  7029  1682  0456               	iorwf	___fladd@b+2,w
  7030  1683  0455               	iorwf	___fladd@b+1,w
  7031  1684  0454               	iorwf	___fladd@b,w
  7032  1685  1903               	btfsc	3,2
  7033  1686  2E89               	goto	u3500
  7034  1687  3001               	movlw	1
  7035  1688  2E8A               	goto	u3510
  7036  1689                     u3500:	
  7037  1689  3000               	movlw	0
  7038  168A                     u3510:	
  7039  168A  00DC               	movwf	??___fladd
  7040  168B  085C               	movf	??___fladd,w
  7041  168C  00E7               	movwf	___fladd@grs
  7042  168D  3000               	movlw	0
  7043  168E  00D7               	movwf	___fladd@b+3
  7044  168F  3000               	movlw	0
  7045  1690  00D6               	movwf	___fladd@b+2
  7046  1691  3000               	movlw	0
  7047  1692  00D5               	movwf	___fladd@b+1
  7048  1693  3000               	movlw	0
  7049  1694  00D4               	movwf	___fladd@b
  7050  1695  0865               	movf	___fladd@aexp,w
  7051  1696  00DC               	movwf	??___fladd
  7052  1697  085C               	movf	??___fladd,w
  7053  1698  00E6               	movwf	___fladd@bexp
  7054  1699  2EBC               	goto	l595
  7055  169A                     l597:	
  7056  169A  1C67               	btfss	___fladd@grs,0
  7057  169B  2EA5               	goto	l2463
  7058  169C  0867               	movf	___fladd@grs,w
  7059  169D  00DC               	movwf	??___fladd
  7060  169E  1003               	clrc
  7061  169F  0C5C               	rrf	??___fladd,w
  7062  16A0  3801               	iorlw	1
  7063  16A1  00DD               	movwf	??___fladd+1
  7064  16A2  085D               	movf	??___fladd+1,w
  7065  16A3  00E7               	movwf	___fladd@grs
  7066  16A4  2EA7               	goto	l2465
  7067  16A5                     l2463:	
  7068  16A5  1003               	clrc
  7069  16A6  0CE7               	rrf	___fladd@grs,f
  7070  16A7                     l2465:	
  7071  16A7  1854               	btfsc	___fladd@b,0
  7072  16A8  17E7               	bsf	___fladd@grs,7
  7073  16A9  3001               	movlw	1
  7074  16AA  00DC               	movwf	??___fladd
  7075  16AB                     u3545:	
  7076  16AB  0D57               	rlf	___fladd@b+3,w
  7077  16AC  0CD7               	rrf	___fladd@b+3,f
  7078  16AD  0CD6               	rrf	___fladd@b+2,f
  7079  16AE  0CD5               	rrf	___fladd@b+1,f
  7080  16AF  0CD4               	rrf	___fladd@b,f
  7081  16B0  0BDC               	decfsz	??___fladd& (0+127),f
  7082  16B1  2EAB               	goto	u3545
  7083  16B2  3001               	movlw	1
  7084  16B3  00DC               	movwf	??___fladd
  7085  16B4  085C               	movf	??___fladd,w
  7086  16B5  07E6               	addwf	___fladd@bexp,f
  7087  16B6                     l2473:	
  7088  16B6  1283               	bcf	3,5	;RP0=0, select bank0
  7089  16B7  1303               	bcf	3,6	;RP1=0, select bank0
  7090  16B8  0865               	movf	___fladd@aexp,w
  7091  16B9  0266               	subwf	___fladd@bexp,w
  7092  16BA  1C03               	skipc
  7093  16BB  2E9A               	goto	l597
  7094  16BC                     l595:	
  7095  16BC  1B64               	btfsc	___fladd@signs,6
  7096  16BD  2EFD               	goto	l2499
  7097  16BE  0866               	movf	___fladd@bexp,w
  7098  16BF  1D03               	btfss	3,2
  7099  16C0  2ECA               	goto	l2481
  7100  16C1  3000               	movlw	0
  7101  16C2  00D7               	movwf	?___fladd+3
  7102  16C3  3000               	movlw	0
  7103  16C4  00D6               	movwf	?___fladd+2
  7104  16C5  3000               	movlw	0
  7105  16C6  00D5               	movwf	?___fladd+1
  7106  16C7  3000               	movlw	0
  7107  16C8  00D4               	movwf	?___fladd
  7108  16C9  0008               	return
  7109  16CA                     l2481:	
  7110  16CA  0858               	movf	___fladd@a,w
  7111  16CB  07D4               	addwf	___fladd@b,f
  7112  16CC  0859               	movf	___fladd@a+1,w
  7113  16CD  1103               	clrz
  7114  16CE  1803               	skipnc
  7115  16CF  3E01               	addlw	1
  7116  16D0  1D03               	btfss	3,2
  7117  16D1  07D5               	addwf	___fladd@b+1,f
  7118  16D2  085A               	movf	___fladd@a+2,w
  7119  16D3  1103               	clrz
  7120  16D4  1803               	skipnc
  7121  16D5  3E01               	addlw	1
  7122  16D6  1D03               	btfss	3,2
  7123  16D7  07D6               	addwf	___fladd@b+2,f
  7124  16D8  085B               	movf	___fladd@a+3,w
  7125  16D9  1103               	clrz
  7126  16DA  1803               	skipnc
  7127  16DB  3E01               	addlw	1
  7128  16DC  1D03               	btfss	3,2
  7129  16DD  07D7               	addwf	___fladd@b+3,f
  7130  16DE  1C57               	btfss	___fladd@b+3,0
  7131  16DF  2F9F               	goto	l2533
  7132  16E0  1C67               	btfss	___fladd@grs,0
  7133  16E1  2EEB               	goto	l2489
  7134  16E2  0867               	movf	___fladd@grs,w
  7135  16E3  00DC               	movwf	??___fladd
  7136  16E4  1003               	clrc
  7137  16E5  0C5C               	rrf	??___fladd,w
  7138  16E6  3801               	iorlw	1
  7139  16E7  00DD               	movwf	??___fladd+1
  7140  16E8  085D               	movf	??___fladd+1,w
  7141  16E9  00E7               	movwf	___fladd@grs
  7142  16EA  2EED               	goto	l2491
  7143  16EB                     l2489:	
  7144  16EB  1003               	clrc
  7145  16EC  0CE7               	rrf	___fladd@grs,f
  7146  16ED                     l2491:	
  7147  16ED  1854               	btfsc	___fladd@b,0
  7148  16EE  17E7               	bsf	___fladd@grs,7
  7149  16EF  3001               	movlw	1
  7150  16F0  00DC               	movwf	??___fladd
  7151  16F1                     u3625:	
  7152  16F1  0D57               	rlf	___fladd@b+3,w
  7153  16F2  0CD7               	rrf	___fladd@b+3,f
  7154  16F3  0CD6               	rrf	___fladd@b+2,f
  7155  16F4  0CD5               	rrf	___fladd@b+1,f
  7156  16F5  0CD4               	rrf	___fladd@b,f
  7157  16F6  0BDC               	decfsz	??___fladd& (0+127),f
  7158  16F7  2EF1               	goto	u3625
  7159  16F8  3001               	movlw	1
  7160  16F9  00DC               	movwf	??___fladd
  7161  16FA  085C               	movf	??___fladd,w
  7162  16FB  07E6               	addwf	___fladd@bexp,f
  7163  16FC  2F9F               	goto	l2533
  7164  16FD                     l2499:	
  7165  16FD  0857               	movf	___fladd@b+3,w
  7166  16FE  3A80               	xorlw	128
  7167  16FF  00FF               	movwf	127
  7168  1700  085B               	movf	___fladd@a+3,w
  7169  1701  3A80               	xorlw	128
  7170  1702  027F               	subwf	127,w
  7171  1703  1D03               	skipz
  7172  1704  2F0F               	goto	u3633
  7173  1705  085A               	movf	___fladd@a+2,w
  7174  1706  0256               	subwf	___fladd@b+2,w
  7175  1707  1D03               	skipz
  7176  1708  2F0F               	goto	u3633
  7177  1709  0859               	movf	___fladd@a+1,w
  7178  170A  0255               	subwf	___fladd@b+1,w
  7179  170B  1D03               	skipz
  7180  170C  2F0F               	goto	u3633
  7181  170D  0858               	movf	___fladd@a,w
  7182  170E  0254               	subwf	___fladd@b,w
  7183  170F                     u3633:	
  7184  170F  1803               	skipnc
  7185  1710  2F67               	goto	l2509
  7186  1711  30FF               	movlw	255
  7187  1712  00DC               	movwf	??___fladd
  7188  1713  30FF               	movlw	255
  7189  1714  00DD               	movwf	??___fladd+1
  7190  1715  30FF               	movlw	255
  7191  1716  00DE               	movwf	??___fladd+2
  7192  1717  30FF               	movlw	255
  7193  1718  00DF               	movwf	??___fladd+3
  7194  1719  0858               	movf	___fladd@a,w
  7195  171A  00E0               	movwf	??___fladd+4
  7196  171B  0859               	movf	___fladd@a+1,w
  7197  171C  00E1               	movwf	??___fladd+5
  7198  171D  085A               	movf	___fladd@a+2,w
  7199  171E  00E2               	movwf	??___fladd+6
  7200  171F  085B               	movf	___fladd@a+3,w
  7201  1720  00E3               	movwf	??___fladd+7
  7202  1721  0854               	movf	___fladd@b,w
  7203  1722  02E0               	subwf	??___fladd+4,f
  7204  1723  0855               	movf	___fladd@b+1,w
  7205  1724  1C03               	skipc
  7206  1725  0F55               	incfsz	___fladd@b+1,w
  7207  1726  2F28               	goto	u3641
  7208  1727  2F29               	goto	u3642
  7209  1728                     u3641:	
  7210  1728  02E1               	subwf	??___fladd+5,f
  7211  1729                     u3642:	
  7212  1729  0856               	movf	___fladd@b+2,w
  7213  172A  1C03               	skipc
  7214  172B  0F56               	incfsz	___fladd@b+2,w
  7215  172C  2F2E               	goto	u3643
  7216  172D  2F2F               	goto	u3644
  7217  172E                     u3643:	
  7218  172E  02E2               	subwf	??___fladd+6,f
  7219  172F                     u3644:	
  7220  172F  0857               	movf	___fladd@b+3,w
  7221  1730  1C03               	skipc
  7222  1731  0F57               	incfsz	___fladd@b+3,w
  7223  1732  2F34               	goto	u3645
  7224  1733  2F35               	goto	u3646
  7225  1734                     u3645:	
  7226  1734  02E3               	subwf	??___fladd+7,f
  7227  1735                     u3646:	
  7228  1735  0860               	movf	??___fladd+4,w
  7229  1736  07DC               	addwf	??___fladd,f
  7230  1737  0861               	movf	??___fladd+5,w
  7231  1738  1803               	skipnc
  7232  1739  0F61               	incfsz	??___fladd+5,w
  7233  173A  2F3C               	goto	u3650
  7234  173B  2F3D               	goto	u3651
  7235  173C                     u3650:	
  7236  173C  07DD               	addwf	??___fladd+1,f
  7237  173D                     u3651:	
  7238  173D  0862               	movf	??___fladd+6,w
  7239  173E  1803               	skipnc
  7240  173F  0F62               	incfsz	??___fladd+6,w
  7241  1740  2F42               	goto	u3652
  7242  1741  2F43               	goto	u3653
  7243  1742                     u3652:	
  7244  1742  07DE               	addwf	??___fladd+2,f
  7245  1743                     u3653:	
  7246  1743  0863               	movf	??___fladd+7,w
  7247  1744  1803               	skipnc
  7248  1745  0A63               	incf	??___fladd+7,w
  7249  1746  07DF               	addwf	??___fladd+3,f
  7250  1747  085F               	movf	??___fladd+3,w
  7251  1748  00D7               	movwf	___fladd@b+3
  7252  1749  085E               	movf	??___fladd+2,w
  7253  174A  00D6               	movwf	___fladd@b+2
  7254  174B  085D               	movf	??___fladd+1,w
  7255  174C  00D5               	movwf	___fladd@b+1
  7256  174D  085C               	movf	??___fladd,w
  7257  174E  00D4               	movwf	___fladd@b
  7258  174F  3080               	movlw	128
  7259  1750  00DC               	movwf	??___fladd
  7260  1751  085C               	movf	??___fladd,w
  7261  1752  06E4               	xorwf	___fladd@signs,f
  7262  1753  09E7               	comf	___fladd@grs,f
  7263  1754  0AE7               	incf	___fladd@grs,f
  7264  1755  0867               	movf	___fladd@grs,w
  7265  1756  1D03               	btfss	3,2
  7266  1757  2F75               	goto	l612
  7267  1758  3001               	movlw	1
  7268  1759  07D4               	addwf	___fladd@b,f
  7269  175A  3000               	movlw	0
  7270  175B  1803               	skipnc
  7271  175C  3001               	movlw	1
  7272  175D  07D5               	addwf	___fladd@b+1,f
  7273  175E  3000               	movlw	0
  7274  175F  1803               	skipnc
  7275  1760  3001               	movlw	1
  7276  1761  07D6               	addwf	___fladd@b+2,f
  7277  1762  3000               	movlw	0
  7278  1763  1803               	skipnc
  7279  1764  3001               	movlw	1
  7280  1765  07D7               	addwf	___fladd@b+3,f
  7281  1766  2F75               	goto	l612
  7282  1767                     l2509:	
  7283  1767  0858               	movf	___fladd@a,w
  7284  1768  02D4               	subwf	___fladd@b,f
  7285  1769  0859               	movf	___fladd@a+1,w
  7286  176A  1C03               	skipc
  7287  176B  0F59               	incfsz	___fladd@a+1,w
  7288  176C  02D5               	subwf	___fladd@b+1,f
  7289  176D  085A               	movf	___fladd@a+2,w
  7290  176E  1C03               	skipc
  7291  176F  0F5A               	incfsz	___fladd@a+2,w
  7292  1770  02D6               	subwf	___fladd@b+2,f
  7293  1771  085B               	movf	___fladd@a+3,w
  7294  1772  1C03               	skipc
  7295  1773  0F5B               	incfsz	___fladd@a+3,w
  7296  1774  02D7               	subwf	___fladd@b+3,f
  7297  1775                     l612:	
  7298  1775  0857               	movf	___fladd@b+3,w
  7299  1776  0456               	iorwf	___fladd@b+2,w
  7300  1777  0455               	iorwf	___fladd@b+1,w
  7301  1778  0454               	iorwf	___fladd@b,w
  7302  1779  1D03               	skipz
  7303  177A  2F9D               	goto	l2531
  7304  177B  0867               	movf	___fladd@grs,w
  7305  177C  1D03               	btfss	3,2
  7306  177D  2F9D               	goto	l2531
  7307  177E  3000               	movlw	0
  7308  177F  00D7               	movwf	?___fladd+3
  7309  1780  3000               	movlw	0
  7310  1781  00D6               	movwf	?___fladd+2
  7311  1782  3000               	movlw	0
  7312  1783  00D5               	movwf	?___fladd+1
  7313  1784  3000               	movlw	0
  7314  1785  00D4               	movwf	?___fladd
  7315  1786  0008               	return
  7316  1787                     l2517:	
  7317  1787  3001               	movlw	1
  7318  1788  00DC               	movwf	??___fladd
  7319  1789                     u3695:	
  7320  1789  1003               	clrc
  7321  178A  0DD4               	rlf	___fladd@b,f
  7322  178B  0DD5               	rlf	___fladd@b+1,f
  7323  178C  0DD6               	rlf	___fladd@b+2,f
  7324  178D  0DD7               	rlf	___fladd@b+3,f
  7325  178E  0BDC               	decfsz	??___fladd,f
  7326  178F  2F89               	goto	u3695
  7327  1790  1BE7               	btfsc	___fladd@grs,7
  7328  1791  1454               	bsf	___fladd@b,0
  7329  1792  1C67               	btfss	___fladd@grs,0
  7330  1793  2F96               	goto	l2525
  7331  1794  1403               	setc
  7332  1795  2F97               	goto	L7
  7333  1796                     l2525:	
  7334  1796  1003               	clrc
  7335  1797                     L7:	
  7336  1797  0DE7               	rlf	___fladd@grs,f
  7337  1798  0866               	movf	___fladd@bexp,w
  7338  1799  1903               	btfsc	3,2
  7339  179A  2F9D               	goto	l2531
  7340  179B  3001               	movlw	1
  7341  179C  02E6               	subwf	___fladd@bexp,f
  7342  179D                     l2531:	
  7343  179D  1FD6               	btfss	___fladd@b+2,7
  7344  179E  2F87               	goto	l2517
  7345  179F                     l2533:	
  7346  179F  01E5               	clrf	___fladd@aexp
  7347  17A0  1FE7               	btfss	___fladd@grs,7
  7348  17A1  2FAA               	goto	l2543
  7349  17A2  0867               	movf	___fladd@grs,w
  7350  17A3  397F               	andlw	127
  7351  17A4  1903               	btfsc	3,2
  7352  17A5  1854               	btfsc	___fladd@b,0
  7353  17A6  2FA8               	goto	l2539
  7354  17A7  2FAA               	goto	l2543
  7355  17A8                     l2539:	
  7356  17A8  01E5               	clrf	___fladd@aexp
  7357  17A9  0AE5               	incf	___fladd@aexp,f
  7358  17AA                     l2543:	
  7359  17AA  0865               	movf	___fladd@aexp,w
  7360  17AB  1903               	btfsc	3,2
  7361  17AC  2FDD               	goto	l625
  7362  17AD  3001               	movlw	1
  7363  17AE  07D4               	addwf	___fladd@b,f
  7364  17AF  3000               	movlw	0
  7365  17B0  1803               	skipnc
  7366  17B1  3001               	movlw	1
  7367  17B2  07D5               	addwf	___fladd@b+1,f
  7368  17B3  3000               	movlw	0
  7369  17B4  1803               	skipnc
  7370  17B5  3001               	movlw	1
  7371  17B6  07D6               	addwf	___fladd@b+2,f
  7372  17B7  3000               	movlw	0
  7373  17B8  1803               	skipnc
  7374  17B9  3001               	movlw	1
  7375  17BA  07D7               	addwf	___fladd@b+3,f
  7376  17BB  1C57               	btfss	___fladd@b+3,0
  7377  17BC  2FDD               	goto	l625
  7378  17BD  0854               	movf	___fladd@b,w
  7379  17BE  00DC               	movwf	??___fladd
  7380  17BF  0855               	movf	___fladd@b+1,w
  7381  17C0  00DD               	movwf	??___fladd+1
  7382  17C1  0856               	movf	___fladd@b+2,w
  7383  17C2  00DE               	movwf	??___fladd+2
  7384  17C3  0857               	movf	___fladd@b+3,w
  7385  17C4  00DF               	movwf	??___fladd+3
  7386  17C5  3001               	movlw	1
  7387  17C6  00E0               	movwf	??___fladd+4
  7388  17C7                     u3795:	
  7389  17C7  0D5F               	rlf	??___fladd+3,w
  7390  17C8  0CDF               	rrf	??___fladd+3,f
  7391  17C9  0CDE               	rrf	??___fladd+2,f
  7392  17CA  0CDD               	rrf	??___fladd+1,f
  7393  17CB  0CDC               	rrf	??___fladd,f
  7394  17CC  0BE0               	decfsz	??___fladd+4,f
  7395  17CD  2FC7               	goto	u3795
  7396  17CE  085F               	movf	??___fladd+3,w
  7397  17CF  00D7               	movwf	___fladd@b+3
  7398  17D0  085E               	movf	??___fladd+2,w
  7399  17D1  00D6               	movwf	___fladd@b+2
  7400  17D2  085D               	movf	??___fladd+1,w
  7401  17D3  00D5               	movwf	___fladd@b+1
  7402  17D4  085C               	movf	??___fladd,w
  7403  17D5  00D4               	movwf	___fladd@b
  7404  17D6  0A66               	incf	___fladd@bexp,w
  7405  17D7  1903               	btfsc	3,2
  7406  17D8  2FDD               	goto	l625
  7407  17D9  3001               	movlw	1
  7408  17DA  00DC               	movwf	??___fladd
  7409  17DB  085C               	movf	??___fladd,w
  7410  17DC  07E6               	addwf	___fladd@bexp,f
  7411  17DD                     l625:	
  7412  17DD  0A66               	incf	___fladd@bexp,w
  7413  17DE  1D03               	btfss	3,2
  7414  17DF  0866               	movf	___fladd@bexp,w
  7415  17E0  1D03               	btfss	3,2
  7416  17E1  2FED               	goto	l2561
  7417  17E2  3000               	movlw	0
  7418  17E3  00D7               	movwf	___fladd@b+3
  7419  17E4  3000               	movlw	0
  7420  17E5  00D6               	movwf	___fladd@b+2
  7421  17E6  3000               	movlw	0
  7422  17E7  00D5               	movwf	___fladd@b+1
  7423  17E8  3000               	movlw	0
  7424  17E9  00D4               	movwf	___fladd@b
  7425  17EA  0866               	movf	___fladd@bexp,w
  7426  17EB  1903               	btfsc	3,2
  7427  17EC  01E4               	clrf	___fladd@signs
  7428  17ED                     l2561:	
  7429  17ED  1C66               	btfss	___fladd@bexp,0
  7430  17EE  2FF1               	goto	l2565
  7431  17EF  17D6               	bsf	___fladd@b+2,7
  7432  17F0  2FF5               	goto	l633
  7433  17F1                     l2565:	
  7434  17F1  307F               	movlw	127
  7435  17F2  00DC               	movwf	??___fladd
  7436  17F3  085C               	movf	??___fladd,w
  7437  17F4  05D6               	andwf	___fladd@b+2,f
  7438  17F5                     l633:	
  7439  17F5  0866               	movf	___fladd@bexp,w
  7440  17F6  00DC               	movwf	??___fladd
  7441  17F7  1003               	clrc
  7442  17F8  0C5C               	rrf	??___fladd,w
  7443  17F9  00DD               	movwf	??___fladd+1
  7444  17FA  085D               	movf	??___fladd+1,w
  7445  17FB  00D7               	movwf	___fladd@b+3
  7446  17FC  1FE4               	btfss	___fladd@signs,7
  7447  17FD  0008               	return
  7448  17FE  17D7               	bsf	___fladd@b+3,7
  7449  17FF  0008               	return
  7450  1800                     __end_of___fladd:	
  7451                           
  7452                           	psect	text20
  7453  1CE5                     __ptext20:	
  7454 ;; *************** function ___flneg *****************
  7455 ;; Defined at:
  7456 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
  7457 ;; Parameters:    Size  Location     Type
  7458 ;;  f1              4    0[COMMON] unsigned char 
  7459 ;; Auto vars:     Size  Location     Type
  7460 ;;		None
  7461 ;; Return value:  Size  Location     Type
  7462 ;;                  4    0[COMMON] unsigned char 
  7463 ;; Registers used:
  7464 ;;		wreg
  7465 ;; Tracked objects:
  7466 ;;		On entry : 0/0
  7467 ;;		On exit  : 0/0
  7468 ;;		Unchanged: 0/0
  7469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7470 ;;      Params:         4       0       0       0       0
  7471 ;;      Locals:         0       0       0       0       0
  7472 ;;      Temps:          0       0       0       0       0
  7473 ;;      Totals:         4       0       0       0       0
  7474 ;;Total ram usage:        4 bytes
  7475 ;; Hardware stack levels used:    1
  7476 ;; This function calls:
  7477 ;;		Nothing
  7478 ;; This function is called by:
  7479 ;;		_sprintf
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483                           
  7484                           ;psect for function ___flneg
  7485  1CE5                     ___flneg:	
  7486                           
  7487                           ;incstack = 0
  7488                           ; Regs used in ___flneg: [wreg]
  7489  1CE5  0873               	movf	___flneg@f1+3,w
  7490  1CE6  0472               	iorwf	___flneg@f1+2,w
  7491  1CE7  0471               	iorwf	___flneg@f1+1,w
  7492  1CE8  0470               	iorwf	___flneg@f1,w
  7493  1CE9  1903               	skipnz
  7494  1CEA  0008               	return
  7495  1CEB  3080               	movlw	128
  7496  1CEC  06F3               	xorwf	___flneg@f1+3,f
  7497  1CED  0008               	return
  7498  1CEE                     __end_of___flneg:	
  7499                           
  7500                           	psect	text21
  7501  11A3                     __ptext21:	
  7502 ;; *************** function ___flge *****************
  7503 ;; Defined at:
  7504 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
  7505 ;; Parameters:    Size  Location     Type
  7506 ;;  ff1             4    0[COMMON] unsigned char 
  7507 ;;  ff2             4    4[COMMON] unsigned char 
  7508 ;; Auto vars:     Size  Location     Type
  7509 ;;		None
  7510 ;; Return value:  Size  Location     Type
  7511 ;;		None               void
  7512 ;; Registers used:
  7513 ;;		wreg, status,2, status,0
  7514 ;; Tracked objects:
  7515 ;;		On entry : 0/0
  7516 ;;		On exit  : 0/0
  7517 ;;		Unchanged: 0/0
  7518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7519 ;;      Params:         8       0       0       0       0
  7520 ;;      Locals:         0       0       0       0       0
  7521 ;;      Temps:          4       0       0       0       0
  7522 ;;      Totals:        12       0       0       0       0
  7523 ;;Total ram usage:       12 bytes
  7524 ;; Hardware stack levels used:    1
  7525 ;; This function calls:
  7526 ;;		Nothing
  7527 ;; This function is called by:
  7528 ;;		_sprintf
  7529 ;; This function uses a non-reentrant model
  7530 ;;
  7531                           
  7532                           
  7533                           ;psect for function ___flge
  7534  11A3                     ___flge:	
  7535                           
  7536                           ;incstack = 0
  7537                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7538  11A3  3000               	movlw	0
  7539  11A4  0570               	andwf	___flge@ff1,w
  7540  11A5  00F8               	movwf	??___flge
  7541  11A6  3000               	movlw	0
  7542  11A7  0571               	andwf	___flge@ff1+1,w
  7543  11A8  00F9               	movwf	??___flge+1
  7544  11A9  3080               	movlw	128
  7545  11AA  0572               	andwf	___flge@ff1+2,w
  7546  11AB  00FA               	movwf	??___flge+2
  7547  11AC  307F               	movlw	127
  7548  11AD  0573               	andwf	___flge@ff1+3,w
  7549  11AE  00FB               	movwf	??___flge+3
  7550  11AF  087B               	movf	??___flge+3,w
  7551  11B0  047A               	iorwf	??___flge+2,w
  7552  11B1  0479               	iorwf	??___flge+1,w
  7553  11B2  0478               	iorwf	??___flge,w
  7554  11B3  1D03               	skipz
  7555  11B4  29BD               	goto	l455
  7556  11B5  3000               	movlw	0
  7557  11B6  00F3               	movwf	___flge@ff1+3
  7558  11B7  3000               	movlw	0
  7559  11B8  00F2               	movwf	___flge@ff1+2
  7560  11B9  3000               	movlw	0
  7561  11BA  00F1               	movwf	___flge@ff1+1
  7562  11BB  3000               	movlw	0
  7563  11BC  00F0               	movwf	___flge@ff1
  7564  11BD                     l455:	
  7565  11BD  3000               	movlw	0
  7566  11BE  0574               	andwf	___flge@ff2,w
  7567  11BF  00F8               	movwf	??___flge
  7568  11C0  3000               	movlw	0
  7569  11C1  0575               	andwf	___flge@ff2+1,w
  7570  11C2  00F9               	movwf	??___flge+1
  7571  11C3  3080               	movlw	128
  7572  11C4  0576               	andwf	___flge@ff2+2,w
  7573  11C5  00FA               	movwf	??___flge+2
  7574  11C6  307F               	movlw	127
  7575  11C7  0577               	andwf	___flge@ff2+3,w
  7576  11C8  00FB               	movwf	??___flge+3
  7577  11C9  087B               	movf	??___flge+3,w
  7578  11CA  047A               	iorwf	??___flge+2,w
  7579  11CB  0479               	iorwf	??___flge+1,w
  7580  11CC  0478               	iorwf	??___flge,w
  7581  11CD  1D03               	skipz
  7582  11CE  29D7               	goto	l2971
  7583  11CF  3000               	movlw	0
  7584  11D0  00F7               	movwf	___flge@ff2+3
  7585  11D1  3000               	movlw	0
  7586  11D2  00F6               	movwf	___flge@ff2+2
  7587  11D3  3000               	movlw	0
  7588  11D4  00F5               	movwf	___flge@ff2+1
  7589  11D5  3000               	movlw	0
  7590  11D6  00F4               	movwf	___flge@ff2
  7591  11D7                     l2971:	
  7592  11D7  1FF3               	btfss	___flge@ff1+3,7
  7593  11D8  29FD               	goto	l2975
  7594  11D9  3000               	movlw	0
  7595  11DA  00F8               	movwf	??___flge
  7596  11DB  3000               	movlw	0
  7597  11DC  00F9               	movwf	??___flge+1
  7598  11DD  3000               	movlw	0
  7599  11DE  00FA               	movwf	??___flge+2
  7600  11DF  3080               	movlw	128
  7601  11E0  00FB               	movwf	??___flge+3
  7602  11E1  0870               	movf	___flge@ff1,w
  7603  11E2  02F8               	subwf	??___flge,f
  7604  11E3  0871               	movf	___flge@ff1+1,w
  7605  11E4  1C03               	skipc
  7606  11E5  0F71               	incfsz	___flge@ff1+1,w
  7607  11E6  29E8               	goto	u4941
  7608  11E7  29E9               	goto	u4942
  7609  11E8                     u4941:	
  7610  11E8  02F9               	subwf	??___flge+1,f
  7611  11E9                     u4942:	
  7612  11E9  0872               	movf	___flge@ff1+2,w
  7613  11EA  1C03               	skipc
  7614  11EB  0F72               	incfsz	___flge@ff1+2,w
  7615  11EC  29EE               	goto	u4943
  7616  11ED  29EF               	goto	u4944
  7617  11EE                     u4943:	
  7618  11EE  02FA               	subwf	??___flge+2,f
  7619  11EF                     u4944:	
  7620  11EF  0873               	movf	___flge@ff1+3,w
  7621  11F0  1C03               	skipc
  7622  11F1  0F73               	incfsz	___flge@ff1+3,w
  7623  11F2  29F4               	goto	u4945
  7624  11F3  29F5               	goto	u4946
  7625  11F4                     u4945:	
  7626  11F4  02FB               	subwf	??___flge+3,f
  7627  11F5                     u4946:	
  7628  11F5  087B               	movf	??___flge+3,w
  7629  11F6  00F3               	movwf	___flge@ff1+3
  7630  11F7  087A               	movf	??___flge+2,w
  7631  11F8  00F2               	movwf	___flge@ff1+2
  7632  11F9  0879               	movf	??___flge+1,w
  7633  11FA  00F1               	movwf	___flge@ff1+1
  7634  11FB  0878               	movf	??___flge,w
  7635  11FC  00F0               	movwf	___flge@ff1
  7636  11FD                     l2975:	
  7637  11FD  1FF7               	btfss	___flge@ff2+3,7
  7638  11FE  2A23               	goto	l458
  7639  11FF  3000               	movlw	0
  7640  1200  00F8               	movwf	??___flge
  7641  1201  3000               	movlw	0
  7642  1202  00F9               	movwf	??___flge+1
  7643  1203  3000               	movlw	0
  7644  1204  00FA               	movwf	??___flge+2
  7645  1205  3080               	movlw	128
  7646  1206  00FB               	movwf	??___flge+3
  7647  1207  0874               	movf	___flge@ff2,w
  7648  1208  02F8               	subwf	??___flge,f
  7649  1209  0875               	movf	___flge@ff2+1,w
  7650  120A  1C03               	skipc
  7651  120B  0F75               	incfsz	___flge@ff2+1,w
  7652  120C  2A0E               	goto	u4961
  7653  120D  2A0F               	goto	u4962
  7654  120E                     u4961:	
  7655  120E  02F9               	subwf	??___flge+1,f
  7656  120F                     u4962:	
  7657  120F  0876               	movf	___flge@ff2+2,w
  7658  1210  1C03               	skipc
  7659  1211  0F76               	incfsz	___flge@ff2+2,w
  7660  1212  2A14               	goto	u4963
  7661  1213  2A15               	goto	u4964
  7662  1214                     u4963:	
  7663  1214  02FA               	subwf	??___flge+2,f
  7664  1215                     u4964:	
  7665  1215  0877               	movf	___flge@ff2+3,w
  7666  1216  1C03               	skipc
  7667  1217  0F77               	incfsz	___flge@ff2+3,w
  7668  1218  2A1A               	goto	u4965
  7669  1219  2A1B               	goto	u4966
  7670  121A                     u4965:	
  7671  121A  02FB               	subwf	??___flge+3,f
  7672  121B                     u4966:	
  7673  121B  087B               	movf	??___flge+3,w
  7674  121C  00F7               	movwf	___flge@ff2+3
  7675  121D  087A               	movf	??___flge+2,w
  7676  121E  00F6               	movwf	___flge@ff2+2
  7677  121F  0879               	movf	??___flge+1,w
  7678  1220  00F5               	movwf	___flge@ff2+1
  7679  1221  0878               	movf	??___flge,w
  7680  1222  00F4               	movwf	___flge@ff2
  7681  1223                     l458:	
  7682  1223  3080               	movlw	128
  7683  1224  06F3               	xorwf	___flge@ff1+3,f
  7684  1225  3080               	movlw	128
  7685  1226  06F7               	xorwf	___flge@ff2+3,f
  7686  1227  0877               	movf	___flge@ff2+3,w
  7687  1228  0273               	subwf	___flge@ff1+3,w
  7688  1229  1D03               	skipz
  7689  122A  0008               	return
  7690  122B  0876               	movf	___flge@ff2+2,w
  7691  122C  0272               	subwf	___flge@ff1+2,w
  7692  122D  1D03               	skipz
  7693  122E  0008               	return
  7694  122F  0875               	movf	___flge@ff2+1,w
  7695  1230  0271               	subwf	___flge@ff1+1,w
  7696  1231  1D03               	skipz
  7697  1232  0008               	return
  7698  1233  0874               	movf	___flge@ff2,w
  7699  1234  0270               	subwf	___flge@ff1,w
  7700  1235  0008               	return
  7701  1236                     __end_of___flge:	
  7702                           
  7703                           	psect	text22
  7704  1EC6                     __ptext22:	
  7705 ;; *************** function ___fleq *****************
  7706 ;; Defined at:
  7707 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
  7708 ;; Parameters:    Size  Location     Type
  7709 ;;  ff1             4    0[COMMON] unsigned char 
  7710 ;;  ff2             4    4[COMMON] unsigned char 
  7711 ;; Auto vars:     Size  Location     Type
  7712 ;;		None
  7713 ;; Return value:  Size  Location     Type
  7714 ;;		None               void
  7715 ;; Registers used:
  7716 ;;		wreg, status,2, status,0
  7717 ;; Tracked objects:
  7718 ;;		On entry : 0/0
  7719 ;;		On exit  : 0/0
  7720 ;;		Unchanged: 0/0
  7721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7722 ;;      Params:         8       0       0       0       0
  7723 ;;      Locals:         0       0       0       0       0
  7724 ;;      Temps:          4       0       0       0       0
  7725 ;;      Totals:        12       0       0       0       0
  7726 ;;Total ram usage:       12 bytes
  7727 ;; Hardware stack levels used:    1
  7728 ;; This function calls:
  7729 ;;		Nothing
  7730 ;; This function is called by:
  7731 ;;		_sprintf
  7732 ;; This function uses a non-reentrant model
  7733 ;;
  7734                           
  7735                           
  7736                           ;psect for function ___fleq
  7737  1EC6                     ___fleq:	
  7738                           
  7739                           ;incstack = 0
  7740                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7741  1EC6  3000               	movlw	0
  7742  1EC7  0570               	andwf	___fleq@ff1,w
  7743  1EC8  00F8               	movwf	??___fleq
  7744  1EC9  3000               	movlw	0
  7745  1ECA  0571               	andwf	___fleq@ff1+1,w
  7746  1ECB  00F9               	movwf	??___fleq+1
  7747  1ECC  3080               	movlw	128
  7748  1ECD  0572               	andwf	___fleq@ff1+2,w
  7749  1ECE  00FA               	movwf	??___fleq+2
  7750  1ECF  307F               	movlw	127
  7751  1ED0  0573               	andwf	___fleq@ff1+3,w
  7752  1ED1  00FB               	movwf	??___fleq+3
  7753  1ED2  087B               	movf	??___fleq+3,w
  7754  1ED3  047A               	iorwf	??___fleq+2,w
  7755  1ED4  0479               	iorwf	??___fleq+1,w
  7756  1ED5  0478               	iorwf	??___fleq,w
  7757  1ED6  1D03               	skipz
  7758  1ED7  2EE0               	goto	l450
  7759  1ED8  3000               	movlw	0
  7760  1ED9  00F3               	movwf	___fleq@ff1+3
  7761  1EDA  3000               	movlw	0
  7762  1EDB  00F2               	movwf	___fleq@ff1+2
  7763  1EDC  3000               	movlw	0
  7764  1EDD  00F1               	movwf	___fleq@ff1+1
  7765  1EDE  3000               	movlw	0
  7766  1EDF  00F0               	movwf	___fleq@ff1
  7767  1EE0                     l450:	
  7768  1EE0  3000               	movlw	0
  7769  1EE1  0574               	andwf	___fleq@ff2,w
  7770  1EE2  00F8               	movwf	??___fleq
  7771  1EE3  3000               	movlw	0
  7772  1EE4  0575               	andwf	___fleq@ff2+1,w
  7773  1EE5  00F9               	movwf	??___fleq+1
  7774  1EE6  3080               	movlw	128
  7775  1EE7  0576               	andwf	___fleq@ff2+2,w
  7776  1EE8  00FA               	movwf	??___fleq+2
  7777  1EE9  307F               	movlw	127
  7778  1EEA  0577               	andwf	___fleq@ff2+3,w
  7779  1EEB  00FB               	movwf	??___fleq+3
  7780  1EEC  087B               	movf	??___fleq+3,w
  7781  1EED  047A               	iorwf	??___fleq+2,w
  7782  1EEE  0479               	iorwf	??___fleq+1,w
  7783  1EEF  0478               	iorwf	??___fleq,w
  7784  1EF0  1D03               	skipz
  7785  1EF1  2EFA               	goto	l451
  7786  1EF2  3000               	movlw	0
  7787  1EF3  00F7               	movwf	___fleq@ff2+3
  7788  1EF4  3000               	movlw	0
  7789  1EF5  00F6               	movwf	___fleq@ff2+2
  7790  1EF6  3000               	movlw	0
  7791  1EF7  00F5               	movwf	___fleq@ff2+1
  7792  1EF8  3000               	movlw	0
  7793  1EF9  00F4               	movwf	___fleq@ff2
  7794  1EFA                     l451:	
  7795  1EFA  0877               	movf	___fleq@ff2+3,w
  7796  1EFB  0673               	xorwf	___fleq@ff1+3,w
  7797  1EFC  1D03               	skipz
  7798  1EFD  2F08               	goto	u4905
  7799  1EFE  0876               	movf	___fleq@ff2+2,w
  7800  1EFF  0672               	xorwf	___fleq@ff1+2,w
  7801  1F00  1D03               	skipz
  7802  1F01  2F08               	goto	u4905
  7803  1F02  0875               	movf	___fleq@ff2+1,w
  7804  1F03  0671               	xorwf	___fleq@ff1+1,w
  7805  1F04  1D03               	skipz
  7806  1F05  2F08               	goto	u4905
  7807  1F06  0874               	movf	___fleq@ff2,w
  7808  1F07  0670               	xorwf	___fleq@ff1,w
  7809  1F08                     u4905:	
  7810  1F08  1903               	skipnz
  7811  1F09  2F0C               	goto	l2961
  7812  1F0A  1003               	clrc
  7813  1F0B  0008               	return
  7814  1F0C                     l2961:	
  7815  1F0C  1403               	setc
  7816  1F0D  0008               	return
  7817  1F0E                     __end_of___fleq:	
  7818                           
  7819                           	psect	text23
  7820  1E12                     __ptext23:	
  7821 ;; *************** function _lcdSetCursor *****************
  7822 ;; Defined at:
  7823 ;;		line 56 in file "./lcd.h"
  7824 ;; Parameters:    Size  Location     Type
  7825 ;;  y               1    wreg     unsigned char 
  7826 ;;  x               1    4[COMMON] unsigned char 
  7827 ;; Auto vars:     Size  Location     Type
  7828 ;;  y               1   11[COMMON] unsigned char 
  7829 ;;  temp            1   10[COMMON] unsigned char 
  7830 ;;  row             1    9[COMMON] unsigned char 
  7831 ;;  yy              1    8[COMMON] unsigned char 
  7832 ;;  z               1    7[COMMON] unsigned char 
  7833 ;; Return value:  Size  Location     Type
  7834 ;;                  1    wreg      void 
  7835 ;; Registers used:
  7836 ;;		wreg, status,2, status,0, pclath, cstack
  7837 ;; Tracked objects:
  7838 ;;		On entry : 0/0
  7839 ;;		On exit  : 0/0
  7840 ;;		Unchanged: 0/0
  7841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7842 ;;      Params:         1       0       0       0       0
  7843 ;;      Locals:         5       0       0       0       0
  7844 ;;      Temps:          2       0       0       0       0
  7845 ;;      Totals:         8       0       0       0       0
  7846 ;;Total ram usage:        8 bytes
  7847 ;; Hardware stack levels used:    1
  7848 ;; Hardware stack levels required when called:    2
  7849 ;; This function calls:
  7850 ;;		_lcdCmd
  7851 ;; This function is called by:
  7852 ;;		_main
  7853 ;; This function uses a non-reentrant model
  7854 ;;
  7855                           
  7856                           
  7857                           ;psect for function _lcdSetCursor
  7858  1E12                     _lcdSetCursor:	
  7859                           
  7860                           ;incstack = 0
  7861                           ; Regs used in _lcdSetCursor: [wreg+status,2+status,0+pclath+cstack]
  7862                           ;lcdSetCursor@y stored from wreg
  7863  1E12  00FB               	movwf	lcdSetCursor@y
  7864                           
  7865                           ;./lcd.h: 57:     char temp, z, yy, row = 0x80;
  7866  1E13  3080               	movlw	128
  7867  1E14  00F5               	movwf	??_lcdSetCursor
  7868  1E15  0875               	movf	??_lcdSetCursor,w
  7869  1E16  00F9               	movwf	lcdSetCursor@row
  7870                           
  7871                           ;./lcd.h: 59:     if (y == 2)
  7872  1E17  3002               	movlw	2
  7873  1E18  067B               	xorwf	lcdSetCursor@y,w
  7874  1E19  1D03               	btfss	3,2
  7875  1E1A  2E1D               	goto	l3107
  7876                           
  7877                           ;./lcd.h: 60:         row += 64;
  7878  1E1B  3040               	movlw	64
  7879  1E1C  2E28               	goto	L9
  7880  1E1D                     l3107:	
  7881  1E1D  3003               	movlw	3
  7882  1E1E  067B               	xorwf	lcdSetCursor@y,w
  7883  1E1F  1D03               	btfss	3,2
  7884  1E20  2E23               	goto	l3111
  7885                           
  7886                           ;./lcd.h: 62:         row +=16;
  7887  1E21  3010               	movlw	16
  7888  1E22  2E28               	goto	L9
  7889  1E23                     l3111:	
  7890  1E23  3004               	movlw	4
  7891  1E24  067B               	xorwf	lcdSetCursor@y,w
  7892  1E25  1D03               	btfss	3,2
  7893  1E26  2E2B               	goto	l53
  7894                           
  7895                           ;./lcd.h: 64:         row += 64+16;
  7896  1E27  3050               	movlw	80
  7897  1E28                     L9:	
  7898  1E28  00F5               	movwf	??_lcdSetCursor
  7899  1E29  0875               	movf	??_lcdSetCursor,w
  7900  1E2A  07F9               	addwf	lcdSetCursor@row,f
  7901  1E2B                     l53:	
  7902                           
  7903                           ;./lcd.h: 66:     temp = row + x - 1;
  7904  1E2B  0874               	movf	lcdSetCursor@x,w
  7905  1E2C  0779               	addwf	lcdSetCursor@row,w
  7906  1E2D  3EFF               	addlw	255
  7907  1E2E  00F5               	movwf	??_lcdSetCursor
  7908  1E2F  0875               	movf	??_lcdSetCursor,w
  7909  1E30  00FA               	movwf	lcdSetCursor@temp
  7910                           
  7911                           ;./lcd.h: 67:     z = temp >> 4;
  7912  1E31  087A               	movf	lcdSetCursor@temp,w
  7913  1E32  00F5               	movwf	??_lcdSetCursor
  7914  1E33  3004               	movlw	4
  7915  1E34                     u5325:	
  7916  1E34  1003               	clrc
  7917  1E35  0CF5               	rrf	??_lcdSetCursor,f
  7918  1E36  3EFF               	addlw	-1
  7919  1E37  1D03               	skipz
  7920  1E38  2E34               	goto	u5325
  7921  1E39  0875               	movf	??_lcdSetCursor,w
  7922  1E3A  00F6               	movwf	??_lcdSetCursor+1
  7923  1E3B  0876               	movf	??_lcdSetCursor+1,w
  7924  1E3C  00F7               	movwf	lcdSetCursor@z
  7925                           
  7926                           ;./lcd.h: 68:     yy = temp & 0x0F;
  7927  1E3D  087A               	movf	lcdSetCursor@temp,w
  7928  1E3E  390F               	andlw	15
  7929  1E3F  00F5               	movwf	??_lcdSetCursor
  7930  1E40  0875               	movf	??_lcdSetCursor,w
  7931  1E41  00F8               	movwf	lcdSetCursor@yy
  7932                           
  7933                           ;./lcd.h: 69:     lcdCmd(z);
  7934  1E42  0877               	movf	lcdSetCursor@z,w
  7935  1E43  120A  158A  2005  160A  158A  	fcall	_lcdCmd
  7936                           
  7937                           ;./lcd.h: 70:     lcdCmd(yy);
  7938  1E48  0878               	movf	lcdSetCursor@yy,w
  7939  1E49  120A  158A  2005   	fcall	_lcdCmd
  7940  1E4C  0008               	return
  7941  1E4D                     __end_of_lcdSetCursor:	
  7942                           
  7943                           	psect	text24
  7944  1E89                     __ptext24:	
  7945 ;; *************** function _lcdPrint *****************
  7946 ;; Defined at:
  7947 ;;		line 108 in file "./lcd.h"
  7948 ;; Parameters:    Size  Location     Type
  7949 ;;  a               2    5[COMMON] PTR const unsigned char 
  7950 ;;		 -> main@mensaje(16), STR_5(6), STR_4(9), STR_3(8), 
  7951 ;;		 -> STR_2(12), STR_1(11), 
  7952 ;; Auto vars:     Size  Location     Type
  7953 ;;  i               2   10[COMMON] int 
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  1    wreg      void 
  7956 ;; Registers used:
  7957 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/0
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7963 ;;      Params:         2       0       0       0       0
  7964 ;;      Locals:         2       0       0       0       0
  7965 ;;      Temps:          3       0       0       0       0
  7966 ;;      Totals:         7       0       0       0       0
  7967 ;;Total ram usage:        7 bytes
  7968 ;; Hardware stack levels used:    1
  7969 ;; Hardware stack levels required when called:    2
  7970 ;; This function calls:
  7971 ;;		_lcdWriteChar
  7972 ;; This function is called by:
  7973 ;;		_main
  7974 ;; This function uses a non-reentrant model
  7975 ;;
  7976                           
  7977                           
  7978                           ;psect for function _lcdPrint
  7979  1E89                     _lcdPrint:	
  7980                           
  7981                           ;./lcd.h: 109:     for (int i = 0; a[i] != '\0'; i++)
  7982                           
  7983                           ;incstack = 0
  7984                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7985  1E89  01FA               	clrf	lcdPrint@i
  7986  1E8A  01FB               	clrf	lcdPrint@i+1
  7987  1E8B                     l3157:	
  7988  1E8B  087A               	movf	lcdPrint@i,w
  7989  1E8C  0775               	addwf	lcdPrint@a,w
  7990  1E8D  00F8               	movwf	??_lcdPrint+1
  7991  1E8E  0876               	movf	lcdPrint@a+1,w
  7992  1E8F  00F7               	movwf	??_lcdPrint
  7993  1E90  1803               	skipnc
  7994  1E91  0AF7               	incf	??_lcdPrint,f
  7995  1E92  1BFA               	btfsc	lcdPrint@i,7
  7996  1E93  03F7               	decf	??_lcdPrint,f
  7997  1E94  0877               	movf	??_lcdPrint,w
  7998  1E95  00F9               	movwf	??_lcdPrint+2
  7999  1E96  0879               	movf	??_lcdPrint+2,w
  8000  1E97  1283               	bcf	3,5	;RP0=0, select bank0
  8001  1E98  1303               	bcf	3,6	;RP1=0, select bank0
  8002  1E99  00FF               	movwf	127
  8003  1E9A  0878               	movf	??_lcdPrint+1,w
  8004  1E9B  0084               	movwf	4
  8005  1E9C  160A  118A  2000  160A  158A  	fcall	stringtab
  8006  1EA1  3A00               	xorlw	0
  8007  1EA2  1903               	btfsc	3,2
  8008  1EA3  0008               	return
  8009                           
  8010                           ;./lcd.h: 110:         lcdWriteChar(a[i]);
  8011  1EA4  087A               	movf	lcdPrint@i,w
  8012  1EA5  0775               	addwf	lcdPrint@a,w
  8013  1EA6  00F8               	movwf	??_lcdPrint+1
  8014  1EA7  0876               	movf	lcdPrint@a+1,w
  8015  1EA8  00F7               	movwf	??_lcdPrint
  8016  1EA9  1803               	skipnc
  8017  1EAA  0AF7               	incf	??_lcdPrint,f
  8018  1EAB  1BFA               	btfsc	lcdPrint@i,7
  8019  1EAC  03F7               	decf	??_lcdPrint,f
  8020  1EAD  0877               	movf	??_lcdPrint,w
  8021  1EAE  00F9               	movwf	??_lcdPrint+2
  8022  1EAF  0879               	movf	??_lcdPrint+2,w
  8023  1EB0  1283               	bcf	3,5	;RP0=0, select bank0
  8024  1EB1  1303               	bcf	3,6	;RP1=0, select bank0
  8025  1EB2  00FF               	movwf	127
  8026  1EB3  0878               	movf	??_lcdPrint+1,w
  8027  1EB4  0084               	movwf	4
  8028  1EB5  160A  118A  2000  160A  158A  	fcall	stringtab
  8029  1EBA  160A  158A  25DB  160A  158A  	fcall	_lcdWriteChar
  8030  1EBF  3001               	movlw	1
  8031  1EC0  07FA               	addwf	lcdPrint@i,f
  8032  1EC1  1803               	skipnc
  8033  1EC2  0AFB               	incf	lcdPrint@i+1,f
  8034  1EC3  3000               	movlw	0
  8035  1EC4  07FB               	addwf	lcdPrint@i+1,f
  8036  1EC5  2E8B               	goto	l3157
  8037  1EC6                     __end_of_lcdPrint:	
  8038                           
  8039                           	psect	text25
  8040  1DDB                     __ptext25:	
  8041 ;; *************** function _lcdWriteChar *****************
  8042 ;; Defined at:
  8043 ;;		line 93 in file "./lcd.h"
  8044 ;; Parameters:    Size  Location     Type
  8045 ;;  a               1    wreg     const unsigned char 
  8046 ;; Auto vars:     Size  Location     Type
  8047 ;;  a               1    4[COMMON] const unsigned char 
  8048 ;;  y               1    3[COMMON] unsigned char 
  8049 ;;  temp            1    2[COMMON] unsigned char 
  8050 ;; Return value:  Size  Location     Type
  8051 ;;                  1    wreg      void 
  8052 ;; Registers used:
  8053 ;;		wreg, status,2, status,0, pclath, cstack
  8054 ;; Tracked objects:
  8055 ;;		On entry : 0/0
  8056 ;;		On exit  : 0/0
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8059 ;;      Params:         0       0       0       0       0
  8060 ;;      Locals:         3       0       0       0       0
  8061 ;;      Temps:          1       0       0       0       0
  8062 ;;      Totals:         4       0       0       0       0
  8063 ;;Total ram usage:        4 bytes
  8064 ;; Hardware stack levels used:    1
  8065 ;; Hardware stack levels required when called:    1
  8066 ;; This function calls:
  8067 ;;		_lcdPort
  8068 ;; This function is called by:
  8069 ;;		_lcdPrint
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           
  8073                           
  8074                           ;psect for function _lcdWriteChar
  8075  1DDB                     _lcdWriteChar:	
  8076                           
  8077                           ;incstack = 0
  8078                           ; Regs used in _lcdWriteChar: [wreg+status,2+status,0+pclath+cstack]
  8079                           ;lcdWriteChar@a stored from wreg
  8080  1DDB  00F4               	movwf	lcdWriteChar@a
  8081                           
  8082                           ;./lcd.h: 94:     char temp, y;;./lcd.h: 95:     temp = a & 0x0F;
  8083  1DDC  0874               	movf	lcdWriteChar@a,w
  8084  1DDD  390F               	andlw	15
  8085  1DDE  00F1               	movwf	??_lcdWriteChar
  8086  1DDF  0871               	movf	??_lcdWriteChar,w
  8087  1DE0  00F2               	movwf	lcdWriteChar@temp
  8088                           
  8089                           ;./lcd.h: 96:     y = a & 0xF0;
  8090  1DE1  0874               	movf	lcdWriteChar@a,w
  8091  1DE2  39F0               	andlw	240
  8092  1DE3  00F1               	movwf	??_lcdWriteChar
  8093  1DE4  0871               	movf	??_lcdWriteChar,w
  8094  1DE5  00F3               	movwf	lcdWriteChar@y
  8095                           
  8096                           ;./lcd.h: 97:     RB2 = 1;
  8097  1DE6  1283               	bcf	3,5	;RP0=0, select bank0
  8098  1DE7  1303               	bcf	3,6	;RP1=0, select bank0
  8099  1DE8  1506               	bsf	6,2	;volatile
  8100                           
  8101                           ;./lcd.h: 98:     lcdPort(y >> 4);
  8102  1DE9  0873               	movf	lcdWriteChar@y,w
  8103  1DEA  00F1               	movwf	??_lcdWriteChar
  8104  1DEB  3004               	movlw	4
  8105  1DEC                     u4235:	
  8106  1DEC  1003               	clrc
  8107  1DED  0CF1               	rrf	??_lcdWriteChar,f
  8108  1DEE  3EFF               	addlw	-1
  8109  1DEF  1D03               	skipz
  8110  1DF0  2DEC               	goto	u4235
  8111  1DF1  0871               	movf	??_lcdWriteChar,w
  8112  1DF2  160A  158A  2507  160A  158A  	fcall	_lcdPort
  8113                           
  8114                           ;./lcd.h: 99:     RB3 = 1;
  8115  1DF7  1283               	bcf	3,5	;RP0=0, select bank0
  8116  1DF8  1303               	bcf	3,6	;RP1=0, select bank0
  8117  1DF9  1586               	bsf	6,3	;volatile
  8118                           
  8119                           ;./lcd.h: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  8120  1DFA  300D               	movlw	13
  8121  1DFB  00F1               	movwf	??_lcdWriteChar
  8122  1DFC                     u6047:	
  8123  1DFC  0BF1               	decfsz	??_lcdWriteChar,f
  8124  1DFD  2DFC               	goto	u6047
  8125                           
  8126                           ;./lcd.h: 101:     RB3 = 0;
  8127  1DFE  1283               	bcf	3,5	;RP0=0, select bank0
  8128  1DFF  1303               	bcf	3,6	;RP1=0, select bank0
  8129  1E00  1186               	bcf	6,3	;volatile
  8130                           
  8131                           ;./lcd.h: 102:     lcdPort(temp);
  8132  1E01  0872               	movf	lcdWriteChar@temp,w
  8133  1E02  160A  158A  2507  160A  158A  	fcall	_lcdPort
  8134                           
  8135                           ;./lcd.h: 103:     RB3 = 1;
  8136  1E07  1283               	bcf	3,5	;RP0=0, select bank0
  8137  1E08  1303               	bcf	3,6	;RP1=0, select bank0
  8138  1E09  1586               	bsf	6,3	;volatile
  8139                           
  8140                           ;./lcd.h: 104:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  8141  1E0A  300D               	movlw	13
  8142  1E0B  00F1               	movwf	??_lcdWriteChar
  8143  1E0C                     u6057:	
  8144  1E0C  0BF1               	decfsz	??_lcdWriteChar,f
  8145  1E0D  2E0C               	goto	u6057
  8146                           
  8147                           ;./lcd.h: 105:     RB3 = 0;
  8148  1E0E  1283               	bcf	3,5	;RP0=0, select bank0
  8149  1E0F  1303               	bcf	3,6	;RP1=0, select bank0
  8150  1E10  1186               	bcf	6,3	;volatile
  8151  1E11  0008               	return
  8152  1E12                     __end_of_lcdWriteChar:	
  8153                           
  8154                           	psect	text26
  8155  1142                     __ptext26:	
  8156 ;; *************** function _lcdInit *****************
  8157 ;; Defined at:
  8158 ;;		line 73 in file "./lcd.h"
  8159 ;; Parameters:    Size  Location     Type
  8160 ;;		None
  8161 ;; Auto vars:     Size  Location     Type
  8162 ;;		None
  8163 ;; Return value:  Size  Location     Type
  8164 ;;                  1    wreg      void 
  8165 ;; Registers used:
  8166 ;;		wreg, status,2, status,0, pclath, cstack
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8172 ;;      Params:         0       0       0       0       0
  8173 ;;      Locals:         0       0       0       0       0
  8174 ;;      Temps:          2       0       0       0       0
  8175 ;;      Totals:         2       0       0       0       0
  8176 ;;Total ram usage:        2 bytes
  8177 ;; Hardware stack levels used:    1
  8178 ;; Hardware stack levels required when called:    2
  8179 ;; This function calls:
  8180 ;;		_lcdCmd
  8181 ;;		_lcdPort
  8182 ;; This function is called by:
  8183 ;;		_main
  8184 ;; This function uses a non-reentrant model
  8185 ;;
  8186                           
  8187                           
  8188                           ;psect for function _lcdInit
  8189  1142                     _lcdInit:	
  8190                           
  8191                           ;./lcd.h: 74:     TRISB = 0;
  8192                           
  8193                           ;incstack = 0
  8194                           ; Regs used in _lcdInit: [wreg+status,2+status,0+pclath+cstack]
  8195  1142  1683               	bsf	3,5	;RP0=1, select bank1
  8196  1143  1303               	bcf	3,6	;RP1=0, select bank1
  8197  1144  0186               	clrf	6	;volatile
  8198                           
  8199                           ;./lcd.h: 75:     PORTB = 0;
  8200  1145  1283               	bcf	3,5	;RP0=0, select bank0
  8201  1146  1303               	bcf	3,6	;RP1=0, select bank0
  8202  1147  0186               	clrf	6	;volatile
  8203                           
  8204                           ;./lcd.h: 76:     lcdPort(0x00);
  8205  1148  3000               	movlw	0
  8206  1149  160A  158A  2507  160A  118A  	fcall	_lcdPort
  8207                           
  8208                           ;./lcd.h: 77:     _delay((unsigned long)((20)*(4000000/4000.0)));
  8209  114E  301A               	movlw	26
  8210  114F  00F5               	movwf	??_lcdInit+1
  8211  1150  30F8               	movlw	248
  8212  1151  00F4               	movwf	??_lcdInit
  8213  1152                     u6067:	
  8214  1152  0BF4               	decfsz	??_lcdInit,f
  8215  1153  2952               	goto	u6067
  8216  1154  0BF5               	decfsz	??_lcdInit+1,f
  8217  1155  2952               	goto	u6067
  8218  1156  0000               	nop
  8219                           
  8220                           ;./lcd.h: 78:     lcdCmd(0x03);
  8221  1157  3003               	movlw	3
  8222  1158  120A  158A  2005  160A  118A  	fcall	_lcdCmd
  8223                           
  8224                           ;./lcd.h: 79:     _delay((unsigned long)((5)*(4000000/4000.0)));
  8225  115D  3007               	movlw	7
  8226  115E  00F5               	movwf	??_lcdInit+1
  8227  115F  307D               	movlw	125
  8228  1160  00F4               	movwf	??_lcdInit
  8229  1161                     u6077:	
  8230  1161  0BF4               	decfsz	??_lcdInit,f
  8231  1162  2961               	goto	u6077
  8232  1163  0BF5               	decfsz	??_lcdInit+1,f
  8233  1164  2961               	goto	u6077
  8234                           
  8235                           ;./lcd.h: 80:     lcdCmd(0x03);
  8236  1165  3003               	movlw	3
  8237  1166  120A  158A  2005  160A  118A  	fcall	_lcdCmd
  8238                           
  8239                           ;./lcd.h: 81:     _delay((unsigned long)((11)*(4000000/4000.0)));
  8240  116B  300F               	movlw	15
  8241  116C  00F5               	movwf	??_lcdInit+1
  8242  116D  3047               	movlw	71
  8243  116E  00F4               	movwf	??_lcdInit
  8244  116F                     u6087:	
  8245  116F  0BF4               	decfsz	??_lcdInit,f
  8246  1170  296F               	goto	u6087
  8247  1171  0BF5               	decfsz	??_lcdInit+1,f
  8248  1172  296F               	goto	u6087
  8249  1173  2974               	nop2
  8250                           
  8251                           ;./lcd.h: 82:     lcdCmd(0x03);
  8252  1174  3003               	movlw	3
  8253  1175  120A  158A  2005  160A  118A  	fcall	_lcdCmd
  8254                           
  8255                           ;./lcd.h: 84:     lcdCmd(0x02);
  8256  117A  3002               	movlw	2
  8257  117B  120A  158A  2005  160A  118A  	fcall	_lcdCmd
  8258                           
  8259                           ;./lcd.h: 85:     lcdCmd(0x02);
  8260  1180  3002               	movlw	2
  8261  1181  120A  158A  2005  160A  118A  	fcall	_lcdCmd
  8262                           
  8263                           ;./lcd.h: 86:     lcdCmd(0x08);
  8264  1186  3008               	movlw	8
  8265  1187  120A  158A  2005  160A  118A  	fcall	_lcdCmd
  8266                           
  8267                           ;./lcd.h: 87:     lcdCmd(0x00);
  8268  118C  3000               	movlw	0
  8269  118D  120A  158A  2005  160A  118A  	fcall	_lcdCmd
  8270                           
  8271                           ;./lcd.h: 88:     lcdCmd(0x0C);
  8272  1192  300C               	movlw	12
  8273  1193  120A  158A  2005  160A  118A  	fcall	_lcdCmd
  8274                           
  8275                           ;./lcd.h: 89:     lcdCmd(0x00);
  8276  1198  3000               	movlw	0
  8277  1199  120A  158A  2005  160A  118A  	fcall	_lcdCmd
  8278                           
  8279                           ;./lcd.h: 90:     lcdCmd(0x06);
  8280  119E  3006               	movlw	6
  8281  119F  120A  158A  2005   	fcall	_lcdCmd
  8282  11A2  0008               	return
  8283  11A3                     __end_of_lcdInit:	
  8284                           
  8285                           	psect	text27
  8286  1CEE                     __ptext27:	
  8287 ;; *************** function _lcdClear *****************
  8288 ;; Defined at:
  8289 ;;		line 51 in file "./lcd.h"
  8290 ;; Parameters:    Size  Location     Type
  8291 ;;		None
  8292 ;; Auto vars:     Size  Location     Type
  8293 ;;		None
  8294 ;; Return value:  Size  Location     Type
  8295 ;;                  1    wreg      void 
  8296 ;; Registers used:
  8297 ;;		wreg, status,2, status,0, pclath, cstack
  8298 ;; Tracked objects:
  8299 ;;		On entry : 0/0
  8300 ;;		On exit  : 0/0
  8301 ;;		Unchanged: 0/0
  8302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8303 ;;      Params:         0       0       0       0       0
  8304 ;;      Locals:         0       0       0       0       0
  8305 ;;      Temps:          0       0       0       0       0
  8306 ;;      Totals:         0       0       0       0       0
  8307 ;;Total ram usage:        0 bytes
  8308 ;; Hardware stack levels used:    1
  8309 ;; Hardware stack levels required when called:    2
  8310 ;; This function calls:
  8311 ;;		_lcdCmd
  8312 ;; This function is called by:
  8313 ;;		_main
  8314 ;; This function uses a non-reentrant model
  8315 ;;
  8316                           
  8317                           
  8318                           ;psect for function _lcdClear
  8319  1CEE                     _lcdClear:	
  8320                           
  8321                           ;./lcd.h: 52:     lcdCmd(0);
  8322                           
  8323                           ;incstack = 0
  8324                           ; Regs used in _lcdClear: [wreg+status,2+status,0+pclath+cstack]
  8325  1CEE  3000               	movlw	0
  8326  1CEF  120A  158A  2005  160A  158A  	fcall	_lcdCmd
  8327                           
  8328                           ;./lcd.h: 53:     lcdCmd(1);
  8329  1CF4  3001               	movlw	1
  8330  1CF5  120A  158A  2005   	fcall	_lcdCmd
  8331  1CF8  0008               	return
  8332  1CF9                     __end_of_lcdClear:	
  8333                           
  8334                           	psect	text28
  8335  0805                     __ptext28:	
  8336 ;; *************** function _lcdCmd *****************
  8337 ;; Defined at:
  8338 ;;		line 43 in file "./lcd.h"
  8339 ;; Parameters:    Size  Location     Type
  8340 ;;  a               1    wreg     unsigned char 
  8341 ;; Auto vars:     Size  Location     Type
  8342 ;;  a               1    3[COMMON] unsigned char 
  8343 ;; Return value:  Size  Location     Type
  8344 ;;                  1    wreg      void 
  8345 ;; Registers used:
  8346 ;;		wreg, status,2, status,0, pclath, cstack
  8347 ;; Tracked objects:
  8348 ;;		On entry : 0/0
  8349 ;;		On exit  : 0/0
  8350 ;;		Unchanged: 0/0
  8351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8352 ;;      Params:         0       0       0       0       0
  8353 ;;      Locals:         1       0       0       0       0
  8354 ;;      Temps:          2       0       0       0       0
  8355 ;;      Totals:         3       0       0       0       0
  8356 ;;Total ram usage:        3 bytes
  8357 ;; Hardware stack levels used:    1
  8358 ;; Hardware stack levels required when called:    1
  8359 ;; This function calls:
  8360 ;;		_lcdPort
  8361 ;; This function is called by:
  8362 ;;		_lcdClear
  8363 ;;		_lcdSetCursor
  8364 ;;		_lcdInit
  8365 ;; This function uses a non-reentrant model
  8366 ;;
  8367                           
  8368                           
  8369                           ;psect for function _lcdCmd
  8370  0805                     _lcdCmd:	
  8371                           
  8372                           ;incstack = 0
  8373                           ; Regs used in _lcdCmd: [wreg+status,2+status,0+pclath+cstack]
  8374                           ;lcdCmd@a stored from wreg
  8375  0805  00F3               	movwf	lcdCmd@a
  8376                           
  8377                           ;./lcd.h: 44:     RB2 = 0;
  8378  0806  1283               	bcf	3,5	;RP0=0, select bank0
  8379  0807  1303               	bcf	3,6	;RP1=0, select bank0
  8380  0808  1106               	bcf	6,2	;volatile
  8381                           
  8382                           ;./lcd.h: 45:     lcdPort(a);
  8383  0809  0873               	movf	lcdCmd@a,w
  8384  080A  160A  158A  2507  120A  158A  	fcall	_lcdPort
  8385                           
  8386                           ;./lcd.h: 46:     RB3 = 1;
  8387  080F  1283               	bcf	3,5	;RP0=0, select bank0
  8388  0810  1303               	bcf	3,6	;RP1=0, select bank0
  8389  0811  1586               	bsf	6,3	;volatile
  8390                           
  8391                           ;./lcd.h: 47:     _delay((unsigned long)((4)*(4000000/4000.0)));
  8392  0812  3006               	movlw	6
  8393  0813  00F2               	movwf	??_lcdCmd+1
  8394  0814  3030               	movlw	48
  8395  0815  00F1               	movwf	??_lcdCmd
  8396  0816                     u6097:	
  8397  0816  0BF1               	decfsz	??_lcdCmd,f
  8398  0817  2816               	goto	u6097
  8399  0818  0BF2               	decfsz	??_lcdCmd+1,f
  8400  0819  2816               	goto	u6097
  8401  081A  0000               	nop
  8402                           
  8403                           ;./lcd.h: 48:     RB3 = 0;
  8404  081B  1283               	bcf	3,5	;RP0=0, select bank0
  8405  081C  1303               	bcf	3,6	;RP1=0, select bank0
  8406  081D  1186               	bcf	6,3	;volatile
  8407  081E  0008               	return
  8408  081F                     __end_of_lcdCmd:	
  8409                           
  8410                           	psect	text29
  8411  1D07                     __ptext29:	
  8412 ;; *************** function _lcdPort *****************
  8413 ;; Defined at:
  8414 ;;		line 21 in file "./lcd.h"
  8415 ;; Parameters:    Size  Location     Type
  8416 ;;  a               1    wreg     unsigned char 
  8417 ;; Auto vars:     Size  Location     Type
  8418 ;;  a               1    0[COMMON] unsigned char 
  8419 ;; Return value:  Size  Location     Type
  8420 ;;                  1    wreg      void 
  8421 ;; Registers used:
  8422 ;;		wreg
  8423 ;; Tracked objects:
  8424 ;;		On entry : 0/0
  8425 ;;		On exit  : 0/0
  8426 ;;		Unchanged: 0/0
  8427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8428 ;;      Params:         0       0       0       0       0
  8429 ;;      Locals:         1       0       0       0       0
  8430 ;;      Temps:          0       0       0       0       0
  8431 ;;      Totals:         1       0       0       0       0
  8432 ;;Total ram usage:        1 bytes
  8433 ;; Hardware stack levels used:    1
  8434 ;; This function calls:
  8435 ;;		Nothing
  8436 ;; This function is called by:
  8437 ;;		_lcdCmd
  8438 ;;		_lcdInit
  8439 ;;		_lcdWriteChar
  8440 ;; This function uses a non-reentrant model
  8441 ;;
  8442                           
  8443                           
  8444                           ;psect for function _lcdPort
  8445  1D07                     _lcdPort:	
  8446                           
  8447                           ;incstack = 0
  8448                           ; Regs used in _lcdPort: [wreg]
  8449                           ;lcdPort@a stored from wreg
  8450  1D07  00F0               	movwf	lcdPort@a
  8451                           
  8452                           ;./lcd.h: 22:     if (a & 1)
  8453  1D08  1C70               	btfss	lcdPort@a,0
  8454  1D09  2D0E               	goto	l35
  8455                           
  8456                           ;./lcd.h: 23:         RB4 = 1;
  8457  1D0A  1283               	bcf	3,5	;RP0=0, select bank0
  8458  1D0B  1303               	bcf	3,6	;RP1=0, select bank0
  8459  1D0C  1606               	bsf	6,4	;volatile
  8460  1D0D  2D11               	goto	l36
  8461  1D0E                     l35:	
  8462                           ;./lcd.h: 24:     else
  8463                           
  8464                           
  8465                           ;./lcd.h: 25:         RB4 = 0;
  8466  1D0E  1283               	bcf	3,5	;RP0=0, select bank0
  8467  1D0F  1303               	bcf	3,6	;RP1=0, select bank0
  8468  1D10  1206               	bcf	6,4	;volatile
  8469  1D11                     l36:	
  8470                           
  8471                           ;./lcd.h: 27:     if (a & 2)
  8472  1D11  1CF0               	btfss	lcdPort@a,1
  8473  1D12  2D15               	goto	l37
  8474                           
  8475                           ;./lcd.h: 28:         RB5 = 1;
  8476  1D13  1686               	bsf	6,5	;volatile
  8477  1D14  2D16               	goto	l38
  8478  1D15                     l37:	
  8479                           ;./lcd.h: 29:     else
  8480                           
  8481                           
  8482                           ;./lcd.h: 30:         RB5 = 0;
  8483  1D15  1286               	bcf	6,5	;volatile
  8484  1D16                     l38:	
  8485                           
  8486                           ;./lcd.h: 32:     if (a & 4)
  8487  1D16  1D70               	btfss	lcdPort@a,2
  8488  1D17  2D1A               	goto	l39
  8489                           
  8490                           ;./lcd.h: 33:         RB6 = 1;
  8491  1D18  1706               	bsf	6,6	;volatile
  8492  1D19  2D1B               	goto	l40
  8493  1D1A                     l39:	
  8494                           ;./lcd.h: 34:     else
  8495                           
  8496                           
  8497                           ;./lcd.h: 35:         RB6 = 0;
  8498  1D1A  1306               	bcf	6,6	;volatile
  8499  1D1B                     l40:	
  8500                           
  8501                           ;./lcd.h: 37:     if (a & 8)
  8502  1D1B  1DF0               	btfss	lcdPort@a,3
  8503  1D1C  2D1F               	goto	l41
  8504                           
  8505                           ;./lcd.h: 38:         RB7 = 1;
  8506  1D1D  1786               	bsf	6,7	;volatile
  8507  1D1E  0008               	return
  8508  1D1F                     l41:	
  8509                           ;./lcd.h: 39:     else
  8510                           
  8511                           
  8512                           ;./lcd.h: 40:         RB7 = 0;
  8513  1D1F  1386               	bcf	6,7	;volatile
  8514  1D20  0008               	return
  8515  1D21                     __end_of_lcdPort:	
  8516                           
  8517                           	psect	text30
  8518  1D42                     __ptext30:	
  8519 ;; *************** function _adcRead *****************
  8520 ;; Defined at:
  8521 ;;		line 35 in file "./adc.h"
  8522 ;; Parameters:    Size  Location     Type
  8523 ;;  adcChannel      2    0[COMMON] const int 
  8524 ;; Auto vars:     Size  Location     Type
  8525 ;;		None
  8526 ;; Return value:  Size  Location     Type
  8527 ;;                  2    0[COMMON] int 
  8528 ;; Registers used:
  8529 ;;		wreg, status,2, status,0
  8530 ;; Tracked objects:
  8531 ;;		On entry : 0/0
  8532 ;;		On exit  : 0/0
  8533 ;;		Unchanged: 0/0
  8534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8535 ;;      Params:         2       0       0       0       0
  8536 ;;      Locals:         0       0       0       0       0
  8537 ;;      Temps:          2       0       0       0       0
  8538 ;;      Totals:         4       0       0       0       0
  8539 ;;Total ram usage:        4 bytes
  8540 ;; Hardware stack levels used:    1
  8541 ;; This function calls:
  8542 ;;		Nothing
  8543 ;; This function is called by:
  8544 ;;		_main
  8545 ;; This function uses a non-reentrant model
  8546 ;;
  8547                           
  8548                           
  8549                           ;psect for function _adcRead
  8550  1D42                     _adcRead:	
  8551                           
  8552                           ;./adc.h: 36:     ADCON0bits.ADON = 1;
  8553                           
  8554                           ;incstack = 0
  8555                           ; Regs used in _adcRead: [wreg+status,2+status,0]
  8556  1D42  1283               	bcf	3,5	;RP0=0, select bank0
  8557  1D43  1303               	bcf	3,6	;RP1=0, select bank0
  8558  1D44  141F               	bsf	31,0	;volatile
  8559                           
  8560                           ;./adc.h: 37:     ADCON0bits.CHS = adcChannel;
  8561  1D45  0870               	movf	adcRead@adcChannel,w
  8562  1D46  00F2               	movwf	??_adcRead
  8563  1D47  0DF2               	rlf	??_adcRead,f
  8564  1D48  0DF2               	rlf	??_adcRead,f
  8565  1D49  0DF2               	rlf	??_adcRead,f
  8566  1D4A  081F               	movf	31,w	;volatile
  8567  1D4B  0672               	xorwf	??_adcRead,w
  8568  1D4C  39C7               	andlw	-57
  8569  1D4D  0672               	xorwf	??_adcRead,w
  8570  1D4E  009F               	movwf	31	;volatile
  8571                           
  8572                           ;./adc.h: 38:     _delay((unsigned long)((10)*(4000000/4000.0)));
  8573  1D4F  300D               	movlw	13
  8574  1D50  00F3               	movwf	??_adcRead+1
  8575  1D51  30FB               	movlw	251
  8576  1D52  00F2               	movwf	??_adcRead
  8577  1D53                     u6107:	
  8578  1D53  0BF2               	decfsz	??_adcRead,f
  8579  1D54  2D53               	goto	u6107
  8580  1D55  0BF3               	decfsz	??_adcRead+1,f
  8581  1D56  2D53               	goto	u6107
  8582  1D57  2D58               	nop2
  8583                           
  8584                           ;./adc.h: 39:     ADCON0bits.GO = 1;
  8585  1D58  1283               	bcf	3,5	;RP0=0, select bank0
  8586  1D59  1303               	bcf	3,6	;RP1=0, select bank0
  8587  1D5A  151F               	bsf	31,2	;volatile
  8588  1D5B                     l75:	
  8589                           ;./adc.h: 40:     while (ADCON0bits.GO_DONE);
  8590                           
  8591  1D5B  191F               	btfsc	31,2	;volatile
  8592  1D5C  2D5B               	goto	l75
  8593                           
  8594                           ;./adc.h: 42:     return (ADRESH << 8) + (ADRESL);
  8595  1D5D  081E               	movf	30,w	;volatile
  8596  1D5E  00F1               	movwf	?_adcRead+1
  8597  1D5F  1683               	bsf	3,5	;RP0=1, select bank1
  8598  1D60  1303               	bcf	3,6	;RP1=0, select bank1
  8599  1D61  081E               	movf	30,w	;volatile
  8600  1D62  00F0               	movwf	?_adcRead
  8601  1D63  0008               	return
  8602  1D64                     __end_of_adcRead:	
  8603                           
  8604                           	psect	text31
  8605  10D4                     __ptext31:	
  8606 ;; *************** function _adcInit *****************
  8607 ;; Defined at:
  8608 ;;		line 1 in file "./adc.h"
  8609 ;; Parameters:    Size  Location     Type
  8610 ;;		None
  8611 ;; Auto vars:     Size  Location     Type
  8612 ;;		None
  8613 ;; Return value:  Size  Location     Type
  8614 ;;                  1    wreg      void 
  8615 ;; Registers used:
  8616 ;;		wreg, status,2, status,0
  8617 ;; Tracked objects:
  8618 ;;		On entry : 0/0
  8619 ;;		On exit  : 0/0
  8620 ;;		Unchanged: 0/0
  8621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8622 ;;      Params:         0       0       0       0       0
  8623 ;;      Locals:         0       0       0       0       0
  8624 ;;      Temps:          0       0       0       0       0
  8625 ;;      Totals:         0       0       0       0       0
  8626 ;;Total ram usage:        0 bytes
  8627 ;; Hardware stack levels used:    1
  8628 ;; This function calls:
  8629 ;;		Nothing
  8630 ;; This function is called by:
  8631 ;;		_main
  8632 ;; This function uses a non-reentrant model
  8633 ;;
  8634                           
  8635                           
  8636                           ;psect for function _adcInit
  8637  10D4                     _adcInit:	
  8638                           
  8639                           ;./adc.h: 11:     ADCON0bits.ADCS = 0b01;
  8640                           
  8641                           ;incstack = 0
  8642                           ; Regs used in _adcInit: [wreg+status,2+status,0]
  8643  10D4  1283               	bcf	3,5	;RP0=0, select bank0
  8644  10D5  1303               	bcf	3,6	;RP1=0, select bank0
  8645  10D6  081F               	movf	31,w	;volatile
  8646  10D7  393F               	andlw	-193
  8647  10D8  3840               	iorlw	64
  8648  10D9  009F               	movwf	31	;volatile
  8649                           
  8650                           ;./adc.h: 12:     ADCON0bits.CHS = 0b000;
  8651  10DA  30C7               	movlw	-57
  8652  10DB  059F               	andwf	31,f	;volatile
  8653                           
  8654                           ;./adc.h: 13:     ADCON0bits.ADON = 0;
  8655  10DC  101F               	bcf	31,0	;volatile
  8656                           
  8657                           ;./adc.h: 24:     ADCON1bits.ADFM = 1;
  8658  10DD  1683               	bsf	3,5	;RP0=1, select bank1
  8659  10DE  1303               	bcf	3,6	;RP1=0, select bank1
  8660  10DF  179F               	bsf	31,7	;volatile
  8661                           
  8662                           ;./adc.h: 25:     ADCON1bits.ADCS2 = 1;
  8663  10E0  171F               	bsf	31,6	;volatile
  8664                           
  8665                           ;./adc.h: 26:     ADCON1bits.PCFG = 0b0000;
  8666  10E1  30F0               	movlw	-16
  8667  10E2  059F               	andwf	31,f	;volatile
  8668  10E3  0008               	return
  8669  10E4                     __end_of_adcInit:	
  8670                           
  8671                           	psect	text32
  8672  142E                     __ptext32:	
  8673 ;; *************** function ___fldiv *****************
  8674 ;; Defined at:
  8675 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  8676 ;; Parameters:    Size  Location     Type
  8677 ;;  a               4   32[BANK0 ] void 
  8678 ;;  b               4   36[BANK0 ] void 
  8679 ;; Auto vars:     Size  Location     Type
  8680 ;;  grs             4   52[BANK0 ] unsigned long 
  8681 ;;  rem             4   45[BANK0 ] unsigned long 
  8682 ;;  new_exp         2   50[BANK0 ] int 
  8683 ;;  aexp            1   57[BANK0 ] unsigned char 
  8684 ;;  bexp            1   56[BANK0 ] unsigned char 
  8685 ;;  sign            1   49[BANK0 ] unsigned char 
  8686 ;; Return value:  Size  Location     Type
  8687 ;;                  4   32[BANK0 ] unsigned char 
  8688 ;; Registers used:
  8689 ;;		wreg, status,2, status,0, btemp+1
  8690 ;; Tracked objects:
  8691 ;;		On entry : 0/0
  8692 ;;		On exit  : 0/0
  8693 ;;		Unchanged: 0/0
  8694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8695 ;;      Params:         0       8       0       0       0
  8696 ;;      Locals:         0      13       0       0       0
  8697 ;;      Temps:          0       5       0       0       0
  8698 ;;      Totals:         0      26       0       0       0
  8699 ;;Total ram usage:       26 bytes
  8700 ;; Hardware stack levels used:    1
  8701 ;; This function calls:
  8702 ;;		Nothing
  8703 ;; This function is called by:
  8704 ;;		_main
  8705 ;; This function uses a non-reentrant model
  8706 ;;
  8707                           
  8708                           
  8709                           ;psect for function ___fldiv
  8710  142E                     ___fldiv:	
  8711                           
  8712                           ;incstack = 0
  8713                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8714  142E  1283               	bcf	3,5	;RP0=0, select bank0
  8715  142F  1303               	bcf	3,6	;RP1=0, select bank0
  8716  1430  0847               	movf	___fldiv@b+3,w
  8717  1431  3980               	andlw	128
  8718  1432  00C8               	movwf	??___fldiv
  8719  1433  0848               	movf	??___fldiv,w
  8720  1434  00D1               	movwf	___fldiv@sign
  8721  1435  0847               	movf	___fldiv@b+3,w
  8722  1436  00C8               	movwf	??___fldiv
  8723  1437  0748               	addwf	??___fldiv,w
  8724  1438  00C9               	movwf	??___fldiv+1
  8725  1439  0849               	movf	??___fldiv+1,w
  8726  143A  00D8               	movwf	___fldiv@bexp
  8727  143B  1BC6               	btfsc	___fldiv@b+2,7
  8728  143C  1458               	bsf	___fldiv@bexp,0
  8729  143D  0858               	movf	___fldiv@bexp,w
  8730  143E  1903               	btfsc	3,2
  8731  143F  2C4E               	goto	l3401
  8732  1440  0A58               	incf	___fldiv@bexp,w
  8733  1441  1D03               	btfss	3,2
  8734  1442  2C4B               	goto	l3397
  8735  1443  3000               	movlw	0
  8736  1444  00C7               	movwf	___fldiv@b+3
  8737  1445  3000               	movlw	0
  8738  1446  00C6               	movwf	___fldiv@b+2
  8739  1447  3000               	movlw	0
  8740  1448  00C5               	movwf	___fldiv@b+1
  8741  1449  3000               	movlw	0
  8742  144A  00C4               	movwf	___fldiv@b
  8743  144B                     l3397:	
  8744  144B  17C6               	bsf	___fldiv@b+2,7
  8745  144C  01C7               	clrf	___fldiv@b+3
  8746  144D  2C56               	goto	l3403
  8747  144E                     l3401:	
  8748  144E  3000               	movlw	0
  8749  144F  00C7               	movwf	___fldiv@b+3
  8750  1450  3000               	movlw	0
  8751  1451  00C6               	movwf	___fldiv@b+2
  8752  1452  3000               	movlw	0
  8753  1453  00C5               	movwf	___fldiv@b+1
  8754  1454  3000               	movlw	0
  8755  1455  00C4               	movwf	___fldiv@b
  8756  1456                     l3403:	
  8757  1456  0843               	movf	___fldiv@a+3,w
  8758  1457  3980               	andlw	128
  8759  1458  00C8               	movwf	??___fldiv
  8760  1459  0848               	movf	??___fldiv,w
  8761  145A  06D1               	xorwf	___fldiv@sign,f
  8762  145B  0843               	movf	___fldiv@a+3,w
  8763  145C  00C8               	movwf	??___fldiv
  8764  145D  0748               	addwf	??___fldiv,w
  8765  145E  00C9               	movwf	??___fldiv+1
  8766  145F  0849               	movf	??___fldiv+1,w
  8767  1460  00D9               	movwf	___fldiv@aexp
  8768  1461  1BC2               	btfsc	___fldiv@a+2,7
  8769  1462  1459               	bsf	___fldiv@aexp,0
  8770  1463  0859               	movf	___fldiv@aexp,w
  8771  1464  1903               	btfsc	3,2
  8772  1465  2C74               	goto	l3421
  8773  1466  0A59               	incf	___fldiv@aexp,w
  8774  1467  1D03               	btfss	3,2
  8775  1468  2C71               	goto	l3417
  8776  1469  3000               	movlw	0
  8777  146A  00C3               	movwf	___fldiv@a+3
  8778  146B  3000               	movlw	0
  8779  146C  00C2               	movwf	___fldiv@a+2
  8780  146D  3000               	movlw	0
  8781  146E  00C1               	movwf	___fldiv@a+1
  8782  146F  3000               	movlw	0
  8783  1470  00C0               	movwf	___fldiv@a
  8784  1471                     l3417:	
  8785  1471  17C2               	bsf	___fldiv@a+2,7
  8786  1472  01C3               	clrf	___fldiv@a+3
  8787  1473  2C7C               	goto	l647
  8788  1474                     l3421:	
  8789  1474  3000               	movlw	0
  8790  1475  00C3               	movwf	___fldiv@a+3
  8791  1476  3000               	movlw	0
  8792  1477  00C2               	movwf	___fldiv@a+2
  8793  1478  3000               	movlw	0
  8794  1479  00C1               	movwf	___fldiv@a+1
  8795  147A  3000               	movlw	0
  8796  147B  00C0               	movwf	___fldiv@a
  8797  147C                     l647:	
  8798  147C  0843               	movf	___fldiv@a+3,w
  8799  147D  0442               	iorwf	___fldiv@a+2,w
  8800  147E  0441               	iorwf	___fldiv@a+1,w
  8801  147F  0440               	iorwf	___fldiv@a,w
  8802  1480  1D03               	skipz
  8803  1481  2C9B               	goto	l3431
  8804  1482  3000               	movlw	0
  8805  1483  00C7               	movwf	___fldiv@b+3
  8806  1484  3000               	movlw	0
  8807  1485  00C6               	movwf	___fldiv@b+2
  8808  1486  3000               	movlw	0
  8809  1487  00C5               	movwf	___fldiv@b+1
  8810  1488  3000               	movlw	0
  8811  1489  00C4               	movwf	___fldiv@b
  8812  148A  3080               	movlw	128
  8813  148B  04C6               	iorwf	___fldiv@b+2,f
  8814  148C  307F               	movlw	127
  8815  148D  04C7               	iorwf	___fldiv@b+3,f
  8816  148E                     L10:	
  8817  148E  0851               	movf	___fldiv@sign,w
  8818  148F  00C8               	movwf	??___fldiv
  8819  1490  0848               	movf	??___fldiv,w
  8820  1491  04C7               	iorwf	___fldiv@b+3,f
  8821  1492  0847               	movf	___fldiv@b+3,w
  8822  1493  00C3               	movwf	?___fldiv+3
  8823  1494  0846               	movf	___fldiv@b+2,w
  8824  1495  00C2               	movwf	?___fldiv+2
  8825  1496  0845               	movf	___fldiv@b+1,w
  8826  1497  00C1               	movwf	?___fldiv+1
  8827  1498  0844               	movf	___fldiv@b,w
  8828  1499  00C0               	movwf	?___fldiv
  8829  149A  0008               	return
  8830  149B                     l3431:	
  8831  149B  0858               	movf	___fldiv@bexp,w
  8832  149C  1D03               	btfss	3,2
  8833  149D  2CA7               	goto	l3437
  8834  149E  3000               	movlw	0
  8835  149F  00C3               	movwf	?___fldiv+3
  8836  14A0  3000               	movlw	0
  8837  14A1  00C2               	movwf	?___fldiv+2
  8838  14A2  3000               	movlw	0
  8839  14A3  00C1               	movwf	?___fldiv+1
  8840  14A4  3000               	movlw	0
  8841  14A5  00C0               	movwf	?___fldiv
  8842  14A6  0008               	return
  8843  14A7                     l3437:	
  8844  14A7  0858               	movf	___fldiv@bexp,w
  8845  14A8  00C8               	movwf	??___fldiv
  8846  14A9  01C9               	clrf	??___fldiv+1
  8847  14AA  0849               	movf	??___fldiv+1,w
  8848  14AB  00CB               	movwf	??___fldiv+3
  8849  14AC  0859               	movf	___fldiv@aexp,w
  8850  14AD  0248               	subwf	??___fldiv,w
  8851  14AE  00CA               	movwf	??___fldiv+2
  8852  14AF  1C03               	skipc
  8853  14B0  03CB               	decf	??___fldiv+3,f
  8854  14B1  084A               	movf	??___fldiv+2,w
  8855  14B2  3E7F               	addlw	127
  8856  14B3  00D2               	movwf	___fldiv@new_exp
  8857  14B4  084B               	movf	??___fldiv+3,w
  8858  14B5  1803               	skipnc
  8859  14B6  3E01               	addlw	1
  8860  14B7  3E00               	addlw	0
  8861  14B8  00D3               	movwf	___fldiv@new_exp+1
  8862  14B9  0847               	movf	___fldiv@b+3,w
  8863  14BA  00D0               	movwf	___fldiv@rem+3
  8864  14BB  0846               	movf	___fldiv@b+2,w
  8865  14BC  00CF               	movwf	___fldiv@rem+2
  8866  14BD  0845               	movf	___fldiv@b+1,w
  8867  14BE  00CE               	movwf	___fldiv@rem+1
  8868  14BF  0844               	movf	___fldiv@b,w
  8869  14C0  00CD               	movwf	___fldiv@rem
  8870  14C1  3000               	movlw	0
  8871  14C2  00C7               	movwf	___fldiv@b+3
  8872  14C3  3000               	movlw	0
  8873  14C4  00C6               	movwf	___fldiv@b+2
  8874  14C5  3000               	movlw	0
  8875  14C6  00C5               	movwf	___fldiv@b+1
  8876  14C7  3000               	movlw	0
  8877  14C8  00C4               	movwf	___fldiv@b
  8878  14C9  3000               	movlw	0
  8879  14CA  00D7               	movwf	___fldiv@grs+3
  8880  14CB  3000               	movlw	0
  8881  14CC  00D6               	movwf	___fldiv@grs+2
  8882  14CD  3000               	movlw	0
  8883  14CE  00D5               	movwf	___fldiv@grs+1
  8884  14CF  3000               	movlw	0
  8885  14D0  00D4               	movwf	___fldiv@grs
  8886  14D1  01D9               	clrf	___fldiv@aexp
  8887  14D2                     l3465:	
  8888  14D2  301A               	movlw	26
  8889  14D3  0259               	subwf	___fldiv@aexp,w
  8890  14D4  1803               	btfsc	3,0
  8891  14D5  2D1A               	goto	l3467
  8892  14D6  0859               	movf	___fldiv@aexp,w
  8893  14D7  1903               	btfsc	3,2
  8894  14D8  2CF6               	goto	l3457
  8895  14D9  3001               	movlw	1
  8896  14DA  00C8               	movwf	??___fldiv
  8897  14DB                     u5815:	
  8898  14DB  1003               	clrc
  8899  14DC  0DCD               	rlf	___fldiv@rem,f
  8900  14DD  0DCE               	rlf	___fldiv@rem+1,f
  8901  14DE  0DCF               	rlf	___fldiv@rem+2,f
  8902  14DF  0DD0               	rlf	___fldiv@rem+3,f
  8903  14E0  0BC8               	decfsz	??___fldiv,f
  8904  14E1  2CDB               	goto	u5815
  8905  14E2  3001               	movlw	1
  8906  14E3  00C8               	movwf	??___fldiv
  8907  14E4                     u5825:	
  8908  14E4  1003               	clrc
  8909  14E5  0DC4               	rlf	___fldiv@b,f
  8910  14E6  0DC5               	rlf	___fldiv@b+1,f
  8911  14E7  0DC6               	rlf	___fldiv@b+2,f
  8912  14E8  0DC7               	rlf	___fldiv@b+3,f
  8913  14E9  0BC8               	decfsz	??___fldiv,f
  8914  14EA  2CE4               	goto	u5825
  8915  14EB  1BD7               	btfsc	___fldiv@grs+3,7
  8916  14EC  1444               	bsf	___fldiv@b,0
  8917  14ED  3001               	movlw	1
  8918  14EE  00C8               	movwf	??___fldiv
  8919  14EF                     u5845:	
  8920  14EF  1003               	clrc
  8921  14F0  0DD4               	rlf	___fldiv@grs,f
  8922  14F1  0DD5               	rlf	___fldiv@grs+1,f
  8923  14F2  0DD6               	rlf	___fldiv@grs+2,f
  8924  14F3  0DD7               	rlf	___fldiv@grs+3,f
  8925  14F4  0BC8               	decfsz	??___fldiv,f
  8926  14F5  2CEF               	goto	u5845
  8927  14F6                     l3457:	
  8928  14F6  0843               	movf	___fldiv@a+3,w
  8929  14F7  0250               	subwf	___fldiv@rem+3,w
  8930  14F8  1D03               	skipz
  8931  14F9  2D04               	goto	u5855
  8932  14FA  0842               	movf	___fldiv@a+2,w
  8933  14FB  024F               	subwf	___fldiv@rem+2,w
  8934  14FC  1D03               	skipz
  8935  14FD  2D04               	goto	u5855
  8936  14FE  0841               	movf	___fldiv@a+1,w
  8937  14FF  024E               	subwf	___fldiv@rem+1,w
  8938  1500  1D03               	skipz
  8939  1501  2D04               	goto	u5855
  8940  1502  0840               	movf	___fldiv@a,w
  8941  1503  024D               	subwf	___fldiv@rem,w
  8942  1504                     u5855:	
  8943  1504  1C03               	skipc
  8944  1505  2D15               	goto	l3463
  8945  1506  1757               	bsf	___fldiv@grs+3,6
  8946  1507  0840               	movf	___fldiv@a,w
  8947  1508  02CD               	subwf	___fldiv@rem,f
  8948  1509  0841               	movf	___fldiv@a+1,w
  8949  150A  1C03               	skipc
  8950  150B  0F41               	incfsz	___fldiv@a+1,w
  8951  150C  02CE               	subwf	___fldiv@rem+1,f
  8952  150D  0842               	movf	___fldiv@a+2,w
  8953  150E  1C03               	skipc
  8954  150F  0F42               	incfsz	___fldiv@a+2,w
  8955  1510  02CF               	subwf	___fldiv@rem+2,f
  8956  1511  0843               	movf	___fldiv@a+3,w
  8957  1512  1C03               	skipc
  8958  1513  0F43               	incfsz	___fldiv@a+3,w
  8959  1514  02D0               	subwf	___fldiv@rem+3,f
  8960  1515                     l3463:	
  8961  1515  3001               	movlw	1
  8962  1516  00C8               	movwf	??___fldiv
  8963  1517  0848               	movf	??___fldiv,w
  8964  1518  07D9               	addwf	___fldiv@aexp,f
  8965  1519  2CD2               	goto	l3465
  8966  151A                     l3467:	
  8967  151A  0850               	movf	___fldiv@rem+3,w
  8968  151B  044F               	iorwf	___fldiv@rem+2,w
  8969  151C  044E               	iorwf	___fldiv@rem+1,w
  8970  151D  044D               	iorwf	___fldiv@rem,w
  8971  151E  1D03               	btfss	3,2
  8972  151F  1454               	bsf	___fldiv@grs,0
  8973  1520                     l3481:	
  8974  1520  1BC6               	btfsc	___fldiv@b+2,7
  8975  1521  2D3D               	goto	l3483
  8976  1522  3001               	movlw	1
  8977  1523  00C8               	movwf	??___fldiv
  8978  1524                     u5885:	
  8979  1524  1003               	clrc
  8980  1525  0DC4               	rlf	___fldiv@b,f
  8981  1526  0DC5               	rlf	___fldiv@b+1,f
  8982  1527  0DC6               	rlf	___fldiv@b+2,f
  8983  1528  0DC7               	rlf	___fldiv@b+3,f
  8984  1529  0BC8               	decfsz	??___fldiv,f
  8985  152A  2D24               	goto	u5885
  8986  152B  1BD7               	btfsc	___fldiv@grs+3,7
  8987  152C  1444               	bsf	___fldiv@b,0
  8988  152D  3001               	movlw	1
  8989  152E  00C8               	movwf	??___fldiv
  8990  152F                     u5905:	
  8991  152F  1003               	clrc
  8992  1530  0DD4               	rlf	___fldiv@grs,f
  8993  1531  0DD5               	rlf	___fldiv@grs+1,f
  8994  1532  0DD6               	rlf	___fldiv@grs+2,f
  8995  1533  0DD7               	rlf	___fldiv@grs+3,f
  8996  1534  0BC8               	decfsz	??___fldiv,f
  8997  1535  2D2F               	goto	u5905
  8998  1536  30FF               	movlw	255
  8999  1537  07D2               	addwf	___fldiv@new_exp,f
  9000  1538  1803               	skipnc
  9001  1539  0AD3               	incf	___fldiv@new_exp+1,f
  9002  153A  30FF               	movlw	255
  9003  153B  07D3               	addwf	___fldiv@new_exp+1,f
  9004  153C  2D20               	goto	l3481
  9005  153D                     l3483:	
  9006  153D  01D9               	clrf	___fldiv@aexp
  9007  153E  1FD7               	btfss	___fldiv@grs+3,7
  9008  153F  2D56               	goto	l3493
  9009  1540  30FF               	movlw	255
  9010  1541  0554               	andwf	___fldiv@grs,w
  9011  1542  00C8               	movwf	??___fldiv
  9012  1543  30FF               	movlw	255
  9013  1544  0555               	andwf	___fldiv@grs+1,w
  9014  1545  00C9               	movwf	??___fldiv+1
  9015  1546  30FF               	movlw	255
  9016  1547  0556               	andwf	___fldiv@grs+2,w
  9017  1548  00CA               	movwf	??___fldiv+2
  9018  1549  307F               	movlw	127
  9019  154A  0557               	andwf	___fldiv@grs+3,w
  9020  154B  00CB               	movwf	??___fldiv+3
  9021  154C  084B               	movf	??___fldiv+3,w
  9022  154D  044A               	iorwf	??___fldiv+2,w
  9023  154E  0449               	iorwf	??___fldiv+1,w
  9024  154F  0448               	iorwf	??___fldiv,w
  9025  1550  1903               	skipnz
  9026  1551  1844               	btfsc	___fldiv@b,0
  9027  1552  2D54               	goto	l3489
  9028  1553  2D56               	goto	l3493
  9029  1554                     l3489:	
  9030  1554  01D9               	clrf	___fldiv@aexp
  9031  1555  0AD9               	incf	___fldiv@aexp,f
  9032  1556                     l3493:	
  9033  1556  0859               	movf	___fldiv@aexp,w
  9034  1557  1903               	btfsc	3,2
  9035  1558  2D88               	goto	l3503
  9036  1559  3001               	movlw	1
  9037  155A  07C4               	addwf	___fldiv@b,f
  9038  155B  3000               	movlw	0
  9039  155C  1803               	skipnc
  9040  155D  3001               	movlw	1
  9041  155E  07C5               	addwf	___fldiv@b+1,f
  9042  155F  3000               	movlw	0
  9043  1560  1803               	skipnc
  9044  1561  3001               	movlw	1
  9045  1562  07C6               	addwf	___fldiv@b+2,f
  9046  1563  3000               	movlw	0
  9047  1564  1803               	skipnc
  9048  1565  3001               	movlw	1
  9049  1566  07C7               	addwf	___fldiv@b+3,f
  9050  1567  1C47               	btfss	___fldiv@b+3,0
  9051  1568  2D88               	goto	l3503
  9052  1569  0844               	movf	___fldiv@b,w
  9053  156A  00C8               	movwf	??___fldiv
  9054  156B  0845               	movf	___fldiv@b+1,w
  9055  156C  00C9               	movwf	??___fldiv+1
  9056  156D  0846               	movf	___fldiv@b+2,w
  9057  156E  00CA               	movwf	??___fldiv+2
  9058  156F  0847               	movf	___fldiv@b+3,w
  9059  1570  00CB               	movwf	??___fldiv+3
  9060  1571  3001               	movlw	1
  9061  1572  00CC               	movwf	??___fldiv+4
  9062  1573                     u5975:	
  9063  1573  0D4B               	rlf	??___fldiv+3,w
  9064  1574  0CCB               	rrf	??___fldiv+3,f
  9065  1575  0CCA               	rrf	??___fldiv+2,f
  9066  1576  0CC9               	rrf	??___fldiv+1,f
  9067  1577  0CC8               	rrf	??___fldiv,f
  9068  1578  0BCC               	decfsz	??___fldiv+4,f
  9069  1579  2D73               	goto	u5975
  9070  157A  084B               	movf	??___fldiv+3,w
  9071  157B  00C7               	movwf	___fldiv@b+3
  9072  157C  084A               	movf	??___fldiv+2,w
  9073  157D  00C6               	movwf	___fldiv@b+2
  9074  157E  0849               	movf	??___fldiv+1,w
  9075  157F  00C5               	movwf	___fldiv@b+1
  9076  1580  0848               	movf	??___fldiv,w
  9077  1581  00C4               	movwf	___fldiv@b
  9078  1582  3001               	movlw	1
  9079  1583  07D2               	addwf	___fldiv@new_exp,f
  9080  1584  1803               	skipnc
  9081  1585  0AD3               	incf	___fldiv@new_exp+1,f
  9082  1586  3000               	movlw	0
  9083  1587  07D3               	addwf	___fldiv@new_exp+1,f
  9084  1588                     l3503:	
  9085  1588  0853               	movf	___fldiv@new_exp+1,w
  9086  1589  3A80               	xorlw	128
  9087  158A  00FF               	movwf	127
  9088  158B  3080               	movlw	128
  9089  158C  027F               	subwf	127,w
  9090  158D  1D03               	skipz
  9091  158E  2D91               	goto	u5985
  9092  158F  30FF               	movlw	255
  9093  1590  0252               	subwf	___fldiv@new_exp,w
  9094  1591                     u5985:	
  9095  1591  1C03               	skipc
  9096  1592  2DA1               	goto	l3507
  9097  1593  30FF               	movlw	255
  9098  1594  1283               	bcf	3,5	;RP0=0, select bank0
  9099  1595  1303               	bcf	3,6	;RP1=0, select bank0
  9100  1596  00D2               	movwf	___fldiv@new_exp
  9101  1597  3000               	movlw	0
  9102  1598  00D3               	movwf	___fldiv@new_exp+1
  9103  1599  3000               	movlw	0
  9104  159A  00C7               	movwf	___fldiv@b+3
  9105  159B  3000               	movlw	0
  9106  159C  00C6               	movwf	___fldiv@b+2
  9107  159D  3000               	movlw	0
  9108  159E  00C5               	movwf	___fldiv@b+1
  9109  159F  3000               	movlw	0
  9110  15A0  00C4               	movwf	___fldiv@b
  9111  15A1                     l3507:	
  9112  15A1  1283               	bcf	3,5	;RP0=0, select bank0
  9113  15A2  1303               	bcf	3,6	;RP1=0, select bank0
  9114  15A3  0853               	movf	___fldiv@new_exp+1,w
  9115  15A4  3A80               	xorlw	128
  9116  15A5  00FF               	movwf	127
  9117  15A6  3080               	movlw	128
  9118  15A7  027F               	subwf	127,w
  9119  15A8  1D03               	skipz
  9120  15A9  2DAC               	goto	u5995
  9121  15AA  3001               	movlw	1
  9122  15AB  0252               	subwf	___fldiv@new_exp,w
  9123  15AC                     u5995:	
  9124  15AC  1803               	skipnc
  9125  15AD  2DBB               	goto	l669
  9126  15AE  1283               	bcf	3,5	;RP0=0, select bank0
  9127  15AF  1303               	bcf	3,6	;RP1=0, select bank0
  9128  15B0  01D2               	clrf	___fldiv@new_exp
  9129  15B1  01D3               	clrf	___fldiv@new_exp+1
  9130  15B2  3000               	movlw	0
  9131  15B3  00C7               	movwf	___fldiv@b+3
  9132  15B4  3000               	movlw	0
  9133  15B5  00C6               	movwf	___fldiv@b+2
  9134  15B6  3000               	movlw	0
  9135  15B7  00C5               	movwf	___fldiv@b+1
  9136  15B8  3000               	movlw	0
  9137  15B9  00C4               	movwf	___fldiv@b
  9138  15BA  01D1               	clrf	___fldiv@sign
  9139  15BB                     l669:	
  9140  15BB  1283               	bcf	3,5	;RP0=0, select bank0
  9141  15BC  1303               	bcf	3,6	;RP1=0, select bank0
  9142  15BD  0852               	movf	___fldiv@new_exp,w
  9143  15BE  00C8               	movwf	??___fldiv
  9144  15BF  0848               	movf	??___fldiv,w
  9145  15C0  00D8               	movwf	___fldiv@bexp
  9146  15C1  1C58               	btfss	___fldiv@bexp,0
  9147  15C2  2DC5               	goto	l3519
  9148  15C3  17C6               	bsf	___fldiv@b+2,7
  9149  15C4  2DC9               	goto	l671
  9150  15C5                     l3519:	
  9151  15C5  307F               	movlw	127
  9152  15C6  00C8               	movwf	??___fldiv
  9153  15C7  0848               	movf	??___fldiv,w
  9154  15C8  05C6               	andwf	___fldiv@b+2,f
  9155  15C9                     l671:	
  9156  15C9  0858               	movf	___fldiv@bexp,w
  9157  15CA  00C8               	movwf	??___fldiv
  9158  15CB  1003               	clrc
  9159  15CC  0C48               	rrf	??___fldiv,w
  9160  15CD  00C9               	movwf	??___fldiv+1
  9161  15CE  0849               	movf	??___fldiv+1,w
  9162  15CF  00C7               	movwf	___fldiv@b+3
  9163  15D0  2C8E               	goto	L10
  9164  15D1                     __end_of___fldiv:	
  9165  007E                     btemp	set	126	;btemp
  9166  007E                     wtemp0	set	126


Data Sizes:
    Strings     52
    Constant    144
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     58      58
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_6(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@mensaje(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    lcdPrint@a	PTR const unsigned char  size(2) Largest target is 16
		 -> main@mensaje(BANK1[16]), STR_5(CODE[6]), STR_4(CODE[9]), STR_3(CODE[8]), 
		 -> STR_2(CODE[12]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___xxtofl->_adcRead
    _lcdSetCursor->_lcdCmd
    _lcdPrint->_lcdWriteChar
    _lcdWriteChar->_lcdPort
    _lcdInit->_lcdCmd
    _lcdClear->_lcdCmd
    _lcdCmd->_lcdPort

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___xxtofl
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0   39233
                                             35 BANK1     23    23      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _adcInit
                            _adcRead
                           _lcdClear
                            _lcdInit
                           _lcdPrint
                       _lcdSetCursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   30953
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             32 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             32 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              6 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              4 COMMON     8     4      4
                                              0 BANK0      6     6      0
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             51 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             72 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             52 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _lcdSetCursor                                         8     7      1     771
                                              4 COMMON     8     7      1
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             7     5      2     724
                                              5 COMMON     7     5      2
                       _lcdWriteChar
 ---------------------------------------------------------------------------------
 (2) _lcdWriteChar                                         4     4      0     178
                                              1 COMMON     4     4      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              2     2      0     198
                                              4 COMMON     2     2      0
                             _lcdCmd
                            _lcdPort
 ---------------------------------------------------------------------------------
 (1) _lcdClear                                             0     0      0     110
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (2) _lcdCmd                                               3     3      0     110
                                              1 COMMON     3     3      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (3) _lcdPort                                              1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adcRead                                              4     2      2      98
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
       _adcRead (ARG)
     ___xxtofl (ARG)
       _adcRead (ARG)
     _adcRead (ARG)
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
       _adcRead (ARG)
     _adcRead (ARG)
   ___xxtofl
     _adcRead (ARG)
   _adcInit
   _adcRead
   _lcdClear
     _lcdCmd
       _lcdPort
   _lcdInit
     _lcdCmd
       _lcdPort
     _lcdPort
   _lcdPrint
     _lcdWriteChar
       _lcdPort
   _lcdSetCursor
     _lcdCmd
       _lcdPort
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _adcRead (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
       _adcRead (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _adcRead (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _adcRead (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _adcRead (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
       _adcRead (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _adcRead (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _adcRead (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     3A      3A       7       72.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Apr 26 11:12:45 2019

           ___fldiv@aexp 0059             ___fldiv@bexp 0058                        pc 0002  
           ___fldiv@sign 0051              __CFG_CP$OFF 0000                       l40 1D1B  
                     l41 1D1F                       l35 1D0E                       l36 1D11  
                     l37 1D15                       l53 1E2B                       l38 1D16  
                     l39 1D1A                       l75 1D5B             ___awdiv@sign 0021  
                     fsr 0004      ___wmul@multiplicand 0072      __Umul8_16@word_mpld 0076  
                    l213 0273                      l254 07C9                      l239 05D7  
                    l264 1D2B                      l450 1EE0                      l451 1EFA  
                    l612 1775                      l445 1416                      l455 11BD  
                    l633 17F5                      l625 17DD                      l458 1223  
                    l474 086E                      l731 1295                      l492 136C  
                    l725 1255                      l671 15C9                      l647 147C  
                    l591 1623                      l753 1D98                      l738 12AB  
                    l595 16BC                      l739 12B5                      l669 15BB  
                    l597 169A                      l699 0CAA                      _RB2 0032  
                    _RB3 0033                      _RB4 0034                      _RB5 0035  
                    _RB6 0036                      _RB7 0037             __CFG_CPD$OFF 0000  
                    fsr0 0004                      indf 0000             ___awmod@sign 0076  
           __CFG_FOSC$XT 0000             ___flmul@aexp 0038             ___flmul@bexp 0039  
            _sprintf$876 00AA             ___flmul@sign 0033             ___flmul@temp 003E  
           ___flmul@prod 003A           ??_lcdWriteChar 0071            lcdWriteChar@a 0074  
          lcdWriteChar@y 0073             __CFG_LVP$OFF 0000             ___fltol@exp1 005D  
                   l3111 1E23                     l3015 085A                     l2311 1F25  
                   l2303 1F1F                     l3025 087D                     l3017 086A  
                   l3041 1F8F                     l2313 1F33                     l2321 1F4C  
                   l3201 0235                     l3107 1E1D                     l3035 1F61  
                   l2227 1D90                     l3211 0291                     l3203 026F  
                   l3037 1F71                     l3045 1F9C                     l3061 124D  
                   l2341 1E63                     l2261 1FBC                     l2325 1F54  
                   l2317 1F41                     l2415 1618                     l3071 1268  
                   l2351 1E84                     l2271 1FC4                     l2255 1FB1  
                   l3311 0639                     l3401 144E                     l2425 162D  
                   l3081 12A9                     l3073 127A                     l2273 1FD2  
                   l3217 02A1                     l3209 0275                     l3403 1456  
                   l2531 179D                     l2419 161B                     l3083 129A  
                   l3067 1264                     l2603 09E4                     l2347 1E79  
                   l2339 1E55                     l2363 1DAF                     l2283 1FF3  
                   l3331 0685                     l3323 0668                     l3251 03CA  
                   l3243 0341                     l3227 02E7                     l3421 1474  
                   l3157 1E8B                     l2525 1796                     l2517 1787  
                   l2509 1767                     l2533 179F                     l2605 09E6  
                   l2365 1DBD                     l2373 1DD6                     l3317 064C  
                   l3503 1588                     l3431 149B                     l2543 17AA  
                   l2463 16A5                     l2455 1669                     l2391 15EE  
                   l3095 12D2                     l2615 09FC                     l2607 09EE  
                   l2287 1FFB                     l2279 1FE8                     l3351 07B4  
                   l3271 04B2                     l3255 03EB                     l3417 1471  
                   l2561 17ED                     l2481 16CA                     l2465 16A7  
                   l2473 16B6                     l2369 1DCB                     l3345 07A3  
                   l3281 0500                     l3353 07B9                     l3601 0289  
                   l3507 15A1                     l2539 17A8                     l2491 16ED  
                   l2395 15F1                     l2299 1F18                     l3267 0497  
                   l3259 043F                     l3187 0222                     l3371 020C  
                   l3437 14A7                     l2565 17F1                     l2397 15F9  
                   l2901 1402                     l2813 12EC                     l3365 07DF  
                   l3293 0586                     l3373 07F7                     l3519 15C5  
                   l3463 1515                     l2911 1425                     l2903 1412  
                   l2831 1325                     l2807 1D05                     l3287 0584  
                   l3481 1520                     l3457 14F6                     l3465 14D2  
                   l2489 16EB                     l2817 12F5                     l2585 09BF  
                   l3561 0915                     l3483 153D                     l3467 151A  
                   l2499 16FD                     l2851 1368                     l2675 0C30  
                   l2667 0BFC                     l2587 09C1                     l2755 01C3  
                   l2771 0DA9                     l3299 05C2                     l3493 1556  
                   l3397 144B                     l2917 1D23                     l2693 0C7A  
                   l2669 0C19                     l2589 09C9                     l2749 0116  
                   l2781 0E5F                     l2935 10F4                     l2839 1345  
                   l2679 0C32                     l3489 1554                     l2961 1F0C  
                   l2945 112C                     l2937 1104                     l2865 138F  
                   l2849 1358                     l2689 0C64                     l2777 0E34  
                   l2971 11D7                     l2891 13EE                     l2883 13C6  
                   l2859 137B                     l2699 0C93                     l2795 0FD5  
                   l2949 1139                     l2869 1398                     l2789 0F4A  
                   l2975 11FD                     l2995 082A                     l2999 0833  
                   STR_1 10AC                     STR_2 10A0                     STR_3 10C0  
                   STR_4 10B7                     STR_5 10C8                     STR_6 10CE  
                   u3025 1D99                     u3115 1FC7                     u4015 0B09  
                   u3135 1FD3                     u3215 1F28                     u4105 0C00  
                   u3305 1E64                     u3145 1FDF                     u3315 1E70  
                   u3155 1FE9                     u3235 1F39                     u3500 1689  
                   u5005 083C                     u4205 0C6D                     u4125 0C0B  
                   u3325 1E7A                     u3245 1F42                     u3510 168A  
                   u4215 0C85                     u4055 0BA5                     u5105 1F65  
                   u4305 0184                     u4235 1DEC                     u5035 085B  
                   u4075 0BCA                     u3355 1DB2                     u4315 01CE  
                   u5125 1F7F                     u5205 128D                     u3285 1E58  
                   u4405 0E37                     u5135 1F90                     u4095 0BE8  
                   u3375 1DC3                     u4255 0028                     u3641 1728  
                   u3633 170F                     u3625 16F1                     u3545 16AB  
                   u5065 0873                     u5225 12A2                     u3385 1DCC  
                   u4265 0082                     u4425 0E84                     u4345 0CE3  
                   u6017 089E                     u3650 173C                     u3642 1729  
                   u6107 1D53                     u3651 173D                     u3643 172E  
                   u4195 0C4F                     u4275 00D7                     u4435 0EC0  
                   u4355 0D1F                     u6027 08D6                     u3652 1742  
                   u3644 172F                     u5325 1E34                     u3653 1743  
                   u3645 1734                     u4445 0F0B                     u4365 0D6A  
                   u6037 099D                     u3646 1735                     u6047 1DFC  
                   u3495 167D                     u4535 1327                     u4295 0137  
                   u6057 1E0C                     u5265 12BD                     u5185 1271  
                   u4625 1371                     u4545 1338                     u4465 0F62  
                   u4385 0DC1                     u6067 1152                     u4555 1346  
                   u4475 0F9E                     u4395 0DFD                     u5515 0495  
                   u6077 1161                     u4725 1403                     u4485 0FD8  
                   u5605 0662                     u6087 116F                     u3695 1789  
                   u5535 0589                     u6097 0816                     u4905 1F08  
                   u4825 10F8                     u4665 13C8                     u5625 0705  
                   u5545 05B8                     u3795 17C7                     u4755 141B  
                   u4675 13DD                     u4595 1359                     u5635 076B  
                   u5475 03F6                     u4941 11E8                     u4845 1106  
                   u4685 13F0                     u5485 044A                     u4942 11E9  
                   u5815 14DB                     u4943 11EE                     u4855 111B  
                   u5575 05DF                     u4944 11EF                     u5905 152F  
                   u5825 14E4                     u4961 120E                     u4945 11F4  
                   u4865 112D                     u4785 1D2C                     u3985 0AAC  
                   u4962 120F                     u4946 11F5                     u4963 1214  
                   u4795 1D33                     u5595 0655                     u4964 1215  
                   u5845 14EF                     u4965 121A                     u5685 07D0  
                   u4966 121B                     u5855 1504                     u5695 07DD  
                   u5885 1524                     u5975 1573                     u5985 1591  
                   u5995 15AC              main@mensaje 00C6             __CFG_WRT$OFF 0000  
                   _main 088C                     btemp 007E                     start 0000  
        ___fldiv@new_exp 0052            ___fltol@sign1 005C          __end_of___fladd 1800  
                  ?_main 0070          __end_of_adcInit 10E4          __end_of___fldiv 15D1  
        __end_of_adcRead 1D64          __end_of___awdiv 2000          __end_of___flneg 1CEE  
          __CFG_WDTE$OFF 0000          __end_of___awmod 1F59          __end_of___flmul 0CB7  
        __end_of___flsub 1D86          __end_of___fltol 088C          __end_of___lldiv 1142  
        ___awdiv@divisor 0077          __end_of___llmod 1FA5          __end_of___lwdiv 1E89  
        __end_of___lwmod 1DDB          ___awdiv@counter 0020                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
        __end_of_lcdInit 11A3          __end_of_lcdPort 1D21          __end_of_dpowers 10A0  
                  _scale 0CB7          __end_of_isdigit 1D07           __CFG_BOREN$OFF 0000  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __end_of_sprintf 07FC          __initialization 07FC             __end_of_main 09A2  
                 ??_main 00C3     __end_of_lcdSetCursor 1E4D     __size_of__tdiv_to_l_ 00A9  
       ___llmod@dividend 0074                   ?_scale 0040                   _ADRESH 001E  
                 _ADRESL 009E         ___awdiv@dividend 0079         __end_of___xxtofl 12DB  
       __end_of_lcdClear 1CF9           __CFG_PWRTE$OFF 0000         __end_of_lcdPrint 1EC6  
       __end_of__powers_ 1044                   ___flge 11A3                   ___fleq 1EC6  
              ??___fladd 005C                   ___wmul 1D21                ??_adcInit 0070  
              ??___fldiv 0048                ??_adcRead 0072                ??___awdiv 007B  
   __end_of_lcdWriteChar 1E12                ??___flneg 0074                ??___awmod 0074  
              ??___flmul 002E                ??___flsub 007E                ??___fltol 0057  
              ??___lldiv 0078                   _lcdCmd 0805                ??___llmod 0078  
              ??___lwdiv 007A                ??___lwmod 0074                   _fround 0004  
       ___awdiv@quotient 0022          ___awmod@divisor 0070                ??_lcdInit 0074  
        ___awmod@counter 0075                ??_lcdPort 0070                ??_isdigit 0070  
     __size_of__Umul8_16 0023                ??_sprintf 00A5               ___flge@ff1 0070  
             ___flge@ff2 0074             ___xxtofl@arg 0022             ___xxtofl@exp 0021  
           ___xxtofl@val 0074               ___fleq@ff1 0070               ___fleq@ff2 0074  
__end_of__initialization 07FC               ___flneg@f1 0070               ___fltol@f1 0053  
         __pcstackCOMMON 0070            __end_of_scale 1000               __div_to_l_ 1384  
       lcdWriteChar@temp 0072          __div_to_l_@exp1 0025          __div_to_l_@cntr 0024  
                ??_scale 0044          __div_to_l_@quot 0020            __div_to_l_@f1 0070  
          __div_to_l_@f2 0074        __end_of__Umul8_16 1DA9               __pmaintext 088C  
                ?___flge 0070                  ?___fleq 0070                  ?___wmul 0070  
                ?_lcdCmd 0070    __size_of_lcdSetCursor 003B                  ?_fround 0040  
              ?___xxtofl 0074                ?_lcdClear 0070                ?_lcdPrint 0075  
             __stringtab 1000    __size_of_lcdWriteChar 0037             _lcdSetCursor 1E12  
      __end_of__npowers_ 1078          lcdSetCursor@row 0079          __size_of___flge 0093  
        __size_of___fleq 0048                  ___fladd 15D1                  _adcInit 10D4  
                ___fldiv 142E                  _adcRead 1D42                  ___awdiv 1FA5  
                ___flneg 1CE5                  ___awmod 1F0E                  ___flmul 09A2  
                ___flsub 1D64                  ___fltol 081F                  ___lldiv 10E4  
        __size_of___wmul 0021                  ___llmod 1F59                  ___lwdiv 1E4D  
             _fround$873 004F               _fround$874 004B                  ___lwmod 1DA9  
        __size_of_lcdCmd 001A          __size_of_fround 0201                  _lcdInit 1142  
                __ptext1 0205                  __ptext2 0CB7                  __ptext3 1F0E  
                __ptext4 1FA5                  __ptext5 1CF9                  __ptext6 0004  
                __ptext7 1DA9                  __ptext8 1E4D                  __ptext9 09A2  
                _lcdPort 1D07              ?__div_to_l_ 0070                  _dpowers 1078  
                _isdigit 1CF9               ??___xxtofl 0078         ___awmod@dividend 0072  
                lcdCmd@a 0073               ??_lcdClear 0074               ??_lcdPrint 0077  
                _sprintf 0205             _lcdWriteChar 1DDB     end_of_initialization 07FC  
        ___lldiv@divisor 0070          ___lldiv@counter 007D           __tdiv_to_l_@f1 0070  
         __tdiv_to_l_@f2 0074            ??__tdiv_to_l_ 0078              ___fladd@grs 0067  
          ___xxtofl@sign 0020              ___fldiv@grs 0054              ___fldiv@rem 004D  
            ___flmul@grs 0034      __size_of__div_to_l_ 00AA           __end_of___flge 1236  
         __end_of___fleq 1F0E           __end_of___wmul 1D42           __end_of_lcdCmd 081F  
         __end_of_fround 0205      start_initialization 07FC      __end_of__tdiv_to_l_ 1384  
        ___llmod@divisor 0070          ___llmod@counter 0079                 ??___flge 0078  
               ??___fleq 0078                 ??___wmul 0074                 ??_lcdCmd 0071  
              __Umul8_16 1D86                 ??_fround 0044            sprintf@tmpval 00B7  
              ___fladd@a 0058                ___fladd@b 0054               fround@prec 0053  
              ___fldiv@a 0040                ___fldiv@b 0044                ___flmul@a 002A  
              ___flmul@b 0026                ___flsub@a 0068                ___flsub@b 006C  
              ___latbits 0002            __pcstackBANK0 0020            __pcstackBANK1 00A0  
      __size_of___xxtofl 00A5        __size_of_lcdClear 000B        __size_of_lcdPrint 003D  
            sprintf@flag 00AF              sprintf@eexp 00B5              sprintf@fval 00BE  
            sprintf@prec 00BC         ___lwdiv@dividend 0078                 ?___fladd 0054  
               ?_adcInit 0070                 ?___fldiv 0040                 ?_adcRead 0070  
               ?___awdiv 0077                 ?___flneg 0070                 ?___awmod 0070  
               ?___flmul 0026                 ?___flsub 0068                 ?___fltol 0053  
               ?___lldiv 0070                 ?___llmod 0070                __npowers_ 1044  
             ?__Umul8_16 0070                 ?___lwdiv 0076                 ?___lwmod 0070  
              __pstrings 1000                 ?_lcdInit 0070              __tdiv_to_l_ 12DB  
               ?_lcdPort 0070             ??__div_to_l_ 0078        adcRead@adcChannel 0070  
               ?_isdigit 0070           lcdSetCursor@yy 0078                _scale$875 004E  
       ___lwdiv@quotient 007B                 ?_sprintf 00A0           __size_of_scale 0349  
         ___wmul@product 0074       __end_of__div_to_l_ 142E                lcdPrint@a 0075  
              lcdPrint@i 007A               _ADCON0bits 001F              __stringbase 100F  
             _ADCON1bits 009F        ___wmul@multiplier 0070         lcdSetCursor@temp 007A  
            ??__Umul8_16 0072         __size_of___fladd 022F         __size_of_adcInit 0010  
       __size_of___fldiv 01A3         __size_of_adcRead 0022         __size_of___awdiv 005B  
       __size_of___flneg 0009         __size_of___awmod 004B         __size_of___flmul 0315  
       __size_of___flsub 0022         __size_of___fltol 006D         __size_of___lldiv 005E  
       __size_of___llmod 004C         __size_of___lwdiv 003C         __size_of___lwmod 0032  
     __end_of__stringtab 1010              _isdigit$684 0070         __size_of_lcdInit 0061  
       __size_of_lcdPort 001A               sprintf@val 00B1                 ___xxtofl 1236  
       __size_of_isdigit 000E                 _lcdClear 1CEE          ___lwdiv@divisor 0076  
        ___lwdiv@counter 007D                 __ptext10 1D86                 __ptext11 12DB  
               __ptext20 1CE5                 __ptext12 1384                 __ptext21 11A3  
               __ptext13 1236                 __ptext30 1D42                 __ptext22 1EC6  
               __ptext14 1D21                 __ptext31 10D4                 __ptext23 1E12  
               __ptext15 1F59                 __ptext32 142E                 __ptext24 1E89  
               __ptext16 10E4                 __ptext25 1DDB                 __ptext17 081F  
               __ptext26 1142                 __ptext18 1D64                 __ptext27 1CEE  
               __ptext19 15D1                 __ptext28 0805                 __ptext29 1D07  
               _lcdPrint 1E89                 __powers_ 1010         __size_of_sprintf 05F7  
          lcdSetCursor@x 0074            lcdSetCursor@y 007B            lcdSetCursor@z 0077  
          __size_of_main 0116                 lcdPort@a 0070                 main@volt 00D6  
               isdigit@c 0071                 scale@scl 0052                sprintf@ap 00AE  
       __tdiv_to_l_@exp1 0025         __tdiv_to_l_@cntr 0024                sprintf@sp 00BB  
       __tdiv_to_l_@quot 0020         ___lwmod@dividend 0072         ___lldiv@dividend 0074  
          ?_lcdSetCursor 0074                stringcode 100A             ?__tdiv_to_l_ 0070  
 __Umul8_16@multiplicand 0070                 sprintf@c 00C2                 sprintf@f 00A0  
       ___lldiv@quotient 0079          ___lwmod@divisor 0070          ___lwmod@counter 0075  
               stringdir 100A                 stringtab 1000            ?_lcdWriteChar 0070  
          ___fladd@signs 0064             ___fladd@aexp 0065             ___fladd@bexp 0066  
   __Umul8_16@multiplier 0078           ??_lcdSetCursor 0075        __Umul8_16@product 0074  
