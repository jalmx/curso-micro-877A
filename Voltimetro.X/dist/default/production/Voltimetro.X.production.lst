

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed May 08 22:59:21 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,merge=1,delta=2
    37                           	psect	text28,local,class=CODE,merge=1,delta=2
    38                           	psect	text29,local,class=CODE,merge=1,delta=2
    39                           	psect	text30,local,class=CODE,merge=1,delta=2
    40                           	psect	text31,local,class=CODE,merge=1,delta=2
    41                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.05
    45                           ; Generated 20/12/2018 GMT
    46                           ; 
    47                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F877A Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  018C                     	;# 
   197  018D                     	;# 
   198                           
   199                           	psect	strings
   200  1000                     __pstrings:	
   201  1000                     stringtab:	
   202  1000                     __stringtab:	
   203                           
   204                           ;	String table - string pointers are 1 byte each
   205  1000  1BFF               	btfsc	btemp+1,7
   206  1001  280A               	ljmp	stringcode
   207  1002  1383               	bcf	3,7
   208  1003  187F               	btfsc	btemp+1,0
   209  1004  1783               	bsf	3,7
   210  1005  0800               	movf	0,w
   211  1006  0A84               	incf	4,f
   212  1007  1903               	skipnz
   213  1008  0AFF               	incf	btemp+1,f
   214  1009  0008               	return
   215  100A                     stringcode:	
   216  100A                     stringdir:	
   217  100A  3010               	movlw	high stringdir
   218  100B  008A               	movwf	10
   219  100C  0804               	movf	4,w
   220  100D  0A84               	incf	4,f
   221  100E  0782               	addwf	2,f
   222  100F                     __stringbase:	
   223  100F  3400               	retlw	0
   224  1010                     __end_of__stringtab:	
   225  1010                     __powers_:	
   226  1010  3400               	retlw	0
   227  1011  3400               	retlw	0
   228  1012  3480               	retlw	128
   229  1013  343F               	retlw	63
   230  1014  3400               	retlw	0
   231  1015  3400               	retlw	0
   232  1016  3420               	retlw	32
   233  1017  3441               	retlw	65
   234  1018  3400               	retlw	0
   235  1019  3400               	retlw	0
   236  101A  34C8               	retlw	200
   237  101B  3442               	retlw	66
   238  101C  3400               	retlw	0
   239  101D  3400               	retlw	0
   240  101E  347A               	retlw	122
   241  101F  3444               	retlw	68
   242  1020  3400               	retlw	0
   243  1021  3440               	retlw	64
   244  1022  341C               	retlw	28
   245  1023  3446               	retlw	70
   246  1024  3400               	retlw	0
   247  1025  3450               	retlw	80
   248  1026  34C3               	retlw	195
   249  1027  3447               	retlw	71
   250  1028  3400               	retlw	0
   251  1029  3424               	retlw	36
   252  102A  3474               	retlw	116
   253  102B  3449               	retlw	73
   254  102C  3480               	retlw	128
   255  102D  3496               	retlw	150
   256  102E  3418               	retlw	24
   257  102F  344B               	retlw	75
   258  1030  3420               	retlw	32
   259  1031  34BC               	retlw	188
   260  1032  34BE               	retlw	190
   261  1033  344C               	retlw	76
   262  1034  3428               	retlw	40
   263  1035  346B               	retlw	107
   264  1036  346E               	retlw	110
   265  1037  344E               	retlw	78
   266  1038  34F9               	retlw	249
   267  1039  3402               	retlw	2
   268  103A  3415               	retlw	21
   269  103B  3450               	retlw	80
   270  103C  34EC               	retlw	236
   271  103D  3478               	retlw	120
   272  103E  34AD               	retlw	173
   273  103F  3460               	retlw	96
   274  1040  34CA               	retlw	202
   275  1041  34F2               	retlw	242
   276  1042  3449               	retlw	73
   277  1043  3471               	retlw	113
   278  1044                     __end_of__powers_:	
   279  1044                     __npowers_:	
   280  1044  3400               	retlw	0
   281  1045  3400               	retlw	0
   282  1046  3480               	retlw	128
   283  1047  343F               	retlw	63
   284  1048  34CD               	retlw	205
   285  1049  34CC               	retlw	204
   286  104A  34CC               	retlw	204
   287  104B  343D               	retlw	61
   288  104C  340A               	retlw	10
   289  104D  34D7               	retlw	215
   290  104E  3423               	retlw	35
   291  104F  343C               	retlw	60
   292  1050  346F               	retlw	111
   293  1051  3412               	retlw	18
   294  1052  3483               	retlw	131
   295  1053  343A               	retlw	58
   296  1054  3417               	retlw	23
   297  1055  34B7               	retlw	183
   298  1056  34D1               	retlw	209
   299  1057  3438               	retlw	56
   300  1058  34AC               	retlw	172
   301  1059  34C5               	retlw	197
   302  105A  3427               	retlw	39
   303  105B  3437               	retlw	55
   304  105C  34BD               	retlw	189
   305  105D  3437               	retlw	55
   306  105E  3486               	retlw	134
   307  105F  3435               	retlw	53
   308  1060  3495               	retlw	149
   309  1061  34BF               	retlw	191
   310  1062  34D6               	retlw	214
   311  1063  3433               	retlw	51
   312  1064  3477               	retlw	119
   313  1065  34CC               	retlw	204
   314  1066  342B               	retlw	43
   315  1067  3432               	retlw	50
   316  1068  345F               	retlw	95
   317  1069  3470               	retlw	112
   318  106A  3489               	retlw	137
   319  106B  3430               	retlw	48
   320  106C  34FF               	retlw	255
   321  106D  34E6               	retlw	230
   322  106E  34DB               	retlw	219
   323  106F  342E               	retlw	46
   324  1070  3408               	retlw	8
   325  1071  34E5               	retlw	229
   326  1072  343C               	retlw	60
   327  1073  341E               	retlw	30
   328  1074  3460               	retlw	96
   329  1075  3442               	retlw	66
   330  1076  34A2               	retlw	162
   331  1077  340D               	retlw	13
   332  1078                     __end_of__npowers_:	
   333  1078                     _dpowers:	
   334  1078  3401               	retlw	1
   335  1079  3400               	retlw	0
   336  107A  3400               	retlw	0
   337  107B  3400               	retlw	0
   338  107C  340A               	retlw	10
   339  107D  3400               	retlw	0
   340  107E  3400               	retlw	0
   341  107F  3400               	retlw	0
   342  1080  3464               	retlw	100
   343  1081  3400               	retlw	0
   344  1082  3400               	retlw	0
   345  1083  3400               	retlw	0
   346  1084  34E8               	retlw	232
   347  1085  3403               	retlw	3
   348  1086  3400               	retlw	0
   349  1087  3400               	retlw	0
   350  1088  3410               	retlw	16
   351  1089  3427               	retlw	39
   352  108A  3400               	retlw	0
   353  108B  3400               	retlw	0
   354  108C  34A0               	retlw	160
   355  108D  3486               	retlw	134
   356  108E  3401               	retlw	1
   357  108F  3400               	retlw	0
   358  1090  3440               	retlw	64
   359  1091  3442               	retlw	66
   360  1092  340F               	retlw	15
   361  1093  3400               	retlw	0
   362  1094  3480               	retlw	128
   363  1095  3496               	retlw	150
   364  1096  3498               	retlw	152
   365  1097  3400               	retlw	0
   366  1098  3400               	retlw	0
   367  1099  34E1               	retlw	225
   368  109A  34F5               	retlw	245
   369  109B  3405               	retlw	5
   370  109C  3400               	retlw	0
   371  109D  34CA               	retlw	202
   372  109E  349A               	retlw	154
   373  109F  343B               	retlw	59
   374  10A0                     __end_of_dpowers:	
   375  0005                     _PORTA	set	5
   376  001E                     _ADRESH	set	30
   377  001F                     _ADCON0bits	set	31
   378  0006                     _PORTB	set	6
   379  0033                     _RB3	set	51
   380  0032                     _RB2	set	50
   381  0037                     _RB7	set	55
   382  0036                     _RB6	set	54
   383  0035                     _RB5	set	53
   384  0034                     _RB4	set	52
   385  0085                     _TRISA	set	133
   386  009E                     _ADRESL	set	158
   387  009F                     _ADCON1bits	set	159
   388  0086                     _TRISB	set	134
   389  10A0                     STR_2:	
   390  10A0  3443               	retlw	67	;'C'
   391  10A1  3461               	retlw	97	;'a'
   392  10A2  3472               	retlw	114	;'r'
   393  10A3  3467               	retlw	103	;'g'
   394  10A4  3461               	retlw	97	;'a'
   395  10A5  346E               	retlw	110	;'n'
   396  10A6  3464               	retlw	100	;'d'
   397  10A7  346F               	retlw	111	;'o'
   398  10A8  342E               	retlw	46	;'.'
   399  10A9  342E               	retlw	46	;'.'
   400  10AA  342E               	retlw	46	;'.'
   401  10AB  3400               	retlw	0
   402  10AC                     STR_1:	
   403  10AC  3456               	retlw	86	;'V'
   404  10AD  346F               	retlw	111	;'o'
   405  10AE  346C               	retlw	108	;'l'
   406  10AF  3474               	retlw	116	;'t'
   407  10B0  3469               	retlw	105	;'i'
   408  10B1  346D               	retlw	109	;'m'
   409  10B2  3465               	retlw	101	;'e'
   410  10B3  3474               	retlw	116	;'t'
   411  10B4  3472               	retlw	114	;'r'
   412  10B5  346F               	retlw	111	;'o'
   413  10B6  3400               	retlw	0
   414  10B7                     STR_3:	
   415  10B7  3456               	retlw	86	;'V'
   416  10B8  346F               	retlw	111	;'o'
   417  10B9  346C               	retlw	108	;'l'
   418  10BA  3474               	retlw	116	;'t'
   419  10BB  3461               	retlw	97	;'a'
   420  10BC  346A               	retlw	106	;'j'
   421  10BD  3465               	retlw	101	;'e'
   422  10BE  3400               	retlw	0
   423  10BF                     STR_4:	
   424  10BF  3425               	retlw	37	;'%'
   425  10C0  342E               	retlw	46	;'.'
   426  10C1  3436               	retlw	54	;'6'
   427  10C2  3466               	retlw	102	;'f'
   428  10C3  3456               	retlw	86	;'V'
   429  10C4  3400               	retlw	0
   430                           
   431                           ; #config settings
   432  0000                     
   433                           	psect	cinit
   434  07FC                     start_initialization:	
   435  07FC                     __initialization:	
   436  07FC                     end_of_initialization:	
   437                           ;End of C runtime variable initialization code
   438                           
   439  07FC                     __end_of__initialization:	
   440  07FC  0183               	clrf	3
   441  07FD  120A  158A  28B9   	ljmp	_main	;jump to C main() function
   442                           
   443                           	psect	cstackBANK1
   444  00A0                     __pcstackBANK1:	
   445  00A0                     ?_sprintf:	
   446  00A0                     sprintf@f:	
   447                           ; 2 bytes @ 0x0
   448                           
   449                           
   450                           ; 1 bytes @ 0x0
   451  00A0                     	ds	5
   452  00A5                     ??_sprintf:	
   453                           
   454                           ; 1 bytes @ 0x5
   455  00A5                     	ds	5
   456  00AA                     _sprintf$874:	
   457                           
   458                           ; 4 bytes @ 0xA
   459  00AA                     	ds	4
   460  00AE                     sprintf@ap:	
   461                           
   462                           ; 1 bytes @ 0xE
   463  00AE                     	ds	1
   464  00AF                     sprintf@flag:	
   465                           
   466                           ; 2 bytes @ 0xF
   467  00AF                     	ds	2
   468  00B1                     sprintf@val:	
   469                           
   470                           ; 4 bytes @ 0x11
   471  00B1                     	ds	4
   472  00B5                     sprintf@eexp:	
   473                           
   474                           ; 2 bytes @ 0x15
   475  00B5                     	ds	2
   476  00B7                     sprintf@tmpval:	
   477                           
   478                           ; 4 bytes @ 0x17
   479  00B7                     	ds	4
   480  00BB                     sprintf@sp:	
   481                           
   482                           ; 1 bytes @ 0x1B
   483  00BB                     	ds	1
   484  00BC                     sprintf@prec:	
   485                           
   486                           ; 2 bytes @ 0x1C
   487  00BC                     	ds	2
   488  00BE                     sprintf@fval:	
   489                           
   490                           ; 4 bytes @ 0x1E
   491  00BE                     	ds	4
   492  00C2                     sprintf@c:	
   493                           
   494                           ; 1 bytes @ 0x22
   495  00C2                     	ds	1
   496  00C3                     ??_main:	
   497                           
   498                           ; 1 bytes @ 0x23
   499  00C3                     	ds	3
   500  00C6                     main@mensaje:	
   501                           
   502                           ; 16 bytes @ 0x26
   503  00C6                     	ds	16
   504  00D6                     main@volt:	
   505                           
   506                           ; 4 bytes @ 0x36
   507  00D6                     	ds	4
   508                           
   509                           	psect	cstackCOMMON
   510  0070                     __pcstackCOMMON:	
   511  0070                     ?_isdigit:	
   512  0070                     ?___fleq:	
   513                           ; 1 bit 
   514                           
   515  0070                     ?___flge:	
   516                           ; 1 bit 
   517                           
   518  0070                     ??_isdigit:	
   519                           ; 1 bit 
   520                           
   521  0070                     ?_lcdPort:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ??_lcdPort:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_lcdCmd:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ?_lcdClear:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_lcdInit:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_lcdWriteChar:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?_adcInit:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ??_adcInit:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_main:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?__Umul8_16:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_adcRead:	
   552                           ; 2 bytes @ 0x0
   553                           
   554  0070                     ?___wmul:	
   555                           ; 2 bytes @ 0x0
   556                           
   557  0070                     ?___awmod:	
   558                           ; 2 bytes @ 0x0
   559                           
   560  0070                     ?___lwmod:	
   561                           ; 2 bytes @ 0x0
   562                           
   563  0070                     ?__tdiv_to_l_:	
   564                           ; 2 bytes @ 0x0
   565                           
   566  0070                     ?__div_to_l_:	
   567                           ; 4 bytes @ 0x0
   568                           
   569  0070                     ?___lldiv:	
   570                           ; 4 bytes @ 0x0
   571                           
   572  0070                     ?___flneg:	
   573                           ; 4 bytes @ 0x0
   574                           
   575  0070                     ?___llmod:	
   576                           ; 4 bytes @ 0x0
   577                           
   578  0070                     lcdPort@a:	
   579                           ; 4 bytes @ 0x0
   580                           
   581  0070                     _isdigit$682:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     __Umul8_16@multiplicand:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     adcRead@adcChannel:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ___wmul@multiplier:	
   591                           ; 2 bytes @ 0x0
   592                           
   593  0070                     ___awmod@divisor:	
   594                           ; 2 bytes @ 0x0
   595                           
   596  0070                     ___lwmod@divisor:	
   597                           ; 2 bytes @ 0x0
   598                           
   599  0070                     ___lldiv@divisor:	
   600                           ; 2 bytes @ 0x0
   601                           
   602  0070                     __div_to_l_@f1:	
   603                           ; 4 bytes @ 0x0
   604                           
   605  0070                     ___fleq@ff1:	
   606                           ; 4 bytes @ 0x0
   607                           
   608  0070                     ___flge@ff1:	
   609                           ; 4 bytes @ 0x0
   610                           
   611  0070                     ___flneg@f1:	
   612                           ; 4 bytes @ 0x0
   613                           
   614  0070                     __tdiv_to_l_@f1:	
   615                           ; 4 bytes @ 0x0
   616                           
   617  0070                     ___llmod@divisor:	
   618                           ; 4 bytes @ 0x0
   619                           
   620                           
   621                           ; 4 bytes @ 0x0
   622  0070                     	ds	1
   623  0071                     ??_lcdCmd:	
   624  0071                     ??_lcdWriteChar:	
   625                           ; 1 bytes @ 0x1
   626                           
   627  0071                     isdigit@c:	
   628                           ; 1 bytes @ 0x1
   629                           
   630                           
   631                           ; 1 bytes @ 0x1
   632  0071                     	ds	1
   633  0072                     ??__Umul8_16:	
   634  0072                     ??_adcRead:	
   635                           ; 1 bytes @ 0x2
   636                           
   637  0072                     lcdWriteChar@temp:	
   638                           ; 1 bytes @ 0x2
   639                           
   640  0072                     ___wmul@multiplicand:	
   641                           ; 1 bytes @ 0x2
   642                           
   643  0072                     ___awmod@dividend:	
   644                           ; 2 bytes @ 0x2
   645                           
   646  0072                     ___lwmod@dividend:	
   647                           ; 2 bytes @ 0x2
   648                           
   649                           
   650                           ; 2 bytes @ 0x2
   651  0072                     	ds	1
   652  0073                     lcdCmd@a:	
   653  0073                     lcdWriteChar@y:	
   654                           ; 1 bytes @ 0x3
   655                           
   656                           
   657                           ; 1 bytes @ 0x3
   658  0073                     	ds	1
   659  0074                     ??_lcdClear:	
   660  0074                     ?_lcdSetCursor:	
   661                           ; 1 bytes @ 0x4
   662                           
   663  0074                     ??_lcdInit:	
   664                           ; 1 bytes @ 0x4
   665                           
   666  0074                     ??___wmul:	
   667                           ; 1 bytes @ 0x4
   668                           
   669  0074                     ??___awmod:	
   670                           ; 1 bytes @ 0x4
   671                           
   672  0074                     ??___flneg:	
   673                           ; 1 bytes @ 0x4
   674                           
   675  0074                     ??___lwmod:	
   676                           ; 1 bytes @ 0x4
   677                           
   678  0074                     ?___xxtofl:	
   679                           ; 1 bytes @ 0x4
   680                           
   681  0074                     lcdSetCursor@x:	
   682                           ; 4 bytes @ 0x4
   683                           
   684  0074                     lcdWriteChar@a:	
   685                           ; 1 bytes @ 0x4
   686                           
   687  0074                     ___wmul@product:	
   688                           ; 1 bytes @ 0x4
   689                           
   690  0074                     __Umul8_16@product:	
   691                           ; 2 bytes @ 0x4
   692                           
   693  0074                     ___lldiv@dividend:	
   694                           ; 2 bytes @ 0x4
   695                           
   696  0074                     __div_to_l_@f2:	
   697                           ; 4 bytes @ 0x4
   698                           
   699  0074                     ___fleq@ff2:	
   700                           ; 4 bytes @ 0x4
   701                           
   702  0074                     ___flge@ff2:	
   703                           ; 4 bytes @ 0x4
   704                           
   705  0074                     __tdiv_to_l_@f2:	
   706                           ; 4 bytes @ 0x4
   707                           
   708  0074                     ___llmod@dividend:	
   709                           ; 4 bytes @ 0x4
   710                           
   711  0074                     ___xxtofl@val:	
   712                           ; 4 bytes @ 0x4
   713                           
   714                           
   715                           ; 4 bytes @ 0x4
   716  0074                     	ds	1
   717  0075                     ??_lcdSetCursor:	
   718  0075                     ?_lcdPrint:	
   719                           ; 1 bytes @ 0x5
   720                           
   721  0075                     ___awmod@counter:	
   722                           ; 1 bytes @ 0x5
   723                           
   724  0075                     ___lwmod@counter:	
   725                           ; 1 bytes @ 0x5
   726                           
   727  0075                     lcdPrint@a:	
   728                           ; 1 bytes @ 0x5
   729                           
   730                           
   731                           ; 2 bytes @ 0x5
   732  0075                     	ds	1
   733  0076                     ?___lwdiv:	
   734  0076                     ___awmod@sign:	
   735                           ; 2 bytes @ 0x6
   736                           
   737  0076                     ___lwdiv@divisor:	
   738                           ; 1 bytes @ 0x6
   739                           
   740  0076                     __Umul8_16@word_mpld:	
   741                           ; 2 bytes @ 0x6
   742                           
   743                           
   744                           ; 2 bytes @ 0x6
   745  0076                     	ds	1
   746  0077                     ??_lcdPrint:	
   747  0077                     ?___awdiv:	
   748                           ; 1 bytes @ 0x7
   749                           
   750  0077                     lcdSetCursor@z:	
   751                           ; 2 bytes @ 0x7
   752                           
   753  0077                     ___awdiv@divisor:	
   754                           ; 1 bytes @ 0x7
   755                           
   756                           
   757                           ; 2 bytes @ 0x7
   758  0077                     	ds	1
   759  0078                     ??__tdiv_to_l_:	
   760  0078                     ??__div_to_l_:	
   761                           ; 1 bytes @ 0x8
   762                           
   763  0078                     ??___lldiv:	
   764                           ; 1 bytes @ 0x8
   765                           
   766  0078                     ??___fleq:	
   767                           ; 1 bytes @ 0x8
   768                           
   769  0078                     ??___flge:	
   770                           ; 1 bytes @ 0x8
   771                           
   772  0078                     ??___llmod:	
   773                           ; 1 bytes @ 0x8
   774                           
   775  0078                     ??___xxtofl:	
   776                           ; 1 bytes @ 0x8
   777                           
   778  0078                     lcdSetCursor@yy:	
   779                           ; 1 bytes @ 0x8
   780                           
   781  0078                     __Umul8_16@multiplier:	
   782                           ; 1 bytes @ 0x8
   783                           
   784  0078                     ___lwdiv@dividend:	
   785                           ; 1 bytes @ 0x8
   786                           
   787                           
   788                           ; 2 bytes @ 0x8
   789  0078                     	ds	1
   790  0079                     lcdSetCursor@row:	
   791  0079                     ___llmod@counter:	
   792                           ; 1 bytes @ 0x9
   793                           
   794  0079                     ___awdiv@dividend:	
   795                           ; 1 bytes @ 0x9
   796                           
   797  0079                     ___lldiv@quotient:	
   798                           ; 2 bytes @ 0x9
   799                           
   800                           
   801                           ; 4 bytes @ 0x9
   802  0079                     	ds	1
   803  007A                     ??___lwdiv:	
   804  007A                     lcdSetCursor@temp:	
   805                           ; 1 bytes @ 0xA
   806                           
   807  007A                     lcdPrint@i:	
   808                           ; 1 bytes @ 0xA
   809                           
   810                           
   811                           ; 2 bytes @ 0xA
   812  007A                     	ds	1
   813  007B                     ??___awdiv:	
   814  007B                     lcdSetCursor@y:	
   815                           ; 1 bytes @ 0xB
   816                           
   817  007B                     ___lwdiv@quotient:	
   818                           ; 1 bytes @ 0xB
   819                           
   820                           
   821                           ; 2 bytes @ 0xB
   822  007B                     	ds	2
   823  007D                     ___lldiv@counter:	
   824  007D                     ___lwdiv@counter:	
   825                           ; 1 bytes @ 0xD
   826                           
   827                           
   828                           ; 1 bytes @ 0xD
   829  007D                     	ds	1
   830  007E                     ??___flsub:	
   831                           
   832                           	psect	cstackBANK0
   833  0020                     __pcstackBANK0:	
   834                           ; 1 bytes @ 0xE
   835                           
   836  0020                     ___awdiv@counter:	
   837  0020                     ___xxtofl@sign:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0020                     __div_to_l_@quot:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0020                     __tdiv_to_l_@quot:	
   844                           ; 4 bytes @ 0x0
   845                           
   846                           
   847                           ; 4 bytes @ 0x0
   848  0020                     	ds	1
   849  0021                     ___awdiv@sign:	
   850  0021                     ___xxtofl@exp:	
   851                           ; 1 bytes @ 0x1
   852                           
   853                           
   854                           ; 1 bytes @ 0x1
   855  0021                     	ds	1
   856  0022                     ___awdiv@quotient:	
   857  0022                     ___xxtofl@arg:	
   858                           ; 2 bytes @ 0x2
   859                           
   860                           
   861                           ; 4 bytes @ 0x2
   862  0022                     	ds	2
   863  0024                     __div_to_l_@cntr:	
   864  0024                     __tdiv_to_l_@cntr:	
   865                           ; 1 bytes @ 0x4
   866                           
   867                           
   868                           ; 1 bytes @ 0x4
   869  0024                     	ds	1
   870  0025                     __div_to_l_@exp1:	
   871  0025                     __tdiv_to_l_@exp1:	
   872                           ; 1 bytes @ 0x5
   873                           
   874                           
   875                           ; 1 bytes @ 0x5
   876  0025                     	ds	1
   877  0026                     ?___flmul:	
   878  0026                     ___flmul@b:	
   879                           ; 4 bytes @ 0x6
   880                           
   881                           
   882                           ; 4 bytes @ 0x6
   883  0026                     	ds	4
   884  002A                     ___flmul@a:	
   885                           
   886                           ; 4 bytes @ 0xA
   887  002A                     	ds	4
   888  002E                     ??___flmul:	
   889                           
   890                           ; 1 bytes @ 0xE
   891  002E                     	ds	5
   892  0033                     ___flmul@sign:	
   893                           
   894                           ; 1 bytes @ 0x13
   895  0033                     	ds	1
   896  0034                     ___flmul@grs:	
   897                           
   898                           ; 4 bytes @ 0x14
   899  0034                     	ds	4
   900  0038                     ___flmul@aexp:	
   901                           
   902                           ; 1 bytes @ 0x18
   903  0038                     	ds	1
   904  0039                     ___flmul@bexp:	
   905                           
   906                           ; 1 bytes @ 0x19
   907  0039                     	ds	1
   908  003A                     ___flmul@prod:	
   909                           
   910                           ; 4 bytes @ 0x1A
   911  003A                     	ds	4
   912  003E                     ___flmul@temp:	
   913                           
   914                           ; 2 bytes @ 0x1E
   915  003E                     	ds	2
   916  0040                     ?_fround:	
   917  0040                     ?_scale:	
   918                           ; 4 bytes @ 0x20
   919                           
   920  0040                     ?___fldiv:	
   921                           ; 4 bytes @ 0x20
   922                           
   923  0040                     ___fldiv@a:	
   924                           ; 4 bytes @ 0x20
   925                           
   926                           
   927                           ; 4 bytes @ 0x20
   928  0040                     	ds	4
   929  0044                     ??_fround:	
   930  0044                     ??_scale:	
   931                           ; 1 bytes @ 0x24
   932                           
   933  0044                     ___fldiv@b:	
   934                           ; 1 bytes @ 0x24
   935                           
   936                           
   937                           ; 4 bytes @ 0x24
   938  0044                     	ds	4
   939  0048                     ??___fldiv:	
   940                           
   941                           ; 1 bytes @ 0x28
   942  0048                     	ds	3
   943  004B                     _fround$872:	
   944                           
   945                           ; 4 bytes @ 0x2B
   946  004B                     	ds	2
   947  004D                     ___fldiv@rem:	
   948                           
   949                           ; 4 bytes @ 0x2D
   950  004D                     	ds	1
   951  004E                     _scale$873:	
   952                           
   953                           ; 4 bytes @ 0x2E
   954  004E                     	ds	1
   955  004F                     _fround$871:	
   956                           
   957                           ; 4 bytes @ 0x2F
   958  004F                     	ds	2
   959  0051                     ___fldiv@sign:	
   960                           
   961                           ; 1 bytes @ 0x31
   962  0051                     	ds	1
   963  0052                     scale@scl:	
   964  0052                     ___fldiv@new_exp:	
   965                           ; 1 bytes @ 0x32
   966                           
   967                           
   968                           ; 2 bytes @ 0x32
   969  0052                     	ds	1
   970  0053                     ?___fltol:	
   971  0053                     fround@prec:	
   972                           ; 4 bytes @ 0x33
   973                           
   974  0053                     ___fltol@f1:	
   975                           ; 1 bytes @ 0x33
   976                           
   977                           
   978                           ; 4 bytes @ 0x33
   979  0053                     	ds	1
   980  0054                     ?___fladd:	
   981  0054                     ___fladd@b:	
   982                           ; 4 bytes @ 0x34
   983                           
   984  0054                     ___fldiv@grs:	
   985                           ; 4 bytes @ 0x34
   986                           
   987                           
   988                           ; 4 bytes @ 0x34
   989  0054                     	ds	3
   990  0057                     ??___fltol:	
   991                           
   992                           ; 1 bytes @ 0x37
   993  0057                     	ds	1
   994  0058                     ___fldiv@bexp:	
   995  0058                     ___fladd@a:	
   996                           ; 1 bytes @ 0x38
   997                           
   998                           
   999                           ; 4 bytes @ 0x38
  1000  0058                     	ds	1
  1001  0059                     ___fldiv@aexp:	
  1002                           
  1003                           ; 1 bytes @ 0x39
  1004  0059                     	ds	3
  1005  005C                     ??___fladd:	
  1006  005C                     ___fltol@sign1:	
  1007                           ; 1 bytes @ 0x3C
  1008                           
  1009                           
  1010                           ; 1 bytes @ 0x3C
  1011  005C                     	ds	1
  1012  005D                     ___fltol@exp1:	
  1013                           
  1014                           ; 1 bytes @ 0x3D
  1015  005D                     	ds	7
  1016  0064                     ___fladd@signs:	
  1017                           
  1018                           ; 1 bytes @ 0x44
  1019  0064                     	ds	1
  1020  0065                     ___fladd@aexp:	
  1021                           
  1022                           ; 1 bytes @ 0x45
  1023  0065                     	ds	1
  1024  0066                     ___fladd@bexp:	
  1025                           
  1026                           ; 1 bytes @ 0x46
  1027  0066                     	ds	1
  1028  0067                     ___fladd@grs:	
  1029                           
  1030                           ; 1 bytes @ 0x47
  1031  0067                     	ds	1
  1032  0068                     ?___flsub:	
  1033  0068                     ___flsub@a:	
  1034                           ; 4 bytes @ 0x48
  1035                           
  1036                           
  1037                           ; 4 bytes @ 0x48
  1038  0068                     	ds	4
  1039  006C                     ___flsub@b:	
  1040                           
  1041                           ; 4 bytes @ 0x4C
  1042  006C                     	ds	4
  1043                           
  1044                           	psect	maintext
  1045  08B9                     __pmaintext:	
  1046 ;;
  1047 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1048 ;;
  1049 ;; *************** function _main *****************
  1050 ;; Defined at:
  1051 ;;		line 18 in file "main.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;		None
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;  mensaje        16   38[BANK1 ] unsigned char [16]
  1056 ;;  volt            4   54[BANK1 ] float 
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1061 ;; Tracked objects:
  1062 ;;		On entry : B00/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1066 ;;      Params:         0       0       0       0       0
  1067 ;;      Locals:         0       0      20       0       0
  1068 ;;      Temps:          0       0       3       0       0
  1069 ;;      Totals:         0       0      23       0       0
  1070 ;;Total ram usage:       23 bytes
  1071 ;; Hardware stack levels required when called:    4
  1072 ;; This function calls:
  1073 ;;		___fldiv
  1074 ;;		___flmul
  1075 ;;		___xxtofl
  1076 ;;		_adcInit
  1077 ;;		_adcRead
  1078 ;;		_lcdClear
  1079 ;;		_lcdInit
  1080 ;;		_lcdPrint
  1081 ;;		_lcdSetCursor
  1082 ;;		_sprintf
  1083 ;; This function is called by:
  1084 ;;		Startup code after reset
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           
  1089                           ;psect for function _main
  1090  08B9                     _main:	
  1091                           
  1092                           ;main.c: 19:     TRISA = 255;
  1093                           
  1094                           ;incstack = 0
  1095                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1096  08B9  30FF               	movlw	255
  1097  08BA  1683               	bsf	3,5	;RP0=1, select bank1
  1098  08BB  1303               	bcf	3,6	;RP1=0, select bank1
  1099  08BC  0085               	movwf	5	;volatile
  1100                           
  1101                           ;main.c: 20:     PORTA = 0;
  1102  08BD  1283               	bcf	3,5	;RP0=0, select bank0
  1103  08BE  1303               	bcf	3,6	;RP1=0, select bank0
  1104  08BF  0185               	clrf	5	;volatile
  1105                           
  1106                           ;main.c: 21:     adcInit();
  1107  08C0  160A  158A  2538  120A  158A  	fcall	_adcInit
  1108                           
  1109                           ;main.c: 23:     lcdInit();
  1110  08C5  160A  118A  217F  120A  158A  	fcall	_lcdInit
  1111                           
  1112                           ;main.c: 24:     lcdClear();
  1113  08CA  160A  158A  252D  120A  158A  	fcall	_lcdClear
  1114                           
  1115                           ;main.c: 25:     lcdSetCursor(1, 1);
  1116  08CF  01F4               	clrf	lcdSetCursor@x
  1117  08D0  0AF4               	incf	lcdSetCursor@x,f
  1118  08D1  3001               	movlw	1
  1119  08D2  160A  158A  266D  120A  158A  	fcall	_lcdSetCursor
  1120                           
  1121                           ;main.c: 26:     lcdPrint("Voltimetro");
  1122  08D7  309D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1123  08D8  00F5               	movwf	lcdPrint@a
  1124  08D9  3080               	movlw	128
  1125  08DA  00F6               	movwf	lcdPrint@a+1
  1126  08DB  160A  158A  26E4  120A  158A  	fcall	_lcdPrint
  1127                           
  1128                           ;main.c: 27:     lcdSetCursor(2, 1);
  1129  08E0  01F4               	clrf	lcdSetCursor@x
  1130  08E1  0AF4               	incf	lcdSetCursor@x,f
  1131  08E2  3002               	movlw	2
  1132  08E3  160A  158A  266D  120A  158A  	fcall	_lcdSetCursor
  1133                           
  1134                           ;main.c: 28:     lcdPrint("Cargando...");
  1135  08E8  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1136  08E9  00F5               	movwf	lcdPrint@a
  1137  08EA  3080               	movlw	128
  1138  08EB  00F6               	movwf	lcdPrint@a+1
  1139  08EC  160A  158A  26E4  120A  158A  	fcall	_lcdPrint
  1140                           
  1141                           ;main.c: 29:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1142  08F1  3003               	movlw	3
  1143  08F2  1683               	bsf	3,5	;RP0=1, select bank1
  1144  08F3  1303               	bcf	3,6	;RP1=0, select bank1
  1145  08F4  00C5               	movwf	(??_main^(0+128)+2)
  1146  08F5  308A               	movlw	138
  1147  08F6  00C4               	movwf	(??_main^(0+128)+1)
  1148  08F7  3055               	movlw	85
  1149  08F8  00C3               	movwf	??_main^(0+128)
  1150  08F9                     u6017:	
  1151  08F9  0BC3               	decfsz	??_main^(0+128),f
  1152  08FA  28F9               	goto	u6017
  1153  08FB  0BC4               	decfsz	(??_main^(0+128)+1),f
  1154  08FC  28F9               	goto	u6017
  1155  08FD  0BC5               	decfsz	(??_main^(0+128)+2),f
  1156  08FE  28F9               	goto	u6017
  1157                           
  1158                           ;main.c: 31:     lcdClear();
  1159  08FF  160A  158A  252D  120A  158A  	fcall	_lcdClear
  1160                           
  1161                           ;main.c: 32:     lcdSetCursor(1, 1);
  1162  0904  01F4               	clrf	lcdSetCursor@x
  1163  0905  0AF4               	incf	lcdSetCursor@x,f
  1164  0906  3001               	movlw	1
  1165  0907  160A  158A  266D  120A  158A  	fcall	_lcdSetCursor
  1166                           
  1167                           ;main.c: 33:     lcdPrint("Voltaje");
  1168  090C  30A8               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1169  090D  00F5               	movwf	lcdPrint@a
  1170  090E  3080               	movlw	128
  1171  090F  00F6               	movwf	lcdPrint@a+1
  1172  0910  160A  158A  26E4  120A  158A  	fcall	_lcdPrint
  1173  0915                     l3541:	
  1174                           
  1175                           ;main.c: 36:         float volt = (5 * (float) adcRead(0)) / 1023;
  1176  0915  3044               	movlw	68
  1177  0916  1283               	bcf	3,5	;RP0=0, select bank0
  1178  0917  1303               	bcf	3,6	;RP1=0, select bank0
  1179  0918  00C3               	movwf	___fldiv@a+3
  1180  0919  307F               	movlw	127
  1181  091A  00C2               	movwf	___fldiv@a+2
  1182  091B  30C0               	movlw	192
  1183  091C  00C1               	movwf	___fldiv@a+1
  1184  091D  3000               	movlw	0
  1185  091E  00C0               	movwf	___fldiv@a
  1186  091F  3040               	movlw	64
  1187  0920  00A9               	movwf	___flmul@b+3
  1188  0921  30A0               	movlw	160
  1189  0922  00A8               	movwf	___flmul@b+2
  1190  0923  3000               	movlw	0
  1191  0924  00A7               	movwf	___flmul@b+1
  1192  0925  3000               	movlw	0
  1193  0926  00A6               	movwf	___flmul@b
  1194  0927  3000               	movlw	0
  1195  0928  00F0               	movwf	adcRead@adcChannel
  1196  0929  00F1               	movwf	adcRead@adcChannel+1
  1197  092A  160A  158A  259D  120A  158A  	fcall	_adcRead
  1198  092F  0870               	movf	?_adcRead,w
  1199  0930  00F4               	movwf	___xxtofl@val
  1200  0931  0871               	movf	?_adcRead+1,w
  1201  0932  00F5               	movwf	___xxtofl@val+1
  1202  0933  3000               	movlw	0
  1203  0934  1BF5               	btfsc	___xxtofl@val+1,7
  1204  0935  30FF               	movlw	255
  1205  0936  00F6               	movwf	___xxtofl@val+2
  1206  0937  00F7               	movwf	___xxtofl@val+3
  1207  0938  3001               	movlw	1
  1208  0939  160A  118A  22E0  120A  158A  	fcall	___xxtofl
  1209  093E  0877               	movf	?___xxtofl+3,w
  1210  093F  1283               	bcf	3,5	;RP0=0, select bank0
  1211  0940  1303               	bcf	3,6	;RP1=0, select bank0
  1212  0941  00AD               	movwf	___flmul@a+3
  1213  0942  0876               	movf	?___xxtofl+2,w
  1214  0943  00AC               	movwf	___flmul@a+2
  1215  0944  0875               	movf	?___xxtofl+1,w
  1216  0945  00AB               	movwf	___flmul@a+1
  1217  0946  0874               	movf	?___xxtofl,w
  1218  0947  00AA               	movwf	___flmul@a
  1219  0948  120A  158A  21A2  120A  158A  	fcall	___flmul
  1220  094D  1283               	bcf	3,5	;RP0=0, select bank0
  1221  094E  1303               	bcf	3,6	;RP1=0, select bank0
  1222  094F  0829               	movf	?___flmul+3,w
  1223  0950  00C7               	movwf	___fldiv@b+3
  1224  0951  0828               	movf	?___flmul+2,w
  1225  0952  00C6               	movwf	___fldiv@b+2
  1226  0953  0827               	movf	?___flmul+1,w
  1227  0954  00C5               	movwf	___fldiv@b+1
  1228  0955  0826               	movf	?___flmul,w
  1229  0956  00C4               	movwf	___fldiv@b
  1230  0957  160A  118A  242E  120A  158A  	fcall	___fldiv
  1231  095C  1283               	bcf	3,5	;RP0=0, select bank0
  1232  095D  1303               	bcf	3,6	;RP1=0, select bank0
  1233  095E  0843               	movf	?___fldiv+3,w
  1234  095F  1683               	bsf	3,5	;RP0=1, select bank1
  1235  0960  1303               	bcf	3,6	;RP1=0, select bank1
  1236  0961  00D9               	movwf	(main@volt+3)^(0+128)
  1237  0962  1283               	bcf	3,5	;RP0=0, select bank0
  1238  0963  1303               	bcf	3,6	;RP1=0, select bank0
  1239  0964  0842               	movf	?___fldiv+2,w
  1240  0965  1683               	bsf	3,5	;RP0=1, select bank1
  1241  0966  1303               	bcf	3,6	;RP1=0, select bank1
  1242  0967  00D8               	movwf	(main@volt+2)^(0+128)
  1243  0968  1283               	bcf	3,5	;RP0=0, select bank0
  1244  0969  1303               	bcf	3,6	;RP1=0, select bank0
  1245  096A  0841               	movf	?___fldiv+1,w
  1246  096B  1683               	bsf	3,5	;RP0=1, select bank1
  1247  096C  1303               	bcf	3,6	;RP1=0, select bank1
  1248  096D  00D7               	movwf	(main@volt+1)^(0+128)
  1249  096E  1283               	bcf	3,5	;RP0=0, select bank0
  1250  096F  1303               	bcf	3,6	;RP1=0, select bank0
  1251  0970  0840               	movf	?___fldiv,w
  1252  0971  1683               	bsf	3,5	;RP0=1, select bank1
  1253  0972  1303               	bcf	3,6	;RP1=0, select bank1
  1254  0973  00D6               	movwf	main@volt^(0+128)
  1255                           
  1256                           ;main.c: 37:         char mensaje[16];;main.c: 38:         sprintf(mensaje, "%.6fV", vol
      +                          t);
  1257  0974  30B0               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1258  0975  00C3               	movwf	??_main^(0+128)
  1259  0976  0843               	movf	??_main^(0+128),w
  1260  0977  00A0               	movwf	sprintf@f^(0+128)
  1261  0978  0859               	movf	(main@volt+3)^(0+128),w
  1262  0979  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1263  097A  0858               	movf	(main@volt+2)^(0+128),w
  1264  097B  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1265  097C  0857               	movf	(main@volt+1)^(0+128),w
  1266  097D  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1267  097E  0856               	movf	main@volt^(0+128),w
  1268  097F  00A1               	movwf	(?_sprintf^(0+128)+1)
  1269  0980  30C6               	movlw	(low (main@mensaje| 0))& (0+255)
  1270  0981  120A  118A  2205  120A  158A  	fcall	_sprintf
  1271                           
  1272                           ;main.c: 39:         lcdSetCursor(2,1);
  1273  0986  01F4               	clrf	lcdSetCursor@x
  1274  0987  0AF4               	incf	lcdSetCursor@x,f
  1275  0988  3002               	movlw	2
  1276  0989  160A  158A  266D  120A  158A  	fcall	_lcdSetCursor
  1277                           
  1278                           ;main.c: 40:         lcdPrint(mensaje);
  1279  098E  30C6               	movlw	(low (main@mensaje| 0))& (0+255)
  1280  098F  00F5               	movwf	lcdPrint@a
  1281  0990  3000               	movlw	0
  1282  0991  00F6               	movwf	lcdPrint@a+1
  1283  0992  160A  158A  26E4  120A  158A  	fcall	_lcdPrint
  1284                           
  1285                           ;main.c: 41:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1286  0997  300D               	movlw	13
  1287  0998  1683               	bsf	3,5	;RP0=1, select bank1
  1288  0999  1303               	bcf	3,6	;RP1=0, select bank1
  1289  099A  00C4               	movwf	(??_main^(0+128)+1)
  1290  099B  30FB               	movlw	251
  1291  099C  00C3               	movwf	??_main^(0+128)
  1292  099D                     u6027:	
  1293  099D  0BC3               	decfsz	??_main^(0+128),f
  1294  099E  299D               	goto	u6027
  1295  099F  0BC4               	decfsz	(??_main^(0+128)+1),f
  1296  09A0  299D               	goto	u6027
  1297                           
  1298                           ;main.c: 42:     }
  1299  09A1  2915               	goto	l3541
  1300  09A2                     __end_of_main:	
  1301                           
  1302                           	psect	text1
  1303  0205                     __ptext1:	
  1304 ;; *************** function _sprintf *****************
  1305 ;; Defined at:
  1306 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;  sp              1    wreg     PTR unsigned char 
  1309 ;;		 -> main@mensaje(16), 
  1310 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1311 ;;		 -> STR_4(6), 
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  1314 ;;		 -> main@mensaje(16), 
  1315 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  1316 ;;  tmpval          4   23[BANK1 ] struct .
  1317 ;;  val             4   17[BANK1 ] unsigned long 
  1318 ;;  prec            2   28[BANK1 ] int 
  1319 ;;  eexp            2   21[BANK1 ] int 
  1320 ;;  flag            2   15[BANK1 ] unsigned short 
  1321 ;;  cp              2    0        PTR const unsigned char 
  1322 ;;  len             2    0        unsigned int 
  1323 ;;  width           2    0        int 
  1324 ;;  c               1   34[BANK1 ] unsigned char 
  1325 ;;  ap              1   14[BANK1 ] PTR void [1]
  1326 ;;		 -> ?_sprintf(2), 
  1327 ;;  d               1    0        unsigned char 
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  2    0[BANK1 ] int 
  1330 ;; Registers used:
  1331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1337 ;;      Params:         0       0       5       0       0
  1338 ;;      Locals:         0       0      25       0       0
  1339 ;;      Temps:          0       0       5       0       0
  1340 ;;      Totals:         0       0      35       0       0
  1341 ;;Total ram usage:       35 bytes
  1342 ;; Hardware stack levels used:    1
  1343 ;; Hardware stack levels required when called:    3
  1344 ;; This function calls:
  1345 ;;		___awdiv
  1346 ;;		___fladd
  1347 ;;		___fleq
  1348 ;;		___flge
  1349 ;;		___flmul
  1350 ;;		___flneg
  1351 ;;		___flsub
  1352 ;;		___fltol
  1353 ;;		___lldiv
  1354 ;;		___llmod
  1355 ;;		___wmul
  1356 ;;		___xxtofl
  1357 ;;		__div_to_l_
  1358 ;;		__tdiv_to_l_
  1359 ;;		_fround
  1360 ;;		_isdigit
  1361 ;;		_scale
  1362 ;; This function is called by:
  1363 ;;		_main
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           
  1368                           ;psect for function _sprintf
  1369  0205                     _sprintf:	
  1370                           
  1371                           ;incstack = 0
  1372                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1373                           ;sprintf@sp stored from wreg
  1374  0205  1683               	bsf	3,5	;RP0=1, select bank1
  1375  0206  1303               	bcf	3,6	;RP1=0, select bank1
  1376  0207  00BB               	movwf	sprintf@sp^(0+128)
  1377                           
  1378                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 509:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c90\common\doprnt.c: 512:  int prec;
  1379  0208  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1380  0209  00A5               	movwf	??_sprintf^(0+128)
  1381  020A  0825               	movf	??_sprintf^(0+128),w
  1382  020B  00AE               	movwf	sprintf@ap^(0+128)
  1383  020C                     l3361:	
  1384                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1385                           
  1386                           
  1387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1388  020C  3001               	movlw	1
  1389  020D  07A0               	addwf	sprintf@f^(0+128),f
  1390  020E  30FF               	movlw	-1
  1391  020F  0720               	addwf	sprintf@f^(0+128),w
  1392  0210  0084               	movwf	4
  1393  0211  160A  118A  200A  120A  118A  	fcall	stringdir
  1394  0216  00A5               	movwf	??_sprintf^(0+128)
  1395  0217  0825               	movf	??_sprintf^(0+128),w
  1396  0218  00C2               	movwf	sprintf@c^(0+128)
  1397  0219  0842               	movf	sprintf@c^(0+128),w
  1398  021A  1903               	btfsc	3,2
  1399  021B  2FF7               	goto	l3363
  1400                           
  1401                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  1402  021C  3025               	movlw	37
  1403  021D  0642               	xorwf	sprintf@c^(0+128),w
  1404  021E  1903               	btfsc	3,2
  1405  021F  2A22               	goto	l3177
  1406                           
  1407                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  1408  0220  0842               	movf	sprintf@c^(0+128),w
  1409  0221  2FEC               	goto	L6
  1410  0222                     l3177:	
  1411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  1412                           
  1413                           
  1414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  1415  0222  01AF               	clrf	sprintf@flag^(0+128)
  1416  0223  01B0               	clrf	(sprintf@flag+1)^(0+128)
  1417                           
  1418                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 623:   if(*
      +                          f == '.') {
  1419  0224  0820               	movf	sprintf@f^(0+128),w
  1420  0225  0084               	movwf	4
  1421  0226  160A  118A  200A  120A  118A  	fcall	stringdir
  1422  022B  3A2E               	xorlw	46
  1423  022C  1D03               	skipz
  1424  022D  2A6F               	goto	l3193
  1425                           
  1426                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 624:    fla
      +                          g |= 0x4000;
  1427  022E  1730               	bsf	(sprintf@flag^(0+128)+1),6
  1428                           
  1429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 625:    f++
      +                          ;
  1430  022F  3001               	movlw	1
  1431  0230  00A5               	movwf	??_sprintf^(0+128)
  1432  0231  0825               	movf	??_sprintf^(0+128),w
  1433  0232  07A0               	addwf	sprintf@f^(0+128),f
  1434                           
  1435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 639:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 640:     prec
      +                           = 0;
  1436  0233  01BC               	clrf	sprintf@prec^(0+128)
  1437  0234  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1438  0235                     l3191:	
  1439                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     wh
      +                          ile(isdigit((unsigned)*f))
  1440                           
  1441                           
  1442                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     wh
      +                          ile(isdigit((unsigned)*f))
  1443  0235  0820               	movf	sprintf@f^(0+128),w
  1444  0236  0084               	movwf	4
  1445  0237  160A  118A  200A  120A  118A  	fcall	stringdir
  1446  023C  120A  158A  2001  120A  118A  	fcall	_isdigit
  1447  0241  1C03               	btfss	3,0
  1448  0242  2A75               	goto	l3199
  1449                           
  1450                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 642:      p
      +                          rec = prec*10 + *f++ - '0';
  1451  0243  1683               	bsf	3,5	;RP0=1, select bank1
  1452  0244  1303               	bcf	3,6	;RP1=0, select bank1
  1453  0245  083D               	movf	(sprintf@prec+1)^(0+128),w
  1454  0246  00F1               	movwf	___wmul@multiplier+1
  1455  0247  083C               	movf	sprintf@prec^(0+128),w
  1456  0248  00F0               	movwf	___wmul@multiplier
  1457  0249  300A               	movlw	10
  1458  024A  00F2               	movwf	___wmul@multiplicand
  1459  024B  3000               	movlw	0
  1460  024C  00F3               	movwf	___wmul@multiplicand+1
  1461  024D  160A  158A  257C  120A  118A  	fcall	___wmul
  1462  0252  1683               	bsf	3,5	;RP0=1, select bank1
  1463  0253  1303               	bcf	3,6	;RP1=0, select bank1
  1464  0254  0820               	movf	sprintf@f^(0+128),w
  1465  0255  0084               	movwf	4
  1466  0256  160A  118A  200A  120A  118A  	fcall	stringdir
  1467  025B  0770               	addwf	?___wmul,w
  1468  025C  00A5               	movwf	??_sprintf^(0+128)
  1469  025D  3000               	movlw	0
  1470  025E  1803               	skipnc
  1471  025F  3001               	movlw	1
  1472  0260  0771               	addwf	?___wmul+1,w
  1473  0261  00A6               	movwf	(??_sprintf+1)^(0+128)
  1474  0262  0825               	movf	??_sprintf^(0+128),w
  1475  0263  3ED0               	addlw	208
  1476  0264  00BC               	movwf	sprintf@prec^(0+128)
  1477  0265  0826               	movf	(??_sprintf+1)^(0+128),w
  1478  0266  1803               	skipnc
  1479  0267  3E01               	addlw	1
  1480  0268  3EFF               	addlw	255
  1481  0269  00BD               	movwf	(sprintf@prec+1)^(0+128)
  1482  026A  3001               	movlw	1
  1483  026B  00A5               	movwf	??_sprintf^(0+128)
  1484  026C  0825               	movf	??_sprintf^(0+128),w
  1485  026D  07A0               	addwf	sprintf@f^(0+128),f
  1486  026E  2A35               	goto	l3191
  1487  026F                     l3193:	
  1488                           
  1489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 645:    pre
      +                          c = 0;
  1490  026F  01BC               	clrf	sprintf@prec^(0+128)
  1491  0270  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1492                           
  1493                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 647:    fla
      +                          g |= 0x1000;
  1494  0271  1630               	bsf	(sprintf@flag^(0+128)+1),4
  1495  0272  2A75               	goto	l3199
  1496  0273                     l213:	
  1497                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 681:   case
      +                           'f':
  1498                           
  1499                           
  1500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 682:    fla
      +                          g |= 0x400;
  1501  0273  1530               	bsf	(sprintf@flag^(0+128)+1),2
  1502                           
  1503                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 683:    bre
      +                          ak;
  1504  0274  2A91               	goto	l3201
  1505  0275                     l3199:	
  1506  0275  3001               	movlw	1
  1507  0276  1683               	bsf	3,5	;RP0=1, select bank1
  1508  0277  1303               	bcf	3,6	;RP1=0, select bank1
  1509  0278  07A0               	addwf	sprintf@f^(0+128),f
  1510  0279  30FF               	movlw	-1
  1511  027A  0720               	addwf	sprintf@f^(0+128),w
  1512  027B  0084               	movwf	4
  1513  027C  160A  118A  200A  120A  118A  	fcall	stringdir
  1514  0281  00C2               	movwf	sprintf@c^(0+128)
  1515  0282  00A5               	movwf	??_sprintf^(0+128)
  1516  0283  01A6               	clrf	(??_sprintf^(0+128)+1)
  1517                           
  1518                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1519                           ; Switch size 1, requested type "simple"
  1520                           ; Number of cases is 1, Range of values is 0 to 0
  1521                           ; switch strategies available:
  1522                           ; Name         Instructions Cycles
  1523                           ; simple_byte            4     3 (average)
  1524                           ; direct_byte           11     8 (fixed)
  1525                           ; jumptable            260     6 (fixed)
  1526                           ;	Chosen strategy is simple_byte
  1527  0284  0826               	movf	(??_sprintf+1)^(0+128),w
  1528  0285  3A00               	xorlw	0	; case 0
  1529  0286  1903               	skipnz
  1530  0287  2A89               	goto	l3581
  1531  0288  2A0C               	goto	l3361
  1532  0289                     l3581:	
  1533                           
  1534                           ; Switch size 1, requested type "simple"
  1535                           ; Number of cases is 2, Range of values is 0 to 102
  1536                           ; switch strategies available:
  1537                           ; Name         Instructions Cycles
  1538                           ; simple_byte            7     4 (average)
  1539                           ; jumptable            260     6 (fixed)
  1540                           ;	Chosen strategy is simple_byte
  1541  0289  0825               	movf	??_sprintf^(0+128),w
  1542  028A  3A00               	xorlw	0	; case 0
  1543  028B  1903               	skipnz
  1544  028C  2FF7               	goto	l3363
  1545  028D  3A66               	xorlw	102	; case 102
  1546  028E  1903               	skipnz
  1547  028F  2A73               	goto	l213
  1548  0290  2A0C               	goto	l3361
  1549  0291                     l3201:	
  1550                           
  1551                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 844:   if(f
      +                          lag & (0x700)) {
  1552  0291  3000               	movlw	0
  1553  0292  052F               	andwf	sprintf@flag^(0+128),w
  1554  0293  00A5               	movwf	??_sprintf^(0+128)
  1555  0294  3007               	movlw	7
  1556  0295  0530               	andwf	(sprintf@flag+1)^(0+128),w
  1557  0296  00A6               	movwf	(??_sprintf+1)^(0+128)
  1558  0297  0825               	movf	??_sprintf^(0+128),w
  1559  0298  0426               	iorwf	(??_sprintf^(0+128)+1),w
  1560  0299  1903               	btfsc	3,2
  1561  029A  2FB9               	goto	l3343
  1562                           
  1563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 846:    if(
      +                          flag & 0x1000)
  1564  029B  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  1565  029C  2AA1               	goto	l3207
  1566                           
  1567                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 848:     pr
      +                          ec = 6;
  1568  029D  3006               	movlw	6
  1569  029E  00BC               	movwf	sprintf@prec^(0+128)
  1570  029F  3000               	movlw	0
  1571  02A0  00BD               	movwf	(sprintf@prec^(0+128)+1)
  1572  02A1                     l3207:	
  1573                           
  1574                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 849:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  1575  02A1  082E               	movf	sprintf@ap^(0+128),w
  1576  02A2  0084               	movwf	4
  1577  02A3  1383               	bcf	3,7	;select IRP bank0
  1578  02A4  0800               	movf	0,w
  1579  02A5  00BE               	movwf	sprintf@fval^(0+128)
  1580  02A6  0A84               	incf	4,f
  1581  02A7  0800               	movf	0,w
  1582  02A8  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1583  02A9  0A84               	incf	4,f
  1584  02AA  0800               	movf	0,w
  1585  02AB  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1586  02AC  0A84               	incf	4,f
  1587  02AD  0800               	movf	0,w
  1588  02AE  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1589  02AF  3004               	movlw	4
  1590  02B0  00A5               	movwf	??_sprintf^(0+128)
  1591  02B1  0825               	movf	??_sprintf^(0+128),w
  1592  02B2  07AE               	addwf	sprintf@ap^(0+128),f
  1593                           
  1594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 850:    if(
      +                          fval < 0.0) {
  1595  02B3  0841               	movf	(sprintf@fval+3)^(0+128),w
  1596  02B4  00F3               	movwf	___flge@ff1+3
  1597  02B5  0840               	movf	(sprintf@fval+2)^(0+128),w
  1598  02B6  00F2               	movwf	___flge@ff1+2
  1599  02B7  083F               	movf	(sprintf@fval+1)^(0+128),w
  1600  02B8  00F1               	movwf	___flge@ff1+1
  1601  02B9  083E               	movf	sprintf@fval^(0+128),w
  1602  02BA  00F0               	movwf	___flge@ff1
  1603  02BB  3000               	movlw	0
  1604  02BC  00F7               	movwf	___flge@ff2+3
  1605  02BD  3000               	movlw	0
  1606  02BE  00F6               	movwf	___flge@ff2+2
  1607  02BF  3000               	movlw	0
  1608  02C0  00F5               	movwf	___flge@ff2+1
  1609  02C1  3000               	movlw	0
  1610  02C2  00F4               	movwf	___flge@ff2
  1611  02C3  160A  118A  224D  120A  118A  	fcall	___flge
  1612  02C8  1803               	btfsc	3,0
  1613  02C9  2AE7               	goto	l3217
  1614                           
  1615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 851:     fv
      +                          al = -fval;
  1616  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  1617  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  1618  02CC  0841               	movf	(sprintf@fval+3)^(0+128),w
  1619  02CD  00F3               	movwf	___flneg@f1+3
  1620  02CE  0840               	movf	(sprintf@fval+2)^(0+128),w
  1621  02CF  00F2               	movwf	___flneg@f1+2
  1622  02D0  083F               	movf	(sprintf@fval+1)^(0+128),w
  1623  02D1  00F1               	movwf	___flneg@f1+1
  1624  02D2  083E               	movf	sprintf@fval^(0+128),w
  1625  02D3  00F0               	movwf	___flneg@f1
  1626  02D4  160A  158A  2524  120A  118A  	fcall	___flneg
  1627  02D9  0873               	movf	?___flneg+3,w
  1628  02DA  1683               	bsf	3,5	;RP0=1, select bank1
  1629  02DB  1303               	bcf	3,6	;RP1=0, select bank1
  1630  02DC  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1631  02DD  0872               	movf	?___flneg+2,w
  1632  02DE  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1633  02DF  0871               	movf	?___flneg+1,w
  1634  02E0  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1635  02E1  0870               	movf	?___flneg,w
  1636  02E2  00BE               	movwf	sprintf@fval^(0+128)
  1637                           
  1638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 852:     fl
      +                          ag |= 0x03;
  1639  02E3  3003               	movlw	3
  1640  02E4  04AF               	iorwf	sprintf@flag^(0+128),f
  1641  02E5  3000               	movlw	0
  1642  02E6  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  1643  02E7                     l3217:	
  1644                           
  1645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 854:    eex
      +                          p = 0;
  1646  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  1647  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  1648  02E9  01B5               	clrf	sprintf@eexp^(0+128)
  1649  02EA  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  1650                           
  1651                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 855:    if(
      +                           fval!=0) {
  1652  02EB  0841               	movf	(sprintf@fval+3)^(0+128),w
  1653  02EC  00F3               	movwf	___fleq@ff1+3
  1654  02ED  0840               	movf	(sprintf@fval+2)^(0+128),w
  1655  02EE  00F2               	movwf	___fleq@ff1+2
  1656  02EF  083F               	movf	(sprintf@fval+1)^(0+128),w
  1657  02F0  00F1               	movwf	___fleq@ff1+1
  1658  02F1  083E               	movf	sprintf@fval^(0+128),w
  1659  02F2  00F0               	movwf	___fleq@ff1
  1660  02F3  3000               	movlw	0
  1661  02F4  00F7               	movwf	___fleq@ff2+3
  1662  02F5  3000               	movlw	0
  1663  02F6  00F6               	movwf	___fleq@ff2+2
  1664  02F7  3000               	movlw	0
  1665  02F8  00F5               	movwf	___fleq@ff2+1
  1666  02F9  3000               	movlw	0
  1667  02FA  00F4               	movwf	___fleq@ff2
  1668  02FB  160A  158A  2721  120A  118A  	fcall	___fleq
  1669  0300  1803               	btfsc	3,0
  1670  0301  2BEB               	goto	l3245
  1671                           
  1672                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 856:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1673  0302  1003               	clrc
  1674  0303  1683               	bsf	3,5	;RP0=1, select bank1
  1675  0304  1303               	bcf	3,6	;RP1=0, select bank1
  1676  0305  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  1677  0306  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  1678  0307  3E82               	addlw	130
  1679  0308  00B5               	movwf	sprintf@eexp^(0+128)
  1680  0309  30FF               	movlw	255
  1681  030A  1803               	skipnc
  1682  030B  3000               	movlw	0
  1683  030C  00B6               	movwf	(sprintf@eexp^(0+128)+1)
  1684                           
  1685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 857:     ee
      +                          xp--;
  1686  030D  30FF               	movlw	255
  1687  030E  07B5               	addwf	sprintf@eexp^(0+128),f
  1688  030F  1803               	skipnc
  1689  0310  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1690  0311  30FF               	movlw	255
  1691  0312  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  1692                           
  1693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 858:     ee
      +                          xp *= 3;
  1694  0313  3003               	movlw	3
  1695  0314  00F0               	movwf	___wmul@multiplier
  1696  0315  3000               	movlw	0
  1697  0316  00F1               	movwf	___wmul@multiplier+1
  1698  0317  0836               	movf	(sprintf@eexp+1)^(0+128),w
  1699  0318  00F3               	movwf	___wmul@multiplicand+1
  1700  0319  0835               	movf	sprintf@eexp^(0+128),w
  1701  031A  00F2               	movwf	___wmul@multiplicand
  1702  031B  160A  158A  257C  120A  118A  	fcall	___wmul
  1703  0320  0871               	movf	?___wmul+1,w
  1704  0321  1683               	bsf	3,5	;RP0=1, select bank1
  1705  0322  1303               	bcf	3,6	;RP1=0, select bank1
  1706  0323  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  1707  0324  0870               	movf	?___wmul,w
  1708  0325  00B5               	movwf	sprintf@eexp^(0+128)
  1709                           
  1710                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 859:     ee
      +                          xp /= 10;
  1711  0326  300A               	movlw	10
  1712  0327  00F7               	movwf	___awdiv@divisor
  1713  0328  3000               	movlw	0
  1714  0329  00F8               	movwf	___awdiv@divisor+1
  1715  032A  0836               	movf	(sprintf@eexp+1)^(0+128),w
  1716  032B  00FA               	movwf	___awdiv@dividend+1
  1717  032C  0835               	movf	sprintf@eexp^(0+128),w
  1718  032D  00F9               	movwf	___awdiv@dividend
  1719  032E  160A  118A  20C6  120A  118A  	fcall	___awdiv
  1720  0333  0878               	movf	?___awdiv+1,w
  1721  0334  1683               	bsf	3,5	;RP0=1, select bank1
  1722  0335  1303               	bcf	3,6	;RP1=0, select bank1
  1723  0336  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  1724  0337  0877               	movf	?___awdiv,w
  1725  0338  00B5               	movwf	sprintf@eexp^(0+128)
  1726                           
  1727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 860:     if
      +                          (eexp < 0)
  1728  0339  1FB6               	btfss	(sprintf@eexp+1)^(0+128),7
  1729  033A  2B41               	goto	l3233
  1730                           
  1731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 861:      e
      +                          exp--;
  1732  033B  30FF               	movlw	255
  1733  033C  07B5               	addwf	sprintf@eexp^(0+128),f
  1734  033D  1803               	skipnc
  1735  033E  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1736  033F  30FF               	movlw	255
  1737  0340  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  1738  0341                     l3233:	
  1739                           
  1740                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 865:     tm
      +                          pval.integ = scale(-eexp);
  1741  0341  0335               	decf	sprintf@eexp^(0+128),w
  1742  0342  3AFF               	xorlw	255
  1743  0343  120A  158A  24B7  120A  118A  	fcall	_scale
  1744  0348  1283               	bcf	3,5	;RP0=0, select bank0
  1745  0349  1303               	bcf	3,6	;RP1=0, select bank0
  1746  034A  0843               	movf	?_scale+3,w
  1747  034B  1683               	bsf	3,5	;RP0=1, select bank1
  1748  034C  1303               	bcf	3,6	;RP1=0, select bank1
  1749  034D  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  1750  034E  1283               	bcf	3,5	;RP0=0, select bank0
  1751  034F  1303               	bcf	3,6	;RP1=0, select bank0
  1752  0350  0842               	movf	?_scale+2,w
  1753  0351  1683               	bsf	3,5	;RP0=1, select bank1
  1754  0352  1303               	bcf	3,6	;RP1=0, select bank1
  1755  0353  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  1756  0354  1283               	bcf	3,5	;RP0=0, select bank0
  1757  0355  1303               	bcf	3,6	;RP1=0, select bank0
  1758  0356  0841               	movf	?_scale+1,w
  1759  0357  1683               	bsf	3,5	;RP0=1, select bank1
  1760  0358  1303               	bcf	3,6	;RP1=0, select bank1
  1761  0359  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  1762  035A  1283               	bcf	3,5	;RP0=0, select bank0
  1763  035B  1303               	bcf	3,6	;RP1=0, select bank0
  1764  035C  0840               	movf	?_scale,w
  1765  035D  1683               	bsf	3,5	;RP0=1, select bank1
  1766  035E  1303               	bcf	3,6	;RP1=0, select bank1
  1767  035F  00B7               	movwf	sprintf@tmpval^(0+128)
  1768                           
  1769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 866:     tm
      +                          pval.integ *= fval;
  1770  0360  0841               	movf	(sprintf@fval+3)^(0+128),w
  1771  0361  1283               	bcf	3,5	;RP0=0, select bank0
  1772  0362  1303               	bcf	3,6	;RP1=0, select bank0
  1773  0363  00A9               	movwf	___flmul@b+3
  1774  0364  1683               	bsf	3,5	;RP0=1, select bank1
  1775  0365  1303               	bcf	3,6	;RP1=0, select bank1
  1776  0366  0840               	movf	(sprintf@fval+2)^(0+128),w
  1777  0367  1283               	bcf	3,5	;RP0=0, select bank0
  1778  0368  1303               	bcf	3,6	;RP1=0, select bank0
  1779  0369  00A8               	movwf	___flmul@b+2
  1780  036A  1683               	bsf	3,5	;RP0=1, select bank1
  1781  036B  1303               	bcf	3,6	;RP1=0, select bank1
  1782  036C  083F               	movf	(sprintf@fval+1)^(0+128),w
  1783  036D  1283               	bcf	3,5	;RP0=0, select bank0
  1784  036E  1303               	bcf	3,6	;RP1=0, select bank0
  1785  036F  00A7               	movwf	___flmul@b+1
  1786  0370  1683               	bsf	3,5	;RP0=1, select bank1
  1787  0371  1303               	bcf	3,6	;RP1=0, select bank1
  1788  0372  083E               	movf	sprintf@fval^(0+128),w
  1789  0373  1283               	bcf	3,5	;RP0=0, select bank0
  1790  0374  1303               	bcf	3,6	;RP1=0, select bank0
  1791  0375  00A6               	movwf	___flmul@b
  1792  0376  1683               	bsf	3,5	;RP0=1, select bank1
  1793  0377  1303               	bcf	3,6	;RP1=0, select bank1
  1794  0378  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  1795  0379  1283               	bcf	3,5	;RP0=0, select bank0
  1796  037A  1303               	bcf	3,6	;RP1=0, select bank0
  1797  037B  00AD               	movwf	___flmul@a+3
  1798  037C  1683               	bsf	3,5	;RP0=1, select bank1
  1799  037D  1303               	bcf	3,6	;RP1=0, select bank1
  1800  037E  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  1801  037F  1283               	bcf	3,5	;RP0=0, select bank0
  1802  0380  1303               	bcf	3,6	;RP1=0, select bank0
  1803  0381  00AC               	movwf	___flmul@a+2
  1804  0382  1683               	bsf	3,5	;RP0=1, select bank1
  1805  0383  1303               	bcf	3,6	;RP1=0, select bank1
  1806  0384  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  1807  0385  1283               	bcf	3,5	;RP0=0, select bank0
  1808  0386  1303               	bcf	3,6	;RP1=0, select bank0
  1809  0387  00AB               	movwf	___flmul@a+1
  1810  0388  1683               	bsf	3,5	;RP0=1, select bank1
  1811  0389  1303               	bcf	3,6	;RP1=0, select bank1
  1812  038A  0837               	movf	sprintf@tmpval^(0+128),w
  1813  038B  1283               	bcf	3,5	;RP0=0, select bank0
  1814  038C  1303               	bcf	3,6	;RP1=0, select bank0
  1815  038D  00AA               	movwf	___flmul@a
  1816  038E  120A  158A  21A2  120A  118A  	fcall	___flmul
  1817  0393  1283               	bcf	3,5	;RP0=0, select bank0
  1818  0394  1303               	bcf	3,6	;RP1=0, select bank0
  1819  0395  0829               	movf	?___flmul+3,w
  1820  0396  1683               	bsf	3,5	;RP0=1, select bank1
  1821  0397  1303               	bcf	3,6	;RP1=0, select bank1
  1822  0398  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  1823  0399  1283               	bcf	3,5	;RP0=0, select bank0
  1824  039A  1303               	bcf	3,6	;RP1=0, select bank0
  1825  039B  0828               	movf	?___flmul+2,w
  1826  039C  1683               	bsf	3,5	;RP0=1, select bank1
  1827  039D  1303               	bcf	3,6	;RP1=0, select bank1
  1828  039E  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  1829  039F  1283               	bcf	3,5	;RP0=0, select bank0
  1830  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  1831  03A1  0827               	movf	?___flmul+1,w
  1832  03A2  1683               	bsf	3,5	;RP0=1, select bank1
  1833  03A3  1303               	bcf	3,6	;RP1=0, select bank1
  1834  03A4  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  1835  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  1836  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  1837  03A7  0826               	movf	?___flmul,w
  1838  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  1839  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  1840  03AA  00B7               	movwf	sprintf@tmpval^(0+128)
  1841                           
  1842                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (tmpval.integ < 1.0)
  1843  03AB  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  1844  03AC  00F3               	movwf	___flge@ff1+3
  1845  03AD  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  1846  03AE  00F2               	movwf	___flge@ff1+2
  1847  03AF  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  1848  03B0  00F1               	movwf	___flge@ff1+1
  1849  03B1  0837               	movf	sprintf@tmpval^(0+128),w
  1850  03B2  00F0               	movwf	___flge@ff1
  1851  03B3  303F               	movlw	63
  1852  03B4  00F7               	movwf	___flge@ff2+3
  1853  03B5  3080               	movlw	128
  1854  03B6  00F6               	movwf	___flge@ff2+2
  1855  03B7  3000               	movlw	0
  1856  03B8  00F5               	movwf	___flge@ff2+1
  1857  03B9  3000               	movlw	0
  1858  03BA  00F4               	movwf	___flge@ff2
  1859  03BB  160A  118A  224D  120A  118A  	fcall	___flge
  1860  03C0  1803               	btfsc	3,0
  1861  03C1  2BCA               	goto	l3241
  1862                           
  1863                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  1864  03C2  30FF               	movlw	255
  1865  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  1866  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  1867  03C5  07B5               	addwf	sprintf@eexp^(0+128),f
  1868  03C6  1803               	skipnc
  1869  03C7  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1870  03C8  30FF               	movlw	255
  1871  03C9  2BEA               	goto	L1
  1872  03CA                     l3241:	
  1873  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  1874  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  1875  03CC  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  1876  03CD  00F3               	movwf	___flge@ff1+3
  1877  03CE  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  1878  03CF  00F2               	movwf	___flge@ff1+2
  1879  03D0  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  1880  03D1  00F1               	movwf	___flge@ff1+1
  1881  03D2  0837               	movf	sprintf@tmpval^(0+128),w
  1882  03D3  00F0               	movwf	___flge@ff1
  1883  03D4  3041               	movlw	65
  1884  03D5  00F7               	movwf	___flge@ff2+3
  1885  03D6  3020               	movlw	32
  1886  03D7  00F6               	movwf	___flge@ff2+2
  1887  03D8  3000               	movlw	0
  1888  03D9  00F5               	movwf	___flge@ff2+1
  1889  03DA  3000               	movlw	0
  1890  03DB  00F4               	movwf	___flge@ff2
  1891  03DC  160A  118A  224D  120A  118A  	fcall	___flge
  1892  03E1  1C03               	btfss	3,0
  1893  03E2  2BEB               	goto	l3245
  1894                           
  1895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 870:      e
      +                          exp++;
  1896  03E3  3001               	movlw	1
  1897  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  1898  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  1899  03E6  07B5               	addwf	sprintf@eexp^(0+128),f
  1900  03E7  1803               	skipnc
  1901  03E8  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1902  03E9  3000               	movlw	0
  1903  03EA                     L1:	
  1904  03EA  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  1905  03EB                     l3245:	
  1906                           
  1907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1131:      
      +                          if(prec <= 12)
  1908  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  1909  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  1910  03ED  083D               	movf	(sprintf@prec+1)^(0+128),w
  1911  03EE  3A80               	xorlw	128
  1912  03EF  00FF               	movwf	127
  1913  03F0  3080               	movlw	128
  1914  03F1  027F               	subwf	127,w
  1915  03F2  1D03               	skipz
  1916  03F3  2BF6               	goto	u5475
  1917  03F4  300D               	movlw	13
  1918  03F5  023C               	subwf	sprintf@prec^(0+128),w
  1919  03F6                     u5475:	
  1920  03F6  1803               	skipnc
  1921  03F7  2C3F               	goto	l3249
  1922                           
  1923                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1132:      
      +                           fval += fround((unsigned int)prec);
  1924  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  1925  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  1926  03FA  083C               	movf	sprintf@prec^(0+128),w
  1927  03FB  120A  118A  2004  120A  118A  	fcall	_fround
  1928  0400  1283               	bcf	3,5	;RP0=0, select bank0
  1929  0401  1303               	bcf	3,6	;RP1=0, select bank0
  1930  0402  0843               	movf	?_fround+3,w
  1931  0403  00D7               	movwf	___fladd@b+3
  1932  0404  0842               	movf	?_fround+2,w
  1933  0405  00D6               	movwf	___fladd@b+2
  1934  0406  0841               	movf	?_fround+1,w
  1935  0407  00D5               	movwf	___fladd@b+1
  1936  0408  0840               	movf	?_fround,w
  1937  0409  00D4               	movwf	___fladd@b
  1938  040A  1683               	bsf	3,5	;RP0=1, select bank1
  1939  040B  1303               	bcf	3,6	;RP1=0, select bank1
  1940  040C  0841               	movf	(sprintf@fval+3)^(0+128),w
  1941  040D  1283               	bcf	3,5	;RP0=0, select bank0
  1942  040E  1303               	bcf	3,6	;RP1=0, select bank0
  1943  040F  00DB               	movwf	___fladd@a+3
  1944  0410  1683               	bsf	3,5	;RP0=1, select bank1
  1945  0411  1303               	bcf	3,6	;RP1=0, select bank1
  1946  0412  0840               	movf	(sprintf@fval+2)^(0+128),w
  1947  0413  1283               	bcf	3,5	;RP0=0, select bank0
  1948  0414  1303               	bcf	3,6	;RP1=0, select bank0
  1949  0415  00DA               	movwf	___fladd@a+2
  1950  0416  1683               	bsf	3,5	;RP0=1, select bank1
  1951  0417  1303               	bcf	3,6	;RP1=0, select bank1
  1952  0418  083F               	movf	(sprintf@fval+1)^(0+128),w
  1953  0419  1283               	bcf	3,5	;RP0=0, select bank0
  1954  041A  1303               	bcf	3,6	;RP1=0, select bank0
  1955  041B  00D9               	movwf	___fladd@a+1
  1956  041C  1683               	bsf	3,5	;RP0=1, select bank1
  1957  041D  1303               	bcf	3,6	;RP1=0, select bank1
  1958  041E  083E               	movf	sprintf@fval^(0+128),w
  1959  041F  1283               	bcf	3,5	;RP0=0, select bank0
  1960  0420  1303               	bcf	3,6	;RP1=0, select bank0
  1961  0421  00D8               	movwf	___fladd@a
  1962  0422  160A  118A  25D1  120A  118A  	fcall	___fladd
  1963  0427  1283               	bcf	3,5	;RP0=0, select bank0
  1964  0428  1303               	bcf	3,6	;RP1=0, select bank0
  1965  0429  0857               	movf	?___fladd+3,w
  1966  042A  1683               	bsf	3,5	;RP0=1, select bank1
  1967  042B  1303               	bcf	3,6	;RP1=0, select bank1
  1968  042C  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1969  042D  1283               	bcf	3,5	;RP0=0, select bank0
  1970  042E  1303               	bcf	3,6	;RP1=0, select bank0
  1971  042F  0856               	movf	?___fladd+2,w
  1972  0430  1683               	bsf	3,5	;RP0=1, select bank1
  1973  0431  1303               	bcf	3,6	;RP1=0, select bank1
  1974  0432  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1975  0433  1283               	bcf	3,5	;RP0=0, select bank0
  1976  0434  1303               	bcf	3,6	;RP1=0, select bank0
  1977  0435  0855               	movf	?___fladd+1,w
  1978  0436  1683               	bsf	3,5	;RP0=1, select bank1
  1979  0437  1303               	bcf	3,6	;RP1=0, select bank1
  1980  0438  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1981  0439  1283               	bcf	3,5	;RP0=0, select bank0
  1982  043A  1303               	bcf	3,6	;RP1=0, select bank0
  1983  043B  0854               	movf	?___fladd,w
  1984  043C  1683               	bsf	3,5	;RP0=1, select bank1
  1985  043D  1303               	bcf	3,6	;RP1=0, select bank1
  1986  043E  00BE               	movwf	sprintf@fval^(0+128)
  1987  043F                     l3249:	
  1988                           
  1989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1135:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  1990  043F  1683               	bsf	3,5	;RP0=1, select bank1
  1991  0440  1303               	bcf	3,6	;RP1=0, select bank1
  1992  0441  0836               	movf	(sprintf@eexp+1)^(0+128),w
  1993  0442  3A80               	xorlw	128
  1994  0443  00FF               	movwf	127
  1995  0444  3080               	movlw	128
  1996  0445  027F               	subwf	127,w
  1997  0446  1D03               	skipz
  1998  0447  2C4A               	goto	u5485
  1999  0448  300A               	movlw	10
  2000  0449  0235               	subwf	sprintf@eexp^(0+128),w
  2001  044A                     u5485:	
  2002  044A  1803               	skipnc
  2003  044B  2C97               	goto	l3257
  2004  044C  1683               	bsf	3,5	;RP0=1, select bank1
  2005  044D  1303               	bcf	3,6	;RP1=0, select bank1
  2006  044E  0841               	movf	(sprintf@fval+3)^(0+128),w
  2007  044F  00F3               	movwf	___fleq@ff1+3
  2008  0450  0840               	movf	(sprintf@fval+2)^(0+128),w
  2009  0451  00F2               	movwf	___fleq@ff1+2
  2010  0452  083F               	movf	(sprintf@fval+1)^(0+128),w
  2011  0453  00F1               	movwf	___fleq@ff1+1
  2012  0454  083E               	movf	sprintf@fval^(0+128),w
  2013  0455  00F0               	movwf	___fleq@ff1
  2014  0456  3000               	movlw	0
  2015  0457  00F7               	movwf	___fleq@ff2+3
  2016  0458  3000               	movlw	0
  2017  0459  00F6               	movwf	___fleq@ff2+2
  2018  045A  3000               	movlw	0
  2019  045B  00F5               	movwf	___fleq@ff2+1
  2020  045C  3000               	movlw	0
  2021  045D  00F4               	movwf	___fleq@ff2
  2022  045E  160A  158A  2721  120A  118A  	fcall	___fleq
  2023  0463  1803               	btfsc	3,0
  2024  0464  2D00               	goto	l3271
  2025  0465  1683               	bsf	3,5	;RP0=1, select bank1
  2026  0466  1303               	bcf	3,6	;RP1=0, select bank1
  2027  0467  0841               	movf	(sprintf@fval+3)^(0+128),w
  2028  0468  1283               	bcf	3,5	;RP0=0, select bank0
  2029  0469  1303               	bcf	3,6	;RP1=0, select bank0
  2030  046A  00D6               	movwf	___fltol@f1+3
  2031  046B  1683               	bsf	3,5	;RP0=1, select bank1
  2032  046C  1303               	bcf	3,6	;RP1=0, select bank1
  2033  046D  0840               	movf	(sprintf@fval+2)^(0+128),w
  2034  046E  1283               	bcf	3,5	;RP0=0, select bank0
  2035  046F  1303               	bcf	3,6	;RP1=0, select bank0
  2036  0470  00D5               	movwf	___fltol@f1+2
  2037  0471  1683               	bsf	3,5	;RP0=1, select bank1
  2038  0472  1303               	bcf	3,6	;RP1=0, select bank1
  2039  0473  083F               	movf	(sprintf@fval+1)^(0+128),w
  2040  0474  1283               	bcf	3,5	;RP0=0, select bank0
  2041  0475  1303               	bcf	3,6	;RP1=0, select bank0
  2042  0476  00D4               	movwf	___fltol@f1+1
  2043  0477  1683               	bsf	3,5	;RP0=1, select bank1
  2044  0478  1303               	bcf	3,6	;RP1=0, select bank1
  2045  0479  083E               	movf	sprintf@fval^(0+128),w
  2046  047A  1283               	bcf	3,5	;RP0=0, select bank0
  2047  047B  1303               	bcf	3,6	;RP1=0, select bank0
  2048  047C  00D3               	movwf	___fltol@f1
  2049  047D  160A  118A  21E0  120A  118A  	fcall	___fltol
  2050  0482  1283               	bcf	3,5	;RP0=0, select bank0
  2051  0483  1303               	bcf	3,6	;RP1=0, select bank0
  2052  0484  0856               	movf	?___fltol+3,w
  2053  0485  0455               	iorwf	?___fltol+2,w
  2054  0486  0454               	iorwf	?___fltol+1,w
  2055  0487  0453               	iorwf	?___fltol,w
  2056  0488  1D03               	skipz
  2057  0489  2D00               	goto	l3271
  2058  048A  1683               	bsf	3,5	;RP0=1, select bank1
  2059  048B  1303               	bcf	3,6	;RP1=0, select bank1
  2060  048C  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2061  048D  3A80               	xorlw	128
  2062  048E  00FF               	movwf	127
  2063  048F  3080               	movlw	128
  2064  0490  027F               	subwf	127,w
  2065  0491  1D03               	skipz
  2066  0492  2C95               	goto	u5515
  2067  0493  3002               	movlw	2
  2068  0494  0235               	subwf	sprintf@eexp^(0+128),w
  2069  0495                     u5515:	
  2070  0495  1C03               	skipc
  2071  0496  2D00               	goto	l3271
  2072  0497                     l3257:	
  2073                           
  2074                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1139:      
      +                          if(tmpval.integ < 4.294967296){
  2075  0497  1683               	bsf	3,5	;RP0=1, select bank1
  2076  0498  1303               	bcf	3,6	;RP1=0, select bank1
  2077  0499  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2078  049A  00F3               	movwf	___flge@ff1+3
  2079  049B  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2080  049C  00F2               	movwf	___flge@ff1+2
  2081  049D  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2082  049E  00F1               	movwf	___flge@ff1+1
  2083  049F  0837               	movf	sprintf@tmpval^(0+128),w
  2084  04A0  00F0               	movwf	___flge@ff1
  2085  04A1  3040               	movlw	64
  2086  04A2  00F7               	movwf	___flge@ff2+3
  2087  04A3  3089               	movlw	137
  2088  04A4  00F6               	movwf	___flge@ff2+2
  2089  04A5  3070               	movlw	112
  2090  04A6  00F5               	movwf	___flge@ff2+1
  2091  04A7  305F               	movlw	95
  2092  04A8  00F4               	movwf	___flge@ff2
  2093  04A9  160A  118A  224D  120A  118A  	fcall	___flge
  2094  04AE  1803               	btfsc	3,0
  2095  04AF  2CB2               	goto	l3261
  2096                           
  2097                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1140:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2098  04B0  30F7               	movlw	247
  2099  04B1  2CB3               	goto	L2
  2100  04B2                     l3261:	
  2101                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1141:      
      +                          }else{
  2102                           
  2103                           
  2104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1142:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2105  04B2  30F8               	movlw	248
  2106  04B3                     L2:	
  2107  04B3  1683               	bsf	3,5	;RP0=1, select bank1
  2108  04B4  1303               	bcf	3,6	;RP1=0, select bank1
  2109  04B5  07B5               	addwf	sprintf@eexp^(0+128),f
  2110  04B6  1803               	skipnc
  2111  04B7  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2112  04B8  30FF               	movlw	255
  2113  04B9  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2114                           
  2115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1145:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  2116  04BA  0835               	movf	sprintf@eexp^(0+128),w
  2117  04BB  120A  158A  24B7  120A  118A  	fcall	_scale
  2118  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2119  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  2120  04C2  0843               	movf	?_scale+3,w
  2121  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  2122  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  2123  04C5  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2124  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2125  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  2126  04C8  0842               	movf	?_scale+2,w
  2127  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  2128  04CA  1303               	bcf	3,6	;RP1=0, select bank1
  2129  04CB  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2130  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  2131  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  2132  04CE  0841               	movf	?_scale+1,w
  2133  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  2134  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  2135  04D1  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2136  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  2137  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  2138  04D4  0840               	movf	?_scale,w
  2139  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  2140  04D6  1303               	bcf	3,6	;RP1=0, select bank1
  2141  04D7  00B7               	movwf	sprintf@tmpval^(0+128)
  2142  04D8  0841               	movf	(sprintf@fval+3)^(0+128),w
  2143  04D9  00F3               	movwf	__div_to_l_@f1+3
  2144  04DA  0840               	movf	(sprintf@fval+2)^(0+128),w
  2145  04DB  00F2               	movwf	__div_to_l_@f1+2
  2146  04DC  083F               	movf	(sprintf@fval+1)^(0+128),w
  2147  04DD  00F1               	movwf	__div_to_l_@f1+1
  2148  04DE  083E               	movf	sprintf@fval^(0+128),w
  2149  04DF  00F0               	movwf	__div_to_l_@f1
  2150  04E0  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2151  04E1  00F7               	movwf	__div_to_l_@f2+3
  2152  04E2  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2153  04E3  00F6               	movwf	__div_to_l_@f2+2
  2154  04E4  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2155  04E5  00F5               	movwf	__div_to_l_@f2+1
  2156  04E6  0837               	movf	sprintf@tmpval^(0+128),w
  2157  04E7  00F4               	movwf	__div_to_l_@f2
  2158  04E8  120A  158A  200F  120A  118A  	fcall	__div_to_l_
  2159  04ED  0873               	movf	?__div_to_l_+3,w
  2160  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  2161  04EF  1303               	bcf	3,6	;RP1=0, select bank1
  2162  04F0  00B4               	movwf	(sprintf@val+3)^(0+128)
  2163  04F1  0872               	movf	?__div_to_l_+2,w
  2164  04F2  00B3               	movwf	(sprintf@val+2)^(0+128)
  2165  04F3  0871               	movf	?__div_to_l_+1,w
  2166  04F4  00B2               	movwf	(sprintf@val+1)^(0+128)
  2167  04F5  0870               	movf	?__div_to_l_,w
  2168  04F6  00B1               	movwf	sprintf@val^(0+128)
  2169                           
  2170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1148:      
      +                          fval = 0.0;
  2171  04F7  3000               	movlw	0
  2172  04F8  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2173  04F9  3000               	movlw	0
  2174  04FA  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2175  04FB  3000               	movlw	0
  2176  04FC  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2177  04FD  3000               	movlw	0
  2178  04FE  00BE               	movwf	sprintf@fval^(0+128)
  2179                           
  2180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1149:     }
      +                           else {
  2181  04FF  2D84               	goto	l3277
  2182  0500                     l3271:	
  2183                           
  2184                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1150:      
      +                          val = (unsigned long)fval;
  2185  0500  1683               	bsf	3,5	;RP0=1, select bank1
  2186  0501  1303               	bcf	3,6	;RP1=0, select bank1
  2187  0502  0841               	movf	(sprintf@fval+3)^(0+128),w
  2188  0503  1283               	bcf	3,5	;RP0=0, select bank0
  2189  0504  1303               	bcf	3,6	;RP1=0, select bank0
  2190  0505  00D6               	movwf	___fltol@f1+3
  2191  0506  1683               	bsf	3,5	;RP0=1, select bank1
  2192  0507  1303               	bcf	3,6	;RP1=0, select bank1
  2193  0508  0840               	movf	(sprintf@fval+2)^(0+128),w
  2194  0509  1283               	bcf	3,5	;RP0=0, select bank0
  2195  050A  1303               	bcf	3,6	;RP1=0, select bank0
  2196  050B  00D5               	movwf	___fltol@f1+2
  2197  050C  1683               	bsf	3,5	;RP0=1, select bank1
  2198  050D  1303               	bcf	3,6	;RP1=0, select bank1
  2199  050E  083F               	movf	(sprintf@fval+1)^(0+128),w
  2200  050F  1283               	bcf	3,5	;RP0=0, select bank0
  2201  0510  1303               	bcf	3,6	;RP1=0, select bank0
  2202  0511  00D4               	movwf	___fltol@f1+1
  2203  0512  1683               	bsf	3,5	;RP0=1, select bank1
  2204  0513  1303               	bcf	3,6	;RP1=0, select bank1
  2205  0514  083E               	movf	sprintf@fval^(0+128),w
  2206  0515  1283               	bcf	3,5	;RP0=0, select bank0
  2207  0516  1303               	bcf	3,6	;RP1=0, select bank0
  2208  0517  00D3               	movwf	___fltol@f1
  2209  0518  160A  118A  21E0  120A  118A  	fcall	___fltol
  2210  051D  1283               	bcf	3,5	;RP0=0, select bank0
  2211  051E  1303               	bcf	3,6	;RP1=0, select bank0
  2212  051F  0856               	movf	?___fltol+3,w
  2213  0520  1683               	bsf	3,5	;RP0=1, select bank1
  2214  0521  1303               	bcf	3,6	;RP1=0, select bank1
  2215  0522  00B4               	movwf	(sprintf@val+3)^(0+128)
  2216  0523  1283               	bcf	3,5	;RP0=0, select bank0
  2217  0524  1303               	bcf	3,6	;RP1=0, select bank0
  2218  0525  0855               	movf	?___fltol+2,w
  2219  0526  1683               	bsf	3,5	;RP0=1, select bank1
  2220  0527  1303               	bcf	3,6	;RP1=0, select bank1
  2221  0528  00B3               	movwf	(sprintf@val+2)^(0+128)
  2222  0529  1283               	bcf	3,5	;RP0=0, select bank0
  2223  052A  1303               	bcf	3,6	;RP1=0, select bank0
  2224  052B  0854               	movf	?___fltol+1,w
  2225  052C  1683               	bsf	3,5	;RP0=1, select bank1
  2226  052D  1303               	bcf	3,6	;RP1=0, select bank1
  2227  052E  00B2               	movwf	(sprintf@val+1)^(0+128)
  2228  052F  1283               	bcf	3,5	;RP0=0, select bank0
  2229  0530  1303               	bcf	3,6	;RP1=0, select bank0
  2230  0531  0853               	movf	?___fltol,w
  2231  0532  1683               	bsf	3,5	;RP0=1, select bank1
  2232  0533  1303               	bcf	3,6	;RP1=0, select bank1
  2233  0534  00B1               	movwf	sprintf@val^(0+128)
  2234                           
  2235                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1151:      
      +                          fval -= (double)val;
  2236  0535  0834               	movf	(sprintf@val+3)^(0+128),w
  2237  0536  00F7               	movwf	___xxtofl@val+3
  2238  0537  0833               	movf	(sprintf@val+2)^(0+128),w
  2239  0538  00F6               	movwf	___xxtofl@val+2
  2240  0539  0832               	movf	(sprintf@val+1)^(0+128),w
  2241  053A  00F5               	movwf	___xxtofl@val+1
  2242  053B  0831               	movf	sprintf@val^(0+128),w
  2243  053C  00F4               	movwf	___xxtofl@val
  2244  053D  3000               	movlw	0
  2245  053E  160A  118A  22E0  120A  118A  	fcall	___xxtofl
  2246  0543  0877               	movf	?___xxtofl+3,w
  2247  0544  1283               	bcf	3,5	;RP0=0, select bank0
  2248  0545  1303               	bcf	3,6	;RP1=0, select bank0
  2249  0546  00EB               	movwf	___flsub@a+3
  2250  0547  0876               	movf	?___xxtofl+2,w
  2251  0548  00EA               	movwf	___flsub@a+2
  2252  0549  0875               	movf	?___xxtofl+1,w
  2253  054A  00E9               	movwf	___flsub@a+1
  2254  054B  0874               	movf	?___xxtofl,w
  2255  054C  00E8               	movwf	___flsub@a
  2256  054D  1683               	bsf	3,5	;RP0=1, select bank1
  2257  054E  1303               	bcf	3,6	;RP1=0, select bank1
  2258  054F  0841               	movf	(sprintf@fval+3)^(0+128),w
  2259  0550  1283               	bcf	3,5	;RP0=0, select bank0
  2260  0551  1303               	bcf	3,6	;RP1=0, select bank0
  2261  0552  00EF               	movwf	___flsub@b+3
  2262  0553  1683               	bsf	3,5	;RP0=1, select bank1
  2263  0554  1303               	bcf	3,6	;RP1=0, select bank1
  2264  0555  0840               	movf	(sprintf@fval+2)^(0+128),w
  2265  0556  1283               	bcf	3,5	;RP0=0, select bank0
  2266  0557  1303               	bcf	3,6	;RP1=0, select bank0
  2267  0558  00EE               	movwf	___flsub@b+2
  2268  0559  1683               	bsf	3,5	;RP0=1, select bank1
  2269  055A  1303               	bcf	3,6	;RP1=0, select bank1
  2270  055B  083F               	movf	(sprintf@fval+1)^(0+128),w
  2271  055C  1283               	bcf	3,5	;RP0=0, select bank0
  2272  055D  1303               	bcf	3,6	;RP1=0, select bank0
  2273  055E  00ED               	movwf	___flsub@b+1
  2274  055F  1683               	bsf	3,5	;RP0=1, select bank1
  2275  0560  1303               	bcf	3,6	;RP1=0, select bank1
  2276  0561  083E               	movf	sprintf@fval^(0+128),w
  2277  0562  1283               	bcf	3,5	;RP0=0, select bank0
  2278  0563  1303               	bcf	3,6	;RP1=0, select bank0
  2279  0564  00EC               	movwf	___flsub@b
  2280  0565  160A  158A  25BF  120A  118A  	fcall	___flsub
  2281  056A  1283               	bcf	3,5	;RP0=0, select bank0
  2282  056B  1303               	bcf	3,6	;RP1=0, select bank0
  2283  056C  086B               	movf	?___flsub+3,w
  2284  056D  1683               	bsf	3,5	;RP0=1, select bank1
  2285  056E  1303               	bcf	3,6	;RP1=0, select bank1
  2286  056F  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2287  0570  1283               	bcf	3,5	;RP0=0, select bank0
  2288  0571  1303               	bcf	3,6	;RP1=0, select bank0
  2289  0572  086A               	movf	?___flsub+2,w
  2290  0573  1683               	bsf	3,5	;RP0=1, select bank1
  2291  0574  1303               	bcf	3,6	;RP1=0, select bank1
  2292  0575  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2293  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2294  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2295  0578  0869               	movf	?___flsub+1,w
  2296  0579  1683               	bsf	3,5	;RP0=1, select bank1
  2297  057A  1303               	bcf	3,6	;RP1=0, select bank1
  2298  057B  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2299  057C  1283               	bcf	3,5	;RP0=0, select bank0
  2300  057D  1303               	bcf	3,6	;RP1=0, select bank0
  2301  057E  0868               	movf	?___flsub,w
  2302  057F  1683               	bsf	3,5	;RP0=1, select bank1
  2303  0580  1303               	bcf	3,6	;RP1=0, select bank1
  2304  0581  00BE               	movwf	sprintf@fval^(0+128)
  2305                           
  2306                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1152:      
      +                          eexp = 0;
  2307  0582  01B5               	clrf	sprintf@eexp^(0+128)
  2308  0583  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2309  0584                     l3277:	
  2310                           
  2311                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1155:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2312  0584  01C2               	clrf	sprintf@c^(0+128)
  2313  0585  0AC2               	incf	sprintf@c^(0+128),f
  2314  0586                     l3283:	
  2315                           
  2316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1156:      
      +                          if(val < dpowers[c])
  2317  0586  0842               	movf	sprintf@c^(0+128),w
  2318  0587  00A5               	movwf	??_sprintf^(0+128)
  2319  0588  3001               	movlw	1
  2320  0589                     u5535:	
  2321  0589  1003               	clrc
  2322  058A  0DA5               	rlf	??_sprintf^(0+128),f
  2323  058B  3EFF               	addlw	-1
  2324  058C  1D03               	skipz
  2325  058D  2D89               	goto	u5535
  2326  058E  1003               	clrc
  2327  058F  0D25               	rlf	??_sprintf^(0+128),w
  2328  0590  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2329  0591  0084               	movwf	4
  2330  0592  160A  118A  200A  120A  118A  	fcall	stringdir
  2331  0597  00A6               	movwf	(??_sprintf+1)^(0+128)
  2332  0598  160A  118A  200A  120A  118A  	fcall	stringdir
  2333  059D  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2334  059E  160A  118A  200A  120A  118A  	fcall	stringdir
  2335  05A3  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2336  05A4  160A  118A  200A  120A  118A  	fcall	stringdir
  2337  05A9  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2338  05AA  0829               	movf	(??_sprintf+4)^(0+128),w
  2339  05AB  0234               	subwf	(sprintf@val+3)^(0+128),w
  2340  05AC  1D03               	skipz
  2341  05AD  2DB8               	goto	u5545
  2342  05AE  0828               	movf	(??_sprintf+3)^(0+128),w
  2343  05AF  0233               	subwf	(sprintf@val+2)^(0+128),w
  2344  05B0  1D03               	skipz
  2345  05B1  2DB8               	goto	u5545
  2346  05B2  0827               	movf	(??_sprintf+2)^(0+128),w
  2347  05B3  0232               	subwf	(sprintf@val+1)^(0+128),w
  2348  05B4  1D03               	skipz
  2349  05B5  2DB8               	goto	u5545
  2350  05B6  0826               	movf	(??_sprintf+1)^(0+128),w
  2351  05B7  0231               	subwf	sprintf@val^(0+128),w
  2352  05B8                     u5545:	
  2353  05B8  1C03               	btfss	3,0
  2354  05B9  2DC2               	goto	l3289
  2355  05BA  3001               	movlw	1
  2356  05BB  00A5               	movwf	??_sprintf^(0+128)
  2357  05BC  0825               	movf	??_sprintf^(0+128),w
  2358  05BD  07C2               	addwf	sprintf@c^(0+128),f
  2359  05BE  300A               	movlw	10
  2360  05BF  0642               	xorwf	sprintf@c^(0+128),w
  2361  05C0  1D03               	btfss	3,2
  2362  05C1  2D86               	goto	l3283
  2363  05C2                     l3289:	
  2364                           
  2365                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1194:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1207:     i
      +                          f(flag & 0x03)
  2366  05C2  3003               	movlw	3
  2367  05C3  052F               	andwf	sprintf@flag^(0+128),w
  2368  05C4  00A5               	movwf	??_sprintf^(0+128)
  2369  05C5  3000               	movlw	0
  2370  05C6  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2371  05C7  00A6               	movwf	(??_sprintf+1)^(0+128)
  2372  05C8  0825               	movf	??_sprintf^(0+128),w
  2373  05C9  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2374  05CA  1903               	btfsc	3,2
  2375  05CB  2DD7               	goto	l239
  2376                           
  2377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1209:      
      +                          ((*sp++ = ('-')));
  2378  05CC  302D               	movlw	45
  2379  05CD                     L3:	
  2380  05CD  00A5               	movwf	??_sprintf^(0+128)
  2381  05CE  083B               	movf	sprintf@sp^(0+128),w
  2382  05CF  0084               	movwf	4
  2383  05D0  0825               	movf	??_sprintf^(0+128),w
  2384  05D1  1383               	bcf	3,7	;select IRP bank0
  2385  05D2  0080               	movwf	0
  2386  05D3  3001               	movlw	1
  2387  05D4  00A5               	movwf	??_sprintf^(0+128)
  2388  05D5  0825               	movf	??_sprintf^(0+128),w
  2389  05D6  07BB               	addwf	sprintf@sp^(0+128),f
  2390  05D7                     l239:	
  2391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1223:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1225:    }
  2392                           
  2393                           
  2394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1215:    wh
      +                          ile(c--) {
  2395  05D7  3001               	movlw	1
  2396  05D8  02C2               	subwf	sprintf@c^(0+128),f
  2397  05D9  0A42               	incf	sprintf@c^(0+128),w
  2398  05DA  1903               	btfsc	3,2
  2399  05DB  2E4C               	goto	l3307
  2400                           
  2401                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1219:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1220:      
      +                          tmpval.vd = val/dpowers[c];
  2402  05DC  0842               	movf	sprintf@c^(0+128),w
  2403  05DD  00A5               	movwf	??_sprintf^(0+128)
  2404  05DE  3001               	movlw	1
  2405  05DF                     u5575:	
  2406  05DF  1003               	clrc
  2407  05E0  0DA5               	rlf	??_sprintf^(0+128),f
  2408  05E1  3EFF               	addlw	-1
  2409  05E2  1D03               	skipz
  2410  05E3  2DDF               	goto	u5575
  2411  05E4  1003               	clrc
  2412  05E5  0D25               	rlf	??_sprintf^(0+128),w
  2413  05E6  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2414  05E7  0084               	movwf	4
  2415  05E8  160A  118A  200A  120A  118A  	fcall	stringdir
  2416  05ED  00F0               	movwf	___lldiv@divisor
  2417  05EE  160A  118A  200A  120A  118A  	fcall	stringdir
  2418  05F3  00F1               	movwf	___lldiv@divisor+1
  2419  05F4  160A  118A  200A  120A  118A  	fcall	stringdir
  2420  05F9  00F2               	movwf	___lldiv@divisor+2
  2421  05FA  160A  118A  200A  120A  118A  	fcall	stringdir
  2422  05FF  00F3               	movwf	___lldiv@divisor+3
  2423  0600  0834               	movf	(sprintf@val+3)^(0+128),w
  2424  0601  00F7               	movwf	___lldiv@dividend+3
  2425  0602  0833               	movf	(sprintf@val+2)^(0+128),w
  2426  0603  00F6               	movwf	___lldiv@dividend+2
  2427  0604  0832               	movf	(sprintf@val+1)^(0+128),w
  2428  0605  00F5               	movwf	___lldiv@dividend+1
  2429  0606  0831               	movf	sprintf@val^(0+128),w
  2430  0607  00F4               	movwf	___lldiv@dividend
  2431  0608  160A  118A  2121  120A  118A  	fcall	___lldiv
  2432  060D  0873               	movf	?___lldiv+3,w
  2433  060E  1683               	bsf	3,5	;RP0=1, select bank1
  2434  060F  1303               	bcf	3,6	;RP1=0, select bank1
  2435  0610  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2436  0611  0872               	movf	?___lldiv+2,w
  2437  0612  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2438  0613  0871               	movf	?___lldiv+1,w
  2439  0614  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2440  0615  0870               	movf	?___lldiv,w
  2441  0616  00B7               	movwf	sprintf@tmpval^(0+128)
  2442                           
  2443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1221:      
      +                          tmpval.vd %= 10;
  2444  0617  3000               	movlw	0
  2445  0618  00F3               	movwf	___llmod@divisor+3
  2446  0619  3000               	movlw	0
  2447  061A  00F2               	movwf	___llmod@divisor+2
  2448  061B  3000               	movlw	0
  2449  061C  00F1               	movwf	___llmod@divisor+1
  2450  061D  300A               	movlw	10
  2451  061E  00F0               	movwf	___llmod@divisor
  2452  061F  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2453  0620  00F7               	movwf	___llmod@dividend+3
  2454  0621  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2455  0622  00F6               	movwf	___llmod@dividend+2
  2456  0623  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2457  0624  00F5               	movwf	___llmod@dividend+1
  2458  0625  0837               	movf	sprintf@tmpval^(0+128),w
  2459  0626  00F4               	movwf	___llmod@dividend
  2460  0627  160A  158A  27B4  120A  118A  	fcall	___llmod
  2461  062C  0873               	movf	?___llmod+3,w
  2462  062D  1683               	bsf	3,5	;RP0=1, select bank1
  2463  062E  1303               	bcf	3,6	;RP1=0, select bank1
  2464  062F  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2465  0630  0872               	movf	?___llmod+2,w
  2466  0631  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2467  0632  0871               	movf	?___llmod+1,w
  2468  0633  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2469  0634  0870               	movf	?___llmod,w
  2470  0635  00B7               	movwf	sprintf@tmpval^(0+128)
  2471                           
  2472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1222:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
  2473  0636  0837               	movf	sprintf@tmpval^(0+128),w
  2474  0637  3E30               	addlw	48
  2475  0638  2DCD               	goto	L3
  2476  0639                     l3301:	
  2477                           
  2478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1227:     (
      +                          (*sp++ = ('0')));
  2479  0639  3030               	movlw	48
  2480  063A  1683               	bsf	3,5	;RP0=1, select bank1
  2481  063B  1303               	bcf	3,6	;RP1=0, select bank1
  2482  063C  00A5               	movwf	??_sprintf^(0+128)
  2483  063D  083B               	movf	sprintf@sp^(0+128),w
  2484  063E  0084               	movwf	4
  2485  063F  0825               	movf	??_sprintf^(0+128),w
  2486  0640  1383               	bcf	3,7	;select IRP bank0
  2487  0641  0080               	movwf	0
  2488  0642  3001               	movlw	1
  2489  0643  00A5               	movwf	??_sprintf^(0+128)
  2490  0644  0825               	movf	??_sprintf^(0+128),w
  2491  0645  07BB               	addwf	sprintf@sp^(0+128),f
  2492                           
  2493                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1228:     e
      +                          exp--;
  2494  0646  30FF               	movlw	255
  2495  0647  07B5               	addwf	sprintf@eexp^(0+128),f
  2496  0648  1803               	skipnc
  2497  0649  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2498  064A  30FF               	movlw	255
  2499  064B  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2500  064C                     l3307:	
  2501                           
  2502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1226:    wh
      +                          ile(eexp > 0) {
  2503  064C  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2504  064D  3A80               	xorlw	128
  2505  064E  00FF               	movwf	127
  2506  064F  3080               	movlw	128
  2507  0650  027F               	subwf	127,w
  2508  0651  1D03               	skipz
  2509  0652  2E55               	goto	u5595
  2510  0653  3001               	movlw	1
  2511  0654  0235               	subwf	sprintf@eexp^(0+128),w
  2512  0655                     u5595:	
  2513  0655  1803               	skipnc
  2514  0656  2E39               	goto	l3301
  2515                           
  2516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1230:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2517  0657  1683               	bsf	3,5	;RP0=1, select bank1
  2518  0658  1303               	bcf	3,6	;RP1=0, select bank1
  2519  0659  083D               	movf	(sprintf@prec+1)^(0+128),w
  2520  065A  3A80               	xorlw	128
  2521  065B  00FF               	movwf	127
  2522  065C  3080               	movlw	128
  2523  065D  027F               	subwf	127,w
  2524  065E  1D03               	skipz
  2525  065F  2E62               	goto	u5605
  2526  0660  3009               	movlw	9
  2527  0661  023C               	subwf	sprintf@prec^(0+128),w
  2528  0662                     u5605:	
  2529  0662  1C03               	skipc
  2530  0663  2E68               	goto	l3313
  2531                           
  2532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1231:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
  2533  0664  3008               	movlw	8
  2534  0665  1683               	bsf	3,5	;RP0=1, select bank1
  2535  0666  1303               	bcf	3,6	;RP1=0, select bank1
  2536  0667  2E6B               	goto	L4
  2537  0668                     l3313:	
  2538                           
  2539                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1233:     c
      +                           = (char)prec;
  2540  0668  1683               	bsf	3,5	;RP0=1, select bank1
  2541  0669  1303               	bcf	3,6	;RP1=0, select bank1
  2542  066A  083C               	movf	sprintf@prec^(0+128),w
  2543  066B                     L4:	
  2544  066B  00A5               	movwf	??_sprintf^(0+128)
  2545  066C  0825               	movf	??_sprintf^(0+128),w
  2546  066D  00C2               	movwf	sprintf@c^(0+128)
  2547                           
  2548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1234:    pr
      +                          ec -= (int)c;
  2549  066E  0842               	movf	sprintf@c^(0+128),w
  2550  066F  00A5               	movwf	??_sprintf^(0+128)
  2551  0670  01A6               	clrf	(??_sprintf^(0+128)+1)
  2552  0671  0825               	movf	??_sprintf^(0+128),w
  2553  0672  02BC               	subwf	sprintf@prec^(0+128),f
  2554  0673  0826               	movf	(??_sprintf+1)^(0+128),w
  2555  0674  1C03               	skipc
  2556  0675  03BD               	decf	(sprintf@prec+1)^(0+128),f
  2557  0676  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  2558                           
  2559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1238:    if
      +                          (c)
  2560  0677  0842               	movf	sprintf@c^(0+128),w
  2561  0678  1903               	btfsc	3,2
  2562  0679  2E85               	goto	l3321
  2563                           
  2564                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1240:     (
      +                          (*sp++ = ('.')));
  2565  067A  302E               	movlw	46
  2566  067B  00A5               	movwf	??_sprintf^(0+128)
  2567  067C  083B               	movf	sprintf@sp^(0+128),w
  2568  067D  0084               	movwf	4
  2569  067E  0825               	movf	??_sprintf^(0+128),w
  2570  067F  1383               	bcf	3,7	;select IRP bank0
  2571  0680  0080               	movwf	0
  2572  0681  3001               	movlw	1
  2573  0682  00A5               	movwf	??_sprintf^(0+128)
  2574  0683  0825               	movf	??_sprintf^(0+128),w
  2575  0684  07BB               	addwf	sprintf@sp^(0+128),f
  2576  0685                     l3321:	
  2577                           
  2578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2579  0685  0842               	movf	sprintf@c^(0+128),w
  2580  0686  120A  158A  24B7  120A  118A  	fcall	_scale
  2581  068B  1283               	bcf	3,5	;RP0=0, select bank0
  2582  068C  1303               	bcf	3,6	;RP1=0, select bank0
  2583  068D  0843               	movf	?_scale+3,w
  2584  068E  1683               	bsf	3,5	;RP0=1, select bank1
  2585  068F  1303               	bcf	3,6	;RP1=0, select bank1
  2586  0690  00AD               	movwf	(_sprintf$874+3)^(0+128)
  2587  0691  1283               	bcf	3,5	;RP0=0, select bank0
  2588  0692  1303               	bcf	3,6	;RP1=0, select bank0
  2589  0693  0842               	movf	?_scale+2,w
  2590  0694  1683               	bsf	3,5	;RP0=1, select bank1
  2591  0695  1303               	bcf	3,6	;RP1=0, select bank1
  2592  0696  00AC               	movwf	(_sprintf$874+2)^(0+128)
  2593  0697  1283               	bcf	3,5	;RP0=0, select bank0
  2594  0698  1303               	bcf	3,6	;RP1=0, select bank0
  2595  0699  0841               	movf	?_scale+1,w
  2596  069A  1683               	bsf	3,5	;RP0=1, select bank1
  2597  069B  1303               	bcf	3,6	;RP1=0, select bank1
  2598  069C  00AB               	movwf	(_sprintf$874+1)^(0+128)
  2599  069D  1283               	bcf	3,5	;RP0=0, select bank0
  2600  069E  1303               	bcf	3,6	;RP1=0, select bank0
  2601  069F  0840               	movf	?_scale,w
  2602  06A0  1683               	bsf	3,5	;RP0=1, select bank1
  2603  06A1  1303               	bcf	3,6	;RP1=0, select bank1
  2604  06A2  00AA               	movwf	_sprintf$874^(0+128)
  2605                           
  2606                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2607  06A3  082D               	movf	(_sprintf$874+3)^(0+128),w
  2608  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  2609  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  2610  06A6  00AD               	movwf	___flmul@a+3
  2611  06A7  1683               	bsf	3,5	;RP0=1, select bank1
  2612  06A8  1303               	bcf	3,6	;RP1=0, select bank1
  2613  06A9  082C               	movf	(_sprintf$874+2)^(0+128),w
  2614  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  2615  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  2616  06AC  00AC               	movwf	___flmul@a+2
  2617  06AD  1683               	bsf	3,5	;RP0=1, select bank1
  2618  06AE  1303               	bcf	3,6	;RP1=0, select bank1
  2619  06AF  082B               	movf	(_sprintf$874+1)^(0+128),w
  2620  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  2621  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  2622  06B2  00AB               	movwf	___flmul@a+1
  2623  06B3  1683               	bsf	3,5	;RP0=1, select bank1
  2624  06B4  1303               	bcf	3,6	;RP1=0, select bank1
  2625  06B5  082A               	movf	_sprintf$874^(0+128),w
  2626  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  2627  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  2628  06B8  00AA               	movwf	___flmul@a
  2629  06B9  1683               	bsf	3,5	;RP0=1, select bank1
  2630  06BA  1303               	bcf	3,6	;RP1=0, select bank1
  2631  06BB  0841               	movf	(sprintf@fval+3)^(0+128),w
  2632  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  2633  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  2634  06BE  00A9               	movwf	___flmul@b+3
  2635  06BF  1683               	bsf	3,5	;RP0=1, select bank1
  2636  06C0  1303               	bcf	3,6	;RP1=0, select bank1
  2637  06C1  0840               	movf	(sprintf@fval+2)^(0+128),w
  2638  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  2639  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  2640  06C4  00A8               	movwf	___flmul@b+2
  2641  06C5  1683               	bsf	3,5	;RP0=1, select bank1
  2642  06C6  1303               	bcf	3,6	;RP1=0, select bank1
  2643  06C7  083F               	movf	(sprintf@fval+1)^(0+128),w
  2644  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  2645  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  2646  06CA  00A7               	movwf	___flmul@b+1
  2647  06CB  1683               	bsf	3,5	;RP0=1, select bank1
  2648  06CC  1303               	bcf	3,6	;RP1=0, select bank1
  2649  06CD  083E               	movf	sprintf@fval^(0+128),w
  2650  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  2651  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  2652  06D0  00A6               	movwf	___flmul@b
  2653  06D1  120A  158A  21A2  120A  118A  	fcall	___flmul
  2654  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  2655  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  2656  06D8  0829               	movf	?___flmul+3,w
  2657  06D9  00D6               	movwf	___fltol@f1+3
  2658  06DA  0828               	movf	?___flmul+2,w
  2659  06DB  00D5               	movwf	___fltol@f1+2
  2660  06DC  0827               	movf	?___flmul+1,w
  2661  06DD  00D4               	movwf	___fltol@f1+1
  2662  06DE  0826               	movf	?___flmul,w
  2663  06DF  00D3               	movwf	___fltol@f1
  2664  06E0  160A  118A  21E0  120A  118A  	fcall	___fltol
  2665  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  2666  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  2667  06E7  0856               	movf	?___fltol+3,w
  2668  06E8  1683               	bsf	3,5	;RP0=1, select bank1
  2669  06E9  1303               	bcf	3,6	;RP1=0, select bank1
  2670  06EA  00B4               	movwf	(sprintf@val+3)^(0+128)
  2671  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  2672  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  2673  06ED  0855               	movf	?___fltol+2,w
  2674  06EE  1683               	bsf	3,5	;RP0=1, select bank1
  2675  06EF  1303               	bcf	3,6	;RP1=0, select bank1
  2676  06F0  00B3               	movwf	(sprintf@val+2)^(0+128)
  2677  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  2678  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  2679  06F3  0854               	movf	?___fltol+1,w
  2680  06F4  1683               	bsf	3,5	;RP0=1, select bank1
  2681  06F5  1303               	bcf	3,6	;RP1=0, select bank1
  2682  06F6  00B2               	movwf	(sprintf@val+1)^(0+128)
  2683  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  2684  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  2685  06F9  0853               	movf	?___fltol,w
  2686  06FA  1683               	bsf	3,5	;RP0=1, select bank1
  2687  06FB  1303               	bcf	3,6	;RP1=0, select bank1
  2688  06FC                     L5:	
  2689  06FC  00B1               	movwf	sprintf@val^(0+128)
  2690                           
  2691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  2692  06FD  3001               	movlw	1
  2693  06FE  02C2               	subwf	sprintf@c^(0+128),f
  2694  06FF  0A42               	incf	sprintf@c^(0+128),w
  2695  0700  1903               	btfsc	3,2
  2696  0701  2FB4               	goto	l3341
  2697                           
  2698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1248:     t
      +                          mpval.vd = val/dpowers[c];
  2699                           
  2700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  2701  0702  0842               	movf	sprintf@c^(0+128),w
  2702  0703  00A5               	movwf	??_sprintf^(0+128)
  2703  0704  3001               	movlw	1
  2704  0705                     u5625:	
  2705  0705  1003               	clrc
  2706  0706  0DA5               	rlf	??_sprintf^(0+128),f
  2707  0707  3EFF               	addlw	-1
  2708  0708  1D03               	skipz
  2709  0709  2F05               	goto	u5625
  2710  070A  1003               	clrc
  2711  070B  0D25               	rlf	??_sprintf^(0+128),w
  2712  070C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2713  070D  0084               	movwf	4
  2714  070E  160A  118A  200A  120A  118A  	fcall	stringdir
  2715  0713  00F0               	movwf	___lldiv@divisor
  2716  0714  160A  118A  200A  120A  118A  	fcall	stringdir
  2717  0719  00F1               	movwf	___lldiv@divisor+1
  2718  071A  160A  118A  200A  120A  118A  	fcall	stringdir
  2719  071F  00F2               	movwf	___lldiv@divisor+2
  2720  0720  160A  118A  200A  120A  118A  	fcall	stringdir
  2721  0725  00F3               	movwf	___lldiv@divisor+3
  2722  0726  0834               	movf	(sprintf@val+3)^(0+128),w
  2723  0727  00F7               	movwf	___lldiv@dividend+3
  2724  0728  0833               	movf	(sprintf@val+2)^(0+128),w
  2725  0729  00F6               	movwf	___lldiv@dividend+2
  2726  072A  0832               	movf	(sprintf@val+1)^(0+128),w
  2727  072B  00F5               	movwf	___lldiv@dividend+1
  2728  072C  0831               	movf	sprintf@val^(0+128),w
  2729  072D  00F4               	movwf	___lldiv@dividend
  2730  072E  160A  118A  2121  120A  118A  	fcall	___lldiv
  2731  0733  0873               	movf	?___lldiv+3,w
  2732  0734  1683               	bsf	3,5	;RP0=1, select bank1
  2733  0735  1303               	bcf	3,6	;RP1=0, select bank1
  2734  0736  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2735  0737  0872               	movf	?___lldiv+2,w
  2736  0738  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2737  0739  0871               	movf	?___lldiv+1,w
  2738  073A  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2739  073B  0870               	movf	?___lldiv,w
  2740  073C  00B7               	movwf	sprintf@tmpval^(0+128)
  2741                           
  2742                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1249:     t
      +                          mpval.vd %= 10;
  2743  073D  3000               	movlw	0
  2744  073E  00F3               	movwf	___llmod@divisor+3
  2745  073F  3000               	movlw	0
  2746  0740  00F2               	movwf	___llmod@divisor+2
  2747  0741  3000               	movlw	0
  2748  0742  00F1               	movwf	___llmod@divisor+1
  2749  0743  300A               	movlw	10
  2750  0744  00F0               	movwf	___llmod@divisor
  2751  0745  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2752  0746  00F7               	movwf	___llmod@dividend+3
  2753  0747  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2754  0748  00F6               	movwf	___llmod@dividend+2
  2755  0749  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2756  074A  00F5               	movwf	___llmod@dividend+1
  2757  074B  0837               	movf	sprintf@tmpval^(0+128),w
  2758  074C  00F4               	movwf	___llmod@dividend
  2759  074D  160A  158A  27B4  120A  118A  	fcall	___llmod
  2760  0752  0873               	movf	?___llmod+3,w
  2761  0753  1683               	bsf	3,5	;RP0=1, select bank1
  2762  0754  1303               	bcf	3,6	;RP1=0, select bank1
  2763  0755  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2764  0756  0872               	movf	?___llmod+2,w
  2765  0757  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2766  0758  0871               	movf	?___llmod+1,w
  2767  0759  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2768  075A  0870               	movf	?___llmod,w
  2769  075B  00B7               	movwf	sprintf@tmpval^(0+128)
  2770                           
  2771                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1250:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
  2772  075C  0837               	movf	sprintf@tmpval^(0+128),w
  2773  075D  3E30               	addlw	48
  2774  075E  00A5               	movwf	??_sprintf^(0+128)
  2775  075F  083B               	movf	sprintf@sp^(0+128),w
  2776  0760  0084               	movwf	4
  2777  0761  0825               	movf	??_sprintf^(0+128),w
  2778  0762  1383               	bcf	3,7	;select IRP bank0
  2779  0763  0080               	movwf	0
  2780  0764  3001               	movlw	1
  2781  0765  00A5               	movwf	??_sprintf^(0+128)
  2782  0766  0825               	movf	??_sprintf^(0+128),w
  2783  0767  07BB               	addwf	sprintf@sp^(0+128),f
  2784                           
  2785                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1251:     v
      +                          al %= dpowers[c];
  2786  0768  0842               	movf	sprintf@c^(0+128),w
  2787  0769  00A5               	movwf	??_sprintf^(0+128)
  2788  076A  3001               	movlw	1
  2789  076B                     u5635:	
  2790  076B  1003               	clrc
  2791  076C  0DA5               	rlf	??_sprintf^(0+128),f
  2792  076D  3EFF               	addlw	-1
  2793  076E  1D03               	skipz
  2794  076F  2F6B               	goto	u5635
  2795  0770  1003               	clrc
  2796  0771  0D25               	rlf	??_sprintf^(0+128),w
  2797  0772  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2798  0773  0084               	movwf	4
  2799  0774  160A  118A  200A  120A  118A  	fcall	stringdir
  2800  0779  00F0               	movwf	___llmod@divisor
  2801  077A  160A  118A  200A  120A  118A  	fcall	stringdir
  2802  077F  00F1               	movwf	___llmod@divisor+1
  2803  0780  160A  118A  200A  120A  118A  	fcall	stringdir
  2804  0785  00F2               	movwf	___llmod@divisor+2
  2805  0786  160A  118A  200A  120A  118A  	fcall	stringdir
  2806  078B  00F3               	movwf	___llmod@divisor+3
  2807  078C  0834               	movf	(sprintf@val+3)^(0+128),w
  2808  078D  00F7               	movwf	___llmod@dividend+3
  2809  078E  0833               	movf	(sprintf@val+2)^(0+128),w
  2810  078F  00F6               	movwf	___llmod@dividend+2
  2811  0790  0832               	movf	(sprintf@val+1)^(0+128),w
  2812  0791  00F5               	movwf	___llmod@dividend+1
  2813  0792  0831               	movf	sprintf@val^(0+128),w
  2814  0793  00F4               	movwf	___llmod@dividend
  2815  0794  160A  158A  27B4  120A  118A  	fcall	___llmod
  2816  0799  0873               	movf	?___llmod+3,w
  2817  079A  1683               	bsf	3,5	;RP0=1, select bank1
  2818  079B  1303               	bcf	3,6	;RP1=0, select bank1
  2819  079C  00B4               	movwf	(sprintf@val+3)^(0+128)
  2820  079D  0872               	movf	?___llmod+2,w
  2821  079E  00B3               	movwf	(sprintf@val+2)^(0+128)
  2822  079F  0871               	movf	?___llmod+1,w
  2823  07A0  00B2               	movwf	(sprintf@val+1)^(0+128)
  2824  07A1  0870               	movf	?___llmod,w
  2825  07A2  2EFC               	goto	L5
  2826  07A3                     l3335:	
  2827                           
  2828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1255:     (
      +                          (*sp++ = ('0')));
  2829  07A3  3030               	movlw	48
  2830  07A4  00A5               	movwf	??_sprintf^(0+128)
  2831  07A5  083B               	movf	sprintf@sp^(0+128),w
  2832  07A6  0084               	movwf	4
  2833  07A7  0825               	movf	??_sprintf^(0+128),w
  2834  07A8  1383               	bcf	3,7	;select IRP bank0
  2835  07A9  0080               	movwf	0
  2836  07AA  3001               	movlw	1
  2837  07AB  00A5               	movwf	??_sprintf^(0+128)
  2838  07AC  0825               	movf	??_sprintf^(0+128),w
  2839  07AD  07BB               	addwf	sprintf@sp^(0+128),f
  2840                           
  2841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1256:     p
      +                          rec--;
  2842  07AE  30FF               	movlw	255
  2843  07AF  07BC               	addwf	sprintf@prec^(0+128),f
  2844  07B0  1803               	skipnc
  2845  07B1  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  2846  07B2  30FF               	movlw	255
  2847  07B3  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  2848  07B4                     l3341:	
  2849                           
  2850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(prec) {
  2851  07B4  083C               	movf	sprintf@prec^(0+128),w
  2852  07B5  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  2853  07B6  1903               	btfsc	3,2
  2854  07B7  2A0C               	goto	l3361
  2855  07B8  2FA3               	goto	l3335
  2856  07B9                     l3343:	
  2857                           
  2858                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1309:   if(
      +                          prec == 0 && val == 0)
  2859  07B9  083C               	movf	sprintf@prec^(0+128),w
  2860  07BA  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  2861  07BB  1D03               	btfss	3,2
  2862  07BC  2FC9               	goto	l254
  2863  07BD  0834               	movf	(sprintf@val+3)^(0+128),w
  2864  07BE  0433               	iorwf	(sprintf@val+2)^(0+128),w
  2865  07BF  0432               	iorwf	(sprintf@val+1)^(0+128),w
  2866  07C0  0431               	iorwf	sprintf@val^(0+128),w
  2867  07C1  1D03               	skipz
  2868  07C2  2FC9               	goto	l254
  2869                           
  2870                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1310:    pr
      +                          ec++;
  2871  07C3  3001               	movlw	1
  2872  07C4  07BC               	addwf	sprintf@prec^(0+128),f
  2873  07C5  1803               	skipnc
  2874  07C6  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  2875  07C7  3000               	movlw	0
  2876  07C8  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  2877  07C9                     l254:	
  2878                           
  2879                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1358:   if(
      +                          c < prec)
  2880  07C9  083D               	movf	(sprintf@prec+1)^(0+128),w
  2881  07CA  3A80               	xorlw	128
  2882  07CB  3C80               	sublw	128
  2883  07CC  1D03               	skipz
  2884  07CD  2FD0               	goto	u5685
  2885  07CE  083C               	movf	sprintf@prec^(0+128),w
  2886  07CF  0242               	subwf	sprintf@c^(0+128),w
  2887  07D0                     u5685:	
  2888  07D0  1C03               	btfss	3,0
  2889  07D1  2FDF               	goto	l3355
  2890  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  2891  07D3  1303               	bcf	3,6	;RP1=0, select bank1
  2892  07D4  083D               	movf	(sprintf@prec+1)^(0+128),w
  2893  07D5  3A80               	xorlw	128
  2894  07D6  00A5               	movwf	??_sprintf^(0+128)
  2895  07D7  3080               	movlw	128
  2896  07D8  0225               	subwf	??_sprintf^(0+128),w
  2897  07D9  1D03               	skipz
  2898  07DA  2FDD               	goto	u5695
  2899  07DB  0842               	movf	sprintf@c^(0+128),w
  2900  07DC  023C               	subwf	sprintf@prec^(0+128),w
  2901  07DD                     u5695:	
  2902  07DD  1C03               	btfss	3,0
  2903  07DE  2FDF               	goto	l3355
  2904  07DF                     l3355:	
  2905                           
  2906                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  2907  07DF  3003               	movlw	3
  2908  07E0  1683               	bsf	3,5	;RP0=1, select bank1
  2909  07E1  1303               	bcf	3,6	;RP1=0, select bank1
  2910  07E2  052F               	andwf	sprintf@flag^(0+128),w
  2911  07E3  00A5               	movwf	??_sprintf^(0+128)
  2912  07E4  3000               	movlw	0
  2913  07E5  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2914  07E6  00A6               	movwf	(??_sprintf+1)^(0+128)
  2915  07E7  0825               	movf	??_sprintf^(0+128),w
  2916  07E8  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2917  07E9  1903               	btfsc	3,2
  2918  07EA  2A0C               	goto	l3361
  2919                           
  2920                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  2921  07EB  302D               	movlw	45
  2922  07EC                     L6:	
  2923  07EC  00A5               	movwf	??_sprintf^(0+128)
  2924  07ED  083B               	movf	sprintf@sp^(0+128),w
  2925  07EE  0084               	movwf	4
  2926  07EF  0825               	movf	??_sprintf^(0+128),w
  2927  07F0  1383               	bcf	3,7	;select IRP bank0
  2928  07F1  0080               	movwf	0
  2929  07F2  3001               	movlw	1
  2930  07F3  00A5               	movwf	??_sprintf^(0+128)
  2931  07F4  0825               	movf	??_sprintf^(0+128),w
  2932  07F5  07BB               	addwf	sprintf@sp^(0+128),f
  2933  07F6  2A0C               	goto	l3361
  2934  07F7                     l3363:	
  2935                           
  2936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  2937  07F7  083B               	movf	sprintf@sp^(0+128),w
  2938  07F8  0084               	movwf	4
  2939  07F9  1383               	bcf	3,7	;select IRP bank0
  2940  07FA  0180               	clrf	0
  2941  07FB  0008               	return
  2942  07FC                     __end_of_sprintf:	
  2943                           
  2944                           	psect	text2
  2945  0CB7                     __ptext2:	
  2946 ;; *************** function _scale *****************
  2947 ;; Defined at:
  2948 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;  scl             1    wreg     char 
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;  scl             1   50[BANK0 ] char 
  2953 ;; Return value:  Size  Location     Type
  2954 ;;                  4   32[BANK0 ] char 
  2955 ;; Registers used:
  2956 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2957 ;; Tracked objects:
  2958 ;;		On entry : 0/0
  2959 ;;		On exit  : 0/0
  2960 ;;		Unchanged: 0/0
  2961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2962 ;;      Params:         0       4       0       0       0
  2963 ;;      Locals:         0       5       0       0       0
  2964 ;;      Temps:          0      10       0       0       0
  2965 ;;      Totals:         0      19       0       0       0
  2966 ;;Total ram usage:       19 bytes
  2967 ;; Hardware stack levels used:    1
  2968 ;; Hardware stack levels required when called:    2
  2969 ;; This function calls:
  2970 ;;		___awdiv
  2971 ;;		___awmod
  2972 ;;		___flmul
  2973 ;; This function is called by:
  2974 ;;		_sprintf
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           
  2979                           ;psect for function _scale
  2980  0CB7                     _scale:	
  2981                           
  2982                           ;incstack = 0
  2983                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2984                           ;scale@scl stored from wreg
  2985  0CB7  1283               	bcf	3,5	;RP0=0, select bank0
  2986  0CB8  1303               	bcf	3,6	;RP1=0, select bank0
  2987  0CB9  00D2               	movwf	scale@scl
  2988                           
  2989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  2990  0CBA  1FD2               	btfss	scale@scl,7
  2991  0CBB  2E5F               	goto	l2771
  2992                           
  2993                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  2994  0CBC  09D2               	comf	scale@scl,f
  2995  0CBD  0AD2               	incf	scale@scl,f
  2996                           
  2997                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  2998  0CBE  0852               	movf	scale@scl,w
  2999  0CBF  3A80               	xorlw	128
  3000  0CC0  3E12               	addlw	-238
  3001  0CC1  1C03               	skipc
  3002  0CC2  2DA9               	goto	l2761
  3003                           
  3004                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3005  0CC3  300A               	movlw	10
  3006  0CC4  00F7               	movwf	___awdiv@divisor
  3007  0CC5  3000               	movlw	0
  3008  0CC6  00F8               	movwf	___awdiv@divisor+1
  3009  0CC7  0852               	movf	scale@scl,w
  3010  0CC8  00F2               	movwf	___awmod@dividend
  3011  0CC9  01F3               	clrf	___awmod@dividend+1
  3012  0CCA  1BF2               	btfsc	___awmod@dividend,7
  3013  0CCB  03F3               	decf	___awmod@dividend+1,f
  3014  0CCC  3064               	movlw	100
  3015  0CCD  00F0               	movwf	___awmod@divisor
  3016  0CCE  3000               	movlw	0
  3017  0CCF  00F1               	movwf	___awmod@divisor+1
  3018  0CD0  160A  158A  2769  120A  158A  	fcall	___awmod
  3019  0CD5  0871               	movf	?___awmod+1,w
  3020  0CD6  00FA               	movwf	___awdiv@dividend+1
  3021  0CD7  0870               	movf	?___awmod,w
  3022  0CD8  00F9               	movwf	___awdiv@dividend
  3023  0CD9  160A  118A  20C6  120A  158A  	fcall	___awdiv
  3024  0CDE  0877               	movf	?___awdiv,w
  3025  0CDF  1283               	bcf	3,5	;RP0=0, select bank0
  3026  0CE0  1303               	bcf	3,6	;RP1=0, select bank0
  3027  0CE1  00C4               	movwf	??_scale
  3028  0CE2  3001               	movlw	1
  3029  0CE3                     u4345:	
  3030  0CE3  1003               	clrc
  3031  0CE4  0DC4               	rlf	??_scale,f
  3032  0CE5  3EFF               	addlw	-1
  3033  0CE6  1D03               	skipz
  3034  0CE7  2CE3               	goto	u4345
  3035  0CE8  1003               	clrc
  3036  0CE9  0D44               	rlf	??_scale,w
  3037  0CEA  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3038  0CEB  0084               	movwf	4
  3039  0CEC  160A  118A  200A  120A  158A  	fcall	stringdir
  3040  0CF1  00C5               	movwf	??_scale+1
  3041  0CF2  160A  118A  200A  120A  158A  	fcall	stringdir
  3042  0CF7  00C6               	movwf	??_scale+2
  3043  0CF8  160A  118A  200A  120A  158A  	fcall	stringdir
  3044  0CFD  00C7               	movwf	??_scale+3
  3045  0CFE  160A  118A  200A  120A  158A  	fcall	stringdir
  3046  0D03  00C8               	movwf	??_scale+4
  3047  0D04  0848               	movf	??_scale+4,w
  3048  0D05  00A9               	movwf	___flmul@b+3
  3049  0D06  0847               	movf	??_scale+3,w
  3050  0D07  00A8               	movwf	___flmul@b+2
  3051  0D08  0846               	movf	??_scale+2,w
  3052  0D09  00A7               	movwf	___flmul@b+1
  3053  0D0A  0845               	movf	??_scale+1,w
  3054  0D0B  00A6               	movwf	___flmul@b
  3055  0D0C  3064               	movlw	100
  3056  0D0D  00F7               	movwf	___awdiv@divisor
  3057  0D0E  3000               	movlw	0
  3058  0D0F  00F8               	movwf	___awdiv@divisor+1
  3059  0D10  0852               	movf	scale@scl,w
  3060  0D11  00F9               	movwf	___awdiv@dividend
  3061  0D12  01FA               	clrf	___awdiv@dividend+1
  3062  0D13  1BF9               	btfsc	___awdiv@dividend,7
  3063  0D14  03FA               	decf	___awdiv@dividend+1,f
  3064  0D15  160A  118A  20C6  120A  158A  	fcall	___awdiv
  3065  0D1A  0877               	movf	?___awdiv,w
  3066  0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  3067  0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  3068  0D1D  00C9               	movwf	??_scale+5
  3069  0D1E  3001               	movlw	1
  3070  0D1F                     u4355:	
  3071  0D1F  1003               	clrc
  3072  0D20  0DC9               	rlf	??_scale+5,f
  3073  0D21  3EFF               	addlw	-1
  3074  0D22  1D03               	skipz
  3075  0D23  2D1F               	goto	u4355
  3076  0D24  1003               	clrc
  3077  0D25  0D49               	rlf	??_scale+5,w
  3078  0D26  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3079  0D27  0084               	movwf	4
  3080  0D28  160A  118A  200A  120A  158A  	fcall	stringdir
  3081  0D2D  00CA               	movwf	??_scale+6
  3082  0D2E  160A  118A  200A  120A  158A  	fcall	stringdir
  3083  0D33  00CB               	movwf	??_scale+7
  3084  0D34  160A  118A  200A  120A  158A  	fcall	stringdir
  3085  0D39  00CC               	movwf	??_scale+8
  3086  0D3A  160A  118A  200A  120A  158A  	fcall	stringdir
  3087  0D3F  00CD               	movwf	??_scale+9
  3088  0D40  084D               	movf	??_scale+9,w
  3089  0D41  00AD               	movwf	___flmul@a+3
  3090  0D42  084C               	movf	??_scale+8,w
  3091  0D43  00AC               	movwf	___flmul@a+2
  3092  0D44  084B               	movf	??_scale+7,w
  3093  0D45  00AB               	movwf	___flmul@a+1
  3094  0D46  084A               	movf	??_scale+6,w
  3095  0D47  00AA               	movwf	___flmul@a
  3096  0D48  120A  158A  21A2  120A  158A  	fcall	___flmul
  3097  0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  3098  0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  3099  0D4F  0829               	movf	?___flmul+3,w
  3100  0D50  00D1               	movwf	_scale$873+3
  3101  0D51  0828               	movf	?___flmul+2,w
  3102  0D52  00D0               	movwf	_scale$873+2
  3103  0D53  0827               	movf	?___flmul+1,w
  3104  0D54  00CF               	movwf	_scale$873+1
  3105  0D55  0826               	movf	?___flmul,w
  3106  0D56  00CE               	movwf	_scale$873
  3107                           
  3108                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3109  0D57  300A               	movlw	10
  3110  0D58  00F0               	movwf	___awmod@divisor
  3111  0D59  3000               	movlw	0
  3112  0D5A  00F1               	movwf	___awmod@divisor+1
  3113  0D5B  0852               	movf	scale@scl,w
  3114  0D5C  00F2               	movwf	___awmod@dividend
  3115  0D5D  01F3               	clrf	___awmod@dividend+1
  3116  0D5E  1BF2               	btfsc	___awmod@dividend,7
  3117  0D5F  03F3               	decf	___awmod@dividend+1,f
  3118  0D60  160A  158A  2769  120A  158A  	fcall	___awmod
  3119  0D65  0870               	movf	?___awmod,w
  3120  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  3121  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  3122  0D68  00C4               	movwf	??_scale
  3123  0D69  3001               	movlw	1
  3124  0D6A                     u4365:	
  3125  0D6A  1003               	clrc
  3126  0D6B  0DC4               	rlf	??_scale,f
  3127  0D6C  3EFF               	addlw	-1
  3128  0D6D  1D03               	skipz
  3129  0D6E  2D6A               	goto	u4365
  3130  0D6F  1003               	clrc
  3131  0D70  0D44               	rlf	??_scale,w
  3132  0D71  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3133  0D72  0084               	movwf	4
  3134  0D73  160A  118A  200A  120A  158A  	fcall	stringdir
  3135  0D78  00C5               	movwf	??_scale+1
  3136  0D79  160A  118A  200A  120A  158A  	fcall	stringdir
  3137  0D7E  00C6               	movwf	??_scale+2
  3138  0D7F  160A  118A  200A  120A  158A  	fcall	stringdir
  3139  0D84  00C7               	movwf	??_scale+3
  3140  0D85  160A  118A  200A  120A  158A  	fcall	stringdir
  3141  0D8A  00C8               	movwf	??_scale+4
  3142  0D8B  0848               	movf	??_scale+4,w
  3143  0D8C  00A9               	movwf	___flmul@b+3
  3144  0D8D  0847               	movf	??_scale+3,w
  3145  0D8E  00A8               	movwf	___flmul@b+2
  3146  0D8F  0846               	movf	??_scale+2,w
  3147  0D90  00A7               	movwf	___flmul@b+1
  3148  0D91  0845               	movf	??_scale+1,w
  3149  0D92  00A6               	movwf	___flmul@b
  3150  0D93  0851               	movf	_scale$873+3,w
  3151  0D94  00AD               	movwf	___flmul@a+3
  3152  0D95  0850               	movf	_scale$873+2,w
  3153  0D96  00AC               	movwf	___flmul@a+2
  3154  0D97  084F               	movf	_scale$873+1,w
  3155  0D98  00AB               	movwf	___flmul@a+1
  3156  0D99  084E               	movf	_scale$873,w
  3157  0D9A  00AA               	movwf	___flmul@a
  3158  0D9B  120A  158A  21A2   	fcall	___flmul
  3159  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  3160  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  3161  0DA0  0829               	movf	?___flmul+3,w
  3162  0DA1  00C3               	movwf	?_scale+3
  3163  0DA2  0828               	movf	?___flmul+2,w
  3164  0DA3  00C2               	movwf	?_scale+2
  3165  0DA4  0827               	movf	?___flmul+1,w
  3166  0DA5  00C1               	movwf	?_scale+1
  3167  0DA6  0826               	movf	?___flmul,w
  3168  0DA7  00C0               	movwf	?_scale
  3169  0DA8  0008               	return
  3170  0DA9                     l2761:	
  3171  0DA9  0852               	movf	scale@scl,w
  3172  0DAA  3A80               	xorlw	128
  3173  0DAB  3E75               	addlw	-139
  3174  0DAC  1C03               	skipc
  3175  0DAD  2E34               	goto	l2767
  3176                           
  3177                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3178  0DAE  300A               	movlw	10
  3179  0DAF  00F0               	movwf	___awmod@divisor
  3180  0DB0  3000               	movlw	0
  3181  0DB1  00F1               	movwf	___awmod@divisor+1
  3182  0DB2  0852               	movf	scale@scl,w
  3183  0DB3  00F2               	movwf	___awmod@dividend
  3184  0DB4  01F3               	clrf	___awmod@dividend+1
  3185  0DB5  1BF2               	btfsc	___awmod@dividend,7
  3186  0DB6  03F3               	decf	___awmod@dividend+1,f
  3187  0DB7  160A  158A  2769  120A  158A  	fcall	___awmod
  3188  0DBC  0870               	movf	?___awmod,w
  3189  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  3190  0DBE  1303               	bcf	3,6	;RP1=0, select bank0
  3191  0DBF  00C4               	movwf	??_scale
  3192  0DC0  3001               	movlw	1
  3193  0DC1                     u4385:	
  3194  0DC1  1003               	clrc
  3195  0DC2  0DC4               	rlf	??_scale,f
  3196  0DC3  3EFF               	addlw	-1
  3197  0DC4  1D03               	skipz
  3198  0DC5  2DC1               	goto	u4385
  3199  0DC6  1003               	clrc
  3200  0DC7  0D44               	rlf	??_scale,w
  3201  0DC8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3202  0DC9  0084               	movwf	4
  3203  0DCA  160A  118A  200A  120A  158A  	fcall	stringdir
  3204  0DCF  00C5               	movwf	??_scale+1
  3205  0DD0  160A  118A  200A  120A  158A  	fcall	stringdir
  3206  0DD5  00C6               	movwf	??_scale+2
  3207  0DD6  160A  118A  200A  120A  158A  	fcall	stringdir
  3208  0DDB  00C7               	movwf	??_scale+3
  3209  0DDC  160A  118A  200A  120A  158A  	fcall	stringdir
  3210  0DE1  00C8               	movwf	??_scale+4
  3211  0DE2  0848               	movf	??_scale+4,w
  3212  0DE3  00A9               	movwf	___flmul@b+3
  3213  0DE4  0847               	movf	??_scale+3,w
  3214  0DE5  00A8               	movwf	___flmul@b+2
  3215  0DE6  0846               	movf	??_scale+2,w
  3216  0DE7  00A7               	movwf	___flmul@b+1
  3217  0DE8  0845               	movf	??_scale+1,w
  3218  0DE9  00A6               	movwf	___flmul@b
  3219  0DEA  300A               	movlw	10
  3220  0DEB  00F7               	movwf	___awdiv@divisor
  3221  0DEC  3000               	movlw	0
  3222  0DED  00F8               	movwf	___awdiv@divisor+1
  3223  0DEE  0852               	movf	scale@scl,w
  3224  0DEF  00F9               	movwf	___awdiv@dividend
  3225  0DF0  01FA               	clrf	___awdiv@dividend+1
  3226  0DF1  1BF9               	btfsc	___awdiv@dividend,7
  3227  0DF2  03FA               	decf	___awdiv@dividend+1,f
  3228  0DF3  160A  118A  20C6  120A  158A  	fcall	___awdiv
  3229  0DF8  0877               	movf	?___awdiv,w
  3230  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  3231  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  3232  0DFB  00C9               	movwf	??_scale+5
  3233  0DFC  3001               	movlw	1
  3234  0DFD                     u4395:	
  3235  0DFD  1003               	clrc
  3236  0DFE  0DC9               	rlf	??_scale+5,f
  3237  0DFF  3EFF               	addlw	-1
  3238  0E00  1D03               	skipz
  3239  0E01  2DFD               	goto	u4395
  3240  0E02  1003               	clrc
  3241  0E03  0D49               	rlf	??_scale+5,w
  3242  0E04  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3243  0E05  0084               	movwf	4
  3244  0E06  160A  118A  200A  120A  158A  	fcall	stringdir
  3245  0E0B  00CA               	movwf	??_scale+6
  3246  0E0C  160A  118A  200A  120A  158A  	fcall	stringdir
  3247  0E11  00CB               	movwf	??_scale+7
  3248  0E12  160A  118A  200A  120A  158A  	fcall	stringdir
  3249  0E17  00CC               	movwf	??_scale+8
  3250  0E18  160A  118A  200A  120A  158A  	fcall	stringdir
  3251  0E1D  00CD               	movwf	??_scale+9
  3252  0E1E  084D               	movf	??_scale+9,w
  3253  0E1F  00AD               	movwf	___flmul@a+3
  3254  0E20  084C               	movf	??_scale+8,w
  3255  0E21  00AC               	movwf	___flmul@a+2
  3256  0E22  084B               	movf	??_scale+7,w
  3257  0E23  00AB               	movwf	___flmul@a+1
  3258  0E24  084A               	movf	??_scale+6,w
  3259  0E25  00AA               	movwf	___flmul@a
  3260  0E26  120A  158A  21A2   	fcall	___flmul
  3261  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  3262  0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  3263  0E2B  0829               	movf	?___flmul+3,w
  3264  0E2C  00C3               	movwf	?_scale+3
  3265  0E2D  0828               	movf	?___flmul+2,w
  3266  0E2E  00C2               	movwf	?_scale+2
  3267  0E2F  0827               	movf	?___flmul+1,w
  3268  0E30  00C1               	movwf	?_scale+1
  3269  0E31  0826               	movf	?___flmul,w
  3270  0E32  00C0               	movwf	?_scale
  3271  0E33  0008               	return
  3272  0E34                     l2767:	
  3273                           
  3274                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  3275  0E34  0852               	movf	scale@scl,w
  3276  0E35  00C4               	movwf	??_scale
  3277  0E36  3001               	movlw	1
  3278  0E37                     u4405:	
  3279  0E37  1003               	clrc
  3280  0E38  0DC4               	rlf	??_scale,f
  3281  0E39  3EFF               	addlw	-1
  3282  0E3A  1D03               	skipz
  3283  0E3B  2E37               	goto	u4405
  3284  0E3C  1003               	clrc
  3285  0E3D  0D44               	rlf	??_scale,w
  3286  0E3E  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3287  0E3F  0084               	movwf	4
  3288  0E40  160A  118A  200A  120A  158A  	fcall	stringdir
  3289  0E45  00C5               	movwf	??_scale+1
  3290  0E46  160A  118A  200A  120A  158A  	fcall	stringdir
  3291  0E4B  00C6               	movwf	??_scale+2
  3292  0E4C  160A  118A  200A  120A  158A  	fcall	stringdir
  3293  0E51  00C7               	movwf	??_scale+3
  3294  0E52  160A  118A  200A   	fcall	stringdir
  3295  0E55  00C8               	movwf	??_scale+4
  3296  0E56  0848               	movf	??_scale+4,w
  3297  0E57  00C3               	movwf	?_scale+3
  3298  0E58  0847               	movf	??_scale+3,w
  3299  0E59  00C2               	movwf	?_scale+2
  3300  0E5A  0846               	movf	??_scale+2,w
  3301  0E5B  00C1               	movwf	?_scale+1
  3302  0E5C  0845               	movf	??_scale+1,w
  3303  0E5D  00C0               	movwf	?_scale
  3304  0E5E  0008               	return
  3305  0E5F                     l2771:	
  3306                           
  3307                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  3308  0E5F  0852               	movf	scale@scl,w
  3309  0E60  3A80               	xorlw	128
  3310  0E61  3E12               	addlw	-238
  3311  0E62  1C03               	skipc
  3312  0E63  2F4A               	goto	l2779
  3313                           
  3314                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3315  0E64  300A               	movlw	10
  3316  0E65  00F7               	movwf	___awdiv@divisor
  3317  0E66  3000               	movlw	0
  3318  0E67  00F8               	movwf	___awdiv@divisor+1
  3319  0E68  0852               	movf	scale@scl,w
  3320  0E69  00F2               	movwf	___awmod@dividend
  3321  0E6A  01F3               	clrf	___awmod@dividend+1
  3322  0E6B  1BF2               	btfsc	___awmod@dividend,7
  3323  0E6C  03F3               	decf	___awmod@dividend+1,f
  3324  0E6D  3064               	movlw	100
  3325  0E6E  00F0               	movwf	___awmod@divisor
  3326  0E6F  3000               	movlw	0
  3327  0E70  00F1               	movwf	___awmod@divisor+1
  3328  0E71  160A  158A  2769  120A  158A  	fcall	___awmod
  3329  0E76  0871               	movf	?___awmod+1,w
  3330  0E77  00FA               	movwf	___awdiv@dividend+1
  3331  0E78  0870               	movf	?___awmod,w
  3332  0E79  00F9               	movwf	___awdiv@dividend
  3333  0E7A  160A  118A  20C6  120A  158A  	fcall	___awdiv
  3334  0E7F  0877               	movf	?___awdiv,w
  3335  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  3336  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  3337  0E82  00C4               	movwf	??_scale
  3338  0E83  3001               	movlw	1
  3339  0E84                     u4425:	
  3340  0E84  1003               	clrc
  3341  0E85  0DC4               	rlf	??_scale,f
  3342  0E86  3EFF               	addlw	-1
  3343  0E87  1D03               	skipz
  3344  0E88  2E84               	goto	u4425
  3345  0E89  1003               	clrc
  3346  0E8A  0D44               	rlf	??_scale,w
  3347  0E8B  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3348  0E8C  0084               	movwf	4
  3349  0E8D  160A  118A  200A  120A  158A  	fcall	stringdir
  3350  0E92  00C5               	movwf	??_scale+1
  3351  0E93  160A  118A  200A  120A  158A  	fcall	stringdir
  3352  0E98  00C6               	movwf	??_scale+2
  3353  0E99  160A  118A  200A  120A  158A  	fcall	stringdir
  3354  0E9E  00C7               	movwf	??_scale+3
  3355  0E9F  160A  118A  200A  120A  158A  	fcall	stringdir
  3356  0EA4  00C8               	movwf	??_scale+4
  3357  0EA5  0848               	movf	??_scale+4,w
  3358  0EA6  00A9               	movwf	___flmul@b+3
  3359  0EA7  0847               	movf	??_scale+3,w
  3360  0EA8  00A8               	movwf	___flmul@b+2
  3361  0EA9  0846               	movf	??_scale+2,w
  3362  0EAA  00A7               	movwf	___flmul@b+1
  3363  0EAB  0845               	movf	??_scale+1,w
  3364  0EAC  00A6               	movwf	___flmul@b
  3365  0EAD  3064               	movlw	100
  3366  0EAE  00F7               	movwf	___awdiv@divisor
  3367  0EAF  3000               	movlw	0
  3368  0EB0  00F8               	movwf	___awdiv@divisor+1
  3369  0EB1  0852               	movf	scale@scl,w
  3370  0EB2  00F9               	movwf	___awdiv@dividend
  3371  0EB3  01FA               	clrf	___awdiv@dividend+1
  3372  0EB4  1BF9               	btfsc	___awdiv@dividend,7
  3373  0EB5  03FA               	decf	___awdiv@dividend+1,f
  3374  0EB6  160A  118A  20C6  120A  158A  	fcall	___awdiv
  3375  0EBB  0877               	movf	?___awdiv,w
  3376  0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  3377  0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  3378  0EBE  00C9               	movwf	??_scale+5
  3379  0EBF  3001               	movlw	1
  3380  0EC0                     u4435:	
  3381  0EC0  1003               	clrc
  3382  0EC1  0DC9               	rlf	??_scale+5,f
  3383  0EC2  3EFF               	addlw	-1
  3384  0EC3  1D03               	skipz
  3385  0EC4  2EC0               	goto	u4435
  3386  0EC5  1003               	clrc
  3387  0EC6  0D49               	rlf	??_scale+5,w
  3388  0EC7  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3389  0EC8  0084               	movwf	4
  3390  0EC9  160A  118A  200A  120A  158A  	fcall	stringdir
  3391  0ECE  00CA               	movwf	??_scale+6
  3392  0ECF  160A  118A  200A  120A  158A  	fcall	stringdir
  3393  0ED4  00CB               	movwf	??_scale+7
  3394  0ED5  160A  118A  200A  120A  158A  	fcall	stringdir
  3395  0EDA  00CC               	movwf	??_scale+8
  3396  0EDB  160A  118A  200A  120A  158A  	fcall	stringdir
  3397  0EE0  00CD               	movwf	??_scale+9
  3398  0EE1  084D               	movf	??_scale+9,w
  3399  0EE2  00AD               	movwf	___flmul@a+3
  3400  0EE3  084C               	movf	??_scale+8,w
  3401  0EE4  00AC               	movwf	___flmul@a+2
  3402  0EE5  084B               	movf	??_scale+7,w
  3403  0EE6  00AB               	movwf	___flmul@a+1
  3404  0EE7  084A               	movf	??_scale+6,w
  3405  0EE8  00AA               	movwf	___flmul@a
  3406  0EE9  120A  158A  21A2  120A  158A  	fcall	___flmul
  3407  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  3408  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  3409  0EF0  0829               	movf	?___flmul+3,w
  3410  0EF1  00D1               	movwf	_scale$873+3
  3411  0EF2  0828               	movf	?___flmul+2,w
  3412  0EF3  00D0               	movwf	_scale$873+2
  3413  0EF4  0827               	movf	?___flmul+1,w
  3414  0EF5  00CF               	movwf	_scale$873+1
  3415  0EF6  0826               	movf	?___flmul,w
  3416  0EF7  00CE               	movwf	_scale$873
  3417                           
  3418                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3419  0EF8  300A               	movlw	10
  3420  0EF9  00F0               	movwf	___awmod@divisor
  3421  0EFA  3000               	movlw	0
  3422  0EFB  00F1               	movwf	___awmod@divisor+1
  3423  0EFC  0852               	movf	scale@scl,w
  3424  0EFD  00F2               	movwf	___awmod@dividend
  3425  0EFE  01F3               	clrf	___awmod@dividend+1
  3426  0EFF  1BF2               	btfsc	___awmod@dividend,7
  3427  0F00  03F3               	decf	___awmod@dividend+1,f
  3428  0F01  160A  158A  2769  120A  158A  	fcall	___awmod
  3429  0F06  0870               	movf	?___awmod,w
  3430  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  3431  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  3432  0F09  00C4               	movwf	??_scale
  3433  0F0A  3001               	movlw	1
  3434  0F0B                     u4445:	
  3435  0F0B  1003               	clrc
  3436  0F0C  0DC4               	rlf	??_scale,f
  3437  0F0D  3EFF               	addlw	-1
  3438  0F0E  1D03               	skipz
  3439  0F0F  2F0B               	goto	u4445
  3440  0F10  1003               	clrc
  3441  0F11  0D44               	rlf	??_scale,w
  3442  0F12  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3443  0F13  0084               	movwf	4
  3444  0F14  160A  118A  200A  120A  158A  	fcall	stringdir
  3445  0F19  00C5               	movwf	??_scale+1
  3446  0F1A  160A  118A  200A  120A  158A  	fcall	stringdir
  3447  0F1F  00C6               	movwf	??_scale+2
  3448  0F20  160A  118A  200A  120A  158A  	fcall	stringdir
  3449  0F25  00C7               	movwf	??_scale+3
  3450  0F26  160A  118A  200A  120A  158A  	fcall	stringdir
  3451  0F2B  00C8               	movwf	??_scale+4
  3452  0F2C  0848               	movf	??_scale+4,w
  3453  0F2D  00A9               	movwf	___flmul@b+3
  3454  0F2E  0847               	movf	??_scale+3,w
  3455  0F2F  00A8               	movwf	___flmul@b+2
  3456  0F30  0846               	movf	??_scale+2,w
  3457  0F31  00A7               	movwf	___flmul@b+1
  3458  0F32  0845               	movf	??_scale+1,w
  3459  0F33  00A6               	movwf	___flmul@b
  3460  0F34  0851               	movf	_scale$873+3,w
  3461  0F35  00AD               	movwf	___flmul@a+3
  3462  0F36  0850               	movf	_scale$873+2,w
  3463  0F37  00AC               	movwf	___flmul@a+2
  3464  0F38  084F               	movf	_scale$873+1,w
  3465  0F39  00AB               	movwf	___flmul@a+1
  3466  0F3A  084E               	movf	_scale$873,w
  3467  0F3B  00AA               	movwf	___flmul@a
  3468  0F3C  120A  158A  21A2   	fcall	___flmul
  3469  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  3470  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  3471  0F41  0829               	movf	?___flmul+3,w
  3472  0F42  00C3               	movwf	?_scale+3
  3473  0F43  0828               	movf	?___flmul+2,w
  3474  0F44  00C2               	movwf	?_scale+2
  3475  0F45  0827               	movf	?___flmul+1,w
  3476  0F46  00C1               	movwf	?_scale+1
  3477  0F47  0826               	movf	?___flmul,w
  3478  0F48  00C0               	movwf	?_scale
  3479  0F49  0008               	return
  3480  0F4A                     l2779:	
  3481  0F4A  0852               	movf	scale@scl,w
  3482  0F4B  3A80               	xorlw	128
  3483  0F4C  3E75               	addlw	-139
  3484  0F4D  1C03               	skipc
  3485  0F4E  2FD5               	goto	l2785
  3486                           
  3487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3488  0F4F  300A               	movlw	10
  3489  0F50  00F0               	movwf	___awmod@divisor
  3490  0F51  3000               	movlw	0
  3491  0F52  00F1               	movwf	___awmod@divisor+1
  3492  0F53  0852               	movf	scale@scl,w
  3493  0F54  00F2               	movwf	___awmod@dividend
  3494  0F55  01F3               	clrf	___awmod@dividend+1
  3495  0F56  1BF2               	btfsc	___awmod@dividend,7
  3496  0F57  03F3               	decf	___awmod@dividend+1,f
  3497  0F58  160A  158A  2769  120A  158A  	fcall	___awmod
  3498  0F5D  0870               	movf	?___awmod,w
  3499  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  3500  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  3501  0F60  00C4               	movwf	??_scale
  3502  0F61  3001               	movlw	1
  3503  0F62                     u4465:	
  3504  0F62  1003               	clrc
  3505  0F63  0DC4               	rlf	??_scale,f
  3506  0F64  3EFF               	addlw	-1
  3507  0F65  1D03               	skipz
  3508  0F66  2F62               	goto	u4465
  3509  0F67  1003               	clrc
  3510  0F68  0D44               	rlf	??_scale,w
  3511  0F69  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3512  0F6A  0084               	movwf	4
  3513  0F6B  160A  118A  200A  120A  158A  	fcall	stringdir
  3514  0F70  00C5               	movwf	??_scale+1
  3515  0F71  160A  118A  200A  120A  158A  	fcall	stringdir
  3516  0F76  00C6               	movwf	??_scale+2
  3517  0F77  160A  118A  200A  120A  158A  	fcall	stringdir
  3518  0F7C  00C7               	movwf	??_scale+3
  3519  0F7D  160A  118A  200A  120A  158A  	fcall	stringdir
  3520  0F82  00C8               	movwf	??_scale+4
  3521  0F83  0848               	movf	??_scale+4,w
  3522  0F84  00A9               	movwf	___flmul@b+3
  3523  0F85  0847               	movf	??_scale+3,w
  3524  0F86  00A8               	movwf	___flmul@b+2
  3525  0F87  0846               	movf	??_scale+2,w
  3526  0F88  00A7               	movwf	___flmul@b+1
  3527  0F89  0845               	movf	??_scale+1,w
  3528  0F8A  00A6               	movwf	___flmul@b
  3529  0F8B  300A               	movlw	10
  3530  0F8C  00F7               	movwf	___awdiv@divisor
  3531  0F8D  3000               	movlw	0
  3532  0F8E  00F8               	movwf	___awdiv@divisor+1
  3533  0F8F  0852               	movf	scale@scl,w
  3534  0F90  00F9               	movwf	___awdiv@dividend
  3535  0F91  01FA               	clrf	___awdiv@dividend+1
  3536  0F92  1BF9               	btfsc	___awdiv@dividend,7
  3537  0F93  03FA               	decf	___awdiv@dividend+1,f
  3538  0F94  160A  118A  20C6  120A  158A  	fcall	___awdiv
  3539  0F99  0877               	movf	?___awdiv,w
  3540  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  3541  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  3542  0F9C  00C9               	movwf	??_scale+5
  3543  0F9D  3001               	movlw	1
  3544  0F9E                     u4475:	
  3545  0F9E  1003               	clrc
  3546  0F9F  0DC9               	rlf	??_scale+5,f
  3547  0FA0  3EFF               	addlw	-1
  3548  0FA1  1D03               	skipz
  3549  0FA2  2F9E               	goto	u4475
  3550  0FA3  1003               	clrc
  3551  0FA4  0D49               	rlf	??_scale+5,w
  3552  0FA5  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3553  0FA6  0084               	movwf	4
  3554  0FA7  160A  118A  200A  120A  158A  	fcall	stringdir
  3555  0FAC  00CA               	movwf	??_scale+6
  3556  0FAD  160A  118A  200A  120A  158A  	fcall	stringdir
  3557  0FB2  00CB               	movwf	??_scale+7
  3558  0FB3  160A  118A  200A  120A  158A  	fcall	stringdir
  3559  0FB8  00CC               	movwf	??_scale+8
  3560  0FB9  160A  118A  200A  120A  158A  	fcall	stringdir
  3561  0FBE  00CD               	movwf	??_scale+9
  3562  0FBF  084D               	movf	??_scale+9,w
  3563  0FC0  00AD               	movwf	___flmul@a+3
  3564  0FC1  084C               	movf	??_scale+8,w
  3565  0FC2  00AC               	movwf	___flmul@a+2
  3566  0FC3  084B               	movf	??_scale+7,w
  3567  0FC4  00AB               	movwf	___flmul@a+1
  3568  0FC5  084A               	movf	??_scale+6,w
  3569  0FC6  00AA               	movwf	___flmul@a
  3570  0FC7  120A  158A  21A2   	fcall	___flmul
  3571  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  3572  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  3573  0FCC  0829               	movf	?___flmul+3,w
  3574  0FCD  00C3               	movwf	?_scale+3
  3575  0FCE  0828               	movf	?___flmul+2,w
  3576  0FCF  00C2               	movwf	?_scale+2
  3577  0FD0  0827               	movf	?___flmul+1,w
  3578  0FD1  00C1               	movwf	?_scale+1
  3579  0FD2  0826               	movf	?___flmul,w
  3580  0FD3  00C0               	movwf	?_scale
  3581  0FD4  0008               	return
  3582  0FD5                     l2785:	
  3583                           
  3584                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  3585  0FD5  0852               	movf	scale@scl,w
  3586  0FD6  00C4               	movwf	??_scale
  3587  0FD7  3001               	movlw	1
  3588  0FD8                     u4485:	
  3589  0FD8  1003               	clrc
  3590  0FD9  0DC4               	rlf	??_scale,f
  3591  0FDA  3EFF               	addlw	-1
  3592  0FDB  1D03               	skipz
  3593  0FDC  2FD8               	goto	u4485
  3594  0FDD  1003               	clrc
  3595  0FDE  0D44               	rlf	??_scale,w
  3596  0FDF  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3597  0FE0  0084               	movwf	4
  3598  0FE1  160A  118A  200A  120A  158A  	fcall	stringdir
  3599  0FE6  00C5               	movwf	??_scale+1
  3600  0FE7  160A  118A  200A  120A  158A  	fcall	stringdir
  3601  0FEC  00C6               	movwf	??_scale+2
  3602  0FED  160A  118A  200A  120A  158A  	fcall	stringdir
  3603  0FF2  00C7               	movwf	??_scale+3
  3604  0FF3  160A  118A  200A   	fcall	stringdir
  3605  0FF6  00C8               	movwf	??_scale+4
  3606  0FF7  0848               	movf	??_scale+4,w
  3607  0FF8  00C3               	movwf	?_scale+3
  3608  0FF9  0847               	movf	??_scale+3,w
  3609  0FFA  00C2               	movwf	?_scale+2
  3610  0FFB  0846               	movf	??_scale+2,w
  3611  0FFC  00C1               	movwf	?_scale+1
  3612  0FFD  0845               	movf	??_scale+1,w
  3613  0FFE  00C0               	movwf	?_scale
  3614  0FFF  0008               	return
  3615  1000                     __end_of_scale:	
  3616                           
  3617                           	psect	text3
  3618  1F69                     __ptext3:	
  3619 ;; *************** function ___awmod *****************
  3620 ;; Defined at:
  3621 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;  divisor         2    0[COMMON] int 
  3624 ;;  dividend        2    2[COMMON] int 
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;  sign            1    6[COMMON] unsigned char 
  3627 ;;  counter         1    5[COMMON] unsigned char 
  3628 ;; Return value:  Size  Location     Type
  3629 ;;                  2    0[COMMON] int 
  3630 ;; Registers used:
  3631 ;;		wreg, status,2, status,0
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3637 ;;      Params:         4       0       0       0       0
  3638 ;;      Locals:         2       0       0       0       0
  3639 ;;      Temps:          1       0       0       0       0
  3640 ;;      Totals:         7       0       0       0       0
  3641 ;;Total ram usage:        7 bytes
  3642 ;; Hardware stack levels used:    1
  3643 ;; This function calls:
  3644 ;;		Nothing
  3645 ;; This function is called by:
  3646 ;;		_scale
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           
  3651                           ;psect for function ___awmod
  3652  1F69                     ___awmod:	
  3653                           
  3654                           ;incstack = 0
  3655                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3656  1F69  01F6               	clrf	___awmod@sign
  3657  1F6A  1FF3               	btfss	___awmod@dividend+1,7
  3658  1F6B  2F73               	goto	l2289
  3659  1F6C  09F2               	comf	___awmod@dividend,f
  3660  1F6D  09F3               	comf	___awmod@dividend+1,f
  3661  1F6E  0AF2               	incf	___awmod@dividend,f
  3662  1F6F  1903               	skipnz
  3663  1F70  0AF3               	incf	___awmod@dividend+1,f
  3664  1F71  01F6               	clrf	___awmod@sign
  3665  1F72  0AF6               	incf	___awmod@sign,f
  3666  1F73                     l2289:	
  3667  1F73  1FF1               	btfss	___awmod@divisor+1,7
  3668  1F74  2F7A               	goto	l2293
  3669  1F75  09F0               	comf	___awmod@divisor,f
  3670  1F76  09F1               	comf	___awmod@divisor+1,f
  3671  1F77  0AF0               	incf	___awmod@divisor,f
  3672  1F78  1903               	skipnz
  3673  1F79  0AF1               	incf	___awmod@divisor+1,f
  3674  1F7A                     l2293:	
  3675  1F7A  0870               	movf	___awmod@divisor,w
  3676  1F7B  0471               	iorwf	___awmod@divisor+1,w
  3677  1F7C  1903               	btfsc	3,2
  3678  1F7D  2FA7               	goto	l2311
  3679  1F7E  01F5               	clrf	___awmod@counter
  3680  1F7F  0AF5               	incf	___awmod@counter,f
  3681  1F80                     l2301:	
  3682  1F80  1BF1               	btfsc	___awmod@divisor+1,7
  3683  1F81  2F8E               	goto	l2303
  3684  1F82  3001               	movlw	1
  3685  1F83                     u3215:	
  3686  1F83  1003               	clrc
  3687  1F84  0DF0               	rlf	___awmod@divisor,f
  3688  1F85  0DF1               	rlf	___awmod@divisor+1,f
  3689  1F86  3EFF               	addlw	-1
  3690  1F87  1D03               	skipz
  3691  1F88  2F83               	goto	u3215
  3692  1F89  3001               	movlw	1
  3693  1F8A  00F4               	movwf	??___awmod
  3694  1F8B  0874               	movf	??___awmod,w
  3695  1F8C  07F5               	addwf	___awmod@counter,f
  3696  1F8D  2F80               	goto	l2301
  3697  1F8E                     l2303:	
  3698  1F8E  0871               	movf	___awmod@divisor+1,w
  3699  1F8F  0273               	subwf	___awmod@dividend+1,w
  3700  1F90  1D03               	skipz
  3701  1F91  2F94               	goto	u3235
  3702  1F92  0870               	movf	___awmod@divisor,w
  3703  1F93  0272               	subwf	___awmod@dividend,w
  3704  1F94                     u3235:	
  3705  1F94  1C03               	skipc
  3706  1F95  2F9C               	goto	l2307
  3707  1F96  0870               	movf	___awmod@divisor,w
  3708  1F97  02F2               	subwf	___awmod@dividend,f
  3709  1F98  0871               	movf	___awmod@divisor+1,w
  3710  1F99  1C03               	skipc
  3711  1F9A  03F3               	decf	___awmod@dividend+1,f
  3712  1F9B  02F3               	subwf	___awmod@dividend+1,f
  3713  1F9C                     l2307:	
  3714  1F9C  3001               	movlw	1
  3715  1F9D                     u3245:	
  3716  1F9D  1003               	clrc
  3717  1F9E  0CF1               	rrf	___awmod@divisor+1,f
  3718  1F9F  0CF0               	rrf	___awmod@divisor,f
  3719  1FA0  3EFF               	addlw	-1
  3720  1FA1  1D03               	skipz
  3721  1FA2  2F9D               	goto	u3245
  3722  1FA3  3001               	movlw	1
  3723  1FA4  02F5               	subwf	___awmod@counter,f
  3724  1FA5  1D03               	btfss	3,2
  3725  1FA6  2F8E               	goto	l2303
  3726  1FA7                     l2311:	
  3727  1FA7  0876               	movf	___awmod@sign,w
  3728  1FA8  1903               	btfsc	3,2
  3729  1FA9  2FAF               	goto	l2315
  3730  1FAA  09F2               	comf	___awmod@dividend,f
  3731  1FAB  09F3               	comf	___awmod@dividend+1,f
  3732  1FAC  0AF2               	incf	___awmod@dividend,f
  3733  1FAD  1903               	skipnz
  3734  1FAE  0AF3               	incf	___awmod@dividend+1,f
  3735  1FAF                     l2315:	
  3736  1FAF  0873               	movf	___awmod@dividend+1,w
  3737  1FB0  00F1               	movwf	?___awmod+1
  3738  1FB1  0872               	movf	___awmod@dividend,w
  3739  1FB2  00F0               	movwf	?___awmod
  3740  1FB3  0008               	return
  3741  1FB4                     __end_of___awmod:	
  3742                           
  3743                           	psect	text4
  3744  10C6                     __ptext4:	
  3745 ;; *************** function ___awdiv *****************
  3746 ;; Defined at:
  3747 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  divisor         2    7[COMMON] int 
  3750 ;;  dividend        2    9[COMMON] int 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;  quotient        2    2[BANK0 ] int 
  3753 ;;  sign            1    1[BANK0 ] unsigned char 
  3754 ;;  counter         1    0[BANK0 ] unsigned char 
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  2    7[COMMON] int 
  3757 ;; Registers used:
  3758 ;;		wreg, status,2, status,0
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3764 ;;      Params:         4       0       0       0       0
  3765 ;;      Locals:         0       4       0       0       0
  3766 ;;      Temps:          1       0       0       0       0
  3767 ;;      Totals:         5       4       0       0       0
  3768 ;;Total ram usage:        9 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; This function calls:
  3771 ;;		Nothing
  3772 ;; This function is called by:
  3773 ;;		_scale
  3774 ;;		_sprintf
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778                           
  3779                           ;psect for function ___awdiv
  3780  10C6                     ___awdiv:	
  3781                           
  3782                           ;incstack = 0
  3783                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3784  10C6  1283               	bcf	3,5	;RP0=0, select bank0
  3785  10C7  1303               	bcf	3,6	;RP1=0, select bank0
  3786  10C8  01A1               	clrf	___awdiv@sign
  3787  10C9  1FF8               	btfss	___awdiv@divisor+1,7
  3788  10CA  28D2               	goto	l2245
  3789  10CB  09F7               	comf	___awdiv@divisor,f
  3790  10CC  09F8               	comf	___awdiv@divisor+1,f
  3791  10CD  0AF7               	incf	___awdiv@divisor,f
  3792  10CE  1903               	skipnz
  3793  10CF  0AF8               	incf	___awdiv@divisor+1,f
  3794  10D0  01A1               	clrf	___awdiv@sign
  3795  10D1  0AA1               	incf	___awdiv@sign,f
  3796  10D2                     l2245:	
  3797  10D2  1FFA               	btfss	___awdiv@dividend+1,7
  3798  10D3  28DD               	goto	l2251
  3799  10D4  09F9               	comf	___awdiv@dividend,f
  3800  10D5  09FA               	comf	___awdiv@dividend+1,f
  3801  10D6  0AF9               	incf	___awdiv@dividend,f
  3802  10D7  1903               	skipnz
  3803  10D8  0AFA               	incf	___awdiv@dividend+1,f
  3804  10D9  3001               	movlw	1
  3805  10DA  00FB               	movwf	??___awdiv
  3806  10DB  087B               	movf	??___awdiv,w
  3807  10DC  06A1               	xorwf	___awdiv@sign,f
  3808  10DD                     l2251:	
  3809  10DD  01A2               	clrf	___awdiv@quotient
  3810  10DE  01A3               	clrf	___awdiv@quotient+1
  3811  10DF  0877               	movf	___awdiv@divisor,w
  3812  10E0  0478               	iorwf	___awdiv@divisor+1,w
  3813  10E1  1903               	btfsc	3,2
  3814  10E2  2914               	goto	l2273
  3815  10E3  01A0               	clrf	___awdiv@counter
  3816  10E4  0AA0               	incf	___awdiv@counter,f
  3817  10E5                     l2261:	
  3818  10E5  1BF8               	btfsc	___awdiv@divisor+1,7
  3819  10E6  28F3               	goto	l2263
  3820  10E7  3001               	movlw	1
  3821  10E8                     u3115:	
  3822  10E8  1003               	clrc
  3823  10E9  0DF7               	rlf	___awdiv@divisor,f
  3824  10EA  0DF8               	rlf	___awdiv@divisor+1,f
  3825  10EB  3EFF               	addlw	-1
  3826  10EC  1D03               	skipz
  3827  10ED  28E8               	goto	u3115
  3828  10EE  3001               	movlw	1
  3829  10EF  00FB               	movwf	??___awdiv
  3830  10F0  087B               	movf	??___awdiv,w
  3831  10F1  07A0               	addwf	___awdiv@counter,f
  3832  10F2  28E5               	goto	l2261
  3833  10F3                     l2263:	
  3834  10F3  3001               	movlw	1
  3835  10F4                     u3135:	
  3836  10F4  1003               	clrc
  3837  10F5  0DA2               	rlf	___awdiv@quotient,f
  3838  10F6  0DA3               	rlf	___awdiv@quotient+1,f
  3839  10F7  3EFF               	addlw	-1
  3840  10F8  1D03               	skipz
  3841  10F9  28F4               	goto	u3135
  3842  10FA  0878               	movf	___awdiv@divisor+1,w
  3843  10FB  027A               	subwf	___awdiv@dividend+1,w
  3844  10FC  1D03               	skipz
  3845  10FD  2900               	goto	u3145
  3846  10FE  0877               	movf	___awdiv@divisor,w
  3847  10FF  0279               	subwf	___awdiv@dividend,w
  3848  1100                     u3145:	
  3849  1100  1C03               	skipc
  3850  1101  2909               	goto	l2269
  3851  1102  0877               	movf	___awdiv@divisor,w
  3852  1103  02F9               	subwf	___awdiv@dividend,f
  3853  1104  0878               	movf	___awdiv@divisor+1,w
  3854  1105  1C03               	skipc
  3855  1106  03FA               	decf	___awdiv@dividend+1,f
  3856  1107  02FA               	subwf	___awdiv@dividend+1,f
  3857  1108  1422               	bsf	___awdiv@quotient,0
  3858  1109                     l2269:	
  3859  1109  3001               	movlw	1
  3860  110A                     u3155:	
  3861  110A  1003               	clrc
  3862  110B  0CF8               	rrf	___awdiv@divisor+1,f
  3863  110C  0CF7               	rrf	___awdiv@divisor,f
  3864  110D  3EFF               	addlw	-1
  3865  110E  1D03               	skipz
  3866  110F  290A               	goto	u3155
  3867  1110  3001               	movlw	1
  3868  1111  02A0               	subwf	___awdiv@counter,f
  3869  1112  1D03               	btfss	3,2
  3870  1113  28F3               	goto	l2263
  3871  1114                     l2273:	
  3872  1114  0821               	movf	___awdiv@sign,w
  3873  1115  1903               	btfsc	3,2
  3874  1116  291C               	goto	l2277
  3875  1117  09A2               	comf	___awdiv@quotient,f
  3876  1118  09A3               	comf	___awdiv@quotient+1,f
  3877  1119  0AA2               	incf	___awdiv@quotient,f
  3878  111A  1903               	skipnz
  3879  111B  0AA3               	incf	___awdiv@quotient+1,f
  3880  111C                     l2277:	
  3881  111C  0823               	movf	___awdiv@quotient+1,w
  3882  111D  00F8               	movwf	?___awdiv+1
  3883  111E  0822               	movf	___awdiv@quotient,w
  3884  111F  00F7               	movwf	?___awdiv
  3885  1120  0008               	return
  3886  1121                     __end_of___awdiv:	
  3887                           
  3888                           	psect	text5
  3889  0801                     __ptext5:	
  3890 ;; *************** function _isdigit *****************
  3891 ;; Defined at:
  3892 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;  c               1    wreg     unsigned char 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;  c               1    1[COMMON] unsigned char 
  3897 ;; Return value:  Size  Location     Type
  3898 ;;		None               void
  3899 ;; Registers used:
  3900 ;;		wreg, status,2, status,0
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3906 ;;      Params:         0       0       0       0       0
  3907 ;;      Locals:         2       0       0       0       0
  3908 ;;      Temps:          0       0       0       0       0
  3909 ;;      Totals:         2       0       0       0       0
  3910 ;;Total ram usage:        2 bytes
  3911 ;; Hardware stack levels used:    1
  3912 ;; This function calls:
  3913 ;;		Nothing
  3914 ;; This function is called by:
  3915 ;;		_sprintf
  3916 ;; This function uses a non-reentrant model
  3917 ;;
  3918                           
  3919                           
  3920                           ;psect for function _isdigit
  3921  0801                     _isdigit:	
  3922                           
  3923                           ;incstack = 0
  3924                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3925                           ;isdigit@c stored from wreg
  3926  0801  00F1               	movwf	isdigit@c
  3927  0802  01F0               	clrf	_isdigit$682
  3928  0803  303A               	movlw	58
  3929  0804  0271               	subwf	isdigit@c,w
  3930  0805  1803               	skipnc
  3931  0806  280D               	goto	l2797
  3932  0807  3030               	movlw	48
  3933  0808  0271               	subwf	isdigit@c,w
  3934  0809  1C03               	skipc
  3935  080A  280D               	goto	l2797
  3936  080B  01F0               	clrf	_isdigit$682
  3937  080C  0AF0               	incf	_isdigit$682,f
  3938  080D                     l2797:	
  3939  080D  0C70               	rrf	_isdigit$682,w
  3940  080E  0008               	return
  3941  080F                     __end_of_isdigit:	
  3942                           
  3943                           	psect	text6
  3944  0004                     __ptext6:	
  3945 ;; *************** function _fround *****************
  3946 ;; Defined at:
  3947 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;  prec            1    wreg     unsigned char 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;  prec            1   51[BANK0 ] unsigned char 
  3952 ;; Return value:  Size  Location     Type
  3953 ;;                  4   32[BANK0 ] unsigned char 
  3954 ;; Registers used:
  3955 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3961 ;;      Params:         0       4       0       0       0
  3962 ;;      Locals:         0       9       0       0       0
  3963 ;;      Temps:          0       7       0       0       0
  3964 ;;      Totals:         0      20       0       0       0
  3965 ;;Total ram usage:       20 bytes
  3966 ;; Hardware stack levels used:    1
  3967 ;; Hardware stack levels required when called:    2
  3968 ;; This function calls:
  3969 ;;		___flmul
  3970 ;;		___lwdiv
  3971 ;;		___lwmod
  3972 ;; This function is called by:
  3973 ;;		_sprintf
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977                           
  3978                           ;psect for function _fround
  3979  0004                     _fround:	
  3980                           
  3981                           ;incstack = 0
  3982                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3983                           ;fround@prec stored from wreg
  3984  0004  1283               	bcf	3,5	;RP0=0, select bank0
  3985  0005  1303               	bcf	3,6	;RP1=0, select bank0
  3986  0006  00D3               	movwf	fround@prec
  3987                           
  3988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  3989  0007  306E               	movlw	110
  3990  0008  0253               	subwf	fround@prec,w
  3991  0009  1C03               	skipc
  3992  000A  2916               	goto	l2739
  3993                           
  3994                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3995  000B  303F               	movlw	63
  3996  000C  00A9               	movwf	___flmul@b+3
  3997  000D  3000               	movlw	0
  3998  000E  00A8               	movwf	___flmul@b+2
  3999  000F  3000               	movlw	0
  4000  0010  00A7               	movwf	___flmul@b+1
  4001  0011  3000               	movlw	0
  4002  0012  00A6               	movwf	___flmul@b
  4003  0013  3064               	movlw	100
  4004  0014  00F6               	movwf	___lwdiv@divisor
  4005  0015  3000               	movlw	0
  4006  0016  00F7               	movwf	___lwdiv@divisor+1
  4007  0017  0853               	movf	fround@prec,w
  4008  0018  00C4               	movwf	??_fround
  4009  0019  01C5               	clrf	??_fround+1
  4010  001A  0844               	movf	??_fround,w
  4011  001B  00F8               	movwf	___lwdiv@dividend
  4012  001C  0845               	movf	??_fround+1,w
  4013  001D  00F9               	movwf	___lwdiv@dividend+1
  4014  001E  160A  158A  26A8  120A  118A  	fcall	___lwdiv
  4015  0023  0876               	movf	?___lwdiv,w
  4016  0024  1283               	bcf	3,5	;RP0=0, select bank0
  4017  0025  1303               	bcf	3,6	;RP1=0, select bank0
  4018  0026  00C6               	movwf	??_fround+2
  4019  0027  3001               	movlw	1
  4020  0028                     u4255:	
  4021  0028  1003               	clrc
  4022  0029  0DC6               	rlf	??_fround+2,f
  4023  002A  3EFF               	addlw	-1
  4024  002B  1D03               	skipz
  4025  002C  2828               	goto	u4255
  4026  002D  1003               	clrc
  4027  002E  0D46               	rlf	??_fround+2,w
  4028  002F  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4029  0030  0084               	movwf	4
  4030  0031  160A  118A  200A  120A  118A  	fcall	stringdir
  4031  0036  00C7               	movwf	??_fround+3
  4032  0037  160A  118A  200A  120A  118A  	fcall	stringdir
  4033  003C  00C8               	movwf	??_fround+4
  4034  003D  160A  118A  200A  120A  118A  	fcall	stringdir
  4035  0042  00C9               	movwf	??_fround+5
  4036  0043  160A  118A  200A  120A  118A  	fcall	stringdir
  4037  0048  00CA               	movwf	??_fround+6
  4038  0049  084A               	movf	??_fround+6,w
  4039  004A  00AD               	movwf	___flmul@a+3
  4040  004B  0849               	movf	??_fround+5,w
  4041  004C  00AC               	movwf	___flmul@a+2
  4042  004D  0848               	movf	??_fround+4,w
  4043  004E  00AB               	movwf	___flmul@a+1
  4044  004F  0847               	movf	??_fround+3,w
  4045  0050  00AA               	movwf	___flmul@a
  4046  0051  120A  158A  21A2  120A  118A  	fcall	___flmul
  4047  0056  1283               	bcf	3,5	;RP0=0, select bank0
  4048  0057  1303               	bcf	3,6	;RP1=0, select bank0
  4049  0058  0829               	movf	?___flmul+3,w
  4050  0059  00D2               	movwf	_fround$871+3
  4051  005A  0828               	movf	?___flmul+2,w
  4052  005B  00D1               	movwf	_fround$871+2
  4053  005C  0827               	movf	?___flmul+1,w
  4054  005D  00D0               	movwf	_fround$871+1
  4055  005E  0826               	movf	?___flmul,w
  4056  005F  00CF               	movwf	_fround$871
  4057                           
  4058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4059  0060  300A               	movlw	10
  4060  0061  00F6               	movwf	___lwdiv@divisor
  4061  0062  3000               	movlw	0
  4062  0063  00F7               	movwf	___lwdiv@divisor+1
  4063  0064  0853               	movf	fround@prec,w
  4064  0065  00C4               	movwf	??_fround
  4065  0066  01C5               	clrf	??_fround+1
  4066  0067  0844               	movf	??_fround,w
  4067  0068  00F2               	movwf	___lwmod@dividend
  4068  0069  0845               	movf	??_fround+1,w
  4069  006A  00F3               	movwf	___lwmod@dividend+1
  4070  006B  3064               	movlw	100
  4071  006C  00F0               	movwf	___lwmod@divisor
  4072  006D  3000               	movlw	0
  4073  006E  00F1               	movwf	___lwmod@divisor+1
  4074  006F  160A  158A  2604  120A  118A  	fcall	___lwmod
  4075  0074  0871               	movf	?___lwmod+1,w
  4076  0075  00F9               	movwf	___lwdiv@dividend+1
  4077  0076  0870               	movf	?___lwmod,w
  4078  0077  00F8               	movwf	___lwdiv@dividend
  4079  0078  160A  158A  26A8  120A  118A  	fcall	___lwdiv
  4080  007D  0876               	movf	?___lwdiv,w
  4081  007E  1283               	bcf	3,5	;RP0=0, select bank0
  4082  007F  1303               	bcf	3,6	;RP1=0, select bank0
  4083  0080  00C6               	movwf	??_fround+2
  4084  0081  3001               	movlw	1
  4085  0082                     u4265:	
  4086  0082  1003               	clrc
  4087  0083  0DC6               	rlf	??_fround+2,f
  4088  0084  3EFF               	addlw	-1
  4089  0085  1D03               	skipz
  4090  0086  2882               	goto	u4265
  4091  0087  1003               	clrc
  4092  0088  0D46               	rlf	??_fround+2,w
  4093  0089  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4094  008A  0084               	movwf	4
  4095  008B  160A  118A  200A  120A  118A  	fcall	stringdir
  4096  0090  00C7               	movwf	??_fround+3
  4097  0091  160A  118A  200A  120A  118A  	fcall	stringdir
  4098  0096  00C8               	movwf	??_fround+4
  4099  0097  160A  118A  200A  120A  118A  	fcall	stringdir
  4100  009C  00C9               	movwf	??_fround+5
  4101  009D  160A  118A  200A  120A  118A  	fcall	stringdir
  4102  00A2  00CA               	movwf	??_fround+6
  4103  00A3  084A               	movf	??_fround+6,w
  4104  00A4  00A9               	movwf	___flmul@b+3
  4105  00A5  0849               	movf	??_fround+5,w
  4106  00A6  00A8               	movwf	___flmul@b+2
  4107  00A7  0848               	movf	??_fround+4,w
  4108  00A8  00A7               	movwf	___flmul@b+1
  4109  00A9  0847               	movf	??_fround+3,w
  4110  00AA  00A6               	movwf	___flmul@b
  4111  00AB  0852               	movf	_fround$871+3,w
  4112  00AC  00AD               	movwf	___flmul@a+3
  4113  00AD  0851               	movf	_fround$871+2,w
  4114  00AE  00AC               	movwf	___flmul@a+2
  4115  00AF  0850               	movf	_fround$871+1,w
  4116  00B0  00AB               	movwf	___flmul@a+1
  4117  00B1  084F               	movf	_fround$871,w
  4118  00B2  00AA               	movwf	___flmul@a
  4119  00B3  120A  158A  21A2  120A  118A  	fcall	___flmul
  4120  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  4121  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  4122  00BA  0829               	movf	?___flmul+3,w
  4123  00BB  00CE               	movwf	_fround$872+3
  4124  00BC  0828               	movf	?___flmul+2,w
  4125  00BD  00CD               	movwf	_fround$872+2
  4126  00BE  0827               	movf	?___flmul+1,w
  4127  00BF  00CC               	movwf	_fround$872+1
  4128  00C0  0826               	movf	?___flmul,w
  4129  00C1  00CB               	movwf	_fround$872
  4130                           
  4131                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4132  00C2  300A               	movlw	10
  4133  00C3  00F0               	movwf	___lwmod@divisor
  4134  00C4  3000               	movlw	0
  4135  00C5  00F1               	movwf	___lwmod@divisor+1
  4136  00C6  0853               	movf	fround@prec,w
  4137  00C7  00C4               	movwf	??_fround
  4138  00C8  01C5               	clrf	??_fround+1
  4139  00C9  0844               	movf	??_fround,w
  4140  00CA  00F2               	movwf	___lwmod@dividend
  4141  00CB  0845               	movf	??_fround+1,w
  4142  00CC  00F3               	movwf	___lwmod@dividend+1
  4143  00CD  160A  158A  2604  120A  118A  	fcall	___lwmod
  4144  00D2  0870               	movf	?___lwmod,w
  4145  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  4146  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  4147  00D5  00C6               	movwf	??_fround+2
  4148  00D6  3001               	movlw	1
  4149  00D7                     u4275:	
  4150  00D7  1003               	clrc
  4151  00D8  0DC6               	rlf	??_fround+2,f
  4152  00D9  3EFF               	addlw	-1
  4153  00DA  1D03               	skipz
  4154  00DB  28D7               	goto	u4275
  4155  00DC  1003               	clrc
  4156  00DD  0D46               	rlf	??_fround+2,w
  4157  00DE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4158  00DF  0084               	movwf	4
  4159  00E0  160A  118A  200A  120A  118A  	fcall	stringdir
  4160  00E5  00C7               	movwf	??_fround+3
  4161  00E6  160A  118A  200A  120A  118A  	fcall	stringdir
  4162  00EB  00C8               	movwf	??_fround+4
  4163  00EC  160A  118A  200A  120A  118A  	fcall	stringdir
  4164  00F1  00C9               	movwf	??_fround+5
  4165  00F2  160A  118A  200A  120A  118A  	fcall	stringdir
  4166  00F7  00CA               	movwf	??_fround+6
  4167  00F8  084A               	movf	??_fround+6,w
  4168  00F9  00A9               	movwf	___flmul@b+3
  4169  00FA  0849               	movf	??_fround+5,w
  4170  00FB  00A8               	movwf	___flmul@b+2
  4171  00FC  0848               	movf	??_fround+4,w
  4172  00FD  00A7               	movwf	___flmul@b+1
  4173  00FE  0847               	movf	??_fround+3,w
  4174  00FF  00A6               	movwf	___flmul@b
  4175  0100  084E               	movf	_fround$872+3,w
  4176  0101  00AD               	movwf	___flmul@a+3
  4177  0102  084D               	movf	_fround$872+2,w
  4178  0103  00AC               	movwf	___flmul@a+2
  4179  0104  084C               	movf	_fround$872+1,w
  4180  0105  00AB               	movwf	___flmul@a+1
  4181  0106  084B               	movf	_fround$872,w
  4182  0107  00AA               	movwf	___flmul@a
  4183  0108  120A  158A  21A2   	fcall	___flmul
  4184  010B  1283               	bcf	3,5	;RP0=0, select bank0
  4185  010C  1303               	bcf	3,6	;RP1=0, select bank0
  4186  010D  0829               	movf	?___flmul+3,w
  4187  010E  00C3               	movwf	?_fround+3
  4188  010F  0828               	movf	?___flmul+2,w
  4189  0110  00C2               	movwf	?_fround+2
  4190  0111  0827               	movf	?___flmul+1,w
  4191  0112  00C1               	movwf	?_fround+1
  4192  0113  0826               	movf	?___flmul,w
  4193  0114  00C0               	movwf	?_fround
  4194  0115  0008               	return
  4195  0116                     l2739:	
  4196  0116  300B               	movlw	11
  4197  0117  0253               	subwf	fround@prec,w
  4198  0118  1C03               	skipc
  4199  0119  29C3               	goto	l2745
  4200                           
  4201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4202  011A  303F               	movlw	63
  4203  011B  00A9               	movwf	___flmul@b+3
  4204  011C  3000               	movlw	0
  4205  011D  00A8               	movwf	___flmul@b+2
  4206  011E  3000               	movlw	0
  4207  011F  00A7               	movwf	___flmul@b+1
  4208  0120  3000               	movlw	0
  4209  0121  00A6               	movwf	___flmul@b
  4210  0122  300A               	movlw	10
  4211  0123  00F6               	movwf	___lwdiv@divisor
  4212  0124  3000               	movlw	0
  4213  0125  00F7               	movwf	___lwdiv@divisor+1
  4214  0126  0853               	movf	fround@prec,w
  4215  0127  00C4               	movwf	??_fround
  4216  0128  01C5               	clrf	??_fround+1
  4217  0129  0844               	movf	??_fround,w
  4218  012A  00F8               	movwf	___lwdiv@dividend
  4219  012B  0845               	movf	??_fround+1,w
  4220  012C  00F9               	movwf	___lwdiv@dividend+1
  4221  012D  160A  158A  26A8  120A  118A  	fcall	___lwdiv
  4222  0132  0876               	movf	?___lwdiv,w
  4223  0133  1283               	bcf	3,5	;RP0=0, select bank0
  4224  0134  1303               	bcf	3,6	;RP1=0, select bank0
  4225  0135  00C6               	movwf	??_fround+2
  4226  0136  3001               	movlw	1
  4227  0137                     u4295:	
  4228  0137  1003               	clrc
  4229  0138  0DC6               	rlf	??_fround+2,f
  4230  0139  3EFF               	addlw	-1
  4231  013A  1D03               	skipz
  4232  013B  2937               	goto	u4295
  4233  013C  1003               	clrc
  4234  013D  0D46               	rlf	??_fround+2,w
  4235  013E  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4236  013F  0084               	movwf	4
  4237  0140  160A  118A  200A  120A  118A  	fcall	stringdir
  4238  0145  00C7               	movwf	??_fround+3
  4239  0146  160A  118A  200A  120A  118A  	fcall	stringdir
  4240  014B  00C8               	movwf	??_fround+4
  4241  014C  160A  118A  200A  120A  118A  	fcall	stringdir
  4242  0151  00C9               	movwf	??_fround+5
  4243  0152  160A  118A  200A  120A  118A  	fcall	stringdir
  4244  0157  00CA               	movwf	??_fround+6
  4245  0158  084A               	movf	??_fround+6,w
  4246  0159  00AD               	movwf	___flmul@a+3
  4247  015A  0849               	movf	??_fround+5,w
  4248  015B  00AC               	movwf	___flmul@a+2
  4249  015C  0848               	movf	??_fround+4,w
  4250  015D  00AB               	movwf	___flmul@a+1
  4251  015E  0847               	movf	??_fround+3,w
  4252  015F  00AA               	movwf	___flmul@a
  4253  0160  120A  158A  21A2  120A  118A  	fcall	___flmul
  4254  0165  1283               	bcf	3,5	;RP0=0, select bank0
  4255  0166  1303               	bcf	3,6	;RP1=0, select bank0
  4256  0167  0829               	movf	?___flmul+3,w
  4257  0168  00D2               	movwf	_fround$871+3
  4258  0169  0828               	movf	?___flmul+2,w
  4259  016A  00D1               	movwf	_fround$871+2
  4260  016B  0827               	movf	?___flmul+1,w
  4261  016C  00D0               	movwf	_fround$871+1
  4262  016D  0826               	movf	?___flmul,w
  4263  016E  00CF               	movwf	_fround$871
  4264                           
  4265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4266  016F  300A               	movlw	10
  4267  0170  00F0               	movwf	___lwmod@divisor
  4268  0171  3000               	movlw	0
  4269  0172  00F1               	movwf	___lwmod@divisor+1
  4270  0173  0853               	movf	fround@prec,w
  4271  0174  00C4               	movwf	??_fround
  4272  0175  01C5               	clrf	??_fround+1
  4273  0176  0844               	movf	??_fround,w
  4274  0177  00F2               	movwf	___lwmod@dividend
  4275  0178  0845               	movf	??_fround+1,w
  4276  0179  00F3               	movwf	___lwmod@dividend+1
  4277  017A  160A  158A  2604  120A  118A  	fcall	___lwmod
  4278  017F  0870               	movf	?___lwmod,w
  4279  0180  1283               	bcf	3,5	;RP0=0, select bank0
  4280  0181  1303               	bcf	3,6	;RP1=0, select bank0
  4281  0182  00C6               	movwf	??_fround+2
  4282  0183  3001               	movlw	1
  4283  0184                     u4305:	
  4284  0184  1003               	clrc
  4285  0185  0DC6               	rlf	??_fround+2,f
  4286  0186  3EFF               	addlw	-1
  4287  0187  1D03               	skipz
  4288  0188  2984               	goto	u4305
  4289  0189  1003               	clrc
  4290  018A  0D46               	rlf	??_fround+2,w
  4291  018B  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4292  018C  0084               	movwf	4
  4293  018D  160A  118A  200A  120A  118A  	fcall	stringdir
  4294  0192  00C7               	movwf	??_fround+3
  4295  0193  160A  118A  200A  120A  118A  	fcall	stringdir
  4296  0198  00C8               	movwf	??_fround+4
  4297  0199  160A  118A  200A  120A  118A  	fcall	stringdir
  4298  019E  00C9               	movwf	??_fround+5
  4299  019F  160A  118A  200A  120A  118A  	fcall	stringdir
  4300  01A4  00CA               	movwf	??_fround+6
  4301  01A5  084A               	movf	??_fround+6,w
  4302  01A6  00A9               	movwf	___flmul@b+3
  4303  01A7  0849               	movf	??_fround+5,w
  4304  01A8  00A8               	movwf	___flmul@b+2
  4305  01A9  0848               	movf	??_fround+4,w
  4306  01AA  00A7               	movwf	___flmul@b+1
  4307  01AB  0847               	movf	??_fround+3,w
  4308  01AC  00A6               	movwf	___flmul@b
  4309  01AD  0852               	movf	_fround$871+3,w
  4310  01AE  00AD               	movwf	___flmul@a+3
  4311  01AF  0851               	movf	_fround$871+2,w
  4312  01B0  00AC               	movwf	___flmul@a+2
  4313  01B1  0850               	movf	_fround$871+1,w
  4314  01B2  00AB               	movwf	___flmul@a+1
  4315  01B3  084F               	movf	_fround$871,w
  4316  01B4  00AA               	movwf	___flmul@a
  4317  01B5  120A  158A  21A2   	fcall	___flmul
  4318  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  4319  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  4320  01BA  0829               	movf	?___flmul+3,w
  4321  01BB  00C3               	movwf	?_fround+3
  4322  01BC  0828               	movf	?___flmul+2,w
  4323  01BD  00C2               	movwf	?_fround+2
  4324  01BE  0827               	movf	?___flmul+1,w
  4325  01BF  00C1               	movwf	?_fround+1
  4326  01C0  0826               	movf	?___flmul,w
  4327  01C1  00C0               	movwf	?_fround
  4328  01C2  0008               	return
  4329  01C3                     l2745:	
  4330                           
  4331                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  4332  01C3  303F               	movlw	63
  4333  01C4  00A9               	movwf	___flmul@b+3
  4334  01C5  3000               	movlw	0
  4335  01C6  00A8               	movwf	___flmul@b+2
  4336  01C7  3000               	movlw	0
  4337  01C8  00A7               	movwf	___flmul@b+1
  4338  01C9  3000               	movlw	0
  4339  01CA  00A6               	movwf	___flmul@b
  4340  01CB  0853               	movf	fround@prec,w
  4341  01CC  00C4               	movwf	??_fround
  4342  01CD  3001               	movlw	1
  4343  01CE                     u4315:	
  4344  01CE  1003               	clrc
  4345  01CF  0DC4               	rlf	??_fround,f
  4346  01D0  3EFF               	addlw	-1
  4347  01D1  1D03               	skipz
  4348  01D2  29CE               	goto	u4315
  4349  01D3  1003               	clrc
  4350  01D4  0D44               	rlf	??_fround,w
  4351  01D5  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4352  01D6  0084               	movwf	4
  4353  01D7  160A  118A  200A  120A  118A  	fcall	stringdir
  4354  01DC  00C5               	movwf	??_fround+1
  4355  01DD  160A  118A  200A  120A  118A  	fcall	stringdir
  4356  01E2  00C6               	movwf	??_fround+2
  4357  01E3  160A  118A  200A  120A  118A  	fcall	stringdir
  4358  01E8  00C7               	movwf	??_fround+3
  4359  01E9  160A  118A  200A  120A  118A  	fcall	stringdir
  4360  01EE  00C8               	movwf	??_fround+4
  4361  01EF  0848               	movf	??_fround+4,w
  4362  01F0  00AD               	movwf	___flmul@a+3
  4363  01F1  0847               	movf	??_fround+3,w
  4364  01F2  00AC               	movwf	___flmul@a+2
  4365  01F3  0846               	movf	??_fround+2,w
  4366  01F4  00AB               	movwf	___flmul@a+1
  4367  01F5  0845               	movf	??_fround+1,w
  4368  01F6  00AA               	movwf	___flmul@a
  4369  01F7  120A  158A  21A2   	fcall	___flmul
  4370  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  4371  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  4372  01FC  0829               	movf	?___flmul+3,w
  4373  01FD  00C3               	movwf	?_fround+3
  4374  01FE  0828               	movf	?___flmul+2,w
  4375  01FF  00C2               	movwf	?_fround+2
  4376  0200  0827               	movf	?___flmul+1,w
  4377  0201  00C1               	movwf	?_fround+1
  4378  0202  0826               	movf	?___flmul,w
  4379  0203  00C0               	movwf	?_fround
  4380  0204  0008               	return
  4381  0205                     __end_of_fround:	
  4382                           
  4383                           	psect	text7
  4384  1E04                     __ptext7:	
  4385 ;; *************** function ___lwmod *****************
  4386 ;; Defined at:
  4387 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;  divisor         2    0[COMMON] unsigned int 
  4390 ;;  dividend        2    2[COMMON] unsigned int 
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;  counter         1    5[COMMON] unsigned char 
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  2    0[COMMON] unsigned int 
  4395 ;; Registers used:
  4396 ;;		wreg, status,2, status,0
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4402 ;;      Params:         4       0       0       0       0
  4403 ;;      Locals:         1       0       0       0       0
  4404 ;;      Temps:          1       0       0       0       0
  4405 ;;      Totals:         6       0       0       0       0
  4406 ;;Total ram usage:        6 bytes
  4407 ;; Hardware stack levels used:    1
  4408 ;; This function calls:
  4409 ;;		Nothing
  4410 ;; This function is called by:
  4411 ;;		_fround
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415                           
  4416                           ;psect for function ___lwmod
  4417  1E04                     ___lwmod:	
  4418                           
  4419                           ;incstack = 0
  4420                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4421  1E04  0870               	movf	___lwmod@divisor,w
  4422  1E05  0471               	iorwf	___lwmod@divisor+1,w
  4423  1E06  1903               	btfsc	3,2
  4424  1E07  2E31               	goto	l2363
  4425  1E08  01F5               	clrf	___lwmod@counter
  4426  1E09  0AF5               	incf	___lwmod@counter,f
  4427  1E0A                     l2353:	
  4428  1E0A  1BF1               	btfsc	___lwmod@divisor+1,7
  4429  1E0B  2E18               	goto	l2355
  4430  1E0C  3001               	movlw	1
  4431  1E0D                     u3355:	
  4432  1E0D  1003               	clrc
  4433  1E0E  0DF0               	rlf	___lwmod@divisor,f
  4434  1E0F  0DF1               	rlf	___lwmod@divisor+1,f
  4435  1E10  3EFF               	addlw	-1
  4436  1E11  1D03               	skipz
  4437  1E12  2E0D               	goto	u3355
  4438  1E13  3001               	movlw	1
  4439  1E14  00F4               	movwf	??___lwmod
  4440  1E15  0874               	movf	??___lwmod,w
  4441  1E16  07F5               	addwf	___lwmod@counter,f
  4442  1E17  2E0A               	goto	l2353
  4443  1E18                     l2355:	
  4444  1E18  0871               	movf	___lwmod@divisor+1,w
  4445  1E19  0273               	subwf	___lwmod@dividend+1,w
  4446  1E1A  1D03               	skipz
  4447  1E1B  2E1E               	goto	u3375
  4448  1E1C  0870               	movf	___lwmod@divisor,w
  4449  1E1D  0272               	subwf	___lwmod@dividend,w
  4450  1E1E                     u3375:	
  4451  1E1E  1C03               	skipc
  4452  1E1F  2E26               	goto	l2359
  4453  1E20  0870               	movf	___lwmod@divisor,w
  4454  1E21  02F2               	subwf	___lwmod@dividend,f
  4455  1E22  0871               	movf	___lwmod@divisor+1,w
  4456  1E23  1C03               	skipc
  4457  1E24  03F3               	decf	___lwmod@dividend+1,f
  4458  1E25  02F3               	subwf	___lwmod@dividend+1,f
  4459  1E26                     l2359:	
  4460  1E26  3001               	movlw	1
  4461  1E27                     u3385:	
  4462  1E27  1003               	clrc
  4463  1E28  0CF1               	rrf	___lwmod@divisor+1,f
  4464  1E29  0CF0               	rrf	___lwmod@divisor,f
  4465  1E2A  3EFF               	addlw	-1
  4466  1E2B  1D03               	skipz
  4467  1E2C  2E27               	goto	u3385
  4468  1E2D  3001               	movlw	1
  4469  1E2E  02F5               	subwf	___lwmod@counter,f
  4470  1E2F  1D03               	btfss	3,2
  4471  1E30  2E18               	goto	l2355
  4472  1E31                     l2363:	
  4473  1E31  0873               	movf	___lwmod@dividend+1,w
  4474  1E32  00F1               	movwf	?___lwmod+1
  4475  1E33  0872               	movf	___lwmod@dividend,w
  4476  1E34  00F0               	movwf	?___lwmod
  4477  1E35  0008               	return
  4478  1E36                     __end_of___lwmod:	
  4479                           
  4480                           	psect	text8
  4481  1EA8                     __ptext8:	
  4482 ;; *************** function ___lwdiv *****************
  4483 ;; Defined at:
  4484 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  divisor         2    6[COMMON] unsigned int 
  4487 ;;  dividend        2    8[COMMON] unsigned int 
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;  quotient        2   11[COMMON] unsigned int 
  4490 ;;  counter         1   13[COMMON] unsigned char 
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  2    6[COMMON] unsigned int 
  4493 ;; Registers used:
  4494 ;;		wreg, status,2, status,0
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4500 ;;      Params:         4       0       0       0       0
  4501 ;;      Locals:         3       0       0       0       0
  4502 ;;      Temps:          1       0       0       0       0
  4503 ;;      Totals:         8       0       0       0       0
  4504 ;;Total ram usage:        8 bytes
  4505 ;; Hardware stack levels used:    1
  4506 ;; This function calls:
  4507 ;;		Nothing
  4508 ;; This function is called by:
  4509 ;;		_fround
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           
  4514                           ;psect for function ___lwdiv
  4515  1EA8                     ___lwdiv:	
  4516                           
  4517                           ;incstack = 0
  4518                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4519  1EA8  01FB               	clrf	___lwdiv@quotient
  4520  1EA9  01FC               	clrf	___lwdiv@quotient+1
  4521  1EAA  0876               	movf	___lwdiv@divisor,w
  4522  1EAB  0477               	iorwf	___lwdiv@divisor+1,w
  4523  1EAC  1903               	btfsc	3,2
  4524  1EAD  2EDF               	goto	l2341
  4525  1EAE  01FD               	clrf	___lwdiv@counter
  4526  1EAF  0AFD               	incf	___lwdiv@counter,f
  4527  1EB0                     l2329:	
  4528  1EB0  1BF7               	btfsc	___lwdiv@divisor+1,7
  4529  1EB1  2EBE               	goto	l2331
  4530  1EB2  3001               	movlw	1
  4531  1EB3                     u3285:	
  4532  1EB3  1003               	clrc
  4533  1EB4  0DF6               	rlf	___lwdiv@divisor,f
  4534  1EB5  0DF7               	rlf	___lwdiv@divisor+1,f
  4535  1EB6  3EFF               	addlw	-1
  4536  1EB7  1D03               	skipz
  4537  1EB8  2EB3               	goto	u3285
  4538  1EB9  3001               	movlw	1
  4539  1EBA  00FA               	movwf	??___lwdiv
  4540  1EBB  087A               	movf	??___lwdiv,w
  4541  1EBC  07FD               	addwf	___lwdiv@counter,f
  4542  1EBD  2EB0               	goto	l2329
  4543  1EBE                     l2331:	
  4544  1EBE  3001               	movlw	1
  4545  1EBF                     u3305:	
  4546  1EBF  1003               	clrc
  4547  1EC0  0DFB               	rlf	___lwdiv@quotient,f
  4548  1EC1  0DFC               	rlf	___lwdiv@quotient+1,f
  4549  1EC2  3EFF               	addlw	-1
  4550  1EC3  1D03               	skipz
  4551  1EC4  2EBF               	goto	u3305
  4552  1EC5  0877               	movf	___lwdiv@divisor+1,w
  4553  1EC6  0279               	subwf	___lwdiv@dividend+1,w
  4554  1EC7  1D03               	skipz
  4555  1EC8  2ECB               	goto	u3315
  4556  1EC9  0876               	movf	___lwdiv@divisor,w
  4557  1ECA  0278               	subwf	___lwdiv@dividend,w
  4558  1ECB                     u3315:	
  4559  1ECB  1C03               	skipc
  4560  1ECC  2ED4               	goto	l2337
  4561  1ECD  0876               	movf	___lwdiv@divisor,w
  4562  1ECE  02F8               	subwf	___lwdiv@dividend,f
  4563  1ECF  0877               	movf	___lwdiv@divisor+1,w
  4564  1ED0  1C03               	skipc
  4565  1ED1  03F9               	decf	___lwdiv@dividend+1,f
  4566  1ED2  02F9               	subwf	___lwdiv@dividend+1,f
  4567  1ED3  147B               	bsf	___lwdiv@quotient,0
  4568  1ED4                     l2337:	
  4569  1ED4  3001               	movlw	1
  4570  1ED5                     u3325:	
  4571  1ED5  1003               	clrc
  4572  1ED6  0CF7               	rrf	___lwdiv@divisor+1,f
  4573  1ED7  0CF6               	rrf	___lwdiv@divisor,f
  4574  1ED8  3EFF               	addlw	-1
  4575  1ED9  1D03               	skipz
  4576  1EDA  2ED5               	goto	u3325
  4577  1EDB  3001               	movlw	1
  4578  1EDC  02FD               	subwf	___lwdiv@counter,f
  4579  1EDD  1D03               	btfss	3,2
  4580  1EDE  2EBE               	goto	l2331
  4581  1EDF                     l2341:	
  4582  1EDF  087C               	movf	___lwdiv@quotient+1,w
  4583  1EE0  00F7               	movwf	?___lwdiv+1
  4584  1EE1  087B               	movf	___lwdiv@quotient,w
  4585  1EE2  00F6               	movwf	?___lwdiv
  4586  1EE3  0008               	return
  4587  1EE4                     __end_of___lwdiv:	
  4588                           
  4589                           	psect	text9
  4590  09A2                     __ptext9:	
  4591 ;; *************** function ___flmul *****************
  4592 ;; Defined at:
  4593 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;  b               4    6[BANK0 ] unsigned int 
  4596 ;;  a               4   10[BANK0 ] unsigned int 
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;  prod            4   26[BANK0 ] struct .
  4599 ;;  grs             4   20[BANK0 ] unsigned long 
  4600 ;;  temp            2   30[BANK0 ] struct .
  4601 ;;  bexp            1   25[BANK0 ] unsigned char 
  4602 ;;  aexp            1   24[BANK0 ] unsigned char 
  4603 ;;  sign            1   19[BANK0 ] unsigned char 
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  4    6[BANK0 ] unsigned char 
  4606 ;; Registers used:
  4607 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4613 ;;      Params:         0       8       0       0       0
  4614 ;;      Locals:         0      13       0       0       0
  4615 ;;      Temps:          0       5       0       0       0
  4616 ;;      Totals:         0      26       0       0       0
  4617 ;;Total ram usage:       26 bytes
  4618 ;; Hardware stack levels used:    1
  4619 ;; Hardware stack levels required when called:    1
  4620 ;; This function calls:
  4621 ;;		__Umul8_16
  4622 ;; This function is called by:
  4623 ;;		_main
  4624 ;;		_fround
  4625 ;;		_scale
  4626 ;;		_sprintf
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629                           
  4630                           
  4631                           ;psect for function ___flmul
  4632  09A2                     ___flmul:	
  4633                           
  4634                           ;incstack = 0
  4635                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4636  09A2  1283               	bcf	3,5	;RP0=0, select bank0
  4637  09A3  1303               	bcf	3,6	;RP1=0, select bank0
  4638  09A4  0829               	movf	___flmul@b+3,w
  4639  09A5  3980               	andlw	128
  4640  09A6  00AE               	movwf	??___flmul
  4641  09A7  082E               	movf	??___flmul,w
  4642  09A8  00B3               	movwf	___flmul@sign
  4643  09A9  0829               	movf	___flmul@b+3,w
  4644  09AA  00AE               	movwf	??___flmul
  4645  09AB  072E               	addwf	??___flmul,w
  4646  09AC  00AF               	movwf	??___flmul+1
  4647  09AD  082F               	movf	??___flmul+1,w
  4648  09AE  00B9               	movwf	___flmul@bexp
  4649  09AF  1BA8               	btfsc	___flmul@b+2,7
  4650  09B0  1439               	bsf	___flmul@bexp,0
  4651  09B1  0839               	movf	___flmul@bexp,w
  4652  09B2  1903               	btfsc	3,2
  4653  09B3  29C1               	goto	l2577
  4654  09B4  0A39               	incf	___flmul@bexp,w
  4655  09B5  1D03               	btfss	3,2
  4656  09B6  29BF               	goto	l2575
  4657  09B7  3000               	movlw	0
  4658  09B8  00A9               	movwf	___flmul@b+3
  4659  09B9  3000               	movlw	0
  4660  09BA  00A8               	movwf	___flmul@b+2
  4661  09BB  3000               	movlw	0
  4662  09BC  00A7               	movwf	___flmul@b+1
  4663  09BD  3000               	movlw	0
  4664  09BE  00A6               	movwf	___flmul@b
  4665  09BF                     l2575:	
  4666  09BF  17A8               	bsf	___flmul@b+2,7
  4667  09C0  29C9               	goto	l2579
  4668  09C1                     l2577:	
  4669  09C1  3000               	movlw	0
  4670  09C2  00A9               	movwf	___flmul@b+3
  4671  09C3  3000               	movlw	0
  4672  09C4  00A8               	movwf	___flmul@b+2
  4673  09C5  3000               	movlw	0
  4674  09C6  00A7               	movwf	___flmul@b+1
  4675  09C7  3000               	movlw	0
  4676  09C8  00A6               	movwf	___flmul@b
  4677  09C9                     l2579:	
  4678  09C9  082D               	movf	___flmul@a+3,w
  4679  09CA  3980               	andlw	128
  4680  09CB  00AE               	movwf	??___flmul
  4681  09CC  082E               	movf	??___flmul,w
  4682  09CD  06B3               	xorwf	___flmul@sign,f
  4683  09CE  082D               	movf	___flmul@a+3,w
  4684  09CF  00AE               	movwf	??___flmul
  4685  09D0  072E               	addwf	??___flmul,w
  4686  09D1  00AF               	movwf	??___flmul+1
  4687  09D2  082F               	movf	??___flmul+1,w
  4688  09D3  00B8               	movwf	___flmul@aexp
  4689  09D4  1BAC               	btfsc	___flmul@a+2,7
  4690  09D5  1438               	bsf	___flmul@aexp,0
  4691  09D6  0838               	movf	___flmul@aexp,w
  4692  09D7  1903               	btfsc	3,2
  4693  09D8  29E6               	goto	l2595
  4694  09D9  0A38               	incf	___flmul@aexp,w
  4695  09DA  1D03               	btfss	3,2
  4696  09DB  29E4               	goto	l2593
  4697  09DC  3000               	movlw	0
  4698  09DD  00AD               	movwf	___flmul@a+3
  4699  09DE  3000               	movlw	0
  4700  09DF  00AC               	movwf	___flmul@a+2
  4701  09E0  3000               	movlw	0
  4702  09E1  00AB               	movwf	___flmul@a+1
  4703  09E2  3000               	movlw	0
  4704  09E3  00AA               	movwf	___flmul@a
  4705  09E4                     l2593:	
  4706  09E4  17AC               	bsf	___flmul@a+2,7
  4707  09E5  29EE               	goto	l2597
  4708  09E6                     l2595:	
  4709  09E6  3000               	movlw	0
  4710  09E7  00AD               	movwf	___flmul@a+3
  4711  09E8  3000               	movlw	0
  4712  09E9  00AC               	movwf	___flmul@a+2
  4713  09EA  3000               	movlw	0
  4714  09EB  00AB               	movwf	___flmul@a+1
  4715  09EC  3000               	movlw	0
  4716  09ED  00AA               	movwf	___flmul@a
  4717  09EE                     l2597:	
  4718  09EE  0838               	movf	___flmul@aexp,w
  4719  09EF  1D03               	btfss	3,2
  4720  09F0  0839               	movf	___flmul@bexp,w
  4721  09F1  1D03               	btfss	3,2
  4722  09F2  29FC               	goto	l2605
  4723  09F3  3000               	movlw	0
  4724  09F4  00A9               	movwf	?___flmul+3
  4725  09F5  3000               	movlw	0
  4726  09F6  00A8               	movwf	?___flmul+2
  4727  09F7  3000               	movlw	0
  4728  09F8  00A7               	movwf	?___flmul+1
  4729  09F9  3000               	movlw	0
  4730  09FA  00A6               	movwf	?___flmul
  4731  09FB  0008               	return
  4732  09FC                     l2605:	
  4733  09FC  0826               	movf	___flmul@b,w
  4734  09FD  00AE               	movwf	??___flmul
  4735  09FE  082E               	movf	??___flmul,w
  4736  09FF  00F0               	movwf	__Umul8_16@multiplicand
  4737  0A00  082C               	movf	___flmul@a+2,w
  4738  0A01  160A  158A  25E1  120A  158A  	fcall	__Umul8_16
  4739  0A06  0871               	movf	?__Umul8_16+1,w
  4740  0A07  1283               	bcf	3,5	;RP0=0, select bank0
  4741  0A08  1303               	bcf	3,6	;RP1=0, select bank0
  4742  0A09  00BF               	movwf	___flmul@temp+1
  4743  0A0A  0870               	movf	?__Umul8_16,w
  4744  0A0B  00BE               	movwf	___flmul@temp
  4745  0A0C  083E               	movf	___flmul@temp,w
  4746  0A0D  00AE               	movwf	??___flmul
  4747  0A0E  01AF               	clrf	??___flmul+1
  4748  0A0F  01B0               	clrf	??___flmul+2
  4749  0A10  01B1               	clrf	??___flmul+3
  4750  0A11  0831               	movf	??___flmul+3,w
  4751  0A12  00B7               	movwf	___flmul@grs+3
  4752  0A13  0830               	movf	??___flmul+2,w
  4753  0A14  00B6               	movwf	___flmul@grs+2
  4754  0A15  082F               	movf	??___flmul+1,w
  4755  0A16  00B5               	movwf	___flmul@grs+1
  4756  0A17  082E               	movf	??___flmul,w
  4757  0A18  00B4               	movwf	___flmul@grs
  4758  0A19  083F               	movf	___flmul@temp+1,w
  4759  0A1A  00AE               	movwf	??___flmul
  4760  0A1B  01AF               	clrf	??___flmul+1
  4761  0A1C  01B0               	clrf	??___flmul+2
  4762  0A1D  01B1               	clrf	??___flmul+3
  4763  0A1E  0831               	movf	??___flmul+3,w
  4764  0A1F  00BD               	movwf	___flmul@prod+3
  4765  0A20  0830               	movf	??___flmul+2,w
  4766  0A21  00BC               	movwf	___flmul@prod+2
  4767  0A22  082F               	movf	??___flmul+1,w
  4768  0A23  00BB               	movwf	___flmul@prod+1
  4769  0A24  082E               	movf	??___flmul,w
  4770  0A25  00BA               	movwf	___flmul@prod
  4771  0A26  0827               	movf	___flmul@b+1,w
  4772  0A27  00AE               	movwf	??___flmul
  4773  0A28  082E               	movf	??___flmul,w
  4774  0A29  00F0               	movwf	__Umul8_16@multiplicand
  4775  0A2A  082B               	movf	___flmul@a+1,w
  4776  0A2B  160A  158A  25E1  120A  158A  	fcall	__Umul8_16
  4777  0A30  0871               	movf	?__Umul8_16+1,w
  4778  0A31  1283               	bcf	3,5	;RP0=0, select bank0
  4779  0A32  1303               	bcf	3,6	;RP1=0, select bank0
  4780  0A33  00BF               	movwf	___flmul@temp+1
  4781  0A34  0870               	movf	?__Umul8_16,w
  4782  0A35  00BE               	movwf	___flmul@temp
  4783  0A36  083E               	movf	___flmul@temp,w
  4784  0A37  00AE               	movwf	??___flmul
  4785  0A38  01AF               	clrf	??___flmul+1
  4786  0A39  01B0               	clrf	??___flmul+2
  4787  0A3A  01B1               	clrf	??___flmul+3
  4788  0A3B  082E               	movf	??___flmul,w
  4789  0A3C  07B4               	addwf	___flmul@grs,f
  4790  0A3D  082F               	movf	??___flmul+1,w
  4791  0A3E  1103               	clrz
  4792  0A3F  1803               	skipnc
  4793  0A40  3E01               	addlw	1
  4794  0A41  1D03               	btfss	3,2
  4795  0A42  07B5               	addwf	___flmul@grs+1,f
  4796  0A43  0830               	movf	??___flmul+2,w
  4797  0A44  1103               	clrz
  4798  0A45  1803               	skipnc
  4799  0A46  3E01               	addlw	1
  4800  0A47  1D03               	btfss	3,2
  4801  0A48  07B6               	addwf	___flmul@grs+2,f
  4802  0A49  0831               	movf	??___flmul+3,w
  4803  0A4A  1103               	clrz
  4804  0A4B  1803               	skipnc
  4805  0A4C  3E01               	addlw	1
  4806  0A4D  1D03               	btfss	3,2
  4807  0A4E  07B7               	addwf	___flmul@grs+3,f
  4808  0A4F  083F               	movf	___flmul@temp+1,w
  4809  0A50  00AE               	movwf	??___flmul
  4810  0A51  01AF               	clrf	??___flmul+1
  4811  0A52  01B0               	clrf	??___flmul+2
  4812  0A53  01B1               	clrf	??___flmul+3
  4813  0A54  082E               	movf	??___flmul,w
  4814  0A55  07BA               	addwf	___flmul@prod,f
  4815  0A56  082F               	movf	??___flmul+1,w
  4816  0A57  1103               	clrz
  4817  0A58  1803               	skipnc
  4818  0A59  3E01               	addlw	1
  4819  0A5A  1D03               	btfss	3,2
  4820  0A5B  07BB               	addwf	___flmul@prod+1,f
  4821  0A5C  0830               	movf	??___flmul+2,w
  4822  0A5D  1103               	clrz
  4823  0A5E  1803               	skipnc
  4824  0A5F  3E01               	addlw	1
  4825  0A60  1D03               	btfss	3,2
  4826  0A61  07BC               	addwf	___flmul@prod+2,f
  4827  0A62  0831               	movf	??___flmul+3,w
  4828  0A63  1103               	clrz
  4829  0A64  1803               	skipnc
  4830  0A65  3E01               	addlw	1
  4831  0A66  1D03               	btfss	3,2
  4832  0A67  07BD               	addwf	___flmul@prod+3,f
  4833  0A68  0828               	movf	___flmul@b+2,w
  4834  0A69  00AE               	movwf	??___flmul
  4835  0A6A  082E               	movf	??___flmul,w
  4836  0A6B  00F0               	movwf	__Umul8_16@multiplicand
  4837  0A6C  082A               	movf	___flmul@a,w
  4838  0A6D  160A  158A  25E1  120A  158A  	fcall	__Umul8_16
  4839  0A72  0871               	movf	?__Umul8_16+1,w
  4840  0A73  1283               	bcf	3,5	;RP0=0, select bank0
  4841  0A74  1303               	bcf	3,6	;RP1=0, select bank0
  4842  0A75  00BF               	movwf	___flmul@temp+1
  4843  0A76  0870               	movf	?__Umul8_16,w
  4844  0A77  00BE               	movwf	___flmul@temp
  4845  0A78  083E               	movf	___flmul@temp,w
  4846  0A79  00AE               	movwf	??___flmul
  4847  0A7A  01AF               	clrf	??___flmul+1
  4848  0A7B  01B0               	clrf	??___flmul+2
  4849  0A7C  01B1               	clrf	??___flmul+3
  4850  0A7D  082E               	movf	??___flmul,w
  4851  0A7E  07B4               	addwf	___flmul@grs,f
  4852  0A7F  082F               	movf	??___flmul+1,w
  4853  0A80  1103               	clrz
  4854  0A81  1803               	skipnc
  4855  0A82  3E01               	addlw	1
  4856  0A83  1D03               	btfss	3,2
  4857  0A84  07B5               	addwf	___flmul@grs+1,f
  4858  0A85  0830               	movf	??___flmul+2,w
  4859  0A86  1103               	clrz
  4860  0A87  1803               	skipnc
  4861  0A88  3E01               	addlw	1
  4862  0A89  1D03               	btfss	3,2
  4863  0A8A  07B6               	addwf	___flmul@grs+2,f
  4864  0A8B  0831               	movf	??___flmul+3,w
  4865  0A8C  1103               	clrz
  4866  0A8D  1803               	skipnc
  4867  0A8E  3E01               	addlw	1
  4868  0A8F  1D03               	btfss	3,2
  4869  0A90  07B7               	addwf	___flmul@grs+3,f
  4870  0A91  083F               	movf	___flmul@temp+1,w
  4871  0A92  00AE               	movwf	??___flmul
  4872  0A93  01AF               	clrf	??___flmul+1
  4873  0A94  01B0               	clrf	??___flmul+2
  4874  0A95  01B1               	clrf	??___flmul+3
  4875  0A96  082E               	movf	??___flmul,w
  4876  0A97  07BA               	addwf	___flmul@prod,f
  4877  0A98  082F               	movf	??___flmul+1,w
  4878  0A99  1103               	clrz
  4879  0A9A  1803               	skipnc
  4880  0A9B  3E01               	addlw	1
  4881  0A9C  1D03               	btfss	3,2
  4882  0A9D  07BB               	addwf	___flmul@prod+1,f
  4883  0A9E  0830               	movf	??___flmul+2,w
  4884  0A9F  1103               	clrz
  4885  0AA0  1803               	skipnc
  4886  0AA1  3E01               	addlw	1
  4887  0AA2  1D03               	btfss	3,2
  4888  0AA3  07BC               	addwf	___flmul@prod+2,f
  4889  0AA4  0831               	movf	??___flmul+3,w
  4890  0AA5  1103               	clrz
  4891  0AA6  1803               	skipnc
  4892  0AA7  3E01               	addlw	1
  4893  0AA8  1D03               	btfss	3,2
  4894  0AA9  07BD               	addwf	___flmul@prod+3,f
  4895  0AAA  3008               	movlw	8
  4896  0AAB  00AE               	movwf	??___flmul
  4897  0AAC                     u3985:	
  4898  0AAC  1003               	clrc
  4899  0AAD  0DB4               	rlf	___flmul@grs,f
  4900  0AAE  0DB5               	rlf	___flmul@grs+1,f
  4901  0AAF  0DB6               	rlf	___flmul@grs+2,f
  4902  0AB0  0DB7               	rlf	___flmul@grs+3,f
  4903  0AB1  0BAE               	decfsz	??___flmul,f
  4904  0AB2  2AAC               	goto	u3985
  4905  0AB3  0827               	movf	___flmul@b+1,w
  4906  0AB4  00AE               	movwf	??___flmul
  4907  0AB5  082E               	movf	??___flmul,w
  4908  0AB6  00F0               	movwf	__Umul8_16@multiplicand
  4909  0AB7  082A               	movf	___flmul@a,w
  4910  0AB8  160A  158A  25E1  120A  158A  	fcall	__Umul8_16
  4911  0ABD  0871               	movf	?__Umul8_16+1,w
  4912  0ABE  1283               	bcf	3,5	;RP0=0, select bank0
  4913  0ABF  1303               	bcf	3,6	;RP1=0, select bank0
  4914  0AC0  00BF               	movwf	___flmul@temp+1
  4915  0AC1  0870               	movf	?__Umul8_16,w
  4916  0AC2  00BE               	movwf	___flmul@temp
  4917  0AC3  083E               	movf	___flmul@temp,w
  4918  0AC4  00AE               	movwf	??___flmul
  4919  0AC5  083F               	movf	___flmul@temp+1,w
  4920  0AC6  00AF               	movwf	??___flmul+1
  4921  0AC7  01B0               	clrf	??___flmul+2
  4922  0AC8  01B1               	clrf	??___flmul+3
  4923  0AC9  082E               	movf	??___flmul,w
  4924  0ACA  07B4               	addwf	___flmul@grs,f
  4925  0ACB  082F               	movf	??___flmul+1,w
  4926  0ACC  1103               	clrz
  4927  0ACD  1803               	skipnc
  4928  0ACE  3E01               	addlw	1
  4929  0ACF  1D03               	btfss	3,2
  4930  0AD0  07B5               	addwf	___flmul@grs+1,f
  4931  0AD1  0830               	movf	??___flmul+2,w
  4932  0AD2  1103               	clrz
  4933  0AD3  1803               	skipnc
  4934  0AD4  3E01               	addlw	1
  4935  0AD5  1D03               	btfss	3,2
  4936  0AD6  07B6               	addwf	___flmul@grs+2,f
  4937  0AD7  0831               	movf	??___flmul+3,w
  4938  0AD8  1103               	clrz
  4939  0AD9  1803               	skipnc
  4940  0ADA  3E01               	addlw	1
  4941  0ADB  1D03               	btfss	3,2
  4942  0ADC  07B7               	addwf	___flmul@grs+3,f
  4943  0ADD  0826               	movf	___flmul@b,w
  4944  0ADE  00AE               	movwf	??___flmul
  4945  0ADF  082E               	movf	??___flmul,w
  4946  0AE0  00F0               	movwf	__Umul8_16@multiplicand
  4947  0AE1  082B               	movf	___flmul@a+1,w
  4948  0AE2  160A  158A  25E1  120A  158A  	fcall	__Umul8_16
  4949  0AE7  0871               	movf	?__Umul8_16+1,w
  4950  0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  4951  0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  4952  0AEA  00BF               	movwf	___flmul@temp+1
  4953  0AEB  0870               	movf	?__Umul8_16,w
  4954  0AEC  00BE               	movwf	___flmul@temp
  4955  0AED  083E               	movf	___flmul@temp,w
  4956  0AEE  00AE               	movwf	??___flmul
  4957  0AEF  083F               	movf	___flmul@temp+1,w
  4958  0AF0  00AF               	movwf	??___flmul+1
  4959  0AF1  01B0               	clrf	??___flmul+2
  4960  0AF2  01B1               	clrf	??___flmul+3
  4961  0AF3  082E               	movf	??___flmul,w
  4962  0AF4  07B4               	addwf	___flmul@grs,f
  4963  0AF5  082F               	movf	??___flmul+1,w
  4964  0AF6  1103               	clrz
  4965  0AF7  1803               	skipnc
  4966  0AF8  3E01               	addlw	1
  4967  0AF9  1D03               	btfss	3,2
  4968  0AFA  07B5               	addwf	___flmul@grs+1,f
  4969  0AFB  0830               	movf	??___flmul+2,w
  4970  0AFC  1103               	clrz
  4971  0AFD  1803               	skipnc
  4972  0AFE  3E01               	addlw	1
  4973  0AFF  1D03               	btfss	3,2
  4974  0B00  07B6               	addwf	___flmul@grs+2,f
  4975  0B01  0831               	movf	??___flmul+3,w
  4976  0B02  1103               	clrz
  4977  0B03  1803               	skipnc
  4978  0B04  3E01               	addlw	1
  4979  0B05  1D03               	btfss	3,2
  4980  0B06  07B7               	addwf	___flmul@grs+3,f
  4981  0B07  3008               	movlw	8
  4982  0B08  00AE               	movwf	??___flmul
  4983  0B09                     u4015:	
  4984  0B09  1003               	clrc
  4985  0B0A  0DB4               	rlf	___flmul@grs,f
  4986  0B0B  0DB5               	rlf	___flmul@grs+1,f
  4987  0B0C  0DB6               	rlf	___flmul@grs+2,f
  4988  0B0D  0DB7               	rlf	___flmul@grs+3,f
  4989  0B0E  0BAE               	decfsz	??___flmul,f
  4990  0B0F  2B09               	goto	u4015
  4991  0B10  0826               	movf	___flmul@b,w
  4992  0B11  00AE               	movwf	??___flmul
  4993  0B12  082E               	movf	??___flmul,w
  4994  0B13  00F0               	movwf	__Umul8_16@multiplicand
  4995  0B14  082A               	movf	___flmul@a,w
  4996  0B15  160A  158A  25E1  120A  158A  	fcall	__Umul8_16
  4997  0B1A  0871               	movf	?__Umul8_16+1,w
  4998  0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  4999  0B1C  1303               	bcf	3,6	;RP1=0, select bank0
  5000  0B1D  00BF               	movwf	___flmul@temp+1
  5001  0B1E  0870               	movf	?__Umul8_16,w
  5002  0B1F  00BE               	movwf	___flmul@temp
  5003  0B20  083E               	movf	___flmul@temp,w
  5004  0B21  00AE               	movwf	??___flmul
  5005  0B22  083F               	movf	___flmul@temp+1,w
  5006  0B23  00AF               	movwf	??___flmul+1
  5007  0B24  01B0               	clrf	??___flmul+2
  5008  0B25  01B1               	clrf	??___flmul+3
  5009  0B26  082E               	movf	??___flmul,w
  5010  0B27  07B4               	addwf	___flmul@grs,f
  5011  0B28  082F               	movf	??___flmul+1,w
  5012  0B29  1103               	clrz
  5013  0B2A  1803               	skipnc
  5014  0B2B  3E01               	addlw	1
  5015  0B2C  1D03               	btfss	3,2
  5016  0B2D  07B5               	addwf	___flmul@grs+1,f
  5017  0B2E  0830               	movf	??___flmul+2,w
  5018  0B2F  1103               	clrz
  5019  0B30  1803               	skipnc
  5020  0B31  3E01               	addlw	1
  5021  0B32  1D03               	btfss	3,2
  5022  0B33  07B6               	addwf	___flmul@grs+2,f
  5023  0B34  0831               	movf	??___flmul+3,w
  5024  0B35  1103               	clrz
  5025  0B36  1803               	skipnc
  5026  0B37  3E01               	addlw	1
  5027  0B38  1D03               	btfss	3,2
  5028  0B39  07B7               	addwf	___flmul@grs+3,f
  5029  0B3A  0827               	movf	___flmul@b+1,w
  5030  0B3B  00AE               	movwf	??___flmul
  5031  0B3C  082E               	movf	??___flmul,w
  5032  0B3D  00F0               	movwf	__Umul8_16@multiplicand
  5033  0B3E  082C               	movf	___flmul@a+2,w
  5034  0B3F  160A  158A  25E1  120A  158A  	fcall	__Umul8_16
  5035  0B44  0871               	movf	?__Umul8_16+1,w
  5036  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  5037  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  5038  0B47  00BF               	movwf	___flmul@temp+1
  5039  0B48  0870               	movf	?__Umul8_16,w
  5040  0B49  00BE               	movwf	___flmul@temp
  5041  0B4A  083E               	movf	___flmul@temp,w
  5042  0B4B  00AE               	movwf	??___flmul
  5043  0B4C  083F               	movf	___flmul@temp+1,w
  5044  0B4D  00AF               	movwf	??___flmul+1
  5045  0B4E  01B0               	clrf	??___flmul+2
  5046  0B4F  01B1               	clrf	??___flmul+3
  5047  0B50  082E               	movf	??___flmul,w
  5048  0B51  07BA               	addwf	___flmul@prod,f
  5049  0B52  082F               	movf	??___flmul+1,w
  5050  0B53  1103               	clrz
  5051  0B54  1803               	skipnc
  5052  0B55  3E01               	addlw	1
  5053  0B56  1D03               	btfss	3,2
  5054  0B57  07BB               	addwf	___flmul@prod+1,f
  5055  0B58  0830               	movf	??___flmul+2,w
  5056  0B59  1103               	clrz
  5057  0B5A  1803               	skipnc
  5058  0B5B  3E01               	addlw	1
  5059  0B5C  1D03               	btfss	3,2
  5060  0B5D  07BC               	addwf	___flmul@prod+2,f
  5061  0B5E  0831               	movf	??___flmul+3,w
  5062  0B5F  1103               	clrz
  5063  0B60  1803               	skipnc
  5064  0B61  3E01               	addlw	1
  5065  0B62  1D03               	btfss	3,2
  5066  0B63  07BD               	addwf	___flmul@prod+3,f
  5067  0B64  0828               	movf	___flmul@b+2,w
  5068  0B65  00AE               	movwf	??___flmul
  5069  0B66  082E               	movf	??___flmul,w
  5070  0B67  00F0               	movwf	__Umul8_16@multiplicand
  5071  0B68  082B               	movf	___flmul@a+1,w
  5072  0B69  160A  158A  25E1  120A  158A  	fcall	__Umul8_16
  5073  0B6E  0871               	movf	?__Umul8_16+1,w
  5074  0B6F  1283               	bcf	3,5	;RP0=0, select bank0
  5075  0B70  1303               	bcf	3,6	;RP1=0, select bank0
  5076  0B71  00BF               	movwf	___flmul@temp+1
  5077  0B72  0870               	movf	?__Umul8_16,w
  5078  0B73  00BE               	movwf	___flmul@temp
  5079  0B74  083E               	movf	___flmul@temp,w
  5080  0B75  00AE               	movwf	??___flmul
  5081  0B76  083F               	movf	___flmul@temp+1,w
  5082  0B77  00AF               	movwf	??___flmul+1
  5083  0B78  01B0               	clrf	??___flmul+2
  5084  0B79  01B1               	clrf	??___flmul+3
  5085  0B7A  082E               	movf	??___flmul,w
  5086  0B7B  07BA               	addwf	___flmul@prod,f
  5087  0B7C  082F               	movf	??___flmul+1,w
  5088  0B7D  1103               	clrz
  5089  0B7E  1803               	skipnc
  5090  0B7F  3E01               	addlw	1
  5091  0B80  1D03               	btfss	3,2
  5092  0B81  07BB               	addwf	___flmul@prod+1,f
  5093  0B82  0830               	movf	??___flmul+2,w
  5094  0B83  1103               	clrz
  5095  0B84  1803               	skipnc
  5096  0B85  3E01               	addlw	1
  5097  0B86  1D03               	btfss	3,2
  5098  0B87  07BC               	addwf	___flmul@prod+2,f
  5099  0B88  0831               	movf	??___flmul+3,w
  5100  0B89  1103               	clrz
  5101  0B8A  1803               	skipnc
  5102  0B8B  3E01               	addlw	1
  5103  0B8C  1D03               	btfss	3,2
  5104  0B8D  07BD               	addwf	___flmul@prod+3,f
  5105  0B8E  0828               	movf	___flmul@b+2,w
  5106  0B8F  00AE               	movwf	??___flmul
  5107  0B90  082E               	movf	??___flmul,w
  5108  0B91  00F0               	movwf	__Umul8_16@multiplicand
  5109  0B92  082C               	movf	___flmul@a+2,w
  5110  0B93  160A  158A  25E1  120A  158A  	fcall	__Umul8_16
  5111  0B98  0871               	movf	?__Umul8_16+1,w
  5112  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  5113  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  5114  0B9B  00BF               	movwf	___flmul@temp+1
  5115  0B9C  0870               	movf	?__Umul8_16,w
  5116  0B9D  00BE               	movwf	___flmul@temp
  5117  0B9E  083E               	movf	___flmul@temp,w
  5118  0B9F  00AE               	movwf	??___flmul
  5119  0BA0  083F               	movf	___flmul@temp+1,w
  5120  0BA1  00AF               	movwf	??___flmul+1
  5121  0BA2  01B0               	clrf	??___flmul+2
  5122  0BA3  01B1               	clrf	??___flmul+3
  5123  0BA4  3008               	movlw	8
  5124  0BA5                     u4055:	
  5125  0BA5  1003               	clrc
  5126  0BA6  0DAE               	rlf	??___flmul,f
  5127  0BA7  0DAF               	rlf	??___flmul+1,f
  5128  0BA8  0DB0               	rlf	??___flmul+2,f
  5129  0BA9  0DB1               	rlf	??___flmul+3,f
  5130  0BAA  3EFF               	addlw	-1
  5131  0BAB  1D03               	skipz
  5132  0BAC  2BA5               	goto	u4055
  5133  0BAD  082E               	movf	??___flmul,w
  5134  0BAE  07BA               	addwf	___flmul@prod,f
  5135  0BAF  082F               	movf	??___flmul+1,w
  5136  0BB0  1103               	clrz
  5137  0BB1  1803               	skipnc
  5138  0BB2  3E01               	addlw	1
  5139  0BB3  1D03               	btfss	3,2
  5140  0BB4  07BB               	addwf	___flmul@prod+1,f
  5141  0BB5  0830               	movf	??___flmul+2,w
  5142  0BB6  1103               	clrz
  5143  0BB7  1803               	skipnc
  5144  0BB8  3E01               	addlw	1
  5145  0BB9  1D03               	btfss	3,2
  5146  0BBA  07BC               	addwf	___flmul@prod+2,f
  5147  0BBB  0831               	movf	??___flmul+3,w
  5148  0BBC  1103               	clrz
  5149  0BBD  1803               	skipnc
  5150  0BBE  3E01               	addlw	1
  5151  0BBF  1D03               	btfss	3,2
  5152  0BC0  07BD               	addwf	___flmul@prod+3,f
  5153  0BC1  0834               	movf	___flmul@grs,w
  5154  0BC2  00AE               	movwf	??___flmul
  5155  0BC3  0835               	movf	___flmul@grs+1,w
  5156  0BC4  00AF               	movwf	??___flmul+1
  5157  0BC5  0836               	movf	___flmul@grs+2,w
  5158  0BC6  00B0               	movwf	??___flmul+2
  5159  0BC7  0837               	movf	___flmul@grs+3,w
  5160  0BC8  00B1               	movwf	??___flmul+3
  5161  0BC9  3018               	movlw	24
  5162  0BCA                     u4075:	
  5163  0BCA  1003               	clrc
  5164  0BCB  0CB1               	rrf	??___flmul+3,f
  5165  0BCC  0CB0               	rrf	??___flmul+2,f
  5166  0BCD  0CAF               	rrf	??___flmul+1,f
  5167  0BCE  0CAE               	rrf	??___flmul,f
  5168  0BCF  3EFF               	addlw	-1
  5169  0BD0  1D03               	skipz
  5170  0BD1  2BCA               	goto	u4075
  5171  0BD2  082E               	movf	??___flmul,w
  5172  0BD3  07BA               	addwf	___flmul@prod,f
  5173  0BD4  082F               	movf	??___flmul+1,w
  5174  0BD5  1103               	clrz
  5175  0BD6  1803               	skipnc
  5176  0BD7  3E01               	addlw	1
  5177  0BD8  1D03               	btfss	3,2
  5178  0BD9  07BB               	addwf	___flmul@prod+1,f
  5179  0BDA  0830               	movf	??___flmul+2,w
  5180  0BDB  1103               	clrz
  5181  0BDC  1803               	skipnc
  5182  0BDD  3E01               	addlw	1
  5183  0BDE  1D03               	btfss	3,2
  5184  0BDF  07BC               	addwf	___flmul@prod+2,f
  5185  0BE0  0831               	movf	??___flmul+3,w
  5186  0BE1  1103               	clrz
  5187  0BE2  1803               	skipnc
  5188  0BE3  3E01               	addlw	1
  5189  0BE4  1D03               	btfss	3,2
  5190  0BE5  07BD               	addwf	___flmul@prod+3,f
  5191  0BE6  3008               	movlw	8
  5192  0BE7  00AE               	movwf	??___flmul
  5193  0BE8                     u4095:	
  5194  0BE8  1003               	clrc
  5195  0BE9  0DB4               	rlf	___flmul@grs,f
  5196  0BEA  0DB5               	rlf	___flmul@grs+1,f
  5197  0BEB  0DB6               	rlf	___flmul@grs+2,f
  5198  0BEC  0DB7               	rlf	___flmul@grs+3,f
  5199  0BED  0BAE               	decfsz	??___flmul,f
  5200  0BEE  2BE8               	goto	u4095
  5201  0BEF  0839               	movf	___flmul@bexp,w
  5202  0BF0  0738               	addwf	___flmul@aexp,w
  5203  0BF1  00AE               	movwf	??___flmul
  5204  0BF2  01AF               	clrf	??___flmul+1
  5205  0BF3  0DAF               	rlf	??___flmul+1,f
  5206  0BF4  082E               	movf	??___flmul,w
  5207  0BF5  3E82               	addlw	130
  5208  0BF6  00BE               	movwf	___flmul@temp
  5209  0BF7  082F               	movf	??___flmul+1,w
  5210  0BF8  1803               	skipnc
  5211  0BF9  3E01               	addlw	1
  5212  0BFA  3EFF               	addlw	255
  5213  0BFB  00BF               	movwf	___flmul@temp+1
  5214  0BFC                     l2657:	
  5215  0BFC  1BBC               	btfsc	___flmul@prod+2,7
  5216  0BFD  2C19               	goto	l2659
  5217  0BFE  3001               	movlw	1
  5218  0BFF  00AE               	movwf	??___flmul
  5219  0C00                     u4105:	
  5220  0C00  1003               	clrc
  5221  0C01  0DBA               	rlf	___flmul@prod,f
  5222  0C02  0DBB               	rlf	___flmul@prod+1,f
  5223  0C03  0DBC               	rlf	___flmul@prod+2,f
  5224  0C04  0DBD               	rlf	___flmul@prod+3,f
  5225  0C05  0BAE               	decfsz	??___flmul,f
  5226  0C06  2C00               	goto	u4105
  5227  0C07  1BB7               	btfsc	___flmul@grs+3,7
  5228  0C08  143A               	bsf	___flmul@prod,0
  5229  0C09  3001               	movlw	1
  5230  0C0A  00AE               	movwf	??___flmul
  5231  0C0B                     u4125:	
  5232  0C0B  1003               	clrc
  5233  0C0C  0DB4               	rlf	___flmul@grs,f
  5234  0C0D  0DB5               	rlf	___flmul@grs+1,f
  5235  0C0E  0DB6               	rlf	___flmul@grs+2,f
  5236  0C0F  0DB7               	rlf	___flmul@grs+3,f
  5237  0C10  0BAE               	decfsz	??___flmul,f
  5238  0C11  2C0B               	goto	u4125
  5239  0C12  30FF               	movlw	255
  5240  0C13  07BE               	addwf	___flmul@temp,f
  5241  0C14  1803               	skipnc
  5242  0C15  0ABF               	incf	___flmul@temp+1,f
  5243  0C16  30FF               	movlw	255
  5244  0C17  07BF               	addwf	___flmul@temp+1,f
  5245  0C18  2BFC               	goto	l2657
  5246  0C19                     l2659:	
  5247  0C19  01B8               	clrf	___flmul@aexp
  5248  0C1A  1FB7               	btfss	___flmul@grs+3,7
  5249  0C1B  2C32               	goto	l2669
  5250  0C1C  30FF               	movlw	255
  5251  0C1D  0534               	andwf	___flmul@grs,w
  5252  0C1E  00AE               	movwf	??___flmul
  5253  0C1F  30FF               	movlw	255
  5254  0C20  0535               	andwf	___flmul@grs+1,w
  5255  0C21  00AF               	movwf	??___flmul+1
  5256  0C22  30FF               	movlw	255
  5257  0C23  0536               	andwf	___flmul@grs+2,w
  5258  0C24  00B0               	movwf	??___flmul+2
  5259  0C25  307F               	movlw	127
  5260  0C26  0537               	andwf	___flmul@grs+3,w
  5261  0C27  00B1               	movwf	??___flmul+3
  5262  0C28  0831               	movf	??___flmul+3,w
  5263  0C29  0430               	iorwf	??___flmul+2,w
  5264  0C2A  042F               	iorwf	??___flmul+1,w
  5265  0C2B  042E               	iorwf	??___flmul,w
  5266  0C2C  1903               	skipnz
  5267  0C2D  183A               	btfsc	___flmul@prod,0
  5268  0C2E  2C30               	goto	l2665
  5269  0C2F  2C32               	goto	l2669
  5270  0C30                     l2665:	
  5271  0C30  01B8               	clrf	___flmul@aexp
  5272  0C31  0AB8               	incf	___flmul@aexp,f
  5273  0C32                     l2669:	
  5274  0C32  0838               	movf	___flmul@aexp,w
  5275  0C33  1903               	btfsc	3,2
  5276  0C34  2C64               	goto	l2679
  5277  0C35  3001               	movlw	1
  5278  0C36  07BA               	addwf	___flmul@prod,f
  5279  0C37  3000               	movlw	0
  5280  0C38  1803               	skipnc
  5281  0C39  3001               	movlw	1
  5282  0C3A  07BB               	addwf	___flmul@prod+1,f
  5283  0C3B  3000               	movlw	0
  5284  0C3C  1803               	skipnc
  5285  0C3D  3001               	movlw	1
  5286  0C3E  07BC               	addwf	___flmul@prod+2,f
  5287  0C3F  3000               	movlw	0
  5288  0C40  1803               	skipnc
  5289  0C41  3001               	movlw	1
  5290  0C42  07BD               	addwf	___flmul@prod+3,f
  5291  0C43  1C3D               	btfss	___flmul@prod+3,0
  5292  0C44  2C64               	goto	l2679
  5293  0C45  083A               	movf	___flmul@prod,w
  5294  0C46  00AE               	movwf	??___flmul
  5295  0C47  083B               	movf	___flmul@prod+1,w
  5296  0C48  00AF               	movwf	??___flmul+1
  5297  0C49  083C               	movf	___flmul@prod+2,w
  5298  0C4A  00B0               	movwf	??___flmul+2
  5299  0C4B  083D               	movf	___flmul@prod+3,w
  5300  0C4C  00B1               	movwf	??___flmul+3
  5301  0C4D  3001               	movlw	1
  5302  0C4E  00B2               	movwf	??___flmul+4
  5303  0C4F                     u4195:	
  5304  0C4F  0D31               	rlf	??___flmul+3,w
  5305  0C50  0CB1               	rrf	??___flmul+3,f
  5306  0C51  0CB0               	rrf	??___flmul+2,f
  5307  0C52  0CAF               	rrf	??___flmul+1,f
  5308  0C53  0CAE               	rrf	??___flmul,f
  5309  0C54  0BB2               	decfsz	??___flmul+4,f
  5310  0C55  2C4F               	goto	u4195
  5311  0C56  0831               	movf	??___flmul+3,w
  5312  0C57  00BD               	movwf	___flmul@prod+3
  5313  0C58  0830               	movf	??___flmul+2,w
  5314  0C59  00BC               	movwf	___flmul@prod+2
  5315  0C5A  082F               	movf	??___flmul+1,w
  5316  0C5B  00BB               	movwf	___flmul@prod+1
  5317  0C5C  082E               	movf	??___flmul,w
  5318  0C5D  00BA               	movwf	___flmul@prod
  5319  0C5E  3001               	movlw	1
  5320  0C5F  07BE               	addwf	___flmul@temp,f
  5321  0C60  1803               	skipnc
  5322  0C61  0ABF               	incf	___flmul@temp+1,f
  5323  0C62  3000               	movlw	0
  5324  0C63  07BF               	addwf	___flmul@temp+1,f
  5325  0C64                     l2679:	
  5326  0C64  083F               	movf	___flmul@temp+1,w
  5327  0C65  3A80               	xorlw	128
  5328  0C66  00FF               	movwf	127
  5329  0C67  3080               	movlw	128
  5330  0C68  027F               	subwf	127,w
  5331  0C69  1D03               	skipz
  5332  0C6A  2C6D               	goto	u4205
  5333  0C6B  30FF               	movlw	255
  5334  0C6C  023E               	subwf	___flmul@temp,w
  5335  0C6D                     u4205:	
  5336  0C6D  1C03               	skipc
  5337  0C6E  2C7A               	goto	l2683
  5338  0C6F  307F               	movlw	127
  5339  0C70  1283               	bcf	3,5	;RP0=0, select bank0
  5340  0C71  1303               	bcf	3,6	;RP1=0, select bank0
  5341  0C72  00BD               	movwf	___flmul@prod+3
  5342  0C73  3080               	movlw	128
  5343  0C74  00BC               	movwf	___flmul@prod+2
  5344  0C75  3000               	movlw	0
  5345  0C76  00BB               	movwf	___flmul@prod+1
  5346  0C77  3000               	movlw	0
  5347  0C78  00BA               	movwf	___flmul@prod
  5348  0C79  2CAA               	goto	l699
  5349  0C7A                     l2683:	
  5350  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  5351  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  5352  0C7C  083F               	movf	___flmul@temp+1,w
  5353  0C7D  3A80               	xorlw	128
  5354  0C7E  00FF               	movwf	127
  5355  0C7F  3080               	movlw	128
  5356  0C80  027F               	subwf	127,w
  5357  0C81  1D03               	skipz
  5358  0C82  2C85               	goto	u4215
  5359  0C83  3001               	movlw	1
  5360  0C84  023E               	subwf	___flmul@temp,w
  5361  0C85                     u4215:	
  5362  0C85  1803               	skipnc
  5363  0C86  2C93               	goto	l2689
  5364  0C87  3000               	movlw	0
  5365  0C88  1283               	bcf	3,5	;RP0=0, select bank0
  5366  0C89  1303               	bcf	3,6	;RP1=0, select bank0
  5367  0C8A  00BD               	movwf	___flmul@prod+3
  5368  0C8B  3000               	movlw	0
  5369  0C8C  00BC               	movwf	___flmul@prod+2
  5370  0C8D  3000               	movlw	0
  5371  0C8E  00BB               	movwf	___flmul@prod+1
  5372  0C8F  3000               	movlw	0
  5373  0C90  00BA               	movwf	___flmul@prod
  5374  0C91  01B3               	clrf	___flmul@sign
  5375  0C92  2CAA               	goto	l699
  5376  0C93                     l2689:	
  5377  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  5378  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  5379  0C95  083E               	movf	___flmul@temp,w
  5380  0C96  00AE               	movwf	??___flmul
  5381  0C97  082E               	movf	??___flmul,w
  5382  0C98  00B9               	movwf	___flmul@bexp
  5383  0C99  30FF               	movlw	255
  5384  0C9A  05BA               	andwf	___flmul@prod,f
  5385  0C9B  30FF               	movlw	255
  5386  0C9C  05BB               	andwf	___flmul@prod+1,f
  5387  0C9D  307F               	movlw	127
  5388  0C9E  05BC               	andwf	___flmul@prod+2,f
  5389  0C9F  3000               	movlw	0
  5390  0CA0  05BD               	andwf	___flmul@prod+3,f
  5391  0CA1  1839               	btfsc	___flmul@bexp,0
  5392  0CA2  17BC               	bsf	___flmul@prod+2,7
  5393  0CA3  0839               	movf	___flmul@bexp,w
  5394  0CA4  00AE               	movwf	??___flmul
  5395  0CA5  1003               	clrc
  5396  0CA6  0C2E               	rrf	??___flmul,w
  5397  0CA7  00AF               	movwf	??___flmul+1
  5398  0CA8  082F               	movf	??___flmul+1,w
  5399  0CA9  00BD               	movwf	___flmul@prod+3
  5400  0CAA                     l699:	
  5401  0CAA  0833               	movf	___flmul@sign,w
  5402  0CAB  00AE               	movwf	??___flmul
  5403  0CAC  082E               	movf	??___flmul,w
  5404  0CAD  04BD               	iorwf	___flmul@prod+3,f
  5405  0CAE  083D               	movf	___flmul@prod+3,w
  5406  0CAF  00A9               	movwf	?___flmul+3
  5407  0CB0  083C               	movf	___flmul@prod+2,w
  5408  0CB1  00A8               	movwf	?___flmul+2
  5409  0CB2  083B               	movf	___flmul@prod+1,w
  5410  0CB3  00A7               	movwf	?___flmul+1
  5411  0CB4  083A               	movf	___flmul@prod,w
  5412  0CB5  00A6               	movwf	?___flmul
  5413  0CB6  0008               	return
  5414  0CB7                     __end_of___flmul:	
  5415                           
  5416                           	psect	text10
  5417  1DE1                     __ptext10:	
  5418 ;; *************** function __Umul8_16 *****************
  5419 ;; Defined at:
  5420 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;  multiplier      1    wreg     unsigned char 
  5423 ;;  multiplicand    1    0[COMMON] unsigned char 
  5424 ;; Auto vars:     Size  Location     Type
  5425 ;;  multiplier      1    8[COMMON] unsigned char 
  5426 ;;  word_mpld       2    6[COMMON] unsigned int 
  5427 ;;  product         2    4[COMMON] unsigned int 
  5428 ;; Return value:  Size  Location     Type
  5429 ;;                  2    0[COMMON] unsigned int 
  5430 ;; Registers used:
  5431 ;;		wreg, status,2, status,0
  5432 ;; Tracked objects:
  5433 ;;		On entry : 0/0
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5437 ;;      Params:         2       0       0       0       0
  5438 ;;      Locals:         5       0       0       0       0
  5439 ;;      Temps:          2       0       0       0       0
  5440 ;;      Totals:         9       0       0       0       0
  5441 ;;Total ram usage:        9 bytes
  5442 ;; Hardware stack levels used:    1
  5443 ;; This function calls:
  5444 ;;		Nothing
  5445 ;; This function is called by:
  5446 ;;		___flmul
  5447 ;; This function uses a non-reentrant model
  5448 ;;
  5449                           
  5450                           
  5451                           ;psect for function __Umul8_16
  5452  1DE1                     __Umul8_16:	
  5453                           
  5454                           ;incstack = 0
  5455                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5456                           ;__Umul8_16@multiplier stored from wreg
  5457  1DE1  00F8               	movwf	__Umul8_16@multiplier
  5458  1DE2  01F4               	clrf	__Umul8_16@product
  5459  1DE3  01F5               	clrf	__Umul8_16@product+1
  5460  1DE4  0870               	movf	__Umul8_16@multiplicand,w
  5461  1DE5  00F2               	movwf	??__Umul8_16
  5462  1DE6  01F3               	clrf	??__Umul8_16+1
  5463  1DE7  0872               	movf	??__Umul8_16,w
  5464  1DE8  00F6               	movwf	__Umul8_16@word_mpld
  5465  1DE9  0873               	movf	??__Umul8_16+1,w
  5466  1DEA  00F7               	movwf	__Umul8_16@word_mpld+1
  5467  1DEB                     l2217:	
  5468  1DEB  1C78               	btfss	__Umul8_16@multiplier,0
  5469  1DEC  2DF3               	goto	l753
  5470  1DED  0876               	movf	__Umul8_16@word_mpld,w
  5471  1DEE  07F4               	addwf	__Umul8_16@product,f
  5472  1DEF  1803               	skipnc
  5473  1DF0  0AF5               	incf	__Umul8_16@product+1,f
  5474  1DF1  0877               	movf	__Umul8_16@word_mpld+1,w
  5475  1DF2  07F5               	addwf	__Umul8_16@product+1,f
  5476  1DF3                     l753:	
  5477  1DF3  3001               	movlw	1
  5478  1DF4                     u3025:	
  5479  1DF4  1003               	clrc
  5480  1DF5  0DF6               	rlf	__Umul8_16@word_mpld,f
  5481  1DF6  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5482  1DF7  3EFF               	addlw	-1
  5483  1DF8  1D03               	skipz
  5484  1DF9  2DF4               	goto	u3025
  5485  1DFA  1003               	clrc
  5486  1DFB  0CF8               	rrf	__Umul8_16@multiplier,f
  5487  1DFC  0878               	movf	__Umul8_16@multiplier,w
  5488  1DFD  1D03               	btfss	3,2
  5489  1DFE  2DEB               	goto	l2217
  5490  1DFF  0875               	movf	__Umul8_16@product+1,w
  5491  1E00  00F1               	movwf	?__Umul8_16+1
  5492  1E01  0874               	movf	__Umul8_16@product,w
  5493  1E02  00F0               	movwf	?__Umul8_16
  5494  1E03  0008               	return
  5495  1E04                     __end_of__Umul8_16:	
  5496                           
  5497                           	psect	text11
  5498  1385                     __ptext11:	
  5499 ;; *************** function __tdiv_to_l_ *****************
  5500 ;; Defined at:
  5501 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;  f1              4    0[COMMON] float 
  5504 ;;  f2              4    4[COMMON] float 
  5505 ;; Auto vars:     Size  Location     Type
  5506 ;;  quot            4    0[BANK0 ] unsigned long 
  5507 ;;  exp1            1    5[BANK0 ] unsigned char 
  5508 ;;  cntr            1    4[BANK0 ] unsigned char 
  5509 ;; Return value:  Size  Location     Type
  5510 ;;                  4    0[COMMON] unsigned long 
  5511 ;; Registers used:
  5512 ;;		wreg, status,2, status,0
  5513 ;; Tracked objects:
  5514 ;;		On entry : 0/0
  5515 ;;		On exit  : 0/0
  5516 ;;		Unchanged: 0/0
  5517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5518 ;;      Params:         8       0       0       0       0
  5519 ;;      Locals:         0       6       0       0       0
  5520 ;;      Temps:          4       0       0       0       0
  5521 ;;      Totals:        12       6       0       0       0
  5522 ;;Total ram usage:       18 bytes
  5523 ;; Hardware stack levels used:    1
  5524 ;; This function calls:
  5525 ;;		Nothing
  5526 ;; This function is called by:
  5527 ;;		_sprintf
  5528 ;; This function uses a non-reentrant model
  5529 ;;
  5530                           
  5531                           
  5532                           ;psect for function __tdiv_to_l_
  5533  1385                     __tdiv_to_l_:	
  5534                           
  5535                           ;incstack = 0
  5536                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5537  1385  0870               	movf	__tdiv_to_l_@f1,w
  5538  1386  00F8               	movwf	??__tdiv_to_l_
  5539  1387  0871               	movf	__tdiv_to_l_@f1+1,w
  5540  1388  00F9               	movwf	??__tdiv_to_l_+1
  5541  1389  0872               	movf	__tdiv_to_l_@f1+2,w
  5542  138A  00FA               	movwf	??__tdiv_to_l_+2
  5543  138B  1003               	clrc
  5544  138C  0D79               	rlf	??__tdiv_to_l_+1,w
  5545  138D  0D7A               	rlf	??__tdiv_to_l_+2,w
  5546  138E  00FB               	movwf	??__tdiv_to_l_+3
  5547  138F  087B               	movf	??__tdiv_to_l_+3,w
  5548  1390  1283               	bcf	3,5	;RP0=0, select bank0
  5549  1391  1303               	bcf	3,6	;RP1=0, select bank0
  5550  1392  00A5               	movwf	__tdiv_to_l_@exp1
  5551  1393  0825               	movf	__tdiv_to_l_@exp1,w
  5552  1394  1D03               	btfss	3,2
  5553  1395  2B9F               	goto	l2807
  5554  1396                     l2803:	
  5555  1396  3000               	movlw	0
  5556  1397  00F3               	movwf	?__tdiv_to_l_+3
  5557  1398  3000               	movlw	0
  5558  1399  00F2               	movwf	?__tdiv_to_l_+2
  5559  139A  3000               	movlw	0
  5560  139B  00F1               	movwf	?__tdiv_to_l_+1
  5561  139C  3000               	movlw	0
  5562  139D  00F0               	movwf	?__tdiv_to_l_
  5563  139E  0008               	return
  5564  139F                     l2807:	
  5565  139F  0874               	movf	__tdiv_to_l_@f2,w
  5566  13A0  00F8               	movwf	??__tdiv_to_l_
  5567  13A1  0875               	movf	__tdiv_to_l_@f2+1,w
  5568  13A2  00F9               	movwf	??__tdiv_to_l_+1
  5569  13A3  0876               	movf	__tdiv_to_l_@f2+2,w
  5570  13A4  00FA               	movwf	??__tdiv_to_l_+2
  5571  13A5  1003               	clrc
  5572  13A6  0D79               	rlf	??__tdiv_to_l_+1,w
  5573  13A7  0D7A               	rlf	??__tdiv_to_l_+2,w
  5574  13A8  00FB               	movwf	??__tdiv_to_l_+3
  5575  13A9  087B               	movf	??__tdiv_to_l_+3,w
  5576  13AA  00A4               	movwf	__tdiv_to_l_@cntr
  5577  13AB  0824               	movf	__tdiv_to_l_@cntr,w
  5578  13AC  1903               	btfsc	3,2
  5579  13AD  2B96               	goto	l2803
  5580  13AE  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5581  13AF  30FF               	movlw	255
  5582  13B0  05F0               	andwf	__tdiv_to_l_@f1,f
  5583  13B1  30FF               	movlw	255
  5584  13B2  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5585  13B3  3000               	movlw	0
  5586  13B4  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5587  13B5  17F5               	bsf	__tdiv_to_l_@f2+1,7
  5588  13B6  30FF               	movlw	255
  5589  13B7  05F4               	andwf	__tdiv_to_l_@f2,f
  5590  13B8  30FF               	movlw	255
  5591  13B9  05F5               	andwf	__tdiv_to_l_@f2+1,f
  5592  13BA  3000               	movlw	0
  5593  13BB  05F6               	andwf	__tdiv_to_l_@f2+2,f
  5594  13BC  3000               	movlw	0
  5595  13BD  00A3               	movwf	__tdiv_to_l_@quot+3
  5596  13BE  3000               	movlw	0
  5597  13BF  00A2               	movwf	__tdiv_to_l_@quot+2
  5598  13C0  3000               	movlw	0
  5599  13C1  00A1               	movwf	__tdiv_to_l_@quot+1
  5600  13C2  3000               	movlw	0
  5601  13C3  00A0               	movwf	__tdiv_to_l_@quot
  5602  13C4  307F               	movlw	127
  5603  13C5  02A5               	subwf	__tdiv_to_l_@exp1,f
  5604  13C6  3098               	movlw	152
  5605  13C7  0724               	addwf	__tdiv_to_l_@cntr,w
  5606  13C8  00F8               	movwf	??__tdiv_to_l_
  5607  13C9  0878               	movf	??__tdiv_to_l_,w
  5608  13CA  02A5               	subwf	__tdiv_to_l_@exp1,f
  5609  13CB  3018               	movlw	24
  5610  13CC  00F8               	movwf	??__tdiv_to_l_
  5611  13CD  0878               	movf	??__tdiv_to_l_,w
  5612  13CE  00A4               	movwf	__tdiv_to_l_@cntr
  5613  13CF                     l2821:	
  5614  13CF  3001               	movlw	1
  5615  13D0  00F8               	movwf	??__tdiv_to_l_
  5616  13D1                     u4535:	
  5617  13D1  1003               	clrc
  5618  13D2  0DA0               	rlf	__tdiv_to_l_@quot,f
  5619  13D3  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5620  13D4  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5621  13D5  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5622  13D6  0BF8               	decfsz	??__tdiv_to_l_,f
  5623  13D7  2BD1               	goto	u4535
  5624  13D8  0876               	movf	__tdiv_to_l_@f2+2,w
  5625  13D9  0272               	subwf	__tdiv_to_l_@f1+2,w
  5626  13DA  1D03               	skipz
  5627  13DB  2BE2               	goto	u4545
  5628  13DC  0875               	movf	__tdiv_to_l_@f2+1,w
  5629  13DD  0271               	subwf	__tdiv_to_l_@f1+1,w
  5630  13DE  1D03               	skipz
  5631  13DF  2BE2               	goto	u4545
  5632  13E0  0874               	movf	__tdiv_to_l_@f2,w
  5633  13E1  0270               	subwf	__tdiv_to_l_@f1,w
  5634  13E2                     u4545:	
  5635  13E2  1C03               	skipc
  5636  13E3  2BEF               	goto	l2829
  5637  13E4  0874               	movf	__tdiv_to_l_@f2,w
  5638  13E5  02F0               	subwf	__tdiv_to_l_@f1,f
  5639  13E6  0875               	movf	__tdiv_to_l_@f2+1,w
  5640  13E7  1C03               	skipc
  5641  13E8  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  5642  13E9  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5643  13EA  0876               	movf	__tdiv_to_l_@f2+2,w
  5644  13EB  1C03               	skipc
  5645  13EC  0A76               	incf	__tdiv_to_l_@f2+2,w
  5646  13ED  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5647  13EE  1420               	bsf	__tdiv_to_l_@quot,0
  5648  13EF                     l2829:	
  5649  13EF  3001               	movlw	1
  5650  13F0                     u4555:	
  5651  13F0  1003               	clrc
  5652  13F1  0DF0               	rlf	__tdiv_to_l_@f1,f
  5653  13F2  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5654  13F3  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5655  13F4  3EFF               	addlw	-1
  5656  13F5  1D03               	skipz
  5657  13F6  2BF0               	goto	u4555
  5658  13F7  3001               	movlw	1
  5659  13F8  02A4               	subwf	__tdiv_to_l_@cntr,f
  5660  13F9  1D03               	btfss	3,2
  5661  13FA  2BCF               	goto	l2821
  5662  13FB  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5663  13FC  2C12               	goto	l2841
  5664  13FD  0825               	movf	__tdiv_to_l_@exp1,w
  5665  13FE  3A80               	xorlw	128
  5666  13FF  3E97               	addlw	151
  5667  1400  1C03               	btfss	3,0
  5668  1401  2B96               	goto	l2803
  5669  1402                     l2839:	
  5670  1402  3001               	movlw	1
  5671  1403                     u4595:	
  5672  1403  1003               	clrc
  5673  1404  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5674  1405  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5675  1406  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5676  1407  0CA0               	rrf	__tdiv_to_l_@quot,f
  5677  1408  3EFF               	addlw	-1
  5678  1409  1D03               	skipz
  5679  140A  2C03               	goto	u4595
  5680  140B  3001               	movlw	1
  5681  140C  00F8               	movwf	??__tdiv_to_l_
  5682  140D  0878               	movf	??__tdiv_to_l_,w
  5683  140E  07A5               	addwf	__tdiv_to_l_@exp1,f
  5684  140F  1903               	btfsc	3,2
  5685  1410  2C25               	goto	l2849
  5686  1411  2C02               	goto	l2839
  5687  1412                     l2841:	
  5688  1412  3018               	movlw	24
  5689  1413  0225               	subwf	__tdiv_to_l_@exp1,w
  5690  1414  1803               	btfsc	3,0
  5691  1415  2B96               	goto	l2803
  5692  1416                     l492:	
  5693  1416  0825               	movf	__tdiv_to_l_@exp1,w
  5694  1417  1903               	btfsc	3,2
  5695  1418  2C25               	goto	l2849
  5696  1419  3001               	movlw	1
  5697  141A  00F8               	movwf	??__tdiv_to_l_
  5698  141B                     u4625:	
  5699  141B  1003               	clrc
  5700  141C  0DA0               	rlf	__tdiv_to_l_@quot,f
  5701  141D  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5702  141E  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5703  141F  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5704  1420  0BF8               	decfsz	??__tdiv_to_l_,f
  5705  1421  2C1B               	goto	u4625
  5706  1422  3001               	movlw	1
  5707  1423  02A5               	subwf	__tdiv_to_l_@exp1,f
  5708  1424  2C16               	goto	l492
  5709  1425                     l2849:	
  5710  1425  0823               	movf	__tdiv_to_l_@quot+3,w
  5711  1426  00F3               	movwf	?__tdiv_to_l_+3
  5712  1427  0822               	movf	__tdiv_to_l_@quot+2,w
  5713  1428  00F2               	movwf	?__tdiv_to_l_+2
  5714  1429  0821               	movf	__tdiv_to_l_@quot+1,w
  5715  142A  00F1               	movwf	?__tdiv_to_l_+1
  5716  142B  0820               	movf	__tdiv_to_l_@quot,w
  5717  142C  00F0               	movwf	?__tdiv_to_l_
  5718  142D  0008               	return
  5719  142E                     __end_of__tdiv_to_l_:	
  5720                           
  5721                           	psect	text12
  5722  080F                     __ptext12:	
  5723 ;; *************** function __div_to_l_ *****************
  5724 ;; Defined at:
  5725 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;  f1              4    0[COMMON] unsigned long 
  5728 ;;  f2              4    4[COMMON] unsigned long 
  5729 ;; Auto vars:     Size  Location     Type
  5730 ;;  quot            4    0[BANK0 ] unsigned long 
  5731 ;;  exp1            1    5[BANK0 ] unsigned char 
  5732 ;;  cntr            1    4[BANK0 ] unsigned char 
  5733 ;; Return value:  Size  Location     Type
  5734 ;;                  4    0[COMMON] unsigned long 
  5735 ;; Registers used:
  5736 ;;		wreg, status,2, status,0
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5742 ;;      Params:         8       0       0       0       0
  5743 ;;      Locals:         0       6       0       0       0
  5744 ;;      Temps:          1       0       0       0       0
  5745 ;;      Totals:         9       6       0       0       0
  5746 ;;Total ram usage:       15 bytes
  5747 ;; Hardware stack levels used:    1
  5748 ;; This function calls:
  5749 ;;		Nothing
  5750 ;; This function is called by:
  5751 ;;		_sprintf
  5752 ;; This function uses a non-reentrant model
  5753 ;;
  5754                           
  5755                           
  5756                           ;psect for function __div_to_l_
  5757  080F                     __div_to_l_:	
  5758                           
  5759                           ;incstack = 0
  5760                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5761  080F  1003               	clrc
  5762  0810  0D72               	rlf	__div_to_l_@f1+2,w
  5763  0811  0D73               	rlf	__div_to_l_@f1+3,w
  5764  0812  00F8               	movwf	??__div_to_l_
  5765  0813  0878               	movf	??__div_to_l_,w
  5766  0814  1283               	bcf	3,5	;RP0=0, select bank0
  5767  0815  1303               	bcf	3,6	;RP1=0, select bank0
  5768  0816  00A5               	movwf	__div_to_l_@exp1
  5769  0817  0825               	movf	__div_to_l_@exp1,w
  5770  0818  1D03               	btfss	3,2
  5771  0819  2823               	goto	l2859
  5772  081A                     l2855:	
  5773  081A  3000               	movlw	0
  5774  081B  00F3               	movwf	?__div_to_l_+3
  5775  081C  3000               	movlw	0
  5776  081D  00F2               	movwf	?__div_to_l_+2
  5777  081E  3000               	movlw	0
  5778  081F  00F1               	movwf	?__div_to_l_+1
  5779  0820  3000               	movlw	0
  5780  0821  00F0               	movwf	?__div_to_l_
  5781  0822  0008               	return
  5782  0823                     l2859:	
  5783  0823  1003               	clrc
  5784  0824  0D76               	rlf	__div_to_l_@f2+2,w
  5785  0825  0D77               	rlf	__div_to_l_@f2+3,w
  5786  0826  00F8               	movwf	??__div_to_l_
  5787  0827  0878               	movf	??__div_to_l_,w
  5788  0828  00A4               	movwf	__div_to_l_@cntr
  5789  0829  0824               	movf	__div_to_l_@cntr,w
  5790  082A  1903               	btfsc	3,2
  5791  082B  281A               	goto	l2855
  5792  082C  17F2               	bsf	__div_to_l_@f1+2,7
  5793  082D  30FF               	movlw	255
  5794  082E  05F0               	andwf	__div_to_l_@f1,f
  5795  082F  30FF               	movlw	255
  5796  0830  05F1               	andwf	__div_to_l_@f1+1,f
  5797  0831  30FF               	movlw	255
  5798  0832  05F2               	andwf	__div_to_l_@f1+2,f
  5799  0833  3000               	movlw	0
  5800  0834  05F3               	andwf	__div_to_l_@f1+3,f
  5801  0835  17F6               	bsf	__div_to_l_@f2+2,7
  5802  0836  30FF               	movlw	255
  5803  0837  05F4               	andwf	__div_to_l_@f2,f
  5804  0838  30FF               	movlw	255
  5805  0839  05F5               	andwf	__div_to_l_@f2+1,f
  5806  083A  30FF               	movlw	255
  5807  083B  05F6               	andwf	__div_to_l_@f2+2,f
  5808  083C  3000               	movlw	0
  5809  083D  05F7               	andwf	__div_to_l_@f2+3,f
  5810  083E  3000               	movlw	0
  5811  083F  00A3               	movwf	__div_to_l_@quot+3
  5812  0840  3000               	movlw	0
  5813  0841  00A2               	movwf	__div_to_l_@quot+2
  5814  0842  3000               	movlw	0
  5815  0843  00A1               	movwf	__div_to_l_@quot+1
  5816  0844  3000               	movlw	0
  5817  0845  00A0               	movwf	__div_to_l_@quot
  5818  0846  307F               	movlw	127
  5819  0847  02A5               	subwf	__div_to_l_@exp1,f
  5820  0848  30A0               	movlw	160
  5821  0849  0724               	addwf	__div_to_l_@cntr,w
  5822  084A  00F8               	movwf	??__div_to_l_
  5823  084B  0878               	movf	??__div_to_l_,w
  5824  084C  02A5               	subwf	__div_to_l_@exp1,f
  5825  084D  3020               	movlw	32
  5826  084E  00F8               	movwf	??__div_to_l_
  5827  084F  0878               	movf	??__div_to_l_,w
  5828  0850  00A4               	movwf	__div_to_l_@cntr
  5829  0851                     l2873:	
  5830  0851  3001               	movlw	1
  5831  0852  00F8               	movwf	??__div_to_l_
  5832  0853                     u4665:	
  5833  0853  1003               	clrc
  5834  0854  0DA0               	rlf	__div_to_l_@quot,f
  5835  0855  0DA1               	rlf	__div_to_l_@quot+1,f
  5836  0856  0DA2               	rlf	__div_to_l_@quot+2,f
  5837  0857  0DA3               	rlf	__div_to_l_@quot+3,f
  5838  0858  0BF8               	decfsz	??__div_to_l_,f
  5839  0859  2853               	goto	u4665
  5840  085A  0877               	movf	__div_to_l_@f2+3,w
  5841  085B  0273               	subwf	__div_to_l_@f1+3,w
  5842  085C  1D03               	skipz
  5843  085D  2868               	goto	u4675
  5844  085E  0876               	movf	__div_to_l_@f2+2,w
  5845  085F  0272               	subwf	__div_to_l_@f1+2,w
  5846  0860  1D03               	skipz
  5847  0861  2868               	goto	u4675
  5848  0862  0875               	movf	__div_to_l_@f2+1,w
  5849  0863  0271               	subwf	__div_to_l_@f1+1,w
  5850  0864  1D03               	skipz
  5851  0865  2868               	goto	u4675
  5852  0866  0874               	movf	__div_to_l_@f2,w
  5853  0867  0270               	subwf	__div_to_l_@f1,w
  5854  0868                     u4675:	
  5855  0868  1C03               	skipc
  5856  0869  2879               	goto	l2881
  5857  086A  0874               	movf	__div_to_l_@f2,w
  5858  086B  02F0               	subwf	__div_to_l_@f1,f
  5859  086C  0875               	movf	__div_to_l_@f2+1,w
  5860  086D  1C03               	skipc
  5861  086E  0F75               	incfsz	__div_to_l_@f2+1,w
  5862  086F  02F1               	subwf	__div_to_l_@f1+1,f
  5863  0870  0876               	movf	__div_to_l_@f2+2,w
  5864  0871  1C03               	skipc
  5865  0872  0F76               	incfsz	__div_to_l_@f2+2,w
  5866  0873  02F2               	subwf	__div_to_l_@f1+2,f
  5867  0874  0877               	movf	__div_to_l_@f2+3,w
  5868  0875  1C03               	skipc
  5869  0876  0F77               	incfsz	__div_to_l_@f2+3,w
  5870  0877  02F3               	subwf	__div_to_l_@f1+3,f
  5871  0878  1420               	bsf	__div_to_l_@quot,0
  5872  0879                     l2881:	
  5873  0879  3001               	movlw	1
  5874  087A  00F8               	movwf	??__div_to_l_
  5875  087B                     u4685:	
  5876  087B  1003               	clrc
  5877  087C  0DF0               	rlf	__div_to_l_@f1,f
  5878  087D  0DF1               	rlf	__div_to_l_@f1+1,f
  5879  087E  0DF2               	rlf	__div_to_l_@f1+2,f
  5880  087F  0DF3               	rlf	__div_to_l_@f1+3,f
  5881  0880  0BF8               	decfsz	??__div_to_l_,f
  5882  0881  287B               	goto	u4685
  5883  0882  3001               	movlw	1
  5884  0883  02A4               	subwf	__div_to_l_@cntr,f
  5885  0884  1D03               	btfss	3,2
  5886  0885  2851               	goto	l2873
  5887  0886  1FA5               	btfss	__div_to_l_@exp1,7
  5888  0887  289D               	goto	l2893
  5889  0888  0825               	movf	__div_to_l_@exp1,w
  5890  0889  3A80               	xorlw	128
  5891  088A  3E9F               	addlw	159
  5892  088B  1C03               	btfss	3,0
  5893  088C  281A               	goto	l2855
  5894  088D                     l2891:	
  5895  088D  3001               	movlw	1
  5896  088E                     u4725:	
  5897  088E  1003               	clrc
  5898  088F  0CA3               	rrf	__div_to_l_@quot+3,f
  5899  0890  0CA2               	rrf	__div_to_l_@quot+2,f
  5900  0891  0CA1               	rrf	__div_to_l_@quot+1,f
  5901  0892  0CA0               	rrf	__div_to_l_@quot,f
  5902  0893  3EFF               	addlw	-1
  5903  0894  1D03               	skipz
  5904  0895  288E               	goto	u4725
  5905  0896  3001               	movlw	1
  5906  0897  00F8               	movwf	??__div_to_l_
  5907  0898  0878               	movf	??__div_to_l_,w
  5908  0899  07A5               	addwf	__div_to_l_@exp1,f
  5909  089A  1903               	btfsc	3,2
  5910  089B  28B0               	goto	l2901
  5911  089C  288D               	goto	l2891
  5912  089D                     l2893:	
  5913  089D  3020               	movlw	32
  5914  089E  0225               	subwf	__div_to_l_@exp1,w
  5915  089F  1803               	btfsc	3,0
  5916  08A0  281A               	goto	l2855
  5917  08A1                     l445:	
  5918  08A1  0825               	movf	__div_to_l_@exp1,w
  5919  08A2  1903               	btfsc	3,2
  5920  08A3  28B0               	goto	l2901
  5921  08A4  3001               	movlw	1
  5922  08A5  00F8               	movwf	??__div_to_l_
  5923  08A6                     u4755:	
  5924  08A6  1003               	clrc
  5925  08A7  0DA0               	rlf	__div_to_l_@quot,f
  5926  08A8  0DA1               	rlf	__div_to_l_@quot+1,f
  5927  08A9  0DA2               	rlf	__div_to_l_@quot+2,f
  5928  08AA  0DA3               	rlf	__div_to_l_@quot+3,f
  5929  08AB  0BF8               	decfsz	??__div_to_l_,f
  5930  08AC  28A6               	goto	u4755
  5931  08AD  3001               	movlw	1
  5932  08AE  02A5               	subwf	__div_to_l_@exp1,f
  5933  08AF  28A1               	goto	l445
  5934  08B0                     l2901:	
  5935  08B0  0823               	movf	__div_to_l_@quot+3,w
  5936  08B1  00F3               	movwf	?__div_to_l_+3
  5937  08B2  0822               	movf	__div_to_l_@quot+2,w
  5938  08B3  00F2               	movwf	?__div_to_l_+2
  5939  08B4  0821               	movf	__div_to_l_@quot+1,w
  5940  08B5  00F1               	movwf	?__div_to_l_+1
  5941  08B6  0820               	movf	__div_to_l_@quot,w
  5942  08B7  00F0               	movwf	?__div_to_l_
  5943  08B8  0008               	return
  5944  08B9                     __end_of__div_to_l_:	
  5945                           
  5946                           	psect	text13
  5947  12E0                     __ptext13:	
  5948 ;; *************** function ___xxtofl *****************
  5949 ;; Defined at:
  5950 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  5951 ;; Parameters:    Size  Location     Type
  5952 ;;  sign            1    wreg     unsigned char 
  5953 ;;  val             4    4[COMMON] long 
  5954 ;; Auto vars:     Size  Location     Type
  5955 ;;  sign            1    0[BANK0 ] unsigned char 
  5956 ;;  arg             4    2[BANK0 ] unsigned long 
  5957 ;;  exp             1    1[BANK0 ] unsigned char 
  5958 ;; Return value:  Size  Location     Type
  5959 ;;                  4    4[COMMON] unsigned char 
  5960 ;; Registers used:
  5961 ;;		wreg, status,2, status,0
  5962 ;; Tracked objects:
  5963 ;;		On entry : 0/0
  5964 ;;		On exit  : 0/0
  5965 ;;		Unchanged: 0/0
  5966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5967 ;;      Params:         4       0       0       0       0
  5968 ;;      Locals:         0       6       0       0       0
  5969 ;;      Temps:          4       0       0       0       0
  5970 ;;      Totals:         8       6       0       0       0
  5971 ;;Total ram usage:       14 bytes
  5972 ;; Hardware stack levels used:    1
  5973 ;; This function calls:
  5974 ;;		Nothing
  5975 ;; This function is called by:
  5976 ;;		_main
  5977 ;;		_sprintf
  5978 ;; This function uses a non-reentrant model
  5979 ;;
  5980                           
  5981                           
  5982                           ;psect for function ___xxtofl
  5983  12E0                     ___xxtofl:	
  5984                           
  5985                           ;incstack = 0
  5986                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5987                           ;___xxtofl@sign stored from wreg
  5988  12E0  1283               	bcf	3,5	;RP0=0, select bank0
  5989  12E1  1303               	bcf	3,6	;RP1=0, select bank0
  5990  12E2  00A0               	movwf	___xxtofl@sign
  5991  12E3  0820               	movf	___xxtofl@sign,w
  5992  12E4  1D03               	btfss	3,2
  5993  12E5  1FF7               	btfss	___xxtofl@val+3,7
  5994  12E6  2AF7               	goto	l3051
  5995  12E7  0974               	comf	___xxtofl@val,w
  5996  12E8  00A2               	movwf	___xxtofl@arg
  5997  12E9  0975               	comf	___xxtofl@val+1,w
  5998  12EA  00A3               	movwf	___xxtofl@arg+1
  5999  12EB  0976               	comf	___xxtofl@val+2,w
  6000  12EC  00A4               	movwf	___xxtofl@arg+2
  6001  12ED  0977               	comf	___xxtofl@val+3,w
  6002  12EE  00A5               	movwf	___xxtofl@arg+3
  6003  12EF  0AA2               	incf	___xxtofl@arg,f
  6004  12F0  1903               	skipnz
  6005  12F1  0AA3               	incf	___xxtofl@arg+1,f
  6006  12F2  1903               	skipnz
  6007  12F3  0AA4               	incf	___xxtofl@arg+2,f
  6008  12F4  1903               	skipnz
  6009  12F5  0AA5               	incf	___xxtofl@arg+3,f
  6010  12F6  2AFF               	goto	l725
  6011  12F7                     l3051:	
  6012  12F7  0877               	movf	___xxtofl@val+3,w
  6013  12F8  00A5               	movwf	___xxtofl@arg+3
  6014  12F9  0876               	movf	___xxtofl@val+2,w
  6015  12FA  00A4               	movwf	___xxtofl@arg+2
  6016  12FB  0875               	movf	___xxtofl@val+1,w
  6017  12FC  00A3               	movwf	___xxtofl@arg+1
  6018  12FD  0874               	movf	___xxtofl@val,w
  6019  12FE  00A2               	movwf	___xxtofl@arg
  6020  12FF                     l725:	
  6021  12FF  0877               	movf	___xxtofl@val+3,w
  6022  1300  0476               	iorwf	___xxtofl@val+2,w
  6023  1301  0475               	iorwf	___xxtofl@val+1,w
  6024  1302  0474               	iorwf	___xxtofl@val,w
  6025  1303  1D03               	skipz
  6026  1304  2B0E               	goto	l3057
  6027  1305  3000               	movlw	0
  6028  1306  00F7               	movwf	?___xxtofl+3
  6029  1307  3000               	movlw	0
  6030  1308  00F6               	movwf	?___xxtofl+2
  6031  1309  3000               	movlw	0
  6032  130A  00F5               	movwf	?___xxtofl+1
  6033  130B  3000               	movlw	0
  6034  130C  00F4               	movwf	?___xxtofl
  6035  130D  0008               	return
  6036  130E                     l3057:	
  6037  130E  3096               	movlw	150
  6038  130F  00F8               	movwf	??___xxtofl
  6039  1310  0878               	movf	??___xxtofl,w
  6040  1311  00A1               	movwf	___xxtofl@exp
  6041  1312                     l3061:	
  6042  1312  30FE               	movlw	254
  6043  1313  0525               	andwf	___xxtofl@arg+3,w
  6044  1314  1903               	btfsc	3,2
  6045  1315  2B3F               	goto	l731
  6046  1316  3001               	movlw	1
  6047  1317  00F8               	movwf	??___xxtofl
  6048  1318  0878               	movf	??___xxtofl,w
  6049  1319  07A1               	addwf	___xxtofl@exp,f
  6050  131A  3001               	movlw	1
  6051  131B                     u5185:	
  6052  131B  1003               	clrc
  6053  131C  0CA5               	rrf	___xxtofl@arg+3,f
  6054  131D  0CA4               	rrf	___xxtofl@arg+2,f
  6055  131E  0CA3               	rrf	___xxtofl@arg+1,f
  6056  131F  0CA2               	rrf	___xxtofl@arg,f
  6057  1320  3EFF               	addlw	-1
  6058  1321  1D03               	skipz
  6059  1322  2B1B               	goto	u5185
  6060  1323  2B12               	goto	l3061
  6061  1324                     l3063:	
  6062  1324  3001               	movlw	1
  6063  1325  00F8               	movwf	??___xxtofl
  6064  1326  0878               	movf	??___xxtofl,w
  6065  1327  07A1               	addwf	___xxtofl@exp,f
  6066  1328  3001               	movlw	1
  6067  1329  07A2               	addwf	___xxtofl@arg,f
  6068  132A  3000               	movlw	0
  6069  132B  1803               	skipnc
  6070  132C  3001               	movlw	1
  6071  132D  07A3               	addwf	___xxtofl@arg+1,f
  6072  132E  3000               	movlw	0
  6073  132F  1803               	skipnc
  6074  1330  3001               	movlw	1
  6075  1331  07A4               	addwf	___xxtofl@arg+2,f
  6076  1332  3000               	movlw	0
  6077  1333  1803               	skipnc
  6078  1334  3001               	movlw	1
  6079  1335  07A5               	addwf	___xxtofl@arg+3,f
  6080  1336  3001               	movlw	1
  6081  1337                     u5205:	
  6082  1337  1003               	clrc
  6083  1338  0CA5               	rrf	___xxtofl@arg+3,f
  6084  1339  0CA4               	rrf	___xxtofl@arg+2,f
  6085  133A  0CA3               	rrf	___xxtofl@arg+1,f
  6086  133B  0CA2               	rrf	___xxtofl@arg,f
  6087  133C  3EFF               	addlw	-1
  6088  133D  1D03               	skipz
  6089  133E  2B37               	goto	u5205
  6090  133F                     l731:	
  6091  133F  30FF               	movlw	255
  6092  1340  0525               	andwf	___xxtofl@arg+3,w
  6093  1341  1903               	btfsc	3,2
  6094  1342  2B53               	goto	l3071
  6095  1343  2B24               	goto	l3063
  6096  1344                     l3073:	
  6097  1344  3002               	movlw	2
  6098  1345  0221               	subwf	___xxtofl@exp,w
  6099  1346  1C03               	btfss	3,0
  6100  1347  2B55               	goto	l738
  6101  1348  3001               	movlw	1
  6102  1349  02A1               	subwf	___xxtofl@exp,f
  6103  134A  3001               	movlw	1
  6104  134B  00F8               	movwf	??___xxtofl
  6105  134C                     u5225:	
  6106  134C  1003               	clrc
  6107  134D  0DA2               	rlf	___xxtofl@arg,f
  6108  134E  0DA3               	rlf	___xxtofl@arg+1,f
  6109  134F  0DA4               	rlf	___xxtofl@arg+2,f
  6110  1350  0DA5               	rlf	___xxtofl@arg+3,f
  6111  1351  0BF8               	decfsz	??___xxtofl,f
  6112  1352  2B4C               	goto	u5225
  6113  1353                     l3071:	
  6114  1353  1FA4               	btfss	___xxtofl@arg+2,7
  6115  1354  2B44               	goto	l3073
  6116  1355                     l738:	
  6117  1355  1821               	btfsc	___xxtofl@exp,0
  6118  1356  2B5F               	goto	l739
  6119  1357  30FF               	movlw	255
  6120  1358  05A2               	andwf	___xxtofl@arg,f
  6121  1359  30FF               	movlw	255
  6122  135A  05A3               	andwf	___xxtofl@arg+1,f
  6123  135B  307F               	movlw	127
  6124  135C  05A4               	andwf	___xxtofl@arg+2,f
  6125  135D  30FF               	movlw	255
  6126  135E  05A5               	andwf	___xxtofl@arg+3,f
  6127  135F                     l739:	
  6128  135F  1003               	clrc
  6129  1360  0CA1               	rrf	___xxtofl@exp,f
  6130  1361  0821               	movf	___xxtofl@exp,w
  6131  1362  00F8               	movwf	??___xxtofl
  6132  1363  01F9               	clrf	??___xxtofl+1
  6133  1364  01FA               	clrf	??___xxtofl+2
  6134  1365  01FB               	clrf	??___xxtofl+3
  6135  1366  3018               	movlw	24
  6136  1367                     u5265:	
  6137  1367  1003               	clrc
  6138  1368  0DF8               	rlf	??___xxtofl,f
  6139  1369  0DF9               	rlf	??___xxtofl+1,f
  6140  136A  0DFA               	rlf	??___xxtofl+2,f
  6141  136B  0DFB               	rlf	??___xxtofl+3,f
  6142  136C  3EFF               	addlw	-1
  6143  136D  1D03               	skipz
  6144  136E  2B67               	goto	u5265
  6145  136F  0878               	movf	??___xxtofl,w
  6146  1370  04A2               	iorwf	___xxtofl@arg,f
  6147  1371  0879               	movf	??___xxtofl+1,w
  6148  1372  04A3               	iorwf	___xxtofl@arg+1,f
  6149  1373  087A               	movf	??___xxtofl+2,w
  6150  1374  04A4               	iorwf	___xxtofl@arg+2,f
  6151  1375  087B               	movf	??___xxtofl+3,w
  6152  1376  04A5               	iorwf	___xxtofl@arg+3,f
  6153  1377  0820               	movf	___xxtofl@sign,w
  6154  1378  1D03               	btfss	3,2
  6155  1379  1FF7               	btfss	___xxtofl@val+3,7
  6156  137A  2B7C               	goto	l3085
  6157  137B  17A5               	bsf	___xxtofl@arg+3,7
  6158  137C                     l3085:	
  6159  137C  0825               	movf	___xxtofl@arg+3,w
  6160  137D  00F7               	movwf	?___xxtofl+3
  6161  137E  0824               	movf	___xxtofl@arg+2,w
  6162  137F  00F6               	movwf	?___xxtofl+2
  6163  1380  0823               	movf	___xxtofl@arg+1,w
  6164  1381  00F5               	movwf	?___xxtofl+1
  6165  1382  0822               	movf	___xxtofl@arg,w
  6166  1383  00F4               	movwf	?___xxtofl
  6167  1384  0008               	return
  6168  1385                     __end_of___xxtofl:	
  6169                           
  6170                           	psect	text14
  6171  1D7C                     __ptext14:	
  6172 ;; *************** function ___wmul *****************
  6173 ;; Defined at:
  6174 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  6175 ;; Parameters:    Size  Location     Type
  6176 ;;  multiplier      2    0[COMMON] unsigned int 
  6177 ;;  multiplicand    2    2[COMMON] unsigned int 
  6178 ;; Auto vars:     Size  Location     Type
  6179 ;;  product         2    4[COMMON] unsigned int 
  6180 ;; Return value:  Size  Location     Type
  6181 ;;                  2    0[COMMON] unsigned int 
  6182 ;; Registers used:
  6183 ;;		wreg, status,2, status,0
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6189 ;;      Params:         4       0       0       0       0
  6190 ;;      Locals:         2       0       0       0       0
  6191 ;;      Temps:          0       0       0       0       0
  6192 ;;      Totals:         6       0       0       0       0
  6193 ;;Total ram usage:        6 bytes
  6194 ;; Hardware stack levels used:    1
  6195 ;; This function calls:
  6196 ;;		Nothing
  6197 ;; This function is called by:
  6198 ;;		_sprintf
  6199 ;; This function uses a non-reentrant model
  6200 ;;
  6201                           
  6202                           
  6203                           ;psect for function ___wmul
  6204  1D7C                     ___wmul:	
  6205                           
  6206                           ;incstack = 0
  6207                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6208  1D7C  01F4               	clrf	___wmul@product
  6209  1D7D  01F5               	clrf	___wmul@product+1
  6210  1D7E                     l2907:	
  6211  1D7E  1C70               	btfss	___wmul@multiplier,0
  6212  1D7F  2D86               	goto	l264
  6213  1D80  0872               	movf	___wmul@multiplicand,w
  6214  1D81  07F4               	addwf	___wmul@product,f
  6215  1D82  1803               	skipnc
  6216  1D83  0AF5               	incf	___wmul@product+1,f
  6217  1D84  0873               	movf	___wmul@multiplicand+1,w
  6218  1D85  07F5               	addwf	___wmul@product+1,f
  6219  1D86                     l264:	
  6220  1D86  3001               	movlw	1
  6221  1D87                     u4785:	
  6222  1D87  1003               	clrc
  6223  1D88  0DF2               	rlf	___wmul@multiplicand,f
  6224  1D89  0DF3               	rlf	___wmul@multiplicand+1,f
  6225  1D8A  3EFF               	addlw	-1
  6226  1D8B  1D03               	skipz
  6227  1D8C  2D87               	goto	u4785
  6228  1D8D  3001               	movlw	1
  6229  1D8E                     u4795:	
  6230  1D8E  1003               	clrc
  6231  1D8F  0CF1               	rrf	___wmul@multiplier+1,f
  6232  1D90  0CF0               	rrf	___wmul@multiplier,f
  6233  1D91  3EFF               	addlw	-1
  6234  1D92  1D03               	skipz
  6235  1D93  2D8E               	goto	u4795
  6236  1D94  0870               	movf	___wmul@multiplier,w
  6237  1D95  0471               	iorwf	___wmul@multiplier+1,w
  6238  1D96  1D03               	btfss	3,2
  6239  1D97  2D7E               	goto	l2907
  6240  1D98  0875               	movf	___wmul@product+1,w
  6241  1D99  00F1               	movwf	?___wmul+1
  6242  1D9A  0874               	movf	___wmul@product,w
  6243  1D9B  00F0               	movwf	?___wmul
  6244  1D9C  0008               	return
  6245  1D9D                     __end_of___wmul:	
  6246                           
  6247                           	psect	text15
  6248  1FB4                     __ptext15:	
  6249 ;; *************** function ___llmod *****************
  6250 ;; Defined at:
  6251 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;  divisor         4    0[COMMON] unsigned long 
  6254 ;;  dividend        4    4[COMMON] unsigned long 
  6255 ;; Auto vars:     Size  Location     Type
  6256 ;;  counter         1    9[COMMON] unsigned char 
  6257 ;; Return value:  Size  Location     Type
  6258 ;;                  4    0[COMMON] unsigned long 
  6259 ;; Registers used:
  6260 ;;		wreg, status,2, status,0
  6261 ;; Tracked objects:
  6262 ;;		On entry : 0/0
  6263 ;;		On exit  : 0/0
  6264 ;;		Unchanged: 0/0
  6265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6266 ;;      Params:         8       0       0       0       0
  6267 ;;      Locals:         1       0       0       0       0
  6268 ;;      Temps:          1       0       0       0       0
  6269 ;;      Totals:        10       0       0       0       0
  6270 ;;Total ram usage:       10 bytes
  6271 ;; Hardware stack levels used:    1
  6272 ;; This function calls:
  6273 ;;		Nothing
  6274 ;; This function is called by:
  6275 ;;		_sprintf
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           
  6280                           ;psect for function ___llmod
  6281  1FB4                     ___llmod:	
  6282                           
  6283                           ;incstack = 0
  6284                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6285  1FB4  0873               	movf	___llmod@divisor+3,w
  6286  1FB5  0472               	iorwf	___llmod@divisor+2,w
  6287  1FB6  0471               	iorwf	___llmod@divisor+1,w
  6288  1FB7  0470               	iorwf	___llmod@divisor,w
  6289  1FB8  1903               	skipnz
  6290  1FB9  2FF7               	goto	l3035
  6291  1FBA  01F9               	clrf	___llmod@counter
  6292  1FBB  0AF9               	incf	___llmod@counter,f
  6293  1FBC                     l3025:	
  6294  1FBC  1BF3               	btfsc	___llmod@divisor+3,7
  6295  1FBD  2FCC               	goto	l3027
  6296  1FBE  3001               	movlw	1
  6297  1FBF  00F8               	movwf	??___llmod
  6298  1FC0                     u5105:	
  6299  1FC0  1003               	clrc
  6300  1FC1  0DF0               	rlf	___llmod@divisor,f
  6301  1FC2  0DF1               	rlf	___llmod@divisor+1,f
  6302  1FC3  0DF2               	rlf	___llmod@divisor+2,f
  6303  1FC4  0DF3               	rlf	___llmod@divisor+3,f
  6304  1FC5  0BF8               	decfsz	??___llmod,f
  6305  1FC6  2FC0               	goto	u5105
  6306  1FC7  3001               	movlw	1
  6307  1FC8  00F8               	movwf	??___llmod
  6308  1FC9  0878               	movf	??___llmod,w
  6309  1FCA  07F9               	addwf	___llmod@counter,f
  6310  1FCB  2FBC               	goto	l3025
  6311  1FCC                     l3027:	
  6312  1FCC  0873               	movf	___llmod@divisor+3,w
  6313  1FCD  0277               	subwf	___llmod@dividend+3,w
  6314  1FCE  1D03               	skipz
  6315  1FCF  2FDA               	goto	u5125
  6316  1FD0  0872               	movf	___llmod@divisor+2,w
  6317  1FD1  0276               	subwf	___llmod@dividend+2,w
  6318  1FD2  1D03               	skipz
  6319  1FD3  2FDA               	goto	u5125
  6320  1FD4  0871               	movf	___llmod@divisor+1,w
  6321  1FD5  0275               	subwf	___llmod@dividend+1,w
  6322  1FD6  1D03               	skipz
  6323  1FD7  2FDA               	goto	u5125
  6324  1FD8  0870               	movf	___llmod@divisor,w
  6325  1FD9  0274               	subwf	___llmod@dividend,w
  6326  1FDA                     u5125:	
  6327  1FDA  1C03               	skipc
  6328  1FDB  2FEA               	goto	l3031
  6329  1FDC  0870               	movf	___llmod@divisor,w
  6330  1FDD  02F4               	subwf	___llmod@dividend,f
  6331  1FDE  0871               	movf	___llmod@divisor+1,w
  6332  1FDF  1C03               	skipc
  6333  1FE0  0F71               	incfsz	___llmod@divisor+1,w
  6334  1FE1  02F5               	subwf	___llmod@dividend+1,f
  6335  1FE2  0872               	movf	___llmod@divisor+2,w
  6336  1FE3  1C03               	skipc
  6337  1FE4  0F72               	incfsz	___llmod@divisor+2,w
  6338  1FE5  02F6               	subwf	___llmod@dividend+2,f
  6339  1FE6  0873               	movf	___llmod@divisor+3,w
  6340  1FE7  1C03               	skipc
  6341  1FE8  0F73               	incfsz	___llmod@divisor+3,w
  6342  1FE9  02F7               	subwf	___llmod@dividend+3,f
  6343  1FEA                     l3031:	
  6344  1FEA  3001               	movlw	1
  6345  1FEB                     u5135:	
  6346  1FEB  1003               	clrc
  6347  1FEC  0CF3               	rrf	___llmod@divisor+3,f
  6348  1FED  0CF2               	rrf	___llmod@divisor+2,f
  6349  1FEE  0CF1               	rrf	___llmod@divisor+1,f
  6350  1FEF  0CF0               	rrf	___llmod@divisor,f
  6351  1FF0  3EFF               	addlw	-1
  6352  1FF1  1D03               	skipz
  6353  1FF2  2FEB               	goto	u5135
  6354  1FF3  3001               	movlw	1
  6355  1FF4  02F9               	subwf	___llmod@counter,f
  6356  1FF5  1D03               	btfss	3,2
  6357  1FF6  2FCC               	goto	l3027
  6358  1FF7                     l3035:	
  6359  1FF7  0877               	movf	___llmod@dividend+3,w
  6360  1FF8  00F3               	movwf	?___llmod+3
  6361  1FF9  0876               	movf	___llmod@dividend+2,w
  6362  1FFA  00F2               	movwf	?___llmod+2
  6363  1FFB  0875               	movf	___llmod@dividend+1,w
  6364  1FFC  00F1               	movwf	?___llmod+1
  6365  1FFD  0874               	movf	___llmod@dividend,w
  6366  1FFE  00F0               	movwf	?___llmod
  6367  1FFF  0008               	return
  6368  2000                     __end_of___llmod:	
  6369                           
  6370                           	psect	text16
  6371  1121                     __ptext16:	
  6372 ;; *************** function ___lldiv *****************
  6373 ;; Defined at:
  6374 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  6375 ;; Parameters:    Size  Location     Type
  6376 ;;  divisor         4    0[COMMON] unsigned long 
  6377 ;;  dividend        4    4[COMMON] unsigned long 
  6378 ;; Auto vars:     Size  Location     Type
  6379 ;;  quotient        4    9[COMMON] unsigned long 
  6380 ;;  counter         1   13[COMMON] unsigned char 
  6381 ;; Return value:  Size  Location     Type
  6382 ;;                  4    0[COMMON] unsigned long 
  6383 ;; Registers used:
  6384 ;;		wreg, status,2, status,0
  6385 ;; Tracked objects:
  6386 ;;		On entry : 0/0
  6387 ;;		On exit  : 0/0
  6388 ;;		Unchanged: 0/0
  6389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6390 ;;      Params:         8       0       0       0       0
  6391 ;;      Locals:         5       0       0       0       0
  6392 ;;      Temps:          1       0       0       0       0
  6393 ;;      Totals:        14       0       0       0       0
  6394 ;;Total ram usage:       14 bytes
  6395 ;; Hardware stack levels used:    1
  6396 ;; This function calls:
  6397 ;;		Nothing
  6398 ;; This function is called by:
  6399 ;;		_sprintf
  6400 ;; This function uses a non-reentrant model
  6401 ;;
  6402                           
  6403                           
  6404                           ;psect for function ___lldiv
  6405  1121                     ___lldiv:	
  6406                           
  6407                           ;incstack = 0
  6408                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6409  1121  3000               	movlw	0
  6410  1122  00FC               	movwf	___lldiv@quotient+3
  6411  1123  3000               	movlw	0
  6412  1124  00FB               	movwf	___lldiv@quotient+2
  6413  1125  3000               	movlw	0
  6414  1126  00FA               	movwf	___lldiv@quotient+1
  6415  1127  3000               	movlw	0
  6416  1128  00F9               	movwf	___lldiv@quotient
  6417  1129  0873               	movf	___lldiv@divisor+3,w
  6418  112A  0472               	iorwf	___lldiv@divisor+2,w
  6419  112B  0471               	iorwf	___lldiv@divisor+1,w
  6420  112C  0470               	iorwf	___lldiv@divisor,w
  6421  112D  1903               	skipnz
  6422  112E  2976               	goto	l2939
  6423  112F  01FD               	clrf	___lldiv@counter
  6424  1130  0AFD               	incf	___lldiv@counter,f
  6425  1131                     l2925:	
  6426  1131  1BF3               	btfsc	___lldiv@divisor+3,7
  6427  1132  2941               	goto	l2927
  6428  1133  3001               	movlw	1
  6429  1134  00F8               	movwf	??___lldiv
  6430  1135                     u4825:	
  6431  1135  1003               	clrc
  6432  1136  0DF0               	rlf	___lldiv@divisor,f
  6433  1137  0DF1               	rlf	___lldiv@divisor+1,f
  6434  1138  0DF2               	rlf	___lldiv@divisor+2,f
  6435  1139  0DF3               	rlf	___lldiv@divisor+3,f
  6436  113A  0BF8               	decfsz	??___lldiv,f
  6437  113B  2935               	goto	u4825
  6438  113C  3001               	movlw	1
  6439  113D  00F8               	movwf	??___lldiv
  6440  113E  0878               	movf	??___lldiv,w
  6441  113F  07FD               	addwf	___lldiv@counter,f
  6442  1140  2931               	goto	l2925
  6443  1141                     l2927:	
  6444  1141  3001               	movlw	1
  6445  1142  00F8               	movwf	??___lldiv
  6446  1143                     u4845:	
  6447  1143  1003               	clrc
  6448  1144  0DF9               	rlf	___lldiv@quotient,f
  6449  1145  0DFA               	rlf	___lldiv@quotient+1,f
  6450  1146  0DFB               	rlf	___lldiv@quotient+2,f
  6451  1147  0DFC               	rlf	___lldiv@quotient+3,f
  6452  1148  0BF8               	decfsz	??___lldiv,f
  6453  1149  2943               	goto	u4845
  6454  114A  0873               	movf	___lldiv@divisor+3,w
  6455  114B  0277               	subwf	___lldiv@dividend+3,w
  6456  114C  1D03               	skipz
  6457  114D  2958               	goto	u4855
  6458  114E  0872               	movf	___lldiv@divisor+2,w
  6459  114F  0276               	subwf	___lldiv@dividend+2,w
  6460  1150  1D03               	skipz
  6461  1151  2958               	goto	u4855
  6462  1152  0871               	movf	___lldiv@divisor+1,w
  6463  1153  0275               	subwf	___lldiv@dividend+1,w
  6464  1154  1D03               	skipz
  6465  1155  2958               	goto	u4855
  6466  1156  0870               	movf	___lldiv@divisor,w
  6467  1157  0274               	subwf	___lldiv@dividend,w
  6468  1158                     u4855:	
  6469  1158  1C03               	skipc
  6470  1159  2969               	goto	l2935
  6471  115A  0870               	movf	___lldiv@divisor,w
  6472  115B  02F4               	subwf	___lldiv@dividend,f
  6473  115C  0871               	movf	___lldiv@divisor+1,w
  6474  115D  1C03               	skipc
  6475  115E  0F71               	incfsz	___lldiv@divisor+1,w
  6476  115F  02F5               	subwf	___lldiv@dividend+1,f
  6477  1160  0872               	movf	___lldiv@divisor+2,w
  6478  1161  1C03               	skipc
  6479  1162  0F72               	incfsz	___lldiv@divisor+2,w
  6480  1163  02F6               	subwf	___lldiv@dividend+2,f
  6481  1164  0873               	movf	___lldiv@divisor+3,w
  6482  1165  1C03               	skipc
  6483  1166  0F73               	incfsz	___lldiv@divisor+3,w
  6484  1167  02F7               	subwf	___lldiv@dividend+3,f
  6485  1168  1479               	bsf	___lldiv@quotient,0
  6486  1169                     l2935:	
  6487  1169  3001               	movlw	1
  6488  116A                     u4865:	
  6489  116A  1003               	clrc
  6490  116B  0CF3               	rrf	___lldiv@divisor+3,f
  6491  116C  0CF2               	rrf	___lldiv@divisor+2,f
  6492  116D  0CF1               	rrf	___lldiv@divisor+1,f
  6493  116E  0CF0               	rrf	___lldiv@divisor,f
  6494  116F  3EFF               	addlw	-1
  6495  1170  1D03               	skipz
  6496  1171  296A               	goto	u4865
  6497  1172  3001               	movlw	1
  6498  1173  02FD               	subwf	___lldiv@counter,f
  6499  1174  1D03               	btfss	3,2
  6500  1175  2941               	goto	l2927
  6501  1176                     l2939:	
  6502  1176  087C               	movf	___lldiv@quotient+3,w
  6503  1177  00F3               	movwf	?___lldiv+3
  6504  1178  087B               	movf	___lldiv@quotient+2,w
  6505  1179  00F2               	movwf	?___lldiv+2
  6506  117A  087A               	movf	___lldiv@quotient+1,w
  6507  117B  00F1               	movwf	?___lldiv+1
  6508  117C  0879               	movf	___lldiv@quotient,w
  6509  117D  00F0               	movwf	?___lldiv
  6510  117E  0008               	return
  6511  117F                     __end_of___lldiv:	
  6512                           
  6513                           	psect	text17
  6514  11E0                     __ptext17:	
  6515 ;; *************** function ___fltol *****************
  6516 ;; Defined at:
  6517 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  6518 ;; Parameters:    Size  Location     Type
  6519 ;;  f1              4   51[BANK0 ] unsigned long 
  6520 ;; Auto vars:     Size  Location     Type
  6521 ;;  exp1            1   61[BANK0 ] unsigned char 
  6522 ;;  sign1           1   60[BANK0 ] unsigned char 
  6523 ;; Return value:  Size  Location     Type
  6524 ;;                  4   51[BANK0 ] long 
  6525 ;; Registers used:
  6526 ;;		wreg, status,2, status,0
  6527 ;; Tracked objects:
  6528 ;;		On entry : 0/0
  6529 ;;		On exit  : 0/0
  6530 ;;		Unchanged: 0/0
  6531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6532 ;;      Params:         0       4       0       0       0
  6533 ;;      Locals:         0       2       0       0       0
  6534 ;;      Temps:          0       5       0       0       0
  6535 ;;      Totals:         0      11       0       0       0
  6536 ;;Total ram usage:       11 bytes
  6537 ;; Hardware stack levels used:    1
  6538 ;; This function calls:
  6539 ;;		Nothing
  6540 ;; This function is called by:
  6541 ;;		_sprintf
  6542 ;; This function uses a non-reentrant model
  6543 ;;
  6544                           
  6545                           
  6546                           ;psect for function ___fltol
  6547  11E0                     ___fltol:	
  6548                           
  6549                           ;incstack = 0
  6550                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6551  11E0  1003               	clrc
  6552  11E1  1283               	bcf	3,5	;RP0=0, select bank0
  6553  11E2  1303               	bcf	3,6	;RP1=0, select bank0
  6554  11E3  0D55               	rlf	___fltol@f1+2,w
  6555  11E4  0D56               	rlf	___fltol@f1+3,w
  6556  11E5  00D7               	movwf	??___fltol
  6557  11E6  0857               	movf	??___fltol,w
  6558  11E7  00DD               	movwf	___fltol@exp1
  6559  11E8  085D               	movf	___fltol@exp1,w
  6560  11E9  1D03               	btfss	3,2
  6561  11EA  29F4               	goto	l2989
  6562  11EB                     l2985:	
  6563  11EB  3000               	movlw	0
  6564  11EC  00D6               	movwf	?___fltol+3
  6565  11ED  3000               	movlw	0
  6566  11EE  00D5               	movwf	?___fltol+2
  6567  11EF  3000               	movlw	0
  6568  11F0  00D4               	movwf	?___fltol+1
  6569  11F1  3000               	movlw	0
  6570  11F2  00D3               	movwf	?___fltol
  6571  11F3  0008               	return
  6572  11F4                     l2989:	
  6573  11F4  0853               	movf	___fltol@f1,w
  6574  11F5  00D7               	movwf	??___fltol
  6575  11F6  0854               	movf	___fltol@f1+1,w
  6576  11F7  00D8               	movwf	??___fltol+1
  6577  11F8  0855               	movf	___fltol@f1+2,w
  6578  11F9  00D9               	movwf	??___fltol+2
  6579  11FA  0856               	movf	___fltol@f1+3,w
  6580  11FB  00DA               	movwf	??___fltol+3
  6581  11FC  301F               	movlw	31
  6582  11FD                     u5005:	
  6583  11FD  1003               	clrc
  6584  11FE  0CDA               	rrf	??___fltol+3,f
  6585  11FF  0CD9               	rrf	??___fltol+2,f
  6586  1200  0CD8               	rrf	??___fltol+1,f
  6587  1201  0CD7               	rrf	??___fltol,f
  6588  1202  3EFF               	addlw	-1
  6589  1203  1D03               	skipz
  6590  1204  29FD               	goto	u5005
  6591  1205  0857               	movf	??___fltol,w
  6592  1206  00DB               	movwf	??___fltol+4
  6593  1207  085B               	movf	??___fltol+4,w
  6594  1208  00DC               	movwf	___fltol@sign1
  6595  1209  17D5               	bsf	___fltol@f1+2,7
  6596  120A  30FF               	movlw	255
  6597  120B  05D3               	andwf	___fltol@f1,f
  6598  120C  30FF               	movlw	255
  6599  120D  05D4               	andwf	___fltol@f1+1,f
  6600  120E  30FF               	movlw	255
  6601  120F  05D5               	andwf	___fltol@f1+2,f
  6602  1210  3000               	movlw	0
  6603  1211  05D6               	andwf	___fltol@f1+3,f
  6604  1212  3096               	movlw	150
  6605  1213  02DD               	subwf	___fltol@exp1,f
  6606  1214  1FDD               	btfss	___fltol@exp1,7
  6607  1215  2A2B               	goto	l3007
  6608  1216  085D               	movf	___fltol@exp1,w
  6609  1217  3A80               	xorlw	128
  6610  1218  3E97               	addlw	151
  6611  1219  1C03               	btfss	3,0
  6612  121A  29EB               	goto	l2985
  6613  121B                     l3005:	
  6614  121B  3001               	movlw	1
  6615  121C                     u5035:	
  6616  121C  1003               	clrc
  6617  121D  0CD6               	rrf	___fltol@f1+3,f
  6618  121E  0CD5               	rrf	___fltol@f1+2,f
  6619  121F  0CD4               	rrf	___fltol@f1+1,f
  6620  1220  0CD3               	rrf	___fltol@f1,f
  6621  1221  3EFF               	addlw	-1
  6622  1222  1D03               	skipz
  6623  1223  2A1C               	goto	u5035
  6624  1224  3001               	movlw	1
  6625  1225  00D7               	movwf	??___fltol
  6626  1226  0857               	movf	??___fltol,w
  6627  1227  07DD               	addwf	___fltol@exp1,f
  6628  1228  1903               	btfsc	3,2
  6629  1229  2A3E               	goto	l3015
  6630  122A  2A1B               	goto	l3005
  6631  122B                     l3007:	
  6632  122B  3020               	movlw	32
  6633  122C  025D               	subwf	___fltol@exp1,w
  6634  122D  1803               	btfsc	3,0
  6635  122E  29EB               	goto	l2985
  6636  122F                     l474:	
  6637  122F  085D               	movf	___fltol@exp1,w
  6638  1230  1903               	btfsc	3,2
  6639  1231  2A3E               	goto	l3015
  6640  1232  3001               	movlw	1
  6641  1233  00D7               	movwf	??___fltol
  6642  1234                     u5065:	
  6643  1234  1003               	clrc
  6644  1235  0DD3               	rlf	___fltol@f1,f
  6645  1236  0DD4               	rlf	___fltol@f1+1,f
  6646  1237  0DD5               	rlf	___fltol@f1+2,f
  6647  1238  0DD6               	rlf	___fltol@f1+3,f
  6648  1239  0BD7               	decfsz	??___fltol,f
  6649  123A  2A34               	goto	u5065
  6650  123B  3001               	movlw	1
  6651  123C  02DD               	subwf	___fltol@exp1,f
  6652  123D  2A2F               	goto	l474
  6653  123E                     l3015:	
  6654  123E  085C               	movf	___fltol@sign1,w
  6655  123F  1903               	btfsc	3,2
  6656  1240  0008               	return
  6657  1241  09D3               	comf	___fltol@f1,f
  6658  1242  09D4               	comf	___fltol@f1+1,f
  6659  1243  09D5               	comf	___fltol@f1+2,f
  6660  1244  09D6               	comf	___fltol@f1+3,f
  6661  1245  0AD3               	incf	___fltol@f1,f
  6662  1246  1903               	skipnz
  6663  1247  0AD4               	incf	___fltol@f1+1,f
  6664  1248  1903               	skipnz
  6665  1249  0AD5               	incf	___fltol@f1+2,f
  6666  124A  1903               	skipnz
  6667  124B  0AD6               	incf	___fltol@f1+3,f
  6668  124C  0008               	return
  6669  124D                     __end_of___fltol:	
  6670                           
  6671                           	psect	text18
  6672  1DBF                     __ptext18:	
  6673 ;; *************** function ___flsub *****************
  6674 ;; Defined at:
  6675 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  6676 ;; Parameters:    Size  Location     Type
  6677 ;;  a               4   72[BANK0 ] long 
  6678 ;;  b               4   76[BANK0 ] long 
  6679 ;; Auto vars:     Size  Location     Type
  6680 ;;		None
  6681 ;; Return value:  Size  Location     Type
  6682 ;;                  4   72[BANK0 ] long 
  6683 ;; Registers used:
  6684 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6685 ;; Tracked objects:
  6686 ;;		On entry : 0/0
  6687 ;;		On exit  : 0/0
  6688 ;;		Unchanged: 0/0
  6689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6690 ;;      Params:         0       8       0       0       0
  6691 ;;      Locals:         0       0       0       0       0
  6692 ;;      Temps:          0       0       0       0       0
  6693 ;;      Totals:         0       8       0       0       0
  6694 ;;Total ram usage:        8 bytes
  6695 ;; Hardware stack levels used:    1
  6696 ;; Hardware stack levels required when called:    1
  6697 ;; This function calls:
  6698 ;;		___fladd
  6699 ;; This function is called by:
  6700 ;;		_sprintf
  6701 ;; This function uses a non-reentrant model
  6702 ;;
  6703                           
  6704                           
  6705                           ;psect for function ___flsub
  6706  1DBF                     ___flsub:	
  6707                           
  6708                           ;incstack = 0
  6709                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6710  1DBF  3080               	movlw	128
  6711  1DC0  1283               	bcf	3,5	;RP0=0, select bank0
  6712  1DC1  1303               	bcf	3,6	;RP1=0, select bank0
  6713  1DC2  06EB               	xorwf	___flsub@a+3,f
  6714  1DC3  086F               	movf	___flsub@b+3,w
  6715  1DC4  00D7               	movwf	___fladd@b+3
  6716  1DC5  086E               	movf	___flsub@b+2,w
  6717  1DC6  00D6               	movwf	___fladd@b+2
  6718  1DC7  086D               	movf	___flsub@b+1,w
  6719  1DC8  00D5               	movwf	___fladd@b+1
  6720  1DC9  086C               	movf	___flsub@b,w
  6721  1DCA  00D4               	movwf	___fladd@b
  6722  1DCB  086B               	movf	___flsub@a+3,w
  6723  1DCC  00DB               	movwf	___fladd@a+3
  6724  1DCD  086A               	movf	___flsub@a+2,w
  6725  1DCE  00DA               	movwf	___fladd@a+2
  6726  1DCF  0869               	movf	___flsub@a+1,w
  6727  1DD0  00D9               	movwf	___fladd@a+1
  6728  1DD1  0868               	movf	___flsub@a,w
  6729  1DD2  00D8               	movwf	___fladd@a
  6730  1DD3  160A  118A  25D1   	fcall	___fladd
  6731  1DD6  1283               	bcf	3,5	;RP0=0, select bank0
  6732  1DD7  1303               	bcf	3,6	;RP1=0, select bank0
  6733  1DD8  0857               	movf	?___fladd+3,w
  6734  1DD9  00EB               	movwf	?___flsub+3
  6735  1DDA  0856               	movf	?___fladd+2,w
  6736  1DDB  00EA               	movwf	?___flsub+2
  6737  1DDC  0855               	movf	?___fladd+1,w
  6738  1DDD  00E9               	movwf	?___flsub+1
  6739  1DDE  0854               	movf	?___fladd,w
  6740  1DDF  00E8               	movwf	?___flsub
  6741  1DE0  0008               	return
  6742  1DE1                     __end_of___flsub:	
  6743                           
  6744                           	psect	text19
  6745  15D1                     __ptext19:	
  6746 ;; *************** function ___fladd *****************
  6747 ;; Defined at:
  6748 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  6749 ;; Parameters:    Size  Location     Type
  6750 ;;  b               4   52[BANK0 ] long 
  6751 ;;  a               4   56[BANK0 ] long 
  6752 ;; Auto vars:     Size  Location     Type
  6753 ;;  grs             1   71[BANK0 ] unsigned char 
  6754 ;;  bexp            1   70[BANK0 ] unsigned char 
  6755 ;;  aexp            1   69[BANK0 ] unsigned char 
  6756 ;;  signs           1   68[BANK0 ] unsigned char 
  6757 ;; Return value:  Size  Location     Type
  6758 ;;                  4   52[BANK0 ] unsigned char 
  6759 ;; Registers used:
  6760 ;;		wreg, status,2, status,0, btemp+1
  6761 ;; Tracked objects:
  6762 ;;		On entry : 0/0
  6763 ;;		On exit  : 0/0
  6764 ;;		Unchanged: 0/0
  6765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6766 ;;      Params:         0       8       0       0       0
  6767 ;;      Locals:         0       4       0       0       0
  6768 ;;      Temps:          0       8       0       0       0
  6769 ;;      Totals:         0      20       0       0       0
  6770 ;;Total ram usage:       20 bytes
  6771 ;; Hardware stack levels used:    1
  6772 ;; This function calls:
  6773 ;;		Nothing
  6774 ;; This function is called by:
  6775 ;;		_sprintf
  6776 ;;		___flsub
  6777 ;; This function uses a non-reentrant model
  6778 ;;
  6779                           
  6780                           
  6781                           ;psect for function ___fladd
  6782  15D1                     ___fladd:	
  6783                           
  6784                           ;incstack = 0
  6785                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6786  15D1  1283               	bcf	3,5	;RP0=0, select bank0
  6787  15D2  1303               	bcf	3,6	;RP1=0, select bank0
  6788  15D3  0857               	movf	___fladd@b+3,w
  6789  15D4  3980               	andlw	128
  6790  15D5  00DC               	movwf	??___fladd
  6791  15D6  085C               	movf	??___fladd,w
  6792  15D7  00E4               	movwf	___fladd@signs
  6793  15D8  0857               	movf	___fladd@b+3,w
  6794  15D9  00DC               	movwf	??___fladd
  6795  15DA  075C               	addwf	??___fladd,w
  6796  15DB  00DD               	movwf	??___fladd+1
  6797  15DC  085D               	movf	??___fladd+1,w
  6798  15DD  00E6               	movwf	___fladd@bexp
  6799  15DE  1BD6               	btfsc	___fladd@b+2,7
  6800  15DF  1466               	bsf	___fladd@bexp,0
  6801  15E0  0866               	movf	___fladd@bexp,w
  6802  15E1  1903               	btfsc	3,2
  6803  15E2  2DF1               	goto	l2385
  6804  15E3  0A66               	incf	___fladd@bexp,w
  6805  15E4  1D03               	btfss	3,2
  6806  15E5  2DEE               	goto	l2381
  6807  15E6  3000               	movlw	0
  6808  15E7  00D7               	movwf	___fladd@b+3
  6809  15E8  3000               	movlw	0
  6810  15E9  00D6               	movwf	___fladd@b+2
  6811  15EA  3000               	movlw	0
  6812  15EB  00D5               	movwf	___fladd@b+1
  6813  15EC  3000               	movlw	0
  6814  15ED  00D4               	movwf	___fladd@b
  6815  15EE                     l2381:	
  6816  15EE  17D6               	bsf	___fladd@b+2,7
  6817  15EF  01D7               	clrf	___fladd@b+3
  6818  15F0  2DF9               	goto	l2387
  6819  15F1                     l2385:	
  6820  15F1  3000               	movlw	0
  6821  15F2  00D7               	movwf	___fladd@b+3
  6822  15F3  3000               	movlw	0
  6823  15F4  00D6               	movwf	___fladd@b+2
  6824  15F5  3000               	movlw	0
  6825  15F6  00D5               	movwf	___fladd@b+1
  6826  15F7  3000               	movlw	0
  6827  15F8  00D4               	movwf	___fladd@b
  6828  15F9                     l2387:	
  6829  15F9  085B               	movf	___fladd@a+3,w
  6830  15FA  3980               	andlw	128
  6831  15FB  00DC               	movwf	??___fladd
  6832  15FC  085C               	movf	??___fladd,w
  6833  15FD  00E5               	movwf	___fladd@aexp
  6834  15FE  0865               	movf	___fladd@aexp,w
  6835  15FF  0664               	xorwf	___fladd@signs,w
  6836  1600  1D03               	btfss	3,2
  6837  1601  1764               	bsf	___fladd@signs,6
  6838  1602  085B               	movf	___fladd@a+3,w
  6839  1603  00DC               	movwf	??___fladd
  6840  1604  075C               	addwf	??___fladd,w
  6841  1605  00DD               	movwf	??___fladd+1
  6842  1606  085D               	movf	??___fladd+1,w
  6843  1607  00E5               	movwf	___fladd@aexp
  6844  1608  1BDA               	btfsc	___fladd@a+2,7
  6845  1609  1465               	bsf	___fladd@aexp,0
  6846  160A  0865               	movf	___fladd@aexp,w
  6847  160B  1903               	btfsc	3,2
  6848  160C  2E1B               	goto	l2409
  6849  160D  0A65               	incf	___fladd@aexp,w
  6850  160E  1D03               	btfss	3,2
  6851  160F  2E18               	goto	l2405
  6852  1610  3000               	movlw	0
  6853  1611  00DB               	movwf	___fladd@a+3
  6854  1612  3000               	movlw	0
  6855  1613  00DA               	movwf	___fladd@a+2
  6856  1614  3000               	movlw	0
  6857  1615  00D9               	movwf	___fladd@a+1
  6858  1616  3000               	movlw	0
  6859  1617  00D8               	movwf	___fladd@a
  6860  1618                     l2405:	
  6861  1618  17DA               	bsf	___fladd@a+2,7
  6862  1619  01DB               	clrf	___fladd@a+3
  6863  161A  2E23               	goto	l591
  6864  161B                     l2409:	
  6865  161B  3000               	movlw	0
  6866  161C  00DB               	movwf	___fladd@a+3
  6867  161D  3000               	movlw	0
  6868  161E  00DA               	movwf	___fladd@a+2
  6869  161F  3000               	movlw	0
  6870  1620  00D9               	movwf	___fladd@a+1
  6871  1621  3000               	movlw	0
  6872  1622  00D8               	movwf	___fladd@a
  6873  1623                     l591:	
  6874  1623  0866               	movf	___fladd@bexp,w
  6875  1624  0265               	subwf	___fladd@aexp,w
  6876  1625  1803               	skipnc
  6877  1626  2E69               	goto	l2445
  6878  1627  1F64               	btfss	___fladd@signs,6
  6879  1628  2E2D               	goto	l2415
  6880  1629  3080               	movlw	128
  6881  162A  00DC               	movwf	??___fladd
  6882  162B  085C               	movf	??___fladd,w
  6883  162C  06E4               	xorwf	___fladd@signs,f
  6884  162D                     l2415:	
  6885  162D  0866               	movf	___fladd@bexp,w
  6886  162E  00DC               	movwf	??___fladd
  6887  162F  085C               	movf	??___fladd,w
  6888  1630  00E7               	movwf	___fladd@grs
  6889  1631  0865               	movf	___fladd@aexp,w
  6890  1632  00DC               	movwf	??___fladd
  6891  1633  085C               	movf	??___fladd,w
  6892  1634  00E6               	movwf	___fladd@bexp
  6893  1635  0867               	movf	___fladd@grs,w
  6894  1636  00DC               	movwf	??___fladd
  6895  1637  085C               	movf	??___fladd,w
  6896  1638  00E5               	movwf	___fladd@aexp
  6897  1639  0854               	movf	___fladd@b,w
  6898  163A  00DC               	movwf	??___fladd
  6899  163B  085C               	movf	??___fladd,w
  6900  163C  00E7               	movwf	___fladd@grs
  6901  163D  0858               	movf	___fladd@a,w
  6902  163E  00DC               	movwf	??___fladd
  6903  163F  085C               	movf	??___fladd,w
  6904  1640  00D4               	movwf	___fladd@b
  6905  1641  0867               	movf	___fladd@grs,w
  6906  1642  00DC               	movwf	??___fladd
  6907  1643  085C               	movf	??___fladd,w
  6908  1644  00D8               	movwf	___fladd@a
  6909  1645  0855               	movf	___fladd@b+1,w
  6910  1646  00DC               	movwf	??___fladd
  6911  1647  085C               	movf	??___fladd,w
  6912  1648  00E7               	movwf	___fladd@grs
  6913  1649  0859               	movf	___fladd@a+1,w
  6914  164A  00DC               	movwf	??___fladd
  6915  164B  085C               	movf	??___fladd,w
  6916  164C  00D5               	movwf	___fladd@b+1
  6917  164D  0867               	movf	___fladd@grs,w
  6918  164E  00DC               	movwf	??___fladd
  6919  164F  085C               	movf	??___fladd,w
  6920  1650  00D9               	movwf	___fladd@a+1
  6921  1651  0856               	movf	___fladd@b+2,w
  6922  1652  00DC               	movwf	??___fladd
  6923  1653  085C               	movf	??___fladd,w
  6924  1654  00E7               	movwf	___fladd@grs
  6925  1655  085A               	movf	___fladd@a+2,w
  6926  1656  00DC               	movwf	??___fladd
  6927  1657  085C               	movf	??___fladd,w
  6928  1658  00D6               	movwf	___fladd@b+2
  6929  1659  0867               	movf	___fladd@grs,w
  6930  165A  00DC               	movwf	??___fladd
  6931  165B  085C               	movf	??___fladd,w
  6932  165C  00DA               	movwf	___fladd@a+2
  6933  165D  0857               	movf	___fladd@b+3,w
  6934  165E  00DC               	movwf	??___fladd
  6935  165F  085C               	movf	??___fladd,w
  6936  1660  00E7               	movwf	___fladd@grs
  6937  1661  085B               	movf	___fladd@a+3,w
  6938  1662  00DC               	movwf	??___fladd
  6939  1663  085C               	movf	??___fladd,w
  6940  1664  00D7               	movwf	___fladd@b+3
  6941  1665  0867               	movf	___fladd@grs,w
  6942  1666  00DC               	movwf	??___fladd
  6943  1667  085C               	movf	??___fladd,w
  6944  1668  00DB               	movwf	___fladd@a+3
  6945  1669                     l2445:	
  6946  1669  01E7               	clrf	___fladd@grs
  6947  166A  0865               	movf	___fladd@aexp,w
  6948  166B  00DC               	movwf	??___fladd
  6949  166C  01DD               	clrf	??___fladd+1
  6950  166D  085D               	movf	??___fladd+1,w
  6951  166E  00DF               	movwf	??___fladd+3
  6952  166F  0866               	movf	___fladd@bexp,w
  6953  1670  025C               	subwf	??___fladd,w
  6954  1671  00DE               	movwf	??___fladd+2
  6955  1672  1C03               	skipc
  6956  1673  03DF               	decf	??___fladd+3,f
  6957  1674  085F               	movf	??___fladd+3,w
  6958  1675  3A80               	xorlw	128
  6959  1676  00FF               	movwf	127
  6960  1677  3080               	movlw	128
  6961  1678  027F               	subwf	127,w
  6962  1679  1D03               	skipz
  6963  167A  2E7D               	goto	u3495
  6964  167B  301A               	movlw	26
  6965  167C  025E               	subwf	??___fladd+2,w
  6966  167D                     u3495:	
  6967  167D  1C03               	skipc
  6968  167E  2EB6               	goto	l2463
  6969  167F  1283               	bcf	3,5	;RP0=0, select bank0
  6970  1680  1303               	bcf	3,6	;RP1=0, select bank0
  6971  1681  0857               	movf	___fladd@b+3,w
  6972  1682  0456               	iorwf	___fladd@b+2,w
  6973  1683  0455               	iorwf	___fladd@b+1,w
  6974  1684  0454               	iorwf	___fladd@b,w
  6975  1685  1903               	btfsc	3,2
  6976  1686  2E89               	goto	u3500
  6977  1687  3001               	movlw	1
  6978  1688  2E8A               	goto	u3510
  6979  1689                     u3500:	
  6980  1689  3000               	movlw	0
  6981  168A                     u3510:	
  6982  168A  00DC               	movwf	??___fladd
  6983  168B  085C               	movf	??___fladd,w
  6984  168C  00E7               	movwf	___fladd@grs
  6985  168D  3000               	movlw	0
  6986  168E  00D7               	movwf	___fladd@b+3
  6987  168F  3000               	movlw	0
  6988  1690  00D6               	movwf	___fladd@b+2
  6989  1691  3000               	movlw	0
  6990  1692  00D5               	movwf	___fladd@b+1
  6991  1693  3000               	movlw	0
  6992  1694  00D4               	movwf	___fladd@b
  6993  1695  0865               	movf	___fladd@aexp,w
  6994  1696  00DC               	movwf	??___fladd
  6995  1697  085C               	movf	??___fladd,w
  6996  1698  00E6               	movwf	___fladd@bexp
  6997  1699  2EBC               	goto	l595
  6998  169A                     l597:	
  6999  169A  1C67               	btfss	___fladd@grs,0
  7000  169B  2EA5               	goto	l2453
  7001  169C  0867               	movf	___fladd@grs,w
  7002  169D  00DC               	movwf	??___fladd
  7003  169E  1003               	clrc
  7004  169F  0C5C               	rrf	??___fladd,w
  7005  16A0  3801               	iorlw	1
  7006  16A1  00DD               	movwf	??___fladd+1
  7007  16A2  085D               	movf	??___fladd+1,w
  7008  16A3  00E7               	movwf	___fladd@grs
  7009  16A4  2EA7               	goto	l2455
  7010  16A5                     l2453:	
  7011  16A5  1003               	clrc
  7012  16A6  0CE7               	rrf	___fladd@grs,f
  7013  16A7                     l2455:	
  7014  16A7  1854               	btfsc	___fladd@b,0
  7015  16A8  17E7               	bsf	___fladd@grs,7
  7016  16A9  3001               	movlw	1
  7017  16AA  00DC               	movwf	??___fladd
  7018  16AB                     u3545:	
  7019  16AB  0D57               	rlf	___fladd@b+3,w
  7020  16AC  0CD7               	rrf	___fladd@b+3,f
  7021  16AD  0CD6               	rrf	___fladd@b+2,f
  7022  16AE  0CD5               	rrf	___fladd@b+1,f
  7023  16AF  0CD4               	rrf	___fladd@b,f
  7024  16B0  0BDC               	decfsz	??___fladd& (0+127),f
  7025  16B1  2EAB               	goto	u3545
  7026  16B2  3001               	movlw	1
  7027  16B3  00DC               	movwf	??___fladd
  7028  16B4  085C               	movf	??___fladd,w
  7029  16B5  07E6               	addwf	___fladd@bexp,f
  7030  16B6                     l2463:	
  7031  16B6  1283               	bcf	3,5	;RP0=0, select bank0
  7032  16B7  1303               	bcf	3,6	;RP1=0, select bank0
  7033  16B8  0865               	movf	___fladd@aexp,w
  7034  16B9  0266               	subwf	___fladd@bexp,w
  7035  16BA  1C03               	skipc
  7036  16BB  2E9A               	goto	l597
  7037  16BC                     l595:	
  7038  16BC  1B64               	btfsc	___fladd@signs,6
  7039  16BD  2EFD               	goto	l2489
  7040  16BE  0866               	movf	___fladd@bexp,w
  7041  16BF  1D03               	btfss	3,2
  7042  16C0  2ECA               	goto	l2471
  7043  16C1  3000               	movlw	0
  7044  16C2  00D7               	movwf	?___fladd+3
  7045  16C3  3000               	movlw	0
  7046  16C4  00D6               	movwf	?___fladd+2
  7047  16C5  3000               	movlw	0
  7048  16C6  00D5               	movwf	?___fladd+1
  7049  16C7  3000               	movlw	0
  7050  16C8  00D4               	movwf	?___fladd
  7051  16C9  0008               	return
  7052  16CA                     l2471:	
  7053  16CA  0858               	movf	___fladd@a,w
  7054  16CB  07D4               	addwf	___fladd@b,f
  7055  16CC  0859               	movf	___fladd@a+1,w
  7056  16CD  1103               	clrz
  7057  16CE  1803               	skipnc
  7058  16CF  3E01               	addlw	1
  7059  16D0  1D03               	btfss	3,2
  7060  16D1  07D5               	addwf	___fladd@b+1,f
  7061  16D2  085A               	movf	___fladd@a+2,w
  7062  16D3  1103               	clrz
  7063  16D4  1803               	skipnc
  7064  16D5  3E01               	addlw	1
  7065  16D6  1D03               	btfss	3,2
  7066  16D7  07D6               	addwf	___fladd@b+2,f
  7067  16D8  085B               	movf	___fladd@a+3,w
  7068  16D9  1103               	clrz
  7069  16DA  1803               	skipnc
  7070  16DB  3E01               	addlw	1
  7071  16DC  1D03               	btfss	3,2
  7072  16DD  07D7               	addwf	___fladd@b+3,f
  7073  16DE  1C57               	btfss	___fladd@b+3,0
  7074  16DF  2F9F               	goto	l2523
  7075  16E0  1C67               	btfss	___fladd@grs,0
  7076  16E1  2EEB               	goto	l2479
  7077  16E2  0867               	movf	___fladd@grs,w
  7078  16E3  00DC               	movwf	??___fladd
  7079  16E4  1003               	clrc
  7080  16E5  0C5C               	rrf	??___fladd,w
  7081  16E6  3801               	iorlw	1
  7082  16E7  00DD               	movwf	??___fladd+1
  7083  16E8  085D               	movf	??___fladd+1,w
  7084  16E9  00E7               	movwf	___fladd@grs
  7085  16EA  2EED               	goto	l2481
  7086  16EB                     l2479:	
  7087  16EB  1003               	clrc
  7088  16EC  0CE7               	rrf	___fladd@grs,f
  7089  16ED                     l2481:	
  7090  16ED  1854               	btfsc	___fladd@b,0
  7091  16EE  17E7               	bsf	___fladd@grs,7
  7092  16EF  3001               	movlw	1
  7093  16F0  00DC               	movwf	??___fladd
  7094  16F1                     u3625:	
  7095  16F1  0D57               	rlf	___fladd@b+3,w
  7096  16F2  0CD7               	rrf	___fladd@b+3,f
  7097  16F3  0CD6               	rrf	___fladd@b+2,f
  7098  16F4  0CD5               	rrf	___fladd@b+1,f
  7099  16F5  0CD4               	rrf	___fladd@b,f
  7100  16F6  0BDC               	decfsz	??___fladd& (0+127),f
  7101  16F7  2EF1               	goto	u3625
  7102  16F8  3001               	movlw	1
  7103  16F9  00DC               	movwf	??___fladd
  7104  16FA  085C               	movf	??___fladd,w
  7105  16FB  07E6               	addwf	___fladd@bexp,f
  7106  16FC  2F9F               	goto	l2523
  7107  16FD                     l2489:	
  7108  16FD  0857               	movf	___fladd@b+3,w
  7109  16FE  3A80               	xorlw	128
  7110  16FF  00FF               	movwf	127
  7111  1700  085B               	movf	___fladd@a+3,w
  7112  1701  3A80               	xorlw	128
  7113  1702  027F               	subwf	127,w
  7114  1703  1D03               	skipz
  7115  1704  2F0F               	goto	u3633
  7116  1705  085A               	movf	___fladd@a+2,w
  7117  1706  0256               	subwf	___fladd@b+2,w
  7118  1707  1D03               	skipz
  7119  1708  2F0F               	goto	u3633
  7120  1709  0859               	movf	___fladd@a+1,w
  7121  170A  0255               	subwf	___fladd@b+1,w
  7122  170B  1D03               	skipz
  7123  170C  2F0F               	goto	u3633
  7124  170D  0858               	movf	___fladd@a,w
  7125  170E  0254               	subwf	___fladd@b,w
  7126  170F                     u3633:	
  7127  170F  1803               	skipnc
  7128  1710  2F67               	goto	l2499
  7129  1711  30FF               	movlw	255
  7130  1712  00DC               	movwf	??___fladd
  7131  1713  30FF               	movlw	255
  7132  1714  00DD               	movwf	??___fladd+1
  7133  1715  30FF               	movlw	255
  7134  1716  00DE               	movwf	??___fladd+2
  7135  1717  30FF               	movlw	255
  7136  1718  00DF               	movwf	??___fladd+3
  7137  1719  0858               	movf	___fladd@a,w
  7138  171A  00E0               	movwf	??___fladd+4
  7139  171B  0859               	movf	___fladd@a+1,w
  7140  171C  00E1               	movwf	??___fladd+5
  7141  171D  085A               	movf	___fladd@a+2,w
  7142  171E  00E2               	movwf	??___fladd+6
  7143  171F  085B               	movf	___fladd@a+3,w
  7144  1720  00E3               	movwf	??___fladd+7
  7145  1721  0854               	movf	___fladd@b,w
  7146  1722  02E0               	subwf	??___fladd+4,f
  7147  1723  0855               	movf	___fladd@b+1,w
  7148  1724  1C03               	skipc
  7149  1725  0F55               	incfsz	___fladd@b+1,w
  7150  1726  2F28               	goto	u3641
  7151  1727  2F29               	goto	u3642
  7152  1728                     u3641:	
  7153  1728  02E1               	subwf	??___fladd+5,f
  7154  1729                     u3642:	
  7155  1729  0856               	movf	___fladd@b+2,w
  7156  172A  1C03               	skipc
  7157  172B  0F56               	incfsz	___fladd@b+2,w
  7158  172C  2F2E               	goto	u3643
  7159  172D  2F2F               	goto	u3644
  7160  172E                     u3643:	
  7161  172E  02E2               	subwf	??___fladd+6,f
  7162  172F                     u3644:	
  7163  172F  0857               	movf	___fladd@b+3,w
  7164  1730  1C03               	skipc
  7165  1731  0F57               	incfsz	___fladd@b+3,w
  7166  1732  2F34               	goto	u3645
  7167  1733  2F35               	goto	u3646
  7168  1734                     u3645:	
  7169  1734  02E3               	subwf	??___fladd+7,f
  7170  1735                     u3646:	
  7171  1735  0860               	movf	??___fladd+4,w
  7172  1736  07DC               	addwf	??___fladd,f
  7173  1737  0861               	movf	??___fladd+5,w
  7174  1738  1803               	skipnc
  7175  1739  0F61               	incfsz	??___fladd+5,w
  7176  173A  2F3C               	goto	u3650
  7177  173B  2F3D               	goto	u3651
  7178  173C                     u3650:	
  7179  173C  07DD               	addwf	??___fladd+1,f
  7180  173D                     u3651:	
  7181  173D  0862               	movf	??___fladd+6,w
  7182  173E  1803               	skipnc
  7183  173F  0F62               	incfsz	??___fladd+6,w
  7184  1740  2F42               	goto	u3652
  7185  1741  2F43               	goto	u3653
  7186  1742                     u3652:	
  7187  1742  07DE               	addwf	??___fladd+2,f
  7188  1743                     u3653:	
  7189  1743  0863               	movf	??___fladd+7,w
  7190  1744  1803               	skipnc
  7191  1745  0A63               	incf	??___fladd+7,w
  7192  1746  07DF               	addwf	??___fladd+3,f
  7193  1747  085F               	movf	??___fladd+3,w
  7194  1748  00D7               	movwf	___fladd@b+3
  7195  1749  085E               	movf	??___fladd+2,w
  7196  174A  00D6               	movwf	___fladd@b+2
  7197  174B  085D               	movf	??___fladd+1,w
  7198  174C  00D5               	movwf	___fladd@b+1
  7199  174D  085C               	movf	??___fladd,w
  7200  174E  00D4               	movwf	___fladd@b
  7201  174F  3080               	movlw	128
  7202  1750  00DC               	movwf	??___fladd
  7203  1751  085C               	movf	??___fladd,w
  7204  1752  06E4               	xorwf	___fladd@signs,f
  7205  1753  09E7               	comf	___fladd@grs,f
  7206  1754  0AE7               	incf	___fladd@grs,f
  7207  1755  0867               	movf	___fladd@grs,w
  7208  1756  1D03               	btfss	3,2
  7209  1757  2F75               	goto	l612
  7210  1758  3001               	movlw	1
  7211  1759  07D4               	addwf	___fladd@b,f
  7212  175A  3000               	movlw	0
  7213  175B  1803               	skipnc
  7214  175C  3001               	movlw	1
  7215  175D  07D5               	addwf	___fladd@b+1,f
  7216  175E  3000               	movlw	0
  7217  175F  1803               	skipnc
  7218  1760  3001               	movlw	1
  7219  1761  07D6               	addwf	___fladd@b+2,f
  7220  1762  3000               	movlw	0
  7221  1763  1803               	skipnc
  7222  1764  3001               	movlw	1
  7223  1765  07D7               	addwf	___fladd@b+3,f
  7224  1766  2F75               	goto	l612
  7225  1767                     l2499:	
  7226  1767  0858               	movf	___fladd@a,w
  7227  1768  02D4               	subwf	___fladd@b,f
  7228  1769  0859               	movf	___fladd@a+1,w
  7229  176A  1C03               	skipc
  7230  176B  0F59               	incfsz	___fladd@a+1,w
  7231  176C  02D5               	subwf	___fladd@b+1,f
  7232  176D  085A               	movf	___fladd@a+2,w
  7233  176E  1C03               	skipc
  7234  176F  0F5A               	incfsz	___fladd@a+2,w
  7235  1770  02D6               	subwf	___fladd@b+2,f
  7236  1771  085B               	movf	___fladd@a+3,w
  7237  1772  1C03               	skipc
  7238  1773  0F5B               	incfsz	___fladd@a+3,w
  7239  1774  02D7               	subwf	___fladd@b+3,f
  7240  1775                     l612:	
  7241  1775  0857               	movf	___fladd@b+3,w
  7242  1776  0456               	iorwf	___fladd@b+2,w
  7243  1777  0455               	iorwf	___fladd@b+1,w
  7244  1778  0454               	iorwf	___fladd@b,w
  7245  1779  1D03               	skipz
  7246  177A  2F9D               	goto	l2521
  7247  177B  0867               	movf	___fladd@grs,w
  7248  177C  1D03               	btfss	3,2
  7249  177D  2F9D               	goto	l2521
  7250  177E  3000               	movlw	0
  7251  177F  00D7               	movwf	?___fladd+3
  7252  1780  3000               	movlw	0
  7253  1781  00D6               	movwf	?___fladd+2
  7254  1782  3000               	movlw	0
  7255  1783  00D5               	movwf	?___fladd+1
  7256  1784  3000               	movlw	0
  7257  1785  00D4               	movwf	?___fladd
  7258  1786  0008               	return
  7259  1787                     l2507:	
  7260  1787  3001               	movlw	1
  7261  1788  00DC               	movwf	??___fladd
  7262  1789                     u3695:	
  7263  1789  1003               	clrc
  7264  178A  0DD4               	rlf	___fladd@b,f
  7265  178B  0DD5               	rlf	___fladd@b+1,f
  7266  178C  0DD6               	rlf	___fladd@b+2,f
  7267  178D  0DD7               	rlf	___fladd@b+3,f
  7268  178E  0BDC               	decfsz	??___fladd,f
  7269  178F  2F89               	goto	u3695
  7270  1790  1BE7               	btfsc	___fladd@grs,7
  7271  1791  1454               	bsf	___fladd@b,0
  7272  1792  1C67               	btfss	___fladd@grs,0
  7273  1793  2F96               	goto	l2515
  7274  1794  1403               	setc
  7275  1795  2F97               	goto	L7
  7276  1796                     l2515:	
  7277  1796  1003               	clrc
  7278  1797                     L7:	
  7279  1797  0DE7               	rlf	___fladd@grs,f
  7280  1798  0866               	movf	___fladd@bexp,w
  7281  1799  1903               	btfsc	3,2
  7282  179A  2F9D               	goto	l2521
  7283  179B  3001               	movlw	1
  7284  179C  02E6               	subwf	___fladd@bexp,f
  7285  179D                     l2521:	
  7286  179D  1FD6               	btfss	___fladd@b+2,7
  7287  179E  2F87               	goto	l2507
  7288  179F                     l2523:	
  7289  179F  01E5               	clrf	___fladd@aexp
  7290  17A0  1FE7               	btfss	___fladd@grs,7
  7291  17A1  2FAA               	goto	l2533
  7292  17A2  0867               	movf	___fladd@grs,w
  7293  17A3  397F               	andlw	127
  7294  17A4  1903               	btfsc	3,2
  7295  17A5  1854               	btfsc	___fladd@b,0
  7296  17A6  2FA8               	goto	l2529
  7297  17A7  2FAA               	goto	l2533
  7298  17A8                     l2529:	
  7299  17A8  01E5               	clrf	___fladd@aexp
  7300  17A9  0AE5               	incf	___fladd@aexp,f
  7301  17AA                     l2533:	
  7302  17AA  0865               	movf	___fladd@aexp,w
  7303  17AB  1903               	btfsc	3,2
  7304  17AC  2FDD               	goto	l625
  7305  17AD  3001               	movlw	1
  7306  17AE  07D4               	addwf	___fladd@b,f
  7307  17AF  3000               	movlw	0
  7308  17B0  1803               	skipnc
  7309  17B1  3001               	movlw	1
  7310  17B2  07D5               	addwf	___fladd@b+1,f
  7311  17B3  3000               	movlw	0
  7312  17B4  1803               	skipnc
  7313  17B5  3001               	movlw	1
  7314  17B6  07D6               	addwf	___fladd@b+2,f
  7315  17B7  3000               	movlw	0
  7316  17B8  1803               	skipnc
  7317  17B9  3001               	movlw	1
  7318  17BA  07D7               	addwf	___fladd@b+3,f
  7319  17BB  1C57               	btfss	___fladd@b+3,0
  7320  17BC  2FDD               	goto	l625
  7321  17BD  0854               	movf	___fladd@b,w
  7322  17BE  00DC               	movwf	??___fladd
  7323  17BF  0855               	movf	___fladd@b+1,w
  7324  17C0  00DD               	movwf	??___fladd+1
  7325  17C1  0856               	movf	___fladd@b+2,w
  7326  17C2  00DE               	movwf	??___fladd+2
  7327  17C3  0857               	movf	___fladd@b+3,w
  7328  17C4  00DF               	movwf	??___fladd+3
  7329  17C5  3001               	movlw	1
  7330  17C6  00E0               	movwf	??___fladd+4
  7331  17C7                     u3795:	
  7332  17C7  0D5F               	rlf	??___fladd+3,w
  7333  17C8  0CDF               	rrf	??___fladd+3,f
  7334  17C9  0CDE               	rrf	??___fladd+2,f
  7335  17CA  0CDD               	rrf	??___fladd+1,f
  7336  17CB  0CDC               	rrf	??___fladd,f
  7337  17CC  0BE0               	decfsz	??___fladd+4,f
  7338  17CD  2FC7               	goto	u3795
  7339  17CE  085F               	movf	??___fladd+3,w
  7340  17CF  00D7               	movwf	___fladd@b+3
  7341  17D0  085E               	movf	??___fladd+2,w
  7342  17D1  00D6               	movwf	___fladd@b+2
  7343  17D2  085D               	movf	??___fladd+1,w
  7344  17D3  00D5               	movwf	___fladd@b+1
  7345  17D4  085C               	movf	??___fladd,w
  7346  17D5  00D4               	movwf	___fladd@b
  7347  17D6  0A66               	incf	___fladd@bexp,w
  7348  17D7  1903               	btfsc	3,2
  7349  17D8  2FDD               	goto	l625
  7350  17D9  3001               	movlw	1
  7351  17DA  00DC               	movwf	??___fladd
  7352  17DB  085C               	movf	??___fladd,w
  7353  17DC  07E6               	addwf	___fladd@bexp,f
  7354  17DD                     l625:	
  7355  17DD  0A66               	incf	___fladd@bexp,w
  7356  17DE  1D03               	btfss	3,2
  7357  17DF  0866               	movf	___fladd@bexp,w
  7358  17E0  1D03               	btfss	3,2
  7359  17E1  2FED               	goto	l2551
  7360  17E2  3000               	movlw	0
  7361  17E3  00D7               	movwf	___fladd@b+3
  7362  17E4  3000               	movlw	0
  7363  17E5  00D6               	movwf	___fladd@b+2
  7364  17E6  3000               	movlw	0
  7365  17E7  00D5               	movwf	___fladd@b+1
  7366  17E8  3000               	movlw	0
  7367  17E9  00D4               	movwf	___fladd@b
  7368  17EA  0866               	movf	___fladd@bexp,w
  7369  17EB  1903               	btfsc	3,2
  7370  17EC  01E4               	clrf	___fladd@signs
  7371  17ED                     l2551:	
  7372  17ED  1C66               	btfss	___fladd@bexp,0
  7373  17EE  2FF1               	goto	l2555
  7374  17EF  17D6               	bsf	___fladd@b+2,7
  7375  17F0  2FF5               	goto	l633
  7376  17F1                     l2555:	
  7377  17F1  307F               	movlw	127
  7378  17F2  00DC               	movwf	??___fladd
  7379  17F3  085C               	movf	??___fladd,w
  7380  17F4  05D6               	andwf	___fladd@b+2,f
  7381  17F5                     l633:	
  7382  17F5  0866               	movf	___fladd@bexp,w
  7383  17F6  00DC               	movwf	??___fladd
  7384  17F7  1003               	clrc
  7385  17F8  0C5C               	rrf	??___fladd,w
  7386  17F9  00DD               	movwf	??___fladd+1
  7387  17FA  085D               	movf	??___fladd+1,w
  7388  17FB  00D7               	movwf	___fladd@b+3
  7389  17FC  1FE4               	btfss	___fladd@signs,7
  7390  17FD  0008               	return
  7391  17FE  17D7               	bsf	___fladd@b+3,7
  7392  17FF  0008               	return
  7393  1800                     __end_of___fladd:	
  7394                           
  7395                           	psect	text20
  7396  1D24                     __ptext20:	
  7397 ;; *************** function ___flneg *****************
  7398 ;; Defined at:
  7399 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
  7400 ;; Parameters:    Size  Location     Type
  7401 ;;  f1              4    0[COMMON] unsigned char 
  7402 ;; Auto vars:     Size  Location     Type
  7403 ;;		None
  7404 ;; Return value:  Size  Location     Type
  7405 ;;                  4    0[COMMON] unsigned char 
  7406 ;; Registers used:
  7407 ;;		wreg
  7408 ;; Tracked objects:
  7409 ;;		On entry : 0/0
  7410 ;;		On exit  : 0/0
  7411 ;;		Unchanged: 0/0
  7412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7413 ;;      Params:         4       0       0       0       0
  7414 ;;      Locals:         0       0       0       0       0
  7415 ;;      Temps:          0       0       0       0       0
  7416 ;;      Totals:         4       0       0       0       0
  7417 ;;Total ram usage:        4 bytes
  7418 ;; Hardware stack levels used:    1
  7419 ;; This function calls:
  7420 ;;		Nothing
  7421 ;; This function is called by:
  7422 ;;		_sprintf
  7423 ;; This function uses a non-reentrant model
  7424 ;;
  7425                           
  7426                           
  7427                           ;psect for function ___flneg
  7428  1D24                     ___flneg:	
  7429                           
  7430                           ;incstack = 0
  7431                           ; Regs used in ___flneg: [wreg]
  7432  1D24  0873               	movf	___flneg@f1+3,w
  7433  1D25  0472               	iorwf	___flneg@f1+2,w
  7434  1D26  0471               	iorwf	___flneg@f1+1,w
  7435  1D27  0470               	iorwf	___flneg@f1,w
  7436  1D28  1903               	skipnz
  7437  1D29  0008               	return
  7438  1D2A  3080               	movlw	128
  7439  1D2B  06F3               	xorwf	___flneg@f1+3,f
  7440  1D2C  0008               	return
  7441  1D2D                     __end_of___flneg:	
  7442                           
  7443                           	psect	text21
  7444  124D                     __ptext21:	
  7445 ;; *************** function ___flge *****************
  7446 ;; Defined at:
  7447 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
  7448 ;; Parameters:    Size  Location     Type
  7449 ;;  ff1             4    0[COMMON] unsigned char 
  7450 ;;  ff2             4    4[COMMON] unsigned char 
  7451 ;; Auto vars:     Size  Location     Type
  7452 ;;		None
  7453 ;; Return value:  Size  Location     Type
  7454 ;;		None               void
  7455 ;; Registers used:
  7456 ;;		wreg, status,2, status,0
  7457 ;; Tracked objects:
  7458 ;;		On entry : 0/0
  7459 ;;		On exit  : 0/0
  7460 ;;		Unchanged: 0/0
  7461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7462 ;;      Params:         8       0       0       0       0
  7463 ;;      Locals:         0       0       0       0       0
  7464 ;;      Temps:          4       0       0       0       0
  7465 ;;      Totals:        12       0       0       0       0
  7466 ;;Total ram usage:       12 bytes
  7467 ;; Hardware stack levels used:    1
  7468 ;; This function calls:
  7469 ;;		Nothing
  7470 ;; This function is called by:
  7471 ;;		_sprintf
  7472 ;; This function uses a non-reentrant model
  7473 ;;
  7474                           
  7475                           
  7476                           ;psect for function ___flge
  7477  124D                     ___flge:	
  7478                           
  7479                           ;incstack = 0
  7480                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7481  124D  3000               	movlw	0
  7482  124E  0570               	andwf	___flge@ff1,w
  7483  124F  00F8               	movwf	??___flge
  7484  1250  3000               	movlw	0
  7485  1251  0571               	andwf	___flge@ff1+1,w
  7486  1252  00F9               	movwf	??___flge+1
  7487  1253  3080               	movlw	128
  7488  1254  0572               	andwf	___flge@ff1+2,w
  7489  1255  00FA               	movwf	??___flge+2
  7490  1256  307F               	movlw	127
  7491  1257  0573               	andwf	___flge@ff1+3,w
  7492  1258  00FB               	movwf	??___flge+3
  7493  1259  087B               	movf	??___flge+3,w
  7494  125A  047A               	iorwf	??___flge+2,w
  7495  125B  0479               	iorwf	??___flge+1,w
  7496  125C  0478               	iorwf	??___flge,w
  7497  125D  1D03               	skipz
  7498  125E  2A67               	goto	l455
  7499  125F  3000               	movlw	0
  7500  1260  00F3               	movwf	___flge@ff1+3
  7501  1261  3000               	movlw	0
  7502  1262  00F2               	movwf	___flge@ff1+2
  7503  1263  3000               	movlw	0
  7504  1264  00F1               	movwf	___flge@ff1+1
  7505  1265  3000               	movlw	0
  7506  1266  00F0               	movwf	___flge@ff1
  7507  1267                     l455:	
  7508  1267  3000               	movlw	0
  7509  1268  0574               	andwf	___flge@ff2,w
  7510  1269  00F8               	movwf	??___flge
  7511  126A  3000               	movlw	0
  7512  126B  0575               	andwf	___flge@ff2+1,w
  7513  126C  00F9               	movwf	??___flge+1
  7514  126D  3080               	movlw	128
  7515  126E  0576               	andwf	___flge@ff2+2,w
  7516  126F  00FA               	movwf	??___flge+2
  7517  1270  307F               	movlw	127
  7518  1271  0577               	andwf	___flge@ff2+3,w
  7519  1272  00FB               	movwf	??___flge+3
  7520  1273  087B               	movf	??___flge+3,w
  7521  1274  047A               	iorwf	??___flge+2,w
  7522  1275  0479               	iorwf	??___flge+1,w
  7523  1276  0478               	iorwf	??___flge,w
  7524  1277  1D03               	skipz
  7525  1278  2A81               	goto	l2961
  7526  1279  3000               	movlw	0
  7527  127A  00F7               	movwf	___flge@ff2+3
  7528  127B  3000               	movlw	0
  7529  127C  00F6               	movwf	___flge@ff2+2
  7530  127D  3000               	movlw	0
  7531  127E  00F5               	movwf	___flge@ff2+1
  7532  127F  3000               	movlw	0
  7533  1280  00F4               	movwf	___flge@ff2
  7534  1281                     l2961:	
  7535  1281  1FF3               	btfss	___flge@ff1+3,7
  7536  1282  2AA7               	goto	l2965
  7537  1283  3000               	movlw	0
  7538  1284  00F8               	movwf	??___flge
  7539  1285  3000               	movlw	0
  7540  1286  00F9               	movwf	??___flge+1
  7541  1287  3000               	movlw	0
  7542  1288  00FA               	movwf	??___flge+2
  7543  1289  3080               	movlw	128
  7544  128A  00FB               	movwf	??___flge+3
  7545  128B  0870               	movf	___flge@ff1,w
  7546  128C  02F8               	subwf	??___flge,f
  7547  128D  0871               	movf	___flge@ff1+1,w
  7548  128E  1C03               	skipc
  7549  128F  0F71               	incfsz	___flge@ff1+1,w
  7550  1290  2A92               	goto	u4941
  7551  1291  2A93               	goto	u4942
  7552  1292                     u4941:	
  7553  1292  02F9               	subwf	??___flge+1,f
  7554  1293                     u4942:	
  7555  1293  0872               	movf	___flge@ff1+2,w
  7556  1294  1C03               	skipc
  7557  1295  0F72               	incfsz	___flge@ff1+2,w
  7558  1296  2A98               	goto	u4943
  7559  1297  2A99               	goto	u4944
  7560  1298                     u4943:	
  7561  1298  02FA               	subwf	??___flge+2,f
  7562  1299                     u4944:	
  7563  1299  0873               	movf	___flge@ff1+3,w
  7564  129A  1C03               	skipc
  7565  129B  0F73               	incfsz	___flge@ff1+3,w
  7566  129C  2A9E               	goto	u4945
  7567  129D  2A9F               	goto	u4946
  7568  129E                     u4945:	
  7569  129E  02FB               	subwf	??___flge+3,f
  7570  129F                     u4946:	
  7571  129F  087B               	movf	??___flge+3,w
  7572  12A0  00F3               	movwf	___flge@ff1+3
  7573  12A1  087A               	movf	??___flge+2,w
  7574  12A2  00F2               	movwf	___flge@ff1+2
  7575  12A3  0879               	movf	??___flge+1,w
  7576  12A4  00F1               	movwf	___flge@ff1+1
  7577  12A5  0878               	movf	??___flge,w
  7578  12A6  00F0               	movwf	___flge@ff1
  7579  12A7                     l2965:	
  7580  12A7  1FF7               	btfss	___flge@ff2+3,7
  7581  12A8  2ACD               	goto	l458
  7582  12A9  3000               	movlw	0
  7583  12AA  00F8               	movwf	??___flge
  7584  12AB  3000               	movlw	0
  7585  12AC  00F9               	movwf	??___flge+1
  7586  12AD  3000               	movlw	0
  7587  12AE  00FA               	movwf	??___flge+2
  7588  12AF  3080               	movlw	128
  7589  12B0  00FB               	movwf	??___flge+3
  7590  12B1  0874               	movf	___flge@ff2,w
  7591  12B2  02F8               	subwf	??___flge,f
  7592  12B3  0875               	movf	___flge@ff2+1,w
  7593  12B4  1C03               	skipc
  7594  12B5  0F75               	incfsz	___flge@ff2+1,w
  7595  12B6  2AB8               	goto	u4961
  7596  12B7  2AB9               	goto	u4962
  7597  12B8                     u4961:	
  7598  12B8  02F9               	subwf	??___flge+1,f
  7599  12B9                     u4962:	
  7600  12B9  0876               	movf	___flge@ff2+2,w
  7601  12BA  1C03               	skipc
  7602  12BB  0F76               	incfsz	___flge@ff2+2,w
  7603  12BC  2ABE               	goto	u4963
  7604  12BD  2ABF               	goto	u4964
  7605  12BE                     u4963:	
  7606  12BE  02FA               	subwf	??___flge+2,f
  7607  12BF                     u4964:	
  7608  12BF  0877               	movf	___flge@ff2+3,w
  7609  12C0  1C03               	skipc
  7610  12C1  0F77               	incfsz	___flge@ff2+3,w
  7611  12C2  2AC4               	goto	u4965
  7612  12C3  2AC5               	goto	u4966
  7613  12C4                     u4965:	
  7614  12C4  02FB               	subwf	??___flge+3,f
  7615  12C5                     u4966:	
  7616  12C5  087B               	movf	??___flge+3,w
  7617  12C6  00F7               	movwf	___flge@ff2+3
  7618  12C7  087A               	movf	??___flge+2,w
  7619  12C8  00F6               	movwf	___flge@ff2+2
  7620  12C9  0879               	movf	??___flge+1,w
  7621  12CA  00F5               	movwf	___flge@ff2+1
  7622  12CB  0878               	movf	??___flge,w
  7623  12CC  00F4               	movwf	___flge@ff2
  7624  12CD                     l458:	
  7625  12CD  3080               	movlw	128
  7626  12CE  06F3               	xorwf	___flge@ff1+3,f
  7627  12CF  3080               	movlw	128
  7628  12D0  06F7               	xorwf	___flge@ff2+3,f
  7629  12D1  0877               	movf	___flge@ff2+3,w
  7630  12D2  0273               	subwf	___flge@ff1+3,w
  7631  12D3  1D03               	skipz
  7632  12D4  0008               	return
  7633  12D5  0876               	movf	___flge@ff2+2,w
  7634  12D6  0272               	subwf	___flge@ff1+2,w
  7635  12D7  1D03               	skipz
  7636  12D8  0008               	return
  7637  12D9  0875               	movf	___flge@ff2+1,w
  7638  12DA  0271               	subwf	___flge@ff1+1,w
  7639  12DB  1D03               	skipz
  7640  12DC  0008               	return
  7641  12DD  0874               	movf	___flge@ff2,w
  7642  12DE  0270               	subwf	___flge@ff1,w
  7643  12DF  0008               	return
  7644  12E0                     __end_of___flge:	
  7645                           
  7646                           	psect	text22
  7647  1F21                     __ptext22:	
  7648 ;; *************** function ___fleq *****************
  7649 ;; Defined at:
  7650 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;  ff1             4    0[COMMON] unsigned char 
  7653 ;;  ff2             4    4[COMMON] unsigned char 
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;		None
  7656 ;; Return value:  Size  Location     Type
  7657 ;;		None               void
  7658 ;; Registers used:
  7659 ;;		wreg, status,2, status,0
  7660 ;; Tracked objects:
  7661 ;;		On entry : 0/0
  7662 ;;		On exit  : 0/0
  7663 ;;		Unchanged: 0/0
  7664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7665 ;;      Params:         8       0       0       0       0
  7666 ;;      Locals:         0       0       0       0       0
  7667 ;;      Temps:          4       0       0       0       0
  7668 ;;      Totals:        12       0       0       0       0
  7669 ;;Total ram usage:       12 bytes
  7670 ;; Hardware stack levels used:    1
  7671 ;; This function calls:
  7672 ;;		Nothing
  7673 ;; This function is called by:
  7674 ;;		_sprintf
  7675 ;; This function uses a non-reentrant model
  7676 ;;
  7677                           
  7678                           
  7679                           ;psect for function ___fleq
  7680  1F21                     ___fleq:	
  7681                           
  7682                           ;incstack = 0
  7683                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7684  1F21  3000               	movlw	0
  7685  1F22  0570               	andwf	___fleq@ff1,w
  7686  1F23  00F8               	movwf	??___fleq
  7687  1F24  3000               	movlw	0
  7688  1F25  0571               	andwf	___fleq@ff1+1,w
  7689  1F26  00F9               	movwf	??___fleq+1
  7690  1F27  3080               	movlw	128
  7691  1F28  0572               	andwf	___fleq@ff1+2,w
  7692  1F29  00FA               	movwf	??___fleq+2
  7693  1F2A  307F               	movlw	127
  7694  1F2B  0573               	andwf	___fleq@ff1+3,w
  7695  1F2C  00FB               	movwf	??___fleq+3
  7696  1F2D  087B               	movf	??___fleq+3,w
  7697  1F2E  047A               	iorwf	??___fleq+2,w
  7698  1F2F  0479               	iorwf	??___fleq+1,w
  7699  1F30  0478               	iorwf	??___fleq,w
  7700  1F31  1D03               	skipz
  7701  1F32  2F3B               	goto	l450
  7702  1F33  3000               	movlw	0
  7703  1F34  00F3               	movwf	___fleq@ff1+3
  7704  1F35  3000               	movlw	0
  7705  1F36  00F2               	movwf	___fleq@ff1+2
  7706  1F37  3000               	movlw	0
  7707  1F38  00F1               	movwf	___fleq@ff1+1
  7708  1F39  3000               	movlw	0
  7709  1F3A  00F0               	movwf	___fleq@ff1
  7710  1F3B                     l450:	
  7711  1F3B  3000               	movlw	0
  7712  1F3C  0574               	andwf	___fleq@ff2,w
  7713  1F3D  00F8               	movwf	??___fleq
  7714  1F3E  3000               	movlw	0
  7715  1F3F  0575               	andwf	___fleq@ff2+1,w
  7716  1F40  00F9               	movwf	??___fleq+1
  7717  1F41  3080               	movlw	128
  7718  1F42  0576               	andwf	___fleq@ff2+2,w
  7719  1F43  00FA               	movwf	??___fleq+2
  7720  1F44  307F               	movlw	127
  7721  1F45  0577               	andwf	___fleq@ff2+3,w
  7722  1F46  00FB               	movwf	??___fleq+3
  7723  1F47  087B               	movf	??___fleq+3,w
  7724  1F48  047A               	iorwf	??___fleq+2,w
  7725  1F49  0479               	iorwf	??___fleq+1,w
  7726  1F4A  0478               	iorwf	??___fleq,w
  7727  1F4B  1D03               	skipz
  7728  1F4C  2F55               	goto	l451
  7729  1F4D  3000               	movlw	0
  7730  1F4E  00F7               	movwf	___fleq@ff2+3
  7731  1F4F  3000               	movlw	0
  7732  1F50  00F6               	movwf	___fleq@ff2+2
  7733  1F51  3000               	movlw	0
  7734  1F52  00F5               	movwf	___fleq@ff2+1
  7735  1F53  3000               	movlw	0
  7736  1F54  00F4               	movwf	___fleq@ff2
  7737  1F55                     l451:	
  7738  1F55  0877               	movf	___fleq@ff2+3,w
  7739  1F56  0673               	xorwf	___fleq@ff1+3,w
  7740  1F57  1D03               	skipz
  7741  1F58  2F63               	goto	u4905
  7742  1F59  0876               	movf	___fleq@ff2+2,w
  7743  1F5A  0672               	xorwf	___fleq@ff1+2,w
  7744  1F5B  1D03               	skipz
  7745  1F5C  2F63               	goto	u4905
  7746  1F5D  0875               	movf	___fleq@ff2+1,w
  7747  1F5E  0671               	xorwf	___fleq@ff1+1,w
  7748  1F5F  1D03               	skipz
  7749  1F60  2F63               	goto	u4905
  7750  1F61  0874               	movf	___fleq@ff2,w
  7751  1F62  0670               	xorwf	___fleq@ff1,w
  7752  1F63                     u4905:	
  7753  1F63  1903               	skipnz
  7754  1F64  2F67               	goto	l2951
  7755  1F65  1003               	clrc
  7756  1F66  0008               	return
  7757  1F67                     l2951:	
  7758  1F67  1403               	setc
  7759  1F68  0008               	return
  7760  1F69                     __end_of___fleq:	
  7761                           
  7762                           	psect	text23
  7763  1E6D                     __ptext23:	
  7764 ;; *************** function _lcdSetCursor *****************
  7765 ;; Defined at:
  7766 ;;		line 56 in file "./lcd.h"
  7767 ;; Parameters:    Size  Location     Type
  7768 ;;  y               1    wreg     unsigned char 
  7769 ;;  x               1    4[COMMON] unsigned char 
  7770 ;; Auto vars:     Size  Location     Type
  7771 ;;  y               1   11[COMMON] unsigned char 
  7772 ;;  temp            1   10[COMMON] unsigned char 
  7773 ;;  row             1    9[COMMON] unsigned char 
  7774 ;;  yy              1    8[COMMON] unsigned char 
  7775 ;;  z               1    7[COMMON] unsigned char 
  7776 ;; Return value:  Size  Location     Type
  7777 ;;                  1    wreg      void 
  7778 ;; Registers used:
  7779 ;;		wreg, status,2, status,0, pclath, cstack
  7780 ;; Tracked objects:
  7781 ;;		On entry : 0/0
  7782 ;;		On exit  : 0/0
  7783 ;;		Unchanged: 0/0
  7784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7785 ;;      Params:         1       0       0       0       0
  7786 ;;      Locals:         5       0       0       0       0
  7787 ;;      Temps:          2       0       0       0       0
  7788 ;;      Totals:         8       0       0       0       0
  7789 ;;Total ram usage:        8 bytes
  7790 ;; Hardware stack levels used:    1
  7791 ;; Hardware stack levels required when called:    2
  7792 ;; This function calls:
  7793 ;;		_lcdCmd
  7794 ;; This function is called by:
  7795 ;;		_main
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           
  7799                           
  7800                           ;psect for function _lcdSetCursor
  7801  1E6D                     _lcdSetCursor:	
  7802                           
  7803                           ;incstack = 0
  7804                           ; Regs used in _lcdSetCursor: [wreg+status,2+status,0+pclath+cstack]
  7805                           ;lcdSetCursor@y stored from wreg
  7806  1E6D  00FB               	movwf	lcdSetCursor@y
  7807                           
  7808                           ;./lcd.h: 57:     char temp, z, yy, row = 0x80;
  7809  1E6E  3080               	movlw	128
  7810  1E6F  00F5               	movwf	??_lcdSetCursor
  7811  1E70  0875               	movf	??_lcdSetCursor,w
  7812  1E71  00F9               	movwf	lcdSetCursor@row
  7813                           
  7814                           ;./lcd.h: 59:     if (y == 2)
  7815  1E72  3002               	movlw	2
  7816  1E73  067B               	xorwf	lcdSetCursor@y,w
  7817  1E74  1D03               	btfss	3,2
  7818  1E75  2E78               	goto	l3097
  7819                           
  7820                           ;./lcd.h: 60:         row += 64;
  7821  1E76  3040               	movlw	64
  7822  1E77  2E83               	goto	L9
  7823  1E78                     l3097:	
  7824  1E78  3003               	movlw	3
  7825  1E79  067B               	xorwf	lcdSetCursor@y,w
  7826  1E7A  1D03               	btfss	3,2
  7827  1E7B  2E7E               	goto	l3101
  7828                           
  7829                           ;./lcd.h: 62:         row +=20;
  7830  1E7C  3014               	movlw	20
  7831  1E7D  2E83               	goto	L9
  7832  1E7E                     l3101:	
  7833  1E7E  3004               	movlw	4
  7834  1E7F  067B               	xorwf	lcdSetCursor@y,w
  7835  1E80  1D03               	btfss	3,2
  7836  1E81  2E86               	goto	l53
  7837                           
  7838                           ;./lcd.h: 64:         row += 64+20;
  7839  1E82  3054               	movlw	84
  7840  1E83                     L9:	
  7841  1E83  00F5               	movwf	??_lcdSetCursor
  7842  1E84  0875               	movf	??_lcdSetCursor,w
  7843  1E85  07F9               	addwf	lcdSetCursor@row,f
  7844  1E86                     l53:	
  7845                           
  7846                           ;./lcd.h: 66:     temp = row + x - 1;
  7847  1E86  0874               	movf	lcdSetCursor@x,w
  7848  1E87  0779               	addwf	lcdSetCursor@row,w
  7849  1E88  3EFF               	addlw	255
  7850  1E89  00F5               	movwf	??_lcdSetCursor
  7851  1E8A  0875               	movf	??_lcdSetCursor,w
  7852  1E8B  00FA               	movwf	lcdSetCursor@temp
  7853                           
  7854                           ;./lcd.h: 67:     z = temp >> 4;
  7855  1E8C  087A               	movf	lcdSetCursor@temp,w
  7856  1E8D  00F5               	movwf	??_lcdSetCursor
  7857  1E8E  3004               	movlw	4
  7858  1E8F                     u5325:	
  7859  1E8F  1003               	clrc
  7860  1E90  0CF5               	rrf	??_lcdSetCursor,f
  7861  1E91  3EFF               	addlw	-1
  7862  1E92  1D03               	skipz
  7863  1E93  2E8F               	goto	u5325
  7864  1E94  0875               	movf	??_lcdSetCursor,w
  7865  1E95  00F6               	movwf	??_lcdSetCursor+1
  7866  1E96  0876               	movf	??_lcdSetCursor+1,w
  7867  1E97  00F7               	movwf	lcdSetCursor@z
  7868                           
  7869                           ;./lcd.h: 68:     yy = temp & 0x0F;
  7870  1E98  087A               	movf	lcdSetCursor@temp,w
  7871  1E99  390F               	andlw	15
  7872  1E9A  00F5               	movwf	??_lcdSetCursor
  7873  1E9B  0875               	movf	??_lcdSetCursor,w
  7874  1E9C  00F8               	movwf	lcdSetCursor@yy
  7875                           
  7876                           ;./lcd.h: 69:     lcdCmd(z);
  7877  1E9D  0877               	movf	lcdSetCursor@z,w
  7878  1E9E  160A  158A  2562  160A  158A  	fcall	_lcdCmd
  7879                           
  7880                           ;./lcd.h: 70:     lcdCmd(yy);
  7881  1EA3  0878               	movf	lcdSetCursor@yy,w
  7882  1EA4  160A  158A  2562   	fcall	_lcdCmd
  7883  1EA7  0008               	return
  7884  1EA8                     __end_of_lcdSetCursor:	
  7885                           
  7886                           	psect	text24
  7887  1EE4                     __ptext24:	
  7888 ;; *************** function _lcdPrint *****************
  7889 ;; Defined at:
  7890 ;;		line 108 in file "./lcd.h"
  7891 ;; Parameters:    Size  Location     Type
  7892 ;;  a               2    5[COMMON] PTR const unsigned char 
  7893 ;;		 -> main@mensaje(16), STR_3(8), STR_2(12), STR_1(11), 
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;  i               2   10[COMMON] int 
  7896 ;; Return value:  Size  Location     Type
  7897 ;;                  1    wreg      void 
  7898 ;; Registers used:
  7899 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 0/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7905 ;;      Params:         2       0       0       0       0
  7906 ;;      Locals:         2       0       0       0       0
  7907 ;;      Temps:          3       0       0       0       0
  7908 ;;      Totals:         7       0       0       0       0
  7909 ;;Total ram usage:        7 bytes
  7910 ;; Hardware stack levels used:    1
  7911 ;; Hardware stack levels required when called:    2
  7912 ;; This function calls:
  7913 ;;		_lcdWriteChar
  7914 ;; This function is called by:
  7915 ;;		_main
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919                           
  7920                           ;psect for function _lcdPrint
  7921  1EE4                     _lcdPrint:	
  7922                           
  7923                           ;./lcd.h: 109:     for (int i = 0; a[i] != '\0'; i++)
  7924                           
  7925                           ;incstack = 0
  7926                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7927  1EE4  01FA               	clrf	lcdPrint@i
  7928  1EE5  01FB               	clrf	lcdPrint@i+1
  7929  1EE6                     l3147:	
  7930  1EE6  087A               	movf	lcdPrint@i,w
  7931  1EE7  0775               	addwf	lcdPrint@a,w
  7932  1EE8  00F8               	movwf	??_lcdPrint+1
  7933  1EE9  0876               	movf	lcdPrint@a+1,w
  7934  1EEA  00F7               	movwf	??_lcdPrint
  7935  1EEB  1803               	skipnc
  7936  1EEC  0AF7               	incf	??_lcdPrint,f
  7937  1EED  1BFA               	btfsc	lcdPrint@i,7
  7938  1EEE  03F7               	decf	??_lcdPrint,f
  7939  1EEF  0877               	movf	??_lcdPrint,w
  7940  1EF0  00F9               	movwf	??_lcdPrint+2
  7941  1EF1  0879               	movf	??_lcdPrint+2,w
  7942  1EF2  1283               	bcf	3,5	;RP0=0, select bank0
  7943  1EF3  1303               	bcf	3,6	;RP1=0, select bank0
  7944  1EF4  00FF               	movwf	127
  7945  1EF5  0878               	movf	??_lcdPrint+1,w
  7946  1EF6  0084               	movwf	4
  7947  1EF7  160A  118A  2000  160A  158A  	fcall	stringtab
  7948  1EFC  3A00               	xorlw	0
  7949  1EFD  1903               	btfsc	3,2
  7950  1EFE  0008               	return
  7951                           
  7952                           ;./lcd.h: 110:         lcdWriteChar(a[i]);
  7953  1EFF  087A               	movf	lcdPrint@i,w
  7954  1F00  0775               	addwf	lcdPrint@a,w
  7955  1F01  00F8               	movwf	??_lcdPrint+1
  7956  1F02  0876               	movf	lcdPrint@a+1,w
  7957  1F03  00F7               	movwf	??_lcdPrint
  7958  1F04  1803               	skipnc
  7959  1F05  0AF7               	incf	??_lcdPrint,f
  7960  1F06  1BFA               	btfsc	lcdPrint@i,7
  7961  1F07  03F7               	decf	??_lcdPrint,f
  7962  1F08  0877               	movf	??_lcdPrint,w
  7963  1F09  00F9               	movwf	??_lcdPrint+2
  7964  1F0A  0879               	movf	??_lcdPrint+2,w
  7965  1F0B  1283               	bcf	3,5	;RP0=0, select bank0
  7966  1F0C  1303               	bcf	3,6	;RP1=0, select bank0
  7967  1F0D  00FF               	movwf	127
  7968  1F0E  0878               	movf	??_lcdPrint+1,w
  7969  1F0F  0084               	movwf	4
  7970  1F10  160A  118A  2000  160A  158A  	fcall	stringtab
  7971  1F15  160A  158A  2636  160A  158A  	fcall	_lcdWriteChar
  7972  1F1A  3001               	movlw	1
  7973  1F1B  07FA               	addwf	lcdPrint@i,f
  7974  1F1C  1803               	skipnc
  7975  1F1D  0AFB               	incf	lcdPrint@i+1,f
  7976  1F1E  3000               	movlw	0
  7977  1F1F  07FB               	addwf	lcdPrint@i+1,f
  7978  1F20  2EE6               	goto	l3147
  7979  1F21                     __end_of_lcdPrint:	
  7980                           
  7981                           	psect	text25
  7982  1E36                     __ptext25:	
  7983 ;; *************** function _lcdWriteChar *****************
  7984 ;; Defined at:
  7985 ;;		line 93 in file "./lcd.h"
  7986 ;; Parameters:    Size  Location     Type
  7987 ;;  a               1    wreg     const unsigned char 
  7988 ;; Auto vars:     Size  Location     Type
  7989 ;;  a               1    4[COMMON] const unsigned char 
  7990 ;;  y               1    3[COMMON] unsigned char 
  7991 ;;  temp            1    2[COMMON] unsigned char 
  7992 ;; Return value:  Size  Location     Type
  7993 ;;                  1    wreg      void 
  7994 ;; Registers used:
  7995 ;;		wreg, status,2, status,0, pclath, cstack
  7996 ;; Tracked objects:
  7997 ;;		On entry : 0/0
  7998 ;;		On exit  : 0/0
  7999 ;;		Unchanged: 0/0
  8000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8001 ;;      Params:         0       0       0       0       0
  8002 ;;      Locals:         3       0       0       0       0
  8003 ;;      Temps:          1       0       0       0       0
  8004 ;;      Totals:         4       0       0       0       0
  8005 ;;Total ram usage:        4 bytes
  8006 ;; Hardware stack levels used:    1
  8007 ;; Hardware stack levels required when called:    1
  8008 ;; This function calls:
  8009 ;;		_lcdPort
  8010 ;; This function is called by:
  8011 ;;		_lcdPrint
  8012 ;; This function uses a non-reentrant model
  8013 ;;
  8014                           
  8015                           
  8016                           ;psect for function _lcdWriteChar
  8017  1E36                     _lcdWriteChar:	
  8018                           
  8019                           ;incstack = 0
  8020                           ; Regs used in _lcdWriteChar: [wreg+status,2+status,0+pclath+cstack]
  8021                           ;lcdWriteChar@a stored from wreg
  8022  1E36  00F4               	movwf	lcdWriteChar@a
  8023                           
  8024                           ;./lcd.h: 94:     char temp, y;;./lcd.h: 95:     temp = a & 0x0F;
  8025  1E37  0874               	movf	lcdWriteChar@a,w
  8026  1E38  390F               	andlw	15
  8027  1E39  00F1               	movwf	??_lcdWriteChar
  8028  1E3A  0871               	movf	??_lcdWriteChar,w
  8029  1E3B  00F2               	movwf	lcdWriteChar@temp
  8030                           
  8031                           ;./lcd.h: 96:     y = a & 0xF0;
  8032  1E3C  0874               	movf	lcdWriteChar@a,w
  8033  1E3D  39F0               	andlw	240
  8034  1E3E  00F1               	movwf	??_lcdWriteChar
  8035  1E3F  0871               	movf	??_lcdWriteChar,w
  8036  1E40  00F3               	movwf	lcdWriteChar@y
  8037                           
  8038                           ;./lcd.h: 97:     RB2 = 1;
  8039  1E41  1283               	bcf	3,5	;RP0=0, select bank0
  8040  1E42  1303               	bcf	3,6	;RP1=0, select bank0
  8041  1E43  1506               	bsf	6,2	;volatile
  8042                           
  8043                           ;./lcd.h: 98:     lcdPort(y >> 4);
  8044  1E44  0873               	movf	lcdWriteChar@y,w
  8045  1E45  00F1               	movwf	??_lcdWriteChar
  8046  1E46  3004               	movlw	4
  8047  1E47                     u4235:	
  8048  1E47  1003               	clrc
  8049  1E48  0CF1               	rrf	??_lcdWriteChar,f
  8050  1E49  3EFF               	addlw	-1
  8051  1E4A  1D03               	skipz
  8052  1E4B  2E47               	goto	u4235
  8053  1E4C  0871               	movf	??_lcdWriteChar,w
  8054  1E4D  160A  158A  2548  160A  158A  	fcall	_lcdPort
  8055                           
  8056                           ;./lcd.h: 99:     RB3 = 1;
  8057  1E52  1283               	bcf	3,5	;RP0=0, select bank0
  8058  1E53  1303               	bcf	3,6	;RP1=0, select bank0
  8059  1E54  1586               	bsf	6,3	;volatile
  8060                           
  8061                           ;./lcd.h: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  8062  1E55  300D               	movlw	13
  8063  1E56  00F1               	movwf	??_lcdWriteChar
  8064  1E57                     u6037:	
  8065  1E57  0BF1               	decfsz	??_lcdWriteChar,f
  8066  1E58  2E57               	goto	u6037
  8067                           
  8068                           ;./lcd.h: 101:     RB3 = 0;
  8069  1E59  1283               	bcf	3,5	;RP0=0, select bank0
  8070  1E5A  1303               	bcf	3,6	;RP1=0, select bank0
  8071  1E5B  1186               	bcf	6,3	;volatile
  8072                           
  8073                           ;./lcd.h: 102:     lcdPort(temp);
  8074  1E5C  0872               	movf	lcdWriteChar@temp,w
  8075  1E5D  160A  158A  2548  160A  158A  	fcall	_lcdPort
  8076                           
  8077                           ;./lcd.h: 103:     RB3 = 1;
  8078  1E62  1283               	bcf	3,5	;RP0=0, select bank0
  8079  1E63  1303               	bcf	3,6	;RP1=0, select bank0
  8080  1E64  1586               	bsf	6,3	;volatile
  8081                           
  8082                           ;./lcd.h: 104:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  8083  1E65  300D               	movlw	13
  8084  1E66  00F1               	movwf	??_lcdWriteChar
  8085  1E67                     u6047:	
  8086  1E67  0BF1               	decfsz	??_lcdWriteChar,f
  8087  1E68  2E67               	goto	u6047
  8088                           
  8089                           ;./lcd.h: 105:     RB3 = 0;
  8090  1E69  1283               	bcf	3,5	;RP0=0, select bank0
  8091  1E6A  1303               	bcf	3,6	;RP1=0, select bank0
  8092  1E6B  1186               	bcf	6,3	;volatile
  8093  1E6C  0008               	return
  8094  1E6D                     __end_of_lcdWriteChar:	
  8095                           
  8096                           	psect	text26
  8097  117F                     __ptext26:	
  8098 ;; *************** function _lcdInit *****************
  8099 ;; Defined at:
  8100 ;;		line 73 in file "./lcd.h"
  8101 ;; Parameters:    Size  Location     Type
  8102 ;;		None
  8103 ;; Auto vars:     Size  Location     Type
  8104 ;;		None
  8105 ;; Return value:  Size  Location     Type
  8106 ;;                  1    wreg      void 
  8107 ;; Registers used:
  8108 ;;		wreg, status,2, status,0, pclath, cstack
  8109 ;; Tracked objects:
  8110 ;;		On entry : 0/0
  8111 ;;		On exit  : 0/0
  8112 ;;		Unchanged: 0/0
  8113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8114 ;;      Params:         0       0       0       0       0
  8115 ;;      Locals:         0       0       0       0       0
  8116 ;;      Temps:          2       0       0       0       0
  8117 ;;      Totals:         2       0       0       0       0
  8118 ;;Total ram usage:        2 bytes
  8119 ;; Hardware stack levels used:    1
  8120 ;; Hardware stack levels required when called:    2
  8121 ;; This function calls:
  8122 ;;		_lcdCmd
  8123 ;;		_lcdPort
  8124 ;; This function is called by:
  8125 ;;		_main
  8126 ;; This function uses a non-reentrant model
  8127 ;;
  8128                           
  8129                           
  8130                           ;psect for function _lcdInit
  8131  117F                     _lcdInit:	
  8132                           
  8133                           ;./lcd.h: 74:     TRISB = 0;
  8134                           
  8135                           ;incstack = 0
  8136                           ; Regs used in _lcdInit: [wreg+status,2+status,0+pclath+cstack]
  8137  117F  1683               	bsf	3,5	;RP0=1, select bank1
  8138  1180  1303               	bcf	3,6	;RP1=0, select bank1
  8139  1181  0186               	clrf	6	;volatile
  8140                           
  8141                           ;./lcd.h: 75:     PORTB = 0;
  8142  1182  1283               	bcf	3,5	;RP0=0, select bank0
  8143  1183  1303               	bcf	3,6	;RP1=0, select bank0
  8144  1184  0186               	clrf	6	;volatile
  8145                           
  8146                           ;./lcd.h: 76:     lcdPort(0x00);
  8147  1185  3000               	movlw	0
  8148  1186  160A  158A  2548  160A  118A  	fcall	_lcdPort
  8149                           
  8150                           ;./lcd.h: 77:     _delay((unsigned long)((20)*(4000000/4000.0)));
  8151  118B  301A               	movlw	26
  8152  118C  00F5               	movwf	??_lcdInit+1
  8153  118D  30F8               	movlw	248
  8154  118E  00F4               	movwf	??_lcdInit
  8155  118F                     u6057:	
  8156  118F  0BF4               	decfsz	??_lcdInit,f
  8157  1190  298F               	goto	u6057
  8158  1191  0BF5               	decfsz	??_lcdInit+1,f
  8159  1192  298F               	goto	u6057
  8160  1193  0000               	nop
  8161                           
  8162                           ;./lcd.h: 78:     lcdCmd(0x03);
  8163  1194  3003               	movlw	3
  8164  1195  160A  158A  2562  160A  118A  	fcall	_lcdCmd
  8165                           
  8166                           ;./lcd.h: 79:     _delay((unsigned long)((5)*(4000000/4000.0)));
  8167  119A  3007               	movlw	7
  8168  119B  00F5               	movwf	??_lcdInit+1
  8169  119C  307D               	movlw	125
  8170  119D  00F4               	movwf	??_lcdInit
  8171  119E                     u6067:	
  8172  119E  0BF4               	decfsz	??_lcdInit,f
  8173  119F  299E               	goto	u6067
  8174  11A0  0BF5               	decfsz	??_lcdInit+1,f
  8175  11A1  299E               	goto	u6067
  8176                           
  8177                           ;./lcd.h: 80:     lcdCmd(0x03);
  8178  11A2  3003               	movlw	3
  8179  11A3  160A  158A  2562  160A  118A  	fcall	_lcdCmd
  8180                           
  8181                           ;./lcd.h: 81:     _delay((unsigned long)((11)*(4000000/4000.0)));
  8182  11A8  300F               	movlw	15
  8183  11A9  00F5               	movwf	??_lcdInit+1
  8184  11AA  3047               	movlw	71
  8185  11AB  00F4               	movwf	??_lcdInit
  8186  11AC                     u6077:	
  8187  11AC  0BF4               	decfsz	??_lcdInit,f
  8188  11AD  29AC               	goto	u6077
  8189  11AE  0BF5               	decfsz	??_lcdInit+1,f
  8190  11AF  29AC               	goto	u6077
  8191  11B0  29B1               	nop2
  8192                           
  8193                           ;./lcd.h: 82:     lcdCmd(0x03);
  8194  11B1  3003               	movlw	3
  8195  11B2  160A  158A  2562  160A  118A  	fcall	_lcdCmd
  8196                           
  8197                           ;./lcd.h: 84:     lcdCmd(0x02);
  8198  11B7  3002               	movlw	2
  8199  11B8  160A  158A  2562  160A  118A  	fcall	_lcdCmd
  8200                           
  8201                           ;./lcd.h: 85:     lcdCmd(0x02);
  8202  11BD  3002               	movlw	2
  8203  11BE  160A  158A  2562  160A  118A  	fcall	_lcdCmd
  8204                           
  8205                           ;./lcd.h: 86:     lcdCmd(0x08);
  8206  11C3  3008               	movlw	8
  8207  11C4  160A  158A  2562  160A  118A  	fcall	_lcdCmd
  8208                           
  8209                           ;./lcd.h: 87:     lcdCmd(0x00);
  8210  11C9  3000               	movlw	0
  8211  11CA  160A  158A  2562  160A  118A  	fcall	_lcdCmd
  8212                           
  8213                           ;./lcd.h: 88:     lcdCmd(0x0C);
  8214  11CF  300C               	movlw	12
  8215  11D0  160A  158A  2562  160A  118A  	fcall	_lcdCmd
  8216                           
  8217                           ;./lcd.h: 89:     lcdCmd(0x00);
  8218  11D5  3000               	movlw	0
  8219  11D6  160A  158A  2562  160A  118A  	fcall	_lcdCmd
  8220                           
  8221                           ;./lcd.h: 90:     lcdCmd(0x06);
  8222  11DB  3006               	movlw	6
  8223  11DC  160A  158A  2562   	fcall	_lcdCmd
  8224  11DF  0008               	return
  8225  11E0                     __end_of_lcdInit:	
  8226                           
  8227                           	psect	text27
  8228  1D2D                     __ptext27:	
  8229 ;; *************** function _lcdClear *****************
  8230 ;; Defined at:
  8231 ;;		line 51 in file "./lcd.h"
  8232 ;; Parameters:    Size  Location     Type
  8233 ;;		None
  8234 ;; Auto vars:     Size  Location     Type
  8235 ;;		None
  8236 ;; Return value:  Size  Location     Type
  8237 ;;                  1    wreg      void 
  8238 ;; Registers used:
  8239 ;;		wreg, status,2, status,0, pclath, cstack
  8240 ;; Tracked objects:
  8241 ;;		On entry : 0/0
  8242 ;;		On exit  : 0/0
  8243 ;;		Unchanged: 0/0
  8244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8245 ;;      Params:         0       0       0       0       0
  8246 ;;      Locals:         0       0       0       0       0
  8247 ;;      Temps:          0       0       0       0       0
  8248 ;;      Totals:         0       0       0       0       0
  8249 ;;Total ram usage:        0 bytes
  8250 ;; Hardware stack levels used:    1
  8251 ;; Hardware stack levels required when called:    2
  8252 ;; This function calls:
  8253 ;;		_lcdCmd
  8254 ;; This function is called by:
  8255 ;;		_main
  8256 ;; This function uses a non-reentrant model
  8257 ;;
  8258                           
  8259                           
  8260                           ;psect for function _lcdClear
  8261  1D2D                     _lcdClear:	
  8262                           
  8263                           ;./lcd.h: 52:     lcdCmd(0);
  8264                           
  8265                           ;incstack = 0
  8266                           ; Regs used in _lcdClear: [wreg+status,2+status,0+pclath+cstack]
  8267  1D2D  3000               	movlw	0
  8268  1D2E  160A  158A  2562  160A  158A  	fcall	_lcdCmd
  8269                           
  8270                           ;./lcd.h: 53:     lcdCmd(1);
  8271  1D33  3001               	movlw	1
  8272  1D34  160A  158A  2562   	fcall	_lcdCmd
  8273  1D37  0008               	return
  8274  1D38                     __end_of_lcdClear:	
  8275                           
  8276                           	psect	text28
  8277  1D62                     __ptext28:	
  8278 ;; *************** function _lcdCmd *****************
  8279 ;; Defined at:
  8280 ;;		line 43 in file "./lcd.h"
  8281 ;; Parameters:    Size  Location     Type
  8282 ;;  a               1    wreg     unsigned char 
  8283 ;; Auto vars:     Size  Location     Type
  8284 ;;  a               1    3[COMMON] unsigned char 
  8285 ;; Return value:  Size  Location     Type
  8286 ;;                  1    wreg      void 
  8287 ;; Registers used:
  8288 ;;		wreg, status,2, status,0, pclath, cstack
  8289 ;; Tracked objects:
  8290 ;;		On entry : 0/0
  8291 ;;		On exit  : 0/0
  8292 ;;		Unchanged: 0/0
  8293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8294 ;;      Params:         0       0       0       0       0
  8295 ;;      Locals:         1       0       0       0       0
  8296 ;;      Temps:          2       0       0       0       0
  8297 ;;      Totals:         3       0       0       0       0
  8298 ;;Total ram usage:        3 bytes
  8299 ;; Hardware stack levels used:    1
  8300 ;; Hardware stack levels required when called:    1
  8301 ;; This function calls:
  8302 ;;		_lcdPort
  8303 ;; This function is called by:
  8304 ;;		_lcdClear
  8305 ;;		_lcdSetCursor
  8306 ;;		_lcdInit
  8307 ;; This function uses a non-reentrant model
  8308 ;;
  8309                           
  8310                           
  8311                           ;psect for function _lcdCmd
  8312  1D62                     _lcdCmd:	
  8313                           
  8314                           ;incstack = 0
  8315                           ; Regs used in _lcdCmd: [wreg+status,2+status,0+pclath+cstack]
  8316                           ;lcdCmd@a stored from wreg
  8317  1D62  00F3               	movwf	lcdCmd@a
  8318                           
  8319                           ;./lcd.h: 44:     RB2 = 0;
  8320  1D63  1283               	bcf	3,5	;RP0=0, select bank0
  8321  1D64  1303               	bcf	3,6	;RP1=0, select bank0
  8322  1D65  1106               	bcf	6,2	;volatile
  8323                           
  8324                           ;./lcd.h: 45:     lcdPort(a);
  8325  1D66  0873               	movf	lcdCmd@a,w
  8326  1D67  160A  158A  2548  160A  158A  	fcall	_lcdPort
  8327                           
  8328                           ;./lcd.h: 46:     RB3 = 1;
  8329  1D6C  1283               	bcf	3,5	;RP0=0, select bank0
  8330  1D6D  1303               	bcf	3,6	;RP1=0, select bank0
  8331  1D6E  1586               	bsf	6,3	;volatile
  8332                           
  8333                           ;./lcd.h: 47:     _delay((unsigned long)((4)*(4000000/4000.0)));
  8334  1D6F  3006               	movlw	6
  8335  1D70  00F2               	movwf	??_lcdCmd+1
  8336  1D71  3030               	movlw	48
  8337  1D72  00F1               	movwf	??_lcdCmd
  8338  1D73                     u6087:	
  8339  1D73  0BF1               	decfsz	??_lcdCmd,f
  8340  1D74  2D73               	goto	u6087
  8341  1D75  0BF2               	decfsz	??_lcdCmd+1,f
  8342  1D76  2D73               	goto	u6087
  8343  1D77  0000               	nop
  8344                           
  8345                           ;./lcd.h: 48:     RB3 = 0;
  8346  1D78  1283               	bcf	3,5	;RP0=0, select bank0
  8347  1D79  1303               	bcf	3,6	;RP1=0, select bank0
  8348  1D7A  1186               	bcf	6,3	;volatile
  8349  1D7B  0008               	return
  8350  1D7C                     __end_of_lcdCmd:	
  8351                           
  8352                           	psect	text29
  8353  1D48                     __ptext29:	
  8354 ;; *************** function _lcdPort *****************
  8355 ;; Defined at:
  8356 ;;		line 21 in file "./lcd.h"
  8357 ;; Parameters:    Size  Location     Type
  8358 ;;  a               1    wreg     unsigned char 
  8359 ;; Auto vars:     Size  Location     Type
  8360 ;;  a               1    0[COMMON] unsigned char 
  8361 ;; Return value:  Size  Location     Type
  8362 ;;                  1    wreg      void 
  8363 ;; Registers used:
  8364 ;;		wreg
  8365 ;; Tracked objects:
  8366 ;;		On entry : 0/0
  8367 ;;		On exit  : 0/0
  8368 ;;		Unchanged: 0/0
  8369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8370 ;;      Params:         0       0       0       0       0
  8371 ;;      Locals:         1       0       0       0       0
  8372 ;;      Temps:          0       0       0       0       0
  8373 ;;      Totals:         1       0       0       0       0
  8374 ;;Total ram usage:        1 bytes
  8375 ;; Hardware stack levels used:    1
  8376 ;; This function calls:
  8377 ;;		Nothing
  8378 ;; This function is called by:
  8379 ;;		_lcdCmd
  8380 ;;		_lcdInit
  8381 ;;		_lcdWriteChar
  8382 ;; This function uses a non-reentrant model
  8383 ;;
  8384                           
  8385                           
  8386                           ;psect for function _lcdPort
  8387  1D48                     _lcdPort:	
  8388                           
  8389                           ;incstack = 0
  8390                           ; Regs used in _lcdPort: [wreg]
  8391                           ;lcdPort@a stored from wreg
  8392  1D48  00F0               	movwf	lcdPort@a
  8393                           
  8394                           ;./lcd.h: 22:     if (a & 1)
  8395  1D49  1C70               	btfss	lcdPort@a,0
  8396  1D4A  2D4F               	goto	l35
  8397                           
  8398                           ;./lcd.h: 23:         RB4 = 1;
  8399  1D4B  1283               	bcf	3,5	;RP0=0, select bank0
  8400  1D4C  1303               	bcf	3,6	;RP1=0, select bank0
  8401  1D4D  1606               	bsf	6,4	;volatile
  8402  1D4E  2D52               	goto	l36
  8403  1D4F                     l35:	
  8404                           ;./lcd.h: 24:     else
  8405                           
  8406                           
  8407                           ;./lcd.h: 25:         RB4 = 0;
  8408  1D4F  1283               	bcf	3,5	;RP0=0, select bank0
  8409  1D50  1303               	bcf	3,6	;RP1=0, select bank0
  8410  1D51  1206               	bcf	6,4	;volatile
  8411  1D52                     l36:	
  8412                           
  8413                           ;./lcd.h: 27:     if (a & 2)
  8414  1D52  1CF0               	btfss	lcdPort@a,1
  8415  1D53  2D56               	goto	l37
  8416                           
  8417                           ;./lcd.h: 28:         RB5 = 1;
  8418  1D54  1686               	bsf	6,5	;volatile
  8419  1D55  2D57               	goto	l38
  8420  1D56                     l37:	
  8421                           ;./lcd.h: 29:     else
  8422                           
  8423                           
  8424                           ;./lcd.h: 30:         RB5 = 0;
  8425  1D56  1286               	bcf	6,5	;volatile
  8426  1D57                     l38:	
  8427                           
  8428                           ;./lcd.h: 32:     if (a & 4)
  8429  1D57  1D70               	btfss	lcdPort@a,2
  8430  1D58  2D5B               	goto	l39
  8431                           
  8432                           ;./lcd.h: 33:         RB6 = 1;
  8433  1D59  1706               	bsf	6,6	;volatile
  8434  1D5A  2D5C               	goto	l40
  8435  1D5B                     l39:	
  8436                           ;./lcd.h: 34:     else
  8437                           
  8438                           
  8439                           ;./lcd.h: 35:         RB6 = 0;
  8440  1D5B  1306               	bcf	6,6	;volatile
  8441  1D5C                     l40:	
  8442                           
  8443                           ;./lcd.h: 37:     if (a & 8)
  8444  1D5C  1DF0               	btfss	lcdPort@a,3
  8445  1D5D  2D60               	goto	l41
  8446                           
  8447                           ;./lcd.h: 38:         RB7 = 1;
  8448  1D5E  1786               	bsf	6,7	;volatile
  8449  1D5F  0008               	return
  8450  1D60                     l41:	
  8451                           ;./lcd.h: 39:     else
  8452                           
  8453                           
  8454                           ;./lcd.h: 40:         RB7 = 0;
  8455  1D60  1386               	bcf	6,7	;volatile
  8456  1D61  0008               	return
  8457  1D62                     __end_of_lcdPort:	
  8458                           
  8459                           	psect	text30
  8460  1D9D                     __ptext30:	
  8461 ;; *************** function _adcRead *****************
  8462 ;; Defined at:
  8463 ;;		line 35 in file "./adc.h"
  8464 ;; Parameters:    Size  Location     Type
  8465 ;;  adcChannel      2    0[COMMON] const int 
  8466 ;; Auto vars:     Size  Location     Type
  8467 ;;		None
  8468 ;; Return value:  Size  Location     Type
  8469 ;;                  2    0[COMMON] int 
  8470 ;; Registers used:
  8471 ;;		wreg, status,2, status,0
  8472 ;; Tracked objects:
  8473 ;;		On entry : 0/0
  8474 ;;		On exit  : 0/0
  8475 ;;		Unchanged: 0/0
  8476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8477 ;;      Params:         2       0       0       0       0
  8478 ;;      Locals:         0       0       0       0       0
  8479 ;;      Temps:          2       0       0       0       0
  8480 ;;      Totals:         4       0       0       0       0
  8481 ;;Total ram usage:        4 bytes
  8482 ;; Hardware stack levels used:    1
  8483 ;; This function calls:
  8484 ;;		Nothing
  8485 ;; This function is called by:
  8486 ;;		_main
  8487 ;; This function uses a non-reentrant model
  8488 ;;
  8489                           
  8490                           
  8491                           ;psect for function _adcRead
  8492  1D9D                     _adcRead:	
  8493                           
  8494                           ;./adc.h: 36:     ADCON0bits.ADON = 1;
  8495                           
  8496                           ;incstack = 0
  8497                           ; Regs used in _adcRead: [wreg+status,2+status,0]
  8498  1D9D  1283               	bcf	3,5	;RP0=0, select bank0
  8499  1D9E  1303               	bcf	3,6	;RP1=0, select bank0
  8500  1D9F  141F               	bsf	31,0	;volatile
  8501                           
  8502                           ;./adc.h: 37:     ADCON0bits.CHS = adcChannel;
  8503  1DA0  0870               	movf	adcRead@adcChannel,w
  8504  1DA1  00F2               	movwf	??_adcRead
  8505  1DA2  0DF2               	rlf	??_adcRead,f
  8506  1DA3  0DF2               	rlf	??_adcRead,f
  8507  1DA4  0DF2               	rlf	??_adcRead,f
  8508  1DA5  081F               	movf	31,w	;volatile
  8509  1DA6  0672               	xorwf	??_adcRead,w
  8510  1DA7  39C7               	andlw	-57
  8511  1DA8  0672               	xorwf	??_adcRead,w
  8512  1DA9  009F               	movwf	31	;volatile
  8513                           
  8514                           ;./adc.h: 38:     _delay((unsigned long)((10)*(4000000/4000.0)));
  8515  1DAA  300D               	movlw	13
  8516  1DAB  00F3               	movwf	??_adcRead+1
  8517  1DAC  30FB               	movlw	251
  8518  1DAD  00F2               	movwf	??_adcRead
  8519  1DAE                     u6097:	
  8520  1DAE  0BF2               	decfsz	??_adcRead,f
  8521  1DAF  2DAE               	goto	u6097
  8522  1DB0  0BF3               	decfsz	??_adcRead+1,f
  8523  1DB1  2DAE               	goto	u6097
  8524  1DB2  2DB3               	nop2
  8525                           
  8526                           ;./adc.h: 39:     ADCON0bits.GO = 1;
  8527  1DB3  1283               	bcf	3,5	;RP0=0, select bank0
  8528  1DB4  1303               	bcf	3,6	;RP1=0, select bank0
  8529  1DB5  151F               	bsf	31,2	;volatile
  8530  1DB6                     l75:	
  8531                           ;./adc.h: 40:     while (ADCON0bits.GO_DONE);
  8532                           
  8533  1DB6  191F               	btfsc	31,2	;volatile
  8534  1DB7  2DB6               	goto	l75
  8535                           
  8536                           ;./adc.h: 42:     return (ADRESH << 8) + (ADRESL);
  8537  1DB8  081E               	movf	30,w	;volatile
  8538  1DB9  00F1               	movwf	?_adcRead+1
  8539  1DBA  1683               	bsf	3,5	;RP0=1, select bank1
  8540  1DBB  1303               	bcf	3,6	;RP1=0, select bank1
  8541  1DBC  081E               	movf	30,w	;volatile
  8542  1DBD  00F0               	movwf	?_adcRead
  8543  1DBE  0008               	return
  8544  1DBF                     __end_of_adcRead:	
  8545                           
  8546                           	psect	text31
  8547  1D38                     __ptext31:	
  8548 ;; *************** function _adcInit *****************
  8549 ;; Defined at:
  8550 ;;		line 1 in file "./adc.h"
  8551 ;; Parameters:    Size  Location     Type
  8552 ;;		None
  8553 ;; Auto vars:     Size  Location     Type
  8554 ;;		None
  8555 ;; Return value:  Size  Location     Type
  8556 ;;                  1    wreg      void 
  8557 ;; Registers used:
  8558 ;;		wreg, status,2, status,0
  8559 ;; Tracked objects:
  8560 ;;		On entry : 0/0
  8561 ;;		On exit  : 0/0
  8562 ;;		Unchanged: 0/0
  8563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8564 ;;      Params:         0       0       0       0       0
  8565 ;;      Locals:         0       0       0       0       0
  8566 ;;      Temps:          0       0       0       0       0
  8567 ;;      Totals:         0       0       0       0       0
  8568 ;;Total ram usage:        0 bytes
  8569 ;; Hardware stack levels used:    1
  8570 ;; This function calls:
  8571 ;;		Nothing
  8572 ;; This function is called by:
  8573 ;;		_main
  8574 ;; This function uses a non-reentrant model
  8575 ;;
  8576                           
  8577                           
  8578                           ;psect for function _adcInit
  8579  1D38                     _adcInit:	
  8580                           
  8581                           ;./adc.h: 11:     ADCON0bits.ADCS = 0b01;
  8582                           
  8583                           ;incstack = 0
  8584                           ; Regs used in _adcInit: [wreg+status,2+status,0]
  8585  1D38  1283               	bcf	3,5	;RP0=0, select bank0
  8586  1D39  1303               	bcf	3,6	;RP1=0, select bank0
  8587  1D3A  081F               	movf	31,w	;volatile
  8588  1D3B  393F               	andlw	-193
  8589  1D3C  3840               	iorlw	64
  8590  1D3D  009F               	movwf	31	;volatile
  8591                           
  8592                           ;./adc.h: 12:     ADCON0bits.CHS = 0b000;
  8593  1D3E  30C7               	movlw	-57
  8594  1D3F  059F               	andwf	31,f	;volatile
  8595                           
  8596                           ;./adc.h: 13:     ADCON0bits.ADON = 0;
  8597  1D40  101F               	bcf	31,0	;volatile
  8598                           
  8599                           ;./adc.h: 24:     ADCON1bits.ADFM = 1;
  8600  1D41  1683               	bsf	3,5	;RP0=1, select bank1
  8601  1D42  1303               	bcf	3,6	;RP1=0, select bank1
  8602  1D43  179F               	bsf	31,7	;volatile
  8603                           
  8604                           ;./adc.h: 25:     ADCON1bits.ADCS2 = 1;
  8605  1D44  171F               	bsf	31,6	;volatile
  8606                           
  8607                           ;./adc.h: 26:     ADCON1bits.PCFG = 0b0000;
  8608  1D45  30F0               	movlw	-16
  8609  1D46  059F               	andwf	31,f	;volatile
  8610  1D47  0008               	return
  8611  1D48                     __end_of_adcInit:	
  8612                           
  8613                           	psect	text32
  8614  142E                     __ptext32:	
  8615 ;; *************** function ___fldiv *****************
  8616 ;; Defined at:
  8617 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  8618 ;; Parameters:    Size  Location     Type
  8619 ;;  a               4   32[BANK0 ] void 
  8620 ;;  b               4   36[BANK0 ] void 
  8621 ;; Auto vars:     Size  Location     Type
  8622 ;;  grs             4   52[BANK0 ] unsigned long 
  8623 ;;  rem             4   45[BANK0 ] unsigned long 
  8624 ;;  new_exp         2   50[BANK0 ] int 
  8625 ;;  aexp            1   57[BANK0 ] unsigned char 
  8626 ;;  bexp            1   56[BANK0 ] unsigned char 
  8627 ;;  sign            1   49[BANK0 ] unsigned char 
  8628 ;; Return value:  Size  Location     Type
  8629 ;;                  4   32[BANK0 ] unsigned char 
  8630 ;; Registers used:
  8631 ;;		wreg, status,2, status,0, btemp+1
  8632 ;; Tracked objects:
  8633 ;;		On entry : 0/0
  8634 ;;		On exit  : 0/0
  8635 ;;		Unchanged: 0/0
  8636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8637 ;;      Params:         0       8       0       0       0
  8638 ;;      Locals:         0      13       0       0       0
  8639 ;;      Temps:          0       5       0       0       0
  8640 ;;      Totals:         0      26       0       0       0
  8641 ;;Total ram usage:       26 bytes
  8642 ;; Hardware stack levels used:    1
  8643 ;; This function calls:
  8644 ;;		Nothing
  8645 ;; This function is called by:
  8646 ;;		_main
  8647 ;; This function uses a non-reentrant model
  8648 ;;
  8649                           
  8650                           
  8651                           ;psect for function ___fldiv
  8652  142E                     ___fldiv:	
  8653                           
  8654                           ;incstack = 0
  8655                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8656  142E  1283               	bcf	3,5	;RP0=0, select bank0
  8657  142F  1303               	bcf	3,6	;RP1=0, select bank0
  8658  1430  0847               	movf	___fldiv@b+3,w
  8659  1431  3980               	andlw	128
  8660  1432  00C8               	movwf	??___fldiv
  8661  1433  0848               	movf	??___fldiv,w
  8662  1434  00D1               	movwf	___fldiv@sign
  8663  1435  0847               	movf	___fldiv@b+3,w
  8664  1436  00C8               	movwf	??___fldiv
  8665  1437  0748               	addwf	??___fldiv,w
  8666  1438  00C9               	movwf	??___fldiv+1
  8667  1439  0849               	movf	??___fldiv+1,w
  8668  143A  00D8               	movwf	___fldiv@bexp
  8669  143B  1BC6               	btfsc	___fldiv@b+2,7
  8670  143C  1458               	bsf	___fldiv@bexp,0
  8671  143D  0858               	movf	___fldiv@bexp,w
  8672  143E  1903               	btfsc	3,2
  8673  143F  2C4E               	goto	l3391
  8674  1440  0A58               	incf	___fldiv@bexp,w
  8675  1441  1D03               	btfss	3,2
  8676  1442  2C4B               	goto	l3387
  8677  1443  3000               	movlw	0
  8678  1444  00C7               	movwf	___fldiv@b+3
  8679  1445  3000               	movlw	0
  8680  1446  00C6               	movwf	___fldiv@b+2
  8681  1447  3000               	movlw	0
  8682  1448  00C5               	movwf	___fldiv@b+1
  8683  1449  3000               	movlw	0
  8684  144A  00C4               	movwf	___fldiv@b
  8685  144B                     l3387:	
  8686  144B  17C6               	bsf	___fldiv@b+2,7
  8687  144C  01C7               	clrf	___fldiv@b+3
  8688  144D  2C56               	goto	l3393
  8689  144E                     l3391:	
  8690  144E  3000               	movlw	0
  8691  144F  00C7               	movwf	___fldiv@b+3
  8692  1450  3000               	movlw	0
  8693  1451  00C6               	movwf	___fldiv@b+2
  8694  1452  3000               	movlw	0
  8695  1453  00C5               	movwf	___fldiv@b+1
  8696  1454  3000               	movlw	0
  8697  1455  00C4               	movwf	___fldiv@b
  8698  1456                     l3393:	
  8699  1456  0843               	movf	___fldiv@a+3,w
  8700  1457  3980               	andlw	128
  8701  1458  00C8               	movwf	??___fldiv
  8702  1459  0848               	movf	??___fldiv,w
  8703  145A  06D1               	xorwf	___fldiv@sign,f
  8704  145B  0843               	movf	___fldiv@a+3,w
  8705  145C  00C8               	movwf	??___fldiv
  8706  145D  0748               	addwf	??___fldiv,w
  8707  145E  00C9               	movwf	??___fldiv+1
  8708  145F  0849               	movf	??___fldiv+1,w
  8709  1460  00D9               	movwf	___fldiv@aexp
  8710  1461  1BC2               	btfsc	___fldiv@a+2,7
  8711  1462  1459               	bsf	___fldiv@aexp,0
  8712  1463  0859               	movf	___fldiv@aexp,w
  8713  1464  1903               	btfsc	3,2
  8714  1465  2C74               	goto	l3411
  8715  1466  0A59               	incf	___fldiv@aexp,w
  8716  1467  1D03               	btfss	3,2
  8717  1468  2C71               	goto	l3407
  8718  1469  3000               	movlw	0
  8719  146A  00C3               	movwf	___fldiv@a+3
  8720  146B  3000               	movlw	0
  8721  146C  00C2               	movwf	___fldiv@a+2
  8722  146D  3000               	movlw	0
  8723  146E  00C1               	movwf	___fldiv@a+1
  8724  146F  3000               	movlw	0
  8725  1470  00C0               	movwf	___fldiv@a
  8726  1471                     l3407:	
  8727  1471  17C2               	bsf	___fldiv@a+2,7
  8728  1472  01C3               	clrf	___fldiv@a+3
  8729  1473  2C7C               	goto	l647
  8730  1474                     l3411:	
  8731  1474  3000               	movlw	0
  8732  1475  00C3               	movwf	___fldiv@a+3
  8733  1476  3000               	movlw	0
  8734  1477  00C2               	movwf	___fldiv@a+2
  8735  1478  3000               	movlw	0
  8736  1479  00C1               	movwf	___fldiv@a+1
  8737  147A  3000               	movlw	0
  8738  147B  00C0               	movwf	___fldiv@a
  8739  147C                     l647:	
  8740  147C  0843               	movf	___fldiv@a+3,w
  8741  147D  0442               	iorwf	___fldiv@a+2,w
  8742  147E  0441               	iorwf	___fldiv@a+1,w
  8743  147F  0440               	iorwf	___fldiv@a,w
  8744  1480  1D03               	skipz
  8745  1481  2C9B               	goto	l3421
  8746  1482  3000               	movlw	0
  8747  1483  00C7               	movwf	___fldiv@b+3
  8748  1484  3000               	movlw	0
  8749  1485  00C6               	movwf	___fldiv@b+2
  8750  1486  3000               	movlw	0
  8751  1487  00C5               	movwf	___fldiv@b+1
  8752  1488  3000               	movlw	0
  8753  1489  00C4               	movwf	___fldiv@b
  8754  148A  3080               	movlw	128
  8755  148B  04C6               	iorwf	___fldiv@b+2,f
  8756  148C  307F               	movlw	127
  8757  148D  04C7               	iorwf	___fldiv@b+3,f
  8758  148E                     L10:	
  8759  148E  0851               	movf	___fldiv@sign,w
  8760  148F  00C8               	movwf	??___fldiv
  8761  1490  0848               	movf	??___fldiv,w
  8762  1491  04C7               	iorwf	___fldiv@b+3,f
  8763  1492  0847               	movf	___fldiv@b+3,w
  8764  1493  00C3               	movwf	?___fldiv+3
  8765  1494  0846               	movf	___fldiv@b+2,w
  8766  1495  00C2               	movwf	?___fldiv+2
  8767  1496  0845               	movf	___fldiv@b+1,w
  8768  1497  00C1               	movwf	?___fldiv+1
  8769  1498  0844               	movf	___fldiv@b,w
  8770  1499  00C0               	movwf	?___fldiv
  8771  149A  0008               	return
  8772  149B                     l3421:	
  8773  149B  0858               	movf	___fldiv@bexp,w
  8774  149C  1D03               	btfss	3,2
  8775  149D  2CA7               	goto	l3427
  8776  149E  3000               	movlw	0
  8777  149F  00C3               	movwf	?___fldiv+3
  8778  14A0  3000               	movlw	0
  8779  14A1  00C2               	movwf	?___fldiv+2
  8780  14A2  3000               	movlw	0
  8781  14A3  00C1               	movwf	?___fldiv+1
  8782  14A4  3000               	movlw	0
  8783  14A5  00C0               	movwf	?___fldiv
  8784  14A6  0008               	return
  8785  14A7                     l3427:	
  8786  14A7  0858               	movf	___fldiv@bexp,w
  8787  14A8  00C8               	movwf	??___fldiv
  8788  14A9  01C9               	clrf	??___fldiv+1
  8789  14AA  0849               	movf	??___fldiv+1,w
  8790  14AB  00CB               	movwf	??___fldiv+3
  8791  14AC  0859               	movf	___fldiv@aexp,w
  8792  14AD  0248               	subwf	??___fldiv,w
  8793  14AE  00CA               	movwf	??___fldiv+2
  8794  14AF  1C03               	skipc
  8795  14B0  03CB               	decf	??___fldiv+3,f
  8796  14B1  084A               	movf	??___fldiv+2,w
  8797  14B2  3E7F               	addlw	127
  8798  14B3  00D2               	movwf	___fldiv@new_exp
  8799  14B4  084B               	movf	??___fldiv+3,w
  8800  14B5  1803               	skipnc
  8801  14B6  3E01               	addlw	1
  8802  14B7  3E00               	addlw	0
  8803  14B8  00D3               	movwf	___fldiv@new_exp+1
  8804  14B9  0847               	movf	___fldiv@b+3,w
  8805  14BA  00D0               	movwf	___fldiv@rem+3
  8806  14BB  0846               	movf	___fldiv@b+2,w
  8807  14BC  00CF               	movwf	___fldiv@rem+2
  8808  14BD  0845               	movf	___fldiv@b+1,w
  8809  14BE  00CE               	movwf	___fldiv@rem+1
  8810  14BF  0844               	movf	___fldiv@b,w
  8811  14C0  00CD               	movwf	___fldiv@rem
  8812  14C1  3000               	movlw	0
  8813  14C2  00C7               	movwf	___fldiv@b+3
  8814  14C3  3000               	movlw	0
  8815  14C4  00C6               	movwf	___fldiv@b+2
  8816  14C5  3000               	movlw	0
  8817  14C6  00C5               	movwf	___fldiv@b+1
  8818  14C7  3000               	movlw	0
  8819  14C8  00C4               	movwf	___fldiv@b
  8820  14C9  3000               	movlw	0
  8821  14CA  00D7               	movwf	___fldiv@grs+3
  8822  14CB  3000               	movlw	0
  8823  14CC  00D6               	movwf	___fldiv@grs+2
  8824  14CD  3000               	movlw	0
  8825  14CE  00D5               	movwf	___fldiv@grs+1
  8826  14CF  3000               	movlw	0
  8827  14D0  00D4               	movwf	___fldiv@grs
  8828  14D1  01D9               	clrf	___fldiv@aexp
  8829  14D2                     l3455:	
  8830  14D2  301A               	movlw	26
  8831  14D3  0259               	subwf	___fldiv@aexp,w
  8832  14D4  1803               	btfsc	3,0
  8833  14D5  2D1A               	goto	l3457
  8834  14D6  0859               	movf	___fldiv@aexp,w
  8835  14D7  1903               	btfsc	3,2
  8836  14D8  2CF6               	goto	l3447
  8837  14D9  3001               	movlw	1
  8838  14DA  00C8               	movwf	??___fldiv
  8839  14DB                     u5815:	
  8840  14DB  1003               	clrc
  8841  14DC  0DCD               	rlf	___fldiv@rem,f
  8842  14DD  0DCE               	rlf	___fldiv@rem+1,f
  8843  14DE  0DCF               	rlf	___fldiv@rem+2,f
  8844  14DF  0DD0               	rlf	___fldiv@rem+3,f
  8845  14E0  0BC8               	decfsz	??___fldiv,f
  8846  14E1  2CDB               	goto	u5815
  8847  14E2  3001               	movlw	1
  8848  14E3  00C8               	movwf	??___fldiv
  8849  14E4                     u5825:	
  8850  14E4  1003               	clrc
  8851  14E5  0DC4               	rlf	___fldiv@b,f
  8852  14E6  0DC5               	rlf	___fldiv@b+1,f
  8853  14E7  0DC6               	rlf	___fldiv@b+2,f
  8854  14E8  0DC7               	rlf	___fldiv@b+3,f
  8855  14E9  0BC8               	decfsz	??___fldiv,f
  8856  14EA  2CE4               	goto	u5825
  8857  14EB  1BD7               	btfsc	___fldiv@grs+3,7
  8858  14EC  1444               	bsf	___fldiv@b,0
  8859  14ED  3001               	movlw	1
  8860  14EE  00C8               	movwf	??___fldiv
  8861  14EF                     u5845:	
  8862  14EF  1003               	clrc
  8863  14F0  0DD4               	rlf	___fldiv@grs,f
  8864  14F1  0DD5               	rlf	___fldiv@grs+1,f
  8865  14F2  0DD6               	rlf	___fldiv@grs+2,f
  8866  14F3  0DD7               	rlf	___fldiv@grs+3,f
  8867  14F4  0BC8               	decfsz	??___fldiv,f
  8868  14F5  2CEF               	goto	u5845
  8869  14F6                     l3447:	
  8870  14F6  0843               	movf	___fldiv@a+3,w
  8871  14F7  0250               	subwf	___fldiv@rem+3,w
  8872  14F8  1D03               	skipz
  8873  14F9  2D04               	goto	u5855
  8874  14FA  0842               	movf	___fldiv@a+2,w
  8875  14FB  024F               	subwf	___fldiv@rem+2,w
  8876  14FC  1D03               	skipz
  8877  14FD  2D04               	goto	u5855
  8878  14FE  0841               	movf	___fldiv@a+1,w
  8879  14FF  024E               	subwf	___fldiv@rem+1,w
  8880  1500  1D03               	skipz
  8881  1501  2D04               	goto	u5855
  8882  1502  0840               	movf	___fldiv@a,w
  8883  1503  024D               	subwf	___fldiv@rem,w
  8884  1504                     u5855:	
  8885  1504  1C03               	skipc
  8886  1505  2D15               	goto	l3453
  8887  1506  1757               	bsf	___fldiv@grs+3,6
  8888  1507  0840               	movf	___fldiv@a,w
  8889  1508  02CD               	subwf	___fldiv@rem,f
  8890  1509  0841               	movf	___fldiv@a+1,w
  8891  150A  1C03               	skipc
  8892  150B  0F41               	incfsz	___fldiv@a+1,w
  8893  150C  02CE               	subwf	___fldiv@rem+1,f
  8894  150D  0842               	movf	___fldiv@a+2,w
  8895  150E  1C03               	skipc
  8896  150F  0F42               	incfsz	___fldiv@a+2,w
  8897  1510  02CF               	subwf	___fldiv@rem+2,f
  8898  1511  0843               	movf	___fldiv@a+3,w
  8899  1512  1C03               	skipc
  8900  1513  0F43               	incfsz	___fldiv@a+3,w
  8901  1514  02D0               	subwf	___fldiv@rem+3,f
  8902  1515                     l3453:	
  8903  1515  3001               	movlw	1
  8904  1516  00C8               	movwf	??___fldiv
  8905  1517  0848               	movf	??___fldiv,w
  8906  1518  07D9               	addwf	___fldiv@aexp,f
  8907  1519  2CD2               	goto	l3455
  8908  151A                     l3457:	
  8909  151A  0850               	movf	___fldiv@rem+3,w
  8910  151B  044F               	iorwf	___fldiv@rem+2,w
  8911  151C  044E               	iorwf	___fldiv@rem+1,w
  8912  151D  044D               	iorwf	___fldiv@rem,w
  8913  151E  1D03               	btfss	3,2
  8914  151F  1454               	bsf	___fldiv@grs,0
  8915  1520                     l3471:	
  8916  1520  1BC6               	btfsc	___fldiv@b+2,7
  8917  1521  2D3D               	goto	l3473
  8918  1522  3001               	movlw	1
  8919  1523  00C8               	movwf	??___fldiv
  8920  1524                     u5885:	
  8921  1524  1003               	clrc
  8922  1525  0DC4               	rlf	___fldiv@b,f
  8923  1526  0DC5               	rlf	___fldiv@b+1,f
  8924  1527  0DC6               	rlf	___fldiv@b+2,f
  8925  1528  0DC7               	rlf	___fldiv@b+3,f
  8926  1529  0BC8               	decfsz	??___fldiv,f
  8927  152A  2D24               	goto	u5885
  8928  152B  1BD7               	btfsc	___fldiv@grs+3,7
  8929  152C  1444               	bsf	___fldiv@b,0
  8930  152D  3001               	movlw	1
  8931  152E  00C8               	movwf	??___fldiv
  8932  152F                     u5905:	
  8933  152F  1003               	clrc
  8934  1530  0DD4               	rlf	___fldiv@grs,f
  8935  1531  0DD5               	rlf	___fldiv@grs+1,f
  8936  1532  0DD6               	rlf	___fldiv@grs+2,f
  8937  1533  0DD7               	rlf	___fldiv@grs+3,f
  8938  1534  0BC8               	decfsz	??___fldiv,f
  8939  1535  2D2F               	goto	u5905
  8940  1536  30FF               	movlw	255
  8941  1537  07D2               	addwf	___fldiv@new_exp,f
  8942  1538  1803               	skipnc
  8943  1539  0AD3               	incf	___fldiv@new_exp+1,f
  8944  153A  30FF               	movlw	255
  8945  153B  07D3               	addwf	___fldiv@new_exp+1,f
  8946  153C  2D20               	goto	l3471
  8947  153D                     l3473:	
  8948  153D  01D9               	clrf	___fldiv@aexp
  8949  153E  1FD7               	btfss	___fldiv@grs+3,7
  8950  153F  2D56               	goto	l3483
  8951  1540  30FF               	movlw	255
  8952  1541  0554               	andwf	___fldiv@grs,w
  8953  1542  00C8               	movwf	??___fldiv
  8954  1543  30FF               	movlw	255
  8955  1544  0555               	andwf	___fldiv@grs+1,w
  8956  1545  00C9               	movwf	??___fldiv+1
  8957  1546  30FF               	movlw	255
  8958  1547  0556               	andwf	___fldiv@grs+2,w
  8959  1548  00CA               	movwf	??___fldiv+2
  8960  1549  307F               	movlw	127
  8961  154A  0557               	andwf	___fldiv@grs+3,w
  8962  154B  00CB               	movwf	??___fldiv+3
  8963  154C  084B               	movf	??___fldiv+3,w
  8964  154D  044A               	iorwf	??___fldiv+2,w
  8965  154E  0449               	iorwf	??___fldiv+1,w
  8966  154F  0448               	iorwf	??___fldiv,w
  8967  1550  1903               	skipnz
  8968  1551  1844               	btfsc	___fldiv@b,0
  8969  1552  2D54               	goto	l3479
  8970  1553  2D56               	goto	l3483
  8971  1554                     l3479:	
  8972  1554  01D9               	clrf	___fldiv@aexp
  8973  1555  0AD9               	incf	___fldiv@aexp,f
  8974  1556                     l3483:	
  8975  1556  0859               	movf	___fldiv@aexp,w
  8976  1557  1903               	btfsc	3,2
  8977  1558  2D88               	goto	l3493
  8978  1559  3001               	movlw	1
  8979  155A  07C4               	addwf	___fldiv@b,f
  8980  155B  3000               	movlw	0
  8981  155C  1803               	skipnc
  8982  155D  3001               	movlw	1
  8983  155E  07C5               	addwf	___fldiv@b+1,f
  8984  155F  3000               	movlw	0
  8985  1560  1803               	skipnc
  8986  1561  3001               	movlw	1
  8987  1562  07C6               	addwf	___fldiv@b+2,f
  8988  1563  3000               	movlw	0
  8989  1564  1803               	skipnc
  8990  1565  3001               	movlw	1
  8991  1566  07C7               	addwf	___fldiv@b+3,f
  8992  1567  1C47               	btfss	___fldiv@b+3,0
  8993  1568  2D88               	goto	l3493
  8994  1569  0844               	movf	___fldiv@b,w
  8995  156A  00C8               	movwf	??___fldiv
  8996  156B  0845               	movf	___fldiv@b+1,w
  8997  156C  00C9               	movwf	??___fldiv+1
  8998  156D  0846               	movf	___fldiv@b+2,w
  8999  156E  00CA               	movwf	??___fldiv+2
  9000  156F  0847               	movf	___fldiv@b+3,w
  9001  1570  00CB               	movwf	??___fldiv+3
  9002  1571  3001               	movlw	1
  9003  1572  00CC               	movwf	??___fldiv+4
  9004  1573                     u5975:	
  9005  1573  0D4B               	rlf	??___fldiv+3,w
  9006  1574  0CCB               	rrf	??___fldiv+3,f
  9007  1575  0CCA               	rrf	??___fldiv+2,f
  9008  1576  0CC9               	rrf	??___fldiv+1,f
  9009  1577  0CC8               	rrf	??___fldiv,f
  9010  1578  0BCC               	decfsz	??___fldiv+4,f
  9011  1579  2D73               	goto	u5975
  9012  157A  084B               	movf	??___fldiv+3,w
  9013  157B  00C7               	movwf	___fldiv@b+3
  9014  157C  084A               	movf	??___fldiv+2,w
  9015  157D  00C6               	movwf	___fldiv@b+2
  9016  157E  0849               	movf	??___fldiv+1,w
  9017  157F  00C5               	movwf	___fldiv@b+1
  9018  1580  0848               	movf	??___fldiv,w
  9019  1581  00C4               	movwf	___fldiv@b
  9020  1582  3001               	movlw	1
  9021  1583  07D2               	addwf	___fldiv@new_exp,f
  9022  1584  1803               	skipnc
  9023  1585  0AD3               	incf	___fldiv@new_exp+1,f
  9024  1586  3000               	movlw	0
  9025  1587  07D3               	addwf	___fldiv@new_exp+1,f
  9026  1588                     l3493:	
  9027  1588  0853               	movf	___fldiv@new_exp+1,w
  9028  1589  3A80               	xorlw	128
  9029  158A  00FF               	movwf	127
  9030  158B  3080               	movlw	128
  9031  158C  027F               	subwf	127,w
  9032  158D  1D03               	skipz
  9033  158E  2D91               	goto	u5985
  9034  158F  30FF               	movlw	255
  9035  1590  0252               	subwf	___fldiv@new_exp,w
  9036  1591                     u5985:	
  9037  1591  1C03               	skipc
  9038  1592  2DA1               	goto	l3497
  9039  1593  30FF               	movlw	255
  9040  1594  1283               	bcf	3,5	;RP0=0, select bank0
  9041  1595  1303               	bcf	3,6	;RP1=0, select bank0
  9042  1596  00D2               	movwf	___fldiv@new_exp
  9043  1597  3000               	movlw	0
  9044  1598  00D3               	movwf	___fldiv@new_exp+1
  9045  1599  3000               	movlw	0
  9046  159A  00C7               	movwf	___fldiv@b+3
  9047  159B  3000               	movlw	0
  9048  159C  00C6               	movwf	___fldiv@b+2
  9049  159D  3000               	movlw	0
  9050  159E  00C5               	movwf	___fldiv@b+1
  9051  159F  3000               	movlw	0
  9052  15A0  00C4               	movwf	___fldiv@b
  9053  15A1                     l3497:	
  9054  15A1  1283               	bcf	3,5	;RP0=0, select bank0
  9055  15A2  1303               	bcf	3,6	;RP1=0, select bank0
  9056  15A3  0853               	movf	___fldiv@new_exp+1,w
  9057  15A4  3A80               	xorlw	128
  9058  15A5  00FF               	movwf	127
  9059  15A6  3080               	movlw	128
  9060  15A7  027F               	subwf	127,w
  9061  15A8  1D03               	skipz
  9062  15A9  2DAC               	goto	u5995
  9063  15AA  3001               	movlw	1
  9064  15AB  0252               	subwf	___fldiv@new_exp,w
  9065  15AC                     u5995:	
  9066  15AC  1803               	skipnc
  9067  15AD  2DBB               	goto	l669
  9068  15AE  1283               	bcf	3,5	;RP0=0, select bank0
  9069  15AF  1303               	bcf	3,6	;RP1=0, select bank0
  9070  15B0  01D2               	clrf	___fldiv@new_exp
  9071  15B1  01D3               	clrf	___fldiv@new_exp+1
  9072  15B2  3000               	movlw	0
  9073  15B3  00C7               	movwf	___fldiv@b+3
  9074  15B4  3000               	movlw	0
  9075  15B5  00C6               	movwf	___fldiv@b+2
  9076  15B6  3000               	movlw	0
  9077  15B7  00C5               	movwf	___fldiv@b+1
  9078  15B8  3000               	movlw	0
  9079  15B9  00C4               	movwf	___fldiv@b
  9080  15BA  01D1               	clrf	___fldiv@sign
  9081  15BB                     l669:	
  9082  15BB  1283               	bcf	3,5	;RP0=0, select bank0
  9083  15BC  1303               	bcf	3,6	;RP1=0, select bank0
  9084  15BD  0852               	movf	___fldiv@new_exp,w
  9085  15BE  00C8               	movwf	??___fldiv
  9086  15BF  0848               	movf	??___fldiv,w
  9087  15C0  00D8               	movwf	___fldiv@bexp
  9088  15C1  1C58               	btfss	___fldiv@bexp,0
  9089  15C2  2DC5               	goto	l3509
  9090  15C3  17C6               	bsf	___fldiv@b+2,7
  9091  15C4  2DC9               	goto	l671
  9092  15C5                     l3509:	
  9093  15C5  307F               	movlw	127
  9094  15C6  00C8               	movwf	??___fldiv
  9095  15C7  0848               	movf	??___fldiv,w
  9096  15C8  05C6               	andwf	___fldiv@b+2,f
  9097  15C9                     l671:	
  9098  15C9  0858               	movf	___fldiv@bexp,w
  9099  15CA  00C8               	movwf	??___fldiv
  9100  15CB  1003               	clrc
  9101  15CC  0C48               	rrf	??___fldiv,w
  9102  15CD  00C9               	movwf	??___fldiv+1
  9103  15CE  0849               	movf	??___fldiv+1,w
  9104  15CF  00C7               	movwf	___fldiv@b+3
  9105  15D0  2C8E               	goto	L10
  9106  15D1                     __end_of___fldiv:	
  9107  007E                     btemp	set	126	;btemp
  9108  007E                     wtemp0	set	126


Data Sizes:
    Strings     37
    Constant    144
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     58      58
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_4(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@mensaje(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    lcdPrint@a	PTR const unsigned char  size(2) Largest target is 16
		 -> main@mensaje(BANK1[16]), STR_3(CODE[8]), STR_2(CODE[12]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___xxtofl->_adcRead
    _lcdSetCursor->_lcdCmd
    _lcdPrint->_lcdWriteChar
    _lcdWriteChar->_lcdPort
    _lcdInit->_lcdCmd
    _lcdClear->_lcdCmd
    _lcdCmd->_lcdPort

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___xxtofl
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                23    23      0   38929
                                             35 BANK1     23    23      0
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _adcInit
                            _adcRead
                           _lcdClear
                            _lcdInit
                           _lcdPrint
                       _lcdSetCursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   30953
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             32 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             32 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              6 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              4 COMMON     8     4      4
                                              0 BANK0      6     6      0
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             51 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             72 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             52 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _lcdSetCursor                                         8     7      1     619
                                              4 COMMON     8     7      1
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             7     5      2     572
                                              5 COMMON     7     5      2
                       _lcdWriteChar
 ---------------------------------------------------------------------------------
 (2) _lcdWriteChar                                         4     4      0     178
                                              1 COMMON     4     4      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              2     2      0     198
                                              4 COMMON     2     2      0
                             _lcdCmd
                            _lcdPort
 ---------------------------------------------------------------------------------
 (1) _lcdClear                                             0     0      0     110
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (2) _lcdCmd                                               3     3      0     110
                                              1 COMMON     3     3      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (3) _lcdPort                                              1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adcRead                                              4     2      2      98
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
       _adcRead (ARG)
     ___xxtofl (ARG)
       _adcRead (ARG)
     _adcRead (ARG)
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
       _adcRead (ARG)
     _adcRead (ARG)
   ___xxtofl
     _adcRead (ARG)
   _adcInit
   _adcRead
   _lcdClear
     _lcdCmd
       _lcdPort
   _lcdInit
     _lcdCmd
       _lcdPort
     _lcdPort
   _lcdPrint
     _lcdWriteChar
       _lcdPort
   _lcdSetCursor
     _lcdCmd
       _lcdPort
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _adcRead (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
       _adcRead (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _adcRead (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _adcRead (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _adcRead (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
       _adcRead (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _adcRead (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _adcRead (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     3A      3A       7       72.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed May 08 22:59:21 2019

           ___fldiv@aexp 0059             ___fldiv@bexp 0058                        pc 0002  
           ___fldiv@sign 0051              __CFG_CP$OFF 0000                       l40 1D5C  
                     l41 1D60                       l35 1D4F                       l36 1D52  
                     l37 1D56                       l53 1E86                       l38 1D57  
                     l39 1D5B                       l75 1DB6             ___awdiv@sign 0021  
                     fsr 0004      ___wmul@multiplicand 0072      __Umul8_16@word_mpld 0076  
                    l213 0273                      l254 07C9                      l239 05D7  
                    l264 1D86                      l450 1F3B                      l451 1F55  
                    l612 1775                      l445 08A1                      l455 1267  
                    l633 17F5                      l625 17DD                      l458 12CD  
                    l474 122F                      l731 133F                      l492 1416  
                    l725 12FF                      l671 15C9                      l647 147C  
                    l591 1623                      l753 1DF3                      l738 1355  
                    l595 16BC                      l739 135F                      l669 15BB  
                    l597 169A                      l699 0CAA                      _RB2 0032  
                    _RB3 0033                      _RB4 0034                      _RB5 0035  
                    _RB6 0036                      _RB7 0037             __CFG_CPD$OFF 0000  
                    fsr0 0004                      indf 0000             ___awmod@sign 0076  
           __CFG_FOSC$XT 0000             ___flmul@aexp 0038             ___flmul@bexp 0039  
            _sprintf$874 00AA             ___flmul@sign 0033             ___flmul@temp 003E  
           ___flmul@prod 003A           ??_lcdWriteChar 0071            lcdWriteChar@a 0074  
          lcdWriteChar@y 0073             __CFG_LVP$OFF 0000             ___fltol@exp1 005D  
                   l3101 1E7E                     l3005 121B                     l2301 1F80  
                   l3015 123E                     l3007 122B                     l3031 1FEA  
                   l2303 1F8E                     l2311 1FA7                     l3025 1FBC  
                   l2217 1DEB                     l3201 0291                     l3027 1FCC  
                   l3035 1FF7                     l3051 12F7                     l2331 1EBE  
                   l2251 10DD                     l2315 1FAF                     l2307 1F9C  
                   l2405 1618                     l3061 1312                     l2341 1EDF  
                   l2261 10E5                     l2245 10D2                     l3301 0639  
                   l2415 162D                     l3071 1353                     l3063 1324  
                   l2263 10F3                     l3207 02A1                     l2521 179D  
                   l2409 161B                     l3073 1344                     l3057 130E  
                   l2337 1ED4                     l2329 1EB0                     l2353 1E0A  
                   l2273 1114                     l3321 0685                     l3313 0668  
                   l3241 03CA                     l3233 0341                     l3217 02E7  
                   l3411 1474                     l3147 1EE6                     l2515 1796  
                   l2507 1787                     l2523 179F                     l2355 1E18  
                   l2363 1E31                     l3307 064C                     l3421 149B  
                   l2533 17AA                     l2453 16A5                     l2445 1669  
                   l2381 15EE                     l3085 137C                     l2605 09FC  
                   l2277 111C                     l2269 1109                     l2293 1F7A  
                   l3341 07B4                     l3261 04B2                     l3245 03EB  
                   l3407 1471                     l2551 17ED                     l2471 16CA  
                   l2455 16A7                     l2463 16B6                     l2359 1E26  
                   l3335 07A3                     l3271 0500                     l3343 07B9  
                   l3191 0235                     l3097 1E78                     l2529 17A8  
                   l2481 16ED                     l2385 15F1                     l2289 1F73  
                   l3257 0497                     l3249 043F                     l3193 026F  
                   l3177 0222                     l3361 020C                     l3427 14A7  
                   l2555 17F1                     l2387 15F9                     l2803 1396  
                   l3355 07DF                     l3283 0586                     l3363 07F7  
                   l3509 15C5                     l3453 1515                     l2901 08B0  
                   l2821 13CF                     l3277 0584                     l3541 0915  
                   l3471 1520                     l3447 14F6                     l3455 14D2  
                   l3391 144E                     l2479 16EB                     l2807 139F  
                   l2575 09BF                     l3199 0275                     l3473 153D  
                   l3457 151A                     l3393 1456                     l2489 16FD  
                   l2841 1412                     l2665 0C30                     l2657 0BFC  
                   l2593 09E4                     l2577 09C1                     l2745 01C3  
                   l2761 0DA9                     l3289 05C2                     l3483 1556  
                   l3387 144B                     l2499 1767                     l2907 1D7E  
                   l2683 0C7A                     l2659 0C19                     l2595 09E6  
                   l2579 09C9                     l2739 0116                     l2771 0E5F  
                   l3493 1588                     l2925 1131                     l2829 13EF  
                   l2669 0C32                     l2597 09EE                     l3581 0289  
                   l3479 1554                     l2951 1F67                     l2935 1169  
                   l2927 1141                     l2855 081A                     l2839 1402  
                   l2679 0C64                     l2767 0E34                     l3497 15A1  
                   l2961 1281                     l2881 0879                     l2873 0851  
                   l2849 1425                     l2689 0C93                     l2785 0FD5  
                   l2939 1176                     l2891 088D                     l2859 0823  
                   l2779 0F4A                     l2965 12A7                     l2893 089D  
                   l2797 080D                     l2985 11EB                     l2989 11F4  
                   STR_1 10AC                     STR_2 10A0                     STR_3 10B7  
                   STR_4 10BF                     u3025 1DF4                     u3115 10E8  
                   u4015 0B09                     u3135 10F4                     u3215 1F83  
                   u4105 0C00                     u3305 1EBF                     u3145 1100  
                   u3315 1ECB                     u3155 110A                     u3235 1F94  
                   u3500 1689                     u5005 11FD                     u4205 0C6D  
                   u4125 0C0B                     u3325 1ED5                     u3245 1F9D  
                   u3510 168A                     u4215 0C85                     u4055 0BA5  
                   u5105 1FC0                     u4305 0184                     u4235 1E47  
                   u5035 121C                     u4075 0BCA                     u3355 1E0D  
                   u4315 01CE                     u5125 1FDA                     u5205 1337  
                   u3285 1EB3                     u4405 0E37                     u5135 1FEB  
                   u4095 0BE8                     u3375 1E1E                     u4255 0028  
                   u3641 1728                     u3633 170F                     u3625 16F1  
                   u3545 16AB                     u5065 1234                     u5225 134C  
                   u3385 1E27                     u4265 0082                     u4425 0E84  
                   u4345 0CE3                     u6017 08F9                     u3650 173C  
                   u3642 1729                     u3651 173D                     u3643 172E  
                   u4195 0C4F                     u4275 00D7                     u4435 0EC0  
                   u4355 0D1F                     u6027 099D                     u3652 1742  
                   u3644 172F                     u6037 1E57                     u5325 1E8F  
                   u3653 1743                     u3645 1734                     u4445 0F0B  
                   u4365 0D6A                     u3646 1735                     u6047 1E67  
                   u3495 167D                     u4535 13D1                     u4295 0137  
                   u6057 118F                     u5265 1367                     u5185 131B  
                   u4625 141B                     u4545 13E2                     u4465 0F62  
                   u4385 0DC1                     u6067 119E                     u4555 13F0  
                   u4475 0F9E                     u4395 0DFD                     u5515 0495  
                   u6077 11AC                     u4725 088E                     u4485 0FD8  
                   u5605 0662                     u6087 1D73                     u3695 1789  
                   u5535 0589                     u6097 1DAE                     u4905 1F63  
                   u4825 1135                     u4665 0853                     u5625 0705  
                   u5545 05B8                     u3795 17C7                     u4755 08A6  
                   u4675 0868                     u4595 1403                     u5635 076B  
                   u5475 03F6                     u4941 1292                     u4845 1143  
                   u4685 087B                     u5485 044A                     u4942 1293  
                   u5815 14DB                     u4943 1298                     u4855 1158  
                   u5575 05DF                     u4944 1299                     u5905 152F  
                   u5825 14E4                     u4961 12B8                     u4945 129E  
                   u4865 116A                     u4785 1D87                     u3985 0AAC  
                   u4962 12B9                     u4946 129F                     u4963 12BE  
                   u4795 1D8E                     u5595 0655                     u4964 12BF  
                   u5845 14EF                     u4965 12C4                     u5685 07D0  
                   u4966 12C5                     u5855 1504                     u5695 07DD  
                   u5885 1524                     u5975 1573                     u5985 1591  
                   u5995 15AC              main@mensaje 00C6             __CFG_WRT$OFF 0000  
                   _main 08B9                     btemp 007E                     start 0000  
        ___fldiv@new_exp 0052            ___fltol@sign1 005C          __end_of___fladd 1800  
                  ?_main 0070          __end_of_adcInit 1D48          __end_of___fldiv 15D1  
        __end_of_adcRead 1DBF          __end_of___awdiv 1121          __end_of___flneg 1D2D  
          __CFG_WDTE$OFF 0000          __end_of___awmod 1FB4          __end_of___flmul 0CB7  
        __end_of___flsub 1DE1          __end_of___fltol 124D          __end_of___lldiv 117F  
        ___awdiv@divisor 0077          __end_of___llmod 2000          __end_of___lwdiv 1EE4  
        __end_of___lwmod 1E36          ___awdiv@counter 0020                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
        __end_of_lcdInit 11E0          __end_of_lcdPort 1D62          __end_of_dpowers 10A0  
                  _scale 0CB7          __end_of_isdigit 080F           __CFG_BOREN$OFF 0000  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __end_of_sprintf 07FC          __initialization 07FC             __end_of_main 09A2  
                 ??_main 00C3     __end_of_lcdSetCursor 1EA8     __size_of__tdiv_to_l_ 00A9  
       ___llmod@dividend 0074                   ?_scale 0040                   _ADRESH 001E  
                 _ADRESL 009E         ___awdiv@dividend 0079         __end_of___xxtofl 1385  
       __end_of_lcdClear 1D38           __CFG_PWRTE$OFF 0000         __end_of_lcdPrint 1F21  
       __end_of__powers_ 1044                   ___flge 124D                   ___fleq 1F21  
              ??___fladd 005C                   ___wmul 1D7C                ??_adcInit 0070  
              ??___fldiv 0048                ??_adcRead 0072                ??___awdiv 007B  
   __end_of_lcdWriteChar 1E6D                ??___flneg 0074                ??___awmod 0074  
              ??___flmul 002E                ??___flsub 007E                ??___fltol 0057  
              ??___lldiv 0078                   _lcdCmd 1D62                ??___llmod 0078  
              ??___lwdiv 007A                ??___lwmod 0074                   _fround 0004  
       ___awdiv@quotient 0022          ___awmod@divisor 0070                ??_lcdInit 0074  
        ___awmod@counter 0075                ??_lcdPort 0070                ??_isdigit 0070  
     __size_of__Umul8_16 0023                ??_sprintf 00A5               ___flge@ff1 0070  
             ___flge@ff2 0074             ___xxtofl@arg 0022             ___xxtofl@exp 0021  
           ___xxtofl@val 0074               ___fleq@ff1 0070               ___fleq@ff2 0074  
__end_of__initialization 07FC               ___flneg@f1 0070               ___fltol@f1 0053  
         __pcstackCOMMON 0070            __end_of_scale 1000               __div_to_l_ 080F  
       lcdWriteChar@temp 0072          __div_to_l_@exp1 0025          __div_to_l_@cntr 0024  
                ??_scale 0044          __div_to_l_@quot 0020            __div_to_l_@f1 0070  
          __div_to_l_@f2 0074        __end_of__Umul8_16 1E04               __pmaintext 08B9  
                ?___flge 0070                  ?___fleq 0070                  ?___wmul 0070  
                ?_lcdCmd 0070    __size_of_lcdSetCursor 003B                  ?_fround 0040  
              ?___xxtofl 0074                ?_lcdClear 0070                ?_lcdPrint 0075  
             __stringtab 1000    __size_of_lcdWriteChar 0037             _lcdSetCursor 1E6D  
      __end_of__npowers_ 1078          lcdSetCursor@row 0079          __size_of___flge 0093  
        __size_of___fleq 0048                  ___fladd 15D1                  _adcInit 1D38  
                ___fldiv 142E                  _adcRead 1D9D                  ___awdiv 10C6  
                ___flneg 1D24                  ___awmod 1F69                  ___flmul 09A2  
                ___flsub 1DBF                  ___fltol 11E0                  ___lldiv 1121  
        __size_of___wmul 0021                  ___llmod 1FB4                  ___lwdiv 1EA8  
             _fround$871 004F               _fround$872 004B                  ___lwmod 1E04  
        __size_of_lcdCmd 001A          __size_of_fround 0201                  _lcdInit 117F  
                __ptext1 0205                  __ptext2 0CB7                  __ptext3 1F69  
                __ptext4 10C6                  __ptext5 0801                  __ptext6 0004  
                __ptext7 1E04                  __ptext8 1EA8                  __ptext9 09A2  
                _lcdPort 1D48              ?__div_to_l_ 0070                  _dpowers 1078  
                _isdigit 0801               ??___xxtofl 0078         ___awmod@dividend 0072  
                lcdCmd@a 0073               ??_lcdClear 0074               ??_lcdPrint 0077  
                _sprintf 0205             _lcdWriteChar 1E36     end_of_initialization 07FC  
        ___lldiv@divisor 0070          ___lldiv@counter 007D           __tdiv_to_l_@f1 0070  
         __tdiv_to_l_@f2 0074            ??__tdiv_to_l_ 0078              ___fladd@grs 0067  
          ___xxtofl@sign 0020              ___fldiv@grs 0054              ___fldiv@rem 004D  
            ___flmul@grs 0034      __size_of__div_to_l_ 00AA           __end_of___flge 12E0  
         __end_of___fleq 1F69           __end_of___wmul 1D9D           __end_of_lcdCmd 1D7C  
         __end_of_fround 0205      start_initialization 07FC      __end_of__tdiv_to_l_ 142E  
        ___llmod@divisor 0070          ___llmod@counter 0079                 ??___flge 0078  
               ??___fleq 0078                 ??___wmul 0074                 ??_lcdCmd 0071  
              __Umul8_16 1DE1                 ??_fround 0044            sprintf@tmpval 00B7  
              ___fladd@a 0058                ___fladd@b 0054               fround@prec 0053  
              ___fldiv@a 0040                ___fldiv@b 0044                ___flmul@a 002A  
              ___flmul@b 0026                ___flsub@a 0068                ___flsub@b 006C  
              ___latbits 0002            __pcstackBANK0 0020            __pcstackBANK1 00A0  
      __size_of___xxtofl 00A5        __size_of_lcdClear 000B        __size_of_lcdPrint 003D  
            sprintf@flag 00AF              sprintf@eexp 00B5              sprintf@fval 00BE  
            sprintf@prec 00BC         ___lwdiv@dividend 0078                 ?___fladd 0054  
               ?_adcInit 0070                 ?___fldiv 0040                 ?_adcRead 0070  
               ?___awdiv 0077                 ?___flneg 0070                 ?___awmod 0070  
               ?___flmul 0026                 ?___flsub 0068                 ?___fltol 0053  
               ?___lldiv 0070                 ?___llmod 0070                __npowers_ 1044  
             ?__Umul8_16 0070                 ?___lwdiv 0076                 ?___lwmod 0070  
              __pstrings 1000                 ?_lcdInit 0070              __tdiv_to_l_ 1385  
               ?_lcdPort 0070             ??__div_to_l_ 0078        adcRead@adcChannel 0070  
               ?_isdigit 0070           lcdSetCursor@yy 0078                _scale$873 004E  
       ___lwdiv@quotient 007B                 ?_sprintf 00A0           __size_of_scale 0349  
         ___wmul@product 0074       __end_of__div_to_l_ 08B9                lcdPrint@a 0075  
              lcdPrint@i 007A               _ADCON0bits 001F              __stringbase 100F  
             _ADCON1bits 009F        ___wmul@multiplier 0070         lcdSetCursor@temp 007A  
            ??__Umul8_16 0072         __size_of___fladd 022F         __size_of_adcInit 0010  
       __size_of___fldiv 01A3         __size_of_adcRead 0022         __size_of___awdiv 005B  
       __size_of___flneg 0009         __size_of___awmod 004B         __size_of___flmul 0315  
       __size_of___flsub 0022         __size_of___fltol 006D         __size_of___lldiv 005E  
       __size_of___llmod 004C         __size_of___lwdiv 003C         __size_of___lwmod 0032  
     __end_of__stringtab 1010              _isdigit$682 0070         __size_of_lcdInit 0061  
       __size_of_lcdPort 001A               sprintf@val 00B1                 ___xxtofl 12E0  
       __size_of_isdigit 000E                 _lcdClear 1D2D          ___lwdiv@divisor 0076  
        ___lwdiv@counter 007D                 __ptext10 1DE1                 __ptext11 1385  
               __ptext20 1D24                 __ptext12 080F                 __ptext21 124D  
               __ptext13 12E0                 __ptext30 1D9D                 __ptext22 1F21  
               __ptext14 1D7C                 __ptext31 1D38                 __ptext23 1E6D  
               __ptext15 1FB4                 __ptext32 142E                 __ptext24 1EE4  
               __ptext16 1121                 __ptext25 1E36                 __ptext17 11E0  
               __ptext26 117F                 __ptext18 1DBF                 __ptext27 1D2D  
               __ptext19 15D1                 __ptext28 1D62                 __ptext29 1D48  
               _lcdPrint 1EE4                 __powers_ 1010         __size_of_sprintf 05F7  
          lcdSetCursor@x 0074            lcdSetCursor@y 007B            lcdSetCursor@z 0077  
          __size_of_main 00E9                 lcdPort@a 0070                 main@volt 00D6  
               isdigit@c 0071                 scale@scl 0052                sprintf@ap 00AE  
       __tdiv_to_l_@exp1 0025         __tdiv_to_l_@cntr 0024                sprintf@sp 00BB  
       __tdiv_to_l_@quot 0020         ___lwmod@dividend 0072         ___lldiv@dividend 0074  
          ?_lcdSetCursor 0074                stringcode 100A             ?__tdiv_to_l_ 0070  
 __Umul8_16@multiplicand 0070                 sprintf@c 00C2                 sprintf@f 00A0  
       ___lldiv@quotient 0079          ___lwmod@divisor 0070          ___lwmod@counter 0075  
               stringdir 100A                 stringtab 1000            ?_lcdWriteChar 0070  
          ___fladd@signs 0064             ___fladd@aexp 0065             ___fladd@bexp 0066  
   __Umul8_16@multiplier 0078           ??_lcdSetCursor 0075        __Umul8_16@product 0074  
