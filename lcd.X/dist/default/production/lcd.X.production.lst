

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 30 08:33:10 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,merge=1,delta=2
    37                           	psect	text28,local,class=CODE,merge=1,delta=2
    38                           	psect	text29,local,class=CODE,merge=1,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.05
    42                           ; Generated 20/12/2018 GMT
    43                           ; 
    44                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F877A Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0088                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  010C                     	;# 
   190  010D                     	;# 
   191  010E                     	;# 
   192  010F                     	;# 
   193  018C                     	;# 
   194  018D                     	;# 
   195                           
   196                           	psect	strings
   197  0003                     __pstrings:	
   198  0003                     stringtab:	
   199  0003                     __stringtab:	
   200                           
   201                           ;	String table - string pointers are 1 byte each
   202  0003  1BFF               	btfsc	btemp+1,7
   203  0004  280D               	ljmp	stringcode
   204  0005  1383               	bcf	3,7
   205  0006  187F               	btfsc	btemp+1,0
   206  0007  1783               	bsf	3,7
   207  0008  0800               	movf	0,w
   208  0009  0A84               	incf	4,f
   209  000A  1903               	skipnz
   210  000B  0AFF               	incf	btemp+1,f
   211  000C  0008               	return
   212  000D                     stringcode:	
   213  000D                     stringdir:	
   214  000D  3000               	movlw	high stringdir
   215  000E  008A               	movwf	10
   216  000F  0804               	movf	4,w
   217  0010  0A84               	incf	4,f
   218  0011  0782               	addwf	2,f
   219  0012                     __stringbase:	
   220  0012  3400               	retlw	0
   221  0013                     __end_of__stringtab:	
   222  0013                     __powers_:	
   223  0013  3400               	retlw	0
   224  0014  3400               	retlw	0
   225  0015  3480               	retlw	128
   226  0016  343F               	retlw	63
   227  0017  3400               	retlw	0
   228  0018  3400               	retlw	0
   229  0019  3420               	retlw	32
   230  001A  3441               	retlw	65
   231  001B  3400               	retlw	0
   232  001C  3400               	retlw	0
   233  001D  34C8               	retlw	200
   234  001E  3442               	retlw	66
   235  001F  3400               	retlw	0
   236  0020  3400               	retlw	0
   237  0021  347A               	retlw	122
   238  0022  3444               	retlw	68
   239  0023  3400               	retlw	0
   240  0024  3440               	retlw	64
   241  0025  341C               	retlw	28
   242  0026  3446               	retlw	70
   243  0027  3400               	retlw	0
   244  0028  3450               	retlw	80
   245  0029  34C3               	retlw	195
   246  002A  3447               	retlw	71
   247  002B  3400               	retlw	0
   248  002C  3424               	retlw	36
   249  002D  3474               	retlw	116
   250  002E  3449               	retlw	73
   251  002F  3480               	retlw	128
   252  0030  3496               	retlw	150
   253  0031  3418               	retlw	24
   254  0032  344B               	retlw	75
   255  0033  3420               	retlw	32
   256  0034  34BC               	retlw	188
   257  0035  34BE               	retlw	190
   258  0036  344C               	retlw	76
   259  0037  3428               	retlw	40
   260  0038  346B               	retlw	107
   261  0039  346E               	retlw	110
   262  003A  344E               	retlw	78
   263  003B  34F9               	retlw	249
   264  003C  3402               	retlw	2
   265  003D  3415               	retlw	21
   266  003E  3450               	retlw	80
   267  003F  34EC               	retlw	236
   268  0040  3478               	retlw	120
   269  0041  34AD               	retlw	173
   270  0042  3460               	retlw	96
   271  0043  34CA               	retlw	202
   272  0044  34F2               	retlw	242
   273  0045  3449               	retlw	73
   274  0046  3471               	retlw	113
   275  0047                     __end_of__powers_:	
   276  0047                     __npowers_:	
   277  0047  3400               	retlw	0
   278  0048  3400               	retlw	0
   279  0049  3480               	retlw	128
   280  004A  343F               	retlw	63
   281  004B  34CD               	retlw	205
   282  004C  34CC               	retlw	204
   283  004D  34CC               	retlw	204
   284  004E  343D               	retlw	61
   285  004F  340A               	retlw	10
   286  0050  34D7               	retlw	215
   287  0051  3423               	retlw	35
   288  0052  343C               	retlw	60
   289  0053  346F               	retlw	111
   290  0054  3412               	retlw	18
   291  0055  3483               	retlw	131
   292  0056  343A               	retlw	58
   293  0057  3417               	retlw	23
   294  0058  34B7               	retlw	183
   295  0059  34D1               	retlw	209
   296  005A  3438               	retlw	56
   297  005B  34AC               	retlw	172
   298  005C  34C5               	retlw	197
   299  005D  3427               	retlw	39
   300  005E  3437               	retlw	55
   301  005F  34BD               	retlw	189
   302  0060  3437               	retlw	55
   303  0061  3486               	retlw	134
   304  0062  3435               	retlw	53
   305  0063  3495               	retlw	149
   306  0064  34BF               	retlw	191
   307  0065  34D6               	retlw	214
   308  0066  3433               	retlw	51
   309  0067  3477               	retlw	119
   310  0068  34CC               	retlw	204
   311  0069  342B               	retlw	43
   312  006A  3432               	retlw	50
   313  006B  345F               	retlw	95
   314  006C  3470               	retlw	112
   315  006D  3489               	retlw	137
   316  006E  3430               	retlw	48
   317  006F  34FF               	retlw	255
   318  0070  34E6               	retlw	230
   319  0071  34DB               	retlw	219
   320  0072  342E               	retlw	46
   321  0073  3408               	retlw	8
   322  0074  34E5               	retlw	229
   323  0075  343C               	retlw	60
   324  0076  341E               	retlw	30
   325  0077  3460               	retlw	96
   326  0078  3442               	retlw	66
   327  0079  34A2               	retlw	162
   328  007A  340D               	retlw	13
   329  007B                     __end_of__npowers_:	
   330  007B                     _dpowers:	
   331  007B  3401               	retlw	1
   332  007C  3400               	retlw	0
   333  007D  3400               	retlw	0
   334  007E  3400               	retlw	0
   335  007F  340A               	retlw	10
   336  0080  3400               	retlw	0
   337  0081  3400               	retlw	0
   338  0082  3400               	retlw	0
   339  0083  3464               	retlw	100
   340  0084  3400               	retlw	0
   341  0085  3400               	retlw	0
   342  0086  3400               	retlw	0
   343  0087  34E8               	retlw	232
   344  0088  3403               	retlw	3
   345  0089  3400               	retlw	0
   346  008A  3400               	retlw	0
   347  008B  3410               	retlw	16
   348  008C  3427               	retlw	39
   349  008D  3400               	retlw	0
   350  008E  3400               	retlw	0
   351  008F  34A0               	retlw	160
   352  0090  3486               	retlw	134
   353  0091  3401               	retlw	1
   354  0092  3400               	retlw	0
   355  0093  3440               	retlw	64
   356  0094  3442               	retlw	66
   357  0095  340F               	retlw	15
   358  0096  3400               	retlw	0
   359  0097  3480               	retlw	128
   360  0098  3496               	retlw	150
   361  0099  3498               	retlw	152
   362  009A  3400               	retlw	0
   363  009B  3400               	retlw	0
   364  009C  34E1               	retlw	225
   365  009D  34F5               	retlw	245
   366  009E  3405               	retlw	5
   367  009F  3400               	retlw	0
   368  00A0  34CA               	retlw	202
   369  00A1  349A               	retlw	154
   370  00A2  343B               	retlw	59
   371  00A3                     __end_of_dpowers:	
   372  0008                     _PORTD	set	8
   373  0043                     _RD3	set	67
   374  0042                     _RD2	set	66
   375  0047                     _RD7	set	71
   376  0046                     _RD6	set	70
   377  0045                     _RD5	set	69
   378  0044                     _RD4	set	68
   379  0088                     _TRISD	set	136
   380  00A3                     STR_2:	
   381  00A3  3449               	retlw	73	;'I'
   382  00A4  346E               	retlw	110	;'n'
   383  00A5  3474               	retlw	116	;'t'
   384  00A6  3465               	retlw	101	;'e'
   385  00A7  3467               	retlw	103	;'g'
   386  00A8  3465               	retlw	101	;'e'
   387  00A9  3472               	retlw	114	;'r'
   388  00AA  3420               	retlw	32	;' '
   389  00AB  343D               	retlw	61	;'='
   390  00AC  3420               	retlw	32	;' '
   391  00AD  3425               	retlw	37	;'%'
   392  00AE  3464               	retlw	100	;'d'
   393  00AF  3400               	retlw	0
   394  00B0                     STR_1:	
   395  00B0  3446               	retlw	70	;'F'
   396  00B1  346C               	retlw	108	;'l'
   397  00B2  346F               	retlw	111	;'o'
   398  00B3  3461               	retlw	97	;'a'
   399  00B4  3474               	retlw	116	;'t'
   400  00B5  3420               	retlw	32	;' '
   401  00B6  343D               	retlw	61	;'='
   402  00B7  3420               	retlw	32	;' '
   403  00B8  3425               	retlw	37	;'%'
   404  00B9  342E               	retlw	46	;'.'
   405  00BA  3434               	retlw	52	;'4'
   406  00BB  3466               	retlw	102	;'f'
   407  00BC  3400               	retlw	0
   408  00BD                     STR_3:	
   409  00BD  3433               	retlw	51	;'3'
   410  00BE  3435               	retlw	53	;'5'
   411  00BF  3400               	retlw	0
   412                           
   413                           ; #config settings
   414  0000                     
   415                           	psect	cinit
   416  07FC                     start_initialization:	
   417  07FC                     __initialization:	
   418  07FC                     end_of_initialization:	
   419                           ;End of C runtime variable initialization code
   420                           
   421  07FC                     __end_of__initialization:	
   422  07FC  0183               	clrf	3
   423  07FD  160A  118A  2A0F   	ljmp	_main	;jump to C main() function
   424                           
   425                           	psect	cstackBANK1
   426  00A0                     __pcstackBANK1:	
   427  00A0                     ?_sprintf:	
   428  00A0                     sprintf@f:	
   429                           ; 2 bytes @ 0x0
   430                           
   431                           
   432                           ; 1 bytes @ 0x0
   433  00A0                     	ds	5
   434  00A5                     ??_sprintf:	
   435                           
   436                           ; 1 bytes @ 0x5
   437  00A5                     	ds	5
   438  00AA                     _sprintf$773:	
   439                           
   440                           ; 4 bytes @ 0xA
   441  00AA                     	ds	4
   442  00AE                     sprintf@ap:	
   443                           
   444                           ; 1 bytes @ 0xE
   445  00AE                     	ds	1
   446  00AF                     sprintf@flag:	
   447                           
   448                           ; 2 bytes @ 0xF
   449  00AF                     	ds	2
   450  00B1                     sprintf@eexp:	
   451                           
   452                           ; 2 bytes @ 0x11
   453  00B1                     	ds	2
   454  00B3                     sprintf@tmpval:	
   455                           
   456                           ; 4 bytes @ 0x13
   457  00B3                     	ds	4
   458  00B7                     sprintf@val:	
   459                           
   460                           ; 4 bytes @ 0x17
   461  00B7                     	ds	4
   462  00BB                     sprintf@sp:	
   463                           
   464                           ; 1 bytes @ 0x1B
   465  00BB                     	ds	1
   466  00BC                     sprintf@prec:	
   467                           
   468                           ; 2 bytes @ 0x1C
   469  00BC                     	ds	2
   470  00BE                     sprintf@fval:	
   471                           
   472                           ; 4 bytes @ 0x1E
   473  00BE                     	ds	4
   474  00C2                     sprintf@c:	
   475                           
   476                           ; 1 bytes @ 0x22
   477  00C2                     	ds	1
   478  00C3                     ??_main:	
   479                           
   480                           ; 1 bytes @ 0x23
   481  00C3                     	ds	3
   482  00C6                     main@flotante:	
   483                           
   484                           ; 16 bytes @ 0x26
   485  00C6                     	ds	16
   486  00D6                     main@entero:	
   487                           
   488                           ; 16 bytes @ 0x36
   489  00D6                     	ds	16
   490  00E6                     main@f:	
   491                           
   492                           ; 4 bytes @ 0x46
   493  00E6                     	ds	4
   494                           
   495                           	psect	cstackCOMMON
   496  0070                     __pcstackCOMMON:	
   497  0070                     ?_isdigit:	
   498  0070                     ?___fleq:	
   499                           ; 1 bit 
   500                           
   501  0070                     ?___flge:	
   502                           ; 1 bit 
   503                           
   504  0070                     ??_isdigit:	
   505                           ; 1 bit 
   506                           
   507  0070                     ?_lcdPort:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ??_lcdPort:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ?_lcdCmd:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_lcdClear:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_lcdInit:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_lcdWriteChar:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_main:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?__Umul8_16:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?___wmul:	
   532                           ; 2 bytes @ 0x0
   533                           
   534  0070                     ?___awmod:	
   535                           ; 2 bytes @ 0x0
   536                           
   537  0070                     ?___lwmod:	
   538                           ; 2 bytes @ 0x0
   539                           
   540  0070                     ?__tdiv_to_l_:	
   541                           ; 2 bytes @ 0x0
   542                           
   543  0070                     ?__div_to_l_:	
   544                           ; 4 bytes @ 0x0
   545                           
   546  0070                     ?___lldiv:	
   547                           ; 4 bytes @ 0x0
   548                           
   549  0070                     ?___flneg:	
   550                           ; 4 bytes @ 0x0
   551                           
   552  0070                     ?___xxtofl:	
   553                           ; 4 bytes @ 0x0
   554                           
   555  0070                     lcdPort@a:	
   556                           ; 4 bytes @ 0x0
   557                           
   558  0070                     _isdigit$585:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     __Umul8_16@multiplicand:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ___wmul@multiplier:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ___awmod@divisor:	
   568                           ; 2 bytes @ 0x0
   569                           
   570  0070                     ___lwmod@divisor:	
   571                           ; 2 bytes @ 0x0
   572                           
   573  0070                     ___lldiv@divisor:	
   574                           ; 2 bytes @ 0x0
   575                           
   576  0070                     __div_to_l_@f1:	
   577                           ; 4 bytes @ 0x0
   578                           
   579  0070                     ___fleq@ff1:	
   580                           ; 4 bytes @ 0x0
   581                           
   582  0070                     ___flge@ff1:	
   583                           ; 4 bytes @ 0x0
   584                           
   585  0070                     ___flneg@f1:	
   586                           ; 4 bytes @ 0x0
   587                           
   588  0070                     __tdiv_to_l_@f1:	
   589                           ; 4 bytes @ 0x0
   590                           
   591  0070                     ___xxtofl@val:	
   592                           ; 4 bytes @ 0x0
   593                           
   594                           
   595                           ; 4 bytes @ 0x0
   596  0070                     	ds	1
   597  0071                     ??_lcdCmd:	
   598  0071                     ??_lcdWriteChar:	
   599                           ; 1 bytes @ 0x1
   600                           
   601  0071                     isdigit@c:	
   602                           ; 1 bytes @ 0x1
   603                           
   604                           
   605                           ; 1 bytes @ 0x1
   606  0071                     	ds	1
   607  0072                     ??__Umul8_16:	
   608  0072                     lcdWriteChar@temp:	
   609                           ; 1 bytes @ 0x2
   610                           
   611  0072                     ___wmul@multiplicand:	
   612                           ; 1 bytes @ 0x2
   613                           
   614  0072                     ___awmod@dividend:	
   615                           ; 2 bytes @ 0x2
   616                           
   617  0072                     ___lwmod@dividend:	
   618                           ; 2 bytes @ 0x2
   619                           
   620                           
   621                           ; 2 bytes @ 0x2
   622  0072                     	ds	1
   623  0073                     lcdCmd@a:	
   624  0073                     lcdWriteChar@y:	
   625                           ; 1 bytes @ 0x3
   626                           
   627                           
   628                           ; 1 bytes @ 0x3
   629  0073                     	ds	1
   630  0074                     ??_lcdClear:	
   631  0074                     ?_lcdSetCursor:	
   632                           ; 1 bytes @ 0x4
   633                           
   634  0074                     ??_lcdInit:	
   635                           ; 1 bytes @ 0x4
   636                           
   637  0074                     ??___wmul:	
   638                           ; 1 bytes @ 0x4
   639                           
   640  0074                     ??___awmod:	
   641                           ; 1 bytes @ 0x4
   642                           
   643  0074                     ??___flneg:	
   644                           ; 1 bytes @ 0x4
   645                           
   646  0074                     ??___lwmod:	
   647                           ; 1 bytes @ 0x4
   648                           
   649  0074                     ??___xxtofl:	
   650                           ; 1 bytes @ 0x4
   651                           
   652  0074                     lcdSetCursor@b:	
   653                           ; 1 bytes @ 0x4
   654                           
   655  0074                     lcdWriteChar@a:	
   656                           ; 1 bytes @ 0x4
   657                           
   658  0074                     ___wmul@product:	
   659                           ; 1 bytes @ 0x4
   660                           
   661  0074                     __Umul8_16@product:	
   662                           ; 2 bytes @ 0x4
   663                           
   664  0074                     ___lldiv@dividend:	
   665                           ; 2 bytes @ 0x4
   666                           
   667  0074                     __div_to_l_@f2:	
   668                           ; 4 bytes @ 0x4
   669                           
   670  0074                     ___fleq@ff2:	
   671                           ; 4 bytes @ 0x4
   672                           
   673  0074                     ___flge@ff2:	
   674                           ; 4 bytes @ 0x4
   675                           
   676  0074                     __tdiv_to_l_@f2:	
   677                           ; 4 bytes @ 0x4
   678                           
   679                           
   680                           ; 4 bytes @ 0x4
   681  0074                     	ds	1
   682  0075                     ??_lcdSetCursor:	
   683  0075                     ?_lcdPrint:	
   684                           ; 1 bytes @ 0x5
   685                           
   686  0075                     ___awmod@counter:	
   687                           ; 1 bytes @ 0x5
   688                           
   689  0075                     ___lwmod@counter:	
   690                           ; 1 bytes @ 0x5
   691                           
   692  0075                     lcdPrint@a:	
   693                           ; 1 bytes @ 0x5
   694                           
   695                           
   696                           ; 2 bytes @ 0x5
   697  0075                     	ds	1
   698  0076                     ?___lwdiv:	
   699  0076                     ___awmod@sign:	
   700                           ; 2 bytes @ 0x6
   701                           
   702  0076                     ___lwdiv@divisor:	
   703                           ; 1 bytes @ 0x6
   704                           
   705  0076                     __Umul8_16@word_mpld:	
   706                           ; 2 bytes @ 0x6
   707                           
   708                           
   709                           ; 2 bytes @ 0x6
   710  0076                     	ds	1
   711  0077                     ??_lcdPrint:	
   712  0077                     ?___awdiv:	
   713                           ; 1 bytes @ 0x7
   714                           
   715  0077                     lcdSetCursor@a:	
   716                           ; 2 bytes @ 0x7
   717                           
   718  0077                     ___awdiv@divisor:	
   719                           ; 1 bytes @ 0x7
   720                           
   721                           
   722                           ; 2 bytes @ 0x7
   723  0077                     	ds	1
   724  0078                     ??__tdiv_to_l_:	
   725  0078                     ??__div_to_l_:	
   726                           ; 1 bytes @ 0x8
   727                           
   728  0078                     ??___lldiv:	
   729                           ; 1 bytes @ 0x8
   730                           
   731  0078                     ??___fleq:	
   732                           ; 1 bytes @ 0x8
   733                           
   734  0078                     ??___flge:	
   735                           ; 1 bytes @ 0x8
   736                           
   737  0078                     lcdSetCursor@z:	
   738                           ; 1 bytes @ 0x8
   739                           
   740  0078                     ___xxtofl@sign:	
   741                           ; 1 bytes @ 0x8
   742                           
   743  0078                     __Umul8_16@multiplier:	
   744                           ; 1 bytes @ 0x8
   745                           
   746  0078                     ___lwdiv@dividend:	
   747                           ; 1 bytes @ 0x8
   748                           
   749                           
   750                           ; 2 bytes @ 0x8
   751  0078                     	ds	1
   752  0079                     lcdSetCursor@y:	
   753  0079                     ___xxtofl@exp:	
   754                           ; 1 bytes @ 0x9
   755                           
   756  0079                     ___awdiv@dividend:	
   757                           ; 1 bytes @ 0x9
   758                           
   759  0079                     ___lldiv@quotient:	
   760                           ; 2 bytes @ 0x9
   761                           
   762                           
   763                           ; 4 bytes @ 0x9
   764  0079                     	ds	1
   765  007A                     ??___lwdiv:	
   766  007A                     lcdSetCursor@temp:	
   767                           ; 1 bytes @ 0xA
   768                           
   769  007A                     lcdPrint@i:	
   770                           ; 1 bytes @ 0xA
   771                           
   772  007A                     ___xxtofl@arg:	
   773                           ; 2 bytes @ 0xA
   774                           
   775                           
   776                           ; 4 bytes @ 0xA
   777  007A                     	ds	1
   778  007B                     ??___awdiv:	
   779  007B                     ___lwdiv@quotient:	
   780                           ; 1 bytes @ 0xB
   781                           
   782                           
   783                           ; 2 bytes @ 0xB
   784  007B                     	ds	2
   785  007D                     ___lldiv@counter:	
   786  007D                     ___lwdiv@counter:	
   787                           ; 1 bytes @ 0xD
   788                           
   789                           
   790                           ; 1 bytes @ 0xD
   791  007D                     	ds	1
   792  007E                     ??___flsub:	
   793                           
   794                           	psect	cstackBANK0
   795  0020                     __pcstackBANK0:	
   796                           ; 1 bytes @ 0xE
   797                           
   798  0020                     ?___llmod:	
   799  0020                     ___awdiv@counter:	
   800                           ; 4 bytes @ 0x0
   801                           
   802  0020                     __div_to_l_@quot:	
   803                           ; 1 bytes @ 0x0
   804                           
   805  0020                     __tdiv_to_l_@quot:	
   806                           ; 4 bytes @ 0x0
   807                           
   808  0020                     ___llmod@divisor:	
   809                           ; 4 bytes @ 0x0
   810                           
   811                           
   812                           ; 4 bytes @ 0x0
   813  0020                     	ds	1
   814  0021                     ___awdiv@sign:	
   815                           
   816                           ; 1 bytes @ 0x1
   817  0021                     	ds	1
   818  0022                     ___awdiv@quotient:	
   819                           
   820                           ; 2 bytes @ 0x2
   821  0022                     	ds	2
   822  0024                     ?___flmul:	
   823  0024                     __div_to_l_@cntr:	
   824                           ; 4 bytes @ 0x4
   825                           
   826  0024                     __tdiv_to_l_@cntr:	
   827                           ; 1 bytes @ 0x4
   828                           
   829  0024                     ___llmod@dividend:	
   830                           ; 1 bytes @ 0x4
   831                           
   832  0024                     ___flmul@b:	
   833                           ; 4 bytes @ 0x4
   834                           
   835                           
   836                           ; 4 bytes @ 0x4
   837  0024                     	ds	1
   838  0025                     __div_to_l_@exp1:	
   839  0025                     __tdiv_to_l_@exp1:	
   840                           ; 1 bytes @ 0x5
   841                           
   842                           
   843                           ; 1 bytes @ 0x5
   844  0025                     	ds	3
   845  0028                     ??___llmod:	
   846  0028                     ___flmul@a:	
   847                           ; 1 bytes @ 0x8
   848                           
   849                           
   850                           ; 4 bytes @ 0x8
   851  0028                     	ds	1
   852  0029                     ___llmod@counter:	
   853                           
   854                           ; 1 bytes @ 0x9
   855  0029                     	ds	3
   856  002C                     ??___flmul:	
   857                           
   858                           ; 1 bytes @ 0xC
   859  002C                     	ds	5
   860  0031                     ___flmul@sign:	
   861                           
   862                           ; 1 bytes @ 0x11
   863  0031                     	ds	1
   864  0032                     ___flmul@grs:	
   865                           
   866                           ; 4 bytes @ 0x12
   867  0032                     	ds	4
   868  0036                     ___flmul@aexp:	
   869                           
   870                           ; 1 bytes @ 0x16
   871  0036                     	ds	1
   872  0037                     ___flmul@bexp:	
   873                           
   874                           ; 1 bytes @ 0x17
   875  0037                     	ds	1
   876  0038                     ___flmul@prod:	
   877                           
   878                           ; 4 bytes @ 0x18
   879  0038                     	ds	4
   880  003C                     ___flmul@temp:	
   881                           
   882                           ; 2 bytes @ 0x1C
   883  003C                     	ds	2
   884  003E                     ?_fround:	
   885  003E                     ?_scale:	
   886                           ; 4 bytes @ 0x1E
   887                           
   888                           
   889                           ; 4 bytes @ 0x1E
   890  003E                     	ds	4
   891  0042                     ??_fround:	
   892  0042                     ??_scale:	
   893                           ; 1 bytes @ 0x22
   894                           
   895                           
   896                           ; 1 bytes @ 0x22
   897  0042                     	ds	7
   898  0049                     _fround$771:	
   899                           
   900                           ; 4 bytes @ 0x29
   901  0049                     	ds	3
   902  004C                     _scale$772:	
   903                           
   904                           ; 4 bytes @ 0x2C
   905  004C                     	ds	1
   906  004D                     _fround$770:	
   907                           
   908                           ; 4 bytes @ 0x2D
   909  004D                     	ds	3
   910  0050                     scale@scl:	
   911                           
   912                           ; 1 bytes @ 0x30
   913  0050                     	ds	1
   914  0051                     ?___fltol:	
   915  0051                     fround@prec:	
   916                           ; 4 bytes @ 0x31
   917                           
   918  0051                     ___fltol@f1:	
   919                           ; 1 bytes @ 0x31
   920                           
   921                           
   922                           ; 4 bytes @ 0x31
   923  0051                     	ds	1
   924  0052                     ?___fladd:	
   925  0052                     ___fladd@b:	
   926                           ; 4 bytes @ 0x32
   927                           
   928                           
   929                           ; 4 bytes @ 0x32
   930  0052                     	ds	3
   931  0055                     ??___fltol:	
   932                           
   933                           ; 1 bytes @ 0x35
   934  0055                     	ds	1
   935  0056                     ___fladd@a:	
   936                           
   937                           ; 4 bytes @ 0x36
   938  0056                     	ds	4
   939  005A                     ??___fladd:	
   940  005A                     ___fltol@sign1:	
   941                           ; 1 bytes @ 0x3A
   942                           
   943                           
   944                           ; 1 bytes @ 0x3A
   945  005A                     	ds	1
   946  005B                     ___fltol@exp1:	
   947                           
   948                           ; 1 bytes @ 0x3B
   949  005B                     	ds	7
   950  0062                     ___fladd@signs:	
   951                           
   952                           ; 1 bytes @ 0x42
   953  0062                     	ds	1
   954  0063                     ___fladd@aexp:	
   955                           
   956                           ; 1 bytes @ 0x43
   957  0063                     	ds	1
   958  0064                     ___fladd@bexp:	
   959                           
   960                           ; 1 bytes @ 0x44
   961  0064                     	ds	1
   962  0065                     ___fladd@grs:	
   963                           
   964                           ; 1 bytes @ 0x45
   965  0065                     	ds	1
   966  0066                     ?___flsub:	
   967  0066                     ___flsub@a:	
   968                           ; 4 bytes @ 0x46
   969                           
   970                           
   971                           ; 4 bytes @ 0x46
   972  0066                     	ds	4
   973  006A                     ___flsub@b:	
   974                           
   975                           ; 4 bytes @ 0x4A
   976  006A                     	ds	4
   977                           
   978                           	psect	maintext
   979  120F                     __pmaintext:	
   980 ;;
   981 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   982 ;;
   983 ;; *************** function _main *****************
   984 ;; Defined at:
   985 ;;		line 16 in file "main.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;		None
   988 ;; Auto vars:     Size  Location     Type
   989 ;;  entero         16   54[BANK1 ] unsigned char [16]
   990 ;;  flotante       16   38[BANK1 ] unsigned char [16]
   991 ;;  f               4   70[BANK1 ] float 
   992 ;;  a               2    0        int 
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      void 
   995 ;; Registers used:
   996 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   997 ;; Tracked objects:
   998 ;;		On entry : B00/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1002 ;;      Params:         0       0       0       0       0
  1003 ;;      Locals:         0       0      38       0       0
  1004 ;;      Temps:          0       0       3       0       0
  1005 ;;      Totals:         0       0      41       0       0
  1006 ;;Total ram usage:       41 bytes
  1007 ;; Hardware stack levels required when called:    4
  1008 ;; This function calls:
  1009 ;;		_lcdClear
  1010 ;;		_lcdInit
  1011 ;;		_lcdPrint
  1012 ;;		_lcdSetCursor
  1013 ;;		_sprintf
  1014 ;; This function is called by:
  1015 ;;		Startup code after reset
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           
  1020                           ;psect for function _main
  1021  120F                     _main:	
  1022                           
  1023                           ;main.c: 18:     lcdInit();
  1024                           
  1025                           ;incstack = 0
  1026                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1027  120F  160A  118A  2141  160A  118A  	fcall	_lcdInit
  1028  1214                     l60:	
  1029                           ;main.c: 20:     while (1) {
  1030                           
  1031                           
  1032                           ;main.c: 38:         lcdClear();
  1033  1214  160A  158A  2616  160A  118A  	fcall	_lcdClear
  1034                           
  1035                           ;main.c: 39:         float f = 3.1416;
  1036  1219  3040               	movlw	64
  1037  121A  1683               	bsf	3,5	;RP0=1, select bank1
  1038  121B  1303               	bcf	3,6	;RP1=0, select bank1
  1039  121C  00E9               	movwf	(main@f+3)^(0+128)
  1040  121D  3049               	movlw	73
  1041  121E  00E8               	movwf	(main@f+2)^(0+128)
  1042  121F  300F               	movlw	15
  1043  1220  00E7               	movwf	(main@f+1)^(0+128)
  1044  1221  30F9               	movlw	249
  1045  1222  00E6               	movwf	main@f^(0+128)
  1046                           
  1047                           ;main.c: 40:         char flotante[16];;main.c: 41:         sprintf(flotante, "Float = %
      +                          .4f", f);
  1048  1223  309E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1049  1224  00C3               	movwf	??_main^(0+128)
  1050  1225  0843               	movf	??_main^(0+128),w
  1051  1226  00A0               	movwf	sprintf@f^(0+128)
  1052  1227  0869               	movf	(main@f+3)^(0+128),w
  1053  1228  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1054  1229  0868               	movf	(main@f+2)^(0+128),w
  1055  122A  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1056  122B  0867               	movf	(main@f+1)^(0+128),w
  1057  122C  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1058  122D  0866               	movf	main@f^(0+128),w
  1059  122E  00A1               	movwf	(?_sprintf^(0+128)+1)
  1060  122F  30C6               	movlw	(low (main@flotante| 0))& (0+255)
  1061  1230  120A  118A  20C9  160A  118A  	fcall	_sprintf
  1062                           
  1063                           ;main.c: 42:         lcdSetCursor(1, 1);
  1064  1235  01F4               	clrf	lcdSetCursor@b
  1065  1236  0AF4               	incf	lcdSetCursor@b,f
  1066  1237  3001               	movlw	1
  1067  1238  160A  158A  27B6  160A  118A  	fcall	_lcdSetCursor
  1068                           
  1069                           ;main.c: 43:         lcdPrint(flotante);
  1070  123D  30C6               	movlw	(low (main@flotante| 0))& (0+255)
  1071  123E  00F5               	movwf	lcdPrint@a
  1072  123F  3000               	movlw	0
  1073  1240  00F6               	movwf	lcdPrint@a+1
  1074  1241  160A  118A  2000  160A  118A  	fcall	_lcdPrint
  1075                           
  1076                           ;main.c: 47:         sprintf(entero, "Integer = %d", a);
  1077  1246  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1078  1247  1683               	bsf	3,5	;RP0=1, select bank1
  1079  1248  1303               	bcf	3,6	;RP1=0, select bank1
  1080  1249  00C3               	movwf	??_main^(0+128)
  1081  124A  0843               	movf	??_main^(0+128),w
  1082  124B  00A0               	movwf	sprintf@f^(0+128)
  1083  124C  3038               	movlw	56
  1084  124D  00A1               	movwf	(?_sprintf^(0+128)+1)
  1085  124E  3000               	movlw	0
  1086  124F  00A2               	movwf	(?_sprintf^(0+128)+2)
  1087  1250  30D6               	movlw	(low (main@entero| 0))& (0+255)
  1088  1251  120A  118A  20C9  160A  118A  	fcall	_sprintf
  1089                           
  1090                           ;main.c: 48:         lcdSetCursor(2, 1);
  1091  1256  01F4               	clrf	lcdSetCursor@b
  1092  1257  0AF4               	incf	lcdSetCursor@b,f
  1093  1258  3002               	movlw	2
  1094  1259  160A  158A  27B6  160A  118A  	fcall	_lcdSetCursor
  1095                           
  1096                           ;main.c: 49:         lcdPrint(entero);
  1097  125E  30D6               	movlw	(low (main@entero| 0))& (0+255)
  1098  125F  00F5               	movwf	lcdPrint@a
  1099  1260  3000               	movlw	0
  1100  1261  00F6               	movwf	lcdPrint@a+1
  1101  1262  160A  118A  2000  160A  118A  	fcall	_lcdPrint
  1102                           
  1103                           ;main.c: 50:         _delay((unsigned long)((2000)*(4000000/4000.0)));
  1104  1267  300B               	movlw	11
  1105  1268  1683               	bsf	3,5	;RP0=1, select bank1
  1106  1269  1303               	bcf	3,6	;RP1=0, select bank1
  1107  126A  00C5               	movwf	(??_main^(0+128)+2)
  1108  126B  3026               	movlw	38
  1109  126C  00C4               	movwf	(??_main^(0+128)+1)
  1110  126D  305D               	movlw	93
  1111  126E  00C3               	movwf	??_main^(0+128)
  1112  126F                     u5537:	
  1113  126F  0BC3               	decfsz	??_main^(0+128),f
  1114  1270  2A6F               	goto	u5537
  1115  1271  0BC4               	decfsz	(??_main^(0+128)+1),f
  1116  1272  2A6F               	goto	u5537
  1117  1273  0BC5               	decfsz	(??_main^(0+128)+2),f
  1118  1274  2A6F               	goto	u5537
  1119                           
  1120                           ;main.c: 52:         lcdClear();
  1121  1275  160A  158A  2616  160A  118A  	fcall	_lcdClear
  1122                           
  1123                           ;main.c: 53:         lcdSetCursor(1,1);
  1124  127A  01F4               	clrf	lcdSetCursor@b
  1125  127B  0AF4               	incf	lcdSetCursor@b,f
  1126  127C  3001               	movlw	1
  1127  127D  160A  158A  27B6  160A  118A  	fcall	_lcdSetCursor
  1128                           
  1129                           ;main.c: 54:         lcdPrint("35");
  1130  1282  30AB               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1131  1283  00F5               	movwf	lcdPrint@a
  1132  1284  3080               	movlw	128
  1133  1285  00F6               	movwf	lcdPrint@a+1
  1134  1286  160A  118A  2000  160A  118A  	fcall	_lcdPrint
  1135                           
  1136                           ;main.c: 55:         _delay((unsigned long)((2000)*(4000000/4000.0)));
  1137  128B  300B               	movlw	11
  1138  128C  1683               	bsf	3,5	;RP0=1, select bank1
  1139  128D  1303               	bcf	3,6	;RP1=0, select bank1
  1140  128E  00C5               	movwf	(??_main^(0+128)+2)
  1141  128F  3026               	movlw	38
  1142  1290  00C4               	movwf	(??_main^(0+128)+1)
  1143  1291  305D               	movlw	93
  1144  1292  00C3               	movwf	??_main^(0+128)
  1145  1293                     u5547:	
  1146  1293  0BC3               	decfsz	??_main^(0+128),f
  1147  1294  2A93               	goto	u5547
  1148  1295  0BC4               	decfsz	(??_main^(0+128)+1),f
  1149  1296  2A93               	goto	u5547
  1150  1297  0BC5               	decfsz	(??_main^(0+128)+2),f
  1151  1298  2A93               	goto	u5547
  1152  1299  2A14               	goto	l60
  1153  129A                     __end_of_main:	
  1154                           
  1155                           	psect	text1
  1156  00C9                     __ptext1:	
  1157 ;; *************** function _sprintf *****************
  1158 ;; Defined at:
  1159 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  sp              1    wreg     PTR unsigned char 
  1162 ;;		 -> main@entero(16), main@flotante(16), 
  1163 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1164 ;;		 -> STR_2(13), STR_1(13), 
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  1167 ;;		 -> main@entero(16), main@flotante(16), 
  1168 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  1169 ;;  val             4   23[BANK1 ] unsigned long 
  1170 ;;  tmpval          4   19[BANK1 ] struct .
  1171 ;;  prec            2   28[BANK1 ] int 
  1172 ;;  eexp            2   17[BANK1 ] int 
  1173 ;;  flag            2   15[BANK1 ] unsigned short 
  1174 ;;  cp              2    0        PTR const unsigned char 
  1175 ;;  len             2    0        unsigned int 
  1176 ;;  width           2    0        int 
  1177 ;;  c               1   34[BANK1 ] unsigned char 
  1178 ;;  ap              1   14[BANK1 ] PTR void [1]
  1179 ;;		 -> ?_sprintf(2), 
  1180 ;;  d               1    0        unsigned char 
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  2    0[BANK1 ] int 
  1183 ;; Registers used:
  1184 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1190 ;;      Params:         0       0       5       0       0
  1191 ;;      Locals:         0       0      25       0       0
  1192 ;;      Temps:          0       0       5       0       0
  1193 ;;      Totals:         0       0      35       0       0
  1194 ;;Total ram usage:       35 bytes
  1195 ;; Hardware stack levels used:    1
  1196 ;; Hardware stack levels required when called:    3
  1197 ;; This function calls:
  1198 ;;		___awdiv
  1199 ;;		___fladd
  1200 ;;		___fleq
  1201 ;;		___flge
  1202 ;;		___flmul
  1203 ;;		___flneg
  1204 ;;		___flsub
  1205 ;;		___fltol
  1206 ;;		___lldiv
  1207 ;;		___llmod
  1208 ;;		___wmul
  1209 ;;		___xxtofl
  1210 ;;		__div_to_l_
  1211 ;;		__tdiv_to_l_
  1212 ;;		_fround
  1213 ;;		_isdigit
  1214 ;;		_scale
  1215 ;; This function is called by:
  1216 ;;		_main
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           
  1221                           ;psect for function _sprintf
  1222  00C9                     _sprintf:	
  1223                           
  1224                           ;incstack = 0
  1225                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1226                           ;sprintf@sp stored from wreg
  1227  00C9  1683               	bsf	3,5	;RP0=1, select bank1
  1228  00CA  1303               	bcf	3,6	;RP1=0, select bank1
  1229  00CB  00BB               	movwf	sprintf@sp^(0+128)
  1230                           
  1231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 509:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c90\common\doprnt.c: 512:  int prec;
  1232  00CC  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1233  00CD  00A5               	movwf	??_sprintf^(0+128)
  1234  00CE  0825               	movf	??_sprintf^(0+128),w
  1235  00CF  00AE               	movwf	sprintf@ap^(0+128)
  1236  00D0                     l3216:	
  1237                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1238                           
  1239                           
  1240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1241  00D0  3001               	movlw	1
  1242  00D1  07A0               	addwf	sprintf@f^(0+128),f
  1243  00D2  30FF               	movlw	-1
  1244  00D3  0720               	addwf	sprintf@f^(0+128),w
  1245  00D4  0084               	movwf	4
  1246  00D5  120A  118A  200D  120A  118A  	fcall	stringdir
  1247  00DA  00A5               	movwf	??_sprintf^(0+128)
  1248  00DB  0825               	movf	??_sprintf^(0+128),w
  1249  00DC  00C2               	movwf	sprintf@c^(0+128)
  1250  00DD  0842               	movf	sprintf@c^(0+128),w
  1251  00DE  1903               	btfsc	3,2
  1252  00DF  2FF7               	goto	l3218
  1253                           
  1254                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  1255  00E0  3025               	movlw	37
  1256  00E1  0642               	xorwf	sprintf@c^(0+128),w
  1257  00E2  1903               	btfsc	3,2
  1258  00E3  28F0               	goto	l3000
  1259                           
  1260                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  1261  00E4  0842               	movf	sprintf@c^(0+128),w
  1262  00E5  00A5               	movwf	??_sprintf^(0+128)
  1263  00E6  083B               	movf	sprintf@sp^(0+128),w
  1264  00E7  0084               	movwf	4
  1265  00E8  0825               	movf	??_sprintf^(0+128),w
  1266  00E9  1383               	bcf	3,7	;select IRP bank0
  1267  00EA  0080               	movwf	0
  1268  00EB  3001               	movlw	1
  1269  00EC  00A5               	movwf	??_sprintf^(0+128)
  1270  00ED  0825               	movf	??_sprintf^(0+128),w
  1271  00EE  07BB               	addwf	sprintf@sp^(0+128),f
  1272                           
  1273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  1274  00EF  28D0               	goto	l3216
  1275  00F0                     l3000:	
  1276                           
  1277                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  1278  00F0  01AF               	clrf	sprintf@flag^(0+128)
  1279  00F1  01B0               	clrf	(sprintf@flag+1)^(0+128)
  1280                           
  1281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 623:   if(*
      +                          f == '.') {
  1282  00F2  0820               	movf	sprintf@f^(0+128),w
  1283  00F3  0084               	movwf	4
  1284  00F4  120A  118A  200D  120A  118A  	fcall	stringdir
  1285  00F9  3A2E               	xorlw	46
  1286  00FA  1D03               	skipz
  1287  00FB  293D               	goto	l3016
  1288                           
  1289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 624:    fla
      +                          g |= 0x4000;
  1290  00FC  1730               	bsf	(sprintf@flag^(0+128)+1),6
  1291                           
  1292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 625:    f++
      +                          ;
  1293  00FD  3001               	movlw	1
  1294  00FE  00A5               	movwf	??_sprintf^(0+128)
  1295  00FF  0825               	movf	??_sprintf^(0+128),w
  1296  0100  07A0               	addwf	sprintf@f^(0+128),f
  1297                           
  1298                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 639:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 640:     prec
      +                           = 0;
  1299  0101  01BC               	clrf	sprintf@prec^(0+128)
  1300  0102  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1301  0103                     l3014:	
  1302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     wh
      +                          ile(isdigit((unsigned)*f))
  1303                           
  1304                           
  1305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     wh
      +                          ile(isdigit((unsigned)*f))
  1306  0103  0820               	movf	sprintf@f^(0+128),w
  1307  0104  0084               	movwf	4
  1308  0105  120A  118A  200D  120A  118A  	fcall	stringdir
  1309  010A  160A  158A  2621  120A  118A  	fcall	_isdigit
  1310  010F  1C03               	btfss	3,0
  1311  0110  2943               	goto	l3022
  1312                           
  1313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 642:      p
      +                          rec = prec*10 + *f++ - '0';
  1314  0111  1683               	bsf	3,5	;RP0=1, select bank1
  1315  0112  1303               	bcf	3,6	;RP1=0, select bank1
  1316  0113  083D               	movf	(sprintf@prec+1)^(0+128),w
  1317  0114  00F1               	movwf	___wmul@multiplier+1
  1318  0115  083C               	movf	sprintf@prec^(0+128),w
  1319  0116  00F0               	movwf	___wmul@multiplier
  1320  0117  300A               	movlw	10
  1321  0118  00F2               	movwf	___wmul@multiplicand
  1322  0119  3000               	movlw	0
  1323  011A  00F3               	movwf	___wmul@multiplicand+1
  1324  011B  160A  158A  2663  120A  118A  	fcall	___wmul
  1325  0120  1683               	bsf	3,5	;RP0=1, select bank1
  1326  0121  1303               	bcf	3,6	;RP1=0, select bank1
  1327  0122  0820               	movf	sprintf@f^(0+128),w
  1328  0123  0084               	movwf	4
  1329  0124  120A  118A  200D  120A  118A  	fcall	stringdir
  1330  0129  0770               	addwf	?___wmul,w
  1331  012A  00A5               	movwf	??_sprintf^(0+128)
  1332  012B  3000               	movlw	0
  1333  012C  1803               	skipnc
  1334  012D  3001               	movlw	1
  1335  012E  0771               	addwf	?___wmul+1,w
  1336  012F  00A6               	movwf	(??_sprintf+1)^(0+128)
  1337  0130  0825               	movf	??_sprintf^(0+128),w
  1338  0131  3ED0               	addlw	208
  1339  0132  00BC               	movwf	sprintf@prec^(0+128)
  1340  0133  0826               	movf	(??_sprintf+1)^(0+128),w
  1341  0134  1803               	skipnc
  1342  0135  3E01               	addlw	1
  1343  0136  3EFF               	addlw	255
  1344  0137  00BD               	movwf	(sprintf@prec+1)^(0+128)
  1345  0138  3001               	movlw	1
  1346  0139  00A5               	movwf	??_sprintf^(0+128)
  1347  013A  0825               	movf	??_sprintf^(0+128),w
  1348  013B  07A0               	addwf	sprintf@f^(0+128),f
  1349  013C  2903               	goto	l3014
  1350  013D                     l3016:	
  1351                           
  1352                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 645:    pre
      +                          c = 0;
  1353  013D  01BC               	clrf	sprintf@prec^(0+128)
  1354  013E  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1355                           
  1356                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 647:    fla
      +                          g |= 0x1000;
  1357  013F  1630               	bsf	(sprintf@flag^(0+128)+1),4
  1358  0140  2943               	goto	l3022
  1359  0141                     l191:	
  1360                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 681:   case
      +                           'f':
  1361                           
  1362                           
  1363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 682:    fla
      +                          g |= 0x400;
  1364  0141  1530               	bsf	(sprintf@flag^(0+128)+1),2
  1365                           
  1366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 683:    bre
      +                          ak;
  1367  0142  2965               	goto	l3024
  1368  0143                     l3022:	
  1369  0143  3001               	movlw	1
  1370  0144  1683               	bsf	3,5	;RP0=1, select bank1
  1371  0145  1303               	bcf	3,6	;RP1=0, select bank1
  1372  0146  07A0               	addwf	sprintf@f^(0+128),f
  1373  0147  30FF               	movlw	-1
  1374  0148  0720               	addwf	sprintf@f^(0+128),w
  1375  0149  0084               	movwf	4
  1376  014A  120A  118A  200D  120A  118A  	fcall	stringdir
  1377  014F  00C2               	movwf	sprintf@c^(0+128)
  1378  0150  00A5               	movwf	??_sprintf^(0+128)
  1379  0151  01A6               	clrf	(??_sprintf^(0+128)+1)
  1380                           
  1381                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1382                           ; Switch size 1, requested type "simple"
  1383                           ; Number of cases is 1, Range of values is 0 to 0
  1384                           ; switch strategies available:
  1385                           ; Name         Instructions Cycles
  1386                           ; simple_byte            4     3 (average)
  1387                           ; direct_byte           11     8 (fixed)
  1388                           ; jumptable            260     6 (fixed)
  1389                           ;	Chosen strategy is simple_byte
  1390  0152  0826               	movf	(??_sprintf+1)^(0+128),w
  1391  0153  3A00               	xorlw	0	; case 0
  1392  0154  1903               	skipnz
  1393  0155  2957               	goto	l3280
  1394  0156  28D0               	goto	l3216
  1395  0157                     l3280:	
  1396                           
  1397                           ; Switch size 1, requested type "simple"
  1398                           ; Number of cases is 4, Range of values is 0 to 105
  1399                           ; switch strategies available:
  1400                           ; Name         Instructions Cycles
  1401                           ; simple_byte           13     7 (average)
  1402                           ; jumptable            260     6 (fixed)
  1403                           ;	Chosen strategy is simple_byte
  1404  0157  0825               	movf	??_sprintf^(0+128),w
  1405  0158  3A00               	xorlw	0	; case 0
  1406  0159  1903               	skipnz
  1407  015A  2FF7               	goto	l3218
  1408  015B  3A64               	xorlw	100	; case 100
  1409  015C  1903               	skipnz
  1410  015D  2965               	goto	l3024
  1411  015E  3A02               	xorlw	2	; case 102
  1412  015F  1903               	skipnz
  1413  0160  2941               	goto	l191
  1414  0161  3A0F               	xorlw	15	; case 105
  1415  0162  1903               	skipnz
  1416  0163  2965               	goto	l3024
  1417  0164  28D0               	goto	l3216
  1418  0165                     l3024:	
  1419                           
  1420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 844:   if(f
      +                          lag & (0x700)) {
  1421  0165  3000               	movlw	0
  1422  0166  052F               	andwf	sprintf@flag^(0+128),w
  1423  0167  00A5               	movwf	??_sprintf^(0+128)
  1424  0168  3007               	movlw	7
  1425  0169  0530               	andwf	(sprintf@flag+1)^(0+128),w
  1426  016A  00A6               	movwf	(??_sprintf+1)^(0+128)
  1427  016B  0825               	movf	??_sprintf^(0+128),w
  1428  016C  0426               	iorwf	(??_sprintf^(0+128)+1),w
  1429  016D  1903               	btfsc	3,2
  1430  016E  2EEB               	goto	l3166
  1431                           
  1432                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 846:    if(
      +                          flag & 0x1000)
  1433  016F  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  1434  0170  2975               	goto	l3030
  1435                           
  1436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 848:     pr
      +                          ec = 6;
  1437  0171  3006               	movlw	6
  1438  0172  00BC               	movwf	sprintf@prec^(0+128)
  1439  0173  3000               	movlw	0
  1440  0174  00BD               	movwf	(sprintf@prec^(0+128)+1)
  1441  0175                     l3030:	
  1442                           
  1443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 849:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  1444  0175  082E               	movf	sprintf@ap^(0+128),w
  1445  0176  0084               	movwf	4
  1446  0177  1383               	bcf	3,7	;select IRP bank0
  1447  0178  0800               	movf	0,w
  1448  0179  00BE               	movwf	sprintf@fval^(0+128)
  1449  017A  0A84               	incf	4,f
  1450  017B  0800               	movf	0,w
  1451  017C  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1452  017D  0A84               	incf	4,f
  1453  017E  0800               	movf	0,w
  1454  017F  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1455  0180  0A84               	incf	4,f
  1456  0181  0800               	movf	0,w
  1457  0182  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1458  0183  3004               	movlw	4
  1459  0184  00A5               	movwf	??_sprintf^(0+128)
  1460  0185  0825               	movf	??_sprintf^(0+128),w
  1461  0186  07AE               	addwf	sprintf@ap^(0+128),f
  1462                           
  1463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 850:    if(
      +                          fval < 0.0) {
  1464  0187  0841               	movf	(sprintf@fval+3)^(0+128),w
  1465  0188  00F3               	movwf	___flge@ff1+3
  1466  0189  0840               	movf	(sprintf@fval+2)^(0+128),w
  1467  018A  00F2               	movwf	___flge@ff1+2
  1468  018B  083F               	movf	(sprintf@fval+1)^(0+128),w
  1469  018C  00F1               	movwf	___flge@ff1+1
  1470  018D  083E               	movf	sprintf@fval^(0+128),w
  1471  018E  00F0               	movwf	___flge@ff1
  1472  018F  3000               	movlw	0
  1473  0190  00F7               	movwf	___flge@ff2+3
  1474  0191  3000               	movlw	0
  1475  0192  00F6               	movwf	___flge@ff2+2
  1476  0193  3000               	movlw	0
  1477  0194  00F5               	movwf	___flge@ff2+1
  1478  0195  3000               	movlw	0
  1479  0196  00F4               	movwf	___flge@ff2
  1480  0197  160A  118A  229A  120A  118A  	fcall	___flge
  1481  019C  1803               	btfsc	3,0
  1482  019D  29BB               	goto	l3040
  1483                           
  1484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 851:     fv
      +                          al = -fval;
  1485  019E  1683               	bsf	3,5	;RP0=1, select bank1
  1486  019F  1303               	bcf	3,6	;RP1=0, select bank1
  1487  01A0  0841               	movf	(sprintf@fval+3)^(0+128),w
  1488  01A1  00F3               	movwf	___flneg@f1+3
  1489  01A2  0840               	movf	(sprintf@fval+2)^(0+128),w
  1490  01A3  00F2               	movwf	___flneg@f1+2
  1491  01A4  083F               	movf	(sprintf@fval+1)^(0+128),w
  1492  01A5  00F1               	movwf	___flneg@f1+1
  1493  01A6  083E               	movf	sprintf@fval^(0+128),w
  1494  01A7  00F0               	movwf	___flneg@f1
  1495  01A8  120A  118A  20C0  120A  118A  	fcall	___flneg
  1496  01AD  0873               	movf	?___flneg+3,w
  1497  01AE  1683               	bsf	3,5	;RP0=1, select bank1
  1498  01AF  1303               	bcf	3,6	;RP1=0, select bank1
  1499  01B0  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1500  01B1  0872               	movf	?___flneg+2,w
  1501  01B2  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1502  01B3  0871               	movf	?___flneg+1,w
  1503  01B4  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1504  01B5  0870               	movf	?___flneg,w
  1505  01B6  00BE               	movwf	sprintf@fval^(0+128)
  1506                           
  1507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 852:     fl
      +                          ag |= 0x03;
  1508  01B7  3003               	movlw	3
  1509  01B8  04AF               	iorwf	sprintf@flag^(0+128),f
  1510  01B9  3000               	movlw	0
  1511  01BA  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  1512  01BB                     l3040:	
  1513                           
  1514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 854:    eex
      +                          p = 0;
  1515  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  1516  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  1517  01BD  01B1               	clrf	sprintf@eexp^(0+128)
  1518  01BE  01B2               	clrf	(sprintf@eexp+1)^(0+128)
  1519                           
  1520                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 855:    if(
      +                           fval!=0) {
  1521  01BF  0841               	movf	(sprintf@fval+3)^(0+128),w
  1522  01C0  00F3               	movwf	___fleq@ff1+3
  1523  01C1  0840               	movf	(sprintf@fval+2)^(0+128),w
  1524  01C2  00F2               	movwf	___fleq@ff1+2
  1525  01C3  083F               	movf	(sprintf@fval+1)^(0+128),w
  1526  01C4  00F1               	movwf	___fleq@ff1+1
  1527  01C5  083E               	movf	sprintf@fval^(0+128),w
  1528  01C6  00F0               	movwf	___fleq@ff1
  1529  01C7  3000               	movlw	0
  1530  01C8  00F7               	movwf	___fleq@ff2+3
  1531  01C9  3000               	movlw	0
  1532  01CA  00F6               	movwf	___fleq@ff2+2
  1533  01CB  3000               	movlw	0
  1534  01CC  00F5               	movwf	___fleq@ff2+1
  1535  01CD  3000               	movlw	0
  1536  01CE  00F4               	movwf	___fleq@ff2
  1537  01CF  160A  158A  276E  120A  118A  	fcall	___fleq
  1538  01D4  1803               	btfsc	3,0
  1539  01D5  2ABF               	goto	l3068
  1540                           
  1541                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 856:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1542  01D6  1003               	clrc
  1543  01D7  1683               	bsf	3,5	;RP0=1, select bank1
  1544  01D8  1303               	bcf	3,6	;RP1=0, select bank1
  1545  01D9  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  1546  01DA  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  1547  01DB  3E82               	addlw	130
  1548  01DC  00B1               	movwf	sprintf@eexp^(0+128)
  1549  01DD  30FF               	movlw	255
  1550  01DE  1803               	skipnc
  1551  01DF  3000               	movlw	0
  1552  01E0  00B2               	movwf	(sprintf@eexp^(0+128)+1)
  1553                           
  1554                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 857:     ee
      +                          xp--;
  1555  01E1  30FF               	movlw	255
  1556  01E2  07B1               	addwf	sprintf@eexp^(0+128),f
  1557  01E3  1803               	skipnc
  1558  01E4  0AB2               	incf	(sprintf@eexp+1)^(0+128),f
  1559  01E5  30FF               	movlw	255
  1560  01E6  07B2               	addwf	(sprintf@eexp+1)^(0+128),f
  1561                           
  1562                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 858:     ee
      +                          xp *= 3;
  1563  01E7  3003               	movlw	3
  1564  01E8  00F0               	movwf	___wmul@multiplier
  1565  01E9  3000               	movlw	0
  1566  01EA  00F1               	movwf	___wmul@multiplier+1
  1567  01EB  0832               	movf	(sprintf@eexp+1)^(0+128),w
  1568  01EC  00F3               	movwf	___wmul@multiplicand+1
  1569  01ED  0831               	movf	sprintf@eexp^(0+128),w
  1570  01EE  00F2               	movwf	___wmul@multiplicand
  1571  01EF  160A  158A  2663  120A  118A  	fcall	___wmul
  1572  01F4  0871               	movf	?___wmul+1,w
  1573  01F5  1683               	bsf	3,5	;RP0=1, select bank1
  1574  01F6  1303               	bcf	3,6	;RP1=0, select bank1
  1575  01F7  00B2               	movwf	(sprintf@eexp+1)^(0+128)
  1576  01F8  0870               	movf	?___wmul,w
  1577  01F9  00B1               	movwf	sprintf@eexp^(0+128)
  1578                           
  1579                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 859:     ee
      +                          xp /= 10;
  1580  01FA  300A               	movlw	10
  1581  01FB  00F7               	movwf	___awdiv@divisor
  1582  01FC  3000               	movlw	0
  1583  01FD  00F8               	movwf	___awdiv@divisor+1
  1584  01FE  0832               	movf	(sprintf@eexp+1)^(0+128),w
  1585  01FF  00FA               	movwf	___awdiv@dividend+1
  1586  0200  0831               	movf	sprintf@eexp^(0+128),w
  1587  0201  00F9               	movwf	___awdiv@dividend
  1588  0202  160A  118A  2088  120A  118A  	fcall	___awdiv
  1589  0207  0878               	movf	?___awdiv+1,w
  1590  0208  1683               	bsf	3,5	;RP0=1, select bank1
  1591  0209  1303               	bcf	3,6	;RP1=0, select bank1
  1592  020A  00B2               	movwf	(sprintf@eexp+1)^(0+128)
  1593  020B  0877               	movf	?___awdiv,w
  1594  020C  00B1               	movwf	sprintf@eexp^(0+128)
  1595                           
  1596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 860:     if
      +                          (eexp < 0)
  1597  020D  1FB2               	btfss	(sprintf@eexp+1)^(0+128),7
  1598  020E  2A15               	goto	l3056
  1599                           
  1600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 861:      e
      +                          exp--;
  1601  020F  30FF               	movlw	255
  1602  0210  07B1               	addwf	sprintf@eexp^(0+128),f
  1603  0211  1803               	skipnc
  1604  0212  0AB2               	incf	(sprintf@eexp+1)^(0+128),f
  1605  0213  30FF               	movlw	255
  1606  0214  07B2               	addwf	(sprintf@eexp+1)^(0+128),f
  1607  0215                     l3056:	
  1608                           
  1609                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 865:     tm
      +                          pval.integ = scale(-eexp);
  1610  0215  0331               	decf	sprintf@eexp^(0+128),w
  1611  0216  3AFF               	xorlw	255
  1612  0217  120A  158A  24B7  120A  118A  	fcall	_scale
  1613  021C  1283               	bcf	3,5	;RP0=0, select bank0
  1614  021D  1303               	bcf	3,6	;RP1=0, select bank0
  1615  021E  0841               	movf	?_scale+3,w
  1616  021F  1683               	bsf	3,5	;RP0=1, select bank1
  1617  0220  1303               	bcf	3,6	;RP1=0, select bank1
  1618  0221  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  1619  0222  1283               	bcf	3,5	;RP0=0, select bank0
  1620  0223  1303               	bcf	3,6	;RP1=0, select bank0
  1621  0224  0840               	movf	?_scale+2,w
  1622  0225  1683               	bsf	3,5	;RP0=1, select bank1
  1623  0226  1303               	bcf	3,6	;RP1=0, select bank1
  1624  0227  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  1625  0228  1283               	bcf	3,5	;RP0=0, select bank0
  1626  0229  1303               	bcf	3,6	;RP1=0, select bank0
  1627  022A  083F               	movf	?_scale+1,w
  1628  022B  1683               	bsf	3,5	;RP0=1, select bank1
  1629  022C  1303               	bcf	3,6	;RP1=0, select bank1
  1630  022D  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  1631  022E  1283               	bcf	3,5	;RP0=0, select bank0
  1632  022F  1303               	bcf	3,6	;RP1=0, select bank0
  1633  0230  083E               	movf	?_scale,w
  1634  0231  1683               	bsf	3,5	;RP0=1, select bank1
  1635  0232  1303               	bcf	3,6	;RP1=0, select bank1
  1636  0233  00B3               	movwf	sprintf@tmpval^(0+128)
  1637                           
  1638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 866:     tm
      +                          pval.integ *= fval;
  1639  0234  0841               	movf	(sprintf@fval+3)^(0+128),w
  1640  0235  1283               	bcf	3,5	;RP0=0, select bank0
  1641  0236  1303               	bcf	3,6	;RP1=0, select bank0
  1642  0237  00A7               	movwf	___flmul@b+3
  1643  0238  1683               	bsf	3,5	;RP0=1, select bank1
  1644  0239  1303               	bcf	3,6	;RP1=0, select bank1
  1645  023A  0840               	movf	(sprintf@fval+2)^(0+128),w
  1646  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1647  023C  1303               	bcf	3,6	;RP1=0, select bank0
  1648  023D  00A6               	movwf	___flmul@b+2
  1649  023E  1683               	bsf	3,5	;RP0=1, select bank1
  1650  023F  1303               	bcf	3,6	;RP1=0, select bank1
  1651  0240  083F               	movf	(sprintf@fval+1)^(0+128),w
  1652  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1653  0242  1303               	bcf	3,6	;RP1=0, select bank0
  1654  0243  00A5               	movwf	___flmul@b+1
  1655  0244  1683               	bsf	3,5	;RP0=1, select bank1
  1656  0245  1303               	bcf	3,6	;RP1=0, select bank1
  1657  0246  083E               	movf	sprintf@fval^(0+128),w
  1658  0247  1283               	bcf	3,5	;RP0=0, select bank0
  1659  0248  1303               	bcf	3,6	;RP1=0, select bank0
  1660  0249  00A4               	movwf	___flmul@b
  1661  024A  1683               	bsf	3,5	;RP0=1, select bank1
  1662  024B  1303               	bcf	3,6	;RP1=0, select bank1
  1663  024C  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  1664  024D  1283               	bcf	3,5	;RP0=0, select bank0
  1665  024E  1303               	bcf	3,6	;RP1=0, select bank0
  1666  024F  00AB               	movwf	___flmul@a+3
  1667  0250  1683               	bsf	3,5	;RP0=1, select bank1
  1668  0251  1303               	bcf	3,6	;RP1=0, select bank1
  1669  0252  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  1670  0253  1283               	bcf	3,5	;RP0=0, select bank0
  1671  0254  1303               	bcf	3,6	;RP1=0, select bank0
  1672  0255  00AA               	movwf	___flmul@a+2
  1673  0256  1683               	bsf	3,5	;RP0=1, select bank1
  1674  0257  1303               	bcf	3,6	;RP1=0, select bank1
  1675  0258  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  1676  0259  1283               	bcf	3,5	;RP0=0, select bank0
  1677  025A  1303               	bcf	3,6	;RP1=0, select bank0
  1678  025B  00A9               	movwf	___flmul@a+1
  1679  025C  1683               	bsf	3,5	;RP0=1, select bank1
  1680  025D  1303               	bcf	3,6	;RP1=0, select bank1
  1681  025E  0833               	movf	sprintf@tmpval^(0+128),w
  1682  025F  1283               	bcf	3,5	;RP0=0, select bank0
  1683  0260  1303               	bcf	3,6	;RP1=0, select bank0
  1684  0261  00A8               	movwf	___flmul@a
  1685  0262  120A  158A  21A2  120A  118A  	fcall	___flmul
  1686  0267  1283               	bcf	3,5	;RP0=0, select bank0
  1687  0268  1303               	bcf	3,6	;RP1=0, select bank0
  1688  0269  0827               	movf	?___flmul+3,w
  1689  026A  1683               	bsf	3,5	;RP0=1, select bank1
  1690  026B  1303               	bcf	3,6	;RP1=0, select bank1
  1691  026C  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  1692  026D  1283               	bcf	3,5	;RP0=0, select bank0
  1693  026E  1303               	bcf	3,6	;RP1=0, select bank0
  1694  026F  0826               	movf	?___flmul+2,w
  1695  0270  1683               	bsf	3,5	;RP0=1, select bank1
  1696  0271  1303               	bcf	3,6	;RP1=0, select bank1
  1697  0272  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  1698  0273  1283               	bcf	3,5	;RP0=0, select bank0
  1699  0274  1303               	bcf	3,6	;RP1=0, select bank0
  1700  0275  0825               	movf	?___flmul+1,w
  1701  0276  1683               	bsf	3,5	;RP0=1, select bank1
  1702  0277  1303               	bcf	3,6	;RP1=0, select bank1
  1703  0278  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  1704  0279  1283               	bcf	3,5	;RP0=0, select bank0
  1705  027A  1303               	bcf	3,6	;RP1=0, select bank0
  1706  027B  0824               	movf	?___flmul,w
  1707  027C  1683               	bsf	3,5	;RP0=1, select bank1
  1708  027D  1303               	bcf	3,6	;RP1=0, select bank1
  1709  027E  00B3               	movwf	sprintf@tmpval^(0+128)
  1710                           
  1711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (tmpval.integ < 1.0)
  1712  027F  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  1713  0280  00F3               	movwf	___flge@ff1+3
  1714  0281  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  1715  0282  00F2               	movwf	___flge@ff1+2
  1716  0283  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  1717  0284  00F1               	movwf	___flge@ff1+1
  1718  0285  0833               	movf	sprintf@tmpval^(0+128),w
  1719  0286  00F0               	movwf	___flge@ff1
  1720  0287  303F               	movlw	63
  1721  0288  00F7               	movwf	___flge@ff2+3
  1722  0289  3080               	movlw	128
  1723  028A  00F6               	movwf	___flge@ff2+2
  1724  028B  3000               	movlw	0
  1725  028C  00F5               	movwf	___flge@ff2+1
  1726  028D  3000               	movlw	0
  1727  028E  00F4               	movwf	___flge@ff2
  1728  028F  160A  118A  229A  120A  118A  	fcall	___flge
  1729  0294  1803               	btfsc	3,0
  1730  0295  2A9E               	goto	l3064
  1731                           
  1732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  1733  0296  30FF               	movlw	255
  1734  0297  1683               	bsf	3,5	;RP0=1, select bank1
  1735  0298  1303               	bcf	3,6	;RP1=0, select bank1
  1736  0299  07B1               	addwf	sprintf@eexp^(0+128),f
  1737  029A  1803               	skipnc
  1738  029B  0AB2               	incf	(sprintf@eexp+1)^(0+128),f
  1739  029C  30FF               	movlw	255
  1740  029D  2ABE               	goto	L1
  1741  029E                     l3064:	
  1742  029E  1683               	bsf	3,5	;RP0=1, select bank1
  1743  029F  1303               	bcf	3,6	;RP1=0, select bank1
  1744  02A0  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  1745  02A1  00F3               	movwf	___flge@ff1+3
  1746  02A2  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  1747  02A3  00F2               	movwf	___flge@ff1+2
  1748  02A4  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  1749  02A5  00F1               	movwf	___flge@ff1+1
  1750  02A6  0833               	movf	sprintf@tmpval^(0+128),w
  1751  02A7  00F0               	movwf	___flge@ff1
  1752  02A8  3041               	movlw	65
  1753  02A9  00F7               	movwf	___flge@ff2+3
  1754  02AA  3020               	movlw	32
  1755  02AB  00F6               	movwf	___flge@ff2+2
  1756  02AC  3000               	movlw	0
  1757  02AD  00F5               	movwf	___flge@ff2+1
  1758  02AE  3000               	movlw	0
  1759  02AF  00F4               	movwf	___flge@ff2
  1760  02B0  160A  118A  229A  120A  118A  	fcall	___flge
  1761  02B5  1C03               	btfss	3,0
  1762  02B6  2ABF               	goto	l3068
  1763                           
  1764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 870:      e
      +                          exp++;
  1765  02B7  3001               	movlw	1
  1766  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  1767  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  1768  02BA  07B1               	addwf	sprintf@eexp^(0+128),f
  1769  02BB  1803               	skipnc
  1770  02BC  0AB2               	incf	(sprintf@eexp+1)^(0+128),f
  1771  02BD  3000               	movlw	0
  1772  02BE                     L1:	
  1773  02BE  07B2               	addwf	(sprintf@eexp+1)^(0+128),f
  1774  02BF                     l3068:	
  1775                           
  1776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1131:      
      +                          if(prec <= 12)
  1777  02BF  1683               	bsf	3,5	;RP0=1, select bank1
  1778  02C0  1303               	bcf	3,6	;RP1=0, select bank1
  1779  02C1  083D               	movf	(sprintf@prec+1)^(0+128),w
  1780  02C2  3A80               	xorlw	128
  1781  02C3  00FF               	movwf	127
  1782  02C4  3080               	movlw	128
  1783  02C5  027F               	subwf	127,w
  1784  02C6  1D03               	skipz
  1785  02C7  2ACA               	goto	u5225
  1786  02C8  300D               	movlw	13
  1787  02C9  023C               	subwf	sprintf@prec^(0+128),w
  1788  02CA                     u5225:	
  1789  02CA  1803               	skipnc
  1790  02CB  2B13               	goto	l3072
  1791                           
  1792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1132:      
      +                           fval += fround((unsigned int)prec);
  1793  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  1794  02CD  1303               	bcf	3,6	;RP1=0, select bank1
  1795  02CE  083C               	movf	sprintf@prec^(0+128),w
  1796  02CF  160A  118A  23D0  120A  118A  	fcall	_fround
  1797  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  1798  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  1799  02D6  0841               	movf	?_fround+3,w
  1800  02D7  00D5               	movwf	___fladd@b+3
  1801  02D8  0840               	movf	?_fround+2,w
  1802  02D9  00D4               	movwf	___fladd@b+2
  1803  02DA  083F               	movf	?_fround+1,w
  1804  02DB  00D3               	movwf	___fladd@b+1
  1805  02DC  083E               	movf	?_fround,w
  1806  02DD  00D2               	movwf	___fladd@b
  1807  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  1808  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  1809  02E0  0841               	movf	(sprintf@fval+3)^(0+128),w
  1810  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  1811  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  1812  02E3  00D9               	movwf	___fladd@a+3
  1813  02E4  1683               	bsf	3,5	;RP0=1, select bank1
  1814  02E5  1303               	bcf	3,6	;RP1=0, select bank1
  1815  02E6  0840               	movf	(sprintf@fval+2)^(0+128),w
  1816  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  1817  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  1818  02E9  00D8               	movwf	___fladd@a+2
  1819  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  1820  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  1821  02EC  083F               	movf	(sprintf@fval+1)^(0+128),w
  1822  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  1823  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  1824  02EF  00D7               	movwf	___fladd@a+1
  1825  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  1826  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  1827  02F2  083E               	movf	sprintf@fval^(0+128),w
  1828  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  1829  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  1830  02F5  00D6               	movwf	___fladd@a
  1831  02F6  160A  118A  25D1  120A  118A  	fcall	___fladd
  1832  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  1833  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  1834  02FD  0855               	movf	?___fladd+3,w
  1835  02FE  1683               	bsf	3,5	;RP0=1, select bank1
  1836  02FF  1303               	bcf	3,6	;RP1=0, select bank1
  1837  0300  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1838  0301  1283               	bcf	3,5	;RP0=0, select bank0
  1839  0302  1303               	bcf	3,6	;RP1=0, select bank0
  1840  0303  0854               	movf	?___fladd+2,w
  1841  0304  1683               	bsf	3,5	;RP0=1, select bank1
  1842  0305  1303               	bcf	3,6	;RP1=0, select bank1
  1843  0306  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1844  0307  1283               	bcf	3,5	;RP0=0, select bank0
  1845  0308  1303               	bcf	3,6	;RP1=0, select bank0
  1846  0309  0853               	movf	?___fladd+1,w
  1847  030A  1683               	bsf	3,5	;RP0=1, select bank1
  1848  030B  1303               	bcf	3,6	;RP1=0, select bank1
  1849  030C  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1850  030D  1283               	bcf	3,5	;RP0=0, select bank0
  1851  030E  1303               	bcf	3,6	;RP1=0, select bank0
  1852  030F  0852               	movf	?___fladd,w
  1853  0310  1683               	bsf	3,5	;RP0=1, select bank1
  1854  0311  1303               	bcf	3,6	;RP1=0, select bank1
  1855  0312  00BE               	movwf	sprintf@fval^(0+128)
  1856  0313                     l3072:	
  1857                           
  1858                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1135:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  1859  0313  1683               	bsf	3,5	;RP0=1, select bank1
  1860  0314  1303               	bcf	3,6	;RP1=0, select bank1
  1861  0315  0832               	movf	(sprintf@eexp+1)^(0+128),w
  1862  0316  3A80               	xorlw	128
  1863  0317  00FF               	movwf	127
  1864  0318  3080               	movlw	128
  1865  0319  027F               	subwf	127,w
  1866  031A  1D03               	skipz
  1867  031B  2B1E               	goto	u5235
  1868  031C  300A               	movlw	10
  1869  031D  0231               	subwf	sprintf@eexp^(0+128),w
  1870  031E                     u5235:	
  1871  031E  1803               	skipnc
  1872  031F  2B6B               	goto	l3080
  1873  0320  1683               	bsf	3,5	;RP0=1, select bank1
  1874  0321  1303               	bcf	3,6	;RP1=0, select bank1
  1875  0322  0841               	movf	(sprintf@fval+3)^(0+128),w
  1876  0323  00F3               	movwf	___fleq@ff1+3
  1877  0324  0840               	movf	(sprintf@fval+2)^(0+128),w
  1878  0325  00F2               	movwf	___fleq@ff1+2
  1879  0326  083F               	movf	(sprintf@fval+1)^(0+128),w
  1880  0327  00F1               	movwf	___fleq@ff1+1
  1881  0328  083E               	movf	sprintf@fval^(0+128),w
  1882  0329  00F0               	movwf	___fleq@ff1
  1883  032A  3000               	movlw	0
  1884  032B  00F7               	movwf	___fleq@ff2+3
  1885  032C  3000               	movlw	0
  1886  032D  00F6               	movwf	___fleq@ff2+2
  1887  032E  3000               	movlw	0
  1888  032F  00F5               	movwf	___fleq@ff2+1
  1889  0330  3000               	movlw	0
  1890  0331  00F4               	movwf	___fleq@ff2
  1891  0332  160A  158A  276E  120A  118A  	fcall	___fleq
  1892  0337  1803               	btfsc	3,0
  1893  0338  2BD4               	goto	l3094
  1894  0339  1683               	bsf	3,5	;RP0=1, select bank1
  1895  033A  1303               	bcf	3,6	;RP1=0, select bank1
  1896  033B  0841               	movf	(sprintf@fval+3)^(0+128),w
  1897  033C  1283               	bcf	3,5	;RP0=0, select bank0
  1898  033D  1303               	bcf	3,6	;RP1=0, select bank0
  1899  033E  00D4               	movwf	___fltol@f1+3
  1900  033F  1683               	bsf	3,5	;RP0=1, select bank1
  1901  0340  1303               	bcf	3,6	;RP1=0, select bank1
  1902  0341  0840               	movf	(sprintf@fval+2)^(0+128),w
  1903  0342  1283               	bcf	3,5	;RP0=0, select bank0
  1904  0343  1303               	bcf	3,6	;RP1=0, select bank0
  1905  0344  00D3               	movwf	___fltol@f1+2
  1906  0345  1683               	bsf	3,5	;RP0=1, select bank1
  1907  0346  1303               	bcf	3,6	;RP1=0, select bank1
  1908  0347  083F               	movf	(sprintf@fval+1)^(0+128),w
  1909  0348  1283               	bcf	3,5	;RP0=0, select bank0
  1910  0349  1303               	bcf	3,6	;RP1=0, select bank0
  1911  034A  00D2               	movwf	___fltol@f1+1
  1912  034B  1683               	bsf	3,5	;RP0=1, select bank1
  1913  034C  1303               	bcf	3,6	;RP1=0, select bank1
  1914  034D  083E               	movf	sprintf@fval^(0+128),w
  1915  034E  1283               	bcf	3,5	;RP0=0, select bank0
  1916  034F  1303               	bcf	3,6	;RP1=0, select bank0
  1917  0350  00D1               	movwf	___fltol@f1
  1918  0351  160A  118A  21A2  120A  118A  	fcall	___fltol
  1919  0356  1283               	bcf	3,5	;RP0=0, select bank0
  1920  0357  1303               	bcf	3,6	;RP1=0, select bank0
  1921  0358  0854               	movf	?___fltol+3,w
  1922  0359  0453               	iorwf	?___fltol+2,w
  1923  035A  0452               	iorwf	?___fltol+1,w
  1924  035B  0451               	iorwf	?___fltol,w
  1925  035C  1D03               	skipz
  1926  035D  2BD4               	goto	l3094
  1927  035E  1683               	bsf	3,5	;RP0=1, select bank1
  1928  035F  1303               	bcf	3,6	;RP1=0, select bank1
  1929  0360  0832               	movf	(sprintf@eexp+1)^(0+128),w
  1930  0361  3A80               	xorlw	128
  1931  0362  00FF               	movwf	127
  1932  0363  3080               	movlw	128
  1933  0364  027F               	subwf	127,w
  1934  0365  1D03               	skipz
  1935  0366  2B69               	goto	u5265
  1936  0367  3002               	movlw	2
  1937  0368  0231               	subwf	sprintf@eexp^(0+128),w
  1938  0369                     u5265:	
  1939  0369  1C03               	skipc
  1940  036A  2BD4               	goto	l3094
  1941  036B                     l3080:	
  1942                           
  1943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1139:      
      +                          if(tmpval.integ < 4.294967296){
  1944  036B  1683               	bsf	3,5	;RP0=1, select bank1
  1945  036C  1303               	bcf	3,6	;RP1=0, select bank1
  1946  036D  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  1947  036E  00F3               	movwf	___flge@ff1+3
  1948  036F  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  1949  0370  00F2               	movwf	___flge@ff1+2
  1950  0371  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  1951  0372  00F1               	movwf	___flge@ff1+1
  1952  0373  0833               	movf	sprintf@tmpval^(0+128),w
  1953  0374  00F0               	movwf	___flge@ff1
  1954  0375  3040               	movlw	64
  1955  0376  00F7               	movwf	___flge@ff2+3
  1956  0377  3089               	movlw	137
  1957  0378  00F6               	movwf	___flge@ff2+2
  1958  0379  3070               	movlw	112
  1959  037A  00F5               	movwf	___flge@ff2+1
  1960  037B  305F               	movlw	95
  1961  037C  00F4               	movwf	___flge@ff2
  1962  037D  160A  118A  229A  120A  118A  	fcall	___flge
  1963  0382  1803               	btfsc	3,0
  1964  0383  2B86               	goto	l3084
  1965                           
  1966                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1140:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1967  0384  30F7               	movlw	247
  1968  0385  2B87               	goto	L2
  1969  0386                     l3084:	
  1970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1141:      
      +                          }else{
  1971                           
  1972                           
  1973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1142:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1974  0386  30F8               	movlw	248
  1975  0387                     L2:	
  1976  0387  1683               	bsf	3,5	;RP0=1, select bank1
  1977  0388  1303               	bcf	3,6	;RP1=0, select bank1
  1978  0389  07B1               	addwf	sprintf@eexp^(0+128),f
  1979  038A  1803               	skipnc
  1980  038B  0AB2               	incf	(sprintf@eexp+1)^(0+128),f
  1981  038C  30FF               	movlw	255
  1982  038D  07B2               	addwf	(sprintf@eexp+1)^(0+128),f
  1983                           
  1984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1145:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  1985  038E  0831               	movf	sprintf@eexp^(0+128),w
  1986  038F  120A  158A  24B7  120A  118A  	fcall	_scale
  1987  0394  1283               	bcf	3,5	;RP0=0, select bank0
  1988  0395  1303               	bcf	3,6	;RP1=0, select bank0
  1989  0396  0841               	movf	?_scale+3,w
  1990  0397  1683               	bsf	3,5	;RP0=1, select bank1
  1991  0398  1303               	bcf	3,6	;RP1=0, select bank1
  1992  0399  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  1993  039A  1283               	bcf	3,5	;RP0=0, select bank0
  1994  039B  1303               	bcf	3,6	;RP1=0, select bank0
  1995  039C  0840               	movf	?_scale+2,w
  1996  039D  1683               	bsf	3,5	;RP0=1, select bank1
  1997  039E  1303               	bcf	3,6	;RP1=0, select bank1
  1998  039F  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  1999  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  2000  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  2001  03A2  083F               	movf	?_scale+1,w
  2002  03A3  1683               	bsf	3,5	;RP0=1, select bank1
  2003  03A4  1303               	bcf	3,6	;RP1=0, select bank1
  2004  03A5  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  2005  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  2006  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  2007  03A8  083E               	movf	?_scale,w
  2008  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  2009  03AA  1303               	bcf	3,6	;RP1=0, select bank1
  2010  03AB  00B3               	movwf	sprintf@tmpval^(0+128)
  2011  03AC  0841               	movf	(sprintf@fval+3)^(0+128),w
  2012  03AD  00F3               	movwf	__div_to_l_@f1+3
  2013  03AE  0840               	movf	(sprintf@fval+2)^(0+128),w
  2014  03AF  00F2               	movwf	__div_to_l_@f1+2
  2015  03B0  083F               	movf	(sprintf@fval+1)^(0+128),w
  2016  03B1  00F1               	movwf	__div_to_l_@f1+1
  2017  03B2  083E               	movf	sprintf@fval^(0+128),w
  2018  03B3  00F0               	movwf	__div_to_l_@f1
  2019  03B4  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  2020  03B5  00F7               	movwf	__div_to_l_@f2+3
  2021  03B6  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  2022  03B7  00F6               	movwf	__div_to_l_@f2+2
  2023  03B8  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  2024  03B9  00F5               	movwf	__div_to_l_@f2+1
  2025  03BA  0833               	movf	sprintf@tmpval^(0+128),w
  2026  03BB  00F4               	movwf	__div_to_l_@f2
  2027  03BC  120A  158A  20F8  120A  118A  	fcall	__div_to_l_
  2028  03C1  0873               	movf	?__div_to_l_+3,w
  2029  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  2030  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  2031  03C4  00BA               	movwf	(sprintf@val+3)^(0+128)
  2032  03C5  0872               	movf	?__div_to_l_+2,w
  2033  03C6  00B9               	movwf	(sprintf@val+2)^(0+128)
  2034  03C7  0871               	movf	?__div_to_l_+1,w
  2035  03C8  00B8               	movwf	(sprintf@val+1)^(0+128)
  2036  03C9  0870               	movf	?__div_to_l_,w
  2037  03CA  00B7               	movwf	sprintf@val^(0+128)
  2038                           
  2039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1148:      
      +                          fval = 0.0;
  2040  03CB  3000               	movlw	0
  2041  03CC  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2042  03CD  3000               	movlw	0
  2043  03CE  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2044  03CF  3000               	movlw	0
  2045  03D0  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2046  03D1  3000               	movlw	0
  2047  03D2  00BE               	movwf	sprintf@fval^(0+128)
  2048                           
  2049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1149:     }
      +                           else {
  2050  03D3  2C58               	goto	l3100
  2051  03D4                     l3094:	
  2052                           
  2053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1150:      
      +                          val = (unsigned long)fval;
  2054  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  2055  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  2056  03D6  0841               	movf	(sprintf@fval+3)^(0+128),w
  2057  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  2058  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  2059  03D9  00D4               	movwf	___fltol@f1+3
  2060  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  2061  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  2062  03DC  0840               	movf	(sprintf@fval+2)^(0+128),w
  2063  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  2064  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  2065  03DF  00D3               	movwf	___fltol@f1+2
  2066  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  2067  03E1  1303               	bcf	3,6	;RP1=0, select bank1
  2068  03E2  083F               	movf	(sprintf@fval+1)^(0+128),w
  2069  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  2070  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  2071  03E5  00D2               	movwf	___fltol@f1+1
  2072  03E6  1683               	bsf	3,5	;RP0=1, select bank1
  2073  03E7  1303               	bcf	3,6	;RP1=0, select bank1
  2074  03E8  083E               	movf	sprintf@fval^(0+128),w
  2075  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  2076  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  2077  03EB  00D1               	movwf	___fltol@f1
  2078  03EC  160A  118A  21A2  120A  118A  	fcall	___fltol
  2079  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  2080  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  2081  03F3  0854               	movf	?___fltol+3,w
  2082  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  2083  03F5  1303               	bcf	3,6	;RP1=0, select bank1
  2084  03F6  00BA               	movwf	(sprintf@val+3)^(0+128)
  2085  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  2086  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  2087  03F9  0853               	movf	?___fltol+2,w
  2088  03FA  1683               	bsf	3,5	;RP0=1, select bank1
  2089  03FB  1303               	bcf	3,6	;RP1=0, select bank1
  2090  03FC  00B9               	movwf	(sprintf@val+2)^(0+128)
  2091  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  2092  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  2093  03FF  0852               	movf	?___fltol+1,w
  2094  0400  1683               	bsf	3,5	;RP0=1, select bank1
  2095  0401  1303               	bcf	3,6	;RP1=0, select bank1
  2096  0402  00B8               	movwf	(sprintf@val+1)^(0+128)
  2097  0403  1283               	bcf	3,5	;RP0=0, select bank0
  2098  0404  1303               	bcf	3,6	;RP1=0, select bank0
  2099  0405  0851               	movf	?___fltol,w
  2100  0406  1683               	bsf	3,5	;RP0=1, select bank1
  2101  0407  1303               	bcf	3,6	;RP1=0, select bank1
  2102  0408  00B7               	movwf	sprintf@val^(0+128)
  2103                           
  2104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1151:      
      +                          fval -= (double)val;
  2105  0409  083A               	movf	(sprintf@val+3)^(0+128),w
  2106  040A  00F3               	movwf	___xxtofl@val+3
  2107  040B  0839               	movf	(sprintf@val+2)^(0+128),w
  2108  040C  00F2               	movwf	___xxtofl@val+2
  2109  040D  0838               	movf	(sprintf@val+1)^(0+128),w
  2110  040E  00F1               	movwf	___xxtofl@val+1
  2111  040F  0837               	movf	sprintf@val^(0+128),w
  2112  0410  00F0               	movwf	___xxtofl@val
  2113  0411  3000               	movlw	0
  2114  0412  160A  118A  232D  120A  118A  	fcall	___xxtofl
  2115  0417  0873               	movf	?___xxtofl+3,w
  2116  0418  1283               	bcf	3,5	;RP0=0, select bank0
  2117  0419  1303               	bcf	3,6	;RP1=0, select bank0
  2118  041A  00E9               	movwf	___flsub@a+3
  2119  041B  0872               	movf	?___xxtofl+2,w
  2120  041C  00E8               	movwf	___flsub@a+2
  2121  041D  0871               	movf	?___xxtofl+1,w
  2122  041E  00E7               	movwf	___flsub@a+1
  2123  041F  0870               	movf	?___xxtofl,w
  2124  0420  00E6               	movwf	___flsub@a
  2125  0421  1683               	bsf	3,5	;RP0=1, select bank1
  2126  0422  1303               	bcf	3,6	;RP1=0, select bank1
  2127  0423  0841               	movf	(sprintf@fval+3)^(0+128),w
  2128  0424  1283               	bcf	3,5	;RP0=0, select bank0
  2129  0425  1303               	bcf	3,6	;RP1=0, select bank0
  2130  0426  00ED               	movwf	___flsub@b+3
  2131  0427  1683               	bsf	3,5	;RP0=1, select bank1
  2132  0428  1303               	bcf	3,6	;RP1=0, select bank1
  2133  0429  0840               	movf	(sprintf@fval+2)^(0+128),w
  2134  042A  1283               	bcf	3,5	;RP0=0, select bank0
  2135  042B  1303               	bcf	3,6	;RP1=0, select bank0
  2136  042C  00EC               	movwf	___flsub@b+2
  2137  042D  1683               	bsf	3,5	;RP0=1, select bank1
  2138  042E  1303               	bcf	3,6	;RP1=0, select bank1
  2139  042F  083F               	movf	(sprintf@fval+1)^(0+128),w
  2140  0430  1283               	bcf	3,5	;RP0=0, select bank0
  2141  0431  1303               	bcf	3,6	;RP1=0, select bank0
  2142  0432  00EB               	movwf	___flsub@b+1
  2143  0433  1683               	bsf	3,5	;RP0=1, select bank1
  2144  0434  1303               	bcf	3,6	;RP1=0, select bank1
  2145  0435  083E               	movf	sprintf@fval^(0+128),w
  2146  0436  1283               	bcf	3,5	;RP0=0, select bank0
  2147  0437  1303               	bcf	3,6	;RP1=0, select bank0
  2148  0438  00EA               	movwf	___flsub@b
  2149  0439  160A  158A  2684  120A  118A  	fcall	___flsub
  2150  043E  1283               	bcf	3,5	;RP0=0, select bank0
  2151  043F  1303               	bcf	3,6	;RP1=0, select bank0
  2152  0440  0869               	movf	?___flsub+3,w
  2153  0441  1683               	bsf	3,5	;RP0=1, select bank1
  2154  0442  1303               	bcf	3,6	;RP1=0, select bank1
  2155  0443  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2156  0444  1283               	bcf	3,5	;RP0=0, select bank0
  2157  0445  1303               	bcf	3,6	;RP1=0, select bank0
  2158  0446  0868               	movf	?___flsub+2,w
  2159  0447  1683               	bsf	3,5	;RP0=1, select bank1
  2160  0448  1303               	bcf	3,6	;RP1=0, select bank1
  2161  0449  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2162  044A  1283               	bcf	3,5	;RP0=0, select bank0
  2163  044B  1303               	bcf	3,6	;RP1=0, select bank0
  2164  044C  0867               	movf	?___flsub+1,w
  2165  044D  1683               	bsf	3,5	;RP0=1, select bank1
  2166  044E  1303               	bcf	3,6	;RP1=0, select bank1
  2167  044F  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2168  0450  1283               	bcf	3,5	;RP0=0, select bank0
  2169  0451  1303               	bcf	3,6	;RP1=0, select bank0
  2170  0452  0866               	movf	?___flsub,w
  2171  0453  1683               	bsf	3,5	;RP0=1, select bank1
  2172  0454  1303               	bcf	3,6	;RP1=0, select bank1
  2173  0455  00BE               	movwf	sprintf@fval^(0+128)
  2174                           
  2175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1152:      
      +                          eexp = 0;
  2176  0456  01B1               	clrf	sprintf@eexp^(0+128)
  2177  0457  01B2               	clrf	(sprintf@eexp+1)^(0+128)
  2178  0458                     l3100:	
  2179                           
  2180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1155:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2181  0458  01C2               	clrf	sprintf@c^(0+128)
  2182  0459  0AC2               	incf	sprintf@c^(0+128),f
  2183  045A                     l3106:	
  2184                           
  2185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1156:      
      +                          if(val < dpowers[c])
  2186  045A  0842               	movf	sprintf@c^(0+128),w
  2187  045B  00A5               	movwf	??_sprintf^(0+128)
  2188  045C  3001               	movlw	1
  2189  045D                     u5285:	
  2190  045D  1003               	clrc
  2191  045E  0DA5               	rlf	??_sprintf^(0+128),f
  2192  045F  3EFF               	addlw	-1
  2193  0460  1D03               	skipz
  2194  0461  2C5D               	goto	u5285
  2195  0462  1003               	clrc
  2196  0463  0D25               	rlf	??_sprintf^(0+128),w
  2197  0464  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2198  0465  0084               	movwf	4
  2199  0466  120A  118A  200D  120A  118A  	fcall	stringdir
  2200  046B  00A6               	movwf	(??_sprintf+1)^(0+128)
  2201  046C  120A  118A  200D  120A  118A  	fcall	stringdir
  2202  0471  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2203  0472  120A  118A  200D  120A  118A  	fcall	stringdir
  2204  0477  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2205  0478  120A  118A  200D  120A  118A  	fcall	stringdir
  2206  047D  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2207  047E  0829               	movf	(??_sprintf+4)^(0+128),w
  2208  047F  023A               	subwf	(sprintf@val+3)^(0+128),w
  2209  0480  1D03               	skipz
  2210  0481  2C8C               	goto	u5295
  2211  0482  0828               	movf	(??_sprintf+3)^(0+128),w
  2212  0483  0239               	subwf	(sprintf@val+2)^(0+128),w
  2213  0484  1D03               	skipz
  2214  0485  2C8C               	goto	u5295
  2215  0486  0827               	movf	(??_sprintf+2)^(0+128),w
  2216  0487  0238               	subwf	(sprintf@val+1)^(0+128),w
  2217  0488  1D03               	skipz
  2218  0489  2C8C               	goto	u5295
  2219  048A  0826               	movf	(??_sprintf+1)^(0+128),w
  2220  048B  0237               	subwf	sprintf@val^(0+128),w
  2221  048C                     u5295:	
  2222  048C  1C03               	btfss	3,0
  2223  048D  2C96               	goto	l3112
  2224  048E  3001               	movlw	1
  2225  048F  00A5               	movwf	??_sprintf^(0+128)
  2226  0490  0825               	movf	??_sprintf^(0+128),w
  2227  0491  07C2               	addwf	sprintf@c^(0+128),f
  2228  0492  300A               	movlw	10
  2229  0493  0642               	xorwf	sprintf@c^(0+128),w
  2230  0494  1D03               	btfss	3,2
  2231  0495  2C5A               	goto	l3106
  2232  0496                     l3112:	
  2233                           
  2234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1194:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1207:     i
      +                          f(flag & 0x03)
  2235  0496  3003               	movlw	3
  2236  0497  052F               	andwf	sprintf@flag^(0+128),w
  2237  0498  00A5               	movwf	??_sprintf^(0+128)
  2238  0499  3000               	movlw	0
  2239  049A  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2240  049B  00A6               	movwf	(??_sprintf+1)^(0+128)
  2241  049C  0825               	movf	??_sprintf^(0+128),w
  2242  049D  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2243  049E  1903               	btfsc	3,2
  2244  049F  2CAB               	goto	l219
  2245                           
  2246                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1209:      
      +                          ((*sp++ = ('-')));
  2247  04A0  302D               	movlw	45
  2248  04A1                     L3:	
  2249  04A1  00A5               	movwf	??_sprintf^(0+128)
  2250  04A2  083B               	movf	sprintf@sp^(0+128),w
  2251  04A3  0084               	movwf	4
  2252  04A4  0825               	movf	??_sprintf^(0+128),w
  2253  04A5  1383               	bcf	3,7	;select IRP bank0
  2254  04A6  0080               	movwf	0
  2255  04A7  3001               	movlw	1
  2256  04A8  00A5               	movwf	??_sprintf^(0+128)
  2257  04A9  0825               	movf	??_sprintf^(0+128),w
  2258  04AA  07BB               	addwf	sprintf@sp^(0+128),f
  2259  04AB                     l219:	
  2260                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1223:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1225:    }
  2261                           
  2262                           
  2263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1215:    wh
      +                          ile(c--) {
  2264  04AB  3001               	movlw	1
  2265  04AC  02C2               	subwf	sprintf@c^(0+128),f
  2266  04AD  0A42               	incf	sprintf@c^(0+128),w
  2267  04AE  1903               	btfsc	3,2
  2268  04AF  2D40               	goto	l3130
  2269                           
  2270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1219:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1220:      
      +                          tmpval.vd = val/dpowers[c];
  2271  04B0  0842               	movf	sprintf@c^(0+128),w
  2272  04B1  00A5               	movwf	??_sprintf^(0+128)
  2273  04B2  3001               	movlw	1
  2274  04B3                     u5325:	
  2275  04B3  1003               	clrc
  2276  04B4  0DA5               	rlf	??_sprintf^(0+128),f
  2277  04B5  3EFF               	addlw	-1
  2278  04B6  1D03               	skipz
  2279  04B7  2CB3               	goto	u5325
  2280  04B8  1003               	clrc
  2281  04B9  0D25               	rlf	??_sprintf^(0+128),w
  2282  04BA  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2283  04BB  0084               	movwf	4
  2284  04BC  120A  118A  200D  120A  118A  	fcall	stringdir
  2285  04C1  00F0               	movwf	___lldiv@divisor
  2286  04C2  120A  118A  200D  120A  118A  	fcall	stringdir
  2287  04C7  00F1               	movwf	___lldiv@divisor+1
  2288  04C8  120A  118A  200D  120A  118A  	fcall	stringdir
  2289  04CD  00F2               	movwf	___lldiv@divisor+2
  2290  04CE  120A  118A  200D  120A  118A  	fcall	stringdir
  2291  04D3  00F3               	movwf	___lldiv@divisor+3
  2292  04D4  083A               	movf	(sprintf@val+3)^(0+128),w
  2293  04D5  00F7               	movwf	___lldiv@dividend+3
  2294  04D6  0839               	movf	(sprintf@val+2)^(0+128),w
  2295  04D7  00F6               	movwf	___lldiv@dividend+2
  2296  04D8  0838               	movf	(sprintf@val+1)^(0+128),w
  2297  04D9  00F5               	movwf	___lldiv@dividend+1
  2298  04DA  0837               	movf	sprintf@val^(0+128),w
  2299  04DB  00F4               	movwf	___lldiv@dividend
  2300  04DC  160A  118A  20E3  120A  118A  	fcall	___lldiv
  2301  04E1  0873               	movf	?___lldiv+3,w
  2302  04E2  1683               	bsf	3,5	;RP0=1, select bank1
  2303  04E3  1303               	bcf	3,6	;RP1=0, select bank1
  2304  04E4  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  2305  04E5  0872               	movf	?___lldiv+2,w
  2306  04E6  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  2307  04E7  0871               	movf	?___lldiv+1,w
  2308  04E8  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  2309  04E9  0870               	movf	?___lldiv,w
  2310  04EA  00B3               	movwf	sprintf@tmpval^(0+128)
  2311                           
  2312                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1221:      
      +                          tmpval.vd %= 10;
  2313  04EB  3000               	movlw	0
  2314  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  2315  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  2316  04EE  00A3               	movwf	___llmod@divisor+3
  2317  04EF  3000               	movlw	0
  2318  04F0  00A2               	movwf	___llmod@divisor+2
  2319  04F1  3000               	movlw	0
  2320  04F2  00A1               	movwf	___llmod@divisor+1
  2321  04F3  300A               	movlw	10
  2322  04F4  00A0               	movwf	___llmod@divisor
  2323  04F5  1683               	bsf	3,5	;RP0=1, select bank1
  2324  04F6  1303               	bcf	3,6	;RP1=0, select bank1
  2325  04F7  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  2326  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  2327  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  2328  04FA  00A7               	movwf	___llmod@dividend+3
  2329  04FB  1683               	bsf	3,5	;RP0=1, select bank1
  2330  04FC  1303               	bcf	3,6	;RP1=0, select bank1
  2331  04FD  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  2332  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  2333  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  2334  0500  00A6               	movwf	___llmod@dividend+2
  2335  0501  1683               	bsf	3,5	;RP0=1, select bank1
  2336  0502  1303               	bcf	3,6	;RP1=0, select bank1
  2337  0503  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  2338  0504  1283               	bcf	3,5	;RP0=0, select bank0
  2339  0505  1303               	bcf	3,6	;RP1=0, select bank0
  2340  0506  00A5               	movwf	___llmod@dividend+1
  2341  0507  1683               	bsf	3,5	;RP0=1, select bank1
  2342  0508  1303               	bcf	3,6	;RP1=0, select bank1
  2343  0509  0833               	movf	sprintf@tmpval^(0+128),w
  2344  050A  1283               	bcf	3,5	;RP0=0, select bank0
  2345  050B  1303               	bcf	3,6	;RP1=0, select bank0
  2346  050C  00A4               	movwf	___llmod@dividend
  2347  050D  120A  158A  2001  120A  118A  	fcall	___llmod
  2348  0512  1283               	bcf	3,5	;RP0=0, select bank0
  2349  0513  1303               	bcf	3,6	;RP1=0, select bank0
  2350  0514  0823               	movf	?___llmod+3,w
  2351  0515  1683               	bsf	3,5	;RP0=1, select bank1
  2352  0516  1303               	bcf	3,6	;RP1=0, select bank1
  2353  0517  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  2354  0518  1283               	bcf	3,5	;RP0=0, select bank0
  2355  0519  1303               	bcf	3,6	;RP1=0, select bank0
  2356  051A  0822               	movf	?___llmod+2,w
  2357  051B  1683               	bsf	3,5	;RP0=1, select bank1
  2358  051C  1303               	bcf	3,6	;RP1=0, select bank1
  2359  051D  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  2360  051E  1283               	bcf	3,5	;RP0=0, select bank0
  2361  051F  1303               	bcf	3,6	;RP1=0, select bank0
  2362  0520  0821               	movf	?___llmod+1,w
  2363  0521  1683               	bsf	3,5	;RP0=1, select bank1
  2364  0522  1303               	bcf	3,6	;RP1=0, select bank1
  2365  0523  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  2366  0524  1283               	bcf	3,5	;RP0=0, select bank0
  2367  0525  1303               	bcf	3,6	;RP1=0, select bank0
  2368  0526  0820               	movf	?___llmod,w
  2369  0527  1683               	bsf	3,5	;RP0=1, select bank1
  2370  0528  1303               	bcf	3,6	;RP1=0, select bank1
  2371  0529  00B3               	movwf	sprintf@tmpval^(0+128)
  2372                           
  2373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1222:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
  2374  052A  0833               	movf	sprintf@tmpval^(0+128),w
  2375  052B  3E30               	addlw	48
  2376  052C  2CA1               	goto	L3
  2377  052D                     l3124:	
  2378                           
  2379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1227:     (
      +                          (*sp++ = ('0')));
  2380  052D  3030               	movlw	48
  2381  052E  1683               	bsf	3,5	;RP0=1, select bank1
  2382  052F  1303               	bcf	3,6	;RP1=0, select bank1
  2383  0530  00A5               	movwf	??_sprintf^(0+128)
  2384  0531  083B               	movf	sprintf@sp^(0+128),w
  2385  0532  0084               	movwf	4
  2386  0533  0825               	movf	??_sprintf^(0+128),w
  2387  0534  1383               	bcf	3,7	;select IRP bank0
  2388  0535  0080               	movwf	0
  2389  0536  3001               	movlw	1
  2390  0537  00A5               	movwf	??_sprintf^(0+128)
  2391  0538  0825               	movf	??_sprintf^(0+128),w
  2392  0539  07BB               	addwf	sprintf@sp^(0+128),f
  2393                           
  2394                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1228:     e
      +                          exp--;
  2395  053A  30FF               	movlw	255
  2396  053B  07B1               	addwf	sprintf@eexp^(0+128),f
  2397  053C  1803               	skipnc
  2398  053D  0AB2               	incf	(sprintf@eexp+1)^(0+128),f
  2399  053E  30FF               	movlw	255
  2400  053F  07B2               	addwf	(sprintf@eexp+1)^(0+128),f
  2401  0540                     l3130:	
  2402                           
  2403                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1226:    wh
      +                          ile(eexp > 0) {
  2404  0540  0832               	movf	(sprintf@eexp+1)^(0+128),w
  2405  0541  3A80               	xorlw	128
  2406  0542  00FF               	movwf	127
  2407  0543  3080               	movlw	128
  2408  0544  027F               	subwf	127,w
  2409  0545  1D03               	skipz
  2410  0546  2D49               	goto	u5345
  2411  0547  3001               	movlw	1
  2412  0548  0231               	subwf	sprintf@eexp^(0+128),w
  2413  0549                     u5345:	
  2414  0549  1803               	skipnc
  2415  054A  2D2D               	goto	l3124
  2416                           
  2417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1230:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2418  054B  1683               	bsf	3,5	;RP0=1, select bank1
  2419  054C  1303               	bcf	3,6	;RP1=0, select bank1
  2420  054D  083D               	movf	(sprintf@prec+1)^(0+128),w
  2421  054E  3A80               	xorlw	128
  2422  054F  00FF               	movwf	127
  2423  0550  3080               	movlw	128
  2424  0551  027F               	subwf	127,w
  2425  0552  1D03               	skipz
  2426  0553  2D56               	goto	u5355
  2427  0554  3009               	movlw	9
  2428  0555  023C               	subwf	sprintf@prec^(0+128),w
  2429  0556                     u5355:	
  2430  0556  1C03               	skipc
  2431  0557  2D5C               	goto	l3136
  2432                           
  2433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1231:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
  2434  0558  3008               	movlw	8
  2435  0559  1683               	bsf	3,5	;RP0=1, select bank1
  2436  055A  1303               	bcf	3,6	;RP1=0, select bank1
  2437  055B  2D5F               	goto	L4
  2438  055C                     l3136:	
  2439                           
  2440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1233:     c
      +                           = (char)prec;
  2441  055C  1683               	bsf	3,5	;RP0=1, select bank1
  2442  055D  1303               	bcf	3,6	;RP1=0, select bank1
  2443  055E  083C               	movf	sprintf@prec^(0+128),w
  2444  055F                     L4:	
  2445  055F  00A5               	movwf	??_sprintf^(0+128)
  2446  0560  0825               	movf	??_sprintf^(0+128),w
  2447  0561  00C2               	movwf	sprintf@c^(0+128)
  2448                           
  2449                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1234:    pr
      +                          ec -= (int)c;
  2450  0562  0842               	movf	sprintf@c^(0+128),w
  2451  0563  00A5               	movwf	??_sprintf^(0+128)
  2452  0564  01A6               	clrf	(??_sprintf^(0+128)+1)
  2453  0565  0825               	movf	??_sprintf^(0+128),w
  2454  0566  02BC               	subwf	sprintf@prec^(0+128),f
  2455  0567  0826               	movf	(??_sprintf+1)^(0+128),w
  2456  0568  1C03               	skipc
  2457  0569  03BD               	decf	(sprintf@prec+1)^(0+128),f
  2458  056A  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  2459                           
  2460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1238:    if
      +                          (c)
  2461  056B  0842               	movf	sprintf@c^(0+128),w
  2462  056C  1903               	btfsc	3,2
  2463  056D  2D79               	goto	l3144
  2464                           
  2465                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1240:     (
      +                          (*sp++ = ('.')));
  2466  056E  302E               	movlw	46
  2467  056F  00A5               	movwf	??_sprintf^(0+128)
  2468  0570  083B               	movf	sprintf@sp^(0+128),w
  2469  0571  0084               	movwf	4
  2470  0572  0825               	movf	??_sprintf^(0+128),w
  2471  0573  1383               	bcf	3,7	;select IRP bank0
  2472  0574  0080               	movwf	0
  2473  0575  3001               	movlw	1
  2474  0576  00A5               	movwf	??_sprintf^(0+128)
  2475  0577  0825               	movf	??_sprintf^(0+128),w
  2476  0578  07BB               	addwf	sprintf@sp^(0+128),f
  2477  0579                     l3144:	
  2478                           
  2479                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2480  0579  0842               	movf	sprintf@c^(0+128),w
  2481  057A  120A  158A  24B7  120A  118A  	fcall	_scale
  2482  057F  1283               	bcf	3,5	;RP0=0, select bank0
  2483  0580  1303               	bcf	3,6	;RP1=0, select bank0
  2484  0581  0841               	movf	?_scale+3,w
  2485  0582  1683               	bsf	3,5	;RP0=1, select bank1
  2486  0583  1303               	bcf	3,6	;RP1=0, select bank1
  2487  0584  00AD               	movwf	(_sprintf$773+3)^(0+128)
  2488  0585  1283               	bcf	3,5	;RP0=0, select bank0
  2489  0586  1303               	bcf	3,6	;RP1=0, select bank0
  2490  0587  0840               	movf	?_scale+2,w
  2491  0588  1683               	bsf	3,5	;RP0=1, select bank1
  2492  0589  1303               	bcf	3,6	;RP1=0, select bank1
  2493  058A  00AC               	movwf	(_sprintf$773+2)^(0+128)
  2494  058B  1283               	bcf	3,5	;RP0=0, select bank0
  2495  058C  1303               	bcf	3,6	;RP1=0, select bank0
  2496  058D  083F               	movf	?_scale+1,w
  2497  058E  1683               	bsf	3,5	;RP0=1, select bank1
  2498  058F  1303               	bcf	3,6	;RP1=0, select bank1
  2499  0590  00AB               	movwf	(_sprintf$773+1)^(0+128)
  2500  0591  1283               	bcf	3,5	;RP0=0, select bank0
  2501  0592  1303               	bcf	3,6	;RP1=0, select bank0
  2502  0593  083E               	movf	?_scale,w
  2503  0594  1683               	bsf	3,5	;RP0=1, select bank1
  2504  0595  1303               	bcf	3,6	;RP1=0, select bank1
  2505  0596  00AA               	movwf	_sprintf$773^(0+128)
  2506                           
  2507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2508  0597  082D               	movf	(_sprintf$773+3)^(0+128),w
  2509  0598  1283               	bcf	3,5	;RP0=0, select bank0
  2510  0599  1303               	bcf	3,6	;RP1=0, select bank0
  2511  059A  00AB               	movwf	___flmul@a+3
  2512  059B  1683               	bsf	3,5	;RP0=1, select bank1
  2513  059C  1303               	bcf	3,6	;RP1=0, select bank1
  2514  059D  082C               	movf	(_sprintf$773+2)^(0+128),w
  2515  059E  1283               	bcf	3,5	;RP0=0, select bank0
  2516  059F  1303               	bcf	3,6	;RP1=0, select bank0
  2517  05A0  00AA               	movwf	___flmul@a+2
  2518  05A1  1683               	bsf	3,5	;RP0=1, select bank1
  2519  05A2  1303               	bcf	3,6	;RP1=0, select bank1
  2520  05A3  082B               	movf	(_sprintf$773+1)^(0+128),w
  2521  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  2522  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  2523  05A6  00A9               	movwf	___flmul@a+1
  2524  05A7  1683               	bsf	3,5	;RP0=1, select bank1
  2525  05A8  1303               	bcf	3,6	;RP1=0, select bank1
  2526  05A9  082A               	movf	_sprintf$773^(0+128),w
  2527  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  2528  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  2529  05AC  00A8               	movwf	___flmul@a
  2530  05AD  1683               	bsf	3,5	;RP0=1, select bank1
  2531  05AE  1303               	bcf	3,6	;RP1=0, select bank1
  2532  05AF  0841               	movf	(sprintf@fval+3)^(0+128),w
  2533  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  2534  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  2535  05B2  00A7               	movwf	___flmul@b+3
  2536  05B3  1683               	bsf	3,5	;RP0=1, select bank1
  2537  05B4  1303               	bcf	3,6	;RP1=0, select bank1
  2538  05B5  0840               	movf	(sprintf@fval+2)^(0+128),w
  2539  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  2540  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  2541  05B8  00A6               	movwf	___flmul@b+2
  2542  05B9  1683               	bsf	3,5	;RP0=1, select bank1
  2543  05BA  1303               	bcf	3,6	;RP1=0, select bank1
  2544  05BB  083F               	movf	(sprintf@fval+1)^(0+128),w
  2545  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  2546  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  2547  05BE  00A5               	movwf	___flmul@b+1
  2548  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  2549  05C0  1303               	bcf	3,6	;RP1=0, select bank1
  2550  05C1  083E               	movf	sprintf@fval^(0+128),w
  2551  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  2552  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  2553  05C4  00A4               	movwf	___flmul@b
  2554  05C5  120A  158A  21A2  120A  118A  	fcall	___flmul
  2555  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  2556  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  2557  05CC  0827               	movf	?___flmul+3,w
  2558  05CD  00D4               	movwf	___fltol@f1+3
  2559  05CE  0826               	movf	?___flmul+2,w
  2560  05CF  00D3               	movwf	___fltol@f1+2
  2561  05D0  0825               	movf	?___flmul+1,w
  2562  05D1  00D2               	movwf	___fltol@f1+1
  2563  05D2  0824               	movf	?___flmul,w
  2564  05D3  00D1               	movwf	___fltol@f1
  2565  05D4  160A  118A  21A2  120A  118A  	fcall	___fltol
  2566  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  2567  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  2568  05DB  0854               	movf	?___fltol+3,w
  2569  05DC  1683               	bsf	3,5	;RP0=1, select bank1
  2570  05DD  1303               	bcf	3,6	;RP1=0, select bank1
  2571  05DE  00BA               	movwf	(sprintf@val+3)^(0+128)
  2572  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  2573  05E0  1303               	bcf	3,6	;RP1=0, select bank0
  2574  05E1  0853               	movf	?___fltol+2,w
  2575  05E2  1683               	bsf	3,5	;RP0=1, select bank1
  2576  05E3  1303               	bcf	3,6	;RP1=0, select bank1
  2577  05E4  00B9               	movwf	(sprintf@val+2)^(0+128)
  2578  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  2579  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  2580  05E7  0852               	movf	?___fltol+1,w
  2581  05E8  1683               	bsf	3,5	;RP0=1, select bank1
  2582  05E9  1303               	bcf	3,6	;RP1=0, select bank1
  2583  05EA  00B8               	movwf	(sprintf@val+1)^(0+128)
  2584  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  2585  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  2586  05ED  0851               	movf	?___fltol,w
  2587  05EE                     L5:	
  2588  05EE  1683               	bsf	3,5	;RP0=1, select bank1
  2589  05EF  1303               	bcf	3,6	;RP1=0, select bank1
  2590  05F0  00B7               	movwf	sprintf@val^(0+128)
  2591                           
  2592                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  2593  05F1  3001               	movlw	1
  2594  05F2  02C2               	subwf	sprintf@c^(0+128),f
  2595  05F3  0A42               	incf	sprintf@c^(0+128),w
  2596  05F4  1903               	btfsc	3,2
  2597  05F5  2EE6               	goto	l3164
  2598                           
  2599                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1248:     t
      +                          mpval.vd = val/dpowers[c];
  2600                           
  2601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  2602  05F6  0842               	movf	sprintf@c^(0+128),w
  2603  05F7  00A5               	movwf	??_sprintf^(0+128)
  2604  05F8  3001               	movlw	1
  2605  05F9                     u5375:	
  2606  05F9  1003               	clrc
  2607  05FA  0DA5               	rlf	??_sprintf^(0+128),f
  2608  05FB  3EFF               	addlw	-1
  2609  05FC  1D03               	skipz
  2610  05FD  2DF9               	goto	u5375
  2611  05FE  1003               	clrc
  2612  05FF  0D25               	rlf	??_sprintf^(0+128),w
  2613  0600  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2614  0601  0084               	movwf	4
  2615  0602  120A  118A  200D  120A  118A  	fcall	stringdir
  2616  0607  00F0               	movwf	___lldiv@divisor
  2617  0608  120A  118A  200D  120A  118A  	fcall	stringdir
  2618  060D  00F1               	movwf	___lldiv@divisor+1
  2619  060E  120A  118A  200D  120A  118A  	fcall	stringdir
  2620  0613  00F2               	movwf	___lldiv@divisor+2
  2621  0614  120A  118A  200D  120A  118A  	fcall	stringdir
  2622  0619  00F3               	movwf	___lldiv@divisor+3
  2623  061A  083A               	movf	(sprintf@val+3)^(0+128),w
  2624  061B  00F7               	movwf	___lldiv@dividend+3
  2625  061C  0839               	movf	(sprintf@val+2)^(0+128),w
  2626  061D  00F6               	movwf	___lldiv@dividend+2
  2627  061E  0838               	movf	(sprintf@val+1)^(0+128),w
  2628  061F  00F5               	movwf	___lldiv@dividend+1
  2629  0620  0837               	movf	sprintf@val^(0+128),w
  2630  0621  00F4               	movwf	___lldiv@dividend
  2631  0622  160A  118A  20E3  120A  118A  	fcall	___lldiv
  2632  0627  0873               	movf	?___lldiv+3,w
  2633  0628  1683               	bsf	3,5	;RP0=1, select bank1
  2634  0629  1303               	bcf	3,6	;RP1=0, select bank1
  2635  062A  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  2636  062B  0872               	movf	?___lldiv+2,w
  2637  062C  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  2638  062D  0871               	movf	?___lldiv+1,w
  2639  062E  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  2640  062F  0870               	movf	?___lldiv,w
  2641  0630  00B3               	movwf	sprintf@tmpval^(0+128)
  2642                           
  2643                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1249:     t
      +                          mpval.vd %= 10;
  2644  0631  3000               	movlw	0
  2645  0632  1283               	bcf	3,5	;RP0=0, select bank0
  2646  0633  1303               	bcf	3,6	;RP1=0, select bank0
  2647  0634  00A3               	movwf	___llmod@divisor+3
  2648  0635  3000               	movlw	0
  2649  0636  00A2               	movwf	___llmod@divisor+2
  2650  0637  3000               	movlw	0
  2651  0638  00A1               	movwf	___llmod@divisor+1
  2652  0639  300A               	movlw	10
  2653  063A  00A0               	movwf	___llmod@divisor
  2654  063B  1683               	bsf	3,5	;RP0=1, select bank1
  2655  063C  1303               	bcf	3,6	;RP1=0, select bank1
  2656  063D  0836               	movf	(sprintf@tmpval+3)^(0+128),w
  2657  063E  1283               	bcf	3,5	;RP0=0, select bank0
  2658  063F  1303               	bcf	3,6	;RP1=0, select bank0
  2659  0640  00A7               	movwf	___llmod@dividend+3
  2660  0641  1683               	bsf	3,5	;RP0=1, select bank1
  2661  0642  1303               	bcf	3,6	;RP1=0, select bank1
  2662  0643  0835               	movf	(sprintf@tmpval+2)^(0+128),w
  2663  0644  1283               	bcf	3,5	;RP0=0, select bank0
  2664  0645  1303               	bcf	3,6	;RP1=0, select bank0
  2665  0646  00A6               	movwf	___llmod@dividend+2
  2666  0647  1683               	bsf	3,5	;RP0=1, select bank1
  2667  0648  1303               	bcf	3,6	;RP1=0, select bank1
  2668  0649  0834               	movf	(sprintf@tmpval+1)^(0+128),w
  2669  064A  1283               	bcf	3,5	;RP0=0, select bank0
  2670  064B  1303               	bcf	3,6	;RP1=0, select bank0
  2671  064C  00A5               	movwf	___llmod@dividend+1
  2672  064D  1683               	bsf	3,5	;RP0=1, select bank1
  2673  064E  1303               	bcf	3,6	;RP1=0, select bank1
  2674  064F  0833               	movf	sprintf@tmpval^(0+128),w
  2675  0650  1283               	bcf	3,5	;RP0=0, select bank0
  2676  0651  1303               	bcf	3,6	;RP1=0, select bank0
  2677  0652  00A4               	movwf	___llmod@dividend
  2678  0653  120A  158A  2001  120A  118A  	fcall	___llmod
  2679  0658  1283               	bcf	3,5	;RP0=0, select bank0
  2680  0659  1303               	bcf	3,6	;RP1=0, select bank0
  2681  065A  0823               	movf	?___llmod+3,w
  2682  065B  1683               	bsf	3,5	;RP0=1, select bank1
  2683  065C  1303               	bcf	3,6	;RP1=0, select bank1
  2684  065D  00B6               	movwf	(sprintf@tmpval+3)^(0+128)
  2685  065E  1283               	bcf	3,5	;RP0=0, select bank0
  2686  065F  1303               	bcf	3,6	;RP1=0, select bank0
  2687  0660  0822               	movf	?___llmod+2,w
  2688  0661  1683               	bsf	3,5	;RP0=1, select bank1
  2689  0662  1303               	bcf	3,6	;RP1=0, select bank1
  2690  0663  00B5               	movwf	(sprintf@tmpval+2)^(0+128)
  2691  0664  1283               	bcf	3,5	;RP0=0, select bank0
  2692  0665  1303               	bcf	3,6	;RP1=0, select bank0
  2693  0666  0821               	movf	?___llmod+1,w
  2694  0667  1683               	bsf	3,5	;RP0=1, select bank1
  2695  0668  1303               	bcf	3,6	;RP1=0, select bank1
  2696  0669  00B4               	movwf	(sprintf@tmpval+1)^(0+128)
  2697  066A  1283               	bcf	3,5	;RP0=0, select bank0
  2698  066B  1303               	bcf	3,6	;RP1=0, select bank0
  2699  066C  0820               	movf	?___llmod,w
  2700  066D  1683               	bsf	3,5	;RP0=1, select bank1
  2701  066E  1303               	bcf	3,6	;RP1=0, select bank1
  2702  066F  00B3               	movwf	sprintf@tmpval^(0+128)
  2703                           
  2704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1250:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
  2705  0670  0833               	movf	sprintf@tmpval^(0+128),w
  2706  0671  3E30               	addlw	48
  2707  0672  00A5               	movwf	??_sprintf^(0+128)
  2708  0673  083B               	movf	sprintf@sp^(0+128),w
  2709  0674  0084               	movwf	4
  2710  0675  0825               	movf	??_sprintf^(0+128),w
  2711  0676  1383               	bcf	3,7	;select IRP bank0
  2712  0677  0080               	movwf	0
  2713  0678  3001               	movlw	1
  2714  0679  00A5               	movwf	??_sprintf^(0+128)
  2715  067A  0825               	movf	??_sprintf^(0+128),w
  2716  067B  07BB               	addwf	sprintf@sp^(0+128),f
  2717                           
  2718                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1251:     v
      +                          al %= dpowers[c];
  2719  067C  0842               	movf	sprintf@c^(0+128),w
  2720  067D  00A5               	movwf	??_sprintf^(0+128)
  2721  067E  3001               	movlw	1
  2722  067F                     u5385:	
  2723  067F  1003               	clrc
  2724  0680  0DA5               	rlf	??_sprintf^(0+128),f
  2725  0681  3EFF               	addlw	-1
  2726  0682  1D03               	skipz
  2727  0683  2E7F               	goto	u5385
  2728  0684  1003               	clrc
  2729  0685  0D25               	rlf	??_sprintf^(0+128),w
  2730  0686  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2731  0687  0084               	movwf	4
  2732  0688  120A  118A  200D  120A  118A  	fcall	stringdir
  2733  068D  1283               	bcf	3,5	;RP0=0, select bank0
  2734  068E  1303               	bcf	3,6	;RP1=0, select bank0
  2735  068F  00A0               	movwf	___llmod@divisor
  2736  0690  120A  118A  200D  120A  118A  	fcall	stringdir
  2737  0695  00A1               	movwf	___llmod@divisor+1
  2738  0696  120A  118A  200D  120A  118A  	fcall	stringdir
  2739  069B  00A2               	movwf	___llmod@divisor+2
  2740  069C  120A  118A  200D  120A  118A  	fcall	stringdir
  2741  06A1  00A3               	movwf	___llmod@divisor+3
  2742  06A2  1683               	bsf	3,5	;RP0=1, select bank1
  2743  06A3  1303               	bcf	3,6	;RP1=0, select bank1
  2744  06A4  083A               	movf	(sprintf@val+3)^(0+128),w
  2745  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  2746  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  2747  06A7  00A7               	movwf	___llmod@dividend+3
  2748  06A8  1683               	bsf	3,5	;RP0=1, select bank1
  2749  06A9  1303               	bcf	3,6	;RP1=0, select bank1
  2750  06AA  0839               	movf	(sprintf@val+2)^(0+128),w
  2751  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  2752  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  2753  06AD  00A6               	movwf	___llmod@dividend+2
  2754  06AE  1683               	bsf	3,5	;RP0=1, select bank1
  2755  06AF  1303               	bcf	3,6	;RP1=0, select bank1
  2756  06B0  0838               	movf	(sprintf@val+1)^(0+128),w
  2757  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  2758  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  2759  06B3  00A5               	movwf	___llmod@dividend+1
  2760  06B4  1683               	bsf	3,5	;RP0=1, select bank1
  2761  06B5  1303               	bcf	3,6	;RP1=0, select bank1
  2762  06B6  0837               	movf	sprintf@val^(0+128),w
  2763  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  2764  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  2765  06B9  00A4               	movwf	___llmod@dividend
  2766  06BA  120A  158A  2001  120A  118A  	fcall	___llmod
  2767  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  2768  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  2769  06C1  0823               	movf	?___llmod+3,w
  2770  06C2  1683               	bsf	3,5	;RP0=1, select bank1
  2771  06C3  1303               	bcf	3,6	;RP1=0, select bank1
  2772  06C4  00BA               	movwf	(sprintf@val+3)^(0+128)
  2773  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  2774  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  2775  06C7  0822               	movf	?___llmod+2,w
  2776  06C8  1683               	bsf	3,5	;RP0=1, select bank1
  2777  06C9  1303               	bcf	3,6	;RP1=0, select bank1
  2778  06CA  00B9               	movwf	(sprintf@val+2)^(0+128)
  2779  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  2780  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  2781  06CD  0821               	movf	?___llmod+1,w
  2782  06CE  1683               	bsf	3,5	;RP0=1, select bank1
  2783  06CF  1303               	bcf	3,6	;RP1=0, select bank1
  2784  06D0  00B8               	movwf	(sprintf@val+1)^(0+128)
  2785  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  2786  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  2787  06D3  0820               	movf	?___llmod,w
  2788  06D4  2DEE               	goto	L5
  2789  06D5                     l3158:	
  2790                           
  2791                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1255:     (
      +                          (*sp++ = ('0')));
  2792  06D5  3030               	movlw	48
  2793  06D6  00A5               	movwf	??_sprintf^(0+128)
  2794  06D7  083B               	movf	sprintf@sp^(0+128),w
  2795  06D8  0084               	movwf	4
  2796  06D9  0825               	movf	??_sprintf^(0+128),w
  2797  06DA  1383               	bcf	3,7	;select IRP bank0
  2798  06DB  0080               	movwf	0
  2799  06DC  3001               	movlw	1
  2800  06DD  00A5               	movwf	??_sprintf^(0+128)
  2801  06DE  0825               	movf	??_sprintf^(0+128),w
  2802  06DF  07BB               	addwf	sprintf@sp^(0+128),f
  2803                           
  2804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1256:     p
      +                          rec--;
  2805  06E0  30FF               	movlw	255
  2806  06E1  07BC               	addwf	sprintf@prec^(0+128),f
  2807  06E2  1803               	skipnc
  2808  06E3  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  2809  06E4  30FF               	movlw	255
  2810  06E5  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  2811  06E6                     l3164:	
  2812                           
  2813                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(prec) {
  2814  06E6  083C               	movf	sprintf@prec^(0+128),w
  2815  06E7  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  2816  06E8  1903               	btfsc	3,2
  2817  06E9  28D0               	goto	l3216
  2818  06EA  2ED5               	goto	l3158
  2819  06EB                     l3166:	
  2820                           
  2821                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1272:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1278:     val
      +                           = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  2822  06EB  082E               	movf	sprintf@ap^(0+128),w
  2823  06EC  0084               	movwf	4
  2824  06ED  1383               	bcf	3,7	;select IRP bank0
  2825  06EE  0800               	movf	0,w
  2826  06EF  00A5               	movwf	??_sprintf^(0+128)
  2827  06F0  0A84               	incf	4,f
  2828  06F1  0800               	movf	0,w
  2829  06F2  00A6               	movwf	(??_sprintf^(0+128)+1)
  2830  06F3  0825               	movf	??_sprintf^(0+128),w
  2831  06F4  00B7               	movwf	sprintf@val^(0+128)
  2832  06F5  0826               	movf	(??_sprintf+1)^(0+128),w
  2833  06F6  00B8               	movwf	(sprintf@val+1)^(0+128)
  2834  06F7  3000               	movlw	0
  2835  06F8  1BB8               	btfsc	(sprintf@val+1)^(0+128),7
  2836  06F9  30FF               	movlw	255
  2837  06FA  00B9               	movwf	(sprintf@val+2)^(0+128)
  2838  06FB  00BA               	movwf	(sprintf@val+3)^(0+128)
  2839  06FC  3002               	movlw	2
  2840  06FD  00A5               	movwf	??_sprintf^(0+128)
  2841  06FE  0825               	movf	??_sprintf^(0+128),w
  2842  06FF  07AE               	addwf	sprintf@ap^(0+128),f
  2843                           
  2844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1280:    if
      +                          ((long)val < 0) {
  2845  0700  1FBA               	btfss	(sprintf@val+3)^(0+128),7
  2846  0701  2F11               	goto	l3176
  2847                           
  2848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1281:     f
      +                          lag |= 0x03;
  2849  0702  3003               	movlw	3
  2850  0703  04AF               	iorwf	sprintf@flag^(0+128),f
  2851  0704  3000               	movlw	0
  2852  0705  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  2853                           
  2854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1282:     v
      +                          al = -val;
  2855  0706  09B7               	comf	sprintf@val^(0+128),f
  2856  0707  09B8               	comf	(sprintf@val+1)^(0+128),f
  2857  0708  09B9               	comf	(sprintf@val+2)^(0+128),f
  2858  0709  09BA               	comf	(sprintf@val+3)^(0+128),f
  2859  070A  0AB7               	incf	sprintf@val^(0+128),f
  2860  070B  1903               	skipnz
  2861  070C  0AB8               	incf	(sprintf@val+1)^(0+128),f
  2862  070D  1903               	skipnz
  2863  070E  0AB9               	incf	(sprintf@val+2)^(0+128),f
  2864  070F  1903               	skipnz
  2865  0710  0ABA               	incf	(sprintf@val+3)^(0+128),f
  2866  0711                     l3176:	
  2867                           
  2868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1285:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1309:   if(pr
      +                          ec == 0 && val == 0)
  2869  0711  083C               	movf	sprintf@prec^(0+128),w
  2870  0712  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  2871  0713  1D03               	btfss	3,2
  2872  0714  2F21               	goto	l3182
  2873  0715  083A               	movf	(sprintf@val+3)^(0+128),w
  2874  0716  0439               	iorwf	(sprintf@val+2)^(0+128),w
  2875  0717  0438               	iorwf	(sprintf@val+1)^(0+128),w
  2876  0718  0437               	iorwf	sprintf@val^(0+128),w
  2877  0719  1D03               	skipz
  2878  071A  2F21               	goto	l3182
  2879                           
  2880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1310:    pr
      +                          ec++;
  2881  071B  3001               	movlw	1
  2882  071C  07BC               	addwf	sprintf@prec^(0+128),f
  2883  071D  1803               	skipnc
  2884  071E  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  2885  071F  3000               	movlw	0
  2886  0720  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  2887  0721                     l3182:	
  2888                           
  2889                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1324:    fo
      +                          r(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2890  0721  01C2               	clrf	sprintf@c^(0+128)
  2891  0722  0AC2               	incf	sprintf@c^(0+128),f
  2892  0723                     l3188:	
  2893                           
  2894                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1325:     i
      +                          f(val < dpowers[c])
  2895  0723  0842               	movf	sprintf@c^(0+128),w
  2896  0724  00A5               	movwf	??_sprintf^(0+128)
  2897  0725  3001               	movlw	1
  2898  0726                     u5445:	
  2899  0726  1003               	clrc
  2900  0727  0DA5               	rlf	??_sprintf^(0+128),f
  2901  0728  3EFF               	addlw	-1
  2902  0729  1D03               	skipz
  2903  072A  2F26               	goto	u5445
  2904  072B  1003               	clrc
  2905  072C  0D25               	rlf	??_sprintf^(0+128),w
  2906  072D  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2907  072E  0084               	movwf	4
  2908  072F  120A  118A  200D  120A  118A  	fcall	stringdir
  2909  0734  00A6               	movwf	(??_sprintf+1)^(0+128)
  2910  0735  120A  118A  200D  120A  118A  	fcall	stringdir
  2911  073A  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2912  073B  120A  118A  200D  120A  118A  	fcall	stringdir
  2913  0740  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2914  0741  120A  118A  200D  120A  118A  	fcall	stringdir
  2915  0746  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2916  0747  0829               	movf	(??_sprintf+4)^(0+128),w
  2917  0748  023A               	subwf	(sprintf@val+3)^(0+128),w
  2918  0749  1D03               	skipz
  2919  074A  2F55               	goto	u5455
  2920  074B  0828               	movf	(??_sprintf+3)^(0+128),w
  2921  074C  0239               	subwf	(sprintf@val+2)^(0+128),w
  2922  074D  1D03               	skipz
  2923  074E  2F55               	goto	u5455
  2924  074F  0827               	movf	(??_sprintf+2)^(0+128),w
  2925  0750  0238               	subwf	(sprintf@val+1)^(0+128),w
  2926  0751  1D03               	skipz
  2927  0752  2F55               	goto	u5455
  2928  0753  0826               	movf	(??_sprintf+1)^(0+128),w
  2929  0754  0237               	subwf	sprintf@val^(0+128),w
  2930  0755                     u5455:	
  2931  0755  1C03               	btfss	3,0
  2932  0756  2F5F               	goto	l3194
  2933  0757  3001               	movlw	1
  2934  0758  00A5               	movwf	??_sprintf^(0+128)
  2935  0759  0825               	movf	??_sprintf^(0+128),w
  2936  075A  07C2               	addwf	sprintf@c^(0+128),f
  2937  075B  300A               	movlw	10
  2938  075C  0642               	xorwf	sprintf@c^(0+128),w
  2939  075D  1D03               	btfss	3,2
  2940  075E  2F23               	goto	l3188
  2941  075F                     l3194:	
  2942                           
  2943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1358:   if(
      +                          c < prec)
  2944  075F  083D               	movf	(sprintf@prec+1)^(0+128),w
  2945  0760  3A80               	xorlw	128
  2946  0761  3C80               	sublw	128
  2947  0762  1D03               	skipz
  2948  0763  2F66               	goto	u5475
  2949  0764  083C               	movf	sprintf@prec^(0+128),w
  2950  0765  0242               	subwf	sprintf@c^(0+128),w
  2951  0766                     u5475:	
  2952  0766  1C03               	btfss	3,0
  2953  0767  2F7E               	goto	l3202
  2954  0768  1683               	bsf	3,5	;RP0=1, select bank1
  2955  0769  1303               	bcf	3,6	;RP1=0, select bank1
  2956  076A  083D               	movf	(sprintf@prec+1)^(0+128),w
  2957  076B  3A80               	xorlw	128
  2958  076C  00A5               	movwf	??_sprintf^(0+128)
  2959  076D  3080               	movlw	128
  2960  076E  0225               	subwf	??_sprintf^(0+128),w
  2961  076F  1D03               	skipz
  2962  0770  2F73               	goto	u5485
  2963  0771  0842               	movf	sprintf@c^(0+128),w
  2964  0772  023C               	subwf	sprintf@prec^(0+128),w
  2965  0773                     u5485:	
  2966  0773  1803               	skipnc
  2967  0774  2F7E               	goto	l3202
  2968                           
  2969                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1361:    pr
      +                          ec = c;
  2970  0775  1683               	bsf	3,5	;RP0=1, select bank1
  2971  0776  1303               	bcf	3,6	;RP1=0, select bank1
  2972  0777  0842               	movf	sprintf@c^(0+128),w
  2973  0778  00A5               	movwf	??_sprintf^(0+128)
  2974  0779  01A6               	clrf	(??_sprintf^(0+128)+1)
  2975  077A  0825               	movf	??_sprintf^(0+128),w
  2976  077B  00BC               	movwf	sprintf@prec^(0+128)
  2977  077C  0826               	movf	(??_sprintf+1)^(0+128),w
  2978  077D  00BD               	movwf	(sprintf@prec+1)^(0+128)
  2979  077E                     l3202:	
  2980                           
  2981                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  2982  077E  3003               	movlw	3
  2983  077F  1683               	bsf	3,5	;RP0=1, select bank1
  2984  0780  1303               	bcf	3,6	;RP1=0, select bank1
  2985  0781  052F               	andwf	sprintf@flag^(0+128),w
  2986  0782  00A5               	movwf	??_sprintf^(0+128)
  2987  0783  3000               	movlw	0
  2988  0784  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2989  0785  00A6               	movwf	(??_sprintf+1)^(0+128)
  2990  0786  0825               	movf	??_sprintf^(0+128),w
  2991  0787  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2992  0788  1903               	btfsc	3,2
  2993  0789  2F95               	goto	l3214
  2994                           
  2995                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  2996  078A  302D               	movlw	45
  2997  078B                     L6:	
  2998  078B  00A5               	movwf	??_sprintf^(0+128)
  2999  078C  083B               	movf	sprintf@sp^(0+128),w
  3000  078D  0084               	movwf	4
  3001  078E  0825               	movf	??_sprintf^(0+128),w
  3002  078F  1383               	bcf	3,7	;select IRP bank0
  3003  0790  0080               	movwf	0
  3004  0791  3001               	movlw	1
  3005  0792  00A5               	movwf	??_sprintf^(0+128)
  3006  0793  0825               	movf	??_sprintf^(0+128),w
  3007  0794  07BB               	addwf	sprintf@sp^(0+128),f
  3008  0795                     l3214:	
  3009                           
  3010                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1493:   whi
      +                          le(prec--) {
  3011  0795  30FF               	movlw	255
  3012  0796  07BC               	addwf	sprintf@prec^(0+128),f
  3013  0797  1803               	skipnc
  3014  0798  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3015  0799  30FF               	movlw	255
  3016  079A  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3017  079B  0A3C               	incf	sprintf@prec^(0+128),w
  3018  079C  1903               	btfsc	3,2
  3019  079D  0A3D               	incf	(sprintf@prec+1)^(0+128),w
  3020  079E  1903               	btfsc	3,2
  3021  079F  28D0               	goto	l3216
  3022                           
  3023                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1497:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1508:     c 
      +                          = (val / dpowers[prec]) % 10 + '0';
  3024  07A0  3000               	movlw	0
  3025  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  3026  07A2  1303               	bcf	3,6	;RP1=0, select bank0
  3027  07A3  00A3               	movwf	___llmod@divisor+3
  3028  07A4  3000               	movlw	0
  3029  07A5  00A2               	movwf	___llmod@divisor+2
  3030  07A6  3000               	movlw	0
  3031  07A7  00A1               	movwf	___llmod@divisor+1
  3032  07A8  300A               	movlw	10
  3033  07A9  00A0               	movwf	___llmod@divisor
  3034  07AA  1683               	bsf	3,5	;RP0=1, select bank1
  3035  07AB  1303               	bcf	3,6	;RP1=0, select bank1
  3036  07AC  083C               	movf	sprintf@prec^(0+128),w
  3037  07AD  00A5               	movwf	??_sprintf^(0+128)
  3038  07AE  3001               	movlw	1
  3039  07AF                     u5505:	
  3040  07AF  1003               	clrc
  3041  07B0  0DA5               	rlf	??_sprintf^(0+128),f
  3042  07B1  3EFF               	addlw	-1
  3043  07B2  1D03               	skipz
  3044  07B3  2FAF               	goto	u5505
  3045  07B4  1003               	clrc
  3046  07B5  0D25               	rlf	??_sprintf^(0+128),w
  3047  07B6  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3048  07B7  0084               	movwf	4
  3049  07B8  120A  118A  200D  120A  118A  	fcall	stringdir
  3050  07BD  00F0               	movwf	___lldiv@divisor
  3051  07BE  120A  118A  200D  120A  118A  	fcall	stringdir
  3052  07C3  00F1               	movwf	___lldiv@divisor+1
  3053  07C4  120A  118A  200D  120A  118A  	fcall	stringdir
  3054  07C9  00F2               	movwf	___lldiv@divisor+2
  3055  07CA  120A  118A  200D  120A  118A  	fcall	stringdir
  3056  07CF  00F3               	movwf	___lldiv@divisor+3
  3057  07D0  083A               	movf	(sprintf@val+3)^(0+128),w
  3058  07D1  00F7               	movwf	___lldiv@dividend+3
  3059  07D2  0839               	movf	(sprintf@val+2)^(0+128),w
  3060  07D3  00F6               	movwf	___lldiv@dividend+2
  3061  07D4  0838               	movf	(sprintf@val+1)^(0+128),w
  3062  07D5  00F5               	movwf	___lldiv@dividend+1
  3063  07D6  0837               	movf	sprintf@val^(0+128),w
  3064  07D7  00F4               	movwf	___lldiv@dividend
  3065  07D8  160A  118A  20E3  120A  118A  	fcall	___lldiv
  3066  07DD  0873               	movf	?___lldiv+3,w
  3067  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  3068  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  3069  07E0  00A7               	movwf	___llmod@dividend+3
  3070  07E1  0872               	movf	?___lldiv+2,w
  3071  07E2  00A6               	movwf	___llmod@dividend+2
  3072  07E3  0871               	movf	?___lldiv+1,w
  3073  07E4  00A5               	movwf	___llmod@dividend+1
  3074  07E5  0870               	movf	?___lldiv,w
  3075  07E6  00A4               	movwf	___llmod@dividend
  3076  07E7  120A  158A  2001  120A  118A  	fcall	___llmod
  3077  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  3078  07ED  1303               	bcf	3,6	;RP1=0, select bank0
  3079  07EE  0820               	movf	?___llmod,w
  3080  07EF  3E30               	addlw	48
  3081  07F0  1683               	bsf	3,5	;RP0=1, select bank1
  3082  07F1  1303               	bcf	3,6	;RP1=0, select bank1
  3083  07F2  00A6               	movwf	(??_sprintf+1)^(0+128)
  3084  07F3  0826               	movf	(??_sprintf+1)^(0+128),w
  3085  07F4  00C2               	movwf	sprintf@c^(0+128)
  3086                           
  3087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1542:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1543:    ((*
      +                          sp++ = (c)));
  3088  07F5  0842               	movf	sprintf@c^(0+128),w
  3089  07F6  2F8B               	goto	L6
  3090  07F7                     l3218:	
  3091                           
  3092                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  3093  07F7  083B               	movf	sprintf@sp^(0+128),w
  3094  07F8  0084               	movwf	4
  3095  07F9  1383               	bcf	3,7	;select IRP bank0
  3096  07FA  0180               	clrf	0
  3097  07FB  0008               	return
  3098  07FC                     __end_of_sprintf:	
  3099                           
  3100                           	psect	text2
  3101  0CB7                     __ptext2:	
  3102 ;; *************** function _scale *****************
  3103 ;; Defined at:
  3104 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;  scl             1    wreg     char 
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;  scl             1   48[BANK0 ] char 
  3109 ;; Return value:  Size  Location     Type
  3110 ;;                  4   30[BANK0 ] char 
  3111 ;; Registers used:
  3112 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3113 ;; Tracked objects:
  3114 ;;		On entry : 0/0
  3115 ;;		On exit  : 0/0
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3118 ;;      Params:         0       4       0       0       0
  3119 ;;      Locals:         0       5       0       0       0
  3120 ;;      Temps:          0      10       0       0       0
  3121 ;;      Totals:         0      19       0       0       0
  3122 ;;Total ram usage:       19 bytes
  3123 ;; Hardware stack levels used:    1
  3124 ;; Hardware stack levels required when called:    2
  3125 ;; This function calls:
  3126 ;;		___awdiv
  3127 ;;		___awmod
  3128 ;;		___flmul
  3129 ;; This function is called by:
  3130 ;;		_sprintf
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134                           
  3135                           ;psect for function _scale
  3136  0CB7                     _scale:	
  3137                           
  3138                           ;incstack = 0
  3139                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3140                           ;scale@scl stored from wreg
  3141  0CB7  1283               	bcf	3,5	;RP0=0, select bank0
  3142  0CB8  1303               	bcf	3,6	;RP1=0, select bank0
  3143  0CB9  00D0               	movwf	scale@scl
  3144                           
  3145                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  3146  0CBA  1FD0               	btfss	scale@scl,7
  3147  0CBB  2E5F               	goto	l2614
  3148                           
  3149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  3150  0CBC  09D0               	comf	scale@scl,f
  3151  0CBD  0AD0               	incf	scale@scl,f
  3152                           
  3153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  3154  0CBE  0850               	movf	scale@scl,w
  3155  0CBF  3A80               	xorlw	128
  3156  0CC0  3E12               	addlw	-238
  3157  0CC1  1C03               	skipc
  3158  0CC2  2DA9               	goto	l2604
  3159                           
  3160                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3161  0CC3  300A               	movlw	10
  3162  0CC4  00F7               	movwf	___awdiv@divisor
  3163  0CC5  3000               	movlw	0
  3164  0CC6  00F8               	movwf	___awdiv@divisor+1
  3165  0CC7  0850               	movf	scale@scl,w
  3166  0CC8  00F2               	movwf	___awmod@dividend
  3167  0CC9  01F3               	clrf	___awmod@dividend+1
  3168  0CCA  1BF2               	btfsc	___awmod@dividend,7
  3169  0CCB  03F3               	decf	___awmod@dividend+1,f
  3170  0CCC  3064               	movlw	100
  3171  0CCD  00F0               	movwf	___awmod@divisor
  3172  0CCE  3000               	movlw	0
  3173  0CCF  00F1               	movwf	___awmod@divisor+1
  3174  0CD0  160A  118A  203D  120A  158A  	fcall	___awmod
  3175  0CD5  0871               	movf	?___awmod+1,w
  3176  0CD6  00FA               	movwf	___awdiv@dividend+1
  3177  0CD7  0870               	movf	?___awmod,w
  3178  0CD8  00F9               	movwf	___awdiv@dividend
  3179  0CD9  160A  118A  2088  120A  158A  	fcall	___awdiv
  3180  0CDE  0877               	movf	?___awdiv,w
  3181  0CDF  1283               	bcf	3,5	;RP0=0, select bank0
  3182  0CE0  1303               	bcf	3,6	;RP1=0, select bank0
  3183  0CE1  00C2               	movwf	??_scale
  3184  0CE2  3001               	movlw	1
  3185  0CE3                     u4105:	
  3186  0CE3  1003               	clrc
  3187  0CE4  0DC2               	rlf	??_scale,f
  3188  0CE5  3EFF               	addlw	-1
  3189  0CE6  1D03               	skipz
  3190  0CE7  2CE3               	goto	u4105
  3191  0CE8  1003               	clrc
  3192  0CE9  0D42               	rlf	??_scale,w
  3193  0CEA  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3194  0CEB  0084               	movwf	4
  3195  0CEC  120A  118A  200D  120A  158A  	fcall	stringdir
  3196  0CF1  00C3               	movwf	??_scale+1
  3197  0CF2  120A  118A  200D  120A  158A  	fcall	stringdir
  3198  0CF7  00C4               	movwf	??_scale+2
  3199  0CF8  120A  118A  200D  120A  158A  	fcall	stringdir
  3200  0CFD  00C5               	movwf	??_scale+3
  3201  0CFE  120A  118A  200D  120A  158A  	fcall	stringdir
  3202  0D03  00C6               	movwf	??_scale+4
  3203  0D04  0846               	movf	??_scale+4,w
  3204  0D05  00A7               	movwf	___flmul@b+3
  3205  0D06  0845               	movf	??_scale+3,w
  3206  0D07  00A6               	movwf	___flmul@b+2
  3207  0D08  0844               	movf	??_scale+2,w
  3208  0D09  00A5               	movwf	___flmul@b+1
  3209  0D0A  0843               	movf	??_scale+1,w
  3210  0D0B  00A4               	movwf	___flmul@b
  3211  0D0C  3064               	movlw	100
  3212  0D0D  00F7               	movwf	___awdiv@divisor
  3213  0D0E  3000               	movlw	0
  3214  0D0F  00F8               	movwf	___awdiv@divisor+1
  3215  0D10  0850               	movf	scale@scl,w
  3216  0D11  00F9               	movwf	___awdiv@dividend
  3217  0D12  01FA               	clrf	___awdiv@dividend+1
  3218  0D13  1BF9               	btfsc	___awdiv@dividend,7
  3219  0D14  03FA               	decf	___awdiv@dividend+1,f
  3220  0D15  160A  118A  2088  120A  158A  	fcall	___awdiv
  3221  0D1A  0877               	movf	?___awdiv,w
  3222  0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  3223  0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  3224  0D1D  00C7               	movwf	??_scale+5
  3225  0D1E  3001               	movlw	1
  3226  0D1F                     u4115:	
  3227  0D1F  1003               	clrc
  3228  0D20  0DC7               	rlf	??_scale+5,f
  3229  0D21  3EFF               	addlw	-1
  3230  0D22  1D03               	skipz
  3231  0D23  2D1F               	goto	u4115
  3232  0D24  1003               	clrc
  3233  0D25  0D47               	rlf	??_scale+5,w
  3234  0D26  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3235  0D27  0084               	movwf	4
  3236  0D28  120A  118A  200D  120A  158A  	fcall	stringdir
  3237  0D2D  00C8               	movwf	??_scale+6
  3238  0D2E  120A  118A  200D  120A  158A  	fcall	stringdir
  3239  0D33  00C9               	movwf	??_scale+7
  3240  0D34  120A  118A  200D  120A  158A  	fcall	stringdir
  3241  0D39  00CA               	movwf	??_scale+8
  3242  0D3A  120A  118A  200D  120A  158A  	fcall	stringdir
  3243  0D3F  00CB               	movwf	??_scale+9
  3244  0D40  084B               	movf	??_scale+9,w
  3245  0D41  00AB               	movwf	___flmul@a+3
  3246  0D42  084A               	movf	??_scale+8,w
  3247  0D43  00AA               	movwf	___flmul@a+2
  3248  0D44  0849               	movf	??_scale+7,w
  3249  0D45  00A9               	movwf	___flmul@a+1
  3250  0D46  0848               	movf	??_scale+6,w
  3251  0D47  00A8               	movwf	___flmul@a
  3252  0D48  120A  158A  21A2  120A  158A  	fcall	___flmul
  3253  0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  3254  0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  3255  0D4F  0827               	movf	?___flmul+3,w
  3256  0D50  00CF               	movwf	_scale$772+3
  3257  0D51  0826               	movf	?___flmul+2,w
  3258  0D52  00CE               	movwf	_scale$772+2
  3259  0D53  0825               	movf	?___flmul+1,w
  3260  0D54  00CD               	movwf	_scale$772+1
  3261  0D55  0824               	movf	?___flmul,w
  3262  0D56  00CC               	movwf	_scale$772
  3263                           
  3264                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3265  0D57  300A               	movlw	10
  3266  0D58  00F0               	movwf	___awmod@divisor
  3267  0D59  3000               	movlw	0
  3268  0D5A  00F1               	movwf	___awmod@divisor+1
  3269  0D5B  0850               	movf	scale@scl,w
  3270  0D5C  00F2               	movwf	___awmod@dividend
  3271  0D5D  01F3               	clrf	___awmod@dividend+1
  3272  0D5E  1BF2               	btfsc	___awmod@dividend,7
  3273  0D5F  03F3               	decf	___awmod@dividend+1,f
  3274  0D60  160A  118A  203D  120A  158A  	fcall	___awmod
  3275  0D65  0870               	movf	?___awmod,w
  3276  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  3277  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  3278  0D68  00C2               	movwf	??_scale
  3279  0D69  3001               	movlw	1
  3280  0D6A                     u4125:	
  3281  0D6A  1003               	clrc
  3282  0D6B  0DC2               	rlf	??_scale,f
  3283  0D6C  3EFF               	addlw	-1
  3284  0D6D  1D03               	skipz
  3285  0D6E  2D6A               	goto	u4125
  3286  0D6F  1003               	clrc
  3287  0D70  0D42               	rlf	??_scale,w
  3288  0D71  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3289  0D72  0084               	movwf	4
  3290  0D73  120A  118A  200D  120A  158A  	fcall	stringdir
  3291  0D78  00C3               	movwf	??_scale+1
  3292  0D79  120A  118A  200D  120A  158A  	fcall	stringdir
  3293  0D7E  00C4               	movwf	??_scale+2
  3294  0D7F  120A  118A  200D  120A  158A  	fcall	stringdir
  3295  0D84  00C5               	movwf	??_scale+3
  3296  0D85  120A  118A  200D  120A  158A  	fcall	stringdir
  3297  0D8A  00C6               	movwf	??_scale+4
  3298  0D8B  0846               	movf	??_scale+4,w
  3299  0D8C  00A7               	movwf	___flmul@b+3
  3300  0D8D  0845               	movf	??_scale+3,w
  3301  0D8E  00A6               	movwf	___flmul@b+2
  3302  0D8F  0844               	movf	??_scale+2,w
  3303  0D90  00A5               	movwf	___flmul@b+1
  3304  0D91  0843               	movf	??_scale+1,w
  3305  0D92  00A4               	movwf	___flmul@b
  3306  0D93  084F               	movf	_scale$772+3,w
  3307  0D94  00AB               	movwf	___flmul@a+3
  3308  0D95  084E               	movf	_scale$772+2,w
  3309  0D96  00AA               	movwf	___flmul@a+2
  3310  0D97  084D               	movf	_scale$772+1,w
  3311  0D98  00A9               	movwf	___flmul@a+1
  3312  0D99  084C               	movf	_scale$772,w
  3313  0D9A  00A8               	movwf	___flmul@a
  3314  0D9B  120A  158A  21A2   	fcall	___flmul
  3315  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  3316  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  3317  0DA0  0827               	movf	?___flmul+3,w
  3318  0DA1  00C1               	movwf	?_scale+3
  3319  0DA2  0826               	movf	?___flmul+2,w
  3320  0DA3  00C0               	movwf	?_scale+2
  3321  0DA4  0825               	movf	?___flmul+1,w
  3322  0DA5  00BF               	movwf	?_scale+1
  3323  0DA6  0824               	movf	?___flmul,w
  3324  0DA7  00BE               	movwf	?_scale
  3325  0DA8  0008               	return
  3326  0DA9                     l2604:	
  3327  0DA9  0850               	movf	scale@scl,w
  3328  0DAA  3A80               	xorlw	128
  3329  0DAB  3E75               	addlw	-139
  3330  0DAC  1C03               	skipc
  3331  0DAD  2E34               	goto	l2610
  3332                           
  3333                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3334  0DAE  300A               	movlw	10
  3335  0DAF  00F0               	movwf	___awmod@divisor
  3336  0DB0  3000               	movlw	0
  3337  0DB1  00F1               	movwf	___awmod@divisor+1
  3338  0DB2  0850               	movf	scale@scl,w
  3339  0DB3  00F2               	movwf	___awmod@dividend
  3340  0DB4  01F3               	clrf	___awmod@dividend+1
  3341  0DB5  1BF2               	btfsc	___awmod@dividend,7
  3342  0DB6  03F3               	decf	___awmod@dividend+1,f
  3343  0DB7  160A  118A  203D  120A  158A  	fcall	___awmod
  3344  0DBC  0870               	movf	?___awmod,w
  3345  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  3346  0DBE  1303               	bcf	3,6	;RP1=0, select bank0
  3347  0DBF  00C2               	movwf	??_scale
  3348  0DC0  3001               	movlw	1
  3349  0DC1                     u4145:	
  3350  0DC1  1003               	clrc
  3351  0DC2  0DC2               	rlf	??_scale,f
  3352  0DC3  3EFF               	addlw	-1
  3353  0DC4  1D03               	skipz
  3354  0DC5  2DC1               	goto	u4145
  3355  0DC6  1003               	clrc
  3356  0DC7  0D42               	rlf	??_scale,w
  3357  0DC8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3358  0DC9  0084               	movwf	4
  3359  0DCA  120A  118A  200D  120A  158A  	fcall	stringdir
  3360  0DCF  00C3               	movwf	??_scale+1
  3361  0DD0  120A  118A  200D  120A  158A  	fcall	stringdir
  3362  0DD5  00C4               	movwf	??_scale+2
  3363  0DD6  120A  118A  200D  120A  158A  	fcall	stringdir
  3364  0DDB  00C5               	movwf	??_scale+3
  3365  0DDC  120A  118A  200D  120A  158A  	fcall	stringdir
  3366  0DE1  00C6               	movwf	??_scale+4
  3367  0DE2  0846               	movf	??_scale+4,w
  3368  0DE3  00A7               	movwf	___flmul@b+3
  3369  0DE4  0845               	movf	??_scale+3,w
  3370  0DE5  00A6               	movwf	___flmul@b+2
  3371  0DE6  0844               	movf	??_scale+2,w
  3372  0DE7  00A5               	movwf	___flmul@b+1
  3373  0DE8  0843               	movf	??_scale+1,w
  3374  0DE9  00A4               	movwf	___flmul@b
  3375  0DEA  300A               	movlw	10
  3376  0DEB  00F7               	movwf	___awdiv@divisor
  3377  0DEC  3000               	movlw	0
  3378  0DED  00F8               	movwf	___awdiv@divisor+1
  3379  0DEE  0850               	movf	scale@scl,w
  3380  0DEF  00F9               	movwf	___awdiv@dividend
  3381  0DF0  01FA               	clrf	___awdiv@dividend+1
  3382  0DF1  1BF9               	btfsc	___awdiv@dividend,7
  3383  0DF2  03FA               	decf	___awdiv@dividend+1,f
  3384  0DF3  160A  118A  2088  120A  158A  	fcall	___awdiv
  3385  0DF8  0877               	movf	?___awdiv,w
  3386  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  3387  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  3388  0DFB  00C7               	movwf	??_scale+5
  3389  0DFC  3001               	movlw	1
  3390  0DFD                     u4155:	
  3391  0DFD  1003               	clrc
  3392  0DFE  0DC7               	rlf	??_scale+5,f
  3393  0DFF  3EFF               	addlw	-1
  3394  0E00  1D03               	skipz
  3395  0E01  2DFD               	goto	u4155
  3396  0E02  1003               	clrc
  3397  0E03  0D47               	rlf	??_scale+5,w
  3398  0E04  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3399  0E05  0084               	movwf	4
  3400  0E06  120A  118A  200D  120A  158A  	fcall	stringdir
  3401  0E0B  00C8               	movwf	??_scale+6
  3402  0E0C  120A  118A  200D  120A  158A  	fcall	stringdir
  3403  0E11  00C9               	movwf	??_scale+7
  3404  0E12  120A  118A  200D  120A  158A  	fcall	stringdir
  3405  0E17  00CA               	movwf	??_scale+8
  3406  0E18  120A  118A  200D  120A  158A  	fcall	stringdir
  3407  0E1D  00CB               	movwf	??_scale+9
  3408  0E1E  084B               	movf	??_scale+9,w
  3409  0E1F  00AB               	movwf	___flmul@a+3
  3410  0E20  084A               	movf	??_scale+8,w
  3411  0E21  00AA               	movwf	___flmul@a+2
  3412  0E22  0849               	movf	??_scale+7,w
  3413  0E23  00A9               	movwf	___flmul@a+1
  3414  0E24  0848               	movf	??_scale+6,w
  3415  0E25  00A8               	movwf	___flmul@a
  3416  0E26  120A  158A  21A2   	fcall	___flmul
  3417  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  3418  0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  3419  0E2B  0827               	movf	?___flmul+3,w
  3420  0E2C  00C1               	movwf	?_scale+3
  3421  0E2D  0826               	movf	?___flmul+2,w
  3422  0E2E  00C0               	movwf	?_scale+2
  3423  0E2F  0825               	movf	?___flmul+1,w
  3424  0E30  00BF               	movwf	?_scale+1
  3425  0E31  0824               	movf	?___flmul,w
  3426  0E32  00BE               	movwf	?_scale
  3427  0E33  0008               	return
  3428  0E34                     l2610:	
  3429                           
  3430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  3431  0E34  0850               	movf	scale@scl,w
  3432  0E35  00C2               	movwf	??_scale
  3433  0E36  3001               	movlw	1
  3434  0E37                     u4165:	
  3435  0E37  1003               	clrc
  3436  0E38  0DC2               	rlf	??_scale,f
  3437  0E39  3EFF               	addlw	-1
  3438  0E3A  1D03               	skipz
  3439  0E3B  2E37               	goto	u4165
  3440  0E3C  1003               	clrc
  3441  0E3D  0D42               	rlf	??_scale,w
  3442  0E3E  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3443  0E3F  0084               	movwf	4
  3444  0E40  120A  118A  200D  120A  158A  	fcall	stringdir
  3445  0E45  00C3               	movwf	??_scale+1
  3446  0E46  120A  118A  200D  120A  158A  	fcall	stringdir
  3447  0E4B  00C4               	movwf	??_scale+2
  3448  0E4C  120A  118A  200D  120A  158A  	fcall	stringdir
  3449  0E51  00C5               	movwf	??_scale+3
  3450  0E52  120A  118A  200D   	fcall	stringdir
  3451  0E55  00C6               	movwf	??_scale+4
  3452  0E56  0846               	movf	??_scale+4,w
  3453  0E57  00C1               	movwf	?_scale+3
  3454  0E58  0845               	movf	??_scale+3,w
  3455  0E59  00C0               	movwf	?_scale+2
  3456  0E5A  0844               	movf	??_scale+2,w
  3457  0E5B  00BF               	movwf	?_scale+1
  3458  0E5C  0843               	movf	??_scale+1,w
  3459  0E5D  00BE               	movwf	?_scale
  3460  0E5E  0008               	return
  3461  0E5F                     l2614:	
  3462                           
  3463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  3464  0E5F  0850               	movf	scale@scl,w
  3465  0E60  3A80               	xorlw	128
  3466  0E61  3E12               	addlw	-238
  3467  0E62  1C03               	skipc
  3468  0E63  2F4A               	goto	l2622
  3469                           
  3470                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3471  0E64  300A               	movlw	10
  3472  0E65  00F7               	movwf	___awdiv@divisor
  3473  0E66  3000               	movlw	0
  3474  0E67  00F8               	movwf	___awdiv@divisor+1
  3475  0E68  0850               	movf	scale@scl,w
  3476  0E69  00F2               	movwf	___awmod@dividend
  3477  0E6A  01F3               	clrf	___awmod@dividend+1
  3478  0E6B  1BF2               	btfsc	___awmod@dividend,7
  3479  0E6C  03F3               	decf	___awmod@dividend+1,f
  3480  0E6D  3064               	movlw	100
  3481  0E6E  00F0               	movwf	___awmod@divisor
  3482  0E6F  3000               	movlw	0
  3483  0E70  00F1               	movwf	___awmod@divisor+1
  3484  0E71  160A  118A  203D  120A  158A  	fcall	___awmod
  3485  0E76  0871               	movf	?___awmod+1,w
  3486  0E77  00FA               	movwf	___awdiv@dividend+1
  3487  0E78  0870               	movf	?___awmod,w
  3488  0E79  00F9               	movwf	___awdiv@dividend
  3489  0E7A  160A  118A  2088  120A  158A  	fcall	___awdiv
  3490  0E7F  0877               	movf	?___awdiv,w
  3491  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  3492  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  3493  0E82  00C2               	movwf	??_scale
  3494  0E83  3001               	movlw	1
  3495  0E84                     u4185:	
  3496  0E84  1003               	clrc
  3497  0E85  0DC2               	rlf	??_scale,f
  3498  0E86  3EFF               	addlw	-1
  3499  0E87  1D03               	skipz
  3500  0E88  2E84               	goto	u4185
  3501  0E89  1003               	clrc
  3502  0E8A  0D42               	rlf	??_scale,w
  3503  0E8B  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3504  0E8C  0084               	movwf	4
  3505  0E8D  120A  118A  200D  120A  158A  	fcall	stringdir
  3506  0E92  00C3               	movwf	??_scale+1
  3507  0E93  120A  118A  200D  120A  158A  	fcall	stringdir
  3508  0E98  00C4               	movwf	??_scale+2
  3509  0E99  120A  118A  200D  120A  158A  	fcall	stringdir
  3510  0E9E  00C5               	movwf	??_scale+3
  3511  0E9F  120A  118A  200D  120A  158A  	fcall	stringdir
  3512  0EA4  00C6               	movwf	??_scale+4
  3513  0EA5  0846               	movf	??_scale+4,w
  3514  0EA6  00A7               	movwf	___flmul@b+3
  3515  0EA7  0845               	movf	??_scale+3,w
  3516  0EA8  00A6               	movwf	___flmul@b+2
  3517  0EA9  0844               	movf	??_scale+2,w
  3518  0EAA  00A5               	movwf	___flmul@b+1
  3519  0EAB  0843               	movf	??_scale+1,w
  3520  0EAC  00A4               	movwf	___flmul@b
  3521  0EAD  3064               	movlw	100
  3522  0EAE  00F7               	movwf	___awdiv@divisor
  3523  0EAF  3000               	movlw	0
  3524  0EB0  00F8               	movwf	___awdiv@divisor+1
  3525  0EB1  0850               	movf	scale@scl,w
  3526  0EB2  00F9               	movwf	___awdiv@dividend
  3527  0EB3  01FA               	clrf	___awdiv@dividend+1
  3528  0EB4  1BF9               	btfsc	___awdiv@dividend,7
  3529  0EB5  03FA               	decf	___awdiv@dividend+1,f
  3530  0EB6  160A  118A  2088  120A  158A  	fcall	___awdiv
  3531  0EBB  0877               	movf	?___awdiv,w
  3532  0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  3533  0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  3534  0EBE  00C7               	movwf	??_scale+5
  3535  0EBF  3001               	movlw	1
  3536  0EC0                     u4195:	
  3537  0EC0  1003               	clrc
  3538  0EC1  0DC7               	rlf	??_scale+5,f
  3539  0EC2  3EFF               	addlw	-1
  3540  0EC3  1D03               	skipz
  3541  0EC4  2EC0               	goto	u4195
  3542  0EC5  1003               	clrc
  3543  0EC6  0D47               	rlf	??_scale+5,w
  3544  0EC7  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3545  0EC8  0084               	movwf	4
  3546  0EC9  120A  118A  200D  120A  158A  	fcall	stringdir
  3547  0ECE  00C8               	movwf	??_scale+6
  3548  0ECF  120A  118A  200D  120A  158A  	fcall	stringdir
  3549  0ED4  00C9               	movwf	??_scale+7
  3550  0ED5  120A  118A  200D  120A  158A  	fcall	stringdir
  3551  0EDA  00CA               	movwf	??_scale+8
  3552  0EDB  120A  118A  200D  120A  158A  	fcall	stringdir
  3553  0EE0  00CB               	movwf	??_scale+9
  3554  0EE1  084B               	movf	??_scale+9,w
  3555  0EE2  00AB               	movwf	___flmul@a+3
  3556  0EE3  084A               	movf	??_scale+8,w
  3557  0EE4  00AA               	movwf	___flmul@a+2
  3558  0EE5  0849               	movf	??_scale+7,w
  3559  0EE6  00A9               	movwf	___flmul@a+1
  3560  0EE7  0848               	movf	??_scale+6,w
  3561  0EE8  00A8               	movwf	___flmul@a
  3562  0EE9  120A  158A  21A2  120A  158A  	fcall	___flmul
  3563  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  3564  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  3565  0EF0  0827               	movf	?___flmul+3,w
  3566  0EF1  00CF               	movwf	_scale$772+3
  3567  0EF2  0826               	movf	?___flmul+2,w
  3568  0EF3  00CE               	movwf	_scale$772+2
  3569  0EF4  0825               	movf	?___flmul+1,w
  3570  0EF5  00CD               	movwf	_scale$772+1
  3571  0EF6  0824               	movf	?___flmul,w
  3572  0EF7  00CC               	movwf	_scale$772
  3573                           
  3574                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3575  0EF8  300A               	movlw	10
  3576  0EF9  00F0               	movwf	___awmod@divisor
  3577  0EFA  3000               	movlw	0
  3578  0EFB  00F1               	movwf	___awmod@divisor+1
  3579  0EFC  0850               	movf	scale@scl,w
  3580  0EFD  00F2               	movwf	___awmod@dividend
  3581  0EFE  01F3               	clrf	___awmod@dividend+1
  3582  0EFF  1BF2               	btfsc	___awmod@dividend,7
  3583  0F00  03F3               	decf	___awmod@dividend+1,f
  3584  0F01  160A  118A  203D  120A  158A  	fcall	___awmod
  3585  0F06  0870               	movf	?___awmod,w
  3586  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  3587  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  3588  0F09  00C2               	movwf	??_scale
  3589  0F0A  3001               	movlw	1
  3590  0F0B                     u4205:	
  3591  0F0B  1003               	clrc
  3592  0F0C  0DC2               	rlf	??_scale,f
  3593  0F0D  3EFF               	addlw	-1
  3594  0F0E  1D03               	skipz
  3595  0F0F  2F0B               	goto	u4205
  3596  0F10  1003               	clrc
  3597  0F11  0D42               	rlf	??_scale,w
  3598  0F12  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3599  0F13  0084               	movwf	4
  3600  0F14  120A  118A  200D  120A  158A  	fcall	stringdir
  3601  0F19  00C3               	movwf	??_scale+1
  3602  0F1A  120A  118A  200D  120A  158A  	fcall	stringdir
  3603  0F1F  00C4               	movwf	??_scale+2
  3604  0F20  120A  118A  200D  120A  158A  	fcall	stringdir
  3605  0F25  00C5               	movwf	??_scale+3
  3606  0F26  120A  118A  200D  120A  158A  	fcall	stringdir
  3607  0F2B  00C6               	movwf	??_scale+4
  3608  0F2C  0846               	movf	??_scale+4,w
  3609  0F2D  00A7               	movwf	___flmul@b+3
  3610  0F2E  0845               	movf	??_scale+3,w
  3611  0F2F  00A6               	movwf	___flmul@b+2
  3612  0F30  0844               	movf	??_scale+2,w
  3613  0F31  00A5               	movwf	___flmul@b+1
  3614  0F32  0843               	movf	??_scale+1,w
  3615  0F33  00A4               	movwf	___flmul@b
  3616  0F34  084F               	movf	_scale$772+3,w
  3617  0F35  00AB               	movwf	___flmul@a+3
  3618  0F36  084E               	movf	_scale$772+2,w
  3619  0F37  00AA               	movwf	___flmul@a+2
  3620  0F38  084D               	movf	_scale$772+1,w
  3621  0F39  00A9               	movwf	___flmul@a+1
  3622  0F3A  084C               	movf	_scale$772,w
  3623  0F3B  00A8               	movwf	___flmul@a
  3624  0F3C  120A  158A  21A2   	fcall	___flmul
  3625  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  3626  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  3627  0F41  0827               	movf	?___flmul+3,w
  3628  0F42  00C1               	movwf	?_scale+3
  3629  0F43  0826               	movf	?___flmul+2,w
  3630  0F44  00C0               	movwf	?_scale+2
  3631  0F45  0825               	movf	?___flmul+1,w
  3632  0F46  00BF               	movwf	?_scale+1
  3633  0F47  0824               	movf	?___flmul,w
  3634  0F48  00BE               	movwf	?_scale
  3635  0F49  0008               	return
  3636  0F4A                     l2622:	
  3637  0F4A  0850               	movf	scale@scl,w
  3638  0F4B  3A80               	xorlw	128
  3639  0F4C  3E75               	addlw	-139
  3640  0F4D  1C03               	skipc
  3641  0F4E  2FD5               	goto	l2628
  3642                           
  3643                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3644  0F4F  300A               	movlw	10
  3645  0F50  00F0               	movwf	___awmod@divisor
  3646  0F51  3000               	movlw	0
  3647  0F52  00F1               	movwf	___awmod@divisor+1
  3648  0F53  0850               	movf	scale@scl,w
  3649  0F54  00F2               	movwf	___awmod@dividend
  3650  0F55  01F3               	clrf	___awmod@dividend+1
  3651  0F56  1BF2               	btfsc	___awmod@dividend,7
  3652  0F57  03F3               	decf	___awmod@dividend+1,f
  3653  0F58  160A  118A  203D  120A  158A  	fcall	___awmod
  3654  0F5D  0870               	movf	?___awmod,w
  3655  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  3656  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  3657  0F60  00C2               	movwf	??_scale
  3658  0F61  3001               	movlw	1
  3659  0F62                     u4225:	
  3660  0F62  1003               	clrc
  3661  0F63  0DC2               	rlf	??_scale,f
  3662  0F64  3EFF               	addlw	-1
  3663  0F65  1D03               	skipz
  3664  0F66  2F62               	goto	u4225
  3665  0F67  1003               	clrc
  3666  0F68  0D42               	rlf	??_scale,w
  3667  0F69  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3668  0F6A  0084               	movwf	4
  3669  0F6B  120A  118A  200D  120A  158A  	fcall	stringdir
  3670  0F70  00C3               	movwf	??_scale+1
  3671  0F71  120A  118A  200D  120A  158A  	fcall	stringdir
  3672  0F76  00C4               	movwf	??_scale+2
  3673  0F77  120A  118A  200D  120A  158A  	fcall	stringdir
  3674  0F7C  00C5               	movwf	??_scale+3
  3675  0F7D  120A  118A  200D  120A  158A  	fcall	stringdir
  3676  0F82  00C6               	movwf	??_scale+4
  3677  0F83  0846               	movf	??_scale+4,w
  3678  0F84  00A7               	movwf	___flmul@b+3
  3679  0F85  0845               	movf	??_scale+3,w
  3680  0F86  00A6               	movwf	___flmul@b+2
  3681  0F87  0844               	movf	??_scale+2,w
  3682  0F88  00A5               	movwf	___flmul@b+1
  3683  0F89  0843               	movf	??_scale+1,w
  3684  0F8A  00A4               	movwf	___flmul@b
  3685  0F8B  300A               	movlw	10
  3686  0F8C  00F7               	movwf	___awdiv@divisor
  3687  0F8D  3000               	movlw	0
  3688  0F8E  00F8               	movwf	___awdiv@divisor+1
  3689  0F8F  0850               	movf	scale@scl,w
  3690  0F90  00F9               	movwf	___awdiv@dividend
  3691  0F91  01FA               	clrf	___awdiv@dividend+1
  3692  0F92  1BF9               	btfsc	___awdiv@dividend,7
  3693  0F93  03FA               	decf	___awdiv@dividend+1,f
  3694  0F94  160A  118A  2088  120A  158A  	fcall	___awdiv
  3695  0F99  0877               	movf	?___awdiv,w
  3696  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  3697  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  3698  0F9C  00C7               	movwf	??_scale+5
  3699  0F9D  3001               	movlw	1
  3700  0F9E                     u4235:	
  3701  0F9E  1003               	clrc
  3702  0F9F  0DC7               	rlf	??_scale+5,f
  3703  0FA0  3EFF               	addlw	-1
  3704  0FA1  1D03               	skipz
  3705  0FA2  2F9E               	goto	u4235
  3706  0FA3  1003               	clrc
  3707  0FA4  0D47               	rlf	??_scale+5,w
  3708  0FA5  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3709  0FA6  0084               	movwf	4
  3710  0FA7  120A  118A  200D  120A  158A  	fcall	stringdir
  3711  0FAC  00C8               	movwf	??_scale+6
  3712  0FAD  120A  118A  200D  120A  158A  	fcall	stringdir
  3713  0FB2  00C9               	movwf	??_scale+7
  3714  0FB3  120A  118A  200D  120A  158A  	fcall	stringdir
  3715  0FB8  00CA               	movwf	??_scale+8
  3716  0FB9  120A  118A  200D  120A  158A  	fcall	stringdir
  3717  0FBE  00CB               	movwf	??_scale+9
  3718  0FBF  084B               	movf	??_scale+9,w
  3719  0FC0  00AB               	movwf	___flmul@a+3
  3720  0FC1  084A               	movf	??_scale+8,w
  3721  0FC2  00AA               	movwf	___flmul@a+2
  3722  0FC3  0849               	movf	??_scale+7,w
  3723  0FC4  00A9               	movwf	___flmul@a+1
  3724  0FC5  0848               	movf	??_scale+6,w
  3725  0FC6  00A8               	movwf	___flmul@a
  3726  0FC7  120A  158A  21A2   	fcall	___flmul
  3727  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  3728  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  3729  0FCC  0827               	movf	?___flmul+3,w
  3730  0FCD  00C1               	movwf	?_scale+3
  3731  0FCE  0826               	movf	?___flmul+2,w
  3732  0FCF  00C0               	movwf	?_scale+2
  3733  0FD0  0825               	movf	?___flmul+1,w
  3734  0FD1  00BF               	movwf	?_scale+1
  3735  0FD2  0824               	movf	?___flmul,w
  3736  0FD3  00BE               	movwf	?_scale
  3737  0FD4  0008               	return
  3738  0FD5                     l2628:	
  3739                           
  3740                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  3741  0FD5  0850               	movf	scale@scl,w
  3742  0FD6  00C2               	movwf	??_scale
  3743  0FD7  3001               	movlw	1
  3744  0FD8                     u4245:	
  3745  0FD8  1003               	clrc
  3746  0FD9  0DC2               	rlf	??_scale,f
  3747  0FDA  3EFF               	addlw	-1
  3748  0FDB  1D03               	skipz
  3749  0FDC  2FD8               	goto	u4245
  3750  0FDD  1003               	clrc
  3751  0FDE  0D42               	rlf	??_scale,w
  3752  0FDF  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3753  0FE0  0084               	movwf	4
  3754  0FE1  120A  118A  200D  120A  158A  	fcall	stringdir
  3755  0FE6  00C3               	movwf	??_scale+1
  3756  0FE7  120A  118A  200D  120A  158A  	fcall	stringdir
  3757  0FEC  00C4               	movwf	??_scale+2
  3758  0FED  120A  118A  200D  120A  158A  	fcall	stringdir
  3759  0FF2  00C5               	movwf	??_scale+3
  3760  0FF3  120A  118A  200D   	fcall	stringdir
  3761  0FF6  00C6               	movwf	??_scale+4
  3762  0FF7  0846               	movf	??_scale+4,w
  3763  0FF8  00C1               	movwf	?_scale+3
  3764  0FF9  0845               	movf	??_scale+3,w
  3765  0FFA  00C0               	movwf	?_scale+2
  3766  0FFB  0844               	movf	??_scale+2,w
  3767  0FFC  00BF               	movwf	?_scale+1
  3768  0FFD  0843               	movf	??_scale+1,w
  3769  0FFE  00BE               	movwf	?_scale
  3770  0FFF  0008               	return
  3771  1000                     __end_of_scale:	
  3772                           
  3773                           	psect	text3
  3774  103D                     __ptext3:	
  3775 ;; *************** function ___awmod *****************
  3776 ;; Defined at:
  3777 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;  divisor         2    0[COMMON] int 
  3780 ;;  dividend        2    2[COMMON] int 
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;  sign            1    6[COMMON] unsigned char 
  3783 ;;  counter         1    5[COMMON] unsigned char 
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  2    0[COMMON] int 
  3786 ;; Registers used:
  3787 ;;		wreg, status,2, status,0
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3793 ;;      Params:         4       0       0       0       0
  3794 ;;      Locals:         2       0       0       0       0
  3795 ;;      Temps:          1       0       0       0       0
  3796 ;;      Totals:         7       0       0       0       0
  3797 ;;Total ram usage:        7 bytes
  3798 ;; Hardware stack levels used:    1
  3799 ;; This function calls:
  3800 ;;		Nothing
  3801 ;; This function is called by:
  3802 ;;		_scale
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           
  3806                           
  3807                           ;psect for function ___awmod
  3808  103D                     ___awmod:	
  3809                           
  3810                           ;incstack = 0
  3811                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3812  103D  01F6               	clrf	___awmod@sign
  3813  103E  1FF3               	btfss	___awmod@dividend+1,7
  3814  103F  2847               	goto	l2132
  3815  1040  09F2               	comf	___awmod@dividend,f
  3816  1041  09F3               	comf	___awmod@dividend+1,f
  3817  1042  0AF2               	incf	___awmod@dividend,f
  3818  1043  1903               	skipnz
  3819  1044  0AF3               	incf	___awmod@dividend+1,f
  3820  1045  01F6               	clrf	___awmod@sign
  3821  1046  0AF6               	incf	___awmod@sign,f
  3822  1047                     l2132:	
  3823  1047  1FF1               	btfss	___awmod@divisor+1,7
  3824  1048  284E               	goto	l2136
  3825  1049  09F0               	comf	___awmod@divisor,f
  3826  104A  09F1               	comf	___awmod@divisor+1,f
  3827  104B  0AF0               	incf	___awmod@divisor,f
  3828  104C  1903               	skipnz
  3829  104D  0AF1               	incf	___awmod@divisor+1,f
  3830  104E                     l2136:	
  3831  104E  0870               	movf	___awmod@divisor,w
  3832  104F  0471               	iorwf	___awmod@divisor+1,w
  3833  1050  1903               	btfsc	3,2
  3834  1051  287B               	goto	l2154
  3835  1052  01F5               	clrf	___awmod@counter
  3836  1053  0AF5               	incf	___awmod@counter,f
  3837  1054                     l2144:	
  3838  1054  1BF1               	btfsc	___awmod@divisor+1,7
  3839  1055  2862               	goto	l2146
  3840  1056  3001               	movlw	1
  3841  1057                     u2975:	
  3842  1057  1003               	clrc
  3843  1058  0DF0               	rlf	___awmod@divisor,f
  3844  1059  0DF1               	rlf	___awmod@divisor+1,f
  3845  105A  3EFF               	addlw	-1
  3846  105B  1D03               	skipz
  3847  105C  2857               	goto	u2975
  3848  105D  3001               	movlw	1
  3849  105E  00F4               	movwf	??___awmod
  3850  105F  0874               	movf	??___awmod,w
  3851  1060  07F5               	addwf	___awmod@counter,f
  3852  1061  2854               	goto	l2144
  3853  1062                     l2146:	
  3854  1062  0871               	movf	___awmod@divisor+1,w
  3855  1063  0273               	subwf	___awmod@dividend+1,w
  3856  1064  1D03               	skipz
  3857  1065  2868               	goto	u2995
  3858  1066  0870               	movf	___awmod@divisor,w
  3859  1067  0272               	subwf	___awmod@dividend,w
  3860  1068                     u2995:	
  3861  1068  1C03               	skipc
  3862  1069  2870               	goto	l2150
  3863  106A  0870               	movf	___awmod@divisor,w
  3864  106B  02F2               	subwf	___awmod@dividend,f
  3865  106C  0871               	movf	___awmod@divisor+1,w
  3866  106D  1C03               	skipc
  3867  106E  03F3               	decf	___awmod@dividend+1,f
  3868  106F  02F3               	subwf	___awmod@dividend+1,f
  3869  1070                     l2150:	
  3870  1070  3001               	movlw	1
  3871  1071                     u3005:	
  3872  1071  1003               	clrc
  3873  1072  0CF1               	rrf	___awmod@divisor+1,f
  3874  1073  0CF0               	rrf	___awmod@divisor,f
  3875  1074  3EFF               	addlw	-1
  3876  1075  1D03               	skipz
  3877  1076  2871               	goto	u3005
  3878  1077  3001               	movlw	1
  3879  1078  02F5               	subwf	___awmod@counter,f
  3880  1079  1D03               	btfss	3,2
  3881  107A  2862               	goto	l2146
  3882  107B                     l2154:	
  3883  107B  0876               	movf	___awmod@sign,w
  3884  107C  1903               	btfsc	3,2
  3885  107D  2883               	goto	l2158
  3886  107E  09F2               	comf	___awmod@dividend,f
  3887  107F  09F3               	comf	___awmod@dividend+1,f
  3888  1080  0AF2               	incf	___awmod@dividend,f
  3889  1081  1903               	skipnz
  3890  1082  0AF3               	incf	___awmod@dividend+1,f
  3891  1083                     l2158:	
  3892  1083  0873               	movf	___awmod@dividend+1,w
  3893  1084  00F1               	movwf	?___awmod+1
  3894  1085  0872               	movf	___awmod@dividend,w
  3895  1086  00F0               	movwf	?___awmod
  3896  1087  0008               	return
  3897  1088                     __end_of___awmod:	
  3898                           
  3899                           	psect	text4
  3900  1088                     __ptext4:	
  3901 ;; *************** function ___awdiv *****************
  3902 ;; Defined at:
  3903 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;  divisor         2    7[COMMON] int 
  3906 ;;  dividend        2    9[COMMON] int 
  3907 ;; Auto vars:     Size  Location     Type
  3908 ;;  quotient        2    2[BANK0 ] int 
  3909 ;;  sign            1    1[BANK0 ] unsigned char 
  3910 ;;  counter         1    0[BANK0 ] unsigned char 
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  2    7[COMMON] int 
  3913 ;; Registers used:
  3914 ;;		wreg, status,2, status,0
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3920 ;;      Params:         4       0       0       0       0
  3921 ;;      Locals:         0       4       0       0       0
  3922 ;;      Temps:          1       0       0       0       0
  3923 ;;      Totals:         5       4       0       0       0
  3924 ;;Total ram usage:        9 bytes
  3925 ;; Hardware stack levels used:    1
  3926 ;; This function calls:
  3927 ;;		Nothing
  3928 ;; This function is called by:
  3929 ;;		_scale
  3930 ;;		_sprintf
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934                           
  3935                           ;psect for function ___awdiv
  3936  1088                     ___awdiv:	
  3937                           
  3938                           ;incstack = 0
  3939                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3940  1088  1283               	bcf	3,5	;RP0=0, select bank0
  3941  1089  1303               	bcf	3,6	;RP1=0, select bank0
  3942  108A  01A1               	clrf	___awdiv@sign
  3943  108B  1FF8               	btfss	___awdiv@divisor+1,7
  3944  108C  2894               	goto	l2088
  3945  108D  09F7               	comf	___awdiv@divisor,f
  3946  108E  09F8               	comf	___awdiv@divisor+1,f
  3947  108F  0AF7               	incf	___awdiv@divisor,f
  3948  1090  1903               	skipnz
  3949  1091  0AF8               	incf	___awdiv@divisor+1,f
  3950  1092  01A1               	clrf	___awdiv@sign
  3951  1093  0AA1               	incf	___awdiv@sign,f
  3952  1094                     l2088:	
  3953  1094  1FFA               	btfss	___awdiv@dividend+1,7
  3954  1095  289F               	goto	l2094
  3955  1096  09F9               	comf	___awdiv@dividend,f
  3956  1097  09FA               	comf	___awdiv@dividend+1,f
  3957  1098  0AF9               	incf	___awdiv@dividend,f
  3958  1099  1903               	skipnz
  3959  109A  0AFA               	incf	___awdiv@dividend+1,f
  3960  109B  3001               	movlw	1
  3961  109C  00FB               	movwf	??___awdiv
  3962  109D  087B               	movf	??___awdiv,w
  3963  109E  06A1               	xorwf	___awdiv@sign,f
  3964  109F                     l2094:	
  3965  109F  01A2               	clrf	___awdiv@quotient
  3966  10A0  01A3               	clrf	___awdiv@quotient+1
  3967  10A1  0877               	movf	___awdiv@divisor,w
  3968  10A2  0478               	iorwf	___awdiv@divisor+1,w
  3969  10A3  1903               	btfsc	3,2
  3970  10A4  28D6               	goto	l2116
  3971  10A5  01A0               	clrf	___awdiv@counter
  3972  10A6  0AA0               	incf	___awdiv@counter,f
  3973  10A7                     l2104:	
  3974  10A7  1BF8               	btfsc	___awdiv@divisor+1,7
  3975  10A8  28B5               	goto	l2106
  3976  10A9  3001               	movlw	1
  3977  10AA                     u2875:	
  3978  10AA  1003               	clrc
  3979  10AB  0DF7               	rlf	___awdiv@divisor,f
  3980  10AC  0DF8               	rlf	___awdiv@divisor+1,f
  3981  10AD  3EFF               	addlw	-1
  3982  10AE  1D03               	skipz
  3983  10AF  28AA               	goto	u2875
  3984  10B0  3001               	movlw	1
  3985  10B1  00FB               	movwf	??___awdiv
  3986  10B2  087B               	movf	??___awdiv,w
  3987  10B3  07A0               	addwf	___awdiv@counter,f
  3988  10B4  28A7               	goto	l2104
  3989  10B5                     l2106:	
  3990  10B5  3001               	movlw	1
  3991  10B6                     u2895:	
  3992  10B6  1003               	clrc
  3993  10B7  0DA2               	rlf	___awdiv@quotient,f
  3994  10B8  0DA3               	rlf	___awdiv@quotient+1,f
  3995  10B9  3EFF               	addlw	-1
  3996  10BA  1D03               	skipz
  3997  10BB  28B6               	goto	u2895
  3998  10BC  0878               	movf	___awdiv@divisor+1,w
  3999  10BD  027A               	subwf	___awdiv@dividend+1,w
  4000  10BE  1D03               	skipz
  4001  10BF  28C2               	goto	u2905
  4002  10C0  0877               	movf	___awdiv@divisor,w
  4003  10C1  0279               	subwf	___awdiv@dividend,w
  4004  10C2                     u2905:	
  4005  10C2  1C03               	skipc
  4006  10C3  28CB               	goto	l2112
  4007  10C4  0877               	movf	___awdiv@divisor,w
  4008  10C5  02F9               	subwf	___awdiv@dividend,f
  4009  10C6  0878               	movf	___awdiv@divisor+1,w
  4010  10C7  1C03               	skipc
  4011  10C8  03FA               	decf	___awdiv@dividend+1,f
  4012  10C9  02FA               	subwf	___awdiv@dividend+1,f
  4013  10CA  1422               	bsf	___awdiv@quotient,0
  4014  10CB                     l2112:	
  4015  10CB  3001               	movlw	1
  4016  10CC                     u2915:	
  4017  10CC  1003               	clrc
  4018  10CD  0CF8               	rrf	___awdiv@divisor+1,f
  4019  10CE  0CF7               	rrf	___awdiv@divisor,f
  4020  10CF  3EFF               	addlw	-1
  4021  10D0  1D03               	skipz
  4022  10D1  28CC               	goto	u2915
  4023  10D2  3001               	movlw	1
  4024  10D3  02A0               	subwf	___awdiv@counter,f
  4025  10D4  1D03               	btfss	3,2
  4026  10D5  28B5               	goto	l2106
  4027  10D6                     l2116:	
  4028  10D6  0821               	movf	___awdiv@sign,w
  4029  10D7  1903               	btfsc	3,2
  4030  10D8  28DE               	goto	l2120
  4031  10D9  09A2               	comf	___awdiv@quotient,f
  4032  10DA  09A3               	comf	___awdiv@quotient+1,f
  4033  10DB  0AA2               	incf	___awdiv@quotient,f
  4034  10DC  1903               	skipnz
  4035  10DD  0AA3               	incf	___awdiv@quotient+1,f
  4036  10DE                     l2120:	
  4037  10DE  0823               	movf	___awdiv@quotient+1,w
  4038  10DF  00F8               	movwf	?___awdiv+1
  4039  10E0  0822               	movf	___awdiv@quotient,w
  4040  10E1  00F7               	movwf	?___awdiv
  4041  10E2  0008               	return
  4042  10E3                     __end_of___awdiv:	
  4043                           
  4044                           	psect	text5
  4045  1E21                     __ptext5:	
  4046 ;; *************** function _isdigit *****************
  4047 ;; Defined at:
  4048 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  4049 ;; Parameters:    Size  Location     Type
  4050 ;;  c               1    wreg     unsigned char 
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;  c               1    1[COMMON] unsigned char 
  4053 ;; Return value:  Size  Location     Type
  4054 ;;		None               void
  4055 ;; Registers used:
  4056 ;;		wreg, status,2, status,0
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4062 ;;      Params:         0       0       0       0       0
  4063 ;;      Locals:         2       0       0       0       0
  4064 ;;      Temps:          0       0       0       0       0
  4065 ;;      Totals:         2       0       0       0       0
  4066 ;;Total ram usage:        2 bytes
  4067 ;; Hardware stack levels used:    1
  4068 ;; This function calls:
  4069 ;;		Nothing
  4070 ;; This function is called by:
  4071 ;;		_sprintf
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075                           
  4076                           ;psect for function _isdigit
  4077  1E21                     _isdigit:	
  4078                           
  4079                           ;incstack = 0
  4080                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4081                           ;isdigit@c stored from wreg
  4082  1E21  00F1               	movwf	isdigit@c
  4083  1E22  01F0               	clrf	_isdigit$585
  4084  1E23  303A               	movlw	58
  4085  1E24  0271               	subwf	isdigit@c,w
  4086  1E25  1803               	skipnc
  4087  1E26  2E2D               	goto	l2640
  4088  1E27  3030               	movlw	48
  4089  1E28  0271               	subwf	isdigit@c,w
  4090  1E29  1C03               	skipc
  4091  1E2A  2E2D               	goto	l2640
  4092  1E2B  01F0               	clrf	_isdigit$585
  4093  1E2C  0AF0               	incf	_isdigit$585,f
  4094  1E2D                     l2640:	
  4095  1E2D  0C70               	rrf	_isdigit$585,w
  4096  1E2E  0008               	return
  4097  1E2F                     __end_of_isdigit:	
  4098                           
  4099                           	psect	text6
  4100  13D0                     __ptext6:	
  4101 ;; *************** function _fround *****************
  4102 ;; Defined at:
  4103 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;  prec            1    wreg     unsigned char 
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;  prec            1   49[BANK0 ] unsigned char 
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  4   30[BANK0 ] unsigned char 
  4110 ;; Registers used:
  4111 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4117 ;;      Params:         0       4       0       0       0
  4118 ;;      Locals:         0       9       0       0       0
  4119 ;;      Temps:          0       7       0       0       0
  4120 ;;      Totals:         0      20       0       0       0
  4121 ;;Total ram usage:       20 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; Hardware stack levels required when called:    2
  4124 ;; This function calls:
  4125 ;;		___flmul
  4126 ;;		___lwdiv
  4127 ;;		___lwmod
  4128 ;; This function is called by:
  4129 ;;		_sprintf
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133                           
  4134                           ;psect for function _fround
  4135  13D0                     _fround:	
  4136                           
  4137                           ;incstack = 0
  4138                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4139                           ;fround@prec stored from wreg
  4140  13D0  1283               	bcf	3,5	;RP0=0, select bank0
  4141  13D1  1303               	bcf	3,6	;RP1=0, select bank0
  4142  13D2  00D1               	movwf	fround@prec
  4143                           
  4144                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  4145  13D3  306E               	movlw	110
  4146  13D4  0251               	subwf	fround@prec,w
  4147  13D5  1C03               	skipc
  4148  13D6  2CE2               	goto	l2582
  4149                           
  4150                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4151  13D7  303F               	movlw	63
  4152  13D8  00A7               	movwf	___flmul@b+3
  4153  13D9  3000               	movlw	0
  4154  13DA  00A6               	movwf	___flmul@b+2
  4155  13DB  3000               	movlw	0
  4156  13DC  00A5               	movwf	___flmul@b+1
  4157  13DD  3000               	movlw	0
  4158  13DE  00A4               	movwf	___flmul@b
  4159  13DF  3064               	movlw	100
  4160  13E0  00F6               	movwf	___lwdiv@divisor
  4161  13E1  3000               	movlw	0
  4162  13E2  00F7               	movwf	___lwdiv@divisor+1
  4163  13E3  0851               	movf	fround@prec,w
  4164  13E4  00C2               	movwf	??_fround
  4165  13E5  01C3               	clrf	??_fround+1
  4166  13E6  0842               	movf	??_fround,w
  4167  13E7  00F8               	movwf	___lwdiv@dividend
  4168  13E8  0843               	movf	??_fround+1,w
  4169  13E9  00F9               	movwf	___lwdiv@dividend+1
  4170  13EA  160A  158A  2732  160A  118A  	fcall	___lwdiv
  4171  13EF  0876               	movf	?___lwdiv,w
  4172  13F0  1283               	bcf	3,5	;RP0=0, select bank0
  4173  13F1  1303               	bcf	3,6	;RP1=0, select bank0
  4174  13F2  00C4               	movwf	??_fround+2
  4175  13F3  3001               	movlw	1
  4176  13F4                     u4015:	
  4177  13F4  1003               	clrc
  4178  13F5  0DC4               	rlf	??_fround+2,f
  4179  13F6  3EFF               	addlw	-1
  4180  13F7  1D03               	skipz
  4181  13F8  2BF4               	goto	u4015
  4182  13F9  1003               	clrc
  4183  13FA  0D44               	rlf	??_fround+2,w
  4184  13FB  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4185  13FC  0084               	movwf	4
  4186  13FD  120A  118A  200D  160A  118A  	fcall	stringdir
  4187  1402  00C5               	movwf	??_fround+3
  4188  1403  120A  118A  200D  160A  118A  	fcall	stringdir
  4189  1408  00C6               	movwf	??_fround+4
  4190  1409  120A  118A  200D  160A  118A  	fcall	stringdir
  4191  140E  00C7               	movwf	??_fround+5
  4192  140F  120A  118A  200D  160A  118A  	fcall	stringdir
  4193  1414  00C8               	movwf	??_fround+6
  4194  1415  0848               	movf	??_fround+6,w
  4195  1416  00AB               	movwf	___flmul@a+3
  4196  1417  0847               	movf	??_fround+5,w
  4197  1418  00AA               	movwf	___flmul@a+2
  4198  1419  0846               	movf	??_fround+4,w
  4199  141A  00A9               	movwf	___flmul@a+1
  4200  141B  0845               	movf	??_fround+3,w
  4201  141C  00A8               	movwf	___flmul@a
  4202  141D  120A  158A  21A2  160A  118A  	fcall	___flmul
  4203  1422  1283               	bcf	3,5	;RP0=0, select bank0
  4204  1423  1303               	bcf	3,6	;RP1=0, select bank0
  4205  1424  0827               	movf	?___flmul+3,w
  4206  1425  00D0               	movwf	_fround$770+3
  4207  1426  0826               	movf	?___flmul+2,w
  4208  1427  00CF               	movwf	_fround$770+2
  4209  1428  0825               	movf	?___flmul+1,w
  4210  1429  00CE               	movwf	_fround$770+1
  4211  142A  0824               	movf	?___flmul,w
  4212  142B  00CD               	movwf	_fround$770
  4213                           
  4214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4215  142C  300A               	movlw	10
  4216  142D  00F6               	movwf	___lwdiv@divisor
  4217  142E  3000               	movlw	0
  4218  142F  00F7               	movwf	___lwdiv@divisor+1
  4219  1430  0851               	movf	fround@prec,w
  4220  1431  00C2               	movwf	??_fround
  4221  1432  01C3               	clrf	??_fround+1
  4222  1433  0842               	movf	??_fround,w
  4223  1434  00F2               	movwf	___lwmod@dividend
  4224  1435  0843               	movf	??_fround+1,w
  4225  1436  00F3               	movwf	___lwmod@dividend+1
  4226  1437  3064               	movlw	100
  4227  1438  00F0               	movwf	___lwmod@divisor
  4228  1439  3000               	movlw	0
  4229  143A  00F1               	movwf	___lwmod@divisor+1
  4230  143B  160A  158A  26C9  160A  118A  	fcall	___lwmod
  4231  1440  0871               	movf	?___lwmod+1,w
  4232  1441  00F9               	movwf	___lwdiv@dividend+1
  4233  1442  0870               	movf	?___lwmod,w
  4234  1443  00F8               	movwf	___lwdiv@dividend
  4235  1444  160A  158A  2732  160A  118A  	fcall	___lwdiv
  4236  1449  0876               	movf	?___lwdiv,w
  4237  144A  1283               	bcf	3,5	;RP0=0, select bank0
  4238  144B  1303               	bcf	3,6	;RP1=0, select bank0
  4239  144C  00C4               	movwf	??_fround+2
  4240  144D  3001               	movlw	1
  4241  144E                     u4025:	
  4242  144E  1003               	clrc
  4243  144F  0DC4               	rlf	??_fround+2,f
  4244  1450  3EFF               	addlw	-1
  4245  1451  1D03               	skipz
  4246  1452  2C4E               	goto	u4025
  4247  1453  1003               	clrc
  4248  1454  0D44               	rlf	??_fround+2,w
  4249  1455  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4250  1456  0084               	movwf	4
  4251  1457  120A  118A  200D  160A  118A  	fcall	stringdir
  4252  145C  00C5               	movwf	??_fround+3
  4253  145D  120A  118A  200D  160A  118A  	fcall	stringdir
  4254  1462  00C6               	movwf	??_fround+4
  4255  1463  120A  118A  200D  160A  118A  	fcall	stringdir
  4256  1468  00C7               	movwf	??_fround+5
  4257  1469  120A  118A  200D  160A  118A  	fcall	stringdir
  4258  146E  00C8               	movwf	??_fround+6
  4259  146F  0848               	movf	??_fround+6,w
  4260  1470  00A7               	movwf	___flmul@b+3
  4261  1471  0847               	movf	??_fround+5,w
  4262  1472  00A6               	movwf	___flmul@b+2
  4263  1473  0846               	movf	??_fround+4,w
  4264  1474  00A5               	movwf	___flmul@b+1
  4265  1475  0845               	movf	??_fround+3,w
  4266  1476  00A4               	movwf	___flmul@b
  4267  1477  0850               	movf	_fround$770+3,w
  4268  1478  00AB               	movwf	___flmul@a+3
  4269  1479  084F               	movf	_fround$770+2,w
  4270  147A  00AA               	movwf	___flmul@a+2
  4271  147B  084E               	movf	_fround$770+1,w
  4272  147C  00A9               	movwf	___flmul@a+1
  4273  147D  084D               	movf	_fround$770,w
  4274  147E  00A8               	movwf	___flmul@a
  4275  147F  120A  158A  21A2  160A  118A  	fcall	___flmul
  4276  1484  1283               	bcf	3,5	;RP0=0, select bank0
  4277  1485  1303               	bcf	3,6	;RP1=0, select bank0
  4278  1486  0827               	movf	?___flmul+3,w
  4279  1487  00CC               	movwf	_fround$771+3
  4280  1488  0826               	movf	?___flmul+2,w
  4281  1489  00CB               	movwf	_fround$771+2
  4282  148A  0825               	movf	?___flmul+1,w
  4283  148B  00CA               	movwf	_fround$771+1
  4284  148C  0824               	movf	?___flmul,w
  4285  148D  00C9               	movwf	_fround$771
  4286                           
  4287                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4288  148E  300A               	movlw	10
  4289  148F  00F0               	movwf	___lwmod@divisor
  4290  1490  3000               	movlw	0
  4291  1491  00F1               	movwf	___lwmod@divisor+1
  4292  1492  0851               	movf	fround@prec,w
  4293  1493  00C2               	movwf	??_fround
  4294  1494  01C3               	clrf	??_fround+1
  4295  1495  0842               	movf	??_fround,w
  4296  1496  00F2               	movwf	___lwmod@dividend
  4297  1497  0843               	movf	??_fround+1,w
  4298  1498  00F3               	movwf	___lwmod@dividend+1
  4299  1499  160A  158A  26C9  160A  118A  	fcall	___lwmod
  4300  149E  0870               	movf	?___lwmod,w
  4301  149F  1283               	bcf	3,5	;RP0=0, select bank0
  4302  14A0  1303               	bcf	3,6	;RP1=0, select bank0
  4303  14A1  00C4               	movwf	??_fround+2
  4304  14A2  3001               	movlw	1
  4305  14A3                     u4035:	
  4306  14A3  1003               	clrc
  4307  14A4  0DC4               	rlf	??_fround+2,f
  4308  14A5  3EFF               	addlw	-1
  4309  14A6  1D03               	skipz
  4310  14A7  2CA3               	goto	u4035
  4311  14A8  1003               	clrc
  4312  14A9  0D44               	rlf	??_fround+2,w
  4313  14AA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4314  14AB  0084               	movwf	4
  4315  14AC  120A  118A  200D  160A  118A  	fcall	stringdir
  4316  14B1  00C5               	movwf	??_fround+3
  4317  14B2  120A  118A  200D  160A  118A  	fcall	stringdir
  4318  14B7  00C6               	movwf	??_fround+4
  4319  14B8  120A  118A  200D  160A  118A  	fcall	stringdir
  4320  14BD  00C7               	movwf	??_fround+5
  4321  14BE  120A  118A  200D  160A  118A  	fcall	stringdir
  4322  14C3  00C8               	movwf	??_fround+6
  4323  14C4  0848               	movf	??_fround+6,w
  4324  14C5  00A7               	movwf	___flmul@b+3
  4325  14C6  0847               	movf	??_fround+5,w
  4326  14C7  00A6               	movwf	___flmul@b+2
  4327  14C8  0846               	movf	??_fround+4,w
  4328  14C9  00A5               	movwf	___flmul@b+1
  4329  14CA  0845               	movf	??_fround+3,w
  4330  14CB  00A4               	movwf	___flmul@b
  4331  14CC  084C               	movf	_fround$771+3,w
  4332  14CD  00AB               	movwf	___flmul@a+3
  4333  14CE  084B               	movf	_fround$771+2,w
  4334  14CF  00AA               	movwf	___flmul@a+2
  4335  14D0  084A               	movf	_fround$771+1,w
  4336  14D1  00A9               	movwf	___flmul@a+1
  4337  14D2  0849               	movf	_fround$771,w
  4338  14D3  00A8               	movwf	___flmul@a
  4339  14D4  120A  158A  21A2   	fcall	___flmul
  4340  14D7  1283               	bcf	3,5	;RP0=0, select bank0
  4341  14D8  1303               	bcf	3,6	;RP1=0, select bank0
  4342  14D9  0827               	movf	?___flmul+3,w
  4343  14DA  00C1               	movwf	?_fround+3
  4344  14DB  0826               	movf	?___flmul+2,w
  4345  14DC  00C0               	movwf	?_fround+2
  4346  14DD  0825               	movf	?___flmul+1,w
  4347  14DE  00BF               	movwf	?_fround+1
  4348  14DF  0824               	movf	?___flmul,w
  4349  14E0  00BE               	movwf	?_fround
  4350  14E1  0008               	return
  4351  14E2                     l2582:	
  4352  14E2  300B               	movlw	11
  4353  14E3  0251               	subwf	fround@prec,w
  4354  14E4  1C03               	skipc
  4355  14E5  2D8F               	goto	l2588
  4356                           
  4357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4358  14E6  303F               	movlw	63
  4359  14E7  00A7               	movwf	___flmul@b+3
  4360  14E8  3000               	movlw	0
  4361  14E9  00A6               	movwf	___flmul@b+2
  4362  14EA  3000               	movlw	0
  4363  14EB  00A5               	movwf	___flmul@b+1
  4364  14EC  3000               	movlw	0
  4365  14ED  00A4               	movwf	___flmul@b
  4366  14EE  300A               	movlw	10
  4367  14EF  00F6               	movwf	___lwdiv@divisor
  4368  14F0  3000               	movlw	0
  4369  14F1  00F7               	movwf	___lwdiv@divisor+1
  4370  14F2  0851               	movf	fround@prec,w
  4371  14F3  00C2               	movwf	??_fround
  4372  14F4  01C3               	clrf	??_fround+1
  4373  14F5  0842               	movf	??_fround,w
  4374  14F6  00F8               	movwf	___lwdiv@dividend
  4375  14F7  0843               	movf	??_fround+1,w
  4376  14F8  00F9               	movwf	___lwdiv@dividend+1
  4377  14F9  160A  158A  2732  160A  118A  	fcall	___lwdiv
  4378  14FE  0876               	movf	?___lwdiv,w
  4379  14FF  1283               	bcf	3,5	;RP0=0, select bank0
  4380  1500  1303               	bcf	3,6	;RP1=0, select bank0
  4381  1501  00C4               	movwf	??_fround+2
  4382  1502  3001               	movlw	1
  4383  1503                     u4055:	
  4384  1503  1003               	clrc
  4385  1504  0DC4               	rlf	??_fround+2,f
  4386  1505  3EFF               	addlw	-1
  4387  1506  1D03               	skipz
  4388  1507  2D03               	goto	u4055
  4389  1508  1003               	clrc
  4390  1509  0D44               	rlf	??_fround+2,w
  4391  150A  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4392  150B  0084               	movwf	4
  4393  150C  120A  118A  200D  160A  118A  	fcall	stringdir
  4394  1511  00C5               	movwf	??_fround+3
  4395  1512  120A  118A  200D  160A  118A  	fcall	stringdir
  4396  1517  00C6               	movwf	??_fround+4
  4397  1518  120A  118A  200D  160A  118A  	fcall	stringdir
  4398  151D  00C7               	movwf	??_fround+5
  4399  151E  120A  118A  200D  160A  118A  	fcall	stringdir
  4400  1523  00C8               	movwf	??_fround+6
  4401  1524  0848               	movf	??_fround+6,w
  4402  1525  00AB               	movwf	___flmul@a+3
  4403  1526  0847               	movf	??_fround+5,w
  4404  1527  00AA               	movwf	___flmul@a+2
  4405  1528  0846               	movf	??_fround+4,w
  4406  1529  00A9               	movwf	___flmul@a+1
  4407  152A  0845               	movf	??_fround+3,w
  4408  152B  00A8               	movwf	___flmul@a
  4409  152C  120A  158A  21A2  160A  118A  	fcall	___flmul
  4410  1531  1283               	bcf	3,5	;RP0=0, select bank0
  4411  1532  1303               	bcf	3,6	;RP1=0, select bank0
  4412  1533  0827               	movf	?___flmul+3,w
  4413  1534  00D0               	movwf	_fround$770+3
  4414  1535  0826               	movf	?___flmul+2,w
  4415  1536  00CF               	movwf	_fround$770+2
  4416  1537  0825               	movf	?___flmul+1,w
  4417  1538  00CE               	movwf	_fround$770+1
  4418  1539  0824               	movf	?___flmul,w
  4419  153A  00CD               	movwf	_fround$770
  4420                           
  4421                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4422  153B  300A               	movlw	10
  4423  153C  00F0               	movwf	___lwmod@divisor
  4424  153D  3000               	movlw	0
  4425  153E  00F1               	movwf	___lwmod@divisor+1
  4426  153F  0851               	movf	fround@prec,w
  4427  1540  00C2               	movwf	??_fround
  4428  1541  01C3               	clrf	??_fround+1
  4429  1542  0842               	movf	??_fround,w
  4430  1543  00F2               	movwf	___lwmod@dividend
  4431  1544  0843               	movf	??_fround+1,w
  4432  1545  00F3               	movwf	___lwmod@dividend+1
  4433  1546  160A  158A  26C9  160A  118A  	fcall	___lwmod
  4434  154B  0870               	movf	?___lwmod,w
  4435  154C  1283               	bcf	3,5	;RP0=0, select bank0
  4436  154D  1303               	bcf	3,6	;RP1=0, select bank0
  4437  154E  00C4               	movwf	??_fround+2
  4438  154F  3001               	movlw	1
  4439  1550                     u4065:	
  4440  1550  1003               	clrc
  4441  1551  0DC4               	rlf	??_fround+2,f
  4442  1552  3EFF               	addlw	-1
  4443  1553  1D03               	skipz
  4444  1554  2D50               	goto	u4065
  4445  1555  1003               	clrc
  4446  1556  0D44               	rlf	??_fround+2,w
  4447  1557  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4448  1558  0084               	movwf	4
  4449  1559  120A  118A  200D  160A  118A  	fcall	stringdir
  4450  155E  00C5               	movwf	??_fround+3
  4451  155F  120A  118A  200D  160A  118A  	fcall	stringdir
  4452  1564  00C6               	movwf	??_fround+4
  4453  1565  120A  118A  200D  160A  118A  	fcall	stringdir
  4454  156A  00C7               	movwf	??_fround+5
  4455  156B  120A  118A  200D  160A  118A  	fcall	stringdir
  4456  1570  00C8               	movwf	??_fround+6
  4457  1571  0848               	movf	??_fround+6,w
  4458  1572  00A7               	movwf	___flmul@b+3
  4459  1573  0847               	movf	??_fround+5,w
  4460  1574  00A6               	movwf	___flmul@b+2
  4461  1575  0846               	movf	??_fround+4,w
  4462  1576  00A5               	movwf	___flmul@b+1
  4463  1577  0845               	movf	??_fround+3,w
  4464  1578  00A4               	movwf	___flmul@b
  4465  1579  0850               	movf	_fround$770+3,w
  4466  157A  00AB               	movwf	___flmul@a+3
  4467  157B  084F               	movf	_fround$770+2,w
  4468  157C  00AA               	movwf	___flmul@a+2
  4469  157D  084E               	movf	_fround$770+1,w
  4470  157E  00A9               	movwf	___flmul@a+1
  4471  157F  084D               	movf	_fround$770,w
  4472  1580  00A8               	movwf	___flmul@a
  4473  1581  120A  158A  21A2   	fcall	___flmul
  4474  1584  1283               	bcf	3,5	;RP0=0, select bank0
  4475  1585  1303               	bcf	3,6	;RP1=0, select bank0
  4476  1586  0827               	movf	?___flmul+3,w
  4477  1587  00C1               	movwf	?_fround+3
  4478  1588  0826               	movf	?___flmul+2,w
  4479  1589  00C0               	movwf	?_fround+2
  4480  158A  0825               	movf	?___flmul+1,w
  4481  158B  00BF               	movwf	?_fround+1
  4482  158C  0824               	movf	?___flmul,w
  4483  158D  00BE               	movwf	?_fround
  4484  158E  0008               	return
  4485  158F                     l2588:	
  4486                           
  4487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  4488  158F  303F               	movlw	63
  4489  1590  00A7               	movwf	___flmul@b+3
  4490  1591  3000               	movlw	0
  4491  1592  00A6               	movwf	___flmul@b+2
  4492  1593  3000               	movlw	0
  4493  1594  00A5               	movwf	___flmul@b+1
  4494  1595  3000               	movlw	0
  4495  1596  00A4               	movwf	___flmul@b
  4496  1597  0851               	movf	fround@prec,w
  4497  1598  00C2               	movwf	??_fround
  4498  1599  3001               	movlw	1
  4499  159A                     u4075:	
  4500  159A  1003               	clrc
  4501  159B  0DC2               	rlf	??_fround,f
  4502  159C  3EFF               	addlw	-1
  4503  159D  1D03               	skipz
  4504  159E  2D9A               	goto	u4075
  4505  159F  1003               	clrc
  4506  15A0  0D42               	rlf	??_fround,w
  4507  15A1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4508  15A2  0084               	movwf	4
  4509  15A3  120A  118A  200D  160A  118A  	fcall	stringdir
  4510  15A8  00C3               	movwf	??_fround+1
  4511  15A9  120A  118A  200D  160A  118A  	fcall	stringdir
  4512  15AE  00C4               	movwf	??_fround+2
  4513  15AF  120A  118A  200D  160A  118A  	fcall	stringdir
  4514  15B4  00C5               	movwf	??_fround+3
  4515  15B5  120A  118A  200D  160A  118A  	fcall	stringdir
  4516  15BA  00C6               	movwf	??_fround+4
  4517  15BB  0846               	movf	??_fround+4,w
  4518  15BC  00AB               	movwf	___flmul@a+3
  4519  15BD  0845               	movf	??_fround+3,w
  4520  15BE  00AA               	movwf	___flmul@a+2
  4521  15BF  0844               	movf	??_fround+2,w
  4522  15C0  00A9               	movwf	___flmul@a+1
  4523  15C1  0843               	movf	??_fround+1,w
  4524  15C2  00A8               	movwf	___flmul@a
  4525  15C3  120A  158A  21A2   	fcall	___flmul
  4526  15C6  1283               	bcf	3,5	;RP0=0, select bank0
  4527  15C7  1303               	bcf	3,6	;RP1=0, select bank0
  4528  15C8  0827               	movf	?___flmul+3,w
  4529  15C9  00C1               	movwf	?_fround+3
  4530  15CA  0826               	movf	?___flmul+2,w
  4531  15CB  00C0               	movwf	?_fround+2
  4532  15CC  0825               	movf	?___flmul+1,w
  4533  15CD  00BF               	movwf	?_fround+1
  4534  15CE  0824               	movf	?___flmul,w
  4535  15CF  00BE               	movwf	?_fround
  4536  15D0  0008               	return
  4537  15D1                     __end_of_fround:	
  4538                           
  4539                           	psect	text7
  4540  1EC9                     __ptext7:	
  4541 ;; *************** function ___lwmod *****************
  4542 ;; Defined at:
  4543 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;  divisor         2    0[COMMON] unsigned int 
  4546 ;;  dividend        2    2[COMMON] unsigned int 
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;  counter         1    5[COMMON] unsigned char 
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  2    0[COMMON] unsigned int 
  4551 ;; Registers used:
  4552 ;;		wreg, status,2, status,0
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4558 ;;      Params:         4       0       0       0       0
  4559 ;;      Locals:         1       0       0       0       0
  4560 ;;      Temps:          1       0       0       0       0
  4561 ;;      Totals:         6       0       0       0       0
  4562 ;;Total ram usage:        6 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; This function calls:
  4565 ;;		Nothing
  4566 ;; This function is called by:
  4567 ;;		_fround
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           
  4572                           ;psect for function ___lwmod
  4573  1EC9                     ___lwmod:	
  4574                           
  4575                           ;incstack = 0
  4576                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4577  1EC9  0870               	movf	___lwmod@divisor,w
  4578  1ECA  0471               	iorwf	___lwmod@divisor+1,w
  4579  1ECB  1903               	btfsc	3,2
  4580  1ECC  2EF6               	goto	l2206
  4581  1ECD  01F5               	clrf	___lwmod@counter
  4582  1ECE  0AF5               	incf	___lwmod@counter,f
  4583  1ECF                     l2196:	
  4584  1ECF  1BF1               	btfsc	___lwmod@divisor+1,7
  4585  1ED0  2EDD               	goto	l2198
  4586  1ED1  3001               	movlw	1
  4587  1ED2                     u3115:	
  4588  1ED2  1003               	clrc
  4589  1ED3  0DF0               	rlf	___lwmod@divisor,f
  4590  1ED4  0DF1               	rlf	___lwmod@divisor+1,f
  4591  1ED5  3EFF               	addlw	-1
  4592  1ED6  1D03               	skipz
  4593  1ED7  2ED2               	goto	u3115
  4594  1ED8  3001               	movlw	1
  4595  1ED9  00F4               	movwf	??___lwmod
  4596  1EDA  0874               	movf	??___lwmod,w
  4597  1EDB  07F5               	addwf	___lwmod@counter,f
  4598  1EDC  2ECF               	goto	l2196
  4599  1EDD                     l2198:	
  4600  1EDD  0871               	movf	___lwmod@divisor+1,w
  4601  1EDE  0273               	subwf	___lwmod@dividend+1,w
  4602  1EDF  1D03               	skipz
  4603  1EE0  2EE3               	goto	u3135
  4604  1EE1  0870               	movf	___lwmod@divisor,w
  4605  1EE2  0272               	subwf	___lwmod@dividend,w
  4606  1EE3                     u3135:	
  4607  1EE3  1C03               	skipc
  4608  1EE4  2EEB               	goto	l2202
  4609  1EE5  0870               	movf	___lwmod@divisor,w
  4610  1EE6  02F2               	subwf	___lwmod@dividend,f
  4611  1EE7  0871               	movf	___lwmod@divisor+1,w
  4612  1EE8  1C03               	skipc
  4613  1EE9  03F3               	decf	___lwmod@dividend+1,f
  4614  1EEA  02F3               	subwf	___lwmod@dividend+1,f
  4615  1EEB                     l2202:	
  4616  1EEB  3001               	movlw	1
  4617  1EEC                     u3145:	
  4618  1EEC  1003               	clrc
  4619  1EED  0CF1               	rrf	___lwmod@divisor+1,f
  4620  1EEE  0CF0               	rrf	___lwmod@divisor,f
  4621  1EEF  3EFF               	addlw	-1
  4622  1EF0  1D03               	skipz
  4623  1EF1  2EEC               	goto	u3145
  4624  1EF2  3001               	movlw	1
  4625  1EF3  02F5               	subwf	___lwmod@counter,f
  4626  1EF4  1D03               	btfss	3,2
  4627  1EF5  2EDD               	goto	l2198
  4628  1EF6                     l2206:	
  4629  1EF6  0873               	movf	___lwmod@dividend+1,w
  4630  1EF7  00F1               	movwf	?___lwmod+1
  4631  1EF8  0872               	movf	___lwmod@dividend,w
  4632  1EF9  00F0               	movwf	?___lwmod
  4633  1EFA  0008               	return
  4634  1EFB                     __end_of___lwmod:	
  4635                           
  4636                           	psect	text8
  4637  1F32                     __ptext8:	
  4638 ;; *************** function ___lwdiv *****************
  4639 ;; Defined at:
  4640 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;  divisor         2    6[COMMON] unsigned int 
  4643 ;;  dividend        2    8[COMMON] unsigned int 
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;  quotient        2   11[COMMON] unsigned int 
  4646 ;;  counter         1   13[COMMON] unsigned char 
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  2    6[COMMON] unsigned int 
  4649 ;; Registers used:
  4650 ;;		wreg, status,2, status,0
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4656 ;;      Params:         4       0       0       0       0
  4657 ;;      Locals:         3       0       0       0       0
  4658 ;;      Temps:          1       0       0       0       0
  4659 ;;      Totals:         8       0       0       0       0
  4660 ;;Total ram usage:        8 bytes
  4661 ;; Hardware stack levels used:    1
  4662 ;; This function calls:
  4663 ;;		Nothing
  4664 ;; This function is called by:
  4665 ;;		_fround
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           
  4670                           ;psect for function ___lwdiv
  4671  1F32                     ___lwdiv:	
  4672                           
  4673                           ;incstack = 0
  4674                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4675  1F32  01FB               	clrf	___lwdiv@quotient
  4676  1F33  01FC               	clrf	___lwdiv@quotient+1
  4677  1F34  0876               	movf	___lwdiv@divisor,w
  4678  1F35  0477               	iorwf	___lwdiv@divisor+1,w
  4679  1F36  1903               	btfsc	3,2
  4680  1F37  2F69               	goto	l2184
  4681  1F38  01FD               	clrf	___lwdiv@counter
  4682  1F39  0AFD               	incf	___lwdiv@counter,f
  4683  1F3A                     l2172:	
  4684  1F3A  1BF7               	btfsc	___lwdiv@divisor+1,7
  4685  1F3B  2F48               	goto	l2174
  4686  1F3C  3001               	movlw	1
  4687  1F3D                     u3045:	
  4688  1F3D  1003               	clrc
  4689  1F3E  0DF6               	rlf	___lwdiv@divisor,f
  4690  1F3F  0DF7               	rlf	___lwdiv@divisor+1,f
  4691  1F40  3EFF               	addlw	-1
  4692  1F41  1D03               	skipz
  4693  1F42  2F3D               	goto	u3045
  4694  1F43  3001               	movlw	1
  4695  1F44  00FA               	movwf	??___lwdiv
  4696  1F45  087A               	movf	??___lwdiv,w
  4697  1F46  07FD               	addwf	___lwdiv@counter,f
  4698  1F47  2F3A               	goto	l2172
  4699  1F48                     l2174:	
  4700  1F48  3001               	movlw	1
  4701  1F49                     u3065:	
  4702  1F49  1003               	clrc
  4703  1F4A  0DFB               	rlf	___lwdiv@quotient,f
  4704  1F4B  0DFC               	rlf	___lwdiv@quotient+1,f
  4705  1F4C  3EFF               	addlw	-1
  4706  1F4D  1D03               	skipz
  4707  1F4E  2F49               	goto	u3065
  4708  1F4F  0877               	movf	___lwdiv@divisor+1,w
  4709  1F50  0279               	subwf	___lwdiv@dividend+1,w
  4710  1F51  1D03               	skipz
  4711  1F52  2F55               	goto	u3075
  4712  1F53  0876               	movf	___lwdiv@divisor,w
  4713  1F54  0278               	subwf	___lwdiv@dividend,w
  4714  1F55                     u3075:	
  4715  1F55  1C03               	skipc
  4716  1F56  2F5E               	goto	l2180
  4717  1F57  0876               	movf	___lwdiv@divisor,w
  4718  1F58  02F8               	subwf	___lwdiv@dividend,f
  4719  1F59  0877               	movf	___lwdiv@divisor+1,w
  4720  1F5A  1C03               	skipc
  4721  1F5B  03F9               	decf	___lwdiv@dividend+1,f
  4722  1F5C  02F9               	subwf	___lwdiv@dividend+1,f
  4723  1F5D  147B               	bsf	___lwdiv@quotient,0
  4724  1F5E                     l2180:	
  4725  1F5E  3001               	movlw	1
  4726  1F5F                     u3085:	
  4727  1F5F  1003               	clrc
  4728  1F60  0CF7               	rrf	___lwdiv@divisor+1,f
  4729  1F61  0CF6               	rrf	___lwdiv@divisor,f
  4730  1F62  3EFF               	addlw	-1
  4731  1F63  1D03               	skipz
  4732  1F64  2F5F               	goto	u3085
  4733  1F65  3001               	movlw	1
  4734  1F66  02FD               	subwf	___lwdiv@counter,f
  4735  1F67  1D03               	btfss	3,2
  4736  1F68  2F48               	goto	l2174
  4737  1F69                     l2184:	
  4738  1F69  087C               	movf	___lwdiv@quotient+1,w
  4739  1F6A  00F7               	movwf	?___lwdiv+1
  4740  1F6B  087B               	movf	___lwdiv@quotient,w
  4741  1F6C  00F6               	movwf	?___lwdiv
  4742  1F6D  0008               	return
  4743  1F6E                     __end_of___lwdiv:	
  4744                           
  4745                           	psect	text9
  4746  09A2                     __ptext9:	
  4747 ;; *************** function ___flmul *****************
  4748 ;; Defined at:
  4749 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;  b               4    4[BANK0 ] unsigned int 
  4752 ;;  a               4    8[BANK0 ] unsigned int 
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;  prod            4   24[BANK0 ] struct .
  4755 ;;  grs             4   18[BANK0 ] unsigned long 
  4756 ;;  temp            2   28[BANK0 ] struct .
  4757 ;;  bexp            1   23[BANK0 ] unsigned char 
  4758 ;;  aexp            1   22[BANK0 ] unsigned char 
  4759 ;;  sign            1   17[BANK0 ] unsigned char 
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  4    4[BANK0 ] unsigned char 
  4762 ;; Registers used:
  4763 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4769 ;;      Params:         0       8       0       0       0
  4770 ;;      Locals:         0      13       0       0       0
  4771 ;;      Temps:          0       5       0       0       0
  4772 ;;      Totals:         0      26       0       0       0
  4773 ;;Total ram usage:       26 bytes
  4774 ;; Hardware stack levels used:    1
  4775 ;; Hardware stack levels required when called:    1
  4776 ;; This function calls:
  4777 ;;		__Umul8_16
  4778 ;; This function is called by:
  4779 ;;		_fround
  4780 ;;		_scale
  4781 ;;		_sprintf
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           
  4786                           ;psect for function ___flmul
  4787  09A2                     ___flmul:	
  4788                           
  4789                           ;incstack = 0
  4790                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4791  09A2  1283               	bcf	3,5	;RP0=0, select bank0
  4792  09A3  1303               	bcf	3,6	;RP1=0, select bank0
  4793  09A4  0827               	movf	___flmul@b+3,w
  4794  09A5  3980               	andlw	128
  4795  09A6  00AC               	movwf	??___flmul
  4796  09A7  082C               	movf	??___flmul,w
  4797  09A8  00B1               	movwf	___flmul@sign
  4798  09A9  0827               	movf	___flmul@b+3,w
  4799  09AA  00AC               	movwf	??___flmul
  4800  09AB  072C               	addwf	??___flmul,w
  4801  09AC  00AD               	movwf	??___flmul+1
  4802  09AD  082D               	movf	??___flmul+1,w
  4803  09AE  00B7               	movwf	___flmul@bexp
  4804  09AF  1BA6               	btfsc	___flmul@b+2,7
  4805  09B0  1437               	bsf	___flmul@bexp,0
  4806  09B1  0837               	movf	___flmul@bexp,w
  4807  09B2  1903               	btfsc	3,2
  4808  09B3  29C1               	goto	l2420
  4809  09B4  0A37               	incf	___flmul@bexp,w
  4810  09B5  1D03               	btfss	3,2
  4811  09B6  29BF               	goto	l2418
  4812  09B7  3000               	movlw	0
  4813  09B8  00A7               	movwf	___flmul@b+3
  4814  09B9  3000               	movlw	0
  4815  09BA  00A6               	movwf	___flmul@b+2
  4816  09BB  3000               	movlw	0
  4817  09BC  00A5               	movwf	___flmul@b+1
  4818  09BD  3000               	movlw	0
  4819  09BE  00A4               	movwf	___flmul@b
  4820  09BF                     l2418:	
  4821  09BF  17A6               	bsf	___flmul@b+2,7
  4822  09C0  29C9               	goto	l2422
  4823  09C1                     l2420:	
  4824  09C1  3000               	movlw	0
  4825  09C2  00A7               	movwf	___flmul@b+3
  4826  09C3  3000               	movlw	0
  4827  09C4  00A6               	movwf	___flmul@b+2
  4828  09C5  3000               	movlw	0
  4829  09C6  00A5               	movwf	___flmul@b+1
  4830  09C7  3000               	movlw	0
  4831  09C8  00A4               	movwf	___flmul@b
  4832  09C9                     l2422:	
  4833  09C9  082B               	movf	___flmul@a+3,w
  4834  09CA  3980               	andlw	128
  4835  09CB  00AC               	movwf	??___flmul
  4836  09CC  082C               	movf	??___flmul,w
  4837  09CD  06B1               	xorwf	___flmul@sign,f
  4838  09CE  082B               	movf	___flmul@a+3,w
  4839  09CF  00AC               	movwf	??___flmul
  4840  09D0  072C               	addwf	??___flmul,w
  4841  09D1  00AD               	movwf	??___flmul+1
  4842  09D2  082D               	movf	??___flmul+1,w
  4843  09D3  00B6               	movwf	___flmul@aexp
  4844  09D4  1BAA               	btfsc	___flmul@a+2,7
  4845  09D5  1436               	bsf	___flmul@aexp,0
  4846  09D6  0836               	movf	___flmul@aexp,w
  4847  09D7  1903               	btfsc	3,2
  4848  09D8  29E6               	goto	l2438
  4849  09D9  0A36               	incf	___flmul@aexp,w
  4850  09DA  1D03               	btfss	3,2
  4851  09DB  29E4               	goto	l2436
  4852  09DC  3000               	movlw	0
  4853  09DD  00AB               	movwf	___flmul@a+3
  4854  09DE  3000               	movlw	0
  4855  09DF  00AA               	movwf	___flmul@a+2
  4856  09E0  3000               	movlw	0
  4857  09E1  00A9               	movwf	___flmul@a+1
  4858  09E2  3000               	movlw	0
  4859  09E3  00A8               	movwf	___flmul@a
  4860  09E4                     l2436:	
  4861  09E4  17AA               	bsf	___flmul@a+2,7
  4862  09E5  29EE               	goto	l2440
  4863  09E6                     l2438:	
  4864  09E6  3000               	movlw	0
  4865  09E7  00AB               	movwf	___flmul@a+3
  4866  09E8  3000               	movlw	0
  4867  09E9  00AA               	movwf	___flmul@a+2
  4868  09EA  3000               	movlw	0
  4869  09EB  00A9               	movwf	___flmul@a+1
  4870  09EC  3000               	movlw	0
  4871  09ED  00A8               	movwf	___flmul@a
  4872  09EE                     l2440:	
  4873  09EE  0836               	movf	___flmul@aexp,w
  4874  09EF  1D03               	btfss	3,2
  4875  09F0  0837               	movf	___flmul@bexp,w
  4876  09F1  1D03               	btfss	3,2
  4877  09F2  29FC               	goto	l2448
  4878  09F3  3000               	movlw	0
  4879  09F4  00A7               	movwf	?___flmul+3
  4880  09F5  3000               	movlw	0
  4881  09F6  00A6               	movwf	?___flmul+2
  4882  09F7  3000               	movlw	0
  4883  09F8  00A5               	movwf	?___flmul+1
  4884  09F9  3000               	movlw	0
  4885  09FA  00A4               	movwf	?___flmul
  4886  09FB  0008               	return
  4887  09FC                     l2448:	
  4888  09FC  0824               	movf	___flmul@b,w
  4889  09FD  00AC               	movwf	??___flmul
  4890  09FE  082C               	movf	??___flmul,w
  4891  09FF  00F0               	movwf	__Umul8_16@multiplicand
  4892  0A00  082A               	movf	___flmul@a+2,w
  4893  0A01  160A  158A  26A6  120A  158A  	fcall	__Umul8_16
  4894  0A06  0871               	movf	?__Umul8_16+1,w
  4895  0A07  1283               	bcf	3,5	;RP0=0, select bank0
  4896  0A08  1303               	bcf	3,6	;RP1=0, select bank0
  4897  0A09  00BD               	movwf	___flmul@temp+1
  4898  0A0A  0870               	movf	?__Umul8_16,w
  4899  0A0B  00BC               	movwf	___flmul@temp
  4900  0A0C  083C               	movf	___flmul@temp,w
  4901  0A0D  00AC               	movwf	??___flmul
  4902  0A0E  01AD               	clrf	??___flmul+1
  4903  0A0F  01AE               	clrf	??___flmul+2
  4904  0A10  01AF               	clrf	??___flmul+3
  4905  0A11  082F               	movf	??___flmul+3,w
  4906  0A12  00B5               	movwf	___flmul@grs+3
  4907  0A13  082E               	movf	??___flmul+2,w
  4908  0A14  00B4               	movwf	___flmul@grs+2
  4909  0A15  082D               	movf	??___flmul+1,w
  4910  0A16  00B3               	movwf	___flmul@grs+1
  4911  0A17  082C               	movf	??___flmul,w
  4912  0A18  00B2               	movwf	___flmul@grs
  4913  0A19  083D               	movf	___flmul@temp+1,w
  4914  0A1A  00AC               	movwf	??___flmul
  4915  0A1B  01AD               	clrf	??___flmul+1
  4916  0A1C  01AE               	clrf	??___flmul+2
  4917  0A1D  01AF               	clrf	??___flmul+3
  4918  0A1E  082F               	movf	??___flmul+3,w
  4919  0A1F  00BB               	movwf	___flmul@prod+3
  4920  0A20  082E               	movf	??___flmul+2,w
  4921  0A21  00BA               	movwf	___flmul@prod+2
  4922  0A22  082D               	movf	??___flmul+1,w
  4923  0A23  00B9               	movwf	___flmul@prod+1
  4924  0A24  082C               	movf	??___flmul,w
  4925  0A25  00B8               	movwf	___flmul@prod
  4926  0A26  0825               	movf	___flmul@b+1,w
  4927  0A27  00AC               	movwf	??___flmul
  4928  0A28  082C               	movf	??___flmul,w
  4929  0A29  00F0               	movwf	__Umul8_16@multiplicand
  4930  0A2A  0829               	movf	___flmul@a+1,w
  4931  0A2B  160A  158A  26A6  120A  158A  	fcall	__Umul8_16
  4932  0A30  0871               	movf	?__Umul8_16+1,w
  4933  0A31  1283               	bcf	3,5	;RP0=0, select bank0
  4934  0A32  1303               	bcf	3,6	;RP1=0, select bank0
  4935  0A33  00BD               	movwf	___flmul@temp+1
  4936  0A34  0870               	movf	?__Umul8_16,w
  4937  0A35  00BC               	movwf	___flmul@temp
  4938  0A36  083C               	movf	___flmul@temp,w
  4939  0A37  00AC               	movwf	??___flmul
  4940  0A38  01AD               	clrf	??___flmul+1
  4941  0A39  01AE               	clrf	??___flmul+2
  4942  0A3A  01AF               	clrf	??___flmul+3
  4943  0A3B  082C               	movf	??___flmul,w
  4944  0A3C  07B2               	addwf	___flmul@grs,f
  4945  0A3D  082D               	movf	??___flmul+1,w
  4946  0A3E  1103               	clrz
  4947  0A3F  1803               	skipnc
  4948  0A40  3E01               	addlw	1
  4949  0A41  1D03               	btfss	3,2
  4950  0A42  07B3               	addwf	___flmul@grs+1,f
  4951  0A43  082E               	movf	??___flmul+2,w
  4952  0A44  1103               	clrz
  4953  0A45  1803               	skipnc
  4954  0A46  3E01               	addlw	1
  4955  0A47  1D03               	btfss	3,2
  4956  0A48  07B4               	addwf	___flmul@grs+2,f
  4957  0A49  082F               	movf	??___flmul+3,w
  4958  0A4A  1103               	clrz
  4959  0A4B  1803               	skipnc
  4960  0A4C  3E01               	addlw	1
  4961  0A4D  1D03               	btfss	3,2
  4962  0A4E  07B5               	addwf	___flmul@grs+3,f
  4963  0A4F  083D               	movf	___flmul@temp+1,w
  4964  0A50  00AC               	movwf	??___flmul
  4965  0A51  01AD               	clrf	??___flmul+1
  4966  0A52  01AE               	clrf	??___flmul+2
  4967  0A53  01AF               	clrf	??___flmul+3
  4968  0A54  082C               	movf	??___flmul,w
  4969  0A55  07B8               	addwf	___flmul@prod,f
  4970  0A56  082D               	movf	??___flmul+1,w
  4971  0A57  1103               	clrz
  4972  0A58  1803               	skipnc
  4973  0A59  3E01               	addlw	1
  4974  0A5A  1D03               	btfss	3,2
  4975  0A5B  07B9               	addwf	___flmul@prod+1,f
  4976  0A5C  082E               	movf	??___flmul+2,w
  4977  0A5D  1103               	clrz
  4978  0A5E  1803               	skipnc
  4979  0A5F  3E01               	addlw	1
  4980  0A60  1D03               	btfss	3,2
  4981  0A61  07BA               	addwf	___flmul@prod+2,f
  4982  0A62  082F               	movf	??___flmul+3,w
  4983  0A63  1103               	clrz
  4984  0A64  1803               	skipnc
  4985  0A65  3E01               	addlw	1
  4986  0A66  1D03               	btfss	3,2
  4987  0A67  07BB               	addwf	___flmul@prod+3,f
  4988  0A68  0826               	movf	___flmul@b+2,w
  4989  0A69  00AC               	movwf	??___flmul
  4990  0A6A  082C               	movf	??___flmul,w
  4991  0A6B  00F0               	movwf	__Umul8_16@multiplicand
  4992  0A6C  0828               	movf	___flmul@a,w
  4993  0A6D  160A  158A  26A6  120A  158A  	fcall	__Umul8_16
  4994  0A72  0871               	movf	?__Umul8_16+1,w
  4995  0A73  1283               	bcf	3,5	;RP0=0, select bank0
  4996  0A74  1303               	bcf	3,6	;RP1=0, select bank0
  4997  0A75  00BD               	movwf	___flmul@temp+1
  4998  0A76  0870               	movf	?__Umul8_16,w
  4999  0A77  00BC               	movwf	___flmul@temp
  5000  0A78  083C               	movf	___flmul@temp,w
  5001  0A79  00AC               	movwf	??___flmul
  5002  0A7A  01AD               	clrf	??___flmul+1
  5003  0A7B  01AE               	clrf	??___flmul+2
  5004  0A7C  01AF               	clrf	??___flmul+3
  5005  0A7D  082C               	movf	??___flmul,w
  5006  0A7E  07B2               	addwf	___flmul@grs,f
  5007  0A7F  082D               	movf	??___flmul+1,w
  5008  0A80  1103               	clrz
  5009  0A81  1803               	skipnc
  5010  0A82  3E01               	addlw	1
  5011  0A83  1D03               	btfss	3,2
  5012  0A84  07B3               	addwf	___flmul@grs+1,f
  5013  0A85  082E               	movf	??___flmul+2,w
  5014  0A86  1103               	clrz
  5015  0A87  1803               	skipnc
  5016  0A88  3E01               	addlw	1
  5017  0A89  1D03               	btfss	3,2
  5018  0A8A  07B4               	addwf	___flmul@grs+2,f
  5019  0A8B  082F               	movf	??___flmul+3,w
  5020  0A8C  1103               	clrz
  5021  0A8D  1803               	skipnc
  5022  0A8E  3E01               	addlw	1
  5023  0A8F  1D03               	btfss	3,2
  5024  0A90  07B5               	addwf	___flmul@grs+3,f
  5025  0A91  083D               	movf	___flmul@temp+1,w
  5026  0A92  00AC               	movwf	??___flmul
  5027  0A93  01AD               	clrf	??___flmul+1
  5028  0A94  01AE               	clrf	??___flmul+2
  5029  0A95  01AF               	clrf	??___flmul+3
  5030  0A96  082C               	movf	??___flmul,w
  5031  0A97  07B8               	addwf	___flmul@prod,f
  5032  0A98  082D               	movf	??___flmul+1,w
  5033  0A99  1103               	clrz
  5034  0A9A  1803               	skipnc
  5035  0A9B  3E01               	addlw	1
  5036  0A9C  1D03               	btfss	3,2
  5037  0A9D  07B9               	addwf	___flmul@prod+1,f
  5038  0A9E  082E               	movf	??___flmul+2,w
  5039  0A9F  1103               	clrz
  5040  0AA0  1803               	skipnc
  5041  0AA1  3E01               	addlw	1
  5042  0AA2  1D03               	btfss	3,2
  5043  0AA3  07BA               	addwf	___flmul@prod+2,f
  5044  0AA4  082F               	movf	??___flmul+3,w
  5045  0AA5  1103               	clrz
  5046  0AA6  1803               	skipnc
  5047  0AA7  3E01               	addlw	1
  5048  0AA8  1D03               	btfss	3,2
  5049  0AA9  07BB               	addwf	___flmul@prod+3,f
  5050  0AAA  3008               	movlw	8
  5051  0AAB  00AC               	movwf	??___flmul
  5052  0AAC                     u3745:	
  5053  0AAC  1003               	clrc
  5054  0AAD  0DB2               	rlf	___flmul@grs,f
  5055  0AAE  0DB3               	rlf	___flmul@grs+1,f
  5056  0AAF  0DB4               	rlf	___flmul@grs+2,f
  5057  0AB0  0DB5               	rlf	___flmul@grs+3,f
  5058  0AB1  0BAC               	decfsz	??___flmul,f
  5059  0AB2  2AAC               	goto	u3745
  5060  0AB3  0825               	movf	___flmul@b+1,w
  5061  0AB4  00AC               	movwf	??___flmul
  5062  0AB5  082C               	movf	??___flmul,w
  5063  0AB6  00F0               	movwf	__Umul8_16@multiplicand
  5064  0AB7  0828               	movf	___flmul@a,w
  5065  0AB8  160A  158A  26A6  120A  158A  	fcall	__Umul8_16
  5066  0ABD  0871               	movf	?__Umul8_16+1,w
  5067  0ABE  1283               	bcf	3,5	;RP0=0, select bank0
  5068  0ABF  1303               	bcf	3,6	;RP1=0, select bank0
  5069  0AC0  00BD               	movwf	___flmul@temp+1
  5070  0AC1  0870               	movf	?__Umul8_16,w
  5071  0AC2  00BC               	movwf	___flmul@temp
  5072  0AC3  083C               	movf	___flmul@temp,w
  5073  0AC4  00AC               	movwf	??___flmul
  5074  0AC5  083D               	movf	___flmul@temp+1,w
  5075  0AC6  00AD               	movwf	??___flmul+1
  5076  0AC7  01AE               	clrf	??___flmul+2
  5077  0AC8  01AF               	clrf	??___flmul+3
  5078  0AC9  082C               	movf	??___flmul,w
  5079  0ACA  07B2               	addwf	___flmul@grs,f
  5080  0ACB  082D               	movf	??___flmul+1,w
  5081  0ACC  1103               	clrz
  5082  0ACD  1803               	skipnc
  5083  0ACE  3E01               	addlw	1
  5084  0ACF  1D03               	btfss	3,2
  5085  0AD0  07B3               	addwf	___flmul@grs+1,f
  5086  0AD1  082E               	movf	??___flmul+2,w
  5087  0AD2  1103               	clrz
  5088  0AD3  1803               	skipnc
  5089  0AD4  3E01               	addlw	1
  5090  0AD5  1D03               	btfss	3,2
  5091  0AD6  07B4               	addwf	___flmul@grs+2,f
  5092  0AD7  082F               	movf	??___flmul+3,w
  5093  0AD8  1103               	clrz
  5094  0AD9  1803               	skipnc
  5095  0ADA  3E01               	addlw	1
  5096  0ADB  1D03               	btfss	3,2
  5097  0ADC  07B5               	addwf	___flmul@grs+3,f
  5098  0ADD  0824               	movf	___flmul@b,w
  5099  0ADE  00AC               	movwf	??___flmul
  5100  0ADF  082C               	movf	??___flmul,w
  5101  0AE0  00F0               	movwf	__Umul8_16@multiplicand
  5102  0AE1  0829               	movf	___flmul@a+1,w
  5103  0AE2  160A  158A  26A6  120A  158A  	fcall	__Umul8_16
  5104  0AE7  0871               	movf	?__Umul8_16+1,w
  5105  0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  5106  0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  5107  0AEA  00BD               	movwf	___flmul@temp+1
  5108  0AEB  0870               	movf	?__Umul8_16,w
  5109  0AEC  00BC               	movwf	___flmul@temp
  5110  0AED  083C               	movf	___flmul@temp,w
  5111  0AEE  00AC               	movwf	??___flmul
  5112  0AEF  083D               	movf	___flmul@temp+1,w
  5113  0AF0  00AD               	movwf	??___flmul+1
  5114  0AF1  01AE               	clrf	??___flmul+2
  5115  0AF2  01AF               	clrf	??___flmul+3
  5116  0AF3  082C               	movf	??___flmul,w
  5117  0AF4  07B2               	addwf	___flmul@grs,f
  5118  0AF5  082D               	movf	??___flmul+1,w
  5119  0AF6  1103               	clrz
  5120  0AF7  1803               	skipnc
  5121  0AF8  3E01               	addlw	1
  5122  0AF9  1D03               	btfss	3,2
  5123  0AFA  07B3               	addwf	___flmul@grs+1,f
  5124  0AFB  082E               	movf	??___flmul+2,w
  5125  0AFC  1103               	clrz
  5126  0AFD  1803               	skipnc
  5127  0AFE  3E01               	addlw	1
  5128  0AFF  1D03               	btfss	3,2
  5129  0B00  07B4               	addwf	___flmul@grs+2,f
  5130  0B01  082F               	movf	??___flmul+3,w
  5131  0B02  1103               	clrz
  5132  0B03  1803               	skipnc
  5133  0B04  3E01               	addlw	1
  5134  0B05  1D03               	btfss	3,2
  5135  0B06  07B5               	addwf	___flmul@grs+3,f
  5136  0B07  3008               	movlw	8
  5137  0B08  00AC               	movwf	??___flmul
  5138  0B09                     u3775:	
  5139  0B09  1003               	clrc
  5140  0B0A  0DB2               	rlf	___flmul@grs,f
  5141  0B0B  0DB3               	rlf	___flmul@grs+1,f
  5142  0B0C  0DB4               	rlf	___flmul@grs+2,f
  5143  0B0D  0DB5               	rlf	___flmul@grs+3,f
  5144  0B0E  0BAC               	decfsz	??___flmul,f
  5145  0B0F  2B09               	goto	u3775
  5146  0B10  0824               	movf	___flmul@b,w
  5147  0B11  00AC               	movwf	??___flmul
  5148  0B12  082C               	movf	??___flmul,w
  5149  0B13  00F0               	movwf	__Umul8_16@multiplicand
  5150  0B14  0828               	movf	___flmul@a,w
  5151  0B15  160A  158A  26A6  120A  158A  	fcall	__Umul8_16
  5152  0B1A  0871               	movf	?__Umul8_16+1,w
  5153  0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  5154  0B1C  1303               	bcf	3,6	;RP1=0, select bank0
  5155  0B1D  00BD               	movwf	___flmul@temp+1
  5156  0B1E  0870               	movf	?__Umul8_16,w
  5157  0B1F  00BC               	movwf	___flmul@temp
  5158  0B20  083C               	movf	___flmul@temp,w
  5159  0B21  00AC               	movwf	??___flmul
  5160  0B22  083D               	movf	___flmul@temp+1,w
  5161  0B23  00AD               	movwf	??___flmul+1
  5162  0B24  01AE               	clrf	??___flmul+2
  5163  0B25  01AF               	clrf	??___flmul+3
  5164  0B26  082C               	movf	??___flmul,w
  5165  0B27  07B2               	addwf	___flmul@grs,f
  5166  0B28  082D               	movf	??___flmul+1,w
  5167  0B29  1103               	clrz
  5168  0B2A  1803               	skipnc
  5169  0B2B  3E01               	addlw	1
  5170  0B2C  1D03               	btfss	3,2
  5171  0B2D  07B3               	addwf	___flmul@grs+1,f
  5172  0B2E  082E               	movf	??___flmul+2,w
  5173  0B2F  1103               	clrz
  5174  0B30  1803               	skipnc
  5175  0B31  3E01               	addlw	1
  5176  0B32  1D03               	btfss	3,2
  5177  0B33  07B4               	addwf	___flmul@grs+2,f
  5178  0B34  082F               	movf	??___flmul+3,w
  5179  0B35  1103               	clrz
  5180  0B36  1803               	skipnc
  5181  0B37  3E01               	addlw	1
  5182  0B38  1D03               	btfss	3,2
  5183  0B39  07B5               	addwf	___flmul@grs+3,f
  5184  0B3A  0825               	movf	___flmul@b+1,w
  5185  0B3B  00AC               	movwf	??___flmul
  5186  0B3C  082C               	movf	??___flmul,w
  5187  0B3D  00F0               	movwf	__Umul8_16@multiplicand
  5188  0B3E  082A               	movf	___flmul@a+2,w
  5189  0B3F  160A  158A  26A6  120A  158A  	fcall	__Umul8_16
  5190  0B44  0871               	movf	?__Umul8_16+1,w
  5191  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  5192  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  5193  0B47  00BD               	movwf	___flmul@temp+1
  5194  0B48  0870               	movf	?__Umul8_16,w
  5195  0B49  00BC               	movwf	___flmul@temp
  5196  0B4A  083C               	movf	___flmul@temp,w
  5197  0B4B  00AC               	movwf	??___flmul
  5198  0B4C  083D               	movf	___flmul@temp+1,w
  5199  0B4D  00AD               	movwf	??___flmul+1
  5200  0B4E  01AE               	clrf	??___flmul+2
  5201  0B4F  01AF               	clrf	??___flmul+3
  5202  0B50  082C               	movf	??___flmul,w
  5203  0B51  07B8               	addwf	___flmul@prod,f
  5204  0B52  082D               	movf	??___flmul+1,w
  5205  0B53  1103               	clrz
  5206  0B54  1803               	skipnc
  5207  0B55  3E01               	addlw	1
  5208  0B56  1D03               	btfss	3,2
  5209  0B57  07B9               	addwf	___flmul@prod+1,f
  5210  0B58  082E               	movf	??___flmul+2,w
  5211  0B59  1103               	clrz
  5212  0B5A  1803               	skipnc
  5213  0B5B  3E01               	addlw	1
  5214  0B5C  1D03               	btfss	3,2
  5215  0B5D  07BA               	addwf	___flmul@prod+2,f
  5216  0B5E  082F               	movf	??___flmul+3,w
  5217  0B5F  1103               	clrz
  5218  0B60  1803               	skipnc
  5219  0B61  3E01               	addlw	1
  5220  0B62  1D03               	btfss	3,2
  5221  0B63  07BB               	addwf	___flmul@prod+3,f
  5222  0B64  0826               	movf	___flmul@b+2,w
  5223  0B65  00AC               	movwf	??___flmul
  5224  0B66  082C               	movf	??___flmul,w
  5225  0B67  00F0               	movwf	__Umul8_16@multiplicand
  5226  0B68  0829               	movf	___flmul@a+1,w
  5227  0B69  160A  158A  26A6  120A  158A  	fcall	__Umul8_16
  5228  0B6E  0871               	movf	?__Umul8_16+1,w
  5229  0B6F  1283               	bcf	3,5	;RP0=0, select bank0
  5230  0B70  1303               	bcf	3,6	;RP1=0, select bank0
  5231  0B71  00BD               	movwf	___flmul@temp+1
  5232  0B72  0870               	movf	?__Umul8_16,w
  5233  0B73  00BC               	movwf	___flmul@temp
  5234  0B74  083C               	movf	___flmul@temp,w
  5235  0B75  00AC               	movwf	??___flmul
  5236  0B76  083D               	movf	___flmul@temp+1,w
  5237  0B77  00AD               	movwf	??___flmul+1
  5238  0B78  01AE               	clrf	??___flmul+2
  5239  0B79  01AF               	clrf	??___flmul+3
  5240  0B7A  082C               	movf	??___flmul,w
  5241  0B7B  07B8               	addwf	___flmul@prod,f
  5242  0B7C  082D               	movf	??___flmul+1,w
  5243  0B7D  1103               	clrz
  5244  0B7E  1803               	skipnc
  5245  0B7F  3E01               	addlw	1
  5246  0B80  1D03               	btfss	3,2
  5247  0B81  07B9               	addwf	___flmul@prod+1,f
  5248  0B82  082E               	movf	??___flmul+2,w
  5249  0B83  1103               	clrz
  5250  0B84  1803               	skipnc
  5251  0B85  3E01               	addlw	1
  5252  0B86  1D03               	btfss	3,2
  5253  0B87  07BA               	addwf	___flmul@prod+2,f
  5254  0B88  082F               	movf	??___flmul+3,w
  5255  0B89  1103               	clrz
  5256  0B8A  1803               	skipnc
  5257  0B8B  3E01               	addlw	1
  5258  0B8C  1D03               	btfss	3,2
  5259  0B8D  07BB               	addwf	___flmul@prod+3,f
  5260  0B8E  0826               	movf	___flmul@b+2,w
  5261  0B8F  00AC               	movwf	??___flmul
  5262  0B90  082C               	movf	??___flmul,w
  5263  0B91  00F0               	movwf	__Umul8_16@multiplicand
  5264  0B92  082A               	movf	___flmul@a+2,w
  5265  0B93  160A  158A  26A6  120A  158A  	fcall	__Umul8_16
  5266  0B98  0871               	movf	?__Umul8_16+1,w
  5267  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  5268  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  5269  0B9B  00BD               	movwf	___flmul@temp+1
  5270  0B9C  0870               	movf	?__Umul8_16,w
  5271  0B9D  00BC               	movwf	___flmul@temp
  5272  0B9E  083C               	movf	___flmul@temp,w
  5273  0B9F  00AC               	movwf	??___flmul
  5274  0BA0  083D               	movf	___flmul@temp+1,w
  5275  0BA1  00AD               	movwf	??___flmul+1
  5276  0BA2  01AE               	clrf	??___flmul+2
  5277  0BA3  01AF               	clrf	??___flmul+3
  5278  0BA4  3008               	movlw	8
  5279  0BA5                     u3815:	
  5280  0BA5  1003               	clrc
  5281  0BA6  0DAC               	rlf	??___flmul,f
  5282  0BA7  0DAD               	rlf	??___flmul+1,f
  5283  0BA8  0DAE               	rlf	??___flmul+2,f
  5284  0BA9  0DAF               	rlf	??___flmul+3,f
  5285  0BAA  3EFF               	addlw	-1
  5286  0BAB  1D03               	skipz
  5287  0BAC  2BA5               	goto	u3815
  5288  0BAD  082C               	movf	??___flmul,w
  5289  0BAE  07B8               	addwf	___flmul@prod,f
  5290  0BAF  082D               	movf	??___flmul+1,w
  5291  0BB0  1103               	clrz
  5292  0BB1  1803               	skipnc
  5293  0BB2  3E01               	addlw	1
  5294  0BB3  1D03               	btfss	3,2
  5295  0BB4  07B9               	addwf	___flmul@prod+1,f
  5296  0BB5  082E               	movf	??___flmul+2,w
  5297  0BB6  1103               	clrz
  5298  0BB7  1803               	skipnc
  5299  0BB8  3E01               	addlw	1
  5300  0BB9  1D03               	btfss	3,2
  5301  0BBA  07BA               	addwf	___flmul@prod+2,f
  5302  0BBB  082F               	movf	??___flmul+3,w
  5303  0BBC  1103               	clrz
  5304  0BBD  1803               	skipnc
  5305  0BBE  3E01               	addlw	1
  5306  0BBF  1D03               	btfss	3,2
  5307  0BC0  07BB               	addwf	___flmul@prod+3,f
  5308  0BC1  0832               	movf	___flmul@grs,w
  5309  0BC2  00AC               	movwf	??___flmul
  5310  0BC3  0833               	movf	___flmul@grs+1,w
  5311  0BC4  00AD               	movwf	??___flmul+1
  5312  0BC5  0834               	movf	___flmul@grs+2,w
  5313  0BC6  00AE               	movwf	??___flmul+2
  5314  0BC7  0835               	movf	___flmul@grs+3,w
  5315  0BC8  00AF               	movwf	??___flmul+3
  5316  0BC9  3018               	movlw	24
  5317  0BCA                     u3835:	
  5318  0BCA  1003               	clrc
  5319  0BCB  0CAF               	rrf	??___flmul+3,f
  5320  0BCC  0CAE               	rrf	??___flmul+2,f
  5321  0BCD  0CAD               	rrf	??___flmul+1,f
  5322  0BCE  0CAC               	rrf	??___flmul,f
  5323  0BCF  3EFF               	addlw	-1
  5324  0BD0  1D03               	skipz
  5325  0BD1  2BCA               	goto	u3835
  5326  0BD2  082C               	movf	??___flmul,w
  5327  0BD3  07B8               	addwf	___flmul@prod,f
  5328  0BD4  082D               	movf	??___flmul+1,w
  5329  0BD5  1103               	clrz
  5330  0BD6  1803               	skipnc
  5331  0BD7  3E01               	addlw	1
  5332  0BD8  1D03               	btfss	3,2
  5333  0BD9  07B9               	addwf	___flmul@prod+1,f
  5334  0BDA  082E               	movf	??___flmul+2,w
  5335  0BDB  1103               	clrz
  5336  0BDC  1803               	skipnc
  5337  0BDD  3E01               	addlw	1
  5338  0BDE  1D03               	btfss	3,2
  5339  0BDF  07BA               	addwf	___flmul@prod+2,f
  5340  0BE0  082F               	movf	??___flmul+3,w
  5341  0BE1  1103               	clrz
  5342  0BE2  1803               	skipnc
  5343  0BE3  3E01               	addlw	1
  5344  0BE4  1D03               	btfss	3,2
  5345  0BE5  07BB               	addwf	___flmul@prod+3,f
  5346  0BE6  3008               	movlw	8
  5347  0BE7  00AC               	movwf	??___flmul
  5348  0BE8                     u3855:	
  5349  0BE8  1003               	clrc
  5350  0BE9  0DB2               	rlf	___flmul@grs,f
  5351  0BEA  0DB3               	rlf	___flmul@grs+1,f
  5352  0BEB  0DB4               	rlf	___flmul@grs+2,f
  5353  0BEC  0DB5               	rlf	___flmul@grs+3,f
  5354  0BED  0BAC               	decfsz	??___flmul,f
  5355  0BEE  2BE8               	goto	u3855
  5356  0BEF  0837               	movf	___flmul@bexp,w
  5357  0BF0  0736               	addwf	___flmul@aexp,w
  5358  0BF1  00AC               	movwf	??___flmul
  5359  0BF2  01AD               	clrf	??___flmul+1
  5360  0BF3  0DAD               	rlf	??___flmul+1,f
  5361  0BF4  082C               	movf	??___flmul,w
  5362  0BF5  3E82               	addlw	130
  5363  0BF6  00BC               	movwf	___flmul@temp
  5364  0BF7  082D               	movf	??___flmul+1,w
  5365  0BF8  1803               	skipnc
  5366  0BF9  3E01               	addlw	1
  5367  0BFA  3EFF               	addlw	255
  5368  0BFB  00BD               	movwf	___flmul@temp+1
  5369  0BFC                     l2500:	
  5370  0BFC  1BBA               	btfsc	___flmul@prod+2,7
  5371  0BFD  2C19               	goto	l2502
  5372  0BFE  3001               	movlw	1
  5373  0BFF  00AC               	movwf	??___flmul
  5374  0C00                     u3865:	
  5375  0C00  1003               	clrc
  5376  0C01  0DB8               	rlf	___flmul@prod,f
  5377  0C02  0DB9               	rlf	___flmul@prod+1,f
  5378  0C03  0DBA               	rlf	___flmul@prod+2,f
  5379  0C04  0DBB               	rlf	___flmul@prod+3,f
  5380  0C05  0BAC               	decfsz	??___flmul,f
  5381  0C06  2C00               	goto	u3865
  5382  0C07  1BB5               	btfsc	___flmul@grs+3,7
  5383  0C08  1438               	bsf	___flmul@prod,0
  5384  0C09  3001               	movlw	1
  5385  0C0A  00AC               	movwf	??___flmul
  5386  0C0B                     u3885:	
  5387  0C0B  1003               	clrc
  5388  0C0C  0DB2               	rlf	___flmul@grs,f
  5389  0C0D  0DB3               	rlf	___flmul@grs+1,f
  5390  0C0E  0DB4               	rlf	___flmul@grs+2,f
  5391  0C0F  0DB5               	rlf	___flmul@grs+3,f
  5392  0C10  0BAC               	decfsz	??___flmul,f
  5393  0C11  2C0B               	goto	u3885
  5394  0C12  30FF               	movlw	255
  5395  0C13  07BC               	addwf	___flmul@temp,f
  5396  0C14  1803               	skipnc
  5397  0C15  0ABD               	incf	___flmul@temp+1,f
  5398  0C16  30FF               	movlw	255
  5399  0C17  07BD               	addwf	___flmul@temp+1,f
  5400  0C18  2BFC               	goto	l2500
  5401  0C19                     l2502:	
  5402  0C19  01B6               	clrf	___flmul@aexp
  5403  0C1A  1FB5               	btfss	___flmul@grs+3,7
  5404  0C1B  2C32               	goto	l2512
  5405  0C1C  30FF               	movlw	255
  5406  0C1D  0532               	andwf	___flmul@grs,w
  5407  0C1E  00AC               	movwf	??___flmul
  5408  0C1F  30FF               	movlw	255
  5409  0C20  0533               	andwf	___flmul@grs+1,w
  5410  0C21  00AD               	movwf	??___flmul+1
  5411  0C22  30FF               	movlw	255
  5412  0C23  0534               	andwf	___flmul@grs+2,w
  5413  0C24  00AE               	movwf	??___flmul+2
  5414  0C25  307F               	movlw	127
  5415  0C26  0535               	andwf	___flmul@grs+3,w
  5416  0C27  00AF               	movwf	??___flmul+3
  5417  0C28  082F               	movf	??___flmul+3,w
  5418  0C29  042E               	iorwf	??___flmul+2,w
  5419  0C2A  042D               	iorwf	??___flmul+1,w
  5420  0C2B  042C               	iorwf	??___flmul,w
  5421  0C2C  1903               	skipnz
  5422  0C2D  1838               	btfsc	___flmul@prod,0
  5423  0C2E  2C30               	goto	l2508
  5424  0C2F  2C32               	goto	l2512
  5425  0C30                     l2508:	
  5426  0C30  01B6               	clrf	___flmul@aexp
  5427  0C31  0AB6               	incf	___flmul@aexp,f
  5428  0C32                     l2512:	
  5429  0C32  0836               	movf	___flmul@aexp,w
  5430  0C33  1903               	btfsc	3,2
  5431  0C34  2C64               	goto	l2522
  5432  0C35  3001               	movlw	1
  5433  0C36  07B8               	addwf	___flmul@prod,f
  5434  0C37  3000               	movlw	0
  5435  0C38  1803               	skipnc
  5436  0C39  3001               	movlw	1
  5437  0C3A  07B9               	addwf	___flmul@prod+1,f
  5438  0C3B  3000               	movlw	0
  5439  0C3C  1803               	skipnc
  5440  0C3D  3001               	movlw	1
  5441  0C3E  07BA               	addwf	___flmul@prod+2,f
  5442  0C3F  3000               	movlw	0
  5443  0C40  1803               	skipnc
  5444  0C41  3001               	movlw	1
  5445  0C42  07BB               	addwf	___flmul@prod+3,f
  5446  0C43  1C3B               	btfss	___flmul@prod+3,0
  5447  0C44  2C64               	goto	l2522
  5448  0C45  0838               	movf	___flmul@prod,w
  5449  0C46  00AC               	movwf	??___flmul
  5450  0C47  0839               	movf	___flmul@prod+1,w
  5451  0C48  00AD               	movwf	??___flmul+1
  5452  0C49  083A               	movf	___flmul@prod+2,w
  5453  0C4A  00AE               	movwf	??___flmul+2
  5454  0C4B  083B               	movf	___flmul@prod+3,w
  5455  0C4C  00AF               	movwf	??___flmul+3
  5456  0C4D  3001               	movlw	1
  5457  0C4E  00B0               	movwf	??___flmul+4
  5458  0C4F                     u3955:	
  5459  0C4F  0D2F               	rlf	??___flmul+3,w
  5460  0C50  0CAF               	rrf	??___flmul+3,f
  5461  0C51  0CAE               	rrf	??___flmul+2,f
  5462  0C52  0CAD               	rrf	??___flmul+1,f
  5463  0C53  0CAC               	rrf	??___flmul,f
  5464  0C54  0BB0               	decfsz	??___flmul+4,f
  5465  0C55  2C4F               	goto	u3955
  5466  0C56  082F               	movf	??___flmul+3,w
  5467  0C57  00BB               	movwf	___flmul@prod+3
  5468  0C58  082E               	movf	??___flmul+2,w
  5469  0C59  00BA               	movwf	___flmul@prod+2
  5470  0C5A  082D               	movf	??___flmul+1,w
  5471  0C5B  00B9               	movwf	___flmul@prod+1
  5472  0C5C  082C               	movf	??___flmul,w
  5473  0C5D  00B8               	movwf	___flmul@prod
  5474  0C5E  3001               	movlw	1
  5475  0C5F  07BC               	addwf	___flmul@temp,f
  5476  0C60  1803               	skipnc
  5477  0C61  0ABD               	incf	___flmul@temp+1,f
  5478  0C62  3000               	movlw	0
  5479  0C63  07BD               	addwf	___flmul@temp+1,f
  5480  0C64                     l2522:	
  5481  0C64  083D               	movf	___flmul@temp+1,w
  5482  0C65  3A80               	xorlw	128
  5483  0C66  00FF               	movwf	127
  5484  0C67  3080               	movlw	128
  5485  0C68  027F               	subwf	127,w
  5486  0C69  1D03               	skipz
  5487  0C6A  2C6D               	goto	u3965
  5488  0C6B  30FF               	movlw	255
  5489  0C6C  023C               	subwf	___flmul@temp,w
  5490  0C6D                     u3965:	
  5491  0C6D  1C03               	skipc
  5492  0C6E  2C7A               	goto	l2526
  5493  0C6F  307F               	movlw	127
  5494  0C70  1283               	bcf	3,5	;RP0=0, select bank0
  5495  0C71  1303               	bcf	3,6	;RP1=0, select bank0
  5496  0C72  00BB               	movwf	___flmul@prod+3
  5497  0C73  3080               	movlw	128
  5498  0C74  00BA               	movwf	___flmul@prod+2
  5499  0C75  3000               	movlw	0
  5500  0C76  00B9               	movwf	___flmul@prod+1
  5501  0C77  3000               	movlw	0
  5502  0C78  00B8               	movwf	___flmul@prod
  5503  0C79  2CAA               	goto	l686
  5504  0C7A                     l2526:	
  5505  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  5506  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  5507  0C7C  083D               	movf	___flmul@temp+1,w
  5508  0C7D  3A80               	xorlw	128
  5509  0C7E  00FF               	movwf	127
  5510  0C7F  3080               	movlw	128
  5511  0C80  027F               	subwf	127,w
  5512  0C81  1D03               	skipz
  5513  0C82  2C85               	goto	u3975
  5514  0C83  3001               	movlw	1
  5515  0C84  023C               	subwf	___flmul@temp,w
  5516  0C85                     u3975:	
  5517  0C85  1803               	skipnc
  5518  0C86  2C93               	goto	l2532
  5519  0C87  3000               	movlw	0
  5520  0C88  1283               	bcf	3,5	;RP0=0, select bank0
  5521  0C89  1303               	bcf	3,6	;RP1=0, select bank0
  5522  0C8A  00BB               	movwf	___flmul@prod+3
  5523  0C8B  3000               	movlw	0
  5524  0C8C  00BA               	movwf	___flmul@prod+2
  5525  0C8D  3000               	movlw	0
  5526  0C8E  00B9               	movwf	___flmul@prod+1
  5527  0C8F  3000               	movlw	0
  5528  0C90  00B8               	movwf	___flmul@prod
  5529  0C91  01B1               	clrf	___flmul@sign
  5530  0C92  2CAA               	goto	l686
  5531  0C93                     l2532:	
  5532  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  5533  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  5534  0C95  083C               	movf	___flmul@temp,w
  5535  0C96  00AC               	movwf	??___flmul
  5536  0C97  082C               	movf	??___flmul,w
  5537  0C98  00B7               	movwf	___flmul@bexp
  5538  0C99  30FF               	movlw	255
  5539  0C9A  05B8               	andwf	___flmul@prod,f
  5540  0C9B  30FF               	movlw	255
  5541  0C9C  05B9               	andwf	___flmul@prod+1,f
  5542  0C9D  307F               	movlw	127
  5543  0C9E  05BA               	andwf	___flmul@prod+2,f
  5544  0C9F  3000               	movlw	0
  5545  0CA0  05BB               	andwf	___flmul@prod+3,f
  5546  0CA1  1837               	btfsc	___flmul@bexp,0
  5547  0CA2  17BA               	bsf	___flmul@prod+2,7
  5548  0CA3  0837               	movf	___flmul@bexp,w
  5549  0CA4  00AC               	movwf	??___flmul
  5550  0CA5  1003               	clrc
  5551  0CA6  0C2C               	rrf	??___flmul,w
  5552  0CA7  00AD               	movwf	??___flmul+1
  5553  0CA8  082D               	movf	??___flmul+1,w
  5554  0CA9  00BB               	movwf	___flmul@prod+3
  5555  0CAA                     l686:	
  5556  0CAA  0831               	movf	___flmul@sign,w
  5557  0CAB  00AC               	movwf	??___flmul
  5558  0CAC  082C               	movf	??___flmul,w
  5559  0CAD  04BB               	iorwf	___flmul@prod+3,f
  5560  0CAE  083B               	movf	___flmul@prod+3,w
  5561  0CAF  00A7               	movwf	?___flmul+3
  5562  0CB0  083A               	movf	___flmul@prod+2,w
  5563  0CB1  00A6               	movwf	?___flmul+2
  5564  0CB2  0839               	movf	___flmul@prod+1,w
  5565  0CB3  00A5               	movwf	?___flmul+1
  5566  0CB4  0838               	movf	___flmul@prod,w
  5567  0CB5  00A4               	movwf	?___flmul
  5568  0CB6  0008               	return
  5569  0CB7                     __end_of___flmul:	
  5570                           
  5571                           	psect	text10
  5572  1EA6                     __ptext10:	
  5573 ;; *************** function __Umul8_16 *****************
  5574 ;; Defined at:
  5575 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  5576 ;; Parameters:    Size  Location     Type
  5577 ;;  multiplier      1    wreg     unsigned char 
  5578 ;;  multiplicand    1    0[COMMON] unsigned char 
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;  multiplier      1    8[COMMON] unsigned char 
  5581 ;;  word_mpld       2    6[COMMON] unsigned int 
  5582 ;;  product         2    4[COMMON] unsigned int 
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  2    0[COMMON] unsigned int 
  5585 ;; Registers used:
  5586 ;;		wreg, status,2, status,0
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5592 ;;      Params:         2       0       0       0       0
  5593 ;;      Locals:         5       0       0       0       0
  5594 ;;      Temps:          2       0       0       0       0
  5595 ;;      Totals:         9       0       0       0       0
  5596 ;;Total ram usage:        9 bytes
  5597 ;; Hardware stack levels used:    1
  5598 ;; This function calls:
  5599 ;;		Nothing
  5600 ;; This function is called by:
  5601 ;;		___flmul
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605                           
  5606                           ;psect for function __Umul8_16
  5607  1EA6                     __Umul8_16:	
  5608                           
  5609                           ;incstack = 0
  5610                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5611                           ;__Umul8_16@multiplier stored from wreg
  5612  1EA6  00F8               	movwf	__Umul8_16@multiplier
  5613  1EA7  01F4               	clrf	__Umul8_16@product
  5614  1EA8  01F5               	clrf	__Umul8_16@product+1
  5615  1EA9  0870               	movf	__Umul8_16@multiplicand,w
  5616  1EAA  00F2               	movwf	??__Umul8_16
  5617  1EAB  01F3               	clrf	??__Umul8_16+1
  5618  1EAC  0872               	movf	??__Umul8_16,w
  5619  1EAD  00F6               	movwf	__Umul8_16@word_mpld
  5620  1EAE  0873               	movf	??__Umul8_16+1,w
  5621  1EAF  00F7               	movwf	__Umul8_16@word_mpld+1
  5622  1EB0                     l2060:	
  5623  1EB0  1C78               	btfss	__Umul8_16@multiplier,0
  5624  1EB1  2EB8               	goto	l740
  5625  1EB2  0876               	movf	__Umul8_16@word_mpld,w
  5626  1EB3  07F4               	addwf	__Umul8_16@product,f
  5627  1EB4  1803               	skipnc
  5628  1EB5  0AF5               	incf	__Umul8_16@product+1,f
  5629  1EB6  0877               	movf	__Umul8_16@word_mpld+1,w
  5630  1EB7  07F5               	addwf	__Umul8_16@product+1,f
  5631  1EB8                     l740:	
  5632  1EB8  3001               	movlw	1
  5633  1EB9                     u2785:	
  5634  1EB9  1003               	clrc
  5635  1EBA  0DF6               	rlf	__Umul8_16@word_mpld,f
  5636  1EBB  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5637  1EBC  3EFF               	addlw	-1
  5638  1EBD  1D03               	skipz
  5639  1EBE  2EB9               	goto	u2785
  5640  1EBF  1003               	clrc
  5641  1EC0  0CF8               	rrf	__Umul8_16@multiplier,f
  5642  1EC1  0878               	movf	__Umul8_16@multiplier,w
  5643  1EC2  1D03               	btfss	3,2
  5644  1EC3  2EB0               	goto	l2060
  5645  1EC4  0875               	movf	__Umul8_16@product+1,w
  5646  1EC5  00F1               	movwf	?__Umul8_16+1
  5647  1EC6  0874               	movf	__Umul8_16@product,w
  5648  1EC7  00F0               	movwf	?__Umul8_16
  5649  1EC8  0008               	return
  5650  1EC9                     __end_of__Umul8_16:	
  5651                           
  5652                           	psect	text11
  5653  084F                     __ptext11:	
  5654 ;; *************** function __tdiv_to_l_ *****************
  5655 ;; Defined at:
  5656 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;  f1              4    0[COMMON] float 
  5659 ;;  f2              4    4[COMMON] float 
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;  quot            4    0[BANK0 ] unsigned long 
  5662 ;;  exp1            1    5[BANK0 ] unsigned char 
  5663 ;;  cntr            1    4[BANK0 ] unsigned char 
  5664 ;; Return value:  Size  Location     Type
  5665 ;;                  4    0[COMMON] unsigned long 
  5666 ;; Registers used:
  5667 ;;		wreg, status,2, status,0
  5668 ;; Tracked objects:
  5669 ;;		On entry : 0/0
  5670 ;;		On exit  : 0/0
  5671 ;;		Unchanged: 0/0
  5672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5673 ;;      Params:         8       0       0       0       0
  5674 ;;      Locals:         0       6       0       0       0
  5675 ;;      Temps:          4       0       0       0       0
  5676 ;;      Totals:        12       6       0       0       0
  5677 ;;Total ram usage:       18 bytes
  5678 ;; Hardware stack levels used:    1
  5679 ;; This function calls:
  5680 ;;		Nothing
  5681 ;; This function is called by:
  5682 ;;		_sprintf
  5683 ;; This function uses a non-reentrant model
  5684 ;;
  5685                           
  5686                           
  5687                           ;psect for function __tdiv_to_l_
  5688  084F                     __tdiv_to_l_:	
  5689                           
  5690                           ;incstack = 0
  5691                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5692  084F  0870               	movf	__tdiv_to_l_@f1,w
  5693  0850  00F8               	movwf	??__tdiv_to_l_
  5694  0851  0871               	movf	__tdiv_to_l_@f1+1,w
  5695  0852  00F9               	movwf	??__tdiv_to_l_+1
  5696  0853  0872               	movf	__tdiv_to_l_@f1+2,w
  5697  0854  00FA               	movwf	??__tdiv_to_l_+2
  5698  0855  1003               	clrc
  5699  0856  0D79               	rlf	??__tdiv_to_l_+1,w
  5700  0857  0D7A               	rlf	??__tdiv_to_l_+2,w
  5701  0858  00FB               	movwf	??__tdiv_to_l_+3
  5702  0859  087B               	movf	??__tdiv_to_l_+3,w
  5703  085A  1283               	bcf	3,5	;RP0=0, select bank0
  5704  085B  1303               	bcf	3,6	;RP1=0, select bank0
  5705  085C  00A5               	movwf	__tdiv_to_l_@exp1
  5706  085D  0825               	movf	__tdiv_to_l_@exp1,w
  5707  085E  1D03               	btfss	3,2
  5708  085F  2869               	goto	l2650
  5709  0860                     l2646:	
  5710  0860  3000               	movlw	0
  5711  0861  00F3               	movwf	?__tdiv_to_l_+3
  5712  0862  3000               	movlw	0
  5713  0863  00F2               	movwf	?__tdiv_to_l_+2
  5714  0864  3000               	movlw	0
  5715  0865  00F1               	movwf	?__tdiv_to_l_+1
  5716  0866  3000               	movlw	0
  5717  0867  00F0               	movwf	?__tdiv_to_l_
  5718  0868  0008               	return
  5719  0869                     l2650:	
  5720  0869  0874               	movf	__tdiv_to_l_@f2,w
  5721  086A  00F8               	movwf	??__tdiv_to_l_
  5722  086B  0875               	movf	__tdiv_to_l_@f2+1,w
  5723  086C  00F9               	movwf	??__tdiv_to_l_+1
  5724  086D  0876               	movf	__tdiv_to_l_@f2+2,w
  5725  086E  00FA               	movwf	??__tdiv_to_l_+2
  5726  086F  1003               	clrc
  5727  0870  0D79               	rlf	??__tdiv_to_l_+1,w
  5728  0871  0D7A               	rlf	??__tdiv_to_l_+2,w
  5729  0872  00FB               	movwf	??__tdiv_to_l_+3
  5730  0873  087B               	movf	??__tdiv_to_l_+3,w
  5731  0874  00A4               	movwf	__tdiv_to_l_@cntr
  5732  0875  0824               	movf	__tdiv_to_l_@cntr,w
  5733  0876  1903               	btfsc	3,2
  5734  0877  2860               	goto	l2646
  5735  0878  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5736  0879  30FF               	movlw	255
  5737  087A  05F0               	andwf	__tdiv_to_l_@f1,f
  5738  087B  30FF               	movlw	255
  5739  087C  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5740  087D  3000               	movlw	0
  5741  087E  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5742  087F  17F5               	bsf	__tdiv_to_l_@f2+1,7
  5743  0880  30FF               	movlw	255
  5744  0881  05F4               	andwf	__tdiv_to_l_@f2,f
  5745  0882  30FF               	movlw	255
  5746  0883  05F5               	andwf	__tdiv_to_l_@f2+1,f
  5747  0884  3000               	movlw	0
  5748  0885  05F6               	andwf	__tdiv_to_l_@f2+2,f
  5749  0886  3000               	movlw	0
  5750  0887  00A3               	movwf	__tdiv_to_l_@quot+3
  5751  0888  3000               	movlw	0
  5752  0889  00A2               	movwf	__tdiv_to_l_@quot+2
  5753  088A  3000               	movlw	0
  5754  088B  00A1               	movwf	__tdiv_to_l_@quot+1
  5755  088C  3000               	movlw	0
  5756  088D  00A0               	movwf	__tdiv_to_l_@quot
  5757  088E  307F               	movlw	127
  5758  088F  02A5               	subwf	__tdiv_to_l_@exp1,f
  5759  0890  3098               	movlw	152
  5760  0891  0724               	addwf	__tdiv_to_l_@cntr,w
  5761  0892  00F8               	movwf	??__tdiv_to_l_
  5762  0893  0878               	movf	??__tdiv_to_l_,w
  5763  0894  02A5               	subwf	__tdiv_to_l_@exp1,f
  5764  0895  3018               	movlw	24
  5765  0896  00F8               	movwf	??__tdiv_to_l_
  5766  0897  0878               	movf	??__tdiv_to_l_,w
  5767  0898  00A4               	movwf	__tdiv_to_l_@cntr
  5768  0899                     l2664:	
  5769  0899  3001               	movlw	1
  5770  089A  00F8               	movwf	??__tdiv_to_l_
  5771  089B                     u4295:	
  5772  089B  1003               	clrc
  5773  089C  0DA0               	rlf	__tdiv_to_l_@quot,f
  5774  089D  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5775  089E  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5776  089F  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5777  08A0  0BF8               	decfsz	??__tdiv_to_l_,f
  5778  08A1  289B               	goto	u4295
  5779  08A2  0876               	movf	__tdiv_to_l_@f2+2,w
  5780  08A3  0272               	subwf	__tdiv_to_l_@f1+2,w
  5781  08A4  1D03               	skipz
  5782  08A5  28AC               	goto	u4305
  5783  08A6  0875               	movf	__tdiv_to_l_@f2+1,w
  5784  08A7  0271               	subwf	__tdiv_to_l_@f1+1,w
  5785  08A8  1D03               	skipz
  5786  08A9  28AC               	goto	u4305
  5787  08AA  0874               	movf	__tdiv_to_l_@f2,w
  5788  08AB  0270               	subwf	__tdiv_to_l_@f1,w
  5789  08AC                     u4305:	
  5790  08AC  1C03               	skipc
  5791  08AD  28B9               	goto	l2672
  5792  08AE  0874               	movf	__tdiv_to_l_@f2,w
  5793  08AF  02F0               	subwf	__tdiv_to_l_@f1,f
  5794  08B0  0875               	movf	__tdiv_to_l_@f2+1,w
  5795  08B1  1C03               	skipc
  5796  08B2  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  5797  08B3  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5798  08B4  0876               	movf	__tdiv_to_l_@f2+2,w
  5799  08B5  1C03               	skipc
  5800  08B6  0A76               	incf	__tdiv_to_l_@f2+2,w
  5801  08B7  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5802  08B8  1420               	bsf	__tdiv_to_l_@quot,0
  5803  08B9                     l2672:	
  5804  08B9  3001               	movlw	1
  5805  08BA                     u4315:	
  5806  08BA  1003               	clrc
  5807  08BB  0DF0               	rlf	__tdiv_to_l_@f1,f
  5808  08BC  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5809  08BD  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5810  08BE  3EFF               	addlw	-1
  5811  08BF  1D03               	skipz
  5812  08C0  28BA               	goto	u4315
  5813  08C1  3001               	movlw	1
  5814  08C2  02A4               	subwf	__tdiv_to_l_@cntr,f
  5815  08C3  1D03               	btfss	3,2
  5816  08C4  2899               	goto	l2664
  5817  08C5  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5818  08C6  28DC               	goto	l2684
  5819  08C7  0825               	movf	__tdiv_to_l_@exp1,w
  5820  08C8  3A80               	xorlw	128
  5821  08C9  3E97               	addlw	151
  5822  08CA  1C03               	btfss	3,0
  5823  08CB  2860               	goto	l2646
  5824  08CC                     l2682:	
  5825  08CC  3001               	movlw	1
  5826  08CD                     u4355:	
  5827  08CD  1003               	clrc
  5828  08CE  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5829  08CF  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5830  08D0  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5831  08D1  0CA0               	rrf	__tdiv_to_l_@quot,f
  5832  08D2  3EFF               	addlw	-1
  5833  08D3  1D03               	skipz
  5834  08D4  28CD               	goto	u4355
  5835  08D5  3001               	movlw	1
  5836  08D6  00F8               	movwf	??__tdiv_to_l_
  5837  08D7  0878               	movf	??__tdiv_to_l_,w
  5838  08D8  07A5               	addwf	__tdiv_to_l_@exp1,f
  5839  08D9  1903               	btfsc	3,2
  5840  08DA  28EF               	goto	l2692
  5841  08DB  28CC               	goto	l2682
  5842  08DC                     l2684:	
  5843  08DC  3018               	movlw	24
  5844  08DD  0225               	subwf	__tdiv_to_l_@exp1,w
  5845  08DE  1803               	btfsc	3,0
  5846  08DF  2860               	goto	l2646
  5847  08E0                     l479:	
  5848  08E0  0825               	movf	__tdiv_to_l_@exp1,w
  5849  08E1  1903               	btfsc	3,2
  5850  08E2  28EF               	goto	l2692
  5851  08E3  3001               	movlw	1
  5852  08E4  00F8               	movwf	??__tdiv_to_l_
  5853  08E5                     u4385:	
  5854  08E5  1003               	clrc
  5855  08E6  0DA0               	rlf	__tdiv_to_l_@quot,f
  5856  08E7  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5857  08E8  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5858  08E9  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5859  08EA  0BF8               	decfsz	??__tdiv_to_l_,f
  5860  08EB  28E5               	goto	u4385
  5861  08EC  3001               	movlw	1
  5862  08ED  02A5               	subwf	__tdiv_to_l_@exp1,f
  5863  08EE  28E0               	goto	l479
  5864  08EF                     l2692:	
  5865  08EF  0823               	movf	__tdiv_to_l_@quot+3,w
  5866  08F0  00F3               	movwf	?__tdiv_to_l_+3
  5867  08F1  0822               	movf	__tdiv_to_l_@quot+2,w
  5868  08F2  00F2               	movwf	?__tdiv_to_l_+2
  5869  08F3  0821               	movf	__tdiv_to_l_@quot+1,w
  5870  08F4  00F1               	movwf	?__tdiv_to_l_+1
  5871  08F5  0820               	movf	__tdiv_to_l_@quot,w
  5872  08F6  00F0               	movwf	?__tdiv_to_l_
  5873  08F7  0008               	return
  5874  08F8                     __end_of__tdiv_to_l_:	
  5875                           
  5876                           	psect	text12
  5877  08F8                     __ptext12:	
  5878 ;; *************** function __div_to_l_ *****************
  5879 ;; Defined at:
  5880 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;  f1              4    0[COMMON] unsigned long 
  5883 ;;  f2              4    4[COMMON] unsigned long 
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;  quot            4    0[BANK0 ] unsigned long 
  5886 ;;  exp1            1    5[BANK0 ] unsigned char 
  5887 ;;  cntr            1    4[BANK0 ] unsigned char 
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  4    0[COMMON] unsigned long 
  5890 ;; Registers used:
  5891 ;;		wreg, status,2, status,0
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5897 ;;      Params:         8       0       0       0       0
  5898 ;;      Locals:         0       6       0       0       0
  5899 ;;      Temps:          1       0       0       0       0
  5900 ;;      Totals:         9       6       0       0       0
  5901 ;;Total ram usage:       15 bytes
  5902 ;; Hardware stack levels used:    1
  5903 ;; This function calls:
  5904 ;;		Nothing
  5905 ;; This function is called by:
  5906 ;;		_sprintf
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           
  5910                           
  5911                           ;psect for function __div_to_l_
  5912  08F8                     __div_to_l_:	
  5913                           
  5914                           ;incstack = 0
  5915                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5916  08F8  1003               	clrc
  5917  08F9  0D72               	rlf	__div_to_l_@f1+2,w
  5918  08FA  0D73               	rlf	__div_to_l_@f1+3,w
  5919  08FB  00F8               	movwf	??__div_to_l_
  5920  08FC  0878               	movf	??__div_to_l_,w
  5921  08FD  1283               	bcf	3,5	;RP0=0, select bank0
  5922  08FE  1303               	bcf	3,6	;RP1=0, select bank0
  5923  08FF  00A5               	movwf	__div_to_l_@exp1
  5924  0900  0825               	movf	__div_to_l_@exp1,w
  5925  0901  1D03               	btfss	3,2
  5926  0902  290C               	goto	l2702
  5927  0903                     l2698:	
  5928  0903  3000               	movlw	0
  5929  0904  00F3               	movwf	?__div_to_l_+3
  5930  0905  3000               	movlw	0
  5931  0906  00F2               	movwf	?__div_to_l_+2
  5932  0907  3000               	movlw	0
  5933  0908  00F1               	movwf	?__div_to_l_+1
  5934  0909  3000               	movlw	0
  5935  090A  00F0               	movwf	?__div_to_l_
  5936  090B  0008               	return
  5937  090C                     l2702:	
  5938  090C  1003               	clrc
  5939  090D  0D76               	rlf	__div_to_l_@f2+2,w
  5940  090E  0D77               	rlf	__div_to_l_@f2+3,w
  5941  090F  00F8               	movwf	??__div_to_l_
  5942  0910  0878               	movf	??__div_to_l_,w
  5943  0911  00A4               	movwf	__div_to_l_@cntr
  5944  0912  0824               	movf	__div_to_l_@cntr,w
  5945  0913  1903               	btfsc	3,2
  5946  0914  2903               	goto	l2698
  5947  0915  17F2               	bsf	__div_to_l_@f1+2,7
  5948  0916  30FF               	movlw	255
  5949  0917  05F0               	andwf	__div_to_l_@f1,f
  5950  0918  30FF               	movlw	255
  5951  0919  05F1               	andwf	__div_to_l_@f1+1,f
  5952  091A  30FF               	movlw	255
  5953  091B  05F2               	andwf	__div_to_l_@f1+2,f
  5954  091C  3000               	movlw	0
  5955  091D  05F3               	andwf	__div_to_l_@f1+3,f
  5956  091E  17F6               	bsf	__div_to_l_@f2+2,7
  5957  091F  30FF               	movlw	255
  5958  0920  05F4               	andwf	__div_to_l_@f2,f
  5959  0921  30FF               	movlw	255
  5960  0922  05F5               	andwf	__div_to_l_@f2+1,f
  5961  0923  30FF               	movlw	255
  5962  0924  05F6               	andwf	__div_to_l_@f2+2,f
  5963  0925  3000               	movlw	0
  5964  0926  05F7               	andwf	__div_to_l_@f2+3,f
  5965  0927  3000               	movlw	0
  5966  0928  00A3               	movwf	__div_to_l_@quot+3
  5967  0929  3000               	movlw	0
  5968  092A  00A2               	movwf	__div_to_l_@quot+2
  5969  092B  3000               	movlw	0
  5970  092C  00A1               	movwf	__div_to_l_@quot+1
  5971  092D  3000               	movlw	0
  5972  092E  00A0               	movwf	__div_to_l_@quot
  5973  092F  307F               	movlw	127
  5974  0930  02A5               	subwf	__div_to_l_@exp1,f
  5975  0931  30A0               	movlw	160
  5976  0932  0724               	addwf	__div_to_l_@cntr,w
  5977  0933  00F8               	movwf	??__div_to_l_
  5978  0934  0878               	movf	??__div_to_l_,w
  5979  0935  02A5               	subwf	__div_to_l_@exp1,f
  5980  0936  3020               	movlw	32
  5981  0937  00F8               	movwf	??__div_to_l_
  5982  0938  0878               	movf	??__div_to_l_,w
  5983  0939  00A4               	movwf	__div_to_l_@cntr
  5984  093A                     l2716:	
  5985  093A  3001               	movlw	1
  5986  093B  00F8               	movwf	??__div_to_l_
  5987  093C                     u4425:	
  5988  093C  1003               	clrc
  5989  093D  0DA0               	rlf	__div_to_l_@quot,f
  5990  093E  0DA1               	rlf	__div_to_l_@quot+1,f
  5991  093F  0DA2               	rlf	__div_to_l_@quot+2,f
  5992  0940  0DA3               	rlf	__div_to_l_@quot+3,f
  5993  0941  0BF8               	decfsz	??__div_to_l_,f
  5994  0942  293C               	goto	u4425
  5995  0943  0877               	movf	__div_to_l_@f2+3,w
  5996  0944  0273               	subwf	__div_to_l_@f1+3,w
  5997  0945  1D03               	skipz
  5998  0946  2951               	goto	u4435
  5999  0947  0876               	movf	__div_to_l_@f2+2,w
  6000  0948  0272               	subwf	__div_to_l_@f1+2,w
  6001  0949  1D03               	skipz
  6002  094A  2951               	goto	u4435
  6003  094B  0875               	movf	__div_to_l_@f2+1,w
  6004  094C  0271               	subwf	__div_to_l_@f1+1,w
  6005  094D  1D03               	skipz
  6006  094E  2951               	goto	u4435
  6007  094F  0874               	movf	__div_to_l_@f2,w
  6008  0950  0270               	subwf	__div_to_l_@f1,w
  6009  0951                     u4435:	
  6010  0951  1C03               	skipc
  6011  0952  2962               	goto	l2724
  6012  0953  0874               	movf	__div_to_l_@f2,w
  6013  0954  02F0               	subwf	__div_to_l_@f1,f
  6014  0955  0875               	movf	__div_to_l_@f2+1,w
  6015  0956  1C03               	skipc
  6016  0957  0F75               	incfsz	__div_to_l_@f2+1,w
  6017  0958  02F1               	subwf	__div_to_l_@f1+1,f
  6018  0959  0876               	movf	__div_to_l_@f2+2,w
  6019  095A  1C03               	skipc
  6020  095B  0F76               	incfsz	__div_to_l_@f2+2,w
  6021  095C  02F2               	subwf	__div_to_l_@f1+2,f
  6022  095D  0877               	movf	__div_to_l_@f2+3,w
  6023  095E  1C03               	skipc
  6024  095F  0F77               	incfsz	__div_to_l_@f2+3,w
  6025  0960  02F3               	subwf	__div_to_l_@f1+3,f
  6026  0961  1420               	bsf	__div_to_l_@quot,0
  6027  0962                     l2724:	
  6028  0962  3001               	movlw	1
  6029  0963  00F8               	movwf	??__div_to_l_
  6030  0964                     u4445:	
  6031  0964  1003               	clrc
  6032  0965  0DF0               	rlf	__div_to_l_@f1,f
  6033  0966  0DF1               	rlf	__div_to_l_@f1+1,f
  6034  0967  0DF2               	rlf	__div_to_l_@f1+2,f
  6035  0968  0DF3               	rlf	__div_to_l_@f1+3,f
  6036  0969  0BF8               	decfsz	??__div_to_l_,f
  6037  096A  2964               	goto	u4445
  6038  096B  3001               	movlw	1
  6039  096C  02A4               	subwf	__div_to_l_@cntr,f
  6040  096D  1D03               	btfss	3,2
  6041  096E  293A               	goto	l2716
  6042  096F  1FA5               	btfss	__div_to_l_@exp1,7
  6043  0970  2986               	goto	l2736
  6044  0971  0825               	movf	__div_to_l_@exp1,w
  6045  0972  3A80               	xorlw	128
  6046  0973  3E9F               	addlw	159
  6047  0974  1C03               	btfss	3,0
  6048  0975  2903               	goto	l2698
  6049  0976                     l2734:	
  6050  0976  3001               	movlw	1
  6051  0977                     u4485:	
  6052  0977  1003               	clrc
  6053  0978  0CA3               	rrf	__div_to_l_@quot+3,f
  6054  0979  0CA2               	rrf	__div_to_l_@quot+2,f
  6055  097A  0CA1               	rrf	__div_to_l_@quot+1,f
  6056  097B  0CA0               	rrf	__div_to_l_@quot,f
  6057  097C  3EFF               	addlw	-1
  6058  097D  1D03               	skipz
  6059  097E  2977               	goto	u4485
  6060  097F  3001               	movlw	1
  6061  0980  00F8               	movwf	??__div_to_l_
  6062  0981  0878               	movf	??__div_to_l_,w
  6063  0982  07A5               	addwf	__div_to_l_@exp1,f
  6064  0983  1903               	btfsc	3,2
  6065  0984  2999               	goto	l2744
  6066  0985  2976               	goto	l2734
  6067  0986                     l2736:	
  6068  0986  3020               	movlw	32
  6069  0987  0225               	subwf	__div_to_l_@exp1,w
  6070  0988  1803               	btfsc	3,0
  6071  0989  2903               	goto	l2698
  6072  098A                     l432:	
  6073  098A  0825               	movf	__div_to_l_@exp1,w
  6074  098B  1903               	btfsc	3,2
  6075  098C  2999               	goto	l2744
  6076  098D  3001               	movlw	1
  6077  098E  00F8               	movwf	??__div_to_l_
  6078  098F                     u4515:	
  6079  098F  1003               	clrc
  6080  0990  0DA0               	rlf	__div_to_l_@quot,f
  6081  0991  0DA1               	rlf	__div_to_l_@quot+1,f
  6082  0992  0DA2               	rlf	__div_to_l_@quot+2,f
  6083  0993  0DA3               	rlf	__div_to_l_@quot+3,f
  6084  0994  0BF8               	decfsz	??__div_to_l_,f
  6085  0995  298F               	goto	u4515
  6086  0996  3001               	movlw	1
  6087  0997  02A5               	subwf	__div_to_l_@exp1,f
  6088  0998  298A               	goto	l432
  6089  0999                     l2744:	
  6090  0999  0823               	movf	__div_to_l_@quot+3,w
  6091  099A  00F3               	movwf	?__div_to_l_+3
  6092  099B  0822               	movf	__div_to_l_@quot+2,w
  6093  099C  00F2               	movwf	?__div_to_l_+2
  6094  099D  0821               	movf	__div_to_l_@quot+1,w
  6095  099E  00F1               	movwf	?__div_to_l_+1
  6096  099F  0820               	movf	__div_to_l_@quot,w
  6097  09A0  00F0               	movwf	?__div_to_l_
  6098  09A1  0008               	return
  6099  09A2                     __end_of__div_to_l_:	
  6100                           
  6101                           	psect	text13
  6102  132D                     __ptext13:	
  6103 ;; *************** function ___xxtofl *****************
  6104 ;; Defined at:
  6105 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;  sign            1    wreg     unsigned char 
  6108 ;;  val             4    0[COMMON] long 
  6109 ;; Auto vars:     Size  Location     Type
  6110 ;;  sign            1    8[COMMON] unsigned char 
  6111 ;;  arg             4   10[COMMON] unsigned long 
  6112 ;;  exp             1    9[COMMON] unsigned char 
  6113 ;; Return value:  Size  Location     Type
  6114 ;;                  4    0[COMMON] unsigned char 
  6115 ;; Registers used:
  6116 ;;		wreg, status,2, status,0
  6117 ;; Tracked objects:
  6118 ;;		On entry : 0/0
  6119 ;;		On exit  : 0/0
  6120 ;;		Unchanged: 0/0
  6121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6122 ;;      Params:         4       0       0       0       0
  6123 ;;      Locals:         6       0       0       0       0
  6124 ;;      Temps:          4       0       0       0       0
  6125 ;;      Totals:        14       0       0       0       0
  6126 ;;Total ram usage:       14 bytes
  6127 ;; Hardware stack levels used:    1
  6128 ;; This function calls:
  6129 ;;		Nothing
  6130 ;; This function is called by:
  6131 ;;		_sprintf
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135                           
  6136                           ;psect for function ___xxtofl
  6137  132D                     ___xxtofl:	
  6138                           
  6139                           ;incstack = 0
  6140                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6141                           ;___xxtofl@sign stored from wreg
  6142  132D  00F8               	movwf	___xxtofl@sign
  6143  132E  0878               	movf	___xxtofl@sign,w
  6144  132F  1D03               	btfss	3,2
  6145  1330  1FF3               	btfss	___xxtofl@val+3,7
  6146  1331  2B42               	goto	l2894
  6147  1332  0970               	comf	___xxtofl@val,w
  6148  1333  00FA               	movwf	___xxtofl@arg
  6149  1334  0971               	comf	___xxtofl@val+1,w
  6150  1335  00FB               	movwf	___xxtofl@arg+1
  6151  1336  0972               	comf	___xxtofl@val+2,w
  6152  1337  00FC               	movwf	___xxtofl@arg+2
  6153  1338  0973               	comf	___xxtofl@val+3,w
  6154  1339  00FD               	movwf	___xxtofl@arg+3
  6155  133A  0AFA               	incf	___xxtofl@arg,f
  6156  133B  1903               	skipnz
  6157  133C  0AFB               	incf	___xxtofl@arg+1,f
  6158  133D  1903               	skipnz
  6159  133E  0AFC               	incf	___xxtofl@arg+2,f
  6160  133F  1903               	skipnz
  6161  1340  0AFD               	incf	___xxtofl@arg+3,f
  6162  1341  2B4A               	goto	l712
  6163  1342                     l2894:	
  6164  1342  0873               	movf	___xxtofl@val+3,w
  6165  1343  00FD               	movwf	___xxtofl@arg+3
  6166  1344  0872               	movf	___xxtofl@val+2,w
  6167  1345  00FC               	movwf	___xxtofl@arg+2
  6168  1346  0871               	movf	___xxtofl@val+1,w
  6169  1347  00FB               	movwf	___xxtofl@arg+1
  6170  1348  0870               	movf	___xxtofl@val,w
  6171  1349  00FA               	movwf	___xxtofl@arg
  6172  134A                     l712:	
  6173  134A  0873               	movf	___xxtofl@val+3,w
  6174  134B  0472               	iorwf	___xxtofl@val+2,w
  6175  134C  0471               	iorwf	___xxtofl@val+1,w
  6176  134D  0470               	iorwf	___xxtofl@val,w
  6177  134E  1D03               	skipz
  6178  134F  2B59               	goto	l2900
  6179  1350  3000               	movlw	0
  6180  1351  00F3               	movwf	?___xxtofl+3
  6181  1352  3000               	movlw	0
  6182  1353  00F2               	movwf	?___xxtofl+2
  6183  1354  3000               	movlw	0
  6184  1355  00F1               	movwf	?___xxtofl+1
  6185  1356  3000               	movlw	0
  6186  1357  00F0               	movwf	?___xxtofl
  6187  1358  0008               	return
  6188  1359                     l2900:	
  6189  1359  3096               	movlw	150
  6190  135A  00F4               	movwf	??___xxtofl
  6191  135B  0874               	movf	??___xxtofl,w
  6192  135C  00F9               	movwf	___xxtofl@exp
  6193  135D                     l2904:	
  6194  135D  30FE               	movlw	254
  6195  135E  057D               	andwf	___xxtofl@arg+3,w
  6196  135F  1903               	btfsc	3,2
  6197  1360  2B8A               	goto	l718
  6198  1361  3001               	movlw	1
  6199  1362  00F4               	movwf	??___xxtofl
  6200  1363  0874               	movf	??___xxtofl,w
  6201  1364  07F9               	addwf	___xxtofl@exp,f
  6202  1365  3001               	movlw	1
  6203  1366                     u4945:	
  6204  1366  1003               	clrc
  6205  1367  0CFD               	rrf	___xxtofl@arg+3,f
  6206  1368  0CFC               	rrf	___xxtofl@arg+2,f
  6207  1369  0CFB               	rrf	___xxtofl@arg+1,f
  6208  136A  0CFA               	rrf	___xxtofl@arg,f
  6209  136B  3EFF               	addlw	-1
  6210  136C  1D03               	skipz
  6211  136D  2B66               	goto	u4945
  6212  136E  2B5D               	goto	l2904
  6213  136F                     l2906:	
  6214  136F  3001               	movlw	1
  6215  1370  00F4               	movwf	??___xxtofl
  6216  1371  0874               	movf	??___xxtofl,w
  6217  1372  07F9               	addwf	___xxtofl@exp,f
  6218  1373  3001               	movlw	1
  6219  1374  07FA               	addwf	___xxtofl@arg,f
  6220  1375  3000               	movlw	0
  6221  1376  1803               	skipnc
  6222  1377  3001               	movlw	1
  6223  1378  07FB               	addwf	___xxtofl@arg+1,f
  6224  1379  3000               	movlw	0
  6225  137A  1803               	skipnc
  6226  137B  3001               	movlw	1
  6227  137C  07FC               	addwf	___xxtofl@arg+2,f
  6228  137D  3000               	movlw	0
  6229  137E  1803               	skipnc
  6230  137F  3001               	movlw	1
  6231  1380  07FD               	addwf	___xxtofl@arg+3,f
  6232  1381  3001               	movlw	1
  6233  1382                     u4965:	
  6234  1382  1003               	clrc
  6235  1383  0CFD               	rrf	___xxtofl@arg+3,f
  6236  1384  0CFC               	rrf	___xxtofl@arg+2,f
  6237  1385  0CFB               	rrf	___xxtofl@arg+1,f
  6238  1386  0CFA               	rrf	___xxtofl@arg,f
  6239  1387  3EFF               	addlw	-1
  6240  1388  1D03               	skipz
  6241  1389  2B82               	goto	u4965
  6242  138A                     l718:	
  6243  138A  30FF               	movlw	255
  6244  138B  057D               	andwf	___xxtofl@arg+3,w
  6245  138C  1903               	btfsc	3,2
  6246  138D  2B9E               	goto	l2914
  6247  138E  2B6F               	goto	l2906
  6248  138F                     l2916:	
  6249  138F  3002               	movlw	2
  6250  1390  0279               	subwf	___xxtofl@exp,w
  6251  1391  1C03               	btfss	3,0
  6252  1392  2BA0               	goto	l725
  6253  1393  3001               	movlw	1
  6254  1394  02F9               	subwf	___xxtofl@exp,f
  6255  1395  3001               	movlw	1
  6256  1396  00F4               	movwf	??___xxtofl
  6257  1397                     u4985:	
  6258  1397  1003               	clrc
  6259  1398  0DFA               	rlf	___xxtofl@arg,f
  6260  1399  0DFB               	rlf	___xxtofl@arg+1,f
  6261  139A  0DFC               	rlf	___xxtofl@arg+2,f
  6262  139B  0DFD               	rlf	___xxtofl@arg+3,f
  6263  139C  0BF4               	decfsz	??___xxtofl,f
  6264  139D  2B97               	goto	u4985
  6265  139E                     l2914:	
  6266  139E  1FFC               	btfss	___xxtofl@arg+2,7
  6267  139F  2B8F               	goto	l2916
  6268  13A0                     l725:	
  6269  13A0  1879               	btfsc	___xxtofl@exp,0
  6270  13A1  2BAA               	goto	l726
  6271  13A2  30FF               	movlw	255
  6272  13A3  05FA               	andwf	___xxtofl@arg,f
  6273  13A4  30FF               	movlw	255
  6274  13A5  05FB               	andwf	___xxtofl@arg+1,f
  6275  13A6  307F               	movlw	127
  6276  13A7  05FC               	andwf	___xxtofl@arg+2,f
  6277  13A8  30FF               	movlw	255
  6278  13A9  05FD               	andwf	___xxtofl@arg+3,f
  6279  13AA                     l726:	
  6280  13AA  1003               	clrc
  6281  13AB  0CF9               	rrf	___xxtofl@exp,f
  6282  13AC  0879               	movf	___xxtofl@exp,w
  6283  13AD  00F4               	movwf	??___xxtofl
  6284  13AE  01F5               	clrf	??___xxtofl+1
  6285  13AF  01F6               	clrf	??___xxtofl+2
  6286  13B0  01F7               	clrf	??___xxtofl+3
  6287  13B1  3018               	movlw	24
  6288  13B2                     u5025:	
  6289  13B2  1003               	clrc
  6290  13B3  0DF4               	rlf	??___xxtofl,f
  6291  13B4  0DF5               	rlf	??___xxtofl+1,f
  6292  13B5  0DF6               	rlf	??___xxtofl+2,f
  6293  13B6  0DF7               	rlf	??___xxtofl+3,f
  6294  13B7  3EFF               	addlw	-1
  6295  13B8  1D03               	skipz
  6296  13B9  2BB2               	goto	u5025
  6297  13BA  0874               	movf	??___xxtofl,w
  6298  13BB  04FA               	iorwf	___xxtofl@arg,f
  6299  13BC  0875               	movf	??___xxtofl+1,w
  6300  13BD  04FB               	iorwf	___xxtofl@arg+1,f
  6301  13BE  0876               	movf	??___xxtofl+2,w
  6302  13BF  04FC               	iorwf	___xxtofl@arg+2,f
  6303  13C0  0877               	movf	??___xxtofl+3,w
  6304  13C1  04FD               	iorwf	___xxtofl@arg+3,f
  6305  13C2  0878               	movf	___xxtofl@sign,w
  6306  13C3  1D03               	btfss	3,2
  6307  13C4  1FF3               	btfss	___xxtofl@val+3,7
  6308  13C5  2BC7               	goto	l2928
  6309  13C6  17FD               	bsf	___xxtofl@arg+3,7
  6310  13C7                     l2928:	
  6311  13C7  087D               	movf	___xxtofl@arg+3,w
  6312  13C8  00F3               	movwf	?___xxtofl+3
  6313  13C9  087C               	movf	___xxtofl@arg+2,w
  6314  13CA  00F2               	movwf	?___xxtofl+2
  6315  13CB  087B               	movf	___xxtofl@arg+1,w
  6316  13CC  00F1               	movwf	?___xxtofl+1
  6317  13CD  087A               	movf	___xxtofl@arg,w
  6318  13CE  00F0               	movwf	?___xxtofl
  6319  13CF  0008               	return
  6320  13D0                     __end_of___xxtofl:	
  6321                           
  6322                           	psect	text14
  6323  1E63                     __ptext14:	
  6324 ;; *************** function ___wmul *****************
  6325 ;; Defined at:
  6326 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  6327 ;; Parameters:    Size  Location     Type
  6328 ;;  multiplier      2    0[COMMON] unsigned int 
  6329 ;;  multiplicand    2    2[COMMON] unsigned int 
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;  product         2    4[COMMON] unsigned int 
  6332 ;; Return value:  Size  Location     Type
  6333 ;;                  2    0[COMMON] unsigned int 
  6334 ;; Registers used:
  6335 ;;		wreg, status,2, status,0
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 0/0
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6341 ;;      Params:         4       0       0       0       0
  6342 ;;      Locals:         2       0       0       0       0
  6343 ;;      Temps:          0       0       0       0       0
  6344 ;;      Totals:         6       0       0       0       0
  6345 ;;Total ram usage:        6 bytes
  6346 ;; Hardware stack levels used:    1
  6347 ;; This function calls:
  6348 ;;		Nothing
  6349 ;; This function is called by:
  6350 ;;		_sprintf
  6351 ;; This function uses a non-reentrant model
  6352 ;;
  6353                           
  6354                           
  6355                           ;psect for function ___wmul
  6356  1E63                     ___wmul:	
  6357                           
  6358                           ;incstack = 0
  6359                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6360  1E63  01F4               	clrf	___wmul@product
  6361  1E64  01F5               	clrf	___wmul@product+1
  6362  1E65                     l2750:	
  6363  1E65  1C70               	btfss	___wmul@multiplier,0
  6364  1E66  2E6D               	goto	l251
  6365  1E67  0872               	movf	___wmul@multiplicand,w
  6366  1E68  07F4               	addwf	___wmul@product,f
  6367  1E69  1803               	skipnc
  6368  1E6A  0AF5               	incf	___wmul@product+1,f
  6369  1E6B  0873               	movf	___wmul@multiplicand+1,w
  6370  1E6C  07F5               	addwf	___wmul@product+1,f
  6371  1E6D                     l251:	
  6372  1E6D  3001               	movlw	1
  6373  1E6E                     u4545:	
  6374  1E6E  1003               	clrc
  6375  1E6F  0DF2               	rlf	___wmul@multiplicand,f
  6376  1E70  0DF3               	rlf	___wmul@multiplicand+1,f
  6377  1E71  3EFF               	addlw	-1
  6378  1E72  1D03               	skipz
  6379  1E73  2E6E               	goto	u4545
  6380  1E74  3001               	movlw	1
  6381  1E75                     u4555:	
  6382  1E75  1003               	clrc
  6383  1E76  0CF1               	rrf	___wmul@multiplier+1,f
  6384  1E77  0CF0               	rrf	___wmul@multiplier,f
  6385  1E78  3EFF               	addlw	-1
  6386  1E79  1D03               	skipz
  6387  1E7A  2E75               	goto	u4555
  6388  1E7B  0870               	movf	___wmul@multiplier,w
  6389  1E7C  0471               	iorwf	___wmul@multiplier+1,w
  6390  1E7D  1D03               	btfss	3,2
  6391  1E7E  2E65               	goto	l2750
  6392  1E7F  0875               	movf	___wmul@product+1,w
  6393  1E80  00F1               	movwf	?___wmul+1
  6394  1E81  0874               	movf	___wmul@product,w
  6395  1E82  00F0               	movwf	?___wmul
  6396  1E83  0008               	return
  6397  1E84                     __end_of___wmul:	
  6398                           
  6399                           	psect	text15
  6400  0801                     __ptext15:	
  6401 ;; *************** function ___llmod *****************
  6402 ;; Defined at:
  6403 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  6404 ;; Parameters:    Size  Location     Type
  6405 ;;  divisor         4    0[BANK0 ] unsigned long 
  6406 ;;  dividend        4    4[BANK0 ] unsigned long 
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;  counter         1    9[BANK0 ] unsigned char 
  6409 ;; Return value:  Size  Location     Type
  6410 ;;                  4    0[BANK0 ] unsigned long 
  6411 ;; Registers used:
  6412 ;;		wreg, status,2, status,0
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6418 ;;      Params:         0       8       0       0       0
  6419 ;;      Locals:         0       1       0       0       0
  6420 ;;      Temps:          0       1       0       0       0
  6421 ;;      Totals:         0      10       0       0       0
  6422 ;;Total ram usage:       10 bytes
  6423 ;; Hardware stack levels used:    1
  6424 ;; This function calls:
  6425 ;;		Nothing
  6426 ;; This function is called by:
  6427 ;;		_sprintf
  6428 ;; This function uses a non-reentrant model
  6429 ;;
  6430                           
  6431                           
  6432                           ;psect for function ___llmod
  6433  0801                     ___llmod:	
  6434                           
  6435                           ;incstack = 0
  6436                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6437  0801  1283               	bcf	3,5	;RP0=0, select bank0
  6438  0802  1303               	bcf	3,6	;RP1=0, select bank0
  6439  0803  0823               	movf	___llmod@divisor+3,w
  6440  0804  0422               	iorwf	___llmod@divisor+2,w
  6441  0805  0421               	iorwf	___llmod@divisor+1,w
  6442  0806  0420               	iorwf	___llmod@divisor,w
  6443  0807  1903               	skipnz
  6444  0808  2846               	goto	l2878
  6445  0809  01A9               	clrf	___llmod@counter
  6446  080A  0AA9               	incf	___llmod@counter,f
  6447  080B                     l2868:	
  6448  080B  1BA3               	btfsc	___llmod@divisor+3,7
  6449  080C  281B               	goto	l2870
  6450  080D  3001               	movlw	1
  6451  080E  00A8               	movwf	??___llmod
  6452  080F                     u4865:	
  6453  080F  1003               	clrc
  6454  0810  0DA0               	rlf	___llmod@divisor,f
  6455  0811  0DA1               	rlf	___llmod@divisor+1,f
  6456  0812  0DA2               	rlf	___llmod@divisor+2,f
  6457  0813  0DA3               	rlf	___llmod@divisor+3,f
  6458  0814  0BA8               	decfsz	??___llmod,f
  6459  0815  280F               	goto	u4865
  6460  0816  3001               	movlw	1
  6461  0817  00A8               	movwf	??___llmod
  6462  0818  0828               	movf	??___llmod,w
  6463  0819  07A9               	addwf	___llmod@counter,f
  6464  081A  280B               	goto	l2868
  6465  081B                     l2870:	
  6466  081B  0823               	movf	___llmod@divisor+3,w
  6467  081C  0227               	subwf	___llmod@dividend+3,w
  6468  081D  1D03               	skipz
  6469  081E  2829               	goto	u4885
  6470  081F  0822               	movf	___llmod@divisor+2,w
  6471  0820  0226               	subwf	___llmod@dividend+2,w
  6472  0821  1D03               	skipz
  6473  0822  2829               	goto	u4885
  6474  0823  0821               	movf	___llmod@divisor+1,w
  6475  0824  0225               	subwf	___llmod@dividend+1,w
  6476  0825  1D03               	skipz
  6477  0826  2829               	goto	u4885
  6478  0827  0820               	movf	___llmod@divisor,w
  6479  0828  0224               	subwf	___llmod@dividend,w
  6480  0829                     u4885:	
  6481  0829  1C03               	skipc
  6482  082A  2839               	goto	l2874
  6483  082B  0820               	movf	___llmod@divisor,w
  6484  082C  02A4               	subwf	___llmod@dividend,f
  6485  082D  0821               	movf	___llmod@divisor+1,w
  6486  082E  1C03               	skipc
  6487  082F  0F21               	incfsz	___llmod@divisor+1,w
  6488  0830  02A5               	subwf	___llmod@dividend+1,f
  6489  0831  0822               	movf	___llmod@divisor+2,w
  6490  0832  1C03               	skipc
  6491  0833  0F22               	incfsz	___llmod@divisor+2,w
  6492  0834  02A6               	subwf	___llmod@dividend+2,f
  6493  0835  0823               	movf	___llmod@divisor+3,w
  6494  0836  1C03               	skipc
  6495  0837  0F23               	incfsz	___llmod@divisor+3,w
  6496  0838  02A7               	subwf	___llmod@dividend+3,f
  6497  0839                     l2874:	
  6498  0839  3001               	movlw	1
  6499  083A                     u4895:	
  6500  083A  1003               	clrc
  6501  083B  0CA3               	rrf	___llmod@divisor+3,f
  6502  083C  0CA2               	rrf	___llmod@divisor+2,f
  6503  083D  0CA1               	rrf	___llmod@divisor+1,f
  6504  083E  0CA0               	rrf	___llmod@divisor,f
  6505  083F  3EFF               	addlw	-1
  6506  0840  1D03               	skipz
  6507  0841  283A               	goto	u4895
  6508  0842  3001               	movlw	1
  6509  0843  02A9               	subwf	___llmod@counter,f
  6510  0844  1D03               	btfss	3,2
  6511  0845  281B               	goto	l2870
  6512  0846                     l2878:	
  6513  0846  0827               	movf	___llmod@dividend+3,w
  6514  0847  00A3               	movwf	?___llmod+3
  6515  0848  0826               	movf	___llmod@dividend+2,w
  6516  0849  00A2               	movwf	?___llmod+2
  6517  084A  0825               	movf	___llmod@dividend+1,w
  6518  084B  00A1               	movwf	?___llmod+1
  6519  084C  0824               	movf	___llmod@dividend,w
  6520  084D  00A0               	movwf	?___llmod
  6521  084E  0008               	return
  6522  084F                     __end_of___llmod:	
  6523                           
  6524                           	psect	text16
  6525  10E3                     __ptext16:	
  6526 ;; *************** function ___lldiv *****************
  6527 ;; Defined at:
  6528 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  6529 ;; Parameters:    Size  Location     Type
  6530 ;;  divisor         4    0[COMMON] unsigned long 
  6531 ;;  dividend        4    4[COMMON] unsigned long 
  6532 ;; Auto vars:     Size  Location     Type
  6533 ;;  quotient        4    9[COMMON] unsigned long 
  6534 ;;  counter         1   13[COMMON] unsigned char 
  6535 ;; Return value:  Size  Location     Type
  6536 ;;                  4    0[COMMON] unsigned long 
  6537 ;; Registers used:
  6538 ;;		wreg, status,2, status,0
  6539 ;; Tracked objects:
  6540 ;;		On entry : 0/0
  6541 ;;		On exit  : 0/0
  6542 ;;		Unchanged: 0/0
  6543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6544 ;;      Params:         8       0       0       0       0
  6545 ;;      Locals:         5       0       0       0       0
  6546 ;;      Temps:          1       0       0       0       0
  6547 ;;      Totals:        14       0       0       0       0
  6548 ;;Total ram usage:       14 bytes
  6549 ;; Hardware stack levels used:    1
  6550 ;; This function calls:
  6551 ;;		Nothing
  6552 ;; This function is called by:
  6553 ;;		_sprintf
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           
  6558                           ;psect for function ___lldiv
  6559  10E3                     ___lldiv:	
  6560                           
  6561                           ;incstack = 0
  6562                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6563  10E3  3000               	movlw	0
  6564  10E4  00FC               	movwf	___lldiv@quotient+3
  6565  10E5  3000               	movlw	0
  6566  10E6  00FB               	movwf	___lldiv@quotient+2
  6567  10E7  3000               	movlw	0
  6568  10E8  00FA               	movwf	___lldiv@quotient+1
  6569  10E9  3000               	movlw	0
  6570  10EA  00F9               	movwf	___lldiv@quotient
  6571  10EB  0873               	movf	___lldiv@divisor+3,w
  6572  10EC  0472               	iorwf	___lldiv@divisor+2,w
  6573  10ED  0471               	iorwf	___lldiv@divisor+1,w
  6574  10EE  0470               	iorwf	___lldiv@divisor,w
  6575  10EF  1903               	skipnz
  6576  10F0  2938               	goto	l2782
  6577  10F1  01FD               	clrf	___lldiv@counter
  6578  10F2  0AFD               	incf	___lldiv@counter,f
  6579  10F3                     l2768:	
  6580  10F3  1BF3               	btfsc	___lldiv@divisor+3,7
  6581  10F4  2903               	goto	l2770
  6582  10F5  3001               	movlw	1
  6583  10F6  00F8               	movwf	??___lldiv
  6584  10F7                     u4585:	
  6585  10F7  1003               	clrc
  6586  10F8  0DF0               	rlf	___lldiv@divisor,f
  6587  10F9  0DF1               	rlf	___lldiv@divisor+1,f
  6588  10FA  0DF2               	rlf	___lldiv@divisor+2,f
  6589  10FB  0DF3               	rlf	___lldiv@divisor+3,f
  6590  10FC  0BF8               	decfsz	??___lldiv,f
  6591  10FD  28F7               	goto	u4585
  6592  10FE  3001               	movlw	1
  6593  10FF  00F8               	movwf	??___lldiv
  6594  1100  0878               	movf	??___lldiv,w
  6595  1101  07FD               	addwf	___lldiv@counter,f
  6596  1102  28F3               	goto	l2768
  6597  1103                     l2770:	
  6598  1103  3001               	movlw	1
  6599  1104  00F8               	movwf	??___lldiv
  6600  1105                     u4605:	
  6601  1105  1003               	clrc
  6602  1106  0DF9               	rlf	___lldiv@quotient,f
  6603  1107  0DFA               	rlf	___lldiv@quotient+1,f
  6604  1108  0DFB               	rlf	___lldiv@quotient+2,f
  6605  1109  0DFC               	rlf	___lldiv@quotient+3,f
  6606  110A  0BF8               	decfsz	??___lldiv,f
  6607  110B  2905               	goto	u4605
  6608  110C  0873               	movf	___lldiv@divisor+3,w
  6609  110D  0277               	subwf	___lldiv@dividend+3,w
  6610  110E  1D03               	skipz
  6611  110F  291A               	goto	u4615
  6612  1110  0872               	movf	___lldiv@divisor+2,w
  6613  1111  0276               	subwf	___lldiv@dividend+2,w
  6614  1112  1D03               	skipz
  6615  1113  291A               	goto	u4615
  6616  1114  0871               	movf	___lldiv@divisor+1,w
  6617  1115  0275               	subwf	___lldiv@dividend+1,w
  6618  1116  1D03               	skipz
  6619  1117  291A               	goto	u4615
  6620  1118  0870               	movf	___lldiv@divisor,w
  6621  1119  0274               	subwf	___lldiv@dividend,w
  6622  111A                     u4615:	
  6623  111A  1C03               	skipc
  6624  111B  292B               	goto	l2778
  6625  111C  0870               	movf	___lldiv@divisor,w
  6626  111D  02F4               	subwf	___lldiv@dividend,f
  6627  111E  0871               	movf	___lldiv@divisor+1,w
  6628  111F  1C03               	skipc
  6629  1120  0F71               	incfsz	___lldiv@divisor+1,w
  6630  1121  02F5               	subwf	___lldiv@dividend+1,f
  6631  1122  0872               	movf	___lldiv@divisor+2,w
  6632  1123  1C03               	skipc
  6633  1124  0F72               	incfsz	___lldiv@divisor+2,w
  6634  1125  02F6               	subwf	___lldiv@dividend+2,f
  6635  1126  0873               	movf	___lldiv@divisor+3,w
  6636  1127  1C03               	skipc
  6637  1128  0F73               	incfsz	___lldiv@divisor+3,w
  6638  1129  02F7               	subwf	___lldiv@dividend+3,f
  6639  112A  1479               	bsf	___lldiv@quotient,0
  6640  112B                     l2778:	
  6641  112B  3001               	movlw	1
  6642  112C                     u4625:	
  6643  112C  1003               	clrc
  6644  112D  0CF3               	rrf	___lldiv@divisor+3,f
  6645  112E  0CF2               	rrf	___lldiv@divisor+2,f
  6646  112F  0CF1               	rrf	___lldiv@divisor+1,f
  6647  1130  0CF0               	rrf	___lldiv@divisor,f
  6648  1131  3EFF               	addlw	-1
  6649  1132  1D03               	skipz
  6650  1133  292C               	goto	u4625
  6651  1134  3001               	movlw	1
  6652  1135  02FD               	subwf	___lldiv@counter,f
  6653  1136  1D03               	btfss	3,2
  6654  1137  2903               	goto	l2770
  6655  1138                     l2782:	
  6656  1138  087C               	movf	___lldiv@quotient+3,w
  6657  1139  00F3               	movwf	?___lldiv+3
  6658  113A  087B               	movf	___lldiv@quotient+2,w
  6659  113B  00F2               	movwf	?___lldiv+2
  6660  113C  087A               	movf	___lldiv@quotient+1,w
  6661  113D  00F1               	movwf	?___lldiv+1
  6662  113E  0879               	movf	___lldiv@quotient,w
  6663  113F  00F0               	movwf	?___lldiv
  6664  1140  0008               	return
  6665  1141                     __end_of___lldiv:	
  6666                           
  6667                           	psect	text17
  6668  11A2                     __ptext17:	
  6669 ;; *************** function ___fltol *****************
  6670 ;; Defined at:
  6671 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;  f1              4   49[BANK0 ] unsigned long 
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;  exp1            1   59[BANK0 ] unsigned char 
  6676 ;;  sign1           1   58[BANK0 ] unsigned char 
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  4   49[BANK0 ] long 
  6679 ;; Registers used:
  6680 ;;		wreg, status,2, status,0
  6681 ;; Tracked objects:
  6682 ;;		On entry : 0/0
  6683 ;;		On exit  : 0/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6686 ;;      Params:         0       4       0       0       0
  6687 ;;      Locals:         0       2       0       0       0
  6688 ;;      Temps:          0       5       0       0       0
  6689 ;;      Totals:         0      11       0       0       0
  6690 ;;Total ram usage:       11 bytes
  6691 ;; Hardware stack levels used:    1
  6692 ;; This function calls:
  6693 ;;		Nothing
  6694 ;; This function is called by:
  6695 ;;		_sprintf
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           
  6700                           ;psect for function ___fltol
  6701  11A2                     ___fltol:	
  6702                           
  6703                           ;incstack = 0
  6704                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6705  11A2  1003               	clrc
  6706  11A3  1283               	bcf	3,5	;RP0=0, select bank0
  6707  11A4  1303               	bcf	3,6	;RP1=0, select bank0
  6708  11A5  0D53               	rlf	___fltol@f1+2,w
  6709  11A6  0D54               	rlf	___fltol@f1+3,w
  6710  11A7  00D5               	movwf	??___fltol
  6711  11A8  0855               	movf	??___fltol,w
  6712  11A9  00DB               	movwf	___fltol@exp1
  6713  11AA  085B               	movf	___fltol@exp1,w
  6714  11AB  1D03               	btfss	3,2
  6715  11AC  29B6               	goto	l2832
  6716  11AD                     l2828:	
  6717  11AD  3000               	movlw	0
  6718  11AE  00D4               	movwf	?___fltol+3
  6719  11AF  3000               	movlw	0
  6720  11B0  00D3               	movwf	?___fltol+2
  6721  11B1  3000               	movlw	0
  6722  11B2  00D2               	movwf	?___fltol+1
  6723  11B3  3000               	movlw	0
  6724  11B4  00D1               	movwf	?___fltol
  6725  11B5  0008               	return
  6726  11B6                     l2832:	
  6727  11B6  0851               	movf	___fltol@f1,w
  6728  11B7  00D5               	movwf	??___fltol
  6729  11B8  0852               	movf	___fltol@f1+1,w
  6730  11B9  00D6               	movwf	??___fltol+1
  6731  11BA  0853               	movf	___fltol@f1+2,w
  6732  11BB  00D7               	movwf	??___fltol+2
  6733  11BC  0854               	movf	___fltol@f1+3,w
  6734  11BD  00D8               	movwf	??___fltol+3
  6735  11BE  301F               	movlw	31
  6736  11BF                     u4765:	
  6737  11BF  1003               	clrc
  6738  11C0  0CD8               	rrf	??___fltol+3,f
  6739  11C1  0CD7               	rrf	??___fltol+2,f
  6740  11C2  0CD6               	rrf	??___fltol+1,f
  6741  11C3  0CD5               	rrf	??___fltol,f
  6742  11C4  3EFF               	addlw	-1
  6743  11C5  1D03               	skipz
  6744  11C6  29BF               	goto	u4765
  6745  11C7  0855               	movf	??___fltol,w
  6746  11C8  00D9               	movwf	??___fltol+4
  6747  11C9  0859               	movf	??___fltol+4,w
  6748  11CA  00DA               	movwf	___fltol@sign1
  6749  11CB  17D3               	bsf	___fltol@f1+2,7
  6750  11CC  30FF               	movlw	255
  6751  11CD  05D1               	andwf	___fltol@f1,f
  6752  11CE  30FF               	movlw	255
  6753  11CF  05D2               	andwf	___fltol@f1+1,f
  6754  11D0  30FF               	movlw	255
  6755  11D1  05D3               	andwf	___fltol@f1+2,f
  6756  11D2  3000               	movlw	0
  6757  11D3  05D4               	andwf	___fltol@f1+3,f
  6758  11D4  3096               	movlw	150
  6759  11D5  02DB               	subwf	___fltol@exp1,f
  6760  11D6  1FDB               	btfss	___fltol@exp1,7
  6761  11D7  29ED               	goto	l2850
  6762  11D8  085B               	movf	___fltol@exp1,w
  6763  11D9  3A80               	xorlw	128
  6764  11DA  3E97               	addlw	151
  6765  11DB  1C03               	btfss	3,0
  6766  11DC  29AD               	goto	l2828
  6767  11DD                     l2848:	
  6768  11DD  3001               	movlw	1
  6769  11DE                     u4795:	
  6770  11DE  1003               	clrc
  6771  11DF  0CD4               	rrf	___fltol@f1+3,f
  6772  11E0  0CD3               	rrf	___fltol@f1+2,f
  6773  11E1  0CD2               	rrf	___fltol@f1+1,f
  6774  11E2  0CD1               	rrf	___fltol@f1,f
  6775  11E3  3EFF               	addlw	-1
  6776  11E4  1D03               	skipz
  6777  11E5  29DE               	goto	u4795
  6778  11E6  3001               	movlw	1
  6779  11E7  00D5               	movwf	??___fltol
  6780  11E8  0855               	movf	??___fltol,w
  6781  11E9  07DB               	addwf	___fltol@exp1,f
  6782  11EA  1903               	btfsc	3,2
  6783  11EB  2A00               	goto	l2858
  6784  11EC  29DD               	goto	l2848
  6785  11ED                     l2850:	
  6786  11ED  3020               	movlw	32
  6787  11EE  025B               	subwf	___fltol@exp1,w
  6788  11EF  1803               	btfsc	3,0
  6789  11F0  29AD               	goto	l2828
  6790  11F1                     l461:	
  6791  11F1  085B               	movf	___fltol@exp1,w
  6792  11F2  1903               	btfsc	3,2
  6793  11F3  2A00               	goto	l2858
  6794  11F4  3001               	movlw	1
  6795  11F5  00D5               	movwf	??___fltol
  6796  11F6                     u4825:	
  6797  11F6  1003               	clrc
  6798  11F7  0DD1               	rlf	___fltol@f1,f
  6799  11F8  0DD2               	rlf	___fltol@f1+1,f
  6800  11F9  0DD3               	rlf	___fltol@f1+2,f
  6801  11FA  0DD4               	rlf	___fltol@f1+3,f
  6802  11FB  0BD5               	decfsz	??___fltol,f
  6803  11FC  29F6               	goto	u4825
  6804  11FD  3001               	movlw	1
  6805  11FE  02DB               	subwf	___fltol@exp1,f
  6806  11FF  29F1               	goto	l461
  6807  1200                     l2858:	
  6808  1200  085A               	movf	___fltol@sign1,w
  6809  1201  1903               	btfsc	3,2
  6810  1202  0008               	return
  6811  1203  09D1               	comf	___fltol@f1,f
  6812  1204  09D2               	comf	___fltol@f1+1,f
  6813  1205  09D3               	comf	___fltol@f1+2,f
  6814  1206  09D4               	comf	___fltol@f1+3,f
  6815  1207  0AD1               	incf	___fltol@f1,f
  6816  1208  1903               	skipnz
  6817  1209  0AD2               	incf	___fltol@f1+1,f
  6818  120A  1903               	skipnz
  6819  120B  0AD3               	incf	___fltol@f1+2,f
  6820  120C  1903               	skipnz
  6821  120D  0AD4               	incf	___fltol@f1+3,f
  6822  120E  0008               	return
  6823  120F                     __end_of___fltol:	
  6824                           
  6825                           	psect	text18
  6826  1E84                     __ptext18:	
  6827 ;; *************** function ___flsub *****************
  6828 ;; Defined at:
  6829 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  6830 ;; Parameters:    Size  Location     Type
  6831 ;;  a               4   70[BANK0 ] long 
  6832 ;;  b               4   74[BANK0 ] long 
  6833 ;; Auto vars:     Size  Location     Type
  6834 ;;		None
  6835 ;; Return value:  Size  Location     Type
  6836 ;;                  4   70[BANK0 ] long 
  6837 ;; Registers used:
  6838 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6839 ;; Tracked objects:
  6840 ;;		On entry : 0/0
  6841 ;;		On exit  : 0/0
  6842 ;;		Unchanged: 0/0
  6843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6844 ;;      Params:         0       8       0       0       0
  6845 ;;      Locals:         0       0       0       0       0
  6846 ;;      Temps:          0       0       0       0       0
  6847 ;;      Totals:         0       8       0       0       0
  6848 ;;Total ram usage:        8 bytes
  6849 ;; Hardware stack levels used:    1
  6850 ;; Hardware stack levels required when called:    1
  6851 ;; This function calls:
  6852 ;;		___fladd
  6853 ;; This function is called by:
  6854 ;;		_sprintf
  6855 ;; This function uses a non-reentrant model
  6856 ;;
  6857                           
  6858                           
  6859                           ;psect for function ___flsub
  6860  1E84                     ___flsub:	
  6861                           
  6862                           ;incstack = 0
  6863                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6864  1E84  3080               	movlw	128
  6865  1E85  1283               	bcf	3,5	;RP0=0, select bank0
  6866  1E86  1303               	bcf	3,6	;RP1=0, select bank0
  6867  1E87  06E9               	xorwf	___flsub@a+3,f
  6868  1E88  086D               	movf	___flsub@b+3,w
  6869  1E89  00D5               	movwf	___fladd@b+3
  6870  1E8A  086C               	movf	___flsub@b+2,w
  6871  1E8B  00D4               	movwf	___fladd@b+2
  6872  1E8C  086B               	movf	___flsub@b+1,w
  6873  1E8D  00D3               	movwf	___fladd@b+1
  6874  1E8E  086A               	movf	___flsub@b,w
  6875  1E8F  00D2               	movwf	___fladd@b
  6876  1E90  0869               	movf	___flsub@a+3,w
  6877  1E91  00D9               	movwf	___fladd@a+3
  6878  1E92  0868               	movf	___flsub@a+2,w
  6879  1E93  00D8               	movwf	___fladd@a+2
  6880  1E94  0867               	movf	___flsub@a+1,w
  6881  1E95  00D7               	movwf	___fladd@a+1
  6882  1E96  0866               	movf	___flsub@a,w
  6883  1E97  00D6               	movwf	___fladd@a
  6884  1E98  160A  118A  25D1   	fcall	___fladd
  6885  1E9B  1283               	bcf	3,5	;RP0=0, select bank0
  6886  1E9C  1303               	bcf	3,6	;RP1=0, select bank0
  6887  1E9D  0855               	movf	?___fladd+3,w
  6888  1E9E  00E9               	movwf	?___flsub+3
  6889  1E9F  0854               	movf	?___fladd+2,w
  6890  1EA0  00E8               	movwf	?___flsub+2
  6891  1EA1  0853               	movf	?___fladd+1,w
  6892  1EA2  00E7               	movwf	?___flsub+1
  6893  1EA3  0852               	movf	?___fladd,w
  6894  1EA4  00E6               	movwf	?___flsub
  6895  1EA5  0008               	return
  6896  1EA6                     __end_of___flsub:	
  6897                           
  6898                           	psect	text19
  6899  15D1                     __ptext19:	
  6900 ;; *************** function ___fladd *****************
  6901 ;; Defined at:
  6902 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  6903 ;; Parameters:    Size  Location     Type
  6904 ;;  b               4   50[BANK0 ] long 
  6905 ;;  a               4   54[BANK0 ] long 
  6906 ;; Auto vars:     Size  Location     Type
  6907 ;;  grs             1   69[BANK0 ] unsigned char 
  6908 ;;  bexp            1   68[BANK0 ] unsigned char 
  6909 ;;  aexp            1   67[BANK0 ] unsigned char 
  6910 ;;  signs           1   66[BANK0 ] unsigned char 
  6911 ;; Return value:  Size  Location     Type
  6912 ;;                  4   50[BANK0 ] unsigned char 
  6913 ;; Registers used:
  6914 ;;		wreg, status,2, status,0, btemp+1
  6915 ;; Tracked objects:
  6916 ;;		On entry : 0/0
  6917 ;;		On exit  : 0/0
  6918 ;;		Unchanged: 0/0
  6919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6920 ;;      Params:         0       8       0       0       0
  6921 ;;      Locals:         0       4       0       0       0
  6922 ;;      Temps:          0       8       0       0       0
  6923 ;;      Totals:         0      20       0       0       0
  6924 ;;Total ram usage:       20 bytes
  6925 ;; Hardware stack levels used:    1
  6926 ;; This function calls:
  6927 ;;		Nothing
  6928 ;; This function is called by:
  6929 ;;		_sprintf
  6930 ;;		___flsub
  6931 ;; This function uses a non-reentrant model
  6932 ;;
  6933                           
  6934                           
  6935                           ;psect for function ___fladd
  6936  15D1                     ___fladd:	
  6937                           
  6938                           ;incstack = 0
  6939                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6940  15D1  1283               	bcf	3,5	;RP0=0, select bank0
  6941  15D2  1303               	bcf	3,6	;RP1=0, select bank0
  6942  15D3  0855               	movf	___fladd@b+3,w
  6943  15D4  3980               	andlw	128
  6944  15D5  00DA               	movwf	??___fladd
  6945  15D6  085A               	movf	??___fladd,w
  6946  15D7  00E2               	movwf	___fladd@signs
  6947  15D8  0855               	movf	___fladd@b+3,w
  6948  15D9  00DA               	movwf	??___fladd
  6949  15DA  075A               	addwf	??___fladd,w
  6950  15DB  00DB               	movwf	??___fladd+1
  6951  15DC  085B               	movf	??___fladd+1,w
  6952  15DD  00E4               	movwf	___fladd@bexp
  6953  15DE  1BD4               	btfsc	___fladd@b+2,7
  6954  15DF  1464               	bsf	___fladd@bexp,0
  6955  15E0  0864               	movf	___fladd@bexp,w
  6956  15E1  1903               	btfsc	3,2
  6957  15E2  2DF1               	goto	l2228
  6958  15E3  0A64               	incf	___fladd@bexp,w
  6959  15E4  1D03               	btfss	3,2
  6960  15E5  2DEE               	goto	l2224
  6961  15E6  3000               	movlw	0
  6962  15E7  00D5               	movwf	___fladd@b+3
  6963  15E8  3000               	movlw	0
  6964  15E9  00D4               	movwf	___fladd@b+2
  6965  15EA  3000               	movlw	0
  6966  15EB  00D3               	movwf	___fladd@b+1
  6967  15EC  3000               	movlw	0
  6968  15ED  00D2               	movwf	___fladd@b
  6969  15EE                     l2224:	
  6970  15EE  17D4               	bsf	___fladd@b+2,7
  6971  15EF  01D5               	clrf	___fladd@b+3
  6972  15F0  2DF9               	goto	l2230
  6973  15F1                     l2228:	
  6974  15F1  3000               	movlw	0
  6975  15F2  00D5               	movwf	___fladd@b+3
  6976  15F3  3000               	movlw	0
  6977  15F4  00D4               	movwf	___fladd@b+2
  6978  15F5  3000               	movlw	0
  6979  15F6  00D3               	movwf	___fladd@b+1
  6980  15F7  3000               	movlw	0
  6981  15F8  00D2               	movwf	___fladd@b
  6982  15F9                     l2230:	
  6983  15F9  0859               	movf	___fladd@a+3,w
  6984  15FA  3980               	andlw	128
  6985  15FB  00DA               	movwf	??___fladd
  6986  15FC  085A               	movf	??___fladd,w
  6987  15FD  00E3               	movwf	___fladd@aexp
  6988  15FE  0863               	movf	___fladd@aexp,w
  6989  15FF  0662               	xorwf	___fladd@signs,w
  6990  1600  1D03               	btfss	3,2
  6991  1601  1762               	bsf	___fladd@signs,6
  6992  1602  0859               	movf	___fladd@a+3,w
  6993  1603  00DA               	movwf	??___fladd
  6994  1604  075A               	addwf	??___fladd,w
  6995  1605  00DB               	movwf	??___fladd+1
  6996  1606  085B               	movf	??___fladd+1,w
  6997  1607  00E3               	movwf	___fladd@aexp
  6998  1608  1BD8               	btfsc	___fladd@a+2,7
  6999  1609  1463               	bsf	___fladd@aexp,0
  7000  160A  0863               	movf	___fladd@aexp,w
  7001  160B  1903               	btfsc	3,2
  7002  160C  2E1B               	goto	l2252
  7003  160D  0A63               	incf	___fladd@aexp,w
  7004  160E  1D03               	btfss	3,2
  7005  160F  2E18               	goto	l2248
  7006  1610  3000               	movlw	0
  7007  1611  00D9               	movwf	___fladd@a+3
  7008  1612  3000               	movlw	0
  7009  1613  00D8               	movwf	___fladd@a+2
  7010  1614  3000               	movlw	0
  7011  1615  00D7               	movwf	___fladd@a+1
  7012  1616  3000               	movlw	0
  7013  1617  00D6               	movwf	___fladd@a
  7014  1618                     l2248:	
  7015  1618  17D8               	bsf	___fladd@a+2,7
  7016  1619  01D9               	clrf	___fladd@a+3
  7017  161A  2E23               	goto	l578
  7018  161B                     l2252:	
  7019  161B  3000               	movlw	0
  7020  161C  00D9               	movwf	___fladd@a+3
  7021  161D  3000               	movlw	0
  7022  161E  00D8               	movwf	___fladd@a+2
  7023  161F  3000               	movlw	0
  7024  1620  00D7               	movwf	___fladd@a+1
  7025  1621  3000               	movlw	0
  7026  1622  00D6               	movwf	___fladd@a
  7027  1623                     l578:	
  7028  1623  0864               	movf	___fladd@bexp,w
  7029  1624  0263               	subwf	___fladd@aexp,w
  7030  1625  1803               	skipnc
  7031  1626  2E69               	goto	l2288
  7032  1627  1F62               	btfss	___fladd@signs,6
  7033  1628  2E2D               	goto	l2258
  7034  1629  3080               	movlw	128
  7035  162A  00DA               	movwf	??___fladd
  7036  162B  085A               	movf	??___fladd,w
  7037  162C  06E2               	xorwf	___fladd@signs,f
  7038  162D                     l2258:	
  7039  162D  0864               	movf	___fladd@bexp,w
  7040  162E  00DA               	movwf	??___fladd
  7041  162F  085A               	movf	??___fladd,w
  7042  1630  00E5               	movwf	___fladd@grs
  7043  1631  0863               	movf	___fladd@aexp,w
  7044  1632  00DA               	movwf	??___fladd
  7045  1633  085A               	movf	??___fladd,w
  7046  1634  00E4               	movwf	___fladd@bexp
  7047  1635  0865               	movf	___fladd@grs,w
  7048  1636  00DA               	movwf	??___fladd
  7049  1637  085A               	movf	??___fladd,w
  7050  1638  00E3               	movwf	___fladd@aexp
  7051  1639  0852               	movf	___fladd@b,w
  7052  163A  00DA               	movwf	??___fladd
  7053  163B  085A               	movf	??___fladd,w
  7054  163C  00E5               	movwf	___fladd@grs
  7055  163D  0856               	movf	___fladd@a,w
  7056  163E  00DA               	movwf	??___fladd
  7057  163F  085A               	movf	??___fladd,w
  7058  1640  00D2               	movwf	___fladd@b
  7059  1641  0865               	movf	___fladd@grs,w
  7060  1642  00DA               	movwf	??___fladd
  7061  1643  085A               	movf	??___fladd,w
  7062  1644  00D6               	movwf	___fladd@a
  7063  1645  0853               	movf	___fladd@b+1,w
  7064  1646  00DA               	movwf	??___fladd
  7065  1647  085A               	movf	??___fladd,w
  7066  1648  00E5               	movwf	___fladd@grs
  7067  1649  0857               	movf	___fladd@a+1,w
  7068  164A  00DA               	movwf	??___fladd
  7069  164B  085A               	movf	??___fladd,w
  7070  164C  00D3               	movwf	___fladd@b+1
  7071  164D  0865               	movf	___fladd@grs,w
  7072  164E  00DA               	movwf	??___fladd
  7073  164F  085A               	movf	??___fladd,w
  7074  1650  00D7               	movwf	___fladd@a+1
  7075  1651  0854               	movf	___fladd@b+2,w
  7076  1652  00DA               	movwf	??___fladd
  7077  1653  085A               	movf	??___fladd,w
  7078  1654  00E5               	movwf	___fladd@grs
  7079  1655  0858               	movf	___fladd@a+2,w
  7080  1656  00DA               	movwf	??___fladd
  7081  1657  085A               	movf	??___fladd,w
  7082  1658  00D4               	movwf	___fladd@b+2
  7083  1659  0865               	movf	___fladd@grs,w
  7084  165A  00DA               	movwf	??___fladd
  7085  165B  085A               	movf	??___fladd,w
  7086  165C  00D8               	movwf	___fladd@a+2
  7087  165D  0855               	movf	___fladd@b+3,w
  7088  165E  00DA               	movwf	??___fladd
  7089  165F  085A               	movf	??___fladd,w
  7090  1660  00E5               	movwf	___fladd@grs
  7091  1661  0859               	movf	___fladd@a+3,w
  7092  1662  00DA               	movwf	??___fladd
  7093  1663  085A               	movf	??___fladd,w
  7094  1664  00D5               	movwf	___fladd@b+3
  7095  1665  0865               	movf	___fladd@grs,w
  7096  1666  00DA               	movwf	??___fladd
  7097  1667  085A               	movf	??___fladd,w
  7098  1668  00D9               	movwf	___fladd@a+3
  7099  1669                     l2288:	
  7100  1669  01E5               	clrf	___fladd@grs
  7101  166A  0863               	movf	___fladd@aexp,w
  7102  166B  00DA               	movwf	??___fladd
  7103  166C  01DB               	clrf	??___fladd+1
  7104  166D  085B               	movf	??___fladd+1,w
  7105  166E  00DD               	movwf	??___fladd+3
  7106  166F  0864               	movf	___fladd@bexp,w
  7107  1670  025A               	subwf	??___fladd,w
  7108  1671  00DC               	movwf	??___fladd+2
  7109  1672  1C03               	skipc
  7110  1673  03DD               	decf	??___fladd+3,f
  7111  1674  085D               	movf	??___fladd+3,w
  7112  1675  3A80               	xorlw	128
  7113  1676  00FF               	movwf	127
  7114  1677  3080               	movlw	128
  7115  1678  027F               	subwf	127,w
  7116  1679  1D03               	skipz
  7117  167A  2E7D               	goto	u3255
  7118  167B  301A               	movlw	26
  7119  167C  025C               	subwf	??___fladd+2,w
  7120  167D                     u3255:	
  7121  167D  1C03               	skipc
  7122  167E  2EB6               	goto	l2306
  7123  167F  1283               	bcf	3,5	;RP0=0, select bank0
  7124  1680  1303               	bcf	3,6	;RP1=0, select bank0
  7125  1681  0855               	movf	___fladd@b+3,w
  7126  1682  0454               	iorwf	___fladd@b+2,w
  7127  1683  0453               	iorwf	___fladd@b+1,w
  7128  1684  0452               	iorwf	___fladd@b,w
  7129  1685  1903               	btfsc	3,2
  7130  1686  2E89               	goto	u3260
  7131  1687  3001               	movlw	1
  7132  1688  2E8A               	goto	u3270
  7133  1689                     u3260:	
  7134  1689  3000               	movlw	0
  7135  168A                     u3270:	
  7136  168A  00DA               	movwf	??___fladd
  7137  168B  085A               	movf	??___fladd,w
  7138  168C  00E5               	movwf	___fladd@grs
  7139  168D  3000               	movlw	0
  7140  168E  00D5               	movwf	___fladd@b+3
  7141  168F  3000               	movlw	0
  7142  1690  00D4               	movwf	___fladd@b+2
  7143  1691  3000               	movlw	0
  7144  1692  00D3               	movwf	___fladd@b+1
  7145  1693  3000               	movlw	0
  7146  1694  00D2               	movwf	___fladd@b
  7147  1695  0863               	movf	___fladd@aexp,w
  7148  1696  00DA               	movwf	??___fladd
  7149  1697  085A               	movf	??___fladd,w
  7150  1698  00E4               	movwf	___fladd@bexp
  7151  1699  2EBC               	goto	l582
  7152  169A                     l584:	
  7153  169A  1C65               	btfss	___fladd@grs,0
  7154  169B  2EA5               	goto	l2296
  7155  169C  0865               	movf	___fladd@grs,w
  7156  169D  00DA               	movwf	??___fladd
  7157  169E  1003               	clrc
  7158  169F  0C5A               	rrf	??___fladd,w
  7159  16A0  3801               	iorlw	1
  7160  16A1  00DB               	movwf	??___fladd+1
  7161  16A2  085B               	movf	??___fladd+1,w
  7162  16A3  00E5               	movwf	___fladd@grs
  7163  16A4  2EA7               	goto	l2298
  7164  16A5                     l2296:	
  7165  16A5  1003               	clrc
  7166  16A6  0CE5               	rrf	___fladd@grs,f
  7167  16A7                     l2298:	
  7168  16A7  1852               	btfsc	___fladd@b,0
  7169  16A8  17E5               	bsf	___fladd@grs,7
  7170  16A9  3001               	movlw	1
  7171  16AA  00DA               	movwf	??___fladd
  7172  16AB                     u3305:	
  7173  16AB  0D55               	rlf	___fladd@b+3,w
  7174  16AC  0CD5               	rrf	___fladd@b+3,f
  7175  16AD  0CD4               	rrf	___fladd@b+2,f
  7176  16AE  0CD3               	rrf	___fladd@b+1,f
  7177  16AF  0CD2               	rrf	___fladd@b,f
  7178  16B0  0BDA               	decfsz	??___fladd& (0+127),f
  7179  16B1  2EAB               	goto	u3305
  7180  16B2  3001               	movlw	1
  7181  16B3  00DA               	movwf	??___fladd
  7182  16B4  085A               	movf	??___fladd,w
  7183  16B5  07E4               	addwf	___fladd@bexp,f
  7184  16B6                     l2306:	
  7185  16B6  1283               	bcf	3,5	;RP0=0, select bank0
  7186  16B7  1303               	bcf	3,6	;RP1=0, select bank0
  7187  16B8  0863               	movf	___fladd@aexp,w
  7188  16B9  0264               	subwf	___fladd@bexp,w
  7189  16BA  1C03               	skipc
  7190  16BB  2E9A               	goto	l584
  7191  16BC                     l582:	
  7192  16BC  1B62               	btfsc	___fladd@signs,6
  7193  16BD  2EFD               	goto	l2332
  7194  16BE  0864               	movf	___fladd@bexp,w
  7195  16BF  1D03               	btfss	3,2
  7196  16C0  2ECA               	goto	l2314
  7197  16C1  3000               	movlw	0
  7198  16C2  00D5               	movwf	?___fladd+3
  7199  16C3  3000               	movlw	0
  7200  16C4  00D4               	movwf	?___fladd+2
  7201  16C5  3000               	movlw	0
  7202  16C6  00D3               	movwf	?___fladd+1
  7203  16C7  3000               	movlw	0
  7204  16C8  00D2               	movwf	?___fladd
  7205  16C9  0008               	return
  7206  16CA                     l2314:	
  7207  16CA  0856               	movf	___fladd@a,w
  7208  16CB  07D2               	addwf	___fladd@b,f
  7209  16CC  0857               	movf	___fladd@a+1,w
  7210  16CD  1103               	clrz
  7211  16CE  1803               	skipnc
  7212  16CF  3E01               	addlw	1
  7213  16D0  1D03               	btfss	3,2
  7214  16D1  07D3               	addwf	___fladd@b+1,f
  7215  16D2  0858               	movf	___fladd@a+2,w
  7216  16D3  1103               	clrz
  7217  16D4  1803               	skipnc
  7218  16D5  3E01               	addlw	1
  7219  16D6  1D03               	btfss	3,2
  7220  16D7  07D4               	addwf	___fladd@b+2,f
  7221  16D8  0859               	movf	___fladd@a+3,w
  7222  16D9  1103               	clrz
  7223  16DA  1803               	skipnc
  7224  16DB  3E01               	addlw	1
  7225  16DC  1D03               	btfss	3,2
  7226  16DD  07D5               	addwf	___fladd@b+3,f
  7227  16DE  1C55               	btfss	___fladd@b+3,0
  7228  16DF  2F9F               	goto	l2366
  7229  16E0  1C65               	btfss	___fladd@grs,0
  7230  16E1  2EEB               	goto	l2322
  7231  16E2  0865               	movf	___fladd@grs,w
  7232  16E3  00DA               	movwf	??___fladd
  7233  16E4  1003               	clrc
  7234  16E5  0C5A               	rrf	??___fladd,w
  7235  16E6  3801               	iorlw	1
  7236  16E7  00DB               	movwf	??___fladd+1
  7237  16E8  085B               	movf	??___fladd+1,w
  7238  16E9  00E5               	movwf	___fladd@grs
  7239  16EA  2EED               	goto	l2324
  7240  16EB                     l2322:	
  7241  16EB  1003               	clrc
  7242  16EC  0CE5               	rrf	___fladd@grs,f
  7243  16ED                     l2324:	
  7244  16ED  1852               	btfsc	___fladd@b,0
  7245  16EE  17E5               	bsf	___fladd@grs,7
  7246  16EF  3001               	movlw	1
  7247  16F0  00DA               	movwf	??___fladd
  7248  16F1                     u3385:	
  7249  16F1  0D55               	rlf	___fladd@b+3,w
  7250  16F2  0CD5               	rrf	___fladd@b+3,f
  7251  16F3  0CD4               	rrf	___fladd@b+2,f
  7252  16F4  0CD3               	rrf	___fladd@b+1,f
  7253  16F5  0CD2               	rrf	___fladd@b,f
  7254  16F6  0BDA               	decfsz	??___fladd& (0+127),f
  7255  16F7  2EF1               	goto	u3385
  7256  16F8  3001               	movlw	1
  7257  16F9  00DA               	movwf	??___fladd
  7258  16FA  085A               	movf	??___fladd,w
  7259  16FB  07E4               	addwf	___fladd@bexp,f
  7260  16FC  2F9F               	goto	l2366
  7261  16FD                     l2332:	
  7262  16FD  0855               	movf	___fladd@b+3,w
  7263  16FE  3A80               	xorlw	128
  7264  16FF  00FF               	movwf	127
  7265  1700  0859               	movf	___fladd@a+3,w
  7266  1701  3A80               	xorlw	128
  7267  1702  027F               	subwf	127,w
  7268  1703  1D03               	skipz
  7269  1704  2F0F               	goto	u3393
  7270  1705  0858               	movf	___fladd@a+2,w
  7271  1706  0254               	subwf	___fladd@b+2,w
  7272  1707  1D03               	skipz
  7273  1708  2F0F               	goto	u3393
  7274  1709  0857               	movf	___fladd@a+1,w
  7275  170A  0253               	subwf	___fladd@b+1,w
  7276  170B  1D03               	skipz
  7277  170C  2F0F               	goto	u3393
  7278  170D  0856               	movf	___fladd@a,w
  7279  170E  0252               	subwf	___fladd@b,w
  7280  170F                     u3393:	
  7281  170F  1803               	skipnc
  7282  1710  2F67               	goto	l2342
  7283  1711  30FF               	movlw	255
  7284  1712  00DA               	movwf	??___fladd
  7285  1713  30FF               	movlw	255
  7286  1714  00DB               	movwf	??___fladd+1
  7287  1715  30FF               	movlw	255
  7288  1716  00DC               	movwf	??___fladd+2
  7289  1717  30FF               	movlw	255
  7290  1718  00DD               	movwf	??___fladd+3
  7291  1719  0856               	movf	___fladd@a,w
  7292  171A  00DE               	movwf	??___fladd+4
  7293  171B  0857               	movf	___fladd@a+1,w
  7294  171C  00DF               	movwf	??___fladd+5
  7295  171D  0858               	movf	___fladd@a+2,w
  7296  171E  00E0               	movwf	??___fladd+6
  7297  171F  0859               	movf	___fladd@a+3,w
  7298  1720  00E1               	movwf	??___fladd+7
  7299  1721  0852               	movf	___fladd@b,w
  7300  1722  02DE               	subwf	??___fladd+4,f
  7301  1723  0853               	movf	___fladd@b+1,w
  7302  1724  1C03               	skipc
  7303  1725  0F53               	incfsz	___fladd@b+1,w
  7304  1726  2F28               	goto	u3401
  7305  1727  2F29               	goto	u3402
  7306  1728                     u3401:	
  7307  1728  02DF               	subwf	??___fladd+5,f
  7308  1729                     u3402:	
  7309  1729  0854               	movf	___fladd@b+2,w
  7310  172A  1C03               	skipc
  7311  172B  0F54               	incfsz	___fladd@b+2,w
  7312  172C  2F2E               	goto	u3403
  7313  172D  2F2F               	goto	u3404
  7314  172E                     u3403:	
  7315  172E  02E0               	subwf	??___fladd+6,f
  7316  172F                     u3404:	
  7317  172F  0855               	movf	___fladd@b+3,w
  7318  1730  1C03               	skipc
  7319  1731  0F55               	incfsz	___fladd@b+3,w
  7320  1732  2F34               	goto	u3405
  7321  1733  2F35               	goto	u3406
  7322  1734                     u3405:	
  7323  1734  02E1               	subwf	??___fladd+7,f
  7324  1735                     u3406:	
  7325  1735  085E               	movf	??___fladd+4,w
  7326  1736  07DA               	addwf	??___fladd,f
  7327  1737  085F               	movf	??___fladd+5,w
  7328  1738  1803               	skipnc
  7329  1739  0F5F               	incfsz	??___fladd+5,w
  7330  173A  2F3C               	goto	u3410
  7331  173B  2F3D               	goto	u3411
  7332  173C                     u3410:	
  7333  173C  07DB               	addwf	??___fladd+1,f
  7334  173D                     u3411:	
  7335  173D  0860               	movf	??___fladd+6,w
  7336  173E  1803               	skipnc
  7337  173F  0F60               	incfsz	??___fladd+6,w
  7338  1740  2F42               	goto	u3412
  7339  1741  2F43               	goto	u3413
  7340  1742                     u3412:	
  7341  1742  07DC               	addwf	??___fladd+2,f
  7342  1743                     u3413:	
  7343  1743  0861               	movf	??___fladd+7,w
  7344  1744  1803               	skipnc
  7345  1745  0A61               	incf	??___fladd+7,w
  7346  1746  07DD               	addwf	??___fladd+3,f
  7347  1747  085D               	movf	??___fladd+3,w
  7348  1748  00D5               	movwf	___fladd@b+3
  7349  1749  085C               	movf	??___fladd+2,w
  7350  174A  00D4               	movwf	___fladd@b+2
  7351  174B  085B               	movf	??___fladd+1,w
  7352  174C  00D3               	movwf	___fladd@b+1
  7353  174D  085A               	movf	??___fladd,w
  7354  174E  00D2               	movwf	___fladd@b
  7355  174F  3080               	movlw	128
  7356  1750  00DA               	movwf	??___fladd
  7357  1751  085A               	movf	??___fladd,w
  7358  1752  06E2               	xorwf	___fladd@signs,f
  7359  1753  09E5               	comf	___fladd@grs,f
  7360  1754  0AE5               	incf	___fladd@grs,f
  7361  1755  0865               	movf	___fladd@grs,w
  7362  1756  1D03               	btfss	3,2
  7363  1757  2F75               	goto	l599
  7364  1758  3001               	movlw	1
  7365  1759  07D2               	addwf	___fladd@b,f
  7366  175A  3000               	movlw	0
  7367  175B  1803               	skipnc
  7368  175C  3001               	movlw	1
  7369  175D  07D3               	addwf	___fladd@b+1,f
  7370  175E  3000               	movlw	0
  7371  175F  1803               	skipnc
  7372  1760  3001               	movlw	1
  7373  1761  07D4               	addwf	___fladd@b+2,f
  7374  1762  3000               	movlw	0
  7375  1763  1803               	skipnc
  7376  1764  3001               	movlw	1
  7377  1765  07D5               	addwf	___fladd@b+3,f
  7378  1766  2F75               	goto	l599
  7379  1767                     l2342:	
  7380  1767  0856               	movf	___fladd@a,w
  7381  1768  02D2               	subwf	___fladd@b,f
  7382  1769  0857               	movf	___fladd@a+1,w
  7383  176A  1C03               	skipc
  7384  176B  0F57               	incfsz	___fladd@a+1,w
  7385  176C  02D3               	subwf	___fladd@b+1,f
  7386  176D  0858               	movf	___fladd@a+2,w
  7387  176E  1C03               	skipc
  7388  176F  0F58               	incfsz	___fladd@a+2,w
  7389  1770  02D4               	subwf	___fladd@b+2,f
  7390  1771  0859               	movf	___fladd@a+3,w
  7391  1772  1C03               	skipc
  7392  1773  0F59               	incfsz	___fladd@a+3,w
  7393  1774  02D5               	subwf	___fladd@b+3,f
  7394  1775                     l599:	
  7395  1775  0855               	movf	___fladd@b+3,w
  7396  1776  0454               	iorwf	___fladd@b+2,w
  7397  1777  0453               	iorwf	___fladd@b+1,w
  7398  1778  0452               	iorwf	___fladd@b,w
  7399  1779  1D03               	skipz
  7400  177A  2F9D               	goto	l2364
  7401  177B  0865               	movf	___fladd@grs,w
  7402  177C  1D03               	btfss	3,2
  7403  177D  2F9D               	goto	l2364
  7404  177E  3000               	movlw	0
  7405  177F  00D5               	movwf	?___fladd+3
  7406  1780  3000               	movlw	0
  7407  1781  00D4               	movwf	?___fladd+2
  7408  1782  3000               	movlw	0
  7409  1783  00D3               	movwf	?___fladd+1
  7410  1784  3000               	movlw	0
  7411  1785  00D2               	movwf	?___fladd
  7412  1786  0008               	return
  7413  1787                     l2350:	
  7414  1787  3001               	movlw	1
  7415  1788  00DA               	movwf	??___fladd
  7416  1789                     u3455:	
  7417  1789  1003               	clrc
  7418  178A  0DD2               	rlf	___fladd@b,f
  7419  178B  0DD3               	rlf	___fladd@b+1,f
  7420  178C  0DD4               	rlf	___fladd@b+2,f
  7421  178D  0DD5               	rlf	___fladd@b+3,f
  7422  178E  0BDA               	decfsz	??___fladd,f
  7423  178F  2F89               	goto	u3455
  7424  1790  1BE5               	btfsc	___fladd@grs,7
  7425  1791  1452               	bsf	___fladd@b,0
  7426  1792  1C65               	btfss	___fladd@grs,0
  7427  1793  2F96               	goto	l2358
  7428  1794  1403               	setc
  7429  1795  2F97               	goto	L7
  7430  1796                     l2358:	
  7431  1796  1003               	clrc
  7432  1797                     L7:	
  7433  1797  0DE5               	rlf	___fladd@grs,f
  7434  1798  0864               	movf	___fladd@bexp,w
  7435  1799  1903               	btfsc	3,2
  7436  179A  2F9D               	goto	l2364
  7437  179B  3001               	movlw	1
  7438  179C  02E4               	subwf	___fladd@bexp,f
  7439  179D                     l2364:	
  7440  179D  1FD4               	btfss	___fladd@b+2,7
  7441  179E  2F87               	goto	l2350
  7442  179F                     l2366:	
  7443  179F  01E3               	clrf	___fladd@aexp
  7444  17A0  1FE5               	btfss	___fladd@grs,7
  7445  17A1  2FAA               	goto	l2376
  7446  17A2  0865               	movf	___fladd@grs,w
  7447  17A3  397F               	andlw	127
  7448  17A4  1903               	btfsc	3,2
  7449  17A5  1852               	btfsc	___fladd@b,0
  7450  17A6  2FA8               	goto	l2372
  7451  17A7  2FAA               	goto	l2376
  7452  17A8                     l2372:	
  7453  17A8  01E3               	clrf	___fladd@aexp
  7454  17A9  0AE3               	incf	___fladd@aexp,f
  7455  17AA                     l2376:	
  7456  17AA  0863               	movf	___fladd@aexp,w
  7457  17AB  1903               	btfsc	3,2
  7458  17AC  2FDD               	goto	l612
  7459  17AD  3001               	movlw	1
  7460  17AE  07D2               	addwf	___fladd@b,f
  7461  17AF  3000               	movlw	0
  7462  17B0  1803               	skipnc
  7463  17B1  3001               	movlw	1
  7464  17B2  07D3               	addwf	___fladd@b+1,f
  7465  17B3  3000               	movlw	0
  7466  17B4  1803               	skipnc
  7467  17B5  3001               	movlw	1
  7468  17B6  07D4               	addwf	___fladd@b+2,f
  7469  17B7  3000               	movlw	0
  7470  17B8  1803               	skipnc
  7471  17B9  3001               	movlw	1
  7472  17BA  07D5               	addwf	___fladd@b+3,f
  7473  17BB  1C55               	btfss	___fladd@b+3,0
  7474  17BC  2FDD               	goto	l612
  7475  17BD  0852               	movf	___fladd@b,w
  7476  17BE  00DA               	movwf	??___fladd
  7477  17BF  0853               	movf	___fladd@b+1,w
  7478  17C0  00DB               	movwf	??___fladd+1
  7479  17C1  0854               	movf	___fladd@b+2,w
  7480  17C2  00DC               	movwf	??___fladd+2
  7481  17C3  0855               	movf	___fladd@b+3,w
  7482  17C4  00DD               	movwf	??___fladd+3
  7483  17C5  3001               	movlw	1
  7484  17C6  00DE               	movwf	??___fladd+4
  7485  17C7                     u3555:	
  7486  17C7  0D5D               	rlf	??___fladd+3,w
  7487  17C8  0CDD               	rrf	??___fladd+3,f
  7488  17C9  0CDC               	rrf	??___fladd+2,f
  7489  17CA  0CDB               	rrf	??___fladd+1,f
  7490  17CB  0CDA               	rrf	??___fladd,f
  7491  17CC  0BDE               	decfsz	??___fladd+4,f
  7492  17CD  2FC7               	goto	u3555
  7493  17CE  085D               	movf	??___fladd+3,w
  7494  17CF  00D5               	movwf	___fladd@b+3
  7495  17D0  085C               	movf	??___fladd+2,w
  7496  17D1  00D4               	movwf	___fladd@b+2
  7497  17D2  085B               	movf	??___fladd+1,w
  7498  17D3  00D3               	movwf	___fladd@b+1
  7499  17D4  085A               	movf	??___fladd,w
  7500  17D5  00D2               	movwf	___fladd@b
  7501  17D6  0A64               	incf	___fladd@bexp,w
  7502  17D7  1903               	btfsc	3,2
  7503  17D8  2FDD               	goto	l612
  7504  17D9  3001               	movlw	1
  7505  17DA  00DA               	movwf	??___fladd
  7506  17DB  085A               	movf	??___fladd,w
  7507  17DC  07E4               	addwf	___fladd@bexp,f
  7508  17DD                     l612:	
  7509  17DD  0A64               	incf	___fladd@bexp,w
  7510  17DE  1D03               	btfss	3,2
  7511  17DF  0864               	movf	___fladd@bexp,w
  7512  17E0  1D03               	btfss	3,2
  7513  17E1  2FED               	goto	l2394
  7514  17E2  3000               	movlw	0
  7515  17E3  00D5               	movwf	___fladd@b+3
  7516  17E4  3000               	movlw	0
  7517  17E5  00D4               	movwf	___fladd@b+2
  7518  17E6  3000               	movlw	0
  7519  17E7  00D3               	movwf	___fladd@b+1
  7520  17E8  3000               	movlw	0
  7521  17E9  00D2               	movwf	___fladd@b
  7522  17EA  0864               	movf	___fladd@bexp,w
  7523  17EB  1903               	btfsc	3,2
  7524  17EC  01E2               	clrf	___fladd@signs
  7525  17ED                     l2394:	
  7526  17ED  1C64               	btfss	___fladd@bexp,0
  7527  17EE  2FF1               	goto	l2398
  7528  17EF  17D4               	bsf	___fladd@b+2,7
  7529  17F0  2FF5               	goto	l620
  7530  17F1                     l2398:	
  7531  17F1  307F               	movlw	127
  7532  17F2  00DA               	movwf	??___fladd
  7533  17F3  085A               	movf	??___fladd,w
  7534  17F4  05D4               	andwf	___fladd@b+2,f
  7535  17F5                     l620:	
  7536  17F5  0864               	movf	___fladd@bexp,w
  7537  17F6  00DA               	movwf	??___fladd
  7538  17F7  1003               	clrc
  7539  17F8  0C5A               	rrf	??___fladd,w
  7540  17F9  00DB               	movwf	??___fladd+1
  7541  17FA  085B               	movf	??___fladd+1,w
  7542  17FB  00D5               	movwf	___fladd@b+3
  7543  17FC  1FE2               	btfss	___fladd@signs,7
  7544  17FD  0008               	return
  7545  17FE  17D5               	bsf	___fladd@b+3,7
  7546  17FF  0008               	return
  7547  1800                     __end_of___fladd:	
  7548                           
  7549                           	psect	text20
  7550  00C0                     __ptext20:	
  7551 ;; *************** function ___flneg *****************
  7552 ;; Defined at:
  7553 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
  7554 ;; Parameters:    Size  Location     Type
  7555 ;;  f1              4    0[COMMON] unsigned char 
  7556 ;; Auto vars:     Size  Location     Type
  7557 ;;		None
  7558 ;; Return value:  Size  Location     Type
  7559 ;;                  4    0[COMMON] unsigned char 
  7560 ;; Registers used:
  7561 ;;		wreg
  7562 ;; Tracked objects:
  7563 ;;		On entry : 0/0
  7564 ;;		On exit  : 0/0
  7565 ;;		Unchanged: 0/0
  7566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7567 ;;      Params:         4       0       0       0       0
  7568 ;;      Locals:         0       0       0       0       0
  7569 ;;      Temps:          0       0       0       0       0
  7570 ;;      Totals:         4       0       0       0       0
  7571 ;;Total ram usage:        4 bytes
  7572 ;; Hardware stack levels used:    1
  7573 ;; This function calls:
  7574 ;;		Nothing
  7575 ;; This function is called by:
  7576 ;;		_sprintf
  7577 ;; This function uses a non-reentrant model
  7578 ;;
  7579                           
  7580                           
  7581                           ;psect for function ___flneg
  7582  00C0                     ___flneg:	
  7583                           
  7584                           ;incstack = 0
  7585                           ; Regs used in ___flneg: [wreg]
  7586  00C0  0873               	movf	___flneg@f1+3,w
  7587  00C1  0472               	iorwf	___flneg@f1+2,w
  7588  00C2  0471               	iorwf	___flneg@f1+1,w
  7589  00C3  0470               	iorwf	___flneg@f1,w
  7590  00C4  1903               	skipnz
  7591  00C5  0008               	return
  7592  00C6  3080               	movlw	128
  7593  00C7  06F3               	xorwf	___flneg@f1+3,f
  7594  00C8  0008               	return
  7595  00C9                     __end_of___flneg:	
  7596                           
  7597                           	psect	text21
  7598  129A                     __ptext21:	
  7599 ;; *************** function ___flge *****************
  7600 ;; Defined at:
  7601 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
  7602 ;; Parameters:    Size  Location     Type
  7603 ;;  ff1             4    0[COMMON] unsigned char 
  7604 ;;  ff2             4    4[COMMON] unsigned char 
  7605 ;; Auto vars:     Size  Location     Type
  7606 ;;		None
  7607 ;; Return value:  Size  Location     Type
  7608 ;;		None               void
  7609 ;; Registers used:
  7610 ;;		wreg, status,2, status,0
  7611 ;; Tracked objects:
  7612 ;;		On entry : 0/0
  7613 ;;		On exit  : 0/0
  7614 ;;		Unchanged: 0/0
  7615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7616 ;;      Params:         8       0       0       0       0
  7617 ;;      Locals:         0       0       0       0       0
  7618 ;;      Temps:          4       0       0       0       0
  7619 ;;      Totals:        12       0       0       0       0
  7620 ;;Total ram usage:       12 bytes
  7621 ;; Hardware stack levels used:    1
  7622 ;; This function calls:
  7623 ;;		Nothing
  7624 ;; This function is called by:
  7625 ;;		_sprintf
  7626 ;; This function uses a non-reentrant model
  7627 ;;
  7628                           
  7629                           
  7630                           ;psect for function ___flge
  7631  129A                     ___flge:	
  7632                           
  7633                           ;incstack = 0
  7634                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7635  129A  3000               	movlw	0
  7636  129B  0570               	andwf	___flge@ff1,w
  7637  129C  00F8               	movwf	??___flge
  7638  129D  3000               	movlw	0
  7639  129E  0571               	andwf	___flge@ff1+1,w
  7640  129F  00F9               	movwf	??___flge+1
  7641  12A0  3080               	movlw	128
  7642  12A1  0572               	andwf	___flge@ff1+2,w
  7643  12A2  00FA               	movwf	??___flge+2
  7644  12A3  307F               	movlw	127
  7645  12A4  0573               	andwf	___flge@ff1+3,w
  7646  12A5  00FB               	movwf	??___flge+3
  7647  12A6  087B               	movf	??___flge+3,w
  7648  12A7  047A               	iorwf	??___flge+2,w
  7649  12A8  0479               	iorwf	??___flge+1,w
  7650  12A9  0478               	iorwf	??___flge,w
  7651  12AA  1D03               	skipz
  7652  12AB  2AB4               	goto	l442
  7653  12AC  3000               	movlw	0
  7654  12AD  00F3               	movwf	___flge@ff1+3
  7655  12AE  3000               	movlw	0
  7656  12AF  00F2               	movwf	___flge@ff1+2
  7657  12B0  3000               	movlw	0
  7658  12B1  00F1               	movwf	___flge@ff1+1
  7659  12B2  3000               	movlw	0
  7660  12B3  00F0               	movwf	___flge@ff1
  7661  12B4                     l442:	
  7662  12B4  3000               	movlw	0
  7663  12B5  0574               	andwf	___flge@ff2,w
  7664  12B6  00F8               	movwf	??___flge
  7665  12B7  3000               	movlw	0
  7666  12B8  0575               	andwf	___flge@ff2+1,w
  7667  12B9  00F9               	movwf	??___flge+1
  7668  12BA  3080               	movlw	128
  7669  12BB  0576               	andwf	___flge@ff2+2,w
  7670  12BC  00FA               	movwf	??___flge+2
  7671  12BD  307F               	movlw	127
  7672  12BE  0577               	andwf	___flge@ff2+3,w
  7673  12BF  00FB               	movwf	??___flge+3
  7674  12C0  087B               	movf	??___flge+3,w
  7675  12C1  047A               	iorwf	??___flge+2,w
  7676  12C2  0479               	iorwf	??___flge+1,w
  7677  12C3  0478               	iorwf	??___flge,w
  7678  12C4  1D03               	skipz
  7679  12C5  2ACE               	goto	l2804
  7680  12C6  3000               	movlw	0
  7681  12C7  00F7               	movwf	___flge@ff2+3
  7682  12C8  3000               	movlw	0
  7683  12C9  00F6               	movwf	___flge@ff2+2
  7684  12CA  3000               	movlw	0
  7685  12CB  00F5               	movwf	___flge@ff2+1
  7686  12CC  3000               	movlw	0
  7687  12CD  00F4               	movwf	___flge@ff2
  7688  12CE                     l2804:	
  7689  12CE  1FF3               	btfss	___flge@ff1+3,7
  7690  12CF  2AF4               	goto	l2808
  7691  12D0  3000               	movlw	0
  7692  12D1  00F8               	movwf	??___flge
  7693  12D2  3000               	movlw	0
  7694  12D3  00F9               	movwf	??___flge+1
  7695  12D4  3000               	movlw	0
  7696  12D5  00FA               	movwf	??___flge+2
  7697  12D6  3080               	movlw	128
  7698  12D7  00FB               	movwf	??___flge+3
  7699  12D8  0870               	movf	___flge@ff1,w
  7700  12D9  02F8               	subwf	??___flge,f
  7701  12DA  0871               	movf	___flge@ff1+1,w
  7702  12DB  1C03               	skipc
  7703  12DC  0F71               	incfsz	___flge@ff1+1,w
  7704  12DD  2ADF               	goto	u4701
  7705  12DE  2AE0               	goto	u4702
  7706  12DF                     u4701:	
  7707  12DF  02F9               	subwf	??___flge+1,f
  7708  12E0                     u4702:	
  7709  12E0  0872               	movf	___flge@ff1+2,w
  7710  12E1  1C03               	skipc
  7711  12E2  0F72               	incfsz	___flge@ff1+2,w
  7712  12E3  2AE5               	goto	u4703
  7713  12E4  2AE6               	goto	u4704
  7714  12E5                     u4703:	
  7715  12E5  02FA               	subwf	??___flge+2,f
  7716  12E6                     u4704:	
  7717  12E6  0873               	movf	___flge@ff1+3,w
  7718  12E7  1C03               	skipc
  7719  12E8  0F73               	incfsz	___flge@ff1+3,w
  7720  12E9  2AEB               	goto	u4705
  7721  12EA  2AEC               	goto	u4706
  7722  12EB                     u4705:	
  7723  12EB  02FB               	subwf	??___flge+3,f
  7724  12EC                     u4706:	
  7725  12EC  087B               	movf	??___flge+3,w
  7726  12ED  00F3               	movwf	___flge@ff1+3
  7727  12EE  087A               	movf	??___flge+2,w
  7728  12EF  00F2               	movwf	___flge@ff1+2
  7729  12F0  0879               	movf	??___flge+1,w
  7730  12F1  00F1               	movwf	___flge@ff1+1
  7731  12F2  0878               	movf	??___flge,w
  7732  12F3  00F0               	movwf	___flge@ff1
  7733  12F4                     l2808:	
  7734  12F4  1FF7               	btfss	___flge@ff2+3,7
  7735  12F5  2B1A               	goto	l445
  7736  12F6  3000               	movlw	0
  7737  12F7  00F8               	movwf	??___flge
  7738  12F8  3000               	movlw	0
  7739  12F9  00F9               	movwf	??___flge+1
  7740  12FA  3000               	movlw	0
  7741  12FB  00FA               	movwf	??___flge+2
  7742  12FC  3080               	movlw	128
  7743  12FD  00FB               	movwf	??___flge+3
  7744  12FE  0874               	movf	___flge@ff2,w
  7745  12FF  02F8               	subwf	??___flge,f
  7746  1300  0875               	movf	___flge@ff2+1,w
  7747  1301  1C03               	skipc
  7748  1302  0F75               	incfsz	___flge@ff2+1,w
  7749  1303  2B05               	goto	u4721
  7750  1304  2B06               	goto	u4722
  7751  1305                     u4721:	
  7752  1305  02F9               	subwf	??___flge+1,f
  7753  1306                     u4722:	
  7754  1306  0876               	movf	___flge@ff2+2,w
  7755  1307  1C03               	skipc
  7756  1308  0F76               	incfsz	___flge@ff2+2,w
  7757  1309  2B0B               	goto	u4723
  7758  130A  2B0C               	goto	u4724
  7759  130B                     u4723:	
  7760  130B  02FA               	subwf	??___flge+2,f
  7761  130C                     u4724:	
  7762  130C  0877               	movf	___flge@ff2+3,w
  7763  130D  1C03               	skipc
  7764  130E  0F77               	incfsz	___flge@ff2+3,w
  7765  130F  2B11               	goto	u4725
  7766  1310  2B12               	goto	u4726
  7767  1311                     u4725:	
  7768  1311  02FB               	subwf	??___flge+3,f
  7769  1312                     u4726:	
  7770  1312  087B               	movf	??___flge+3,w
  7771  1313  00F7               	movwf	___flge@ff2+3
  7772  1314  087A               	movf	??___flge+2,w
  7773  1315  00F6               	movwf	___flge@ff2+2
  7774  1316  0879               	movf	??___flge+1,w
  7775  1317  00F5               	movwf	___flge@ff2+1
  7776  1318  0878               	movf	??___flge,w
  7777  1319  00F4               	movwf	___flge@ff2
  7778  131A                     l445:	
  7779  131A  3080               	movlw	128
  7780  131B  06F3               	xorwf	___flge@ff1+3,f
  7781  131C  3080               	movlw	128
  7782  131D  06F7               	xorwf	___flge@ff2+3,f
  7783  131E  0877               	movf	___flge@ff2+3,w
  7784  131F  0273               	subwf	___flge@ff1+3,w
  7785  1320  1D03               	skipz
  7786  1321  0008               	return
  7787  1322  0876               	movf	___flge@ff2+2,w
  7788  1323  0272               	subwf	___flge@ff1+2,w
  7789  1324  1D03               	skipz
  7790  1325  0008               	return
  7791  1326  0875               	movf	___flge@ff2+1,w
  7792  1327  0271               	subwf	___flge@ff1+1,w
  7793  1328  1D03               	skipz
  7794  1329  0008               	return
  7795  132A  0874               	movf	___flge@ff2,w
  7796  132B  0270               	subwf	___flge@ff1,w
  7797  132C  0008               	return
  7798  132D                     __end_of___flge:	
  7799                           
  7800                           	psect	text22
  7801  1F6E                     __ptext22:	
  7802 ;; *************** function ___fleq *****************
  7803 ;; Defined at:
  7804 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;  ff1             4    0[COMMON] unsigned char 
  7807 ;;  ff2             4    4[COMMON] unsigned char 
  7808 ;; Auto vars:     Size  Location     Type
  7809 ;;		None
  7810 ;; Return value:  Size  Location     Type
  7811 ;;		None               void
  7812 ;; Registers used:
  7813 ;;		wreg, status,2, status,0
  7814 ;; Tracked objects:
  7815 ;;		On entry : 0/0
  7816 ;;		On exit  : 0/0
  7817 ;;		Unchanged: 0/0
  7818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7819 ;;      Params:         8       0       0       0       0
  7820 ;;      Locals:         0       0       0       0       0
  7821 ;;      Temps:          4       0       0       0       0
  7822 ;;      Totals:        12       0       0       0       0
  7823 ;;Total ram usage:       12 bytes
  7824 ;; Hardware stack levels used:    1
  7825 ;; This function calls:
  7826 ;;		Nothing
  7827 ;; This function is called by:
  7828 ;;		_sprintf
  7829 ;; This function uses a non-reentrant model
  7830 ;;
  7831                           
  7832                           
  7833                           ;psect for function ___fleq
  7834  1F6E                     ___fleq:	
  7835                           
  7836                           ;incstack = 0
  7837                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7838  1F6E  3000               	movlw	0
  7839  1F6F  0570               	andwf	___fleq@ff1,w
  7840  1F70  00F8               	movwf	??___fleq
  7841  1F71  3000               	movlw	0
  7842  1F72  0571               	andwf	___fleq@ff1+1,w
  7843  1F73  00F9               	movwf	??___fleq+1
  7844  1F74  3080               	movlw	128
  7845  1F75  0572               	andwf	___fleq@ff1+2,w
  7846  1F76  00FA               	movwf	??___fleq+2
  7847  1F77  307F               	movlw	127
  7848  1F78  0573               	andwf	___fleq@ff1+3,w
  7849  1F79  00FB               	movwf	??___fleq+3
  7850  1F7A  087B               	movf	??___fleq+3,w
  7851  1F7B  047A               	iorwf	??___fleq+2,w
  7852  1F7C  0479               	iorwf	??___fleq+1,w
  7853  1F7D  0478               	iorwf	??___fleq,w
  7854  1F7E  1D03               	skipz
  7855  1F7F  2F88               	goto	l437
  7856  1F80  3000               	movlw	0
  7857  1F81  00F3               	movwf	___fleq@ff1+3
  7858  1F82  3000               	movlw	0
  7859  1F83  00F2               	movwf	___fleq@ff1+2
  7860  1F84  3000               	movlw	0
  7861  1F85  00F1               	movwf	___fleq@ff1+1
  7862  1F86  3000               	movlw	0
  7863  1F87  00F0               	movwf	___fleq@ff1
  7864  1F88                     l437:	
  7865  1F88  3000               	movlw	0
  7866  1F89  0574               	andwf	___fleq@ff2,w
  7867  1F8A  00F8               	movwf	??___fleq
  7868  1F8B  3000               	movlw	0
  7869  1F8C  0575               	andwf	___fleq@ff2+1,w
  7870  1F8D  00F9               	movwf	??___fleq+1
  7871  1F8E  3080               	movlw	128
  7872  1F8F  0576               	andwf	___fleq@ff2+2,w
  7873  1F90  00FA               	movwf	??___fleq+2
  7874  1F91  307F               	movlw	127
  7875  1F92  0577               	andwf	___fleq@ff2+3,w
  7876  1F93  00FB               	movwf	??___fleq+3
  7877  1F94  087B               	movf	??___fleq+3,w
  7878  1F95  047A               	iorwf	??___fleq+2,w
  7879  1F96  0479               	iorwf	??___fleq+1,w
  7880  1F97  0478               	iorwf	??___fleq,w
  7881  1F98  1D03               	skipz
  7882  1F99  2FA2               	goto	l438
  7883  1F9A  3000               	movlw	0
  7884  1F9B  00F7               	movwf	___fleq@ff2+3
  7885  1F9C  3000               	movlw	0
  7886  1F9D  00F6               	movwf	___fleq@ff2+2
  7887  1F9E  3000               	movlw	0
  7888  1F9F  00F5               	movwf	___fleq@ff2+1
  7889  1FA0  3000               	movlw	0
  7890  1FA1  00F4               	movwf	___fleq@ff2
  7891  1FA2                     l438:	
  7892  1FA2  0877               	movf	___fleq@ff2+3,w
  7893  1FA3  0673               	xorwf	___fleq@ff1+3,w
  7894  1FA4  1D03               	skipz
  7895  1FA5  2FB0               	goto	u4665
  7896  1FA6  0876               	movf	___fleq@ff2+2,w
  7897  1FA7  0672               	xorwf	___fleq@ff1+2,w
  7898  1FA8  1D03               	skipz
  7899  1FA9  2FB0               	goto	u4665
  7900  1FAA  0875               	movf	___fleq@ff2+1,w
  7901  1FAB  0671               	xorwf	___fleq@ff1+1,w
  7902  1FAC  1D03               	skipz
  7903  1FAD  2FB0               	goto	u4665
  7904  1FAE  0874               	movf	___fleq@ff2,w
  7905  1FAF  0670               	xorwf	___fleq@ff1,w
  7906  1FB0                     u4665:	
  7907  1FB0  1903               	skipnz
  7908  1FB1  2FB4               	goto	l2794
  7909  1FB2  1003               	clrc
  7910  1FB3  0008               	return
  7911  1FB4                     l2794:	
  7912  1FB4  1403               	setc
  7913  1FB5  0008               	return
  7914  1FB6                     __end_of___fleq:	
  7915                           
  7916                           	psect	text23
  7917  1FB6                     __ptext23:	
  7918 ;; *************** function _lcdSetCursor *****************
  7919 ;; Defined at:
  7920 ;;		line 56 in file "./lcd.h"
  7921 ;; Parameters:    Size  Location     Type
  7922 ;;  a               1    wreg     unsigned char 
  7923 ;;  b               1    4[COMMON] unsigned char 
  7924 ;; Auto vars:     Size  Location     Type
  7925 ;;  a               1    7[COMMON] unsigned char 
  7926 ;;  temp            1   10[COMMON] unsigned char 
  7927 ;;  y               1    9[COMMON] unsigned char 
  7928 ;;  z               1    8[COMMON] unsigned char 
  7929 ;; Return value:  Size  Location     Type
  7930 ;;                  1    wreg      void 
  7931 ;; Registers used:
  7932 ;;		wreg, status,2, status,0, pclath, cstack
  7933 ;; Tracked objects:
  7934 ;;		On entry : 0/0
  7935 ;;		On exit  : 0/0
  7936 ;;		Unchanged: 0/0
  7937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7938 ;;      Params:         1       0       0       0       0
  7939 ;;      Locals:         4       0       0       0       0
  7940 ;;      Temps:          2       0       0       0       0
  7941 ;;      Totals:         7       0       0       0       0
  7942 ;;Total ram usage:        7 bytes
  7943 ;; Hardware stack levels used:    1
  7944 ;; Hardware stack levels required when called:    2
  7945 ;; This function calls:
  7946 ;;		_lcdCmd
  7947 ;; This function is called by:
  7948 ;;		_main
  7949 ;; This function uses a non-reentrant model
  7950 ;;
  7951                           
  7952                           
  7953                           ;psect for function _lcdSetCursor
  7954  1FB6                     _lcdSetCursor:	
  7955                           
  7956                           ;incstack = 0
  7957                           ; Regs used in _lcdSetCursor: [wreg+status,2+status,0+pclath+cstack]
  7958                           ;lcdSetCursor@a stored from wreg
  7959  1FB6  00F7               	movwf	lcdSetCursor@a
  7960                           
  7961                           ;./lcd.h: 57:     char temp, z, y;;./lcd.h: 58:     if (a == 1) {
  7962  1FB7  0377               	decf	lcdSetCursor@a,w
  7963  1FB8  1D03               	btfss	3,2
  7964  1FB9  2FDB               	goto	l2944
  7965                           
  7966                           ;./lcd.h: 59:         temp = 0x80 + b - 1;
  7967  1FBA  0874               	movf	lcdSetCursor@b,w
  7968  1FBB  3E7F               	addlw	127
  7969  1FBC  00F5               	movwf	??_lcdSetCursor
  7970  1FBD  0875               	movf	??_lcdSetCursor,w
  7971  1FBE  00FA               	movwf	lcdSetCursor@temp
  7972                           
  7973                           ;./lcd.h: 60:         z = temp >> 4;
  7974  1FBF  087A               	movf	lcdSetCursor@temp,w
  7975  1FC0  00F5               	movwf	??_lcdSetCursor
  7976  1FC1  3004               	movlw	4
  7977  1FC2                     u5065:	
  7978  1FC2  1003               	clrc
  7979  1FC3  0CF5               	rrf	??_lcdSetCursor,f
  7980  1FC4  3EFF               	addlw	-1
  7981  1FC5  1D03               	skipz
  7982  1FC6  2FC2               	goto	u5065
  7983  1FC7  0875               	movf	??_lcdSetCursor,w
  7984  1FC8  00F6               	movwf	??_lcdSetCursor+1
  7985  1FC9  0876               	movf	??_lcdSetCursor+1,w
  7986  1FCA  00F8               	movwf	lcdSetCursor@z
  7987                           
  7988                           ;./lcd.h: 61:         y = temp & 0x0F;
  7989  1FCB  087A               	movf	lcdSetCursor@temp,w
  7990  1FCC  390F               	andlw	15
  7991  1FCD  00F5               	movwf	??_lcdSetCursor
  7992  1FCE  0875               	movf	??_lcdSetCursor,w
  7993  1FCF  00F9               	movwf	lcdSetCursor@y
  7994                           
  7995                           ;./lcd.h: 62:         lcdCmd(z);
  7996  1FD0  0878               	movf	lcdSetCursor@z,w
  7997  1FD1  160A  158A  2649  160A  158A  	fcall	_lcdCmd
  7998                           
  7999                           ;./lcd.h: 63:         lcdCmd(y);
  8000  1FD6  0879               	movf	lcdSetCursor@y,w
  8001  1FD7  160A  158A  2649   	fcall	_lcdCmd
  8002                           
  8003                           ;./lcd.h: 64:     } else if (a == 2) {
  8004  1FDA  0008               	return
  8005  1FDB                     l2944:	
  8006  1FDB  3002               	movlw	2
  8007  1FDC  0677               	xorwf	lcdSetCursor@a,w
  8008  1FDD  1D03               	btfss	3,2
  8009  1FDE  0008               	return
  8010                           
  8011                           ;./lcd.h: 65:         temp = 0xC0 + b - 1;
  8012  1FDF  0874               	movf	lcdSetCursor@b,w
  8013  1FE0  3EBF               	addlw	191
  8014  1FE1  00F5               	movwf	??_lcdSetCursor
  8015  1FE2  0875               	movf	??_lcdSetCursor,w
  8016  1FE3  00FA               	movwf	lcdSetCursor@temp
  8017                           
  8018                           ;./lcd.h: 66:         z = temp >> 4;
  8019  1FE4  087A               	movf	lcdSetCursor@temp,w
  8020  1FE5  00F5               	movwf	??_lcdSetCursor
  8021  1FE6  3004               	movlw	4
  8022  1FE7                     u5085:	
  8023  1FE7  1003               	clrc
  8024  1FE8  0CF5               	rrf	??_lcdSetCursor,f
  8025  1FE9  3EFF               	addlw	-1
  8026  1FEA  1D03               	skipz
  8027  1FEB  2FE7               	goto	u5085
  8028  1FEC  0875               	movf	??_lcdSetCursor,w
  8029  1FED  00F6               	movwf	??_lcdSetCursor+1
  8030  1FEE  0876               	movf	??_lcdSetCursor+1,w
  8031  1FEF  00F8               	movwf	lcdSetCursor@z
  8032                           
  8033                           ;./lcd.h: 67:         y = temp & 0x0F;
  8034  1FF0  087A               	movf	lcdSetCursor@temp,w
  8035  1FF1  390F               	andlw	15
  8036  1FF2  00F5               	movwf	??_lcdSetCursor
  8037  1FF3  0875               	movf	??_lcdSetCursor,w
  8038  1FF4  00F9               	movwf	lcdSetCursor@y
  8039                           
  8040                           ;./lcd.h: 68:         lcdCmd(z);
  8041  1FF5  0878               	movf	lcdSetCursor@z,w
  8042  1FF6  160A  158A  2649  160A  158A  	fcall	_lcdCmd
  8043                           
  8044                           ;./lcd.h: 69:         lcdCmd(y);
  8045  1FFB  0879               	movf	lcdSetCursor@y,w
  8046  1FFC  160A  158A  2649   	fcall	_lcdCmd
  8047  1FFF  0008               	return
  8048  2000                     __end_of_lcdSetCursor:	
  8049                           
  8050                           	psect	text24
  8051  1000                     __ptext24:	
  8052 ;; *************** function _lcdPrint *****************
  8053 ;; Defined at:
  8054 ;;		line 108 in file "./lcd.h"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;  a               2    5[COMMON] PTR unsigned char 
  8057 ;;		 -> STR_3(3), main@entero(16), main@flotante(16), 
  8058 ;; Auto vars:     Size  Location     Type
  8059 ;;  i               2   10[COMMON] int 
  8060 ;; Return value:  Size  Location     Type
  8061 ;;                  1    wreg      void 
  8062 ;; Registers used:
  8063 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8064 ;; Tracked objects:
  8065 ;;		On entry : 0/0
  8066 ;;		On exit  : 0/0
  8067 ;;		Unchanged: 0/0
  8068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8069 ;;      Params:         2       0       0       0       0
  8070 ;;      Locals:         2       0       0       0       0
  8071 ;;      Temps:          3       0       0       0       0
  8072 ;;      Totals:         7       0       0       0       0
  8073 ;;Total ram usage:        7 bytes
  8074 ;; Hardware stack levels used:    1
  8075 ;; Hardware stack levels required when called:    2
  8076 ;; This function calls:
  8077 ;;		_lcdWriteChar
  8078 ;; This function is called by:
  8079 ;;		_main
  8080 ;; This function uses a non-reentrant model
  8081 ;;
  8082                           
  8083                           
  8084                           ;psect for function _lcdPrint
  8085  1000                     _lcdPrint:	
  8086                           
  8087                           ;./lcd.h: 109:     int i;;./lcd.h: 110:     for (i = 0; a[i] != '\0'; i++)
  8088                           
  8089                           ;incstack = 0
  8090                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8091  1000  01FA               	clrf	lcdPrint@i
  8092  1001  01FB               	clrf	lcdPrint@i+1
  8093  1002                     l2990:	
  8094  1002  087A               	movf	lcdPrint@i,w
  8095  1003  0775               	addwf	lcdPrint@a,w
  8096  1004  00F8               	movwf	??_lcdPrint+1
  8097  1005  0876               	movf	lcdPrint@a+1,w
  8098  1006  00F7               	movwf	??_lcdPrint
  8099  1007  1803               	skipnc
  8100  1008  0AF7               	incf	??_lcdPrint,f
  8101  1009  1BFA               	btfsc	lcdPrint@i,7
  8102  100A  03F7               	decf	??_lcdPrint,f
  8103  100B  0877               	movf	??_lcdPrint,w
  8104  100C  00F9               	movwf	??_lcdPrint+2
  8105  100D  0879               	movf	??_lcdPrint+2,w
  8106  100E  1283               	bcf	3,5	;RP0=0, select bank0
  8107  100F  1303               	bcf	3,6	;RP1=0, select bank0
  8108  1010  00FF               	movwf	127
  8109  1011  0878               	movf	??_lcdPrint+1,w
  8110  1012  0084               	movwf	4
  8111  1013  120A  118A  2003  160A  118A  	fcall	stringtab
  8112  1018  3A00               	xorlw	0
  8113  1019  1903               	btfsc	3,2
  8114  101A  0008               	return
  8115                           
  8116                           ;./lcd.h: 111:         lcdWriteChar(a[i]);
  8117  101B  087A               	movf	lcdPrint@i,w
  8118  101C  0775               	addwf	lcdPrint@a,w
  8119  101D  00F8               	movwf	??_lcdPrint+1
  8120  101E  0876               	movf	lcdPrint@a+1,w
  8121  101F  00F7               	movwf	??_lcdPrint
  8122  1020  1803               	skipnc
  8123  1021  0AF7               	incf	??_lcdPrint,f
  8124  1022  1BFA               	btfsc	lcdPrint@i,7
  8125  1023  03F7               	decf	??_lcdPrint,f
  8126  1024  0877               	movf	??_lcdPrint,w
  8127  1025  00F9               	movwf	??_lcdPrint+2
  8128  1026  0879               	movf	??_lcdPrint+2,w
  8129  1027  1283               	bcf	3,5	;RP0=0, select bank0
  8130  1028  1303               	bcf	3,6	;RP1=0, select bank0
  8131  1029  00FF               	movwf	127
  8132  102A  0878               	movf	??_lcdPrint+1,w
  8133  102B  0084               	movwf	4
  8134  102C  120A  118A  2003  160A  118A  	fcall	stringtab
  8135  1031  160A  158A  26FB  160A  118A  	fcall	_lcdWriteChar
  8136  1036  3001               	movlw	1
  8137  1037  07FA               	addwf	lcdPrint@i,f
  8138  1038  1803               	skipnc
  8139  1039  0AFB               	incf	lcdPrint@i+1,f
  8140  103A  3000               	movlw	0
  8141  103B  07FB               	addwf	lcdPrint@i+1,f
  8142  103C  2802               	goto	l2990
  8143  103D                     __end_of_lcdPrint:	
  8144                           
  8145                           	psect	text25
  8146  1EFB                     __ptext25:	
  8147 ;; *************** function _lcdWriteChar *****************
  8148 ;; Defined at:
  8149 ;;		line 93 in file "./lcd.h"
  8150 ;; Parameters:    Size  Location     Type
  8151 ;;  a               1    wreg     unsigned char 
  8152 ;; Auto vars:     Size  Location     Type
  8153 ;;  a               1    4[COMMON] unsigned char 
  8154 ;;  y               1    3[COMMON] unsigned char 
  8155 ;;  temp            1    2[COMMON] unsigned char 
  8156 ;; Return value:  Size  Location     Type
  8157 ;;                  1    wreg      void 
  8158 ;; Registers used:
  8159 ;;		wreg, status,2, status,0, pclath, cstack
  8160 ;; Tracked objects:
  8161 ;;		On entry : 0/0
  8162 ;;		On exit  : 0/0
  8163 ;;		Unchanged: 0/0
  8164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8165 ;;      Params:         0       0       0       0       0
  8166 ;;      Locals:         3       0       0       0       0
  8167 ;;      Temps:          1       0       0       0       0
  8168 ;;      Totals:         4       0       0       0       0
  8169 ;;Total ram usage:        4 bytes
  8170 ;; Hardware stack levels used:    1
  8171 ;; Hardware stack levels required when called:    1
  8172 ;; This function calls:
  8173 ;;		_lcdPort
  8174 ;; This function is called by:
  8175 ;;		_lcdPrint
  8176 ;; This function uses a non-reentrant model
  8177 ;;
  8178                           
  8179                           
  8180                           ;psect for function _lcdWriteChar
  8181  1EFB                     _lcdWriteChar:	
  8182                           
  8183                           ;incstack = 0
  8184                           ; Regs used in _lcdWriteChar: [wreg+status,2+status,0+pclath+cstack]
  8185                           ;lcdWriteChar@a stored from wreg
  8186  1EFB  00F4               	movwf	lcdWriteChar@a
  8187                           
  8188                           ;./lcd.h: 94:     char temp, y;;./lcd.h: 95:     temp = a & 0x0F;
  8189  1EFC  0874               	movf	lcdWriteChar@a,w
  8190  1EFD  390F               	andlw	15
  8191  1EFE  00F1               	movwf	??_lcdWriteChar
  8192  1EFF  0871               	movf	??_lcdWriteChar,w
  8193  1F00  00F2               	movwf	lcdWriteChar@temp
  8194                           
  8195                           ;./lcd.h: 96:     y = a & 0xF0;
  8196  1F01  0874               	movf	lcdWriteChar@a,w
  8197  1F02  39F0               	andlw	240
  8198  1F03  00F1               	movwf	??_lcdWriteChar
  8199  1F04  0871               	movf	??_lcdWriteChar,w
  8200  1F05  00F3               	movwf	lcdWriteChar@y
  8201                           
  8202                           ;./lcd.h: 97:     RD2 = 1;
  8203  1F06  1283               	bcf	3,5	;RP0=0, select bank0
  8204  1F07  1303               	bcf	3,6	;RP1=0, select bank0
  8205  1F08  1508               	bsf	8,2	;volatile
  8206                           
  8207                           ;./lcd.h: 98:     lcdPort(y >> 4);
  8208  1F09  0873               	movf	lcdWriteChar@y,w
  8209  1F0A  00F1               	movwf	??_lcdWriteChar
  8210  1F0B  3004               	movlw	4
  8211  1F0C                     u3995:	
  8212  1F0C  1003               	clrc
  8213  1F0D  0CF1               	rrf	??_lcdWriteChar,f
  8214  1F0E  3EFF               	addlw	-1
  8215  1F0F  1D03               	skipz
  8216  1F10  2F0C               	goto	u3995
  8217  1F11  0871               	movf	??_lcdWriteChar,w
  8218  1F12  160A  158A  262F  160A  158A  	fcall	_lcdPort
  8219                           
  8220                           ;./lcd.h: 99:     RD3 = 1;
  8221  1F17  1283               	bcf	3,5	;RP0=0, select bank0
  8222  1F18  1303               	bcf	3,6	;RP1=0, select bank0
  8223  1F19  1588               	bsf	8,3	;volatile
  8224                           
  8225                           ;./lcd.h: 100:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  8226  1F1A  300D               	movlw	13
  8227  1F1B  00F1               	movwf	??_lcdWriteChar
  8228  1F1C                     u5557:	
  8229  1F1C  0BF1               	decfsz	??_lcdWriteChar,f
  8230  1F1D  2F1C               	goto	u5557
  8231                           
  8232                           ;./lcd.h: 101:     RD3 = 0;
  8233  1F1E  1283               	bcf	3,5	;RP0=0, select bank0
  8234  1F1F  1303               	bcf	3,6	;RP1=0, select bank0
  8235  1F20  1188               	bcf	8,3	;volatile
  8236                           
  8237                           ;./lcd.h: 102:     lcdPort(temp);
  8238  1F21  0872               	movf	lcdWriteChar@temp,w
  8239  1F22  160A  158A  262F  160A  158A  	fcall	_lcdPort
  8240                           
  8241                           ;./lcd.h: 103:     RD3 = 1;
  8242  1F27  1283               	bcf	3,5	;RP0=0, select bank0
  8243  1F28  1303               	bcf	3,6	;RP1=0, select bank0
  8244  1F29  1588               	bsf	8,3	;volatile
  8245                           
  8246                           ;./lcd.h: 104:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  8247  1F2A  300D               	movlw	13
  8248  1F2B  00F1               	movwf	??_lcdWriteChar
  8249  1F2C                     u5567:	
  8250  1F2C  0BF1               	decfsz	??_lcdWriteChar,f
  8251  1F2D  2F2C               	goto	u5567
  8252                           
  8253                           ;./lcd.h: 105:     RD3 = 0;
  8254  1F2E  1283               	bcf	3,5	;RP0=0, select bank0
  8255  1F2F  1303               	bcf	3,6	;RP1=0, select bank0
  8256  1F30  1188               	bcf	8,3	;volatile
  8257  1F31  0008               	return
  8258  1F32                     __end_of_lcdWriteChar:	
  8259                           
  8260                           	psect	text26
  8261  1141                     __ptext26:	
  8262 ;; *************** function _lcdInit *****************
  8263 ;; Defined at:
  8264 ;;		line 73 in file "./lcd.h"
  8265 ;; Parameters:    Size  Location     Type
  8266 ;;		None
  8267 ;; Auto vars:     Size  Location     Type
  8268 ;;		None
  8269 ;; Return value:  Size  Location     Type
  8270 ;;                  1    wreg      void 
  8271 ;; Registers used:
  8272 ;;		wreg, status,2, status,0, pclath, cstack
  8273 ;; Tracked objects:
  8274 ;;		On entry : 0/0
  8275 ;;		On exit  : 0/0
  8276 ;;		Unchanged: 0/0
  8277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8278 ;;      Params:         0       0       0       0       0
  8279 ;;      Locals:         0       0       0       0       0
  8280 ;;      Temps:          2       0       0       0       0
  8281 ;;      Totals:         2       0       0       0       0
  8282 ;;Total ram usage:        2 bytes
  8283 ;; Hardware stack levels used:    1
  8284 ;; Hardware stack levels required when called:    2
  8285 ;; This function calls:
  8286 ;;		_lcdCmd
  8287 ;;		_lcdPort
  8288 ;; This function is called by:
  8289 ;;		_main
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292                           
  8293                           
  8294                           ;psect for function _lcdInit
  8295  1141                     _lcdInit:	
  8296                           
  8297                           ;./lcd.h: 74:     TRISD = 0;
  8298                           
  8299                           ;incstack = 0
  8300                           ; Regs used in _lcdInit: [wreg+status,2+status,0+pclath+cstack]
  8301  1141  1683               	bsf	3,5	;RP0=1, select bank1
  8302  1142  1303               	bcf	3,6	;RP1=0, select bank1
  8303  1143  0188               	clrf	8	;volatile
  8304                           
  8305                           ;./lcd.h: 75:     PORTD = 0;
  8306  1144  1283               	bcf	3,5	;RP0=0, select bank0
  8307  1145  1303               	bcf	3,6	;RP1=0, select bank0
  8308  1146  0188               	clrf	8	;volatile
  8309                           
  8310                           ;./lcd.h: 76:     lcdPort(0x00);
  8311  1147  3000               	movlw	0
  8312  1148  160A  158A  262F  160A  118A  	fcall	_lcdPort
  8313                           
  8314                           ;./lcd.h: 77:     _delay((unsigned long)((20)*(4000000/4000.0)));
  8315  114D  301A               	movlw	26
  8316  114E  00F5               	movwf	??_lcdInit+1
  8317  114F  30F8               	movlw	248
  8318  1150  00F4               	movwf	??_lcdInit
  8319  1151                     u5577:	
  8320  1151  0BF4               	decfsz	??_lcdInit,f
  8321  1152  2951               	goto	u5577
  8322  1153  0BF5               	decfsz	??_lcdInit+1,f
  8323  1154  2951               	goto	u5577
  8324  1155  0000               	nop
  8325                           
  8326                           ;./lcd.h: 78:     lcdCmd(0x03);
  8327  1156  3003               	movlw	3
  8328  1157  160A  158A  2649  160A  118A  	fcall	_lcdCmd
  8329                           
  8330                           ;./lcd.h: 79:     _delay((unsigned long)((5)*(4000000/4000.0)));
  8331  115C  3007               	movlw	7
  8332  115D  00F5               	movwf	??_lcdInit+1
  8333  115E  307D               	movlw	125
  8334  115F  00F4               	movwf	??_lcdInit
  8335  1160                     u5587:	
  8336  1160  0BF4               	decfsz	??_lcdInit,f
  8337  1161  2960               	goto	u5587
  8338  1162  0BF5               	decfsz	??_lcdInit+1,f
  8339  1163  2960               	goto	u5587
  8340                           
  8341                           ;./lcd.h: 80:     lcdCmd(0x03);
  8342  1164  3003               	movlw	3
  8343  1165  160A  158A  2649  160A  118A  	fcall	_lcdCmd
  8344                           
  8345                           ;./lcd.h: 81:     _delay((unsigned long)((11)*(4000000/4000.0)));
  8346  116A  300F               	movlw	15
  8347  116B  00F5               	movwf	??_lcdInit+1
  8348  116C  3047               	movlw	71
  8349  116D  00F4               	movwf	??_lcdInit
  8350  116E                     u5597:	
  8351  116E  0BF4               	decfsz	??_lcdInit,f
  8352  116F  296E               	goto	u5597
  8353  1170  0BF5               	decfsz	??_lcdInit+1,f
  8354  1171  296E               	goto	u5597
  8355  1172  2973               	nop2
  8356                           
  8357                           ;./lcd.h: 82:     lcdCmd(0x03);
  8358  1173  3003               	movlw	3
  8359  1174  160A  158A  2649  160A  118A  	fcall	_lcdCmd
  8360                           
  8361                           ;./lcd.h: 84:     lcdCmd(0x02);
  8362  1179  3002               	movlw	2
  8363  117A  160A  158A  2649  160A  118A  	fcall	_lcdCmd
  8364                           
  8365                           ;./lcd.h: 85:     lcdCmd(0x02);
  8366  117F  3002               	movlw	2
  8367  1180  160A  158A  2649  160A  118A  	fcall	_lcdCmd
  8368                           
  8369                           ;./lcd.h: 86:     lcdCmd(0x08);
  8370  1185  3008               	movlw	8
  8371  1186  160A  158A  2649  160A  118A  	fcall	_lcdCmd
  8372                           
  8373                           ;./lcd.h: 87:     lcdCmd(0x00);
  8374  118B  3000               	movlw	0
  8375  118C  160A  158A  2649  160A  118A  	fcall	_lcdCmd
  8376                           
  8377                           ;./lcd.h: 88:     lcdCmd(0x0C);
  8378  1191  300C               	movlw	12
  8379  1192  160A  158A  2649  160A  118A  	fcall	_lcdCmd
  8380                           
  8381                           ;./lcd.h: 89:     lcdCmd(0x00);
  8382  1197  3000               	movlw	0
  8383  1198  160A  158A  2649  160A  118A  	fcall	_lcdCmd
  8384                           
  8385                           ;./lcd.h: 90:     lcdCmd(0x06);
  8386  119D  3006               	movlw	6
  8387  119E  160A  158A  2649   	fcall	_lcdCmd
  8388  11A1  0008               	return
  8389  11A2                     __end_of_lcdInit:	
  8390                           
  8391                           	psect	text27
  8392  1E16                     __ptext27:	
  8393 ;; *************** function _lcdClear *****************
  8394 ;; Defined at:
  8395 ;;		line 51 in file "./lcd.h"
  8396 ;; Parameters:    Size  Location     Type
  8397 ;;		None
  8398 ;; Auto vars:     Size  Location     Type
  8399 ;;		None
  8400 ;; Return value:  Size  Location     Type
  8401 ;;                  1    wreg      void 
  8402 ;; Registers used:
  8403 ;;		wreg, status,2, status,0, pclath, cstack
  8404 ;; Tracked objects:
  8405 ;;		On entry : 0/0
  8406 ;;		On exit  : 0/0
  8407 ;;		Unchanged: 0/0
  8408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8409 ;;      Params:         0       0       0       0       0
  8410 ;;      Locals:         0       0       0       0       0
  8411 ;;      Temps:          0       0       0       0       0
  8412 ;;      Totals:         0       0       0       0       0
  8413 ;;Total ram usage:        0 bytes
  8414 ;; Hardware stack levels used:    1
  8415 ;; Hardware stack levels required when called:    2
  8416 ;; This function calls:
  8417 ;;		_lcdCmd
  8418 ;; This function is called by:
  8419 ;;		_main
  8420 ;; This function uses a non-reentrant model
  8421 ;;
  8422                           
  8423                           
  8424                           ;psect for function _lcdClear
  8425  1E16                     _lcdClear:	
  8426                           
  8427                           ;./lcd.h: 52:     lcdCmd(0);
  8428                           
  8429                           ;incstack = 0
  8430                           ; Regs used in _lcdClear: [wreg+status,2+status,0+pclath+cstack]
  8431  1E16  3000               	movlw	0
  8432  1E17  160A  158A  2649  160A  158A  	fcall	_lcdCmd
  8433                           
  8434                           ;./lcd.h: 53:     lcdCmd(1);
  8435  1E1C  3001               	movlw	1
  8436  1E1D  160A  158A  2649   	fcall	_lcdCmd
  8437  1E20  0008               	return
  8438  1E21                     __end_of_lcdClear:	
  8439                           
  8440                           	psect	text28
  8441  1E49                     __ptext28:	
  8442 ;; *************** function _lcdCmd *****************
  8443 ;; Defined at:
  8444 ;;		line 43 in file "./lcd.h"
  8445 ;; Parameters:    Size  Location     Type
  8446 ;;  a               1    wreg     unsigned char 
  8447 ;; Auto vars:     Size  Location     Type
  8448 ;;  a               1    3[COMMON] unsigned char 
  8449 ;; Return value:  Size  Location     Type
  8450 ;;                  1    wreg      void 
  8451 ;; Registers used:
  8452 ;;		wreg, status,2, status,0, pclath, cstack
  8453 ;; Tracked objects:
  8454 ;;		On entry : 0/0
  8455 ;;		On exit  : 0/0
  8456 ;;		Unchanged: 0/0
  8457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8458 ;;      Params:         0       0       0       0       0
  8459 ;;      Locals:         1       0       0       0       0
  8460 ;;      Temps:          2       0       0       0       0
  8461 ;;      Totals:         3       0       0       0       0
  8462 ;;Total ram usage:        3 bytes
  8463 ;; Hardware stack levels used:    1
  8464 ;; Hardware stack levels required when called:    1
  8465 ;; This function calls:
  8466 ;;		_lcdPort
  8467 ;; This function is called by:
  8468 ;;		_lcdClear
  8469 ;;		_lcdSetCursor
  8470 ;;		_lcdInit
  8471 ;; This function uses a non-reentrant model
  8472 ;;
  8473                           
  8474                           
  8475                           ;psect for function _lcdCmd
  8476  1E49                     _lcdCmd:	
  8477                           
  8478                           ;incstack = 0
  8479                           ; Regs used in _lcdCmd: [wreg+status,2+status,0+pclath+cstack]
  8480                           ;lcdCmd@a stored from wreg
  8481  1E49  00F3               	movwf	lcdCmd@a
  8482                           
  8483                           ;./lcd.h: 44:     RD2 = 0;
  8484  1E4A  1283               	bcf	3,5	;RP0=0, select bank0
  8485  1E4B  1303               	bcf	3,6	;RP1=0, select bank0
  8486  1E4C  1108               	bcf	8,2	;volatile
  8487                           
  8488                           ;./lcd.h: 45:     lcdPort(a);
  8489  1E4D  0873               	movf	lcdCmd@a,w
  8490  1E4E  160A  158A  262F  160A  158A  	fcall	_lcdPort
  8491                           
  8492                           ;./lcd.h: 46:     RD3 = 1;
  8493  1E53  1283               	bcf	3,5	;RP0=0, select bank0
  8494  1E54  1303               	bcf	3,6	;RP1=0, select bank0
  8495  1E55  1588               	bsf	8,3	;volatile
  8496                           
  8497                           ;./lcd.h: 47:     _delay((unsigned long)((4)*(4000000/4000.0)));
  8498  1E56  3006               	movlw	6
  8499  1E57  00F2               	movwf	??_lcdCmd+1
  8500  1E58  3030               	movlw	48
  8501  1E59  00F1               	movwf	??_lcdCmd
  8502  1E5A                     u5607:	
  8503  1E5A  0BF1               	decfsz	??_lcdCmd,f
  8504  1E5B  2E5A               	goto	u5607
  8505  1E5C  0BF2               	decfsz	??_lcdCmd+1,f
  8506  1E5D  2E5A               	goto	u5607
  8507  1E5E  0000               	nop
  8508                           
  8509                           ;./lcd.h: 48:     RD3 = 0;
  8510  1E5F  1283               	bcf	3,5	;RP0=0, select bank0
  8511  1E60  1303               	bcf	3,6	;RP1=0, select bank0
  8512  1E61  1188               	bcf	8,3	;volatile
  8513  1E62  0008               	return
  8514  1E63                     __end_of_lcdCmd:	
  8515                           
  8516                           	psect	text29
  8517  1E2F                     __ptext29:	
  8518 ;; *************** function _lcdPort *****************
  8519 ;; Defined at:
  8520 ;;		line 21 in file "./lcd.h"
  8521 ;; Parameters:    Size  Location     Type
  8522 ;;  a               1    wreg     unsigned char 
  8523 ;; Auto vars:     Size  Location     Type
  8524 ;;  a               1    0[COMMON] unsigned char 
  8525 ;; Return value:  Size  Location     Type
  8526 ;;                  1    wreg      void 
  8527 ;; Registers used:
  8528 ;;		wreg
  8529 ;; Tracked objects:
  8530 ;;		On entry : 0/0
  8531 ;;		On exit  : 0/0
  8532 ;;		Unchanged: 0/0
  8533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8534 ;;      Params:         0       0       0       0       0
  8535 ;;      Locals:         1       0       0       0       0
  8536 ;;      Temps:          0       0       0       0       0
  8537 ;;      Totals:         1       0       0       0       0
  8538 ;;Total ram usage:        1 bytes
  8539 ;; Hardware stack levels used:    1
  8540 ;; This function calls:
  8541 ;;		Nothing
  8542 ;; This function is called by:
  8543 ;;		_lcdCmd
  8544 ;;		_lcdInit
  8545 ;;		_lcdWriteChar
  8546 ;; This function uses a non-reentrant model
  8547 ;;
  8548                           
  8549                           
  8550                           ;psect for function _lcdPort
  8551  1E2F                     _lcdPort:	
  8552                           
  8553                           ;incstack = 0
  8554                           ; Regs used in _lcdPort: [wreg]
  8555                           ;lcdPort@a stored from wreg
  8556  1E2F  00F0               	movwf	lcdPort@a
  8557                           
  8558                           ;./lcd.h: 22:     if (a & 1)
  8559  1E30  1C70               	btfss	lcdPort@a,0
  8560  1E31  2E36               	goto	l23
  8561                           
  8562                           ;./lcd.h: 23:         RD4 = 1;
  8563  1E32  1283               	bcf	3,5	;RP0=0, select bank0
  8564  1E33  1303               	bcf	3,6	;RP1=0, select bank0
  8565  1E34  1608               	bsf	8,4	;volatile
  8566  1E35  2E39               	goto	l24
  8567  1E36                     l23:	
  8568                           ;./lcd.h: 24:     else
  8569                           
  8570                           
  8571                           ;./lcd.h: 25:         RD4 = 0;
  8572  1E36  1283               	bcf	3,5	;RP0=0, select bank0
  8573  1E37  1303               	bcf	3,6	;RP1=0, select bank0
  8574  1E38  1208               	bcf	8,4	;volatile
  8575  1E39                     l24:	
  8576                           
  8577                           ;./lcd.h: 27:     if (a & 2)
  8578  1E39  1CF0               	btfss	lcdPort@a,1
  8579  1E3A  2E3D               	goto	l25
  8580                           
  8581                           ;./lcd.h: 28:         RD5 = 1;
  8582  1E3B  1688               	bsf	8,5	;volatile
  8583  1E3C  2E3E               	goto	l26
  8584  1E3D                     l25:	
  8585                           ;./lcd.h: 29:     else
  8586                           
  8587                           
  8588                           ;./lcd.h: 30:         RD5 = 0;
  8589  1E3D  1288               	bcf	8,5	;volatile
  8590  1E3E                     l26:	
  8591                           
  8592                           ;./lcd.h: 32:     if (a & 4)
  8593  1E3E  1D70               	btfss	lcdPort@a,2
  8594  1E3F  2E42               	goto	l27
  8595                           
  8596                           ;./lcd.h: 33:         RD6 = 1;
  8597  1E40  1708               	bsf	8,6	;volatile
  8598  1E41  2E43               	goto	l28
  8599  1E42                     l27:	
  8600                           ;./lcd.h: 34:     else
  8601                           
  8602                           
  8603                           ;./lcd.h: 35:         RD6 = 0;
  8604  1E42  1308               	bcf	8,6	;volatile
  8605  1E43                     l28:	
  8606                           
  8607                           ;./lcd.h: 37:     if (a & 8)
  8608  1E43  1DF0               	btfss	lcdPort@a,3
  8609  1E44  2E47               	goto	l29
  8610                           
  8611                           ;./lcd.h: 38:         RD7 = 1;
  8612  1E45  1788               	bsf	8,7	;volatile
  8613  1E46  0008               	return
  8614  1E47                     l29:	
  8615                           ;./lcd.h: 39:     else
  8616                           
  8617                           
  8618                           ;./lcd.h: 40:         RD7 = 0;
  8619  1E47  1388               	bcf	8,7	;volatile
  8620  1E48  0008               	return
  8621  1E49                     __end_of_lcdPort:	
  8622  007E                     btemp	set	126	;btemp
  8623  007E                     wtemp0	set	126


Data Sizes:
    Strings     29
    Constant    144
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     76      76
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@entero(BANK1[16]), main@flotante(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    lcdPrint@a	PTR unsigned char  size(2) Largest target is 16
		 -> STR_3(CODE[3]), main@entero(BANK1[16]), main@flotante(BANK1[16]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___llmod->___lldiv
    ___flsub->___xxtofl
    _lcdSetCursor->_lcdCmd
    _lcdPrint->_lcdWriteChar
    _lcdWriteChar->_lcdPort
    _lcdInit->_lcdCmd
    _lcdClear->_lcdCmd
    _lcdCmd->_lcdPort

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0   32696
                                             35 BANK1     41    41      0
                           _lcdClear
                            _lcdInit
                           _lcdPrint
                       _lcdSetCursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   31106
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _lcdSetCursor                                         7     6      1     608
                                              4 COMMON     7     6      1
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             7     5      2     496
                                              5 COMMON     7     5      2
                       _lcdWriteChar
 ---------------------------------------------------------------------------------
 (2) _lcdWriteChar                                         4     4      0     178
                                              1 COMMON     4     4      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              2     2      0     198
                                              4 COMMON     2     2      0
                             _lcdCmd
                            _lcdPort
 ---------------------------------------------------------------------------------
 (1) _lcdClear                                             0     0      0     110
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (2) _lcdCmd                                               3     3      0     110
                                              1 COMMON     3     3      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (3) _lcdPort                                              1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcdClear
     _lcdCmd
       _lcdPort
   _lcdInit
     _lcdCmd
       _lcdPort
     _lcdPort
   _lcdPrint
     _lcdWriteChar
       _lcdPort
   _lcdSetCursor
     _lcdCmd
       _lcdPort
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     4C      4C       7       95.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 30 08:33:10 2019

                      pc 0002              __CFG_CP$OFF 0000                       l23 1E36  
                     l24 1E39                       l25 1E3D                       l26 1E3E  
                     l27 1E42                       l28 1E43                       l60 1214  
                     l29 1E47             ___awdiv@sign 0021                       fsr 0004  
    ___wmul@multiplicand 0072      __Umul8_16@word_mpld 0076                      l251 1E6D  
                    l219 04AB                      l191 0141                      l432 098A  
                    l442 12B4                      l620 17F5                      l612 17DD  
                    l437 1F88                      l445 131A                      l461 11F1  
                    l438 1FA2                      l712 134A                      l740 1EB8  
                    l725 13A0                      l582 16BC                      l726 13AA  
                    l718 138A                      l479 08E0                      l584 169A  
                    l578 1623                      l686 0CAA                      l599 1775  
                    _RD2 0042                      _RD3 0043                      _RD4 0044  
                    _RD5 0045                      _RD6 0046                      _RD7 0047  
           __CFG_CPD$OFF 0000                      fsr0 0004                      indf 0000  
           ___awmod@sign 0076             __CFG_FOSC$XT 0000             ___flmul@aexp 0036  
           ___flmul@bexp 0037              _sprintf$773 00AA             ___flmul@sign 0031  
           ___flmul@temp 003C             ___flmul@prod 0038           ??_lcdWriteChar 0071  
          lcdWriteChar@a 0074            lcdWriteChar@y 0073             __CFG_LVP$OFF 0000  
           ___fltol@exp1 005B                     l2120 10DE                     l2112 10CB  
                   l2104 10A7                     l3000 00F0                     l2202 1EEB  
                   l2106 10B5                     l2060 1EB0                     l2116 10D6  
                   l2132 1047                     l3100 0458                     l2230 15F9  
                   l2206 1EF6                     l2150 1070                     l3030 0175  
                   l3022 0143                     l3014 0103                     l2224 15EE  
                   l2144 1054                     l2136 104E                     l3112 0496  
                   l3040 01BB                     l3024 0165                     l3016 013D  
                   l2322 16EB                     l2314 16CA                     l2306 16B6  
                   l2146 1062                     l2154 107B                     l3202 077E  
                   l3130 0540                     l3106 045A                     l2324 16ED  
                   l2332 16FD                     l2252 161B                     l2228 15F1  
                   l2500 0BFC                     l2420 09C1                     l2180 1F5E  
                   l2172 1F3A                     l3124 052D                     l2350 1787  
                   l2342 1767                     l2502 0C19                     l2422 09C9  
                   l2174 1F48                     l2094 109F                     l2158 1083  
                   l3214 0795                     l2248 1618                     l2512 0C32  
                   l2440 09EE                     l2184 1F69                     l2088 1094  
                   l3144 0579                     l3136 055C                     l3080 036B  
                   l3072 0313                     l3064 029E                     l3056 0215  
                   l3216 00D0                     l2258 162D                     l2522 0C64  
                   l2418 09BF                     l2610 0E34                     l3218 07F7  
                   l2372 17A8                     l2364 179D                     l2532 0C93  
                   l2508 0C30                     l2436 09E4                     l2196 1ECF  
                   l2604 0DA9                     l3164 06E6                     l3084 0386  
                   l3068 02BF                     l2358 1796                     l2366 179F  
                   l2702 090C                     l2526 0C7A                     l2438 09E6  
                   l2198 1EDD                     l2622 0F4A                     l2614 0E5F  
                   l3182 0721                     l3158 06D5                     l3094 03D4  
                   l3166 06EB                     l2376 17AA                     l2296 16A5  
                   l2288 1669                     l2448 09FC                     l2640 1E2D  
                   l3176 0711                     l3280 0157                     l2394 17ED  
                   l2298 16A7                     l2650 0869                     l3194 075F  
                   l2804 12CE                     l2900 1359                     l2724 0962  
                   l2716 093A                     l2628 0FD5                     l3188 0723  
                   l2398 17F1                     l2750 1E65                     l2734 0976  
                   l2646 0860                     l2582 14E2                     l2808 12F4  
                   l2832 11B6                     l2904 135D                     l2744 0999  
                   l2736 0986                     l2672 08B9                     l2664 0899  
                   l2850 11ED                     l2770 1103                     l2914 139E  
                   l2906 136F                     l2682 08CC                     l2828 11AD  
                   l2916 138F                     l2692 08EF                     l2684 08DC  
                   l2588 158F                     l2782 1138                     l2870 081B  
                   l2944 1FDB                     l2848 11DD                     l2768 10F3  
                   l2928 13C7                     l2794 1FB4                     l2858 1200  
                   l2778 112B                     l2874 0839                     l2698 0903  
                   l2868 080B                     l2990 1002                     l2878 0846  
                   l2894 1342                     STR_1 00B0                     STR_2 00A3  
                   STR_3 00BD                     u3005 1071                     u3115 1ED2  
                   u3045 1F3D                     u3135 1EE3                     u4015 13F4  
                   u3401 1728                     u3305 16AB                     u3065 1F49  
                   u3145 1EEC                     u4025 144E                     u4105 0CE3  
                   u3410 173C                     u3402 1729                     u3411 173D  
                   u3403 172E                     u3075 1F55                     u4035 14A3  
                   u4115 0D1F                     u3412 1742                     u3404 172F  
                   u3260 1689                     u3413 1743                     u3405 1734  
                   u3085 1F5F                     u4205 0F0B                     u4125 0D6A  
                   u3406 1735                     u3270 168A                     u3255 167D  
                   u4055 1503                     u5025 13B2                     u4305 08AC  
                   u4065 1550                     u4225 0F62                     u4145 0DC1  
                   u4315 08BA                     u4075 159A                     u4235 0F9E  
                   u4155 0DFD                     u4245 0FD8                     u4165 0E37  
                   u3455 1789                     u5065 1FC2                     u3393 170F  
                   u3385 16F1                     u4425 093C                     u2905 10C2  
                   u4185 0E84                     u5225 02CA                     u3555 17C7  
                   u4515 098F                     u4435 0951                     u4355 08CD  
                   u2915 10CC                     u4195 0EC0                     u5235 031E  
                   u5085 1FE7                     u4701 12DF                     u4605 1105  
                   u4445 0964                     u5325 04B3                     u4702 12E0  
                   u4703 12E5                     u4615 111A                     u4295 089B  
                   u3815 0BA5                     u4704 12E6                     u4721 1305  
                   u4705 12EB                     u4625 112C                     u4545 1E6E  
                   u4385 08E5                     u2785 1EB9                     u3745 0AAC  
                   u5505 07AF                     u5345 0549                     u5265 0369  
                   u4722 1306                     u4706 12EC                     u4723 130B  
                   u4555 1E75                     u3835 0BCA                     u2875 10AA  
                   u5355 0556                     u4724 130C                     u4725 1311  
                   u4485 0977                     u5445 0726                     u5285 045D  
                   u4726 1312                     u5607 1E5A                     u3855 0BE8  
                   u3775 0B09                     u2895 10B6                     u2975 1057  
                   u5455 0755                     u5375 05F9                     u5295 048C  
                   u4665 1FB0                     u4825 11F6                     u4585 10F7  
                   u3865 0C00                     u5385 067F                     u5537 126F  
                   u3955 0C4F                     u2995 1068                     u5475 0766  
                   u5547 1293                     u5557 1F1C                     u4765 11BF  
                   u3965 0C6D                     u3885 0C0B                     u5485 0773  
                   u5567 1F2C                     u3975 0C85                     u5577 1151  
                   u4865 080F                     u4945 1366                     u5587 1160  
                   u3995 1F0C                     u4795 11DE                     u5597 116E  
                   u4885 0829                     u4965 1382                     u4895 083A  
                   u4985 1397             __CFG_WRT$OFF 0000                     _main 120F  
                   btemp 007E                     start 0000            ___fltol@sign1 005A  
        __end_of___fladd 1800                    ?_main 0070          __end_of___awdiv 10E3  
        __end_of___flneg 00C9            __CFG_WDTE$OFF 0000          __end_of___awmod 1088  
        __end_of___flmul 0CB7          __end_of___flsub 1EA6          __end_of___fltol 120F  
        __end_of___lldiv 1141          ___awdiv@divisor 0077          __end_of___llmod 084F  
        __end_of___lwdiv 1F6E             main@flotante 00C6          __end_of___lwmod 1EFB  
        ___awdiv@counter 0020                    _PORTD 0008                    _TRISD 0088  
        __end_of_lcdInit 11A2          __end_of_lcdPort 1E49          __end_of_dpowers 00A3  
                  _scale 0CB7          __end_of_isdigit 1E2F                    main@f 00E6  
         __CFG_BOREN$OFF 0000                    pclath 000A                    status 0003  
                  wtemp0 007E          __end_of_sprintf 07FC          __initialization 07FC  
           __end_of_main 129A                   ??_main 00C3     __end_of_lcdSetCursor 2000  
   __size_of__tdiv_to_l_ 00A9         ___llmod@dividend 0024                   ?_scale 003E  
       ___awdiv@dividend 0079         __end_of___xxtofl 13D0         __end_of_lcdClear 1E21  
         __CFG_PWRTE$OFF 0000         __end_of_lcdPrint 103D         __end_of__powers_ 0047  
                 ___flge 129A                   ___fleq 1F6E                ??___fladd 005A  
                 ___wmul 1E63                ??___awdiv 007B     __end_of_lcdWriteChar 1F32  
              ??___flneg 0074                ??___awmod 0074                ??___flmul 002C  
              ??___flsub 007E                ??___fltol 0055                ??___lldiv 0078  
                 _lcdCmd 1E49                ??___llmod 0028                ??___lwdiv 007A  
              ??___lwmod 0074                   _fround 13D0         ___awdiv@quotient 0022  
        ___awmod@divisor 0070                ??_lcdInit 0074          ___awmod@counter 0075  
              ??_lcdPort 0070                ??_isdigit 0070       __size_of__Umul8_16 0023  
              ??_sprintf 00A5               ___flge@ff1 0070               ___flge@ff2 0074  
           ___xxtofl@arg 007A             ___xxtofl@exp 0079             ___xxtofl@val 0070  
             ___fleq@ff1 0070               ___fleq@ff2 0074  __end_of__initialization 07FC  
             ___flneg@f1 0070               ___fltol@f1 0051           __pcstackCOMMON 0070  
          __end_of_scale 1000               __div_to_l_ 08F8         lcdWriteChar@temp 0072  
        __div_to_l_@exp1 0025          __div_to_l_@cntr 0024                  ??_scale 0042  
        __div_to_l_@quot 0020            __div_to_l_@f1 0070            __div_to_l_@f2 0074  
      __end_of__Umul8_16 1EC9               __pmaintext 120F                  ?___flge 0070  
                ?___fleq 0070                  ?___wmul 0070                  ?_lcdCmd 0070  
  __size_of_lcdSetCursor 004A                  ?_fround 003E                ?___xxtofl 0070  
              ?_lcdClear 0070                ?_lcdPrint 0075               __stringtab 0003  
  __size_of_lcdWriteChar 0037             _lcdSetCursor 1FB6        __end_of__npowers_ 007B  
        __size_of___flge 0093          __size_of___fleq 0048                  ___fladd 15D1  
                ___awdiv 1088                  ___flneg 00C0                  ___awmod 103D  
                ___flmul 09A2                  ___flsub 1E84                  ___fltol 11A2  
                ___lldiv 10E3          __size_of___wmul 0021                  ___llmod 0801  
                ___lwdiv 1F32               _fround$770 004D               _fround$771 0049  
                ___lwmod 1EC9          __size_of_lcdCmd 001A          __size_of_fround 0201  
                _lcdInit 1141                  __ptext1 00C9                  __ptext2 0CB7  
                __ptext3 103D                  __ptext4 1088                  __ptext5 1E21  
                __ptext6 13D0                  __ptext7 1EC9                  __ptext8 1F32  
                __ptext9 09A2                  _lcdPort 1E2F              ?__div_to_l_ 0070  
                _dpowers 007B                  _isdigit 1E21               ??___xxtofl 0074  
       ___awmod@dividend 0072                  lcdCmd@a 0073               ??_lcdClear 0074  
             ??_lcdPrint 0077                  _sprintf 00C9             _lcdWriteChar 1EFB  
   end_of_initialization 07FC          ___lldiv@divisor 0070          ___lldiv@counter 007D  
         __tdiv_to_l_@f1 0070           __tdiv_to_l_@f2 0074            ??__tdiv_to_l_ 0078  
            ___fladd@grs 0065            ___xxtofl@sign 0078              ___flmul@grs 0032  
             main@entero 00D6      __size_of__div_to_l_ 00AA           __end_of___flge 132D  
         __end_of___fleq 1FB6           __end_of___wmul 1E84           __end_of_lcdCmd 1E63  
         __end_of_fround 15D1      start_initialization 07FC      __end_of__tdiv_to_l_ 08F8  
        ___llmod@divisor 0020          ___llmod@counter 0029                 ??___flge 0078  
               ??___fleq 0078                 ??___wmul 0074                 ??_lcdCmd 0071  
              __Umul8_16 1EA6                 ??_fround 0042            sprintf@tmpval 00B3  
              ___fladd@a 0056                ___fladd@b 0052               fround@prec 0051  
              ___flmul@a 0028                ___flmul@b 0024                ___flsub@a 0066  
              ___flsub@b 006A                ___latbits 0002            __pcstackBANK0 0020  
          __pcstackBANK1 00A0        __size_of___xxtofl 00A3        __size_of_lcdClear 000B  
      __size_of_lcdPrint 003D              sprintf@flag 00AF              sprintf@eexp 00B1  
            sprintf@fval 00BE              sprintf@prec 00BC         ___lwdiv@dividend 0078  
               ?___fladd 0052                 ?___awdiv 0077                 ?___flneg 0070  
               ?___awmod 0070                 ?___flmul 0024                 ?___flsub 0066  
               ?___fltol 0051                 ?___lldiv 0070                 ?___llmod 0020  
              __npowers_ 0047               ?__Umul8_16 0070                 ?___lwdiv 0076  
               ?___lwmod 0070                __pstrings 0003                 ?_lcdInit 0070  
            __tdiv_to_l_ 084F                 ?_lcdPort 0070             ??__div_to_l_ 0078  
               ?_isdigit 0070                _scale$772 004C         ___lwdiv@quotient 007B  
               ?_sprintf 00A0           __size_of_scale 0349           ___wmul@product 0074  
     __end_of__div_to_l_ 09A2                lcdPrint@a 0075                lcdPrint@i 007A  
            __stringbase 0012        ___wmul@multiplier 0070         lcdSetCursor@temp 007A  
            ??__Umul8_16 0072         __size_of___fladd 022F         __size_of___awdiv 005B  
       __size_of___flneg 0009         __size_of___awmod 004B         __size_of___flmul 0315  
       __size_of___flsub 0022         __size_of___fltol 006D         __size_of___lldiv 005E  
       __size_of___llmod 004E         __size_of___lwdiv 003C         __size_of___lwmod 0032  
     __end_of__stringtab 0013              _isdigit$585 0070         __size_of_lcdInit 0061  
       __size_of_lcdPort 001A               sprintf@val 00B7                 ___xxtofl 132D  
       __size_of_isdigit 000E                 _lcdClear 1E16          ___lwdiv@divisor 0076  
        ___lwdiv@counter 007D                 __ptext10 1EA6                 __ptext11 084F  
               __ptext20 00C0                 __ptext12 08F8                 __ptext21 129A  
               __ptext13 132D                 __ptext22 1F6E                 __ptext14 1E63  
               __ptext23 1FB6                 __ptext15 0801                 __ptext24 1000  
               __ptext16 10E3                 __ptext25 1EFB                 __ptext17 11A2  
               __ptext26 1141                 __ptext18 1E84                 __ptext27 1E16  
               __ptext19 15D1                 __ptext28 1E49                 __ptext29 1E2F  
               _lcdPrint 1000                 __powers_ 0013         __size_of_sprintf 0733  
          lcdSetCursor@a 0077            lcdSetCursor@b 0074            lcdSetCursor@y 0079  
          lcdSetCursor@z 0078            __size_of_main 008B                 lcdPort@a 0070  
               isdigit@c 0071                 scale@scl 0050                sprintf@ap 00AE  
       __tdiv_to_l_@exp1 0025         __tdiv_to_l_@cntr 0024                sprintf@sp 00BB  
       __tdiv_to_l_@quot 0020         ___lwmod@dividend 0072         ___lldiv@dividend 0074  
          ?_lcdSetCursor 0074                stringcode 000D             ?__tdiv_to_l_ 0070  
 __Umul8_16@multiplicand 0070                 sprintf@c 00C2                 sprintf@f 00A0  
       ___lldiv@quotient 0079          ___lwmod@divisor 0070          ___lwmod@counter 0075  
               stringdir 000D                 stringtab 0003            ?_lcdWriteChar 0070  
          ___fladd@signs 0062             ___fladd@aexp 0063             ___fladd@bexp 0064  
   __Umul8_16@multiplier 0078           ??_lcdSetCursor 0075        __Umul8_16@product 0074  
